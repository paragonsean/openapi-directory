/*
 * LetMC Api V2, Basic (Tier 2)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-basic-tier
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DiaryAllocationModel;
import org.openapitools.client.model.DiaryAllocationModelResults;
import org.openapitools.client.model.DiaryAppointmentModel;
import org.openapitools.client.model.DiaryAppointmentModelResults;
import org.openapitools.client.model.DiaryAppointmentTypeModel;
import org.openapitools.client.model.DiaryAppointmentTypeModelResults;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DiaryControllerApi
 */
@Disabled
public class DiaryControllerApiTest {

    private final DiaryControllerApi api = new DiaryControllerApi();

    /**
     * Get a specific diary allocation given its unique Object ID (OID)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2Tier2ShortNameDiaryAllocationsDiaryAllocationIDGetTest() throws ApiException {
        String shortName = null;
        String diaryAllocationID = null;
        DiaryAllocationModel response = api.v2Tier2ShortNameDiaryAllocationsDiaryAllocationIDGet(shortName, diaryAllocationID);
        // TODO: test validations
    }

    /**
     * A collection of all diary allocations
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2Tier2ShortNameDiaryAllocationsGetTest() throws ApiException {
        String shortName = null;
        Integer offset = null;
        Integer count = null;
        DiaryAllocationModelResults response = api.v2Tier2ShortNameDiaryAllocationsGet(shortName, offset, count);
        // TODO: test validations
    }

    /**
     * Get a specific diary appointment given its unique Object ID (OID)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2Tier2ShortNameDiaryAppointmentsDiaryAppointmentIDGetTest() throws ApiException {
        String shortName = null;
        String diaryAppointmentID = null;
        DiaryAppointmentModel response = api.v2Tier2ShortNameDiaryAppointmentsDiaryAppointmentIDGet(shortName, diaryAppointmentID);
        // TODO: test validations
    }

    /**
     * A collection of all diary appointments
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2Tier2ShortNameDiaryAppointmentsGetTest() throws ApiException {
        String shortName = null;
        Integer offset = null;
        Integer count = null;
        DiaryAppointmentModelResults response = api.v2Tier2ShortNameDiaryAppointmentsGet(shortName, offset, count);
        // TODO: test validations
    }

    /**
     * Get a specific diary appointment type given its unique Object ID (OID)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2Tier2ShortNameDiaryAppointmenttypesDiaryAppointmentTypeIDGetTest() throws ApiException {
        String shortName = null;
        String diaryAppointmentTypeID = null;
        DiaryAppointmentTypeModel response = api.v2Tier2ShortNameDiaryAppointmenttypesDiaryAppointmentTypeIDGet(shortName, diaryAppointmentTypeID);
        // TODO: test validations
    }

    /**
     * A collection of all diary appointment types
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2Tier2ShortNameDiaryAppointmenttypesGetTest() throws ApiException {
        String shortName = null;
        Integer offset = null;
        Integer count = null;
        DiaryAppointmentTypeModelResults response = api.v2Tier2ShortNameDiaryAppointmenttypesGet(shortName, offset, count);
        // TODO: test validations
    }

}
