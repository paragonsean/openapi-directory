/*
 * LetMC Api V2, Basic (Tier 2)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-basic-tier
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.time.OffsetDateTime;
import org.openapitools.client.model.TenancyModel;
import org.openapitools.client.model.TenancyModelResults;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LettingsControllerApi
 */
@Disabled
public class LettingsControllerApiTest {

    private final LettingsControllerApi api = new LettingsControllerApi();

    /**
     * Search all properties available for rent given a range of search criteria.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void lettingsControllerGetAdvertisedTest() throws ApiException {
        String shortName = null;
        String branchID = null;
        Integer offset = null;
        Integer count = null;
        String areaID = null;
        Double rentMinimum = null;
        Double rentMaximum = null;
        Integer maximumTenants = null;
        Boolean wantSharedProperties = null;
        Boolean wantStudentProperties = null;
        TenancyModelResults response = api.lettingsControllerGetAdvertised(shortName, branchID, offset, count, areaID, rentMinimum, rentMaximum, maximumTenants, wantSharedProperties, wantStudentProperties);
        // TODO: test validations
    }

    /**
     * Search all properties available for rent given a range of search criteria and dates.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void lettingsControllerGetAdvertisedBetweenDatesTest() throws ApiException {
        String shortName = null;
        String branchID = null;
        Integer offset = null;
        Integer count = null;
        OffsetDateTime rangeStartDate = null;
        OffsetDateTime rangeEndDate = null;
        String areaID = null;
        Double rentMinimum = null;
        Double rentMaximum = null;
        Integer maximumTenants = null;
        Boolean wantSharedProperties = null;
        Boolean wantStudentProperties = null;
        TenancyModelResults response = api.lettingsControllerGetAdvertisedBetweenDates(shortName, branchID, offset, count, rangeStartDate, rangeEndDate, areaID, rentMinimum, rentMaximum, maximumTenants, wantSharedProperties, wantStudentProperties);
        // TODO: test validations
    }

    /**
     * Downloads the brochure relating to the latest advertised rental of a property
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void lettingsControllerGetTenancyBrochureTest() throws ApiException {
        String shortName = null;
        String tenancyID = null;
        Object response = api.lettingsControllerGetTenancyBrochure(shortName, tenancyID);
        // TODO: test validations
    }

    /**
     * A collection of all the company&#39;s tenancies
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2Tier2ShortNameLettingsTenanciesGetTest() throws ApiException {
        String shortName = null;
        Integer offset = null;
        Integer count = null;
        TenancyModelResults response = api.v2Tier2ShortNameLettingsTenanciesGet(shortName, offset, count);
        // TODO: test validations
    }

    /**
     * Get a specific tenancy given its unique Object ID (OID)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2Tier2ShortNameLettingsTenanciesTenancyIDGetTest() throws ApiException {
        String shortName = null;
        String tenancyID = null;
        TenancyModel response = api.v2Tier2ShortNameLettingsTenanciesTenancyIDGet(shortName, tenancyID);
        // TODO: test validations
    }

}
