# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BranchModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address1: str=None, address2: str=None, address3: str=None, address4: str=None, company_name: str=None, county: str=None, e_mail_address: str=None, e_tag: str=None, fax_phone: str=None, land_phone: str=None, name: str=None, oid: str=None, postcode: str=None, web_address: str=None):
        """BranchModel - a model defined in OpenAPI

        :param address1: The address1 of this BranchModel.
        :param address2: The address2 of this BranchModel.
        :param address3: The address3 of this BranchModel.
        :param address4: The address4 of this BranchModel.
        :param company_name: The company_name of this BranchModel.
        :param county: The county of this BranchModel.
        :param e_mail_address: The e_mail_address of this BranchModel.
        :param e_tag: The e_tag of this BranchModel.
        :param fax_phone: The fax_phone of this BranchModel.
        :param land_phone: The land_phone of this BranchModel.
        :param name: The name of this BranchModel.
        :param oid: The oid of this BranchModel.
        :param postcode: The postcode of this BranchModel.
        :param web_address: The web_address of this BranchModel.
        """
        self.openapi_types = {
            'address1': str,
            'address2': str,
            'address3': str,
            'address4': str,
            'company_name': str,
            'county': str,
            'e_mail_address': str,
            'e_tag': str,
            'fax_phone': str,
            'land_phone': str,
            'name': str,
            'oid': str,
            'postcode': str,
            'web_address': str
        }

        self.attribute_map = {
            'address1': 'Address1',
            'address2': 'Address2',
            'address3': 'Address3',
            'address4': 'Address4',
            'company_name': 'CompanyName',
            'county': 'County',
            'e_mail_address': 'EMailAddress',
            'e_tag': 'ETag',
            'fax_phone': 'FaxPhone',
            'land_phone': 'LandPhone',
            'name': 'Name',
            'oid': 'OID',
            'postcode': 'Postcode',
            'web_address': 'WebAddress'
        }

        self._address1 = address1
        self._address2 = address2
        self._address3 = address3
        self._address4 = address4
        self._company_name = company_name
        self._county = county
        self._e_mail_address = e_mail_address
        self._e_tag = e_tag
        self._fax_phone = fax_phone
        self._land_phone = land_phone
        self._name = name
        self._oid = oid
        self._postcode = postcode
        self._web_address = web_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BranchModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BranchModel of this BranchModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address1(self):
        """Gets the address1 of this BranchModel.

        Branch address line 1.

        :return: The address1 of this BranchModel.
        :rtype: str
        """
        return self._address1

    @address1.setter
    def address1(self, address1):
        """Sets the address1 of this BranchModel.

        Branch address line 1.

        :param address1: The address1 of this BranchModel.
        :type address1: str
        """

        self._address1 = address1

    @property
    def address2(self):
        """Gets the address2 of this BranchModel.

        Branch address line 2.

        :return: The address2 of this BranchModel.
        :rtype: str
        """
        return self._address2

    @address2.setter
    def address2(self, address2):
        """Sets the address2 of this BranchModel.

        Branch address line 2.

        :param address2: The address2 of this BranchModel.
        :type address2: str
        """

        self._address2 = address2

    @property
    def address3(self):
        """Gets the address3 of this BranchModel.

        Branch address line 3.

        :return: The address3 of this BranchModel.
        :rtype: str
        """
        return self._address3

    @address3.setter
    def address3(self, address3):
        """Sets the address3 of this BranchModel.

        Branch address line 3.

        :param address3: The address3 of this BranchModel.
        :type address3: str
        """

        self._address3 = address3

    @property
    def address4(self):
        """Gets the address4 of this BranchModel.

        Branch address line 4.

        :return: The address4 of this BranchModel.
        :rtype: str
        """
        return self._address4

    @address4.setter
    def address4(self, address4):
        """Sets the address4 of this BranchModel.

        Branch address line 4.

        :param address4: The address4 of this BranchModel.
        :type address4: str
        """

        self._address4 = address4

    @property
    def company_name(self):
        """Gets the company_name of this BranchModel.

        The relevant company name, if not the one specified on the branch then the one on company.

        :return: The company_name of this BranchModel.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this BranchModel.

        The relevant company name, if not the one specified on the branch then the one on company.

        :param company_name: The company_name of this BranchModel.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def county(self):
        """Gets the county of this BranchModel.

        County

        :return: The county of this BranchModel.
        :rtype: str
        """
        return self._county

    @county.setter
    def county(self, county):
        """Sets the county of this BranchModel.

        County

        :param county: The county of this BranchModel.
        :type county: str
        """

        self._county = county

    @property
    def e_mail_address(self):
        """Gets the e_mail_address of this BranchModel.

        Branch email address.

        :return: The e_mail_address of this BranchModel.
        :rtype: str
        """
        return self._e_mail_address

    @e_mail_address.setter
    def e_mail_address(self, e_mail_address):
        """Sets the e_mail_address of this BranchModel.

        Branch email address.

        :param e_mail_address: The e_mail_address of this BranchModel.
        :type e_mail_address: str
        """

        self._e_mail_address = e_mail_address

    @property
    def e_tag(self):
        """Gets the e_tag of this BranchModel.

        A unique identifier defining the object and change revision.

        :return: The e_tag of this BranchModel.
        :rtype: str
        """
        return self._e_tag

    @e_tag.setter
    def e_tag(self, e_tag):
        """Sets the e_tag of this BranchModel.

        A unique identifier defining the object and change revision.

        :param e_tag: The e_tag of this BranchModel.
        :type e_tag: str
        """

        self._e_tag = e_tag

    @property
    def fax_phone(self):
        """Gets the fax_phone of this BranchModel.

        Branch fax phone number.

        :return: The fax_phone of this BranchModel.
        :rtype: str
        """
        return self._fax_phone

    @fax_phone.setter
    def fax_phone(self, fax_phone):
        """Sets the fax_phone of this BranchModel.

        Branch fax phone number.

        :param fax_phone: The fax_phone of this BranchModel.
        :type fax_phone: str
        """

        self._fax_phone = fax_phone

    @property
    def land_phone(self):
        """Gets the land_phone of this BranchModel.

        Branch land phone number.

        :return: The land_phone of this BranchModel.
        :rtype: str
        """
        return self._land_phone

    @land_phone.setter
    def land_phone(self, land_phone):
        """Sets the land_phone of this BranchModel.

        Branch land phone number.

        :param land_phone: The land_phone of this BranchModel.
        :type land_phone: str
        """

        self._land_phone = land_phone

    @property
    def name(self):
        """Gets the name of this BranchModel.

        The branch name.

        :return: The name of this BranchModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BranchModel.

        The branch name.

        :param name: The name of this BranchModel.
        :type name: str
        """

        self._name = name

    @property
    def oid(self):
        """Gets the oid of this BranchModel.

        The unique Object ID (OID).

        :return: The oid of this BranchModel.
        :rtype: str
        """
        return self._oid

    @oid.setter
    def oid(self, oid):
        """Sets the oid of this BranchModel.

        The unique Object ID (OID).

        :param oid: The oid of this BranchModel.
        :type oid: str
        """

        self._oid = oid

    @property
    def postcode(self):
        """Gets the postcode of this BranchModel.

        Branch address postcode.

        :return: The postcode of this BranchModel.
        :rtype: str
        """
        return self._postcode

    @postcode.setter
    def postcode(self, postcode):
        """Sets the postcode of this BranchModel.

        Branch address postcode.

        :param postcode: The postcode of this BranchModel.
        :type postcode: str
        """

        self._postcode = postcode

    @property
    def web_address(self):
        """Gets the web_address of this BranchModel.

        Branch web address.

        :return: The web_address of this BranchModel.
        :rtype: str
        """
        return self._web_address

    @web_address.setter
    def web_address(self, web_address):
        """Sets the web_address of this BranchModel.

        Branch web address.

        :param web_address: The web_address of this BranchModel.
        :type web_address: str
        """

        self._web_address = web_address
