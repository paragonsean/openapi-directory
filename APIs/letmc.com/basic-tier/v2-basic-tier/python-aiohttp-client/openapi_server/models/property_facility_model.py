# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PropertyFacilityModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, e_tag: str=None, name: str=None, oid: str=None):
        """PropertyFacilityModel - a model defined in OpenAPI

        :param e_tag: The e_tag of this PropertyFacilityModel.
        :param name: The name of this PropertyFacilityModel.
        :param oid: The oid of this PropertyFacilityModel.
        """
        self.openapi_types = {
            'e_tag': str,
            'name': str,
            'oid': str
        }

        self.attribute_map = {
            'e_tag': 'ETag',
            'name': 'Name',
            'oid': 'OID'
        }

        self._e_tag = e_tag
        self._name = name
        self._oid = oid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PropertyFacilityModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PropertyFacilityModel of this PropertyFacilityModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def e_tag(self):
        """Gets the e_tag of this PropertyFacilityModel.

        A unique identifier defining the object and change revision.

        :return: The e_tag of this PropertyFacilityModel.
        :rtype: str
        """
        return self._e_tag

    @e_tag.setter
    def e_tag(self, e_tag):
        """Sets the e_tag of this PropertyFacilityModel.

        A unique identifier defining the object and change revision.

        :param e_tag: The e_tag of this PropertyFacilityModel.
        :type e_tag: str
        """

        self._e_tag = e_tag

    @property
    def name(self):
        """Gets the name of this PropertyFacilityModel.

        Display Name

        :return: The name of this PropertyFacilityModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PropertyFacilityModel.

        Display Name

        :param name: The name of this PropertyFacilityModel.
        :type name: str
        """

        self._name = name

    @property
    def oid(self):
        """Gets the oid of this PropertyFacilityModel.

        The unique Object ID (OID).

        :return: The oid of this PropertyFacilityModel.
        :rtype: str
        """
        return self._oid

    @oid.setter
    def oid(self, oid):
        """Sets the oid of this PropertyFacilityModel.

        The unique Object ID (OID).

        :param oid: The oid of this PropertyFacilityModel.
        :type oid: str
        """

        self._oid = oid
