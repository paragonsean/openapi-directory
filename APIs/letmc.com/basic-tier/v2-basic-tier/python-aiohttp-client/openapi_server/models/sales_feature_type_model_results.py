# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sales_feature_type_model import SalesFeatureTypeModel
from openapi_server import util


class SalesFeatureTypeModelResults(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, data: List[SalesFeatureTypeModel]=None):
        """SalesFeatureTypeModelResults - a model defined in OpenAPI

        :param count: The count of this SalesFeatureTypeModelResults.
        :param data: The data of this SalesFeatureTypeModelResults.
        """
        self.openapi_types = {
            'count': int,
            'data': List[SalesFeatureTypeModel]
        }

        self.attribute_map = {
            'count': 'Count',
            'data': 'Data'
        }

        self._count = count
        self._data = data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SalesFeatureTypeModelResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SalesFeatureTypeModelResults of this SalesFeatureTypeModelResults.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this SalesFeatureTypeModelResults.

        The total number of results available for all pages

        :return: The count of this SalesFeatureTypeModelResults.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this SalesFeatureTypeModelResults.

        The total number of results available for all pages

        :param count: The count of this SalesFeatureTypeModelResults.
        :type count: int
        """

        self._count = count

    @property
    def data(self):
        """Gets the data of this SalesFeatureTypeModelResults.

        The resulting data returned from the paged query range

        :return: The data of this SalesFeatureTypeModelResults.
        :rtype: List[SalesFeatureTypeModel]
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this SalesFeatureTypeModelResults.

        The resulting data returned from the paged query range

        :param data: The data of this SalesFeatureTypeModelResults.
        :type data: List[SalesFeatureTypeModel]
        """

        self._data = data
