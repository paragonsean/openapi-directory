# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AreaModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, branch: str=None, e_tag: str=None, name: str=None, oid: str=None, show_on_sites: bool=None):
        """AreaModel - a model defined in OpenAPI

        :param branch: The branch of this AreaModel.
        :param e_tag: The e_tag of this AreaModel.
        :param name: The name of this AreaModel.
        :param oid: The oid of this AreaModel.
        :param show_on_sites: The show_on_sites of this AreaModel.
        """
        self.openapi_types = {
            'branch': str,
            'e_tag': str,
            'name': str,
            'oid': str,
            'show_on_sites': bool
        }

        self.attribute_map = {
            'branch': 'Branch',
            'e_tag': 'ETag',
            'name': 'Name',
            'oid': 'OID',
            'show_on_sites': 'ShowOnSites'
        }

        self._branch = branch
        self._e_tag = e_tag
        self._name = name
        self._oid = oid
        self._show_on_sites = show_on_sites

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AreaModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AreaModel of this AreaModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def branch(self):
        """Gets the branch of this AreaModel.

        The branch that manages this area.

        :return: The branch of this AreaModel.
        :rtype: str
        """
        return self._branch

    @branch.setter
    def branch(self, branch):
        """Sets the branch of this AreaModel.

        The branch that manages this area.

        :param branch: The branch of this AreaModel.
        :type branch: str
        """

        self._branch = branch

    @property
    def e_tag(self):
        """Gets the e_tag of this AreaModel.

        A unique identifier defining the object and change revision.

        :return: The e_tag of this AreaModel.
        :rtype: str
        """
        return self._e_tag

    @e_tag.setter
    def e_tag(self, e_tag):
        """Sets the e_tag of this AreaModel.

        A unique identifier defining the object and change revision.

        :param e_tag: The e_tag of this AreaModel.
        :type e_tag: str
        """

        self._e_tag = e_tag

    @property
    def name(self):
        """Gets the name of this AreaModel.

        The property area name.

        :return: The name of this AreaModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AreaModel.

        The property area name.

        :param name: The name of this AreaModel.
        :type name: str
        """

        self._name = name

    @property
    def oid(self):
        """Gets the oid of this AreaModel.

        The unique Object ID (OID).

        :return: The oid of this AreaModel.
        :rtype: str
        """
        return self._oid

    @oid.setter
    def oid(self, oid):
        """Sets the oid of this AreaModel.

        The unique Object ID (OID).

        :param oid: The oid of this AreaModel.
        :type oid: str
        """

        self._oid = oid

    @property
    def show_on_sites(self):
        """Gets the show_on_sites of this AreaModel.

        Show the area on sites?

        :return: The show_on_sites of this AreaModel.
        :rtype: bool
        """
        return self._show_on_sites

    @show_on_sites.setter
    def show_on_sites(self, show_on_sites):
        """Sets the show_on_sites of this AreaModel.

        Show the area on sites?

        :param show_on_sites: The show_on_sites of this AreaModel.
        :type show_on_sites: bool
        """

        self._show_on_sites = show_on_sites
