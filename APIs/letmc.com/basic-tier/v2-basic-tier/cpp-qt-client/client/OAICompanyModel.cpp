/**
 * LetMC Api V2, Basic (Tier 2)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-basic-tier
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanyModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanyModel::OAICompanyModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanyModel::OAICompanyModel() {
    this->initializeModel();
}

OAICompanyModel::~OAICompanyModel() {}

void OAICompanyModel::initializeModel() {

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_company_registration_isSet = false;
    m_company_registration_isValid = false;

    m_e_tag_isSet = false;
    m_e_tag_isValid = false;

    m_marketing_company_name_isSet = false;
    m_marketing_company_name_isValid = false;

    m_oid_isSet = false;
    m_oid_isValid = false;

    m_short_name_isSet = false;
    m_short_name_isValid = false;
}

void OAICompanyModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanyModel::fromJsonObject(QJsonObject json) {

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("CompanyName")]);
    m_company_name_isSet = !json[QString("CompanyName")].isNull() && m_company_name_isValid;

    m_company_registration_isValid = ::OpenAPI::fromJsonValue(m_company_registration, json[QString("CompanyRegistration")]);
    m_company_registration_isSet = !json[QString("CompanyRegistration")].isNull() && m_company_registration_isValid;

    m_e_tag_isValid = ::OpenAPI::fromJsonValue(m_e_tag, json[QString("ETag")]);
    m_e_tag_isSet = !json[QString("ETag")].isNull() && m_e_tag_isValid;

    m_marketing_company_name_isValid = ::OpenAPI::fromJsonValue(m_marketing_company_name, json[QString("MarketingCompanyName")]);
    m_marketing_company_name_isSet = !json[QString("MarketingCompanyName")].isNull() && m_marketing_company_name_isValid;

    m_oid_isValid = ::OpenAPI::fromJsonValue(m_oid, json[QString("OID")]);
    m_oid_isSet = !json[QString("OID")].isNull() && m_oid_isValid;

    m_short_name_isValid = ::OpenAPI::fromJsonValue(m_short_name, json[QString("ShortName")]);
    m_short_name_isSet = !json[QString("ShortName")].isNull() && m_short_name_isValid;
}

QString OAICompanyModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanyModel::asJsonObject() const {
    QJsonObject obj;
    if (m_company_name_isSet) {
        obj.insert(QString("CompanyName"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_company_registration_isSet) {
        obj.insert(QString("CompanyRegistration"), ::OpenAPI::toJsonValue(m_company_registration));
    }
    if (m_e_tag_isSet) {
        obj.insert(QString("ETag"), ::OpenAPI::toJsonValue(m_e_tag));
    }
    if (m_marketing_company_name_isSet) {
        obj.insert(QString("MarketingCompanyName"), ::OpenAPI::toJsonValue(m_marketing_company_name));
    }
    if (m_oid_isSet) {
        obj.insert(QString("OID"), ::OpenAPI::toJsonValue(m_oid));
    }
    if (m_short_name_isSet) {
        obj.insert(QString("ShortName"), ::OpenAPI::toJsonValue(m_short_name));
    }
    return obj;
}

QString OAICompanyModel::getCompanyName() const {
    return m_company_name;
}
void OAICompanyModel::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAICompanyModel::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAICompanyModel::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QString OAICompanyModel::getCompanyRegistration() const {
    return m_company_registration;
}
void OAICompanyModel::setCompanyRegistration(const QString &company_registration) {
    m_company_registration = company_registration;
    m_company_registration_isSet = true;
}

bool OAICompanyModel::is_company_registration_Set() const{
    return m_company_registration_isSet;
}

bool OAICompanyModel::is_company_registration_Valid() const{
    return m_company_registration_isValid;
}

QString OAICompanyModel::getETag() const {
    return m_e_tag;
}
void OAICompanyModel::setETag(const QString &e_tag) {
    m_e_tag = e_tag;
    m_e_tag_isSet = true;
}

bool OAICompanyModel::is_e_tag_Set() const{
    return m_e_tag_isSet;
}

bool OAICompanyModel::is_e_tag_Valid() const{
    return m_e_tag_isValid;
}

QString OAICompanyModel::getMarketingCompanyName() const {
    return m_marketing_company_name;
}
void OAICompanyModel::setMarketingCompanyName(const QString &marketing_company_name) {
    m_marketing_company_name = marketing_company_name;
    m_marketing_company_name_isSet = true;
}

bool OAICompanyModel::is_marketing_company_name_Set() const{
    return m_marketing_company_name_isSet;
}

bool OAICompanyModel::is_marketing_company_name_Valid() const{
    return m_marketing_company_name_isValid;
}

QString OAICompanyModel::getOid() const {
    return m_oid;
}
void OAICompanyModel::setOid(const QString &oid) {
    m_oid = oid;
    m_oid_isSet = true;
}

bool OAICompanyModel::is_oid_Set() const{
    return m_oid_isSet;
}

bool OAICompanyModel::is_oid_Valid() const{
    return m_oid_isValid;
}

QString OAICompanyModel::getShortName() const {
    return m_short_name;
}
void OAICompanyModel::setShortName(const QString &short_name) {
    m_short_name = short_name;
    m_short_name_isSet = true;
}

bool OAICompanyModel::is_short_name_Set() const{
    return m_short_name_isSet;
}

bool OAICompanyModel::is_short_name_Valid() const{
    return m_short_name_isValid;
}

bool OAICompanyModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_registration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_tag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_marketing_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_oid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanyModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
