/**
 * LetMC Api V2, Basic (Tier 2)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-basic-tier
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAreaModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAreaModel::OAIAreaModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAreaModel::OAIAreaModel() {
    this->initializeModel();
}

OAIAreaModel::~OAIAreaModel() {}

void OAIAreaModel::initializeModel() {

    m_branch_isSet = false;
    m_branch_isValid = false;

    m_e_tag_isSet = false;
    m_e_tag_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_oid_isSet = false;
    m_oid_isValid = false;

    m_show_on_sites_isSet = false;
    m_show_on_sites_isValid = false;
}

void OAIAreaModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAreaModel::fromJsonObject(QJsonObject json) {

    m_branch_isValid = ::OpenAPI::fromJsonValue(m_branch, json[QString("Branch")]);
    m_branch_isSet = !json[QString("Branch")].isNull() && m_branch_isValid;

    m_e_tag_isValid = ::OpenAPI::fromJsonValue(m_e_tag, json[QString("ETag")]);
    m_e_tag_isSet = !json[QString("ETag")].isNull() && m_e_tag_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_oid_isValid = ::OpenAPI::fromJsonValue(m_oid, json[QString("OID")]);
    m_oid_isSet = !json[QString("OID")].isNull() && m_oid_isValid;

    m_show_on_sites_isValid = ::OpenAPI::fromJsonValue(m_show_on_sites, json[QString("ShowOnSites")]);
    m_show_on_sites_isSet = !json[QString("ShowOnSites")].isNull() && m_show_on_sites_isValid;
}

QString OAIAreaModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAreaModel::asJsonObject() const {
    QJsonObject obj;
    if (m_branch_isSet) {
        obj.insert(QString("Branch"), ::OpenAPI::toJsonValue(m_branch));
    }
    if (m_e_tag_isSet) {
        obj.insert(QString("ETag"), ::OpenAPI::toJsonValue(m_e_tag));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_oid_isSet) {
        obj.insert(QString("OID"), ::OpenAPI::toJsonValue(m_oid));
    }
    if (m_show_on_sites_isSet) {
        obj.insert(QString("ShowOnSites"), ::OpenAPI::toJsonValue(m_show_on_sites));
    }
    return obj;
}

QString OAIAreaModel::getBranch() const {
    return m_branch;
}
void OAIAreaModel::setBranch(const QString &branch) {
    m_branch = branch;
    m_branch_isSet = true;
}

bool OAIAreaModel::is_branch_Set() const{
    return m_branch_isSet;
}

bool OAIAreaModel::is_branch_Valid() const{
    return m_branch_isValid;
}

QString OAIAreaModel::getETag() const {
    return m_e_tag;
}
void OAIAreaModel::setETag(const QString &e_tag) {
    m_e_tag = e_tag;
    m_e_tag_isSet = true;
}

bool OAIAreaModel::is_e_tag_Set() const{
    return m_e_tag_isSet;
}

bool OAIAreaModel::is_e_tag_Valid() const{
    return m_e_tag_isValid;
}

QString OAIAreaModel::getName() const {
    return m_name;
}
void OAIAreaModel::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAreaModel::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAreaModel::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIAreaModel::getOid() const {
    return m_oid;
}
void OAIAreaModel::setOid(const QString &oid) {
    m_oid = oid;
    m_oid_isSet = true;
}

bool OAIAreaModel::is_oid_Set() const{
    return m_oid_isSet;
}

bool OAIAreaModel::is_oid_Valid() const{
    return m_oid_isValid;
}

bool OAIAreaModel::isShowOnSites() const {
    return m_show_on_sites;
}
void OAIAreaModel::setShowOnSites(const bool &show_on_sites) {
    m_show_on_sites = show_on_sites;
    m_show_on_sites_isSet = true;
}

bool OAIAreaModel::is_show_on_sites_Set() const{
    return m_show_on_sites_isSet;
}

bool OAIAreaModel::is_show_on_sites_Valid() const{
    return m_show_on_sites_isValid;
}

bool OAIAreaModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_branch_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_tag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_oid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_on_sites_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAreaModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
