/**
 * LetMC Api V2, Basic (Tier 2)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-basic-tier
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPropertyModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPropertyModel::OAIPropertyModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPropertyModel::OAIPropertyModel() {
    this->initializeModel();
}

OAIPropertyModel::~OAIPropertyModel() {}

void OAIPropertyModel::initializeModel() {

    m_area_isSet = false;
    m_area_isValid = false;

    m_branch_isSet = false;
    m_branch_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_e_tag_isSet = false;
    m_e_tag_isValid = false;

    m_full_address_isSet = false;
    m_full_address_isValid = false;

    m_global_reference_isSet = false;
    m_global_reference_isValid = false;

    m_main_photo_isSet = false;
    m_main_photo_isValid = false;

    m_managed_by_staff_isSet = false;
    m_managed_by_staff_isValid = false;

    m_oid_isSet = false;
    m_oid_isValid = false;

    m_property_source_isSet = false;
    m_property_source_isValid = false;

    m_property_type_isSet = false;
    m_property_type_isValid = false;

    m_room_name_isSet = false;
    m_room_name_isValid = false;

    m_video_url_isSet = false;
    m_video_url_isValid = false;
}

void OAIPropertyModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPropertyModel::fromJsonObject(QJsonObject json) {

    m_area_isValid = ::OpenAPI::fromJsonValue(m_area, json[QString("Area")]);
    m_area_isSet = !json[QString("Area")].isNull() && m_area_isValid;

    m_branch_isValid = ::OpenAPI::fromJsonValue(m_branch, json[QString("Branch")]);
    m_branch_isSet = !json[QString("Branch")].isNull() && m_branch_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_e_tag_isValid = ::OpenAPI::fromJsonValue(m_e_tag, json[QString("ETag")]);
    m_e_tag_isSet = !json[QString("ETag")].isNull() && m_e_tag_isValid;

    m_full_address_isValid = ::OpenAPI::fromJsonValue(m_full_address, json[QString("FullAddress")]);
    m_full_address_isSet = !json[QString("FullAddress")].isNull() && m_full_address_isValid;

    m_global_reference_isValid = ::OpenAPI::fromJsonValue(m_global_reference, json[QString("GlobalReference")]);
    m_global_reference_isSet = !json[QString("GlobalReference")].isNull() && m_global_reference_isValid;

    m_main_photo_isValid = ::OpenAPI::fromJsonValue(m_main_photo, json[QString("MainPhoto")]);
    m_main_photo_isSet = !json[QString("MainPhoto")].isNull() && m_main_photo_isValid;

    m_managed_by_staff_isValid = ::OpenAPI::fromJsonValue(m_managed_by_staff, json[QString("ManagedByStaff")]);
    m_managed_by_staff_isSet = !json[QString("ManagedByStaff")].isNull() && m_managed_by_staff_isValid;

    m_oid_isValid = ::OpenAPI::fromJsonValue(m_oid, json[QString("OID")]);
    m_oid_isSet = !json[QString("OID")].isNull() && m_oid_isValid;

    m_property_source_isValid = ::OpenAPI::fromJsonValue(m_property_source, json[QString("PropertySource")]);
    m_property_source_isSet = !json[QString("PropertySource")].isNull() && m_property_source_isValid;

    m_property_type_isValid = ::OpenAPI::fromJsonValue(m_property_type, json[QString("PropertyType")]);
    m_property_type_isSet = !json[QString("PropertyType")].isNull() && m_property_type_isValid;

    m_room_name_isValid = ::OpenAPI::fromJsonValue(m_room_name, json[QString("RoomName")]);
    m_room_name_isSet = !json[QString("RoomName")].isNull() && m_room_name_isValid;

    m_video_url_isValid = ::OpenAPI::fromJsonValue(m_video_url, json[QString("VideoURL")]);
    m_video_url_isSet = !json[QString("VideoURL")].isNull() && m_video_url_isValid;
}

QString OAIPropertyModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPropertyModel::asJsonObject() const {
    QJsonObject obj;
    if (m_area_isSet) {
        obj.insert(QString("Area"), ::OpenAPI::toJsonValue(m_area));
    }
    if (m_branch_isSet) {
        obj.insert(QString("Branch"), ::OpenAPI::toJsonValue(m_branch));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_e_tag_isSet) {
        obj.insert(QString("ETag"), ::OpenAPI::toJsonValue(m_e_tag));
    }
    if (m_full_address_isSet) {
        obj.insert(QString("FullAddress"), ::OpenAPI::toJsonValue(m_full_address));
    }
    if (m_global_reference_isSet) {
        obj.insert(QString("GlobalReference"), ::OpenAPI::toJsonValue(m_global_reference));
    }
    if (m_main_photo_isSet) {
        obj.insert(QString("MainPhoto"), ::OpenAPI::toJsonValue(m_main_photo));
    }
    if (m_managed_by_staff_isSet) {
        obj.insert(QString("ManagedByStaff"), ::OpenAPI::toJsonValue(m_managed_by_staff));
    }
    if (m_oid_isSet) {
        obj.insert(QString("OID"), ::OpenAPI::toJsonValue(m_oid));
    }
    if (m_property_source_isSet) {
        obj.insert(QString("PropertySource"), ::OpenAPI::toJsonValue(m_property_source));
    }
    if (m_property_type_isSet) {
        obj.insert(QString("PropertyType"), ::OpenAPI::toJsonValue(m_property_type));
    }
    if (m_room_name_isSet) {
        obj.insert(QString("RoomName"), ::OpenAPI::toJsonValue(m_room_name));
    }
    if (m_video_url_isSet) {
        obj.insert(QString("VideoURL"), ::OpenAPI::toJsonValue(m_video_url));
    }
    return obj;
}

QString OAIPropertyModel::getArea() const {
    return m_area;
}
void OAIPropertyModel::setArea(const QString &area) {
    m_area = area;
    m_area_isSet = true;
}

bool OAIPropertyModel::is_area_Set() const{
    return m_area_isSet;
}

bool OAIPropertyModel::is_area_Valid() const{
    return m_area_isValid;
}

QString OAIPropertyModel::getBranch() const {
    return m_branch;
}
void OAIPropertyModel::setBranch(const QString &branch) {
    m_branch = branch;
    m_branch_isSet = true;
}

bool OAIPropertyModel::is_branch_Set() const{
    return m_branch_isSet;
}

bool OAIPropertyModel::is_branch_Valid() const{
    return m_branch_isValid;
}

QString OAIPropertyModel::getDescription() const {
    return m_description;
}
void OAIPropertyModel::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIPropertyModel::is_description_Set() const{
    return m_description_isSet;
}

bool OAIPropertyModel::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIPropertyModel::getETag() const {
    return m_e_tag;
}
void OAIPropertyModel::setETag(const QString &e_tag) {
    m_e_tag = e_tag;
    m_e_tag_isSet = true;
}

bool OAIPropertyModel::is_e_tag_Set() const{
    return m_e_tag_isSet;
}

bool OAIPropertyModel::is_e_tag_Valid() const{
    return m_e_tag_isValid;
}

QString OAIPropertyModel::getFullAddress() const {
    return m_full_address;
}
void OAIPropertyModel::setFullAddress(const QString &full_address) {
    m_full_address = full_address;
    m_full_address_isSet = true;
}

bool OAIPropertyModel::is_full_address_Set() const{
    return m_full_address_isSet;
}

bool OAIPropertyModel::is_full_address_Valid() const{
    return m_full_address_isValid;
}

QString OAIPropertyModel::getGlobalReference() const {
    return m_global_reference;
}
void OAIPropertyModel::setGlobalReference(const QString &global_reference) {
    m_global_reference = global_reference;
    m_global_reference_isSet = true;
}

bool OAIPropertyModel::is_global_reference_Set() const{
    return m_global_reference_isSet;
}

bool OAIPropertyModel::is_global_reference_Valid() const{
    return m_global_reference_isValid;
}

QString OAIPropertyModel::getMainPhoto() const {
    return m_main_photo;
}
void OAIPropertyModel::setMainPhoto(const QString &main_photo) {
    m_main_photo = main_photo;
    m_main_photo_isSet = true;
}

bool OAIPropertyModel::is_main_photo_Set() const{
    return m_main_photo_isSet;
}

bool OAIPropertyModel::is_main_photo_Valid() const{
    return m_main_photo_isValid;
}

QString OAIPropertyModel::getManagedByStaff() const {
    return m_managed_by_staff;
}
void OAIPropertyModel::setManagedByStaff(const QString &managed_by_staff) {
    m_managed_by_staff = managed_by_staff;
    m_managed_by_staff_isSet = true;
}

bool OAIPropertyModel::is_managed_by_staff_Set() const{
    return m_managed_by_staff_isSet;
}

bool OAIPropertyModel::is_managed_by_staff_Valid() const{
    return m_managed_by_staff_isValid;
}

QString OAIPropertyModel::getOid() const {
    return m_oid;
}
void OAIPropertyModel::setOid(const QString &oid) {
    m_oid = oid;
    m_oid_isSet = true;
}

bool OAIPropertyModel::is_oid_Set() const{
    return m_oid_isSet;
}

bool OAIPropertyModel::is_oid_Valid() const{
    return m_oid_isValid;
}

QString OAIPropertyModel::getPropertySource() const {
    return m_property_source;
}
void OAIPropertyModel::setPropertySource(const QString &property_source) {
    m_property_source = property_source;
    m_property_source_isSet = true;
}

bool OAIPropertyModel::is_property_source_Set() const{
    return m_property_source_isSet;
}

bool OAIPropertyModel::is_property_source_Valid() const{
    return m_property_source_isValid;
}

QString OAIPropertyModel::getPropertyType() const {
    return m_property_type;
}
void OAIPropertyModel::setPropertyType(const QString &property_type) {
    m_property_type = property_type;
    m_property_type_isSet = true;
}

bool OAIPropertyModel::is_property_type_Set() const{
    return m_property_type_isSet;
}

bool OAIPropertyModel::is_property_type_Valid() const{
    return m_property_type_isValid;
}

QString OAIPropertyModel::getRoomName() const {
    return m_room_name;
}
void OAIPropertyModel::setRoomName(const QString &room_name) {
    m_room_name = room_name;
    m_room_name_isSet = true;
}

bool OAIPropertyModel::is_room_name_Set() const{
    return m_room_name_isSet;
}

bool OAIPropertyModel::is_room_name_Valid() const{
    return m_room_name_isValid;
}

QString OAIPropertyModel::getVideoUrl() const {
    return m_video_url;
}
void OAIPropertyModel::setVideoUrl(const QString &video_url) {
    m_video_url = video_url;
    m_video_url_isSet = true;
}

bool OAIPropertyModel::is_video_url_Set() const{
    return m_video_url_isSet;
}

bool OAIPropertyModel::is_video_url_Valid() const{
    return m_video_url_isValid;
}

bool OAIPropertyModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_area_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_branch_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_tag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_global_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_main_photo_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_managed_by_staff_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_oid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_property_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_property_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_room_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPropertyModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
