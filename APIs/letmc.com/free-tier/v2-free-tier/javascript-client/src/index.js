/**
 * LetMC Api V2, Free (Tier 1)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-free-tier
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ApplicationStaffModel from './model/ApplicationStaffModel';
import ApplicationStaffModelResults from './model/ApplicationStaffModelResults';
import AreaModel from './model/AreaModel';
import AreaModelResults from './model/AreaModelResults';
import BranchModel from './model/BranchModel';
import BranchModelResults from './model/BranchModelResults';
import CompanyModel from './model/CompanyModel';
import CountyModel from './model/CountyModel';
import CountyModelResults from './model/CountyModelResults';
import DiaryAllocationModel from './model/DiaryAllocationModel';
import DiaryAllocationModelResults from './model/DiaryAllocationModelResults';
import DiaryAppointmentModel from './model/DiaryAppointmentModel';
import DiaryAppointmentModelResults from './model/DiaryAppointmentModelResults';
import DiaryAppointmentTypeModel from './model/DiaryAppointmentTypeModel';
import DiaryAppointmentTypeModelResults from './model/DiaryAppointmentTypeModelResults';
import PhotoModel from './model/PhotoModel';
import PhotoModelResults from './model/PhotoModelResults';
import PropertyFacilityModel from './model/PropertyFacilityModel';
import PropertyFacilityModelResults from './model/PropertyFacilityModelResults';
import PropertyModel from './model/PropertyModel';
import PropertyModelResults from './model/PropertyModelResults';
import PropertyRoomModel from './model/PropertyRoomModel';
import PropertyRoomModelResults from './model/PropertyRoomModelResults';
import SalesFeatureModel from './model/SalesFeatureModel';
import SalesFeatureModelResults from './model/SalesFeatureModelResults';
import SalesFeatureTypeModel from './model/SalesFeatureTypeModel';
import SalesFeatureTypeModelResults from './model/SalesFeatureTypeModelResults';
import SalesInstructionModel from './model/SalesInstructionModel';
import SalesInstructionModelResults from './model/SalesInstructionModelResults';
import TenancyModel from './model/TenancyModel';
import TenancyModelResults from './model/TenancyModelResults';
import AreaControllerApi from './api/AreaControllerApi';
import BranchControllerApi from './api/BranchControllerApi';
import CompanyControllerApi from './api/CompanyControllerApi';
import CountyControllerApi from './api/CountyControllerApi';
import DiaryControllerApi from './api/DiaryControllerApi';
import LettingsControllerApi from './api/LettingsControllerApi';
import PhotoControllerApi from './api/PhotoControllerApi';
import PropertyControllerApi from './api/PropertyControllerApi';
import SalesControllerApi from './api/SalesControllerApi';
import StaffControllerApi from './api/StaffControllerApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var LetMcApiV2FreeTier1 = require('index'); // See note below*.
* var xxxSvc = new LetMcApiV2FreeTier1.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new LetMcApiV2FreeTier1.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new LetMcApiV2FreeTier1.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new LetMcApiV2FreeTier1.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v2-free-tier
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ApplicationStaffModel model constructor.
     * @property {module:model/ApplicationStaffModel}
     */
    ApplicationStaffModel,

    /**
     * The ApplicationStaffModelResults model constructor.
     * @property {module:model/ApplicationStaffModelResults}
     */
    ApplicationStaffModelResults,

    /**
     * The AreaModel model constructor.
     * @property {module:model/AreaModel}
     */
    AreaModel,

    /**
     * The AreaModelResults model constructor.
     * @property {module:model/AreaModelResults}
     */
    AreaModelResults,

    /**
     * The BranchModel model constructor.
     * @property {module:model/BranchModel}
     */
    BranchModel,

    /**
     * The BranchModelResults model constructor.
     * @property {module:model/BranchModelResults}
     */
    BranchModelResults,

    /**
     * The CompanyModel model constructor.
     * @property {module:model/CompanyModel}
     */
    CompanyModel,

    /**
     * The CountyModel model constructor.
     * @property {module:model/CountyModel}
     */
    CountyModel,

    /**
     * The CountyModelResults model constructor.
     * @property {module:model/CountyModelResults}
     */
    CountyModelResults,

    /**
     * The DiaryAllocationModel model constructor.
     * @property {module:model/DiaryAllocationModel}
     */
    DiaryAllocationModel,

    /**
     * The DiaryAllocationModelResults model constructor.
     * @property {module:model/DiaryAllocationModelResults}
     */
    DiaryAllocationModelResults,

    /**
     * The DiaryAppointmentModel model constructor.
     * @property {module:model/DiaryAppointmentModel}
     */
    DiaryAppointmentModel,

    /**
     * The DiaryAppointmentModelResults model constructor.
     * @property {module:model/DiaryAppointmentModelResults}
     */
    DiaryAppointmentModelResults,

    /**
     * The DiaryAppointmentTypeModel model constructor.
     * @property {module:model/DiaryAppointmentTypeModel}
     */
    DiaryAppointmentTypeModel,

    /**
     * The DiaryAppointmentTypeModelResults model constructor.
     * @property {module:model/DiaryAppointmentTypeModelResults}
     */
    DiaryAppointmentTypeModelResults,

    /**
     * The PhotoModel model constructor.
     * @property {module:model/PhotoModel}
     */
    PhotoModel,

    /**
     * The PhotoModelResults model constructor.
     * @property {module:model/PhotoModelResults}
     */
    PhotoModelResults,

    /**
     * The PropertyFacilityModel model constructor.
     * @property {module:model/PropertyFacilityModel}
     */
    PropertyFacilityModel,

    /**
     * The PropertyFacilityModelResults model constructor.
     * @property {module:model/PropertyFacilityModelResults}
     */
    PropertyFacilityModelResults,

    /**
     * The PropertyModel model constructor.
     * @property {module:model/PropertyModel}
     */
    PropertyModel,

    /**
     * The PropertyModelResults model constructor.
     * @property {module:model/PropertyModelResults}
     */
    PropertyModelResults,

    /**
     * The PropertyRoomModel model constructor.
     * @property {module:model/PropertyRoomModel}
     */
    PropertyRoomModel,

    /**
     * The PropertyRoomModelResults model constructor.
     * @property {module:model/PropertyRoomModelResults}
     */
    PropertyRoomModelResults,

    /**
     * The SalesFeatureModel model constructor.
     * @property {module:model/SalesFeatureModel}
     */
    SalesFeatureModel,

    /**
     * The SalesFeatureModelResults model constructor.
     * @property {module:model/SalesFeatureModelResults}
     */
    SalesFeatureModelResults,

    /**
     * The SalesFeatureTypeModel model constructor.
     * @property {module:model/SalesFeatureTypeModel}
     */
    SalesFeatureTypeModel,

    /**
     * The SalesFeatureTypeModelResults model constructor.
     * @property {module:model/SalesFeatureTypeModelResults}
     */
    SalesFeatureTypeModelResults,

    /**
     * The SalesInstructionModel model constructor.
     * @property {module:model/SalesInstructionModel}
     */
    SalesInstructionModel,

    /**
     * The SalesInstructionModelResults model constructor.
     * @property {module:model/SalesInstructionModelResults}
     */
    SalesInstructionModelResults,

    /**
     * The TenancyModel model constructor.
     * @property {module:model/TenancyModel}
     */
    TenancyModel,

    /**
     * The TenancyModelResults model constructor.
     * @property {module:model/TenancyModelResults}
     */
    TenancyModelResults,

    /**
    * The AreaControllerApi service constructor.
    * @property {module:api/AreaControllerApi}
    */
    AreaControllerApi,

    /**
    * The BranchControllerApi service constructor.
    * @property {module:api/BranchControllerApi}
    */
    BranchControllerApi,

    /**
    * The CompanyControllerApi service constructor.
    * @property {module:api/CompanyControllerApi}
    */
    CompanyControllerApi,

    /**
    * The CountyControllerApi service constructor.
    * @property {module:api/CountyControllerApi}
    */
    CountyControllerApi,

    /**
    * The DiaryControllerApi service constructor.
    * @property {module:api/DiaryControllerApi}
    */
    DiaryControllerApi,

    /**
    * The LettingsControllerApi service constructor.
    * @property {module:api/LettingsControllerApi}
    */
    LettingsControllerApi,

    /**
    * The PhotoControllerApi service constructor.
    * @property {module:api/PhotoControllerApi}
    */
    PhotoControllerApi,

    /**
    * The PropertyControllerApi service constructor.
    * @property {module:api/PropertyControllerApi}
    */
    PropertyControllerApi,

    /**
    * The SalesControllerApi service constructor.
    * @property {module:api/SalesControllerApi}
    */
    SalesControllerApi,

    /**
    * The StaffControllerApi service constructor.
    * @property {module:api/StaffControllerApi}
    */
    StaffControllerApi
};
