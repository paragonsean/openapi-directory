/**
 * LetMC Api V2, Free (Tier 1)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-free-tier
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SalesInstructionModel model module.
 * @module model/SalesInstructionModel
 * @version v2-free-tier
 */
class SalesInstructionModel {
    /**
     * Constructs a new <code>SalesInstructionModel</code>.
     * 
     * @alias module:model/SalesInstructionModel
     */
    constructor() { 
        
        SalesInstructionModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SalesInstructionModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SalesInstructionModel} obj Optional instance to populate.
     * @return {module:model/SalesInstructionModel} The populated <code>SalesInstructionModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SalesInstructionModel();

            if (data.hasOwnProperty('Address1')) {
                obj['Address1'] = ApiClient.convertToType(data['Address1'], 'String');
            }
            if (data.hasOwnProperty('Address2')) {
                obj['Address2'] = ApiClient.convertToType(data['Address2'], 'String');
            }
            if (data.hasOwnProperty('Address3')) {
                obj['Address3'] = ApiClient.convertToType(data['Address3'], 'String');
            }
            if (data.hasOwnProperty('Address4')) {
                obj['Address4'] = ApiClient.convertToType(data['Address4'], 'String');
            }
            if (data.hasOwnProperty('AddressNumber')) {
                obj['AddressNumber'] = ApiClient.convertToType(data['AddressNumber'], 'String');
            }
            if (data.hasOwnProperty('Area')) {
                obj['Area'] = ApiClient.convertToType(data['Area'], 'String');
            }
            if (data.hasOwnProperty('Bathrooms')) {
                obj['Bathrooms'] = ApiClient.convertToType(data['Bathrooms'], 'Number');
            }
            if (data.hasOwnProperty('BathroomsEnsuite')) {
                obj['BathroomsEnsuite'] = ApiClient.convertToType(data['BathroomsEnsuite'], 'Number');
            }
            if (data.hasOwnProperty('Bedrooms')) {
                obj['Bedrooms'] = ApiClient.convertToType(data['Bedrooms'], 'Number');
            }
            if (data.hasOwnProperty('ContractType')) {
                obj['ContractType'] = ApiClient.convertToType(data['ContractType'], 'String');
            }
            if (data.hasOwnProperty('Country')) {
                obj['Country'] = ApiClient.convertToType(data['Country'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('DevelopmentOpp')) {
                obj['DevelopmentOpp'] = ApiClient.convertToType(data['DevelopmentOpp'], 'Boolean');
            }
            if (data.hasOwnProperty('Directions')) {
                obj['Directions'] = ApiClient.convertToType(data['Directions'], 'String');
            }
            if (data.hasOwnProperty('EPCCurrentEER')) {
                obj['EPCCurrentEER'] = ApiClient.convertToType(data['EPCCurrentEER'], 'Number');
            }
            if (data.hasOwnProperty('EPCCurrentEI')) {
                obj['EPCCurrentEI'] = ApiClient.convertToType(data['EPCCurrentEI'], 'Number');
            }
            if (data.hasOwnProperty('EPCPotentialEER')) {
                obj['EPCPotentialEER'] = ApiClient.convertToType(data['EPCPotentialEER'], 'Number');
            }
            if (data.hasOwnProperty('EPCPotentialEI')) {
                obj['EPCPotentialEI'] = ApiClient.convertToType(data['EPCPotentialEI'], 'Number');
            }
            if (data.hasOwnProperty('ETag')) {
                obj['ETag'] = ApiClient.convertToType(data['ETag'], 'String');
            }
            if (data.hasOwnProperty('HasElectricitySupply')) {
                obj['HasElectricitySupply'] = ApiClient.convertToType(data['HasElectricitySupply'], 'Boolean');
            }
            if (data.hasOwnProperty('HasGasSupply')) {
                obj['HasGasSupply'] = ApiClient.convertToType(data['HasGasSupply'], 'Boolean');
            }
            if (data.hasOwnProperty('HasWaterMeter')) {
                obj['HasWaterMeter'] = ApiClient.convertToType(data['HasWaterMeter'], 'Boolean');
            }
            if (data.hasOwnProperty('InvestmentOpp')) {
                obj['InvestmentOpp'] = ApiClient.convertToType(data['InvestmentOpp'], 'Boolean');
            }
            if (data.hasOwnProperty('Kitchens')) {
                obj['Kitchens'] = ApiClient.convertToType(data['Kitchens'], 'Number');
            }
            if (data.hasOwnProperty('OID')) {
                obj['OID'] = ApiClient.convertToType(data['OID'], 'String');
            }
            if (data.hasOwnProperty('OutsideSpaceBalcony')) {
                obj['OutsideSpaceBalcony'] = ApiClient.convertToType(data['OutsideSpaceBalcony'], 'Boolean');
            }
            if (data.hasOwnProperty('OutsideSpaceCommunalGarden')) {
                obj['OutsideSpaceCommunalGarden'] = ApiClient.convertToType(data['OutsideSpaceCommunalGarden'], 'Boolean');
            }
            if (data.hasOwnProperty('OutsideSpaceConservatory')) {
                obj['OutsideSpaceConservatory'] = ApiClient.convertToType(data['OutsideSpaceConservatory'], 'Boolean');
            }
            if (data.hasOwnProperty('OutsideSpaceGarden')) {
                obj['OutsideSpaceGarden'] = ApiClient.convertToType(data['OutsideSpaceGarden'], 'Boolean');
            }
            if (data.hasOwnProperty('OutsideSpaceLargeGarden')) {
                obj['OutsideSpaceLargeGarden'] = ApiClient.convertToType(data['OutsideSpaceLargeGarden'], 'Boolean');
            }
            if (data.hasOwnProperty('OutsideSpacePatio')) {
                obj['OutsideSpacePatio'] = ApiClient.convertToType(data['OutsideSpacePatio'], 'Boolean');
            }
            if (data.hasOwnProperty('OutsideSpaceRoofTerrace')) {
                obj['OutsideSpaceRoofTerrace'] = ApiClient.convertToType(data['OutsideSpaceRoofTerrace'], 'Boolean');
            }
            if (data.hasOwnProperty('OutsideSpaceSouthFacingGarden')) {
                obj['OutsideSpaceSouthFacingGarden'] = ApiClient.convertToType(data['OutsideSpaceSouthFacingGarden'], 'Boolean');
            }
            if (data.hasOwnProperty('ParkingAllocated')) {
                obj['ParkingAllocated'] = ApiClient.convertToType(data['ParkingAllocated'], 'Boolean');
            }
            if (data.hasOwnProperty('ParkingCarport')) {
                obj['ParkingCarport'] = ApiClient.convertToType(data['ParkingCarport'], 'Boolean');
            }
            if (data.hasOwnProperty('ParkingDoubleGarage')) {
                obj['ParkingDoubleGarage'] = ApiClient.convertToType(data['ParkingDoubleGarage'], 'Boolean');
            }
            if (data.hasOwnProperty('ParkingGarage')) {
                obj['ParkingGarage'] = ApiClient.convertToType(data['ParkingGarage'], 'Boolean');
            }
            if (data.hasOwnProperty('ParkingOffRoad')) {
                obj['ParkingOffRoad'] = ApiClient.convertToType(data['ParkingOffRoad'], 'Boolean');
            }
            if (data.hasOwnProperty('ParkingOnRoad')) {
                obj['ParkingOnRoad'] = ApiClient.convertToType(data['ParkingOnRoad'], 'Boolean');
            }
            if (data.hasOwnProperty('ParkingPermit')) {
                obj['ParkingPermit'] = ApiClient.convertToType(data['ParkingPermit'], 'Boolean');
            }
            if (data.hasOwnProperty('ParkingSecureGated')) {
                obj['ParkingSecureGated'] = ApiClient.convertToType(data['ParkingSecureGated'], 'Boolean');
            }
            if (data.hasOwnProperty('ParkingTripleGarage')) {
                obj['ParkingTripleGarage'] = ApiClient.convertToType(data['ParkingTripleGarage'], 'Boolean');
            }
            if (data.hasOwnProperty('Postcode')) {
                obj['Postcode'] = ApiClient.convertToType(data['Postcode'], 'String');
            }
            if (data.hasOwnProperty('Price')) {
                obj['Price'] = ApiClient.convertToType(data['Price'], 'Number');
            }
            if (data.hasOwnProperty('PropertyOwnableType')) {
                obj['PropertyOwnableType'] = ApiClient.convertToType(data['PropertyOwnableType'], 'String');
            }
            if (data.hasOwnProperty('ReceptionRooms')) {
                obj['ReceptionRooms'] = ApiClient.convertToType(data['ReceptionRooms'], 'Number');
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = ApiClient.convertToType(data['State'], 'String');
            }
            if (data.hasOwnProperty('Tenure')) {
                obj['Tenure'] = ApiClient.convertToType(data['Tenure'], 'String');
            }
            if (data.hasOwnProperty('VideoURL')) {
                obj['VideoURL'] = ApiClient.convertToType(data['VideoURL'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SalesInstructionModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SalesInstructionModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Address1'] && !(typeof data['Address1'] === 'string' || data['Address1'] instanceof String)) {
            throw new Error("Expected the field `Address1` to be a primitive type in the JSON string but got " + data['Address1']);
        }
        // ensure the json data is a string
        if (data['Address2'] && !(typeof data['Address2'] === 'string' || data['Address2'] instanceof String)) {
            throw new Error("Expected the field `Address2` to be a primitive type in the JSON string but got " + data['Address2']);
        }
        // ensure the json data is a string
        if (data['Address3'] && !(typeof data['Address3'] === 'string' || data['Address3'] instanceof String)) {
            throw new Error("Expected the field `Address3` to be a primitive type in the JSON string but got " + data['Address3']);
        }
        // ensure the json data is a string
        if (data['Address4'] && !(typeof data['Address4'] === 'string' || data['Address4'] instanceof String)) {
            throw new Error("Expected the field `Address4` to be a primitive type in the JSON string but got " + data['Address4']);
        }
        // ensure the json data is a string
        if (data['AddressNumber'] && !(typeof data['AddressNumber'] === 'string' || data['AddressNumber'] instanceof String)) {
            throw new Error("Expected the field `AddressNumber` to be a primitive type in the JSON string but got " + data['AddressNumber']);
        }
        // ensure the json data is a string
        if (data['Area'] && !(typeof data['Area'] === 'string' || data['Area'] instanceof String)) {
            throw new Error("Expected the field `Area` to be a primitive type in the JSON string but got " + data['Area']);
        }
        // ensure the json data is a string
        if (data['ContractType'] && !(typeof data['ContractType'] === 'string' || data['ContractType'] instanceof String)) {
            throw new Error("Expected the field `ContractType` to be a primitive type in the JSON string but got " + data['ContractType']);
        }
        // ensure the json data is a string
        if (data['Country'] && !(typeof data['Country'] === 'string' || data['Country'] instanceof String)) {
            throw new Error("Expected the field `Country` to be a primitive type in the JSON string but got " + data['Country']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['Directions'] && !(typeof data['Directions'] === 'string' || data['Directions'] instanceof String)) {
            throw new Error("Expected the field `Directions` to be a primitive type in the JSON string but got " + data['Directions']);
        }
        // ensure the json data is a string
        if (data['ETag'] && !(typeof data['ETag'] === 'string' || data['ETag'] instanceof String)) {
            throw new Error("Expected the field `ETag` to be a primitive type in the JSON string but got " + data['ETag']);
        }
        // ensure the json data is a string
        if (data['OID'] && !(typeof data['OID'] === 'string' || data['OID'] instanceof String)) {
            throw new Error("Expected the field `OID` to be a primitive type in the JSON string but got " + data['OID']);
        }
        // ensure the json data is a string
        if (data['Postcode'] && !(typeof data['Postcode'] === 'string' || data['Postcode'] instanceof String)) {
            throw new Error("Expected the field `Postcode` to be a primitive type in the JSON string but got " + data['Postcode']);
        }
        // ensure the json data is a string
        if (data['PropertyOwnableType'] && !(typeof data['PropertyOwnableType'] === 'string' || data['PropertyOwnableType'] instanceof String)) {
            throw new Error("Expected the field `PropertyOwnableType` to be a primitive type in the JSON string but got " + data['PropertyOwnableType']);
        }
        // ensure the json data is a string
        if (data['State'] && !(typeof data['State'] === 'string' || data['State'] instanceof String)) {
            throw new Error("Expected the field `State` to be a primitive type in the JSON string but got " + data['State']);
        }
        // ensure the json data is a string
        if (data['Tenure'] && !(typeof data['Tenure'] === 'string' || data['Tenure'] instanceof String)) {
            throw new Error("Expected the field `Tenure` to be a primitive type in the JSON string but got " + data['Tenure']);
        }
        // ensure the json data is a string
        if (data['VideoURL'] && !(typeof data['VideoURL'] === 'string' || data['VideoURL'] instanceof String)) {
            throw new Error("Expected the field `VideoURL` to be a primitive type in the JSON string but got " + data['VideoURL']);
        }

        return true;
    }


}



/**
 * Address 1 of the property to be sold
 * @member {String} Address1
 */
SalesInstructionModel.prototype['Address1'] = undefined;

/**
 * Address 2 of the property to be sold
 * @member {String} Address2
 */
SalesInstructionModel.prototype['Address2'] = undefined;

/**
 * Address 3 of the property to be sold
 * @member {String} Address3
 */
SalesInstructionModel.prototype['Address3'] = undefined;

/**
 * Address 4 of the property to be sold
 * @member {String} Address4
 */
SalesInstructionModel.prototype['Address4'] = undefined;

/**
 * Address number of the property to be sold
 * @member {String} AddressNumber
 */
SalesInstructionModel.prototype['AddressNumber'] = undefined;

/**
 * The area linked to the instruction
 * @member {String} Area
 */
SalesInstructionModel.prototype['Area'] = undefined;

/**
 * Number of bathrooms linked to the instruction
 * @member {Number} Bathrooms
 */
SalesInstructionModel.prototype['Bathrooms'] = undefined;

/**
 * How many of the bathrooms are ensuite?
 * @member {Number} BathroomsEnsuite
 */
SalesInstructionModel.prototype['BathroomsEnsuite'] = undefined;

/**
 * Number of bedrooms linked to the instruction
 * @member {Number} Bedrooms
 */
SalesInstructionModel.prototype['Bedrooms'] = undefined;

/**
 * The contract type
 * @member {module:model/SalesInstructionModel.ContractTypeEnum} ContractType
 */
SalesInstructionModel.prototype['ContractType'] = undefined;

/**
 * Address country of the property to be sold
 * @member {module:model/SalesInstructionModel.CountryEnum} Country
 */
SalesInstructionModel.prototype['Country'] = undefined;

/**
 * The instruction description
 * @member {String} Description
 */
SalesInstructionModel.prototype['Description'] = undefined;

/**
 * Is the instruction a development opportunity?
 * @member {Boolean} DevelopmentOpp
 */
SalesInstructionModel.prototype['DevelopmentOpp'] = undefined;

/**
 * Directions linked to the instruction
 * @member {String} Directions
 */
SalesInstructionModel.prototype['Directions'] = undefined;

/**
 * Current EER value
 * @member {Number} EPCCurrentEER
 */
SalesInstructionModel.prototype['EPCCurrentEER'] = undefined;

/**
 * Current EI value
 * @member {Number} EPCCurrentEI
 */
SalesInstructionModel.prototype['EPCCurrentEI'] = undefined;

/**
 * Potential EER value
 * @member {Number} EPCPotentialEER
 */
SalesInstructionModel.prototype['EPCPotentialEER'] = undefined;

/**
 * Potential EI value
 * @member {Number} EPCPotentialEI
 */
SalesInstructionModel.prototype['EPCPotentialEI'] = undefined;

/**
 * A unique identifier defining the object and change revision.
 * @member {String} ETag
 */
SalesInstructionModel.prototype['ETag'] = undefined;

/**
 * Does the instruction have an electrical supply linked to it?
 * @member {Boolean} HasElectricitySupply
 */
SalesInstructionModel.prototype['HasElectricitySupply'] = undefined;

/**
 * Does the instruction have an gas supply linked to it?
 * @member {Boolean} HasGasSupply
 */
SalesInstructionModel.prototype['HasGasSupply'] = undefined;

/**
 * Does the instruction have a water meter linked to it?
 * @member {Boolean} HasWaterMeter
 */
SalesInstructionModel.prototype['HasWaterMeter'] = undefined;

/**
 * Is the instruction a investment opportunity?
 * @member {Boolean} InvestmentOpp
 */
SalesInstructionModel.prototype['InvestmentOpp'] = undefined;

/**
 * Number of kitchens linked to the property instruction
 * @member {Number} Kitchens
 */
SalesInstructionModel.prototype['Kitchens'] = undefined;

/**
 * The unique Object ID (OID).
 * @member {String} OID
 */
SalesInstructionModel.prototype['OID'] = undefined;

/**
 * Does the instruction have an outside balcony linked to it?
 * @member {Boolean} OutsideSpaceBalcony
 */
SalesInstructionModel.prototype['OutsideSpaceBalcony'] = undefined;

/**
 * Does the instruction have a communal garden linked to it?
 * @member {Boolean} OutsideSpaceCommunalGarden
 */
SalesInstructionModel.prototype['OutsideSpaceCommunalGarden'] = undefined;

/**
 * Does the instruction have a conservatory linked to it?
 * @member {Boolean} OutsideSpaceConservatory
 */
SalesInstructionModel.prototype['OutsideSpaceConservatory'] = undefined;

/**
 * Does the instruction have a garden linked to it?
 * @member {Boolean} OutsideSpaceGarden
 */
SalesInstructionModel.prototype['OutsideSpaceGarden'] = undefined;

/**
 * Does the instruction have a large garden linked to it?
 * @member {Boolean} OutsideSpaceLargeGarden
 */
SalesInstructionModel.prototype['OutsideSpaceLargeGarden'] = undefined;

/**
 * Does the instruction have a patio linked to it?
 * @member {Boolean} OutsideSpacePatio
 */
SalesInstructionModel.prototype['OutsideSpacePatio'] = undefined;

/**
 * Does the instruction have a roof terrace linked to it?
 * @member {Boolean} OutsideSpaceRoofTerrace
 */
SalesInstructionModel.prototype['OutsideSpaceRoofTerrace'] = undefined;

/**
 * Does the instruction have a south facing garden?
 * @member {Boolean} OutsideSpaceSouthFacingGarden
 */
SalesInstructionModel.prototype['OutsideSpaceSouthFacingGarden'] = undefined;

/**
 * Is there any parking allocation linked to the instruction?
 * @member {Boolean} ParkingAllocated
 */
SalesInstructionModel.prototype['ParkingAllocated'] = undefined;

/**
 * Does the instruction have a carport linked to it?
 * @member {Boolean} ParkingCarport
 */
SalesInstructionModel.prototype['ParkingCarport'] = undefined;

/**
 * Does the instruction have a double garage linked to it?
 * @member {Boolean} ParkingDoubleGarage
 */
SalesInstructionModel.prototype['ParkingDoubleGarage'] = undefined;

/**
 * Does the instruction have a garage linked to it?
 * @member {Boolean} ParkingGarage
 */
SalesInstructionModel.prototype['ParkingGarage'] = undefined;

/**
 * Is there off road parking linked to the instruction?
 * @member {Boolean} ParkingOffRoad
 */
SalesInstructionModel.prototype['ParkingOffRoad'] = undefined;

/**
 * Is there on road parking linked to the instruction?
 * @member {Boolean} ParkingOnRoad
 */
SalesInstructionModel.prototype['ParkingOnRoad'] = undefined;

/**
 * Is a parking permit required?
 * @member {Boolean} ParkingPermit
 */
SalesInstructionModel.prototype['ParkingPermit'] = undefined;

/**
 * Is there any secured gate parking linked to the instruction?
 * @member {Boolean} ParkingSecureGated
 */
SalesInstructionModel.prototype['ParkingSecureGated'] = undefined;

/**
 * Does the instruction have a triple garage linked to it?
 * @member {Boolean} ParkingTripleGarage
 */
SalesInstructionModel.prototype['ParkingTripleGarage'] = undefined;

/**
 * Postcode of the property to be sold
 * @member {String} Postcode
 */
SalesInstructionModel.prototype['Postcode'] = undefined;

/**
 * The price of the property to be sold
 * @member {Number} Price
 */
SalesInstructionModel.prototype['Price'] = undefined;

/**
 * The property type
 * @member {module:model/SalesInstructionModel.PropertyOwnableTypeEnum} PropertyOwnableType
 */
SalesInstructionModel.prototype['PropertyOwnableType'] = undefined;

/**
 * Number of reception rooms linked to the instruction
 * @member {Number} ReceptionRooms
 */
SalesInstructionModel.prototype['ReceptionRooms'] = undefined;

/**
 * The current instruction state
 * @member {module:model/SalesInstructionModel.StateEnum} State
 */
SalesInstructionModel.prototype['State'] = undefined;

/**
 * Instruction tenure
 * @member {module:model/SalesInstructionModel.TenureEnum} Tenure
 */
SalesInstructionModel.prototype['Tenure'] = undefined;

/**
 * The URL of the video linked to the Sales Instruction
 * @member {String} VideoURL
 */
SalesInstructionModel.prototype['VideoURL'] = undefined;





/**
 * Allowed values for the <code>ContractType</code> property.
 * @enum {String}
 * @readonly
 */
SalesInstructionModel['ContractTypeEnum'] = {

    /**
     * value: "Pending"
     * @const
     */
    "Pending": "Pending",

    /**
     * value: "SoleAgency"
     * @const
     */
    "SoleAgency": "SoleAgency",

    /**
     * value: "SoleSellingRights"
     * @const
     */
    "SoleSellingRights": "SoleSellingRights",

    /**
     * value: "JointSoleAgency"
     * @const
     */
    "JointSoleAgency": "JointSoleAgency",

    /**
     * value: "MultiAgency"
     * @const
     */
    "MultiAgency": "MultiAgency",

    /**
     * value: "SubAgent"
     * @const
     */
    "SubAgent": "SubAgent"
};


/**
 * Allowed values for the <code>Country</code> property.
 * @enum {String}
 * @readonly
 */
SalesInstructionModel['CountryEnum'] = {

    /**
     * value: "Afghanistan"
     * @const
     */
    "Afghanistan": "Afghanistan",

    /**
     * value: "Albania"
     * @const
     */
    "Albania": "Albania",

    /**
     * value: "Algeria"
     * @const
     */
    "Algeria": "Algeria",

    /**
     * value: "Andorra"
     * @const
     */
    "Andorra": "Andorra",

    /**
     * value: "Angola"
     * @const
     */
    "Angola": "Angola",

    /**
     * value: "AntiguaAndBarbuda"
     * @const
     */
    "AntiguaAndBarbuda": "AntiguaAndBarbuda",

    /**
     * value: "Argentina"
     * @const
     */
    "Argentina": "Argentina",

    /**
     * value: "Armenia"
     * @const
     */
    "Armenia": "Armenia",

    /**
     * value: "Australia"
     * @const
     */
    "Australia": "Australia",

    /**
     * value: "Austria"
     * @const
     */
    "Austria": "Austria",

    /**
     * value: "Azerbaijan"
     * @const
     */
    "Azerbaijan": "Azerbaijan",

    /**
     * value: "Bahamas"
     * @const
     */
    "Bahamas": "Bahamas",

    /**
     * value: "Bahrain"
     * @const
     */
    "Bahrain": "Bahrain",

    /**
     * value: "Bangladesh"
     * @const
     */
    "Bangladesh": "Bangladesh",

    /**
     * value: "Barbados"
     * @const
     */
    "Barbados": "Barbados",

    /**
     * value: "Belarus"
     * @const
     */
    "Belarus": "Belarus",

    /**
     * value: "Belgium"
     * @const
     */
    "Belgium": "Belgium",

    /**
     * value: "Belize"
     * @const
     */
    "Belize": "Belize",

    /**
     * value: "Benin"
     * @const
     */
    "Benin": "Benin",

    /**
     * value: "Bhutan"
     * @const
     */
    "Bhutan": "Bhutan",

    /**
     * value: "Bolivia"
     * @const
     */
    "Bolivia": "Bolivia",

    /**
     * value: "BosniaAndHerzegovina"
     * @const
     */
    "BosniaAndHerzegovina": "BosniaAndHerzegovina",

    /**
     * value: "Botswana"
     * @const
     */
    "Botswana": "Botswana",

    /**
     * value: "Brazil"
     * @const
     */
    "Brazil": "Brazil",

    /**
     * value: "Brunei"
     * @const
     */
    "Brunei": "Brunei",

    /**
     * value: "Bulgaria"
     * @const
     */
    "Bulgaria": "Bulgaria",

    /**
     * value: "BurkinaFaso"
     * @const
     */
    "BurkinaFaso": "BurkinaFaso",

    /**
     * value: "Burundi"
     * @const
     */
    "Burundi": "Burundi",

    /**
     * value: "Cambodia"
     * @const
     */
    "Cambodia": "Cambodia",

    /**
     * value: "Cameroon"
     * @const
     */
    "Cameroon": "Cameroon",

    /**
     * value: "Canada"
     * @const
     */
    "Canada": "Canada",

    /**
     * value: "CapeVerde"
     * @const
     */
    "CapeVerde": "CapeVerde",

    /**
     * value: "CentralAfricanRepublic"
     * @const
     */
    "CentralAfricanRepublic": "CentralAfricanRepublic",

    /**
     * value: "Chad"
     * @const
     */
    "Chad": "Chad",

    /**
     * value: "Chile"
     * @const
     */
    "Chile": "Chile",

    /**
     * value: "China"
     * @const
     */
    "China": "China",

    /**
     * value: "Colombia"
     * @const
     */
    "Colombia": "Colombia",

    /**
     * value: "Comoros"
     * @const
     */
    "Comoros": "Comoros",

    /**
     * value: "CongoBrazzaville"
     * @const
     */
    "CongoBrazzaville": "CongoBrazzaville",

    /**
     * value: "CongoDemocraticRepublicOfThe"
     * @const
     */
    "CongoDemocraticRepublicOfThe": "CongoDemocraticRepublicOfThe",

    /**
     * value: "CostaRica"
     * @const
     */
    "CostaRica": "CostaRica",

    /**
     * value: "CoteDIvoire"
     * @const
     */
    "CoteDIvoire": "CoteDIvoire",

    /**
     * value: "Croatia"
     * @const
     */
    "Croatia": "Croatia",

    /**
     * value: "Cuba"
     * @const
     */
    "Cuba": "Cuba",

    /**
     * value: "Cyprus"
     * @const
     */
    "Cyprus": "Cyprus",

    /**
     * value: "CzechRepublic"
     * @const
     */
    "CzechRepublic": "CzechRepublic",

    /**
     * value: "Denmark"
     * @const
     */
    "Denmark": "Denmark",

    /**
     * value: "Djibouti"
     * @const
     */
    "Djibouti": "Djibouti",

    /**
     * value: "Dominica"
     * @const
     */
    "Dominica": "Dominica",

    /**
     * value: "DominicanRepublic"
     * @const
     */
    "DominicanRepublic": "DominicanRepublic",

    /**
     * value: "EastTimorTimorTimur"
     * @const
     */
    "EastTimorTimorTimur": "EastTimorTimorTimur",

    /**
     * value: "Ecuador"
     * @const
     */
    "Ecuador": "Ecuador",

    /**
     * value: "Egypt"
     * @const
     */
    "Egypt": "Egypt",

    /**
     * value: "ElSalvador"
     * @const
     */
    "ElSalvador": "ElSalvador",

    /**
     * value: "EquatorialGuinea"
     * @const
     */
    "EquatorialGuinea": "EquatorialGuinea",

    /**
     * value: "Eritrea"
     * @const
     */
    "Eritrea": "Eritrea",

    /**
     * value: "Estonia"
     * @const
     */
    "Estonia": "Estonia",

    /**
     * value: "Ethiopia"
     * @const
     */
    "Ethiopia": "Ethiopia",

    /**
     * value: "Fiji"
     * @const
     */
    "Fiji": "Fiji",

    /**
     * value: "Finland"
     * @const
     */
    "Finland": "Finland",

    /**
     * value: "France"
     * @const
     */
    "France": "France",

    /**
     * value: "Gabon"
     * @const
     */
    "Gabon": "Gabon",

    /**
     * value: "GambiaThe"
     * @const
     */
    "GambiaThe": "GambiaThe",

    /**
     * value: "Georgia"
     * @const
     */
    "Georgia": "Georgia",

    /**
     * value: "Germany"
     * @const
     */
    "Germany": "Germany",

    /**
     * value: "Ghana"
     * @const
     */
    "Ghana": "Ghana",

    /**
     * value: "Greece"
     * @const
     */
    "Greece": "Greece",

    /**
     * value: "Grenada"
     * @const
     */
    "Grenada": "Grenada",

    /**
     * value: "Guatemala"
     * @const
     */
    "Guatemala": "Guatemala",

    /**
     * value: "Guinea"
     * @const
     */
    "Guinea": "Guinea",

    /**
     * value: "GuineaBissau"
     * @const
     */
    "GuineaBissau": "GuineaBissau",

    /**
     * value: "Guyana"
     * @const
     */
    "Guyana": "Guyana",

    /**
     * value: "Haiti"
     * @const
     */
    "Haiti": "Haiti",

    /**
     * value: "Honduras"
     * @const
     */
    "Honduras": "Honduras",

    /**
     * value: "Hungary"
     * @const
     */
    "Hungary": "Hungary",

    /**
     * value: "Iceland"
     * @const
     */
    "Iceland": "Iceland",

    /**
     * value: "India"
     * @const
     */
    "India": "India",

    /**
     * value: "Indonesia"
     * @const
     */
    "Indonesia": "Indonesia",

    /**
     * value: "Iran"
     * @const
     */
    "Iran": "Iran",

    /**
     * value: "Iraq"
     * @const
     */
    "Iraq": "Iraq",

    /**
     * value: "Ireland"
     * @const
     */
    "Ireland": "Ireland",

    /**
     * value: "Israel"
     * @const
     */
    "Israel": "Israel",

    /**
     * value: "Italy"
     * @const
     */
    "Italy": "Italy",

    /**
     * value: "Jamaica"
     * @const
     */
    "Jamaica": "Jamaica",

    /**
     * value: "Japan"
     * @const
     */
    "Japan": "Japan",

    /**
     * value: "Jordan"
     * @const
     */
    "Jordan": "Jordan",

    /**
     * value: "Kazakhstan"
     * @const
     */
    "Kazakhstan": "Kazakhstan",

    /**
     * value: "Kenya"
     * @const
     */
    "Kenya": "Kenya",

    /**
     * value: "Kiribati"
     * @const
     */
    "Kiribati": "Kiribati",

    /**
     * value: "KoreaNorth"
     * @const
     */
    "KoreaNorth": "KoreaNorth",

    /**
     * value: "KoreaSouth"
     * @const
     */
    "KoreaSouth": "KoreaSouth",

    /**
     * value: "Kuwait"
     * @const
     */
    "Kuwait": "Kuwait",

    /**
     * value: "Kyrgyzstan"
     * @const
     */
    "Kyrgyzstan": "Kyrgyzstan",

    /**
     * value: "Laos"
     * @const
     */
    "Laos": "Laos",

    /**
     * value: "Latvia"
     * @const
     */
    "Latvia": "Latvia",

    /**
     * value: "Lebanon"
     * @const
     */
    "Lebanon": "Lebanon",

    /**
     * value: "Lesotho"
     * @const
     */
    "Lesotho": "Lesotho",

    /**
     * value: "Liberia"
     * @const
     */
    "Liberia": "Liberia",

    /**
     * value: "Libya"
     * @const
     */
    "Libya": "Libya",

    /**
     * value: "Liechtenstein"
     * @const
     */
    "Liechtenstein": "Liechtenstein",

    /**
     * value: "Lithuania"
     * @const
     */
    "Lithuania": "Lithuania",

    /**
     * value: "Luxembourg"
     * @const
     */
    "Luxembourg": "Luxembourg",

    /**
     * value: "MacedoniaFormerYugoslavRepublicOf"
     * @const
     */
    "MacedoniaFormerYugoslavRepublicOf": "MacedoniaFormerYugoslavRepublicOf",

    /**
     * value: "Madagascar"
     * @const
     */
    "Madagascar": "Madagascar",

    /**
     * value: "Malawi"
     * @const
     */
    "Malawi": "Malawi",

    /**
     * value: "Malaysia"
     * @const
     */
    "Malaysia": "Malaysia",

    /**
     * value: "Maldives"
     * @const
     */
    "Maldives": "Maldives",

    /**
     * value: "Mali"
     * @const
     */
    "Mali": "Mali",

    /**
     * value: "Malta"
     * @const
     */
    "Malta": "Malta",

    /**
     * value: "MarshallIslands"
     * @const
     */
    "MarshallIslands": "MarshallIslands",

    /**
     * value: "Mauritania"
     * @const
     */
    "Mauritania": "Mauritania",

    /**
     * value: "Mauritius"
     * @const
     */
    "Mauritius": "Mauritius",

    /**
     * value: "Mexico"
     * @const
     */
    "Mexico": "Mexico",

    /**
     * value: "MicronesiaFederatedStatesOf"
     * @const
     */
    "MicronesiaFederatedStatesOf": "MicronesiaFederatedStatesOf",

    /**
     * value: "Moldova"
     * @const
     */
    "Moldova": "Moldova",

    /**
     * value: "Monaco"
     * @const
     */
    "Monaco": "Monaco",

    /**
     * value: "Mongolia"
     * @const
     */
    "Mongolia": "Mongolia",

    /**
     * value: "Morocco"
     * @const
     */
    "Morocco": "Morocco",

    /**
     * value: "Mozambique"
     * @const
     */
    "Mozambique": "Mozambique",

    /**
     * value: "Myanmar"
     * @const
     */
    "Myanmar": "Myanmar",

    /**
     * value: "Namibia"
     * @const
     */
    "Namibia": "Namibia",

    /**
     * value: "Nauru"
     * @const
     */
    "Nauru": "Nauru",

    /**
     * value: "Nepal"
     * @const
     */
    "Nepal": "Nepal",

    /**
     * value: "Netherlands"
     * @const
     */
    "Netherlands": "Netherlands",

    /**
     * value: "NewZealand"
     * @const
     */
    "NewZealand": "NewZealand",

    /**
     * value: "Nicaragua"
     * @const
     */
    "Nicaragua": "Nicaragua",

    /**
     * value: "Niger"
     * @const
     */
    "Niger": "Niger",

    /**
     * value: "Nigeria"
     * @const
     */
    "Nigeria": "Nigeria",

    /**
     * value: "Norway"
     * @const
     */
    "Norway": "Norway",

    /**
     * value: "Oman"
     * @const
     */
    "Oman": "Oman",

    /**
     * value: "Pakistan"
     * @const
     */
    "Pakistan": "Pakistan",

    /**
     * value: "Palau"
     * @const
     */
    "Palau": "Palau",

    /**
     * value: "Panama"
     * @const
     */
    "Panama": "Panama",

    /**
     * value: "PapuaNewGuinea"
     * @const
     */
    "PapuaNewGuinea": "PapuaNewGuinea",

    /**
     * value: "Paraguay"
     * @const
     */
    "Paraguay": "Paraguay",

    /**
     * value: "Peru"
     * @const
     */
    "Peru": "Peru",

    /**
     * value: "Philippines"
     * @const
     */
    "Philippines": "Philippines",

    /**
     * value: "Poland"
     * @const
     */
    "Poland": "Poland",

    /**
     * value: "Portugal"
     * @const
     */
    "Portugal": "Portugal",

    /**
     * value: "Qatar"
     * @const
     */
    "Qatar": "Qatar",

    /**
     * value: "Romania"
     * @const
     */
    "Romania": "Romania",

    /**
     * value: "Russia"
     * @const
     */
    "Russia": "Russia",

    /**
     * value: "Rwanda"
     * @const
     */
    "Rwanda": "Rwanda",

    /**
     * value: "SaintKittsAndNevis"
     * @const
     */
    "SaintKittsAndNevis": "SaintKittsAndNevis",

    /**
     * value: "SaintLucia"
     * @const
     */
    "SaintLucia": "SaintLucia",

    /**
     * value: "SaintVincentAndTheGrenadines"
     * @const
     */
    "SaintVincentAndTheGrenadines": "SaintVincentAndTheGrenadines",

    /**
     * value: "Samoa"
     * @const
     */
    "Samoa": "Samoa",

    /**
     * value: "SanMarino"
     * @const
     */
    "SanMarino": "SanMarino",

    /**
     * value: "SaoTomeAndPrincipe"
     * @const
     */
    "SaoTomeAndPrincipe": "SaoTomeAndPrincipe",

    /**
     * value: "SaudiArabia"
     * @const
     */
    "SaudiArabia": "SaudiArabia",

    /**
     * value: "Senegal"
     * @const
     */
    "Senegal": "Senegal",

    /**
     * value: "SerbiaAndMontenegro"
     * @const
     */
    "SerbiaAndMontenegro": "SerbiaAndMontenegro",

    /**
     * value: "Seychelles"
     * @const
     */
    "Seychelles": "Seychelles",

    /**
     * value: "SierraLeone"
     * @const
     */
    "SierraLeone": "SierraLeone",

    /**
     * value: "Singapore"
     * @const
     */
    "Singapore": "Singapore",

    /**
     * value: "Slovakia"
     * @const
     */
    "Slovakia": "Slovakia",

    /**
     * value: "Slovenia"
     * @const
     */
    "Slovenia": "Slovenia",

    /**
     * value: "SolomonIslands"
     * @const
     */
    "SolomonIslands": "SolomonIslands",

    /**
     * value: "Somalia"
     * @const
     */
    "Somalia": "Somalia",

    /**
     * value: "SouthAfrica"
     * @const
     */
    "SouthAfrica": "SouthAfrica",

    /**
     * value: "Spain"
     * @const
     */
    "Spain": "Spain",

    /**
     * value: "SriLanka"
     * @const
     */
    "SriLanka": "SriLanka",

    /**
     * value: "Sudan"
     * @const
     */
    "Sudan": "Sudan",

    /**
     * value: "Suriname"
     * @const
     */
    "Suriname": "Suriname",

    /**
     * value: "Swaziland"
     * @const
     */
    "Swaziland": "Swaziland",

    /**
     * value: "Sweden"
     * @const
     */
    "Sweden": "Sweden",

    /**
     * value: "Switzerland"
     * @const
     */
    "Switzerland": "Switzerland",

    /**
     * value: "Syria"
     * @const
     */
    "Syria": "Syria",

    /**
     * value: "Taiwan"
     * @const
     */
    "Taiwan": "Taiwan",

    /**
     * value: "Tajikistan"
     * @const
     */
    "Tajikistan": "Tajikistan",

    /**
     * value: "Tanzania"
     * @const
     */
    "Tanzania": "Tanzania",

    /**
     * value: "Thailand"
     * @const
     */
    "Thailand": "Thailand",

    /**
     * value: "Togo"
     * @const
     */
    "Togo": "Togo",

    /**
     * value: "Tonga"
     * @const
     */
    "Tonga": "Tonga",

    /**
     * value: "TrinidadAndTobago"
     * @const
     */
    "TrinidadAndTobago": "TrinidadAndTobago",

    /**
     * value: "Tunisia"
     * @const
     */
    "Tunisia": "Tunisia",

    /**
     * value: "Turkey"
     * @const
     */
    "Turkey": "Turkey",

    /**
     * value: "Turkmenistan"
     * @const
     */
    "Turkmenistan": "Turkmenistan",

    /**
     * value: "Tuvalu"
     * @const
     */
    "Tuvalu": "Tuvalu",

    /**
     * value: "Uganda"
     * @const
     */
    "Uganda": "Uganda",

    /**
     * value: "Ukraine"
     * @const
     */
    "Ukraine": "Ukraine",

    /**
     * value: "UnitedArabEmirates"
     * @const
     */
    "UnitedArabEmirates": "UnitedArabEmirates",

    /**
     * value: "UnitedKingdom"
     * @const
     */
    "UnitedKingdom": "UnitedKingdom",

    /**
     * value: "UnitedStates"
     * @const
     */
    "UnitedStates": "UnitedStates",

    /**
     * value: "Uruguay"
     * @const
     */
    "Uruguay": "Uruguay",

    /**
     * value: "Uzbekistan"
     * @const
     */
    "Uzbekistan": "Uzbekistan",

    /**
     * value: "Vanuatu"
     * @const
     */
    "Vanuatu": "Vanuatu",

    /**
     * value: "VaticanCity"
     * @const
     */
    "VaticanCity": "VaticanCity",

    /**
     * value: "Venezuela"
     * @const
     */
    "Venezuela": "Venezuela",

    /**
     * value: "Vietnam"
     * @const
     */
    "Vietnam": "Vietnam",

    /**
     * value: "WesternSahara"
     * @const
     */
    "WesternSahara": "WesternSahara",

    /**
     * value: "Yemen"
     * @const
     */
    "Yemen": "Yemen",

    /**
     * value: "Zambia"
     * @const
     */
    "Zambia": "Zambia",

    /**
     * value: "Zimbabwe"
     * @const
     */
    "Zimbabwe": "Zimbabwe",

    /**
     * value: "UnknownCountry"
     * @const
     */
    "UnknownCountry": "UnknownCountry",

    /**
     * value: "HongKong"
     * @const
     */
    "HongKong": "HongKong",

    /**
     * value: "Jersey"
     * @const
     */
    "Jersey": "Jersey",

    /**
     * value: "ChannelIslands"
     * @const
     */
    "ChannelIslands": "ChannelIslands",

    /**
     * value: "Bermuda"
     * @const
     */
    "Bermuda": "Bermuda",

    /**
     * value: "BritishOverseasTerritory"
     * @const
     */
    "BritishOverseasTerritory": "BritishOverseasTerritory"
};


/**
 * Allowed values for the <code>PropertyOwnableType</code> property.
 * @enum {String}
 * @readonly
 */
SalesInstructionModel['PropertyOwnableTypeEnum'] = {

    /**
     * value: "House"
     * @const
     */
    "House": "House",

    /**
     * value: "FlatApartment"
     * @const
     */
    "FlatApartment": "FlatApartment",

    /**
     * value: "Bungalow"
     * @const
     */
    "Bungalow": "Bungalow",

    /**
     * value: "Land"
     * @const
     */
    "Land": "Land",

    /**
     * value: "HouseFlatShare"
     * @const
     */
    "HouseFlatShare": "HouseFlatShare",

    /**
     * value: "GarageParking"
     * @const
     */
    "GarageParking": "GarageParking",

    /**
     * value: "CommercialProperty"
     * @const
     */
    "CommercialProperty": "CommercialProperty",

    /**
     * value: "Block"
     * @const
     */
    "Block": "Block",

    /**
     * value: "TerracedHouse"
     * @const
     */
    "TerracedHouse": "TerracedHouse",

    /**
     * value: "EndTerraceHouse"
     * @const
     */
    "EndTerraceHouse": "EndTerraceHouse",

    /**
     * value: "SemiDetachedHouse"
     * @const
     */
    "SemiDetachedHouse": "SemiDetachedHouse",

    /**
     * value: "DetachedHouse"
     * @const
     */
    "DetachedHouse": "DetachedHouse",

    /**
     * value: "SemiDetachedBungalow"
     * @const
     */
    "SemiDetachedBungalow": "SemiDetachedBungalow",

    /**
     * value: "TownHouse"
     * @const
     */
    "TownHouse": "TownHouse",

    /**
     * value: "Cottage"
     * @const
     */
    "Cottage": "Cottage",

    /**
     * value: "ServicedApartment"
     * @const
     */
    "ServicedApartment": "ServicedApartment",

    /**
     * value: "Studio"
     * @const
     */
    "Studio": "Studio",

    /**
     * value: "Apartment"
     * @const
     */
    "Apartment": "Apartment",

    /**
     * value: "Barn"
     * @const
     */
    "Barn": "Barn",

    /**
     * value: "FarmHouse"
     * @const
     */
    "FarmHouse": "FarmHouse",

    /**
     * value: "Penthouse"
     * @const
     */
    "Penthouse": "Penthouse",

    /**
     * value: "BuildingPlot"
     * @const
     */
    "BuildingPlot": "BuildingPlot",

    /**
     * value: "DetachedBungalow"
     * @const
     */
    "DetachedBungalow": "DetachedBungalow",

    /**
     * value: "LinkDetached"
     * @const
     */
    "LinkDetached": "LinkDetached",

    /**
     * value: "MidTerracedBungalow"
     * @const
     */
    "MidTerracedBungalow": "MidTerracedBungalow",

    /**
     * value: "LandResidential"
     * @const
     */
    "LandResidential": "LandResidential"
};


/**
 * Allowed values for the <code>State</code> property.
 * @enum {String}
 * @readonly
 */
SalesInstructionModel['StateEnum'] = {

    /**
     * value: "MarketAppraisal"
     * @const
     */
    "MarketAppraisal": "MarketAppraisal",

    /**
     * value: "LostAppraisal"
     * @const
     */
    "LostAppraisal": "LostAppraisal",

    /**
     * value: "Instructed"
     * @const
     */
    "Instructed": "Instructed",

    /**
     * value: "Advertised"
     * @const
     */
    "Advertised": "Advertised",

    /**
     * value: "UnderOffer"
     * @const
     */
    "UnderOffer": "UnderOffer",

    /**
     * value: "ContractsExchanged"
     * @const
     */
    "ContractsExchanged": "ContractsExchanged",

    /**
     * value: "Completed"
     * @const
     */
    "Completed": "Completed",

    /**
     * value: "FallenThrough"
     * @const
     */
    "FallenThrough": "FallenThrough",

    /**
     * value: "Withdrawn"
     * @const
     */
    "Withdrawn": "Withdrawn"
};


/**
 * Allowed values for the <code>Tenure</code> property.
 * @enum {String}
 * @readonly
 */
SalesInstructionModel['TenureEnum'] = {

    /**
     * value: "Freehold"
     * @const
     */
    "Freehold": "Freehold",

    /**
     * value: "Leasehold"
     * @const
     */
    "Leasehold": "Leasehold",

    /**
     * value: "Commonhold"
     * @const
     */
    "Commonhold": "Commonhold",

    /**
     * value: "ShareOfFreehold"
     * @const
     */
    "ShareOfFreehold": "ShareOfFreehold",

    /**
     * value: "FlyingFreehold"
     * @const
     */
    "FlyingFreehold": "FlyingFreehold",

    /**
     * value: "ShareTransfer"
     * @const
     */
    "ShareTransfer": "ShareTransfer",

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown"
};



export default SalesInstructionModel;

