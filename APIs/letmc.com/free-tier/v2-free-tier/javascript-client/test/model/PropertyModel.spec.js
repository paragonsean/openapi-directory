/**
 * LetMC Api V2, Free (Tier 1)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-free-tier
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LetMcApiV2FreeTier1);
  }
}(this, function(expect, LetMcApiV2FreeTier1) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LetMcApiV2FreeTier1.PropertyModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PropertyModel', function() {
    it('should create an instance of PropertyModel', function() {
      // uncomment below and update the code to test PropertyModel
      //var instance = new LetMcApiV2FreeTier1.PropertyModel();
      //expect(instance).to.be.a(LetMcApiV2FreeTier1.PropertyModel);
    });

    it('should have the property area (base name: "Area")', function() {
      // uncomment below and update the code to test the property area
      //var instance = new LetMcApiV2FreeTier1.PropertyModel();
      //expect(instance).to.be();
    });

    it('should have the property branch (base name: "Branch")', function() {
      // uncomment below and update the code to test the property branch
      //var instance = new LetMcApiV2FreeTier1.PropertyModel();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "Description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new LetMcApiV2FreeTier1.PropertyModel();
      //expect(instance).to.be();
    });

    it('should have the property eTag (base name: "ETag")', function() {
      // uncomment below and update the code to test the property eTag
      //var instance = new LetMcApiV2FreeTier1.PropertyModel();
      //expect(instance).to.be();
    });

    it('should have the property fullAddress (base name: "FullAddress")', function() {
      // uncomment below and update the code to test the property fullAddress
      //var instance = new LetMcApiV2FreeTier1.PropertyModel();
      //expect(instance).to.be();
    });

    it('should have the property globalReference (base name: "GlobalReference")', function() {
      // uncomment below and update the code to test the property globalReference
      //var instance = new LetMcApiV2FreeTier1.PropertyModel();
      //expect(instance).to.be();
    });

    it('should have the property mainPhoto (base name: "MainPhoto")', function() {
      // uncomment below and update the code to test the property mainPhoto
      //var instance = new LetMcApiV2FreeTier1.PropertyModel();
      //expect(instance).to.be();
    });

    it('should have the property managedByStaff (base name: "ManagedByStaff")', function() {
      // uncomment below and update the code to test the property managedByStaff
      //var instance = new LetMcApiV2FreeTier1.PropertyModel();
      //expect(instance).to.be();
    });

    it('should have the property OID (base name: "OID")', function() {
      // uncomment below and update the code to test the property OID
      //var instance = new LetMcApiV2FreeTier1.PropertyModel();
      //expect(instance).to.be();
    });

    it('should have the property propertySource (base name: "PropertySource")', function() {
      // uncomment below and update the code to test the property propertySource
      //var instance = new LetMcApiV2FreeTier1.PropertyModel();
      //expect(instance).to.be();
    });

    it('should have the property propertyType (base name: "PropertyType")', function() {
      // uncomment below and update the code to test the property propertyType
      //var instance = new LetMcApiV2FreeTier1.PropertyModel();
      //expect(instance).to.be();
    });

    it('should have the property roomName (base name: "RoomName")', function() {
      // uncomment below and update the code to test the property roomName
      //var instance = new LetMcApiV2FreeTier1.PropertyModel();
      //expect(instance).to.be();
    });

    it('should have the property videoURL (base name: "VideoURL")', function() {
      // uncomment below and update the code to test the property videoURL
      //var instance = new LetMcApiV2FreeTier1.PropertyModel();
      //expect(instance).to.be();
    });

  });

}));
