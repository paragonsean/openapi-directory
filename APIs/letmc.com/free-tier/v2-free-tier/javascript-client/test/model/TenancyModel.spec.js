/**
 * LetMC Api V2, Free (Tier 1)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-free-tier
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LetMcApiV2FreeTier1);
  }
}(this, function(expect, LetMcApiV2FreeTier1) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LetMcApiV2FreeTier1.TenancyModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TenancyModel', function() {
    it('should create an instance of TenancyModel', function() {
      // uncomment below and update the code to test TenancyModel
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be.a(LetMcApiV2FreeTier1.TenancyModel);
    });

    it('should have the property advertiseFrom (base name: "AdvertiseFrom")', function() {
      // uncomment below and update the code to test the property advertiseFrom
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property area (base name: "Area")', function() {
      // uncomment below and update the code to test the property area
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property bondRequired (base name: "BondRequired")', function() {
      // uncomment below and update the code to test the property bondRequired
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property branch (base name: "Branch")', function() {
      // uncomment below and update the code to test the property branch
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property eTag (base name: "ETag")', function() {
      // uncomment below and update the code to test the property eTag
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property furnished (base name: "Furnished")', function() {
      // uncomment below and update the code to test the property furnished
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property globalReference (base name: "GlobalReference")', function() {
      // uncomment below and update the code to test the property globalReference
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property isShareProperty (base name: "IsShareProperty")', function() {
      // uncomment below and update the code to test the property isShareProperty
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property isStudentProperty (base name: "IsStudentProperty")', function() {
      // uncomment below and update the code to test the property isStudentProperty
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property isTenancyAdvertised (base name: "IsTenancyAdvertised")', function() {
      // uncomment below and update the code to test the property isTenancyAdvertised
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property isTenancyProposed (base name: "IsTenancyProposed")', function() {
      // uncomment below and update the code to test the property isTenancyProposed
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property maximumTenants (base name: "MaximumTenants")', function() {
      // uncomment below and update the code to test the property maximumTenants
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property minimumTenants (base name: "MinimumTenants")', function() {
      // uncomment below and update the code to test the property minimumTenants
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property OID (base name: "OID")', function() {
      // uncomment below and update the code to test the property OID
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property rentAdvertised (base name: "RentAdvertised")', function() {
      // uncomment below and update the code to test the property rentAdvertised
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property rentRecurrence (base name: "RentRecurrence")', function() {
      // uncomment below and update the code to test the property rentRecurrence
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property rentSchedule (base name: "RentSchedule")', function() {
      // uncomment below and update the code to test the property rentSchedule
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property tenancyProperty (base name: "TenancyProperty")', function() {
      // uncomment below and update the code to test the property tenancyProperty
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property tenantSystemTypes (base name: "TenantSystemTypes")', function() {
      // uncomment below and update the code to test the property tenantSystemTypes
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property termMaximum (base name: "TermMaximum")', function() {
      // uncomment below and update the code to test the property termMaximum
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property termMinimum (base name: "TermMinimum")', function() {
      // uncomment below and update the code to test the property termMinimum
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property termStart (base name: "TermStart")', function() {
      // uncomment below and update the code to test the property termStart
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property utilityCouncilTax (base name: "UtilityCouncilTax")', function() {
      // uncomment below and update the code to test the property utilityCouncilTax
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property utilityElectricity (base name: "UtilityElectricity")', function() {
      // uncomment below and update the code to test the property utilityElectricity
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property utilityGas (base name: "UtilityGas")', function() {
      // uncomment below and update the code to test the property utilityGas
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property utilityTelephone (base name: "UtilityTelephone")', function() {
      // uncomment below and update the code to test the property utilityTelephone
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property utilityWater (base name: "UtilityWater")', function() {
      // uncomment below and update the code to test the property utilityWater
      //var instance = new LetMcApiV2FreeTier1.TenancyModel();
      //expect(instance).to.be();
    });

  });

}));
