/**
 * LetMC Api V2, Free (Tier 1)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-free-tier
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationStaffModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationStaffModel::OAIApplicationStaffModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationStaffModel::OAIApplicationStaffModel() {
    this->initializeModel();
}

OAIApplicationStaffModel::~OAIApplicationStaffModel() {}

void OAIApplicationStaffModel::initializeModel() {

    m_e_tag_isSet = false;
    m_e_tag_isValid = false;

    m_forename_isSet = false;
    m_forename_isValid = false;

    m_global_reference_isSet = false;
    m_global_reference_isValid = false;

    m_is_enabled_isSet = false;
    m_is_enabled_isValid = false;

    m_managed_by_isSet = false;
    m_managed_by_isValid = false;

    m_middlename_isSet = false;
    m_middlename_isValid = false;

    m_oid_isSet = false;
    m_oid_isValid = false;

    m_surname_isSet = false;
    m_surname_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIApplicationStaffModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationStaffModel::fromJsonObject(QJsonObject json) {

    m_e_tag_isValid = ::OpenAPI::fromJsonValue(m_e_tag, json[QString("ETag")]);
    m_e_tag_isSet = !json[QString("ETag")].isNull() && m_e_tag_isValid;

    m_forename_isValid = ::OpenAPI::fromJsonValue(m_forename, json[QString("Forename")]);
    m_forename_isSet = !json[QString("Forename")].isNull() && m_forename_isValid;

    m_global_reference_isValid = ::OpenAPI::fromJsonValue(m_global_reference, json[QString("GlobalReference")]);
    m_global_reference_isSet = !json[QString("GlobalReference")].isNull() && m_global_reference_isValid;

    m_is_enabled_isValid = ::OpenAPI::fromJsonValue(m_is_enabled, json[QString("IsEnabled")]);
    m_is_enabled_isSet = !json[QString("IsEnabled")].isNull() && m_is_enabled_isValid;

    m_managed_by_isValid = ::OpenAPI::fromJsonValue(m_managed_by, json[QString("ManagedBy")]);
    m_managed_by_isSet = !json[QString("ManagedBy")].isNull() && m_managed_by_isValid;

    m_middlename_isValid = ::OpenAPI::fromJsonValue(m_middlename, json[QString("Middlename")]);
    m_middlename_isSet = !json[QString("Middlename")].isNull() && m_middlename_isValid;

    m_oid_isValid = ::OpenAPI::fromJsonValue(m_oid, json[QString("OID")]);
    m_oid_isSet = !json[QString("OID")].isNull() && m_oid_isValid;

    m_surname_isValid = ::OpenAPI::fromJsonValue(m_surname, json[QString("Surname")]);
    m_surname_isSet = !json[QString("Surname")].isNull() && m_surname_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("Title")]);
    m_title_isSet = !json[QString("Title")].isNull() && m_title_isValid;
}

QString OAIApplicationStaffModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationStaffModel::asJsonObject() const {
    QJsonObject obj;
    if (m_e_tag_isSet) {
        obj.insert(QString("ETag"), ::OpenAPI::toJsonValue(m_e_tag));
    }
    if (m_forename_isSet) {
        obj.insert(QString("Forename"), ::OpenAPI::toJsonValue(m_forename));
    }
    if (m_global_reference_isSet) {
        obj.insert(QString("GlobalReference"), ::OpenAPI::toJsonValue(m_global_reference));
    }
    if (m_is_enabled_isSet) {
        obj.insert(QString("IsEnabled"), ::OpenAPI::toJsonValue(m_is_enabled));
    }
    if (m_managed_by_isSet) {
        obj.insert(QString("ManagedBy"), ::OpenAPI::toJsonValue(m_managed_by));
    }
    if (m_middlename_isSet) {
        obj.insert(QString("Middlename"), ::OpenAPI::toJsonValue(m_middlename));
    }
    if (m_oid_isSet) {
        obj.insert(QString("OID"), ::OpenAPI::toJsonValue(m_oid));
    }
    if (m_surname_isSet) {
        obj.insert(QString("Surname"), ::OpenAPI::toJsonValue(m_surname));
    }
    if (m_title_isSet) {
        obj.insert(QString("Title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIApplicationStaffModel::getETag() const {
    return m_e_tag;
}
void OAIApplicationStaffModel::setETag(const QString &e_tag) {
    m_e_tag = e_tag;
    m_e_tag_isSet = true;
}

bool OAIApplicationStaffModel::is_e_tag_Set() const{
    return m_e_tag_isSet;
}

bool OAIApplicationStaffModel::is_e_tag_Valid() const{
    return m_e_tag_isValid;
}

QString OAIApplicationStaffModel::getForename() const {
    return m_forename;
}
void OAIApplicationStaffModel::setForename(const QString &forename) {
    m_forename = forename;
    m_forename_isSet = true;
}

bool OAIApplicationStaffModel::is_forename_Set() const{
    return m_forename_isSet;
}

bool OAIApplicationStaffModel::is_forename_Valid() const{
    return m_forename_isValid;
}

QString OAIApplicationStaffModel::getGlobalReference() const {
    return m_global_reference;
}
void OAIApplicationStaffModel::setGlobalReference(const QString &global_reference) {
    m_global_reference = global_reference;
    m_global_reference_isSet = true;
}

bool OAIApplicationStaffModel::is_global_reference_Set() const{
    return m_global_reference_isSet;
}

bool OAIApplicationStaffModel::is_global_reference_Valid() const{
    return m_global_reference_isValid;
}

bool OAIApplicationStaffModel::isIsEnabled() const {
    return m_is_enabled;
}
void OAIApplicationStaffModel::setIsEnabled(const bool &is_enabled) {
    m_is_enabled = is_enabled;
    m_is_enabled_isSet = true;
}

bool OAIApplicationStaffModel::is_is_enabled_Set() const{
    return m_is_enabled_isSet;
}

bool OAIApplicationStaffModel::is_is_enabled_Valid() const{
    return m_is_enabled_isValid;
}

QString OAIApplicationStaffModel::getManagedBy() const {
    return m_managed_by;
}
void OAIApplicationStaffModel::setManagedBy(const QString &managed_by) {
    m_managed_by = managed_by;
    m_managed_by_isSet = true;
}

bool OAIApplicationStaffModel::is_managed_by_Set() const{
    return m_managed_by_isSet;
}

bool OAIApplicationStaffModel::is_managed_by_Valid() const{
    return m_managed_by_isValid;
}

QString OAIApplicationStaffModel::getMiddlename() const {
    return m_middlename;
}
void OAIApplicationStaffModel::setMiddlename(const QString &middlename) {
    m_middlename = middlename;
    m_middlename_isSet = true;
}

bool OAIApplicationStaffModel::is_middlename_Set() const{
    return m_middlename_isSet;
}

bool OAIApplicationStaffModel::is_middlename_Valid() const{
    return m_middlename_isValid;
}

QString OAIApplicationStaffModel::getOid() const {
    return m_oid;
}
void OAIApplicationStaffModel::setOid(const QString &oid) {
    m_oid = oid;
    m_oid_isSet = true;
}

bool OAIApplicationStaffModel::is_oid_Set() const{
    return m_oid_isSet;
}

bool OAIApplicationStaffModel::is_oid_Valid() const{
    return m_oid_isValid;
}

QString OAIApplicationStaffModel::getSurname() const {
    return m_surname;
}
void OAIApplicationStaffModel::setSurname(const QString &surname) {
    m_surname = surname;
    m_surname_isSet = true;
}

bool OAIApplicationStaffModel::is_surname_Set() const{
    return m_surname_isSet;
}

bool OAIApplicationStaffModel::is_surname_Valid() const{
    return m_surname_isValid;
}

QString OAIApplicationStaffModel::getTitle() const {
    return m_title;
}
void OAIApplicationStaffModel::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIApplicationStaffModel::is_title_Set() const{
    return m_title_isSet;
}

bool OAIApplicationStaffModel::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIApplicationStaffModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_e_tag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_forename_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_global_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_managed_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_middlename_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_oid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_surname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationStaffModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
