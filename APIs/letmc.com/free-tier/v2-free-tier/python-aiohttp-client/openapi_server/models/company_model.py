# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CompanyModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, company_name: str=None, company_registration: str=None, e_tag: str=None, marketing_company_name: str=None, oid: str=None, short_name: str=None):
        """CompanyModel - a model defined in OpenAPI

        :param company_name: The company_name of this CompanyModel.
        :param company_registration: The company_registration of this CompanyModel.
        :param e_tag: The e_tag of this CompanyModel.
        :param marketing_company_name: The marketing_company_name of this CompanyModel.
        :param oid: The oid of this CompanyModel.
        :param short_name: The short_name of this CompanyModel.
        """
        self.openapi_types = {
            'company_name': str,
            'company_registration': str,
            'e_tag': str,
            'marketing_company_name': str,
            'oid': str,
            'short_name': str
        }

        self.attribute_map = {
            'company_name': 'CompanyName',
            'company_registration': 'CompanyRegistration',
            'e_tag': 'ETag',
            'marketing_company_name': 'MarketingCompanyName',
            'oid': 'OID',
            'short_name': 'ShortName'
        }

        self._company_name = company_name
        self._company_registration = company_registration
        self._e_tag = e_tag
        self._marketing_company_name = marketing_company_name
        self._oid = oid
        self._short_name = short_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompanyModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompanyModel of this CompanyModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company_name(self):
        """Gets the company_name of this CompanyModel.

        Company name

        :return: The company_name of this CompanyModel.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this CompanyModel.

        Company name

        :param company_name: The company_name of this CompanyModel.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def company_registration(self):
        """Gets the company_registration of this CompanyModel.

        Company registration number

        :return: The company_registration of this CompanyModel.
        :rtype: str
        """
        return self._company_registration

    @company_registration.setter
    def company_registration(self, company_registration):
        """Sets the company_registration of this CompanyModel.

        Company registration number

        :param company_registration: The company_registration of this CompanyModel.
        :type company_registration: str
        """

        self._company_registration = company_registration

    @property
    def e_tag(self):
        """Gets the e_tag of this CompanyModel.

        A unique identifier defining the object and change revision.

        :return: The e_tag of this CompanyModel.
        :rtype: str
        """
        return self._e_tag

    @e_tag.setter
    def e_tag(self, e_tag):
        """Sets the e_tag of this CompanyModel.

        A unique identifier defining the object and change revision.

        :param e_tag: The e_tag of this CompanyModel.
        :type e_tag: str
        """

        self._e_tag = e_tag

    @property
    def marketing_company_name(self):
        """Gets the marketing_company_name of this CompanyModel.

        Company Marketing Name

        :return: The marketing_company_name of this CompanyModel.
        :rtype: str
        """
        return self._marketing_company_name

    @marketing_company_name.setter
    def marketing_company_name(self, marketing_company_name):
        """Sets the marketing_company_name of this CompanyModel.

        Company Marketing Name

        :param marketing_company_name: The marketing_company_name of this CompanyModel.
        :type marketing_company_name: str
        """

        self._marketing_company_name = marketing_company_name

    @property
    def oid(self):
        """Gets the oid of this CompanyModel.

        The unique Object ID (OID).

        :return: The oid of this CompanyModel.
        :rtype: str
        """
        return self._oid

    @oid.setter
    def oid(self, oid):
        """Sets the oid of this CompanyModel.

        The unique Object ID (OID).

        :param oid: The oid of this CompanyModel.
        :type oid: str
        """

        self._oid = oid

    @property
    def short_name(self):
        """Gets the short_name of this CompanyModel.

        The unique identifier assigned to the client

        :return: The short_name of this CompanyModel.
        :rtype: str
        """
        return self._short_name

    @short_name.setter
    def short_name(self, short_name):
        """Sets the short_name of this CompanyModel.

        The unique identifier assigned to the client

        :param short_name: The short_name of this CompanyModel.
        :type short_name: str
        """

        self._short_name = short_name
