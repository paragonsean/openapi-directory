# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DiaryAllocationModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, appointment_type: str=None, e_tag: str=None, end: datetime=None, oid: str=None, staff: str=None, start: datetime=None):
        """DiaryAllocationModel - a model defined in OpenAPI

        :param appointment_type: The appointment_type of this DiaryAllocationModel.
        :param e_tag: The e_tag of this DiaryAllocationModel.
        :param end: The end of this DiaryAllocationModel.
        :param oid: The oid of this DiaryAllocationModel.
        :param staff: The staff of this DiaryAllocationModel.
        :param start: The start of this DiaryAllocationModel.
        """
        self.openapi_types = {
            'appointment_type': str,
            'e_tag': str,
            'end': datetime,
            'oid': str,
            'staff': str,
            'start': datetime
        }

        self.attribute_map = {
            'appointment_type': 'AppointmentType',
            'e_tag': 'ETag',
            'end': 'End',
            'oid': 'OID',
            'staff': 'Staff',
            'start': 'Start'
        }

        self._appointment_type = appointment_type
        self._e_tag = e_tag
        self._end = end
        self._oid = oid
        self._staff = staff
        self._start = start

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DiaryAllocationModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DiaryAllocationModel of this DiaryAllocationModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def appointment_type(self):
        """Gets the appointment_type of this DiaryAllocationModel.

        The diary appointment type.

        :return: The appointment_type of this DiaryAllocationModel.
        :rtype: str
        """
        return self._appointment_type

    @appointment_type.setter
    def appointment_type(self, appointment_type):
        """Sets the appointment_type of this DiaryAllocationModel.

        The diary appointment type.

        :param appointment_type: The appointment_type of this DiaryAllocationModel.
        :type appointment_type: str
        """

        self._appointment_type = appointment_type

    @property
    def e_tag(self):
        """Gets the e_tag of this DiaryAllocationModel.

        A unique identifier defining the object and change revision.

        :return: The e_tag of this DiaryAllocationModel.
        :rtype: str
        """
        return self._e_tag

    @e_tag.setter
    def e_tag(self, e_tag):
        """Sets the e_tag of this DiaryAllocationModel.

        A unique identifier defining the object and change revision.

        :param e_tag: The e_tag of this DiaryAllocationModel.
        :type e_tag: str
        """

        self._e_tag = e_tag

    @property
    def end(self):
        """Gets the end of this DiaryAllocationModel.

        The end date/time of this allocation.

        :return: The end of this DiaryAllocationModel.
        :rtype: datetime
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this DiaryAllocationModel.

        The end date/time of this allocation.

        :param end: The end of this DiaryAllocationModel.
        :type end: datetime
        """

        self._end = end

    @property
    def oid(self):
        """Gets the oid of this DiaryAllocationModel.

        The unique Object ID (OID).

        :return: The oid of this DiaryAllocationModel.
        :rtype: str
        """
        return self._oid

    @oid.setter
    def oid(self, oid):
        """Sets the oid of this DiaryAllocationModel.

        The unique Object ID (OID).

        :param oid: The oid of this DiaryAllocationModel.
        :type oid: str
        """

        self._oid = oid

    @property
    def staff(self):
        """Gets the staff of this DiaryAllocationModel.

        The staff member holding this allocation.

        :return: The staff of this DiaryAllocationModel.
        :rtype: str
        """
        return self._staff

    @staff.setter
    def staff(self, staff):
        """Sets the staff of this DiaryAllocationModel.

        The staff member holding this allocation.

        :param staff: The staff of this DiaryAllocationModel.
        :type staff: str
        """

        self._staff = staff

    @property
    def start(self):
        """Gets the start of this DiaryAllocationModel.

        The start date/time of this allocation.

        :return: The start of this DiaryAllocationModel.
        :rtype: datetime
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this DiaryAllocationModel.

        The start date/time of this allocation.

        :param start: The start of this DiaryAllocationModel.
        :type start: datetime
        """

        self._start = start
