/*
 * agentOS Api V2, Customer Login Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-customer
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.LandlordAccountingModel;
import org.openapitools.client.model.LandlordCrmEntry;
import org.openapitools.client.model.LandlordMaintenanceModel;
import org.openapitools.client.model.LandlordProfitLossModel;
import org.openapitools.client.model.LandlordRentArrearsModel;
import org.openapitools.client.model.LandlordSettingsModel;
import org.openapitools.client.model.LandlordSummaryModel;
import org.openapitools.client.model.LandlordTenancyModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LandlordControllerApi
 */
@Disabled
public class LandlordControllerApiTest {

    private final LandlordControllerApi api = new LandlordControllerApi();

    /**
     * Post tenancy maintenance preferences:-
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void landlordControllerCreateMaintenancePreferenceTest() throws ApiException {
        String shortName = null;
        String token = null;
        String tenancyID = null;
        String name = null;
        String notes = null;
        String response = api.landlordControllerCreateMaintenancePreference(shortName, token, tenancyID, name, notes);
        // TODO: test validations
    }

    /**
     * Get the accounting details for the landlord.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void landlordControllerGetAccountsTest() throws ApiException {
        String shortName = null;
        String token = null;
        LandlordAccountingModel response = api.landlordControllerGetAccounts(shortName, token);
        // TODO: test validations
    }

    /**
     * Download a Document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void landlordControllerGetDocumentTest() throws ApiException {
        String shortName = null;
        String token = null;
        String ID = null;
        Object response = api.landlordControllerGetDocument(shortName, token, ID);
        // TODO: test validations
    }

    /**
     * Generate a Inventory PDF for a tenancy
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void landlordControllerGetInvetoryReportTest() throws ApiException {
        String shortName = null;
        String token = null;
        String tenancyID = null;
        Object response = api.landlordControllerGetInvetoryReport(shortName, token, tenancyID);
        // TODO: test validations
    }

    /**
     * Get an invoice pdf belonging to the landlord.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void landlordControllerGetInvoiceTest() throws ApiException {
        String shortName = null;
        String token = null;
        String invoiceID = null;
        Object response = api.landlordControllerGetInvoice(shortName, token, invoiceID);
        // TODO: test validations
    }

    /**
     * Retrieve landlord&#39;s CRM ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void landlordControllerGetLandlordCrmEntriesTest() throws ApiException {
        String shortName = null;
        String token = null;
        List<LandlordCrmEntry> response = api.landlordControllerGetLandlordCrmEntries(shortName, token);
        // TODO: test validations
    }

    /**
     * Get Active maintenance jobs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void landlordControllerGetMaintenanceJobsTest() throws ApiException {
        String shortName = null;
        String token = null;
        LandlordMaintenanceModel response = api.landlordControllerGetMaintenanceJobs(shortName, token);
        // TODO: test validations
    }

    /**
     * Generate a Profit and Loss Report
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void landlordControllerGetProfitLossReportTest() throws ApiException {
        String shortName = null;
        String token = null;
        LandlordProfitLossModel response = api.landlordControllerGetProfitLossReport(shortName, token);
        // TODO: test validations
    }

    /**
     * Rent Arrears
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void landlordControllerGetRentArrearsTest() throws ApiException {
        String shortName = null;
        String token = null;
        LandlordRentArrearsModel response = api.landlordControllerGetRentArrears(shortName, token);
        // TODO: test validations
    }

    /**
     * Generate a Self Assessment Tax Report
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void landlordControllerGetSASReportTest() throws ApiException {
        String shortName = null;
        String token = null;
        Integer yearEnd = null;
        Object response = api.landlordControllerGetSASReport(shortName, token, yearEnd);
        // TODO: test validations
    }

    /**
     * Get contact details of all linked landlords.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void landlordControllerGetSettingsTest() throws ApiException {
        String shortName = null;
        String token = null;
        LandlordSettingsModel response = api.landlordControllerGetSettings(shortName, token);
        // TODO: test validations
    }

    /**
     * Get the summary details for the landlord.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void landlordControllerGetSummaryDetailsTest() throws ApiException {
        String shortName = null;
        String token = null;
        LandlordSummaryModel response = api.landlordControllerGetSummaryDetails(shortName, token);
        // TODO: test validations
    }

    /**
     * Get tenancy details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void landlordControllerGetTenancyTest() throws ApiException {
        String shortName = null;
        String token = null;
        String tenancyID = null;
        LandlordTenancyModel response = api.landlordControllerGetTenancy(shortName, token, tenancyID);
        // TODO: test validations
    }

    /**
     * Generate a Tenancy Agreement Copy (PDF)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void landlordControllerGetTenancyAgreementReportTest() throws ApiException {
        String shortName = null;
        String token = null;
        String tenancyID = null;
        Object response = api.landlordControllerGetTenancyAgreementReport(shortName, token, tenancyID);
        // TODO: test validations
    }

}
