/**
 * agentOS Api V2, Customer Login Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-customer
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILandlordMaintenanceJobModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILandlordMaintenanceJobModel::OAILandlordMaintenanceJobModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILandlordMaintenanceJobModel::OAILandlordMaintenanceJobModel() {
    this->initializeModel();
}

OAILandlordMaintenanceJobModel::~OAILandlordMaintenanceJobModel() {}

void OAILandlordMaintenanceJobModel::initializeModel() {

    m_assigned_to_isSet = false;
    m_assigned_to_isValid = false;

    m_closed_date_isSet = false;
    m_closed_date_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_maintenance_notes_isSet = false;
    m_maintenance_notes_isValid = false;

    m_property_isSet = false;
    m_property_isValid = false;

    m_reported_isSet = false;
    m_reported_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAILandlordMaintenanceJobModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILandlordMaintenanceJobModel::fromJsonObject(QJsonObject json) {

    m_assigned_to_isValid = ::OpenAPI::fromJsonValue(m_assigned_to, json[QString("AssignedTo")]);
    m_assigned_to_isSet = !json[QString("AssignedTo")].isNull() && m_assigned_to_isValid;

    m_closed_date_isValid = ::OpenAPI::fromJsonValue(m_closed_date, json[QString("ClosedDate")]);
    m_closed_date_isSet = !json[QString("ClosedDate")].isNull() && m_closed_date_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_maintenance_notes_isValid = ::OpenAPI::fromJsonValue(m_maintenance_notes, json[QString("MaintenanceNotes")]);
    m_maintenance_notes_isSet = !json[QString("MaintenanceNotes")].isNull() && m_maintenance_notes_isValid;

    m_property_isValid = ::OpenAPI::fromJsonValue(m_property, json[QString("Property")]);
    m_property_isSet = !json[QString("Property")].isNull() && m_property_isValid;

    m_reported_isValid = ::OpenAPI::fromJsonValue(m_reported, json[QString("Reported")]);
    m_reported_isSet = !json[QString("Reported")].isNull() && m_reported_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAILandlordMaintenanceJobModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILandlordMaintenanceJobModel::asJsonObject() const {
    QJsonObject obj;
    if (m_assigned_to_isSet) {
        obj.insert(QString("AssignedTo"), ::OpenAPI::toJsonValue(m_assigned_to));
    }
    if (m_closed_date_isSet) {
        obj.insert(QString("ClosedDate"), ::OpenAPI::toJsonValue(m_closed_date));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_maintenance_notes.size() > 0) {
        obj.insert(QString("MaintenanceNotes"), ::OpenAPI::toJsonValue(m_maintenance_notes));
    }
    if (m_property_isSet) {
        obj.insert(QString("Property"), ::OpenAPI::toJsonValue(m_property));
    }
    if (m_reported_isSet) {
        obj.insert(QString("Reported"), ::OpenAPI::toJsonValue(m_reported));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAILandlordMaintenanceJobModel::getAssignedTo() const {
    return m_assigned_to;
}
void OAILandlordMaintenanceJobModel::setAssignedTo(const QString &assigned_to) {
    m_assigned_to = assigned_to;
    m_assigned_to_isSet = true;
}

bool OAILandlordMaintenanceJobModel::is_assigned_to_Set() const{
    return m_assigned_to_isSet;
}

bool OAILandlordMaintenanceJobModel::is_assigned_to_Valid() const{
    return m_assigned_to_isValid;
}

QDateTime OAILandlordMaintenanceJobModel::getClosedDate() const {
    return m_closed_date;
}
void OAILandlordMaintenanceJobModel::setClosedDate(const QDateTime &closed_date) {
    m_closed_date = closed_date;
    m_closed_date_isSet = true;
}

bool OAILandlordMaintenanceJobModel::is_closed_date_Set() const{
    return m_closed_date_isSet;
}

bool OAILandlordMaintenanceJobModel::is_closed_date_Valid() const{
    return m_closed_date_isValid;
}

QString OAILandlordMaintenanceJobModel::getDescription() const {
    return m_description;
}
void OAILandlordMaintenanceJobModel::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAILandlordMaintenanceJobModel::is_description_Set() const{
    return m_description_isSet;
}

bool OAILandlordMaintenanceJobModel::is_description_Valid() const{
    return m_description_isValid;
}

QList<OAILandlordMaintenanceJobNoteModel> OAILandlordMaintenanceJobModel::getMaintenanceNotes() const {
    return m_maintenance_notes;
}
void OAILandlordMaintenanceJobModel::setMaintenanceNotes(const QList<OAILandlordMaintenanceJobNoteModel> &maintenance_notes) {
    m_maintenance_notes = maintenance_notes;
    m_maintenance_notes_isSet = true;
}

bool OAILandlordMaintenanceJobModel::is_maintenance_notes_Set() const{
    return m_maintenance_notes_isSet;
}

bool OAILandlordMaintenanceJobModel::is_maintenance_notes_Valid() const{
    return m_maintenance_notes_isValid;
}

QString OAILandlordMaintenanceJobModel::getProperty() const {
    return m_property;
}
void OAILandlordMaintenanceJobModel::setProperty(const QString &property) {
    m_property = property;
    m_property_isSet = true;
}

bool OAILandlordMaintenanceJobModel::is_property_Set() const{
    return m_property_isSet;
}

bool OAILandlordMaintenanceJobModel::is_property_Valid() const{
    return m_property_isValid;
}

QDateTime OAILandlordMaintenanceJobModel::getReported() const {
    return m_reported;
}
void OAILandlordMaintenanceJobModel::setReported(const QDateTime &reported) {
    m_reported = reported;
    m_reported_isSet = true;
}

bool OAILandlordMaintenanceJobModel::is_reported_Set() const{
    return m_reported_isSet;
}

bool OAILandlordMaintenanceJobModel::is_reported_Valid() const{
    return m_reported_isValid;
}

QString OAILandlordMaintenanceJobModel::getStatus() const {
    return m_status;
}
void OAILandlordMaintenanceJobModel::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAILandlordMaintenanceJobModel::is_status_Set() const{
    return m_status_isSet;
}

bool OAILandlordMaintenanceJobModel::is_status_Valid() const{
    return m_status_isValid;
}

bool OAILandlordMaintenanceJobModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assigned_to_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_closed_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maintenance_notes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_property_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reported_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILandlordMaintenanceJobModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
