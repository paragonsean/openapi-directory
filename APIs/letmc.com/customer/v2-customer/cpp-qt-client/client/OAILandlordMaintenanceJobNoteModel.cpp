/**
 * agentOS Api V2, Customer Login Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-customer
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILandlordMaintenanceJobNoteModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILandlordMaintenanceJobNoteModel::OAILandlordMaintenanceJobNoteModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILandlordMaintenanceJobNoteModel::OAILandlordMaintenanceJobNoteModel() {
    this->initializeModel();
}

OAILandlordMaintenanceJobNoteModel::~OAILandlordMaintenanceJobNoteModel() {}

void OAILandlordMaintenanceJobNoteModel::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_note_contents_isSet = false;
    m_note_contents_isValid = false;

    m_oid_isSet = false;
    m_oid_isValid = false;
}

void OAILandlordMaintenanceJobNoteModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILandlordMaintenanceJobNoteModel::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("CreatedAt")]);
    m_created_at_isSet = !json[QString("CreatedAt")].isNull() && m_created_at_isValid;

    m_note_contents_isValid = ::OpenAPI::fromJsonValue(m_note_contents, json[QString("NoteContents")]);
    m_note_contents_isSet = !json[QString("NoteContents")].isNull() && m_note_contents_isValid;

    m_oid_isValid = ::OpenAPI::fromJsonValue(m_oid, json[QString("OID")]);
    m_oid_isSet = !json[QString("OID")].isNull() && m_oid_isValid;
}

QString OAILandlordMaintenanceJobNoteModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILandlordMaintenanceJobNoteModel::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("CreatedAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_note_contents_isSet) {
        obj.insert(QString("NoteContents"), ::OpenAPI::toJsonValue(m_note_contents));
    }
    if (m_oid_isSet) {
        obj.insert(QString("OID"), ::OpenAPI::toJsonValue(m_oid));
    }
    return obj;
}

QDateTime OAILandlordMaintenanceJobNoteModel::getCreatedAt() const {
    return m_created_at;
}
void OAILandlordMaintenanceJobNoteModel::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAILandlordMaintenanceJobNoteModel::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAILandlordMaintenanceJobNoteModel::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAILandlordMaintenanceJobNoteModel::getNoteContents() const {
    return m_note_contents;
}
void OAILandlordMaintenanceJobNoteModel::setNoteContents(const QString &note_contents) {
    m_note_contents = note_contents;
    m_note_contents_isSet = true;
}

bool OAILandlordMaintenanceJobNoteModel::is_note_contents_Set() const{
    return m_note_contents_isSet;
}

bool OAILandlordMaintenanceJobNoteModel::is_note_contents_Valid() const{
    return m_note_contents_isValid;
}

QString OAILandlordMaintenanceJobNoteModel::getOid() const {
    return m_oid;
}
void OAILandlordMaintenanceJobNoteModel::setOid(const QString &oid) {
    m_oid = oid;
    m_oid_isSet = true;
}

bool OAILandlordMaintenanceJobNoteModel::is_oid_Set() const{
    return m_oid_isSet;
}

bool OAILandlordMaintenanceJobNoteModel::is_oid_Valid() const{
    return m_oid_isValid;
}

bool OAILandlordMaintenanceJobNoteModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_note_contents_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_oid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILandlordMaintenanceJobNoteModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
