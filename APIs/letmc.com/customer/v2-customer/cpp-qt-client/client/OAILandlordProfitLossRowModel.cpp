/**
 * agentOS Api V2, Customer Login Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-customer
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILandlordProfitLossRowModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILandlordProfitLossRowModel::OAILandlordProfitLossRowModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILandlordProfitLossRowModel::OAILandlordProfitLossRowModel() {
    this->initializeModel();
}

OAILandlordProfitLossRowModel::~OAILandlordProfitLossRowModel() {}

void OAILandlordProfitLossRowModel::initializeModel() {

    m_month_totals_isSet = false;
    m_month_totals_isValid = false;

    m_nominal_code_isSet = false;
    m_nominal_code_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;
}

void OAILandlordProfitLossRowModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILandlordProfitLossRowModel::fromJsonObject(QJsonObject json) {

    m_month_totals_isValid = ::OpenAPI::fromJsonValue(m_month_totals, json[QString("MonthTotals")]);
    m_month_totals_isSet = !json[QString("MonthTotals")].isNull() && m_month_totals_isValid;

    m_nominal_code_isValid = ::OpenAPI::fromJsonValue(m_nominal_code, json[QString("NominalCode")]);
    m_nominal_code_isSet = !json[QString("NominalCode")].isNull() && m_nominal_code_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("Title")]);
    m_title_isSet = !json[QString("Title")].isNull() && m_title_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("Total")]);
    m_total_isSet = !json[QString("Total")].isNull() && m_total_isValid;
}

QString OAILandlordProfitLossRowModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILandlordProfitLossRowModel::asJsonObject() const {
    QJsonObject obj;
    if (m_month_totals.size() > 0) {
        obj.insert(QString("MonthTotals"), ::OpenAPI::toJsonValue(m_month_totals));
    }
    if (m_nominal_code_isSet) {
        obj.insert(QString("NominalCode"), ::OpenAPI::toJsonValue(m_nominal_code));
    }
    if (m_title_isSet) {
        obj.insert(QString("Title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_total_isSet) {
        obj.insert(QString("Total"), ::OpenAPI::toJsonValue(m_total));
    }
    return obj;
}

QList<OAIKeyValuePair_String_String_> OAILandlordProfitLossRowModel::getMonthTotals() const {
    return m_month_totals;
}
void OAILandlordProfitLossRowModel::setMonthTotals(const QList<OAIKeyValuePair_String_String_> &month_totals) {
    m_month_totals = month_totals;
    m_month_totals_isSet = true;
}

bool OAILandlordProfitLossRowModel::is_month_totals_Set() const{
    return m_month_totals_isSet;
}

bool OAILandlordProfitLossRowModel::is_month_totals_Valid() const{
    return m_month_totals_isValid;
}

QString OAILandlordProfitLossRowModel::getNominalCode() const {
    return m_nominal_code;
}
void OAILandlordProfitLossRowModel::setNominalCode(const QString &nominal_code) {
    m_nominal_code = nominal_code;
    m_nominal_code_isSet = true;
}

bool OAILandlordProfitLossRowModel::is_nominal_code_Set() const{
    return m_nominal_code_isSet;
}

bool OAILandlordProfitLossRowModel::is_nominal_code_Valid() const{
    return m_nominal_code_isValid;
}

QString OAILandlordProfitLossRowModel::getTitle() const {
    return m_title;
}
void OAILandlordProfitLossRowModel::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAILandlordProfitLossRowModel::is_title_Set() const{
    return m_title_isSet;
}

bool OAILandlordProfitLossRowModel::is_title_Valid() const{
    return m_title_isValid;
}

QString OAILandlordProfitLossRowModel::getTotal() const {
    return m_total;
}
void OAILandlordProfitLossRowModel::setTotal(const QString &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAILandlordProfitLossRowModel::is_total_Set() const{
    return m_total_isSet;
}

bool OAILandlordProfitLossRowModel::is_total_Valid() const{
    return m_total_isValid;
}

bool OAILandlordProfitLossRowModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_month_totals.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_nominal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILandlordProfitLossRowModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
