/**
 * agentOS Api V2, Customer Login Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-customer
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILandlordProfitLossModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILandlordProfitLossModel::OAILandlordProfitLossModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILandlordProfitLossModel::OAILandlordProfitLossModel() {
    this->initializeModel();
}

OAILandlordProfitLossModel::~OAILandlordProfitLossModel() {}

void OAILandlordProfitLossModel::initializeModel() {

    m_direct_costs_isSet = false;
    m_direct_costs_isValid = false;

    m_gross_profit_loss_isSet = false;
    m_gross_profit_loss_isValid = false;

    m_income_isSet = false;
    m_income_isValid = false;
}

void OAILandlordProfitLossModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILandlordProfitLossModel::fromJsonObject(QJsonObject json) {

    m_direct_costs_isValid = ::OpenAPI::fromJsonValue(m_direct_costs, json[QString("DirectCosts")]);
    m_direct_costs_isSet = !json[QString("DirectCosts")].isNull() && m_direct_costs_isValid;

    m_gross_profit_loss_isValid = ::OpenAPI::fromJsonValue(m_gross_profit_loss, json[QString("GrossProfitLoss")]);
    m_gross_profit_loss_isSet = !json[QString("GrossProfitLoss")].isNull() && m_gross_profit_loss_isValid;

    m_income_isValid = ::OpenAPI::fromJsonValue(m_income, json[QString("Income")]);
    m_income_isSet = !json[QString("Income")].isNull() && m_income_isValid;
}

QString OAILandlordProfitLossModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILandlordProfitLossModel::asJsonObject() const {
    QJsonObject obj;
    if (m_direct_costs.isSet()) {
        obj.insert(QString("DirectCosts"), ::OpenAPI::toJsonValue(m_direct_costs));
    }
    if (m_gross_profit_loss.isSet()) {
        obj.insert(QString("GrossProfitLoss"), ::OpenAPI::toJsonValue(m_gross_profit_loss));
    }
    if (m_income.isSet()) {
        obj.insert(QString("Income"), ::OpenAPI::toJsonValue(m_income));
    }
    return obj;
}

OAILandlordProfitLossSectionModel OAILandlordProfitLossModel::getDirectCosts() const {
    return m_direct_costs;
}
void OAILandlordProfitLossModel::setDirectCosts(const OAILandlordProfitLossSectionModel &direct_costs) {
    m_direct_costs = direct_costs;
    m_direct_costs_isSet = true;
}

bool OAILandlordProfitLossModel::is_direct_costs_Set() const{
    return m_direct_costs_isSet;
}

bool OAILandlordProfitLossModel::is_direct_costs_Valid() const{
    return m_direct_costs_isValid;
}

OAILandlordProfitLossSectionModel OAILandlordProfitLossModel::getGrossProfitLoss() const {
    return m_gross_profit_loss;
}
void OAILandlordProfitLossModel::setGrossProfitLoss(const OAILandlordProfitLossSectionModel &gross_profit_loss) {
    m_gross_profit_loss = gross_profit_loss;
    m_gross_profit_loss_isSet = true;
}

bool OAILandlordProfitLossModel::is_gross_profit_loss_Set() const{
    return m_gross_profit_loss_isSet;
}

bool OAILandlordProfitLossModel::is_gross_profit_loss_Valid() const{
    return m_gross_profit_loss_isValid;
}

OAILandlordProfitLossSectionModel OAILandlordProfitLossModel::getIncome() const {
    return m_income;
}
void OAILandlordProfitLossModel::setIncome(const OAILandlordProfitLossSectionModel &income) {
    m_income = income;
    m_income_isSet = true;
}

bool OAILandlordProfitLossModel::is_income_Set() const{
    return m_income_isSet;
}

bool OAILandlordProfitLossModel::is_income_Valid() const{
    return m_income_isValid;
}

bool OAILandlordProfitLossModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_direct_costs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gross_profit_loss.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_income.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILandlordProfitLossModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
