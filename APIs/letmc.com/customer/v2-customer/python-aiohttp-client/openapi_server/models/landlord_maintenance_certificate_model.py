# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lettings_landlord_document import LettingsLandlordDocument
from openapi_server import util


class LandlordMaintenanceCertificateModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, due: datetime=None, files: List[LettingsLandlordDocument]=None, status: str=None, type: str=None):
        """LandlordMaintenanceCertificateModel - a model defined in OpenAPI

        :param due: The due of this LandlordMaintenanceCertificateModel.
        :param files: The files of this LandlordMaintenanceCertificateModel.
        :param status: The status of this LandlordMaintenanceCertificateModel.
        :param type: The type of this LandlordMaintenanceCertificateModel.
        """
        self.openapi_types = {
            'due': datetime,
            'files': List[LettingsLandlordDocument],
            'status': str,
            'type': str
        }

        self.attribute_map = {
            'due': 'Due',
            'files': 'Files',
            'status': 'Status',
            'type': 'Type'
        }

        self._due = due
        self._files = files
        self._status = status
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LandlordMaintenanceCertificateModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LandlordMaintenanceCertificateModel of this LandlordMaintenanceCertificateModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def due(self):
        """Gets the due of this LandlordMaintenanceCertificateModel.

        Due

        :return: The due of this LandlordMaintenanceCertificateModel.
        :rtype: datetime
        """
        return self._due

    @due.setter
    def due(self, due):
        """Sets the due of this LandlordMaintenanceCertificateModel.

        Due

        :param due: The due of this LandlordMaintenanceCertificateModel.
        :type due: datetime
        """

        self._due = due

    @property
    def files(self):
        """Gets the files of this LandlordMaintenanceCertificateModel.

        Files

        :return: The files of this LandlordMaintenanceCertificateModel.
        :rtype: List[LettingsLandlordDocument]
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this LandlordMaintenanceCertificateModel.

        Files

        :param files: The files of this LandlordMaintenanceCertificateModel.
        :type files: List[LettingsLandlordDocument]
        """

        self._files = files

    @property
    def status(self):
        """Gets the status of this LandlordMaintenanceCertificateModel.

        Status.

        :return: The status of this LandlordMaintenanceCertificateModel.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this LandlordMaintenanceCertificateModel.

        Status.

        :param status: The status of this LandlordMaintenanceCertificateModel.
        :type status: str
        """

        self._status = status

    @property
    def type(self):
        """Gets the type of this LandlordMaintenanceCertificateModel.

        Type

        :return: The type of this LandlordMaintenanceCertificateModel.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this LandlordMaintenanceCertificateModel.

        Type

        :param type: The type of this LandlordMaintenanceCertificateModel.
        :type type: str
        """

        self._type = type
