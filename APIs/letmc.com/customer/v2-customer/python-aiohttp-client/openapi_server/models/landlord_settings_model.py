# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.landlord_details_model import LandlordDetailsModel
from openapi_server import util


class LandlordSettingsModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, linked_accounts: List[LandlordDetailsModel]=None):
        """LandlordSettingsModel - a model defined in OpenAPI

        :param linked_accounts: The linked_accounts of this LandlordSettingsModel.
        """
        self.openapi_types = {
            'linked_accounts': List[LandlordDetailsModel]
        }

        self.attribute_map = {
            'linked_accounts': 'LinkedAccounts'
        }

        self._linked_accounts = linked_accounts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LandlordSettingsModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LandlordSettingsModel of this LandlordSettingsModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def linked_accounts(self):
        """Gets the linked_accounts of this LandlordSettingsModel.

        Linked Accounts

        :return: The linked_accounts of this LandlordSettingsModel.
        :rtype: List[LandlordDetailsModel]
        """
        return self._linked_accounts

    @linked_accounts.setter
    def linked_accounts(self, linked_accounts):
        """Sets the linked_accounts of this LandlordSettingsModel.

        Linked Accounts

        :param linked_accounts: The linked_accounts of this LandlordSettingsModel.
        :type linked_accounts: List[LandlordDetailsModel]
        """

        self._linked_accounts = linked_accounts
