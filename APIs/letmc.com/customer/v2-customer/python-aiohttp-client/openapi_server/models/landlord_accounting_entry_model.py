# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LandlordAccountingEntryModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: float=None, _date: datetime=None, description: str=None, transaction_number: int=None):
        """LandlordAccountingEntryModel - a model defined in OpenAPI

        :param amount: The amount of this LandlordAccountingEntryModel.
        :param _date: The _date of this LandlordAccountingEntryModel.
        :param description: The description of this LandlordAccountingEntryModel.
        :param transaction_number: The transaction_number of this LandlordAccountingEntryModel.
        """
        self.openapi_types = {
            'amount': float,
            '_date': datetime,
            'description': str,
            'transaction_number': int
        }

        self.attribute_map = {
            'amount': 'Amount',
            '_date': 'Date',
            'description': 'Description',
            'transaction_number': 'TransactionNumber'
        }

        self._amount = amount
        self.__date = _date
        self._description = description
        self._transaction_number = transaction_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LandlordAccountingEntryModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LandlordAccountingEntryModel of this LandlordAccountingEntryModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this LandlordAccountingEntryModel.

        Amount

        :return: The amount of this LandlordAccountingEntryModel.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this LandlordAccountingEntryModel.

        Amount

        :param amount: The amount of this LandlordAccountingEntryModel.
        :type amount: float
        """

        self._amount = amount

    @property
    def _date(self):
        """Gets the _date of this LandlordAccountingEntryModel.

        Payment Date

        :return: The _date of this LandlordAccountingEntryModel.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this LandlordAccountingEntryModel.

        Payment Date

        :param _date: The _date of this LandlordAccountingEntryModel.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def description(self):
        """Gets the description of this LandlordAccountingEntryModel.

        Description.

        :return: The description of this LandlordAccountingEntryModel.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this LandlordAccountingEntryModel.

        Description.

        :param description: The description of this LandlordAccountingEntryModel.
        :type description: str
        """

        self._description = description

    @property
    def transaction_number(self):
        """Gets the transaction_number of this LandlordAccountingEntryModel.

        Transaction Number

        :return: The transaction_number of this LandlordAccountingEntryModel.
        :rtype: int
        """
        return self._transaction_number

    @transaction_number.setter
    def transaction_number(self, transaction_number):
        """Sets the transaction_number of this LandlordAccountingEntryModel.

        Transaction Number

        :param transaction_number: The transaction_number of this LandlordAccountingEntryModel.
        :type transaction_number: int
        """

        self._transaction_number = transaction_number
