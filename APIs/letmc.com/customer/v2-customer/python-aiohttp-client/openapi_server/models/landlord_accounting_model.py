# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.landlord_accounting_entry_model import LandlordAccountingEntryModel
from openapi_server.models.landlord_accounting_invoice_model import LandlordAccountingInvoiceModel
from openapi_server import util


class LandlordAccountingModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_balance: float=None, last_payment: datetime=None, payment_history: List[LandlordAccountingEntryModel]=None, statements: List[LandlordAccountingInvoiceModel]=None):
        """LandlordAccountingModel - a model defined in OpenAPI

        :param account_balance: The account_balance of this LandlordAccountingModel.
        :param last_payment: The last_payment of this LandlordAccountingModel.
        :param payment_history: The payment_history of this LandlordAccountingModel.
        :param statements: The statements of this LandlordAccountingModel.
        """
        self.openapi_types = {
            'account_balance': float,
            'last_payment': datetime,
            'payment_history': List[LandlordAccountingEntryModel],
            'statements': List[LandlordAccountingInvoiceModel]
        }

        self.attribute_map = {
            'account_balance': 'AccountBalance',
            'last_payment': 'LastPayment',
            'payment_history': 'PaymentHistory',
            'statements': 'Statements'
        }

        self._account_balance = account_balance
        self._last_payment = last_payment
        self._payment_history = payment_history
        self._statements = statements

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LandlordAccountingModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LandlordAccountingModel of this LandlordAccountingModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_balance(self):
        """Gets the account_balance of this LandlordAccountingModel.

        Account Balance

        :return: The account_balance of this LandlordAccountingModel.
        :rtype: float
        """
        return self._account_balance

    @account_balance.setter
    def account_balance(self, account_balance):
        """Sets the account_balance of this LandlordAccountingModel.

        Account Balance

        :param account_balance: The account_balance of this LandlordAccountingModel.
        :type account_balance: float
        """

        self._account_balance = account_balance

    @property
    def last_payment(self):
        """Gets the last_payment of this LandlordAccountingModel.

        Last Payment Made

        :return: The last_payment of this LandlordAccountingModel.
        :rtype: datetime
        """
        return self._last_payment

    @last_payment.setter
    def last_payment(self, last_payment):
        """Sets the last_payment of this LandlordAccountingModel.

        Last Payment Made

        :param last_payment: The last_payment of this LandlordAccountingModel.
        :type last_payment: datetime
        """

        self._last_payment = last_payment

    @property
    def payment_history(self):
        """Gets the payment_history of this LandlordAccountingModel.

        Payment History

        :return: The payment_history of this LandlordAccountingModel.
        :rtype: List[LandlordAccountingEntryModel]
        """
        return self._payment_history

    @payment_history.setter
    def payment_history(self, payment_history):
        """Sets the payment_history of this LandlordAccountingModel.

        Payment History

        :param payment_history: The payment_history of this LandlordAccountingModel.
        :type payment_history: List[LandlordAccountingEntryModel]
        """

        self._payment_history = payment_history

    @property
    def statements(self):
        """Gets the statements of this LandlordAccountingModel.

        Statements

        :return: The statements of this LandlordAccountingModel.
        :rtype: List[LandlordAccountingInvoiceModel]
        """
        return self._statements

    @statements.setter
    def statements(self, statements):
        """Sets the statements of this LandlordAccountingModel.

        Statements

        :param statements: The statements of this LandlordAccountingModel.
        :type statements: List[LandlordAccountingInvoiceModel]
        """

        self._statements = statements
