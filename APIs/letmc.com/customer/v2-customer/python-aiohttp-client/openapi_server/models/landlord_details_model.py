# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LandlordDetailsModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, email: str=None, global_reference: str=None, id: str=None, mobile: str=None, name: str=None, phone: str=None):
        """LandlordDetailsModel - a model defined in OpenAPI

        :param address: The address of this LandlordDetailsModel.
        :param email: The email of this LandlordDetailsModel.
        :param global_reference: The global_reference of this LandlordDetailsModel.
        :param id: The id of this LandlordDetailsModel.
        :param mobile: The mobile of this LandlordDetailsModel.
        :param name: The name of this LandlordDetailsModel.
        :param phone: The phone of this LandlordDetailsModel.
        """
        self.openapi_types = {
            'address': str,
            'email': str,
            'global_reference': str,
            'id': str,
            'mobile': str,
            'name': str,
            'phone': str
        }

        self.attribute_map = {
            'address': 'Address',
            'email': 'Email',
            'global_reference': 'GlobalReference',
            'id': 'ID',
            'mobile': 'Mobile',
            'name': 'Name',
            'phone': 'Phone'
        }

        self._address = address
        self._email = email
        self._global_reference = global_reference
        self._id = id
        self._mobile = mobile
        self._name = name
        self._phone = phone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LandlordDetailsModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LandlordDetailsModel of this LandlordDetailsModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this LandlordDetailsModel.

        Address

        :return: The address of this LandlordDetailsModel.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this LandlordDetailsModel.

        Address

        :param address: The address of this LandlordDetailsModel.
        :type address: str
        """

        self._address = address

    @property
    def email(self):
        """Gets the email of this LandlordDetailsModel.

        Email

        :return: The email of this LandlordDetailsModel.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this LandlordDetailsModel.

        Email

        :param email: The email of this LandlordDetailsModel.
        :type email: str
        """

        self._email = email

    @property
    def global_reference(self):
        """Gets the global_reference of this LandlordDetailsModel.

        User Friendly ID

        :return: The global_reference of this LandlordDetailsModel.
        :rtype: str
        """
        return self._global_reference

    @global_reference.setter
    def global_reference(self, global_reference):
        """Sets the global_reference of this LandlordDetailsModel.

        User Friendly ID

        :param global_reference: The global_reference of this LandlordDetailsModel.
        :type global_reference: str
        """

        self._global_reference = global_reference

    @property
    def id(self):
        """Gets the id of this LandlordDetailsModel.

        ID

        :return: The id of this LandlordDetailsModel.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LandlordDetailsModel.

        ID

        :param id: The id of this LandlordDetailsModel.
        :type id: str
        """

        self._id = id

    @property
    def mobile(self):
        """Gets the mobile of this LandlordDetailsModel.

        Mobile

        :return: The mobile of this LandlordDetailsModel.
        :rtype: str
        """
        return self._mobile

    @mobile.setter
    def mobile(self, mobile):
        """Sets the mobile of this LandlordDetailsModel.

        Mobile

        :param mobile: The mobile of this LandlordDetailsModel.
        :type mobile: str
        """

        self._mobile = mobile

    @property
    def name(self):
        """Gets the name of this LandlordDetailsModel.

        Name

        :return: The name of this LandlordDetailsModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LandlordDetailsModel.

        Name

        :param name: The name of this LandlordDetailsModel.
        :type name: str
        """

        self._name = name

    @property
    def phone(self):
        """Gets the phone of this LandlordDetailsModel.

        Phone

        :return: The phone of this LandlordDetailsModel.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this LandlordDetailsModel.

        Phone

        :param phone: The phone of this LandlordDetailsModel.
        :type phone: str
        """

        self._phone = phone
