# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.landlord_lettings_inspection_model import LandlordLettingsInspectionModel
from openapi_server.models.landlord_maintenance_certificate_model import LandlordMaintenanceCertificateModel
from openapi_server.models.landlord_maintenance_preference_model import LandlordMaintenancePreferenceModel
from openapi_server.models.lettings_landlord_document import LettingsLandlordDocument
from openapi_server import util


class LandlordTenancyModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actual_end_date: datetime=None, beds: int=None, bond: float=None, branch_id: str=None, certificates: List[LandlordMaintenanceCertificateModel]=None, documents: List[LettingsLandlordDocument]=None, fixed_date: datetime=None, global_reference: str=None, id: str=None, inspections: List[LandlordLettingsInspectionModel]=None, managed_rent: bool=None, preferences: List[LandlordMaintenancePreferenceModel]=None, previous_rent_amount: float=None, property_address: str=None, rent: str=None, rent_amount: float=None, start_date: datetime=None, tenancy_property: str=None, tenancy_state: str=None, tenants: List[str]=None):
        """LandlordTenancyModel - a model defined in OpenAPI

        :param actual_end_date: The actual_end_date of this LandlordTenancyModel.
        :param beds: The beds of this LandlordTenancyModel.
        :param bond: The bond of this LandlordTenancyModel.
        :param branch_id: The branch_id of this LandlordTenancyModel.
        :param certificates: The certificates of this LandlordTenancyModel.
        :param documents: The documents of this LandlordTenancyModel.
        :param fixed_date: The fixed_date of this LandlordTenancyModel.
        :param global_reference: The global_reference of this LandlordTenancyModel.
        :param id: The id of this LandlordTenancyModel.
        :param inspections: The inspections of this LandlordTenancyModel.
        :param managed_rent: The managed_rent of this LandlordTenancyModel.
        :param preferences: The preferences of this LandlordTenancyModel.
        :param previous_rent_amount: The previous_rent_amount of this LandlordTenancyModel.
        :param property_address: The property_address of this LandlordTenancyModel.
        :param rent: The rent of this LandlordTenancyModel.
        :param rent_amount: The rent_amount of this LandlordTenancyModel.
        :param start_date: The start_date of this LandlordTenancyModel.
        :param tenancy_property: The tenancy_property of this LandlordTenancyModel.
        :param tenancy_state: The tenancy_state of this LandlordTenancyModel.
        :param tenants: The tenants of this LandlordTenancyModel.
        """
        self.openapi_types = {
            'actual_end_date': datetime,
            'beds': int,
            'bond': float,
            'branch_id': str,
            'certificates': List[LandlordMaintenanceCertificateModel],
            'documents': List[LettingsLandlordDocument],
            'fixed_date': datetime,
            'global_reference': str,
            'id': str,
            'inspections': List[LandlordLettingsInspectionModel],
            'managed_rent': bool,
            'preferences': List[LandlordMaintenancePreferenceModel],
            'previous_rent_amount': float,
            'property_address': str,
            'rent': str,
            'rent_amount': float,
            'start_date': datetime,
            'tenancy_property': str,
            'tenancy_state': str,
            'tenants': List[str]
        }

        self.attribute_map = {
            'actual_end_date': 'ActualEndDate',
            'beds': 'Beds',
            'bond': 'Bond',
            'branch_id': 'BranchID',
            'certificates': 'Certificates',
            'documents': 'Documents',
            'fixed_date': 'FixedDate',
            'global_reference': 'GlobalReference',
            'id': 'ID',
            'inspections': 'Inspections',
            'managed_rent': 'ManagedRent',
            'preferences': 'Preferences',
            'previous_rent_amount': 'PreviousRentAmount',
            'property_address': 'PropertyAddress',
            'rent': 'Rent',
            'rent_amount': 'RentAmount',
            'start_date': 'StartDate',
            'tenancy_property': 'TenancyProperty',
            'tenancy_state': 'TenancyState',
            'tenants': 'Tenants'
        }

        self._actual_end_date = actual_end_date
        self._beds = beds
        self._bond = bond
        self._branch_id = branch_id
        self._certificates = certificates
        self._documents = documents
        self._fixed_date = fixed_date
        self._global_reference = global_reference
        self._id = id
        self._inspections = inspections
        self._managed_rent = managed_rent
        self._preferences = preferences
        self._previous_rent_amount = previous_rent_amount
        self._property_address = property_address
        self._rent = rent
        self._rent_amount = rent_amount
        self._start_date = start_date
        self._tenancy_property = tenancy_property
        self._tenancy_state = tenancy_state
        self._tenants = tenants

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LandlordTenancyModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LandlordTenancyModel of this LandlordTenancyModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actual_end_date(self):
        """Gets the actual_end_date of this LandlordTenancyModel.

        Actual End Date

        :return: The actual_end_date of this LandlordTenancyModel.
        :rtype: datetime
        """
        return self._actual_end_date

    @actual_end_date.setter
    def actual_end_date(self, actual_end_date):
        """Sets the actual_end_date of this LandlordTenancyModel.

        Actual End Date

        :param actual_end_date: The actual_end_date of this LandlordTenancyModel.
        :type actual_end_date: datetime
        """

        self._actual_end_date = actual_end_date

    @property
    def beds(self):
        """Gets the beds of this LandlordTenancyModel.

        Beds

        :return: The beds of this LandlordTenancyModel.
        :rtype: int
        """
        return self._beds

    @beds.setter
    def beds(self, beds):
        """Sets the beds of this LandlordTenancyModel.

        Beds

        :param beds: The beds of this LandlordTenancyModel.
        :type beds: int
        """

        self._beds = beds

    @property
    def bond(self):
        """Gets the bond of this LandlordTenancyModel.

        Bond

        :return: The bond of this LandlordTenancyModel.
        :rtype: float
        """
        return self._bond

    @bond.setter
    def bond(self, bond):
        """Sets the bond of this LandlordTenancyModel.

        Bond

        :param bond: The bond of this LandlordTenancyModel.
        :type bond: float
        """

        self._bond = bond

    @property
    def branch_id(self):
        """Gets the branch_id of this LandlordTenancyModel.

        The tenancy branch ID:-

        :return: The branch_id of this LandlordTenancyModel.
        :rtype: str
        """
        return self._branch_id

    @branch_id.setter
    def branch_id(self, branch_id):
        """Sets the branch_id of this LandlordTenancyModel.

        The tenancy branch ID:-

        :param branch_id: The branch_id of this LandlordTenancyModel.
        :type branch_id: str
        """

        self._branch_id = branch_id

    @property
    def certificates(self):
        """Gets the certificates of this LandlordTenancyModel.

        Maintenance Certificates.

        :return: The certificates of this LandlordTenancyModel.
        :rtype: List[LandlordMaintenanceCertificateModel]
        """
        return self._certificates

    @certificates.setter
    def certificates(self, certificates):
        """Sets the certificates of this LandlordTenancyModel.

        Maintenance Certificates.

        :param certificates: The certificates of this LandlordTenancyModel.
        :type certificates: List[LandlordMaintenanceCertificateModel]
        """

        self._certificates = certificates

    @property
    def documents(self):
        """Gets the documents of this LandlordTenancyModel.

        Tenancy documents:-

        :return: The documents of this LandlordTenancyModel.
        :rtype: List[LettingsLandlordDocument]
        """
        return self._documents

    @documents.setter
    def documents(self, documents):
        """Sets the documents of this LandlordTenancyModel.

        Tenancy documents:-

        :param documents: The documents of this LandlordTenancyModel.
        :type documents: List[LettingsLandlordDocument]
        """

        self._documents = documents

    @property
    def fixed_date(self):
        """Gets the fixed_date of this LandlordTenancyModel.

        Fixed Date

        :return: The fixed_date of this LandlordTenancyModel.
        :rtype: datetime
        """
        return self._fixed_date

    @fixed_date.setter
    def fixed_date(self, fixed_date):
        """Sets the fixed_date of this LandlordTenancyModel.

        Fixed Date

        :param fixed_date: The fixed_date of this LandlordTenancyModel.
        :type fixed_date: datetime
        """

        self._fixed_date = fixed_date

    @property
    def global_reference(self):
        """Gets the global_reference of this LandlordTenancyModel.

        User Friendly ID

        :return: The global_reference of this LandlordTenancyModel.
        :rtype: str
        """
        return self._global_reference

    @global_reference.setter
    def global_reference(self, global_reference):
        """Sets the global_reference of this LandlordTenancyModel.

        User Friendly ID

        :param global_reference: The global_reference of this LandlordTenancyModel.
        :type global_reference: str
        """

        self._global_reference = global_reference

    @property
    def id(self):
        """Gets the id of this LandlordTenancyModel.

        ID

        :return: The id of this LandlordTenancyModel.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LandlordTenancyModel.

        ID

        :param id: The id of this LandlordTenancyModel.
        :type id: str
        """

        self._id = id

    @property
    def inspections(self):
        """Gets the inspections of this LandlordTenancyModel.

        Inspections

        :return: The inspections of this LandlordTenancyModel.
        :rtype: List[LandlordLettingsInspectionModel]
        """
        return self._inspections

    @inspections.setter
    def inspections(self, inspections):
        """Sets the inspections of this LandlordTenancyModel.

        Inspections

        :param inspections: The inspections of this LandlordTenancyModel.
        :type inspections: List[LandlordLettingsInspectionModel]
        """

        self._inspections = inspections

    @property
    def managed_rent(self):
        """Gets the managed_rent of this LandlordTenancyModel.

        State of the tenancy

        :return: The managed_rent of this LandlordTenancyModel.
        :rtype: bool
        """
        return self._managed_rent

    @managed_rent.setter
    def managed_rent(self, managed_rent):
        """Sets the managed_rent of this LandlordTenancyModel.

        State of the tenancy

        :param managed_rent: The managed_rent of this LandlordTenancyModel.
        :type managed_rent: bool
        """

        self._managed_rent = managed_rent

    @property
    def preferences(self):
        """Gets the preferences of this LandlordTenancyModel.

        Maintenance Preferences.

        :return: The preferences of this LandlordTenancyModel.
        :rtype: List[LandlordMaintenancePreferenceModel]
        """
        return self._preferences

    @preferences.setter
    def preferences(self, preferences):
        """Sets the preferences of this LandlordTenancyModel.

        Maintenance Preferences.

        :param preferences: The preferences of this LandlordTenancyModel.
        :type preferences: List[LandlordMaintenancePreferenceModel]
        """

        self._preferences = preferences

    @property
    def previous_rent_amount(self):
        """Gets the previous_rent_amount of this LandlordTenancyModel.

        Previous Rent Amount

        :return: The previous_rent_amount of this LandlordTenancyModel.
        :rtype: float
        """
        return self._previous_rent_amount

    @previous_rent_amount.setter
    def previous_rent_amount(self, previous_rent_amount):
        """Sets the previous_rent_amount of this LandlordTenancyModel.

        Previous Rent Amount

        :param previous_rent_amount: The previous_rent_amount of this LandlordTenancyModel.
        :type previous_rent_amount: float
        """

        self._previous_rent_amount = previous_rent_amount

    @property
    def property_address(self):
        """Gets the property_address of this LandlordTenancyModel.

        Display Property Address

        :return: The property_address of this LandlordTenancyModel.
        :rtype: str
        """
        return self._property_address

    @property_address.setter
    def property_address(self, property_address):
        """Sets the property_address of this LandlordTenancyModel.

        Display Property Address

        :param property_address: The property_address of this LandlordTenancyModel.
        :type property_address: str
        """

        self._property_address = property_address

    @property
    def rent(self):
        """Gets the rent of this LandlordTenancyModel.

        Rent

        :return: The rent of this LandlordTenancyModel.
        :rtype: str
        """
        return self._rent

    @rent.setter
    def rent(self, rent):
        """Sets the rent of this LandlordTenancyModel.

        Rent

        :param rent: The rent of this LandlordTenancyModel.
        :type rent: str
        """

        self._rent = rent

    @property
    def rent_amount(self):
        """Gets the rent_amount of this LandlordTenancyModel.

        Rent Amount

        :return: The rent_amount of this LandlordTenancyModel.
        :rtype: float
        """
        return self._rent_amount

    @rent_amount.setter
    def rent_amount(self, rent_amount):
        """Sets the rent_amount of this LandlordTenancyModel.

        Rent Amount

        :param rent_amount: The rent_amount of this LandlordTenancyModel.
        :type rent_amount: float
        """

        self._rent_amount = rent_amount

    @property
    def start_date(self):
        """Gets the start_date of this LandlordTenancyModel.

        Start Date

        :return: The start_date of this LandlordTenancyModel.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this LandlordTenancyModel.

        Start Date

        :param start_date: The start_date of this LandlordTenancyModel.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def tenancy_property(self):
        """Gets the tenancy_property of this LandlordTenancyModel.

        Tenancy Property

        :return: The tenancy_property of this LandlordTenancyModel.
        :rtype: str
        """
        return self._tenancy_property

    @tenancy_property.setter
    def tenancy_property(self, tenancy_property):
        """Sets the tenancy_property of this LandlordTenancyModel.

        Tenancy Property

        :param tenancy_property: The tenancy_property of this LandlordTenancyModel.
        :type tenancy_property: str
        """

        self._tenancy_property = tenancy_property

    @property
    def tenancy_state(self):
        """Gets the tenancy_state of this LandlordTenancyModel.

        State of the tenancy

        :return: The tenancy_state of this LandlordTenancyModel.
        :rtype: str
        """
        return self._tenancy_state

    @tenancy_state.setter
    def tenancy_state(self, tenancy_state):
        """Sets the tenancy_state of this LandlordTenancyModel.

        State of the tenancy

        :param tenancy_state: The tenancy_state of this LandlordTenancyModel.
        :type tenancy_state: str
        """

        self._tenancy_state = tenancy_state

    @property
    def tenants(self):
        """Gets the tenants of this LandlordTenancyModel.

        Tenants

        :return: The tenants of this LandlordTenancyModel.
        :rtype: List[str]
        """
        return self._tenants

    @tenants.setter
    def tenants(self, tenants):
        """Sets the tenants of this LandlordTenancyModel.

        Tenants

        :param tenants: The tenants of this LandlordTenancyModel.
        :type tenants: List[str]
        """

        self._tenants = tenants
