# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.landlord_chase_note_model import LandlordChaseNoteModel
from openapi_server.models.landlord_rent_oustanding_item import LandlordRentOustandingItem
from openapi_server import util


class LandlordRentArrearsModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chase_notes: List[LandlordChaseNoteModel]=None, rent_collected: float=None, rent_outstanding: List[LandlordRentOustandingItem]=None, total_rent_arrears: float=None):
        """LandlordRentArrearsModel - a model defined in OpenAPI

        :param chase_notes: The chase_notes of this LandlordRentArrearsModel.
        :param rent_collected: The rent_collected of this LandlordRentArrearsModel.
        :param rent_outstanding: The rent_outstanding of this LandlordRentArrearsModel.
        :param total_rent_arrears: The total_rent_arrears of this LandlordRentArrearsModel.
        """
        self.openapi_types = {
            'chase_notes': List[LandlordChaseNoteModel],
            'rent_collected': float,
            'rent_outstanding': List[LandlordRentOustandingItem],
            'total_rent_arrears': float
        }

        self.attribute_map = {
            'chase_notes': 'ChaseNotes',
            'rent_collected': 'RentCollected',
            'rent_outstanding': 'RentOutstanding',
            'total_rent_arrears': 'TotalRentArrears'
        }

        self._chase_notes = chase_notes
        self._rent_collected = rent_collected
        self._rent_outstanding = rent_outstanding
        self._total_rent_arrears = total_rent_arrears

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LandlordRentArrearsModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LandlordRentArrearsModel of this LandlordRentArrearsModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chase_notes(self):
        """Gets the chase_notes of this LandlordRentArrearsModel.

        Chase Notes

        :return: The chase_notes of this LandlordRentArrearsModel.
        :rtype: List[LandlordChaseNoteModel]
        """
        return self._chase_notes

    @chase_notes.setter
    def chase_notes(self, chase_notes):
        """Sets the chase_notes of this LandlordRentArrearsModel.

        Chase Notes

        :param chase_notes: The chase_notes of this LandlordRentArrearsModel.
        :type chase_notes: List[LandlordChaseNoteModel]
        """

        self._chase_notes = chase_notes

    @property
    def rent_collected(self):
        """Gets the rent_collected of this LandlordRentArrearsModel.

        Rent Collected

        :return: The rent_collected of this LandlordRentArrearsModel.
        :rtype: float
        """
        return self._rent_collected

    @rent_collected.setter
    def rent_collected(self, rent_collected):
        """Sets the rent_collected of this LandlordRentArrearsModel.

        Rent Collected

        :param rent_collected: The rent_collected of this LandlordRentArrearsModel.
        :type rent_collected: float
        """

        self._rent_collected = rent_collected

    @property
    def rent_outstanding(self):
        """Gets the rent_outstanding of this LandlordRentArrearsModel.

        Outstanding Rent

        :return: The rent_outstanding of this LandlordRentArrearsModel.
        :rtype: List[LandlordRentOustandingItem]
        """
        return self._rent_outstanding

    @rent_outstanding.setter
    def rent_outstanding(self, rent_outstanding):
        """Sets the rent_outstanding of this LandlordRentArrearsModel.

        Outstanding Rent

        :param rent_outstanding: The rent_outstanding of this LandlordRentArrearsModel.
        :type rent_outstanding: List[LandlordRentOustandingItem]
        """

        self._rent_outstanding = rent_outstanding

    @property
    def total_rent_arrears(self):
        """Gets the total_rent_arrears of this LandlordRentArrearsModel.

        Rent Arrears

        :return: The total_rent_arrears of this LandlordRentArrearsModel.
        :rtype: float
        """
        return self._total_rent_arrears

    @total_rent_arrears.setter
    def total_rent_arrears(self, total_rent_arrears):
        """Sets the total_rent_arrears of this LandlordRentArrearsModel.

        Rent Arrears

        :param total_rent_arrears: The total_rent_arrears of this LandlordRentArrearsModel.
        :type total_rent_arrears: float
        """

        self._total_rent_arrears = total_rent_arrears
