# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LandlordSummaryTenancyModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bond: float=None, branch_id: str=None, description: str=None, global_reference: str=None, id: str=None, maintenance_jobs: int=None, managed_rent: bool=None, property_address: str=None, rent: str=None, rent_arrears: float=None, rent_collected: float=None, tenancy_property: str=None, tenancy_state: str=None):
        """LandlordSummaryTenancyModel - a model defined in OpenAPI

        :param bond: The bond of this LandlordSummaryTenancyModel.
        :param branch_id: The branch_id of this LandlordSummaryTenancyModel.
        :param description: The description of this LandlordSummaryTenancyModel.
        :param global_reference: The global_reference of this LandlordSummaryTenancyModel.
        :param id: The id of this LandlordSummaryTenancyModel.
        :param maintenance_jobs: The maintenance_jobs of this LandlordSummaryTenancyModel.
        :param managed_rent: The managed_rent of this LandlordSummaryTenancyModel.
        :param property_address: The property_address of this LandlordSummaryTenancyModel.
        :param rent: The rent of this LandlordSummaryTenancyModel.
        :param rent_arrears: The rent_arrears of this LandlordSummaryTenancyModel.
        :param rent_collected: The rent_collected of this LandlordSummaryTenancyModel.
        :param tenancy_property: The tenancy_property of this LandlordSummaryTenancyModel.
        :param tenancy_state: The tenancy_state of this LandlordSummaryTenancyModel.
        """
        self.openapi_types = {
            'bond': float,
            'branch_id': str,
            'description': str,
            'global_reference': str,
            'id': str,
            'maintenance_jobs': int,
            'managed_rent': bool,
            'property_address': str,
            'rent': str,
            'rent_arrears': float,
            'rent_collected': float,
            'tenancy_property': str,
            'tenancy_state': str
        }

        self.attribute_map = {
            'bond': 'Bond',
            'branch_id': 'BranchID',
            'description': 'Description',
            'global_reference': 'GlobalReference',
            'id': 'ID',
            'maintenance_jobs': 'MaintenanceJobs',
            'managed_rent': 'ManagedRent',
            'property_address': 'PropertyAddress',
            'rent': 'Rent',
            'rent_arrears': 'RentArrears',
            'rent_collected': 'RentCollected',
            'tenancy_property': 'TenancyProperty',
            'tenancy_state': 'TenancyState'
        }

        self._bond = bond
        self._branch_id = branch_id
        self._description = description
        self._global_reference = global_reference
        self._id = id
        self._maintenance_jobs = maintenance_jobs
        self._managed_rent = managed_rent
        self._property_address = property_address
        self._rent = rent
        self._rent_arrears = rent_arrears
        self._rent_collected = rent_collected
        self._tenancy_property = tenancy_property
        self._tenancy_state = tenancy_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LandlordSummaryTenancyModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LandlordSummaryTenancyModel of this LandlordSummaryTenancyModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bond(self):
        """Gets the bond of this LandlordSummaryTenancyModel.

        Bomd

        :return: The bond of this LandlordSummaryTenancyModel.
        :rtype: float
        """
        return self._bond

    @bond.setter
    def bond(self, bond):
        """Sets the bond of this LandlordSummaryTenancyModel.

        Bomd

        :param bond: The bond of this LandlordSummaryTenancyModel.
        :type bond: float
        """

        self._bond = bond

    @property
    def branch_id(self):
        """Gets the branch_id of this LandlordSummaryTenancyModel.

        The Tenancy Branch ID

        :return: The branch_id of this LandlordSummaryTenancyModel.
        :rtype: str
        """
        return self._branch_id

    @branch_id.setter
    def branch_id(self, branch_id):
        """Sets the branch_id of this LandlordSummaryTenancyModel.

        The Tenancy Branch ID

        :param branch_id: The branch_id of this LandlordSummaryTenancyModel.
        :type branch_id: str
        """

        self._branch_id = branch_id

    @property
    def description(self):
        """Gets the description of this LandlordSummaryTenancyModel.

        Description.

        :return: The description of this LandlordSummaryTenancyModel.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this LandlordSummaryTenancyModel.

        Description.

        :param description: The description of this LandlordSummaryTenancyModel.
        :type description: str
        """

        self._description = description

    @property
    def global_reference(self):
        """Gets the global_reference of this LandlordSummaryTenancyModel.

        User Friendly ID

        :return: The global_reference of this LandlordSummaryTenancyModel.
        :rtype: str
        """
        return self._global_reference

    @global_reference.setter
    def global_reference(self, global_reference):
        """Sets the global_reference of this LandlordSummaryTenancyModel.

        User Friendly ID

        :param global_reference: The global_reference of this LandlordSummaryTenancyModel.
        :type global_reference: str
        """

        self._global_reference = global_reference

    @property
    def id(self):
        """Gets the id of this LandlordSummaryTenancyModel.

        ID

        :return: The id of this LandlordSummaryTenancyModel.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LandlordSummaryTenancyModel.

        ID

        :param id: The id of this LandlordSummaryTenancyModel.
        :type id: str
        """

        self._id = id

    @property
    def maintenance_jobs(self):
        """Gets the maintenance_jobs of this LandlordSummaryTenancyModel.

        Maintenance Jobs.

        :return: The maintenance_jobs of this LandlordSummaryTenancyModel.
        :rtype: int
        """
        return self._maintenance_jobs

    @maintenance_jobs.setter
    def maintenance_jobs(self, maintenance_jobs):
        """Sets the maintenance_jobs of this LandlordSummaryTenancyModel.

        Maintenance Jobs.

        :param maintenance_jobs: The maintenance_jobs of this LandlordSummaryTenancyModel.
        :type maintenance_jobs: int
        """

        self._maintenance_jobs = maintenance_jobs

    @property
    def managed_rent(self):
        """Gets the managed_rent of this LandlordSummaryTenancyModel.

        State of the tenancy

        :return: The managed_rent of this LandlordSummaryTenancyModel.
        :rtype: bool
        """
        return self._managed_rent

    @managed_rent.setter
    def managed_rent(self, managed_rent):
        """Sets the managed_rent of this LandlordSummaryTenancyModel.

        State of the tenancy

        :param managed_rent: The managed_rent of this LandlordSummaryTenancyModel.
        :type managed_rent: bool
        """

        self._managed_rent = managed_rent

    @property
    def property_address(self):
        """Gets the property_address of this LandlordSummaryTenancyModel.

        Display Property Address

        :return: The property_address of this LandlordSummaryTenancyModel.
        :rtype: str
        """
        return self._property_address

    @property_address.setter
    def property_address(self, property_address):
        """Sets the property_address of this LandlordSummaryTenancyModel.

        Display Property Address

        :param property_address: The property_address of this LandlordSummaryTenancyModel.
        :type property_address: str
        """

        self._property_address = property_address

    @property
    def rent(self):
        """Gets the rent of this LandlordSummaryTenancyModel.

        Rent

        :return: The rent of this LandlordSummaryTenancyModel.
        :rtype: str
        """
        return self._rent

    @rent.setter
    def rent(self, rent):
        """Sets the rent of this LandlordSummaryTenancyModel.

        Rent

        :param rent: The rent of this LandlordSummaryTenancyModel.
        :type rent: str
        """

        self._rent = rent

    @property
    def rent_arrears(self):
        """Gets the rent_arrears of this LandlordSummaryTenancyModel.

        Rent Arrears

        :return: The rent_arrears of this LandlordSummaryTenancyModel.
        :rtype: float
        """
        return self._rent_arrears

    @rent_arrears.setter
    def rent_arrears(self, rent_arrears):
        """Sets the rent_arrears of this LandlordSummaryTenancyModel.

        Rent Arrears

        :param rent_arrears: The rent_arrears of this LandlordSummaryTenancyModel.
        :type rent_arrears: float
        """

        self._rent_arrears = rent_arrears

    @property
    def rent_collected(self):
        """Gets the rent_collected of this LandlordSummaryTenancyModel.

        Rent Arrears

        :return: The rent_collected of this LandlordSummaryTenancyModel.
        :rtype: float
        """
        return self._rent_collected

    @rent_collected.setter
    def rent_collected(self, rent_collected):
        """Sets the rent_collected of this LandlordSummaryTenancyModel.

        Rent Arrears

        :param rent_collected: The rent_collected of this LandlordSummaryTenancyModel.
        :type rent_collected: float
        """

        self._rent_collected = rent_collected

    @property
    def tenancy_property(self):
        """Gets the tenancy_property of this LandlordSummaryTenancyModel.

        Tenancy Property

        :return: The tenancy_property of this LandlordSummaryTenancyModel.
        :rtype: str
        """
        return self._tenancy_property

    @tenancy_property.setter
    def tenancy_property(self, tenancy_property):
        """Sets the tenancy_property of this LandlordSummaryTenancyModel.

        Tenancy Property

        :param tenancy_property: The tenancy_property of this LandlordSummaryTenancyModel.
        :type tenancy_property: str
        """

        self._tenancy_property = tenancy_property

    @property
    def tenancy_state(self):
        """Gets the tenancy_state of this LandlordSummaryTenancyModel.

        State of the tenancy

        :return: The tenancy_state of this LandlordSummaryTenancyModel.
        :rtype: str
        """
        return self._tenancy_state

    @tenancy_state.setter
    def tenancy_state(self, tenancy_state):
        """Sets the tenancy_state of this LandlordSummaryTenancyModel.

        State of the tenancy

        :param tenancy_state: The tenancy_state of this LandlordSummaryTenancyModel.
        :type tenancy_state: str
        """

        self._tenancy_state = tenancy_state
