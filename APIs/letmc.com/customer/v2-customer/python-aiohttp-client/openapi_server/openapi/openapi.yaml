openapi: 3.0.0
info:
  contact:
    x-twitter: agentOSSoftware
  title: "agentOS Api V2, Customer Login Call Group"
  version: v2-customer
  x-apisguru-categories:
  - ecommerce
  x-logo:
    url: https://twitter.com/agentOSSoftware/profile_image?size=original
  x-origin:
  - format: openapi
    url: https://live-api.letmc.com/swagger/docs/v2-customer
    version: "3.0"
  x-providerName: letmc.com
  x-serviceName: customer
servers:
- url: https://live-api.letmc.com
paths:
  /v2/customer/{shortName}/branch/branches:
    get:
      deprecated: false
      operationId: branch_controller_get_branches
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The index of the first item to return
        explode: true
        in: query
        name: offset
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum number of items to return (up to 1000 per request)
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchModelResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/BranchModelResults'
            text/json:
              schema:
                $ref: '#/components/schemas/BranchModelResults'
            text/xml:
              schema:
                $ref: '#/components/schemas/BranchModelResults'
          description: OK
      summary: All branches defined for a company
      tags:
      - BranchController
      x-openapi-router-controller: openapi_server.controllers.branch_controller_controller
  /v2/customer/{shortName}/branch/branches/{branchID}:
    get:
      deprecated: false
      operationId: v2_customer_short_name_branch_branches_branch_idget
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The unique ID of the Branch
        explode: false
        in: path
        name: branchID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/BranchModel'
            text/json:
              schema:
                $ref: '#/components/schemas/BranchModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/BranchModel'
          description: OK
      summary: Get a specific branch given its unique Object ID (OID)
      tags:
      - BranchController
      x-openapi-router-controller: openapi_server.controllers.branch_controller_controller
  /v2/customer/{shortName}/landlord/accounting:
    get:
      deprecated: false
      operationId: landlord_controller_get_accounts
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandlordAccountingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LandlordAccountingModel'
          description: OK
      summary: Get the accounting details for the landlord.
      tags:
      - LandlordController
      x-openapi-router-controller: openapi_server.controllers.landlord_controller_controller
  /v2/customer/{shortName}/landlord/document:
    get:
      deprecated: false
      operationId: landlord_controller_get_document
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The Document ID
        explode: true
        in: query
        name: ID
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
      summary: Download a Document
      tags:
      - LandlordController
      x-openapi-router-controller: openapi_server.controllers.landlord_controller_controller
  /v2/customer/{shortName}/landlord/inventory:
    get:
      deprecated: false
      operationId: landlord_controller_get_invetory_report
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The Tenancy ID
        explode: true
        in: query
        name: tenancyID
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
      summary: Generate a Inventory PDF for a tenancy
      tags:
      - LandlordController
      x-openapi-router-controller: openapi_server.controllers.landlord_controller_controller
  /v2/customer/{shortName}/landlord/invoice:
    get:
      deprecated: false
      operationId: landlord_controller_get_invoice
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The invoice ID to load.
        explode: true
        in: query
        name: invoiceID
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
      summary: Get an invoice pdf belonging to the landlord.
      tags:
      - LandlordController
      x-openapi-router-controller: openapi_server.controllers.landlord_controller_controller
  /v2/customer/{shortName}/landlord/landlordcrmentries:
    get:
      deprecated: false
      operationId: landlord_controller_get_landlord_crm_entries
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LandlordCrmEntry'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/LandlordCrmEntry'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/LandlordCrmEntry'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/LandlordCrmEntry'
                type: array
          description: OK
      summary: Retrieve landlord's CRM ID
      tags:
      - LandlordController
      x-openapi-router-controller: openapi_server.controllers.landlord_controller_controller
  /v2/customer/{shortName}/landlord/maintenance:
    get:
      deprecated: false
      operationId: landlord_controller_get_maintenance_jobs
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandlordMaintenanceModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LandlordMaintenanceModel'
          description: OK
      summary: Get Active maintenance jobs.
      tags:
      - LandlordController
      x-openapi-router-controller: openapi_server.controllers.landlord_controller_controller
  /v2/customer/{shortName}/landlord/profitloss:
    get:
      deprecated: false
      operationId: landlord_controller_get_profit_loss_report
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandlordProfitLossModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LandlordProfitLossModel'
          description: OK
      summary: Generate a Profit and Loss Report
      tags:
      - LandlordController
      x-openapi-router-controller: openapi_server.controllers.landlord_controller_controller
  /v2/customer/{shortName}/landlord/rentarrears:
    get:
      deprecated: false
      operationId: landlord_controller_get_rent_arrears
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandlordRentArrearsModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LandlordRentArrearsModel'
          description: OK
      summary: Rent Arrears
      tags:
      - LandlordController
      x-openapi-router-controller: openapi_server.controllers.landlord_controller_controller
  /v2/customer/{shortName}/landlord/sas:
    get:
      deprecated: false
      operationId: landlord_controller_get_sas_report
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The Tax Year End.
        explode: true
        in: query
        name: yearEnd
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
      summary: Generate a Self Assessment Tax Report
      tags:
      - LandlordController
      x-openapi-router-controller: openapi_server.controllers.landlord_controller_controller
  /v2/customer/{shortName}/landlord/settings:
    get:
      deprecated: false
      operationId: landlord_controller_get_settings
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandlordSettingsModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LandlordSettingsModel'
          description: OK
      summary: Get contact details of all linked landlords.
      tags:
      - LandlordController
      x-openapi-router-controller: openapi_server.controllers.landlord_controller_controller
  /v2/customer/{shortName}/landlord/summary:
    get:
      deprecated: false
      operationId: landlord_controller_get_summary_details
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandlordSummaryModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LandlordSummaryModel'
          description: OK
      summary: Get the summary details for the landlord.
      tags:
      - LandlordController
      x-openapi-router-controller: openapi_server.controllers.landlord_controller_controller
  /v2/customer/{shortName}/landlord/tenancy:
    get:
      deprecated: false
      operationId: landlord_controller_get_tenancy
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The Tenancy ID
        explode: true
        in: query
        name: tenancyID
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandlordTenancyModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LandlordTenancyModel'
          description: OK
      summary: Get tenancy details.
      tags:
      - LandlordController
      x-openapi-router-controller: openapi_server.controllers.landlord_controller_controller
  /v2/customer/{shortName}/landlord/tenancy/maintenance/preference:
    post:
      deprecated: false
      operationId: landlord_controller_create_maintenance_preference
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The Tenancy ID
        explode: true
        in: query
        name: tenancyID
        required: true
        schema:
          type: string
        style: form
      - description: Name of the maintenance preference to add
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: Notes of the maintenance preference to add
        explode: true
        in: query
        name: notes
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/xml:
              schema:
                type: string
          description: OK
      summary: Post tenancy maintenance preferences:-
      tags:
      - LandlordController
      x-openapi-router-controller: openapi_server.controllers.landlord_controller_controller
  /v2/customer/{shortName}/landlord/tenancyagreement:
    get:
      deprecated: false
      operationId: landlord_controller_get_tenancy_agreement_report
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The Tenancy ID
        explode: true
        in: query
        name: tenancyID
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
      summary: Generate a Tenancy Agreement Copy (PDF)
      tags:
      - LandlordController
      x-openapi-router-controller: openapi_server.controllers.landlord_controller_controller
  /v2/customer/{shortName}/photo/download:
    get:
      deprecated: false
      operationId: photo_controller_get_photo_download
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The unique ID of the photo on the property
        explode: true
        in: query
        name: photoID
        required: true
        schema:
          type: string
        style: form
      - description: An optional parameter specifying the image width
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: An optional parameter specifying the image height
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
      summary: Downloads the photo of a property given the photo ID.
      tags:
      - PhotoController
      x-openapi-router-controller: openapi_server.controllers.photo_controller_controller
  /v2/customer/{shortName}/property/{propertyID}/photos:
    get:
      deprecated: false
      operationId: property_controller_get_properties_photos
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The unique ID of the Property
        explode: false
        in: path
        name: propertyID
        required: true
        schema:
          type: string
        style: simple
      - description: The index of the first item to return
        explode: true
        in: query
        name: offset
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum number of items to return (up to 1000 per request)
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandlordPhotoModelResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/LandlordPhotoModelResults'
            text/json:
              schema:
                $ref: '#/components/schemas/LandlordPhotoModelResults'
            text/xml:
              schema:
                $ref: '#/components/schemas/LandlordPhotoModelResults'
          description: OK
      summary: "A collection showing all the photos linked to a specific block, property\
        \ or room"
      tags:
      - PropertyController
      x-openapi-router-controller: openapi_server.controllers.property_controller_controller
  /v2/customer/{shortName}/session:
    delete:
      deprecated: false
      operationId: session_controller_logout
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: No Content
      summary: Logout a customer previously logged in via the Login endpoint.
      tags:
      - SessionController
      x-openapi-router-controller: openapi_server.controllers.session_controller_controller
    get:
      deprecated: false
      operationId: session_controller_get_session_info
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/xml:
              schema:
                type: string
          description: OK
      summary: Gets information about the currently logged on customer.
      tags:
      - SessionController
      x-openapi-router-controller: openapi_server.controllers.session_controller_controller
    post:
      deprecated: false
      operationId: session_controller_login
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The user's username.
        explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      - description: The user's password.
        explode: true
        in: query
        name: password
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/xml:
              schema:
                type: string
          description: OK
      summary: Login as a customer given their username and password.
      tags:
      - SessionController
      x-openapi-router-controller: openapi_server.controllers.session_controller_controller
  /v2/customer/{shortName}/session/createlandlordlogin:
    post:
      deprecated: false
      operationId: session_controller_create_landlord_login
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The email address of the landlord
        explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      - description: The title of the landlord
        explode: true
        in: query
        name: title
        required: true
        schema:
          type: string
        style: form
      - description: The forename of the landlord
        explode: true
        in: query
        name: forename
        required: true
        schema:
          type: string
        style: form
      - description: The surname of the landlord
        explode: true
        in: query
        name: surname
        required: true
        schema:
          type: string
        style: form
      - description: Address of the property linked to the landlord
        explode: true
        in: query
        name: propertyAddress
        required: true
        schema:
          type: string
        style: form
      - description: Contact details of the landlord
        explode: true
        in: query
        name: contactDetails
        required: true
        schema:
          type: string
        style: form
      - description: (Optional) The branch ID linked to the login. This will determine
          which in tray the request display in
        explode: true
        in: query
        name: branchID
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: No Content
      summary: Send a request to the in-tray to create a landlord login.
      tags:
      - SessionController
      x-openapi-router-controller: openapi_server.controllers.session_controller_controller
  /v2/customer/{shortName}/session/password:
    put:
      deprecated: false
      operationId: session_controller_change_password
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login token returned from the /session POST call
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The customer's existing password.
        explode: true
        in: query
        name: oldPassword
        required: true
        schema:
          type: string
        style: form
      - description: The customer's new password.
        explode: true
        in: query
        name: newPassword
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: No Content
      summary: Change the password of a customer given their existing and new password.
      tags:
      - SessionController
      x-openapi-router-controller: openapi_server.controllers.session_controller_controller
  /v2/customer/{shortName}/session/resetpassword:
    post:
      deprecated: false
      operationId: session_controller_reset_password
      parameters:
      - description: The unique client short-name
        explode: false
        in: path
        name: shortName
        required: true
        schema:
          type: string
        style: simple
      - description: The login Email Address.
        explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: No Content
      summary: Reset the customer's password. An email will be sent out to reset.
      tags:
      - SessionController
      x-openapi-router-controller: openapi_server.controllers.session_controller_controller
components:
  schemas:
    BranchModel:
      description: Defines a single branch of a client.
      example:
        EMailAddress: EMailAddress
        Address2: Address2
        Address3: Address3
        Address1: Address1
        OID: OID
        County: County
        Postcode: Postcode
        LandPhone: LandPhone
        Name: Name
        CompanyName: CompanyName
        ETag: ETag
        Address4: Address4
        WebAddress: WebAddress
        FaxPhone: FaxPhone
      properties:
        Address1:
          description: Branch address line 1.
          title: Address1
          type: string
        Address2:
          description: Branch address line 2.
          title: Address2
          type: string
        Address3:
          description: Branch address line 3.
          title: Address3
          type: string
        Address4:
          description: Branch address line 4.
          title: Address4
          type: string
        CompanyName:
          description: "The relevant company name, if not the one specified on the\
            \ branch then the one on company."
          title: CompanyName
          type: string
        County:
          description: County
          title: County
          type: string
        EMailAddress:
          description: Branch email address.
          title: EMailAddress
          type: string
        ETag:
          description: A unique identifier defining the object and change revision.
          title: ETag
          type: string
        FaxPhone:
          description: Branch fax phone number.
          title: FaxPhone
          type: string
        LandPhone:
          description: Branch land phone number.
          title: LandPhone
          type: string
        Name:
          description: The branch name.
          title: Name
          type: string
        OID:
          description: The unique Object ID (OID).
          title: OID
          type: string
        Postcode:
          description: Branch address postcode.
          title: Postcode
          type: string
        WebAddress:
          description: Branch web address.
          title: WebAddress
          type: string
      title: BranchModel
      type: object
    BranchModelResults:
      description: Holds results from a paged query returning BranchModel values
      example:
        Data:
        - EMailAddress: EMailAddress
          Address2: Address2
          Address3: Address3
          Address1: Address1
          OID: OID
          County: County
          Postcode: Postcode
          LandPhone: LandPhone
          Name: Name
          CompanyName: CompanyName
          ETag: ETag
          Address4: Address4
          WebAddress: WebAddress
          FaxPhone: FaxPhone
        - EMailAddress: EMailAddress
          Address2: Address2
          Address3: Address3
          Address1: Address1
          OID: OID
          County: County
          Postcode: Postcode
          LandPhone: LandPhone
          Name: Name
          CompanyName: CompanyName
          ETag: ETag
          Address4: Address4
          WebAddress: WebAddress
          FaxPhone: FaxPhone
        Count: 0
      properties:
        Count:
          description: The total number of results available for all pages
          format: int32
          title: Count
          type: integer
        Data:
          description: The resulting data returned from the paged query range
          items:
            $ref: '#/components/schemas/BranchModel'
          title: Data
          type: array
      title: BranchModelResults
      type: object
    KeyValuePair_String_String_:
      example:
        value: value
        key: key
      properties:
        key:
          title: key
          type: string
        value:
          title: value
          type: string
      title: KeyValuePair_String_String_
      type: object
    LandlordAccountingEntryModel:
      description: Landlord Accounting - Finance Entry
      example:
        Description: Description
        TransactionNumber: 1
        Amount: 6.027456183070403
        Date: 2000-01-23T04:56:07.000+00:00
      properties:
        Amount:
          description: Amount
          format: double
          title: Amount
          type: number
        Date:
          description: Payment Date
          format: date-time
          title: Date
          type: string
        Description:
          description: Description.
          title: Description
          type: string
        TransactionNumber:
          description: Transaction Number
          format: int32
          title: TransactionNumber
          type: integer
      title: LandlordAccountingEntryModel
      type: object
    LandlordAccountingInvoiceModel:
      description: Invoices
      example:
        IsMaintenanceInvoice: true
        InvoiceID: InvoiceID
        Date: 2000-01-23T04:56:07.000+00:00
      properties:
        Date:
          description: Payment Date
          format: date-time
          title: Date
          type: string
        InvoiceID:
          description: Transaction Number
          title: InvoiceID
          type: string
        IsMaintenanceInvoice:
          description: Does this invoice contain contractor payments?
          title: IsMaintenanceInvoice
          type: boolean
      title: LandlordAccountingInvoiceModel
      type: object
    LandlordAccountingModel:
      description: Landlord Accounting
      example:
        LastPayment: 2000-01-23T04:56:07.000+00:00
        PaymentHistory:
        - Description: Description
          TransactionNumber: 1
          Amount: 6.027456183070403
          Date: 2000-01-23T04:56:07.000+00:00
        - Description: Description
          TransactionNumber: 1
          Amount: 6.027456183070403
          Date: 2000-01-23T04:56:07.000+00:00
        AccountBalance: 0.8008281904610115
        Statements:
        - IsMaintenanceInvoice: true
          InvoiceID: InvoiceID
          Date: 2000-01-23T04:56:07.000+00:00
        - IsMaintenanceInvoice: true
          InvoiceID: InvoiceID
          Date: 2000-01-23T04:56:07.000+00:00
      properties:
        AccountBalance:
          description: Account Balance
          format: double
          title: AccountBalance
          type: number
        LastPayment:
          description: Last Payment Made
          format: date-time
          title: LastPayment
          type: string
        PaymentHistory:
          description: Payment History
          items:
            $ref: '#/components/schemas/LandlordAccountingEntryModel'
          title: PaymentHistory
          type: array
        Statements:
          description: Statements
          items:
            $ref: '#/components/schemas/LandlordAccountingInvoiceModel'
          title: Statements
          type: array
      title: LandlordAccountingModel
      type: object
    LandlordChaseNoteModel:
      description: Landlord Arrears Chase Note.
      example:
        TenantID: TenantID
        NoteType: NoteType
        Note: Note
        Date: 2000-01-23T04:56:07.000+00:00
      properties:
        Date:
          description: Created Date
          format: date-time
          title: Date
          type: string
        Note:
          description: Note.
          title: Note
          type: string
        NoteType:
          description: Note Type
          title: NoteType
          type: string
        TenantID:
          description: Tenant
          title: TenantID
          type: string
      title: LandlordChaseNoteModel
      type: object
    LandlordCrmEntry:
      description: Class for Landlord CRM Entries
      example:
        GlobalReference: GlobalReference
        BranchID: BranchID
        OID: OID
        Name: Name
      properties:
        BranchID:
          title: BranchID
          type: string
        GlobalReference:
          title: GlobalReference
          type: string
        Name:
          title: Name
          type: string
        OID:
          title: OID
          type: string
      title: LandlordCrmEntry
      type: object
    LandlordDetailsModel:
      description: Landlord Details
      example:
        Email: Email
        Address: Address
        GlobalReference: GlobalReference
        Phone: Phone
        ID: ID
        Mobile: Mobile
        Name: Name
      properties:
        Address:
          description: Address
          title: Address
          type: string
        Email:
          description: Email
          title: Email
          type: string
        GlobalReference:
          description: User Friendly ID
          title: GlobalReference
          type: string
        ID:
          description: ID
          title: ID
          type: string
        Mobile:
          description: Mobile
          title: Mobile
          type: string
        Name:
          description: Name
          title: Name
          type: string
        Phone:
          description: Phone
          title: Phone
          type: string
      title: LandlordDetailsModel
      type: object
    LandlordLettingsInspectionModel:
      description: Lettings Inspection
      example:
        InspectionDate: 2000-01-23T04:56:07.000+00:00
        Notes: Notes
      properties:
        InspectionDate:
          description: InspectionDate
          format: date-time
          title: InspectionDate
          type: string
        Notes:
          description: Notes
          title: Notes
          type: string
      title: LandlordLettingsInspectionModel
      type: object
    LandlordMaintenanceCertificateModel:
      description: Maintenance Certificate
      example:
        Status: Status
        Type: Type
        Due: 2000-01-23T04:56:07.000+00:00
        Files:
        - MIMEType: MIMEType
          FileName: FileName
          Note: Note
          ID: ID
          FileSize: 1
        - MIMEType: MIMEType
          FileName: FileName
          Note: Note
          ID: ID
          FileSize: 1
      properties:
        Due:
          description: Due
          format: date-time
          title: Due
          type: string
        Files:
          description: Files
          items:
            $ref: '#/components/schemas/LettingsLandlordDocument'
          title: Files
          type: array
        Status:
          description: Status.
          title: Status
          type: string
        Type:
          description: Type
          title: Type
          type: string
      title: LandlordMaintenanceCertificateModel
      type: object
    LandlordMaintenanceJobModel:
      description: Maintenance Job
      example:
        AssignedTo: AssignedTo
        Status: Status
        Description: Description
        Reported: 2000-01-23T04:56:07.000+00:00
        ClosedDate: 2000-01-23T04:56:07.000+00:00
        Property: Property
        MaintenanceNotes:
        - NoteContents: NoteContents
          CreatedAt: 2000-01-23T04:56:07.000+00:00
          OID: OID
        - NoteContents: NoteContents
          CreatedAt: 2000-01-23T04:56:07.000+00:00
          OID: OID
      properties:
        AssignedTo:
          description: AssignedTo
          title: AssignedTo
          type: string
        ClosedDate:
          description: Job Closed Date:-
          format: date-time
          readOnly: true
          title: ClosedDate
          type: string
        Description:
          description: Description
          title: Description
          type: string
        MaintenanceNotes:
          items:
            $ref: '#/components/schemas/LandlordMaintenanceJobNoteModel'
          title: MaintenanceNotes
          type: array
        Property:
          description: Property
          title: Property
          type: string
        Reported:
          description: Reported
          format: date-time
          title: Reported
          type: string
        Status:
          description: Status
          title: Status
          type: string
      title: LandlordMaintenanceJobModel
      type: object
    LandlordMaintenanceJobNoteModel:
      description: Maintenance Job Note Helper Model:-
      example:
        NoteContents: NoteContents
        CreatedAt: 2000-01-23T04:56:07.000+00:00
        OID: OID
      properties:
        CreatedAt:
          description: Created At:-
          format: date-time
          title: CreatedAt
          type: string
        NoteContents:
          description: Note Contents:-
          title: NoteContents
          type: string
        OID:
          description: Job ID:-
          title: OID
          type: string
      title: LandlordMaintenanceJobNoteModel
      type: object
    LandlordMaintenanceModel:
      description: Landlord Maintenance
      example:
        Jobs:
        - AssignedTo: AssignedTo
          Status: Status
          Description: Description
          Reported: 2000-01-23T04:56:07.000+00:00
          ClosedDate: 2000-01-23T04:56:07.000+00:00
          Property: Property
          MaintenanceNotes:
          - NoteContents: NoteContents
            CreatedAt: 2000-01-23T04:56:07.000+00:00
            OID: OID
          - NoteContents: NoteContents
            CreatedAt: 2000-01-23T04:56:07.000+00:00
            OID: OID
        - AssignedTo: AssignedTo
          Status: Status
          Description: Description
          Reported: 2000-01-23T04:56:07.000+00:00
          ClosedDate: 2000-01-23T04:56:07.000+00:00
          Property: Property
          MaintenanceNotes:
          - NoteContents: NoteContents
            CreatedAt: 2000-01-23T04:56:07.000+00:00
            OID: OID
          - NoteContents: NoteContents
            CreatedAt: 2000-01-23T04:56:07.000+00:00
            OID: OID
      properties:
        Jobs:
          description: Maintenance Jobs.
          items:
            $ref: '#/components/schemas/LandlordMaintenanceJobModel'
          title: Jobs
          type: array
      title: LandlordMaintenanceModel
      type: object
    LandlordMaintenancePreferenceModel:
      description: Maintenance Preference
      example:
        Type: Type
        Notes: Notes
        Name: Name
      properties:
        Name:
          description: Name
          title: Name
          type: string
        Notes:
          description: Notes.
          title: Notes
          type: string
        Type:
          description: Type
          title: Type
          type: string
      title: LandlordMaintenancePreferenceModel
      type: object
    LandlordPhotoModel:
      description: Stores a photo related to a property structure.
      example:
        ETag: ETag
        FileName: FileName
        PhotoType: Photo
        OID: OID
      properties:
        ETag:
          description: A unique identifier defining the object and change revision.
          title: ETag
          type: string
        FileName:
          description: The file name.
          title: FileName
          type: string
        OID:
          description: The unique Object ID (OID).
          title: OID
          type: string
        PhotoType:
          description: The photo type.
          enum:
          - Photo
          - Map
          - FloorPlan
          - SiteMap
          - AerialPhoto
          title: PhotoType
          type: string
      title: LandlordPhotoModel
      type: object
    LandlordPhotoModelResults:
      description: Holds results from a paged query returning LandlordPhotoModel values
      example:
        Data:
        - ETag: ETag
          FileName: FileName
          PhotoType: Photo
          OID: OID
        - ETag: ETag
          FileName: FileName
          PhotoType: Photo
          OID: OID
        Count: 0
      properties:
        Count:
          description: The total number of results available for all pages
          format: int32
          title: Count
          type: integer
        Data:
          description: The resulting data returned from the paged query range
          items:
            $ref: '#/components/schemas/LandlordPhotoModel'
          title: Data
          type: array
      title: LandlordPhotoModelResults
      type: object
    LandlordProfitLossModel:
      description: Class to represent proffit loss report.
      example:
        DirectCosts:
          Rows:
          - NominalCode: NominalCode
            Total: Total
            Title: Title
            MonthTotals:
            - value: value
              key: key
            - value: value
              key: key
          - NominalCode: NominalCode
            Total: Total
            Title: Title
            MonthTotals:
            - value: value
              key: key
            - value: value
              key: key
        Income:
          Rows:
          - NominalCode: NominalCode
            Total: Total
            Title: Title
            MonthTotals:
            - value: value
              key: key
            - value: value
              key: key
          - NominalCode: NominalCode
            Total: Total
            Title: Title
            MonthTotals:
            - value: value
              key: key
            - value: value
              key: key
        GrossProfitLoss:
          Rows:
          - NominalCode: NominalCode
            Total: Total
            Title: Title
            MonthTotals:
            - value: value
              key: key
            - value: value
              key: key
          - NominalCode: NominalCode
            Total: Total
            Title: Title
            MonthTotals:
            - value: value
              key: key
            - value: value
              key: key
      properties:
        DirectCosts:
          $ref: '#/components/schemas/LandlordProfitLossSectionModel'
        GrossProfitLoss:
          $ref: '#/components/schemas/LandlordProfitLossSectionModel'
        Income:
          $ref: '#/components/schemas/LandlordProfitLossSectionModel'
      title: LandlordProfitLossModel
      type: object
    LandlordProfitLossRowModel:
      description: Class for a group of entries.
      example:
        NominalCode: NominalCode
        Total: Total
        Title: Title
        MonthTotals:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        MonthTotals:
          description: Month Totals
          items:
            $ref: '#/components/schemas/KeyValuePair_String_String_'
          title: MonthTotals
          type: array
        NominalCode:
          description: Nominal Code
          title: NominalCode
          type: string
        Title:
          description: Title of the values.
          title: Title
          type: string
        Total:
          description: Total for all months.
          title: Total
          type: string
      title: LandlordProfitLossRowModel
      type: object
    LandlordProfitLossSectionModel:
      description: Class for a group of entries.
      example:
        Rows:
        - NominalCode: NominalCode
          Total: Total
          Title: Title
          MonthTotals:
          - value: value
            key: key
          - value: value
            key: key
        - NominalCode: NominalCode
          Total: Total
          Title: Title
          MonthTotals:
          - value: value
            key: key
          - value: value
            key: key
      properties:
        Rows:
          description: Rows.
          items:
            $ref: '#/components/schemas/LandlordProfitLossRowModel'
          title: Rows
          type: array
      title: LandlordProfitLossSectionModel
      type: object
    LandlordRentArrearsModel:
      description: Landlord Rent Arrears.
      example:
        RentCollected: 0.8008281904610115
        TotalRentArrears: 5.962133916683182
        RentOutstanding:
        - TenantID: TenantID
          Tenant: Tenant
          OutstandingRent: 1.4658129805029452
          DebtDays: 6
          Property: Property
        - TenantID: TenantID
          Tenant: Tenant
          OutstandingRent: 1.4658129805029452
          DebtDays: 6
          Property: Property
        ChaseNotes:
        - TenantID: TenantID
          NoteType: NoteType
          Note: Note
          Date: 2000-01-23T04:56:07.000+00:00
        - TenantID: TenantID
          NoteType: NoteType
          Note: Note
          Date: 2000-01-23T04:56:07.000+00:00
      properties:
        ChaseNotes:
          description: Chase Notes
          items:
            $ref: '#/components/schemas/LandlordChaseNoteModel'
          title: ChaseNotes
          type: array
        RentCollected:
          description: Rent Collected
          format: double
          title: RentCollected
          type: number
        RentOutstanding:
          description: Outstanding Rent
          items:
            $ref: '#/components/schemas/LandlordRentOustandingItem'
          title: RentOutstanding
          type: array
        TotalRentArrears:
          description: Rent Arrears
          format: double
          title: TotalRentArrears
          type: number
      title: LandlordRentArrearsModel
      type: object
    LandlordRentOustandingItem:
      description: Outstanding Rent
      example:
        TenantID: TenantID
        Tenant: Tenant
        OutstandingRent: 1.4658129805029452
        DebtDays: 6
        Property: Property
      properties:
        DebtDays:
          description: Days since the tenant went into arrears
          format: int32
          title: DebtDays
          type: integer
        OutstandingRent:
          description: Outstanding Rent
          format: double
          title: OutstandingRent
          type: number
        Property:
          description: Property
          title: Property
          type: string
        Tenant:
          description: Tenant
          title: Tenant
          type: string
        TenantID:
          description: TenantID
          title: TenantID
          type: string
      title: LandlordRentOustandingItem
      type: object
    LandlordSettingsModel:
      description: Landlord Settings
      example:
        LinkedAccounts:
        - Email: Email
          Address: Address
          GlobalReference: GlobalReference
          Phone: Phone
          ID: ID
          Mobile: Mobile
          Name: Name
        - Email: Email
          Address: Address
          GlobalReference: GlobalReference
          Phone: Phone
          ID: ID
          Mobile: Mobile
          Name: Name
      properties:
        LinkedAccounts:
          description: Linked Accounts
          items:
            $ref: '#/components/schemas/LandlordDetailsModel'
          title: LinkedAccounts
          type: array
      title: LandlordSettingsModel
      type: object
    LandlordSummaryModel:
      description: Landlord Summary - Landing Page.
      example:
        LastPayment: 2000-01-23T04:56:07.000+00:00
        Tenancies:
        - RentCollected: 5.637376656633329
          ManagedRent: true
          Description: Description
          GlobalReference: GlobalReference
          BranchID: BranchID
          PropertyAddress: PropertyAddress
          MaintenanceJobs: 1
          ID: ID
          RentArrears: 5.962133916683182
          Bond: 6.027456183070403
          TenancyState: TenancyState
          TenancyProperty: TenancyProperty
          Rent: Rent
        - RentCollected: 5.637376656633329
          ManagedRent: true
          Description: Description
          GlobalReference: GlobalReference
          BranchID: BranchID
          PropertyAddress: PropertyAddress
          MaintenanceJobs: 1
          ID: ID
          RentArrears: 5.962133916683182
          Bond: 6.027456183070403
          TenancyState: TenancyState
          TenancyProperty: TenancyProperty
          Rent: Rent
        TotalRentArrears: 2.3021358869347655
        AccountBalance: 0.8008281904610115
      properties:
        AccountBalance:
          description: Account Balance
          format: double
          title: AccountBalance
          type: number
        LastPayment:
          description: Last Payment Made
          format: date-time
          title: LastPayment
          type: string
        Tenancies:
          description: Tenancies
          items:
            $ref: '#/components/schemas/LandlordSummaryTenancyModel'
          title: Tenancies
          type: array
        TotalRentArrears:
          description: Rent Arrears
          format: double
          title: TotalRentArrears
          type: number
      title: LandlordSummaryModel
      type: object
    LandlordSummaryTenancyModel:
      description: Landlord Summary - Landing Page.
      example:
        RentCollected: 5.637376656633329
        ManagedRent: true
        Description: Description
        GlobalReference: GlobalReference
        BranchID: BranchID
        PropertyAddress: PropertyAddress
        MaintenanceJobs: 1
        ID: ID
        RentArrears: 5.962133916683182
        Bond: 6.027456183070403
        TenancyState: TenancyState
        TenancyProperty: TenancyProperty
        Rent: Rent
      properties:
        Bond:
          description: Bomd
          format: double
          title: Bond
          type: number
        BranchID:
          description: The Tenancy Branch ID
          title: BranchID
          type: string
        Description:
          description: Description.
          title: Description
          type: string
        GlobalReference:
          description: User Friendly ID
          title: GlobalReference
          type: string
        ID:
          description: ID
          title: ID
          type: string
        MaintenanceJobs:
          description: Maintenance Jobs.
          format: int32
          title: MaintenanceJobs
          type: integer
        ManagedRent:
          description: State of the tenancy
          title: ManagedRent
          type: boolean
        PropertyAddress:
          description: Display Property Address
          title: PropertyAddress
          type: string
        Rent:
          description: Rent
          title: Rent
          type: string
        RentArrears:
          description: Rent Arrears
          format: double
          title: RentArrears
          type: number
        RentCollected:
          description: Rent Arrears
          format: double
          title: RentCollected
          type: number
        TenancyProperty:
          description: Tenancy Property
          title: TenancyProperty
          type: string
        TenancyState:
          description: State of the tenancy
          title: TenancyState
          type: string
      title: LandlordSummaryTenancyModel
      type: object
    LandlordTenancyModel:
      description: Landlord Tenancy Model.
      example:
        ActualEndDate: 2000-01-23T04:56:07.000+00:00
        ManagedRent: true
        GlobalReference: GlobalReference
        Certificates:
        - Status: Status
          Type: Type
          Due: 2000-01-23T04:56:07.000+00:00
          Files:
          - MIMEType: MIMEType
            FileName: FileName
            Note: Note
            ID: ID
            FileSize: 1
          - MIMEType: MIMEType
            FileName: FileName
            Note: Note
            ID: ID
            FileSize: 1
        - Status: Status
          Type: Type
          Due: 2000-01-23T04:56:07.000+00:00
          Files:
          - MIMEType: MIMEType
            FileName: FileName
            Note: Note
            ID: ID
            FileSize: 1
          - MIMEType: MIMEType
            FileName: FileName
            Note: Note
            ID: ID
            FileSize: 1
        RentAmount: 5.637376656633329
        Tenants:
        - Tenants
        - Tenants
        BranchID: BranchID
        Beds: 0
        PreviousRentAmount: 5.962133916683182
        StartDate: 2000-01-23T04:56:07.000+00:00
        PropertyAddress: PropertyAddress
        Documents:
        - MIMEType: MIMEType
          FileName: FileName
          Note: Note
          ID: ID
          FileSize: 1
        - MIMEType: MIMEType
          FileName: FileName
          Note: Note
          ID: ID
          FileSize: 1
        FixedDate: 2000-01-23T04:56:07.000+00:00
        ID: ID
        Bond: 6.027456183070403
        Preferences:
        - Type: Type
          Notes: Notes
          Name: Name
        - Type: Type
          Notes: Notes
          Name: Name
        TenancyState: TenancyState
        TenancyProperty: TenancyProperty
        Inspections:
        - InspectionDate: 2000-01-23T04:56:07.000+00:00
          Notes: Notes
        - InspectionDate: 2000-01-23T04:56:07.000+00:00
          Notes: Notes
        Rent: Rent
      properties:
        ActualEndDate:
          description: Actual End Date
          format: date-time
          title: ActualEndDate
          type: string
        Beds:
          description: Beds
          format: int32
          title: Beds
          type: integer
        Bond:
          description: Bond
          format: double
          title: Bond
          type: number
        BranchID:
          description: The tenancy branch ID:-
          title: BranchID
          type: string
        Certificates:
          description: Maintenance Certificates.
          items:
            $ref: '#/components/schemas/LandlordMaintenanceCertificateModel'
          title: Certificates
          type: array
        Documents:
          description: Tenancy documents:-
          items:
            $ref: '#/components/schemas/LettingsLandlordDocument'
          title: Documents
          type: array
        FixedDate:
          description: Fixed Date
          format: date-time
          title: FixedDate
          type: string
        GlobalReference:
          description: User Friendly ID
          title: GlobalReference
          type: string
        ID:
          description: ID
          title: ID
          type: string
        Inspections:
          description: Inspections
          items:
            $ref: '#/components/schemas/LandlordLettingsInspectionModel'
          title: Inspections
          type: array
        ManagedRent:
          description: State of the tenancy
          title: ManagedRent
          type: boolean
        Preferences:
          description: Maintenance Preferences.
          items:
            $ref: '#/components/schemas/LandlordMaintenancePreferenceModel'
          title: Preferences
          type: array
        PreviousRentAmount:
          description: Previous Rent Amount
          format: double
          title: PreviousRentAmount
          type: number
        PropertyAddress:
          description: Display Property Address
          title: PropertyAddress
          type: string
        Rent:
          description: Rent
          title: Rent
          type: string
        RentAmount:
          description: Rent Amount
          format: double
          title: RentAmount
          type: number
        StartDate:
          description: Start Date
          format: date-time
          title: StartDate
          type: string
        TenancyProperty:
          description: Tenancy Property
          title: TenancyProperty
          type: string
        TenancyState:
          description: State of the tenancy
          title: TenancyState
          type: string
        Tenants:
          description: Tenants
          items:
            type: string
          title: Tenants
          type: array
      title: LandlordTenancyModel
      type: object
    LettingsLandlordDocument:
      description: Document details.
      example:
        MIMEType: MIMEType
        FileName: FileName
        Note: Note
        ID: ID
        FileSize: 1
      properties:
        FileName:
          description: File Name
          title: FileName
          type: string
        FileSize:
          description: File Size Bytes
          format: int32
          title: FileSize
          type: integer
        ID:
          description: ID
          title: ID
          type: string
        MIMEType:
          description: MIME Type
          title: MIMEType
          type: string
        Note:
          description: Document Note
          title: Note
          type: string
      title: LettingsLandlordDocument
      type: object
    Object:
      properties: {}
      type: object
  securitySchemes:
    apiKey:
      description: ApiKey Authentication
      in: header
      name: ApiKey
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_apiKey
    basic:
      description: Basic HTTP Authentication
      scheme: basic
      type: http
      x-basicInfoFunc: openapi_server.controllers.security_controller.info_from_basic
