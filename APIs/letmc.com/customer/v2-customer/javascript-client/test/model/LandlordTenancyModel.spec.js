/**
 * agentOS Api V2, Customer Login Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-customer
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AgentOsApiV2CustomerLoginCallGroup);
  }
}(this, function(expect, AgentOsApiV2CustomerLoginCallGroup) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LandlordTenancyModel', function() {
    it('should create an instance of LandlordTenancyModel', function() {
      // uncomment below and update the code to test LandlordTenancyModel
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be.a(AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel);
    });

    it('should have the property actualEndDate (base name: "ActualEndDate")', function() {
      // uncomment below and update the code to test the property actualEndDate
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property beds (base name: "Beds")', function() {
      // uncomment below and update the code to test the property beds
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property bond (base name: "Bond")', function() {
      // uncomment below and update the code to test the property bond
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property branchID (base name: "BranchID")', function() {
      // uncomment below and update the code to test the property branchID
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property certificates (base name: "Certificates")', function() {
      // uncomment below and update the code to test the property certificates
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property documents (base name: "Documents")', function() {
      // uncomment below and update the code to test the property documents
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property fixedDate (base name: "FixedDate")', function() {
      // uncomment below and update the code to test the property fixedDate
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property globalReference (base name: "GlobalReference")', function() {
      // uncomment below and update the code to test the property globalReference
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property ID (base name: "ID")', function() {
      // uncomment below and update the code to test the property ID
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property inspections (base name: "Inspections")', function() {
      // uncomment below and update the code to test the property inspections
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property managedRent (base name: "ManagedRent")', function() {
      // uncomment below and update the code to test the property managedRent
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property preferences (base name: "Preferences")', function() {
      // uncomment below and update the code to test the property preferences
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property previousRentAmount (base name: "PreviousRentAmount")', function() {
      // uncomment below and update the code to test the property previousRentAmount
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property propertyAddress (base name: "PropertyAddress")', function() {
      // uncomment below and update the code to test the property propertyAddress
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property rent (base name: "Rent")', function() {
      // uncomment below and update the code to test the property rent
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property rentAmount (base name: "RentAmount")', function() {
      // uncomment below and update the code to test the property rentAmount
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "StartDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property tenancyProperty (base name: "TenancyProperty")', function() {
      // uncomment below and update the code to test the property tenancyProperty
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property tenancyState (base name: "TenancyState")', function() {
      // uncomment below and update the code to test the property tenancyState
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property tenants (base name: "Tenants")', function() {
      // uncomment below and update the code to test the property tenants
      //var instance = new AgentOsApiV2CustomerLoginCallGroup.LandlordTenancyModel();
      //expect(instance).to.be();
    });

  });

}));
