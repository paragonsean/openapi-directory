/**
 * agentOS Api V2, Customer Login Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-customer
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BranchModel from '../model/BranchModel';
import BranchModelResults from '../model/BranchModelResults';

/**
* BranchController service.
* @module api/BranchControllerApi
* @version v2-customer
*/
export default class BranchControllerApi {

    /**
    * Constructs a new BranchControllerApi. 
    * @alias module:api/BranchControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the branchControllerGetBranches operation.
     * @callback module:api/BranchControllerApi~branchControllerGetBranchesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BranchModelResults} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * All branches defined for a company
     * @param {String} shortName The unique client short-name
     * @param {Number} offset The index of the first item to return
     * @param {Number} count The maximum number of items to return (up to 1000 per request)
     * @param {module:api/BranchControllerApi~branchControllerGetBranchesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BranchModelResults}
     */
    branchControllerGetBranches(shortName, offset, count, callback) {
      let postBody = null;
      // verify the required parameter 'shortName' is set
      if (shortName === undefined || shortName === null) {
        throw new Error("Missing the required parameter 'shortName' when calling branchControllerGetBranches");
      }
      // verify the required parameter 'offset' is set
      if (offset === undefined || offset === null) {
        throw new Error("Missing the required parameter 'offset' when calling branchControllerGetBranches");
      }
      // verify the required parameter 'count' is set
      if (count === undefined || count === null) {
        throw new Error("Missing the required parameter 'count' when calling branchControllerGetBranches");
      }

      let pathParams = {
        'shortName': shortName
      };
      let queryParams = {
        'offset': offset,
        'count': count
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = BranchModelResults;
      return this.apiClient.callApi(
        '/v2/customer/{shortName}/branch/branches', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v2CustomerShortNameBranchBranchesBranchIDGet operation.
     * @callback module:api/BranchControllerApi~v2CustomerShortNameBranchBranchesBranchIDGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BranchModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a specific branch given its unique Object ID (OID)
     * @param {String} shortName The unique client short-name
     * @param {String} branchID The unique ID of the Branch
     * @param {module:api/BranchControllerApi~v2CustomerShortNameBranchBranchesBranchIDGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BranchModel}
     */
    v2CustomerShortNameBranchBranchesBranchIDGet(shortName, branchID, callback) {
      let postBody = null;
      // verify the required parameter 'shortName' is set
      if (shortName === undefined || shortName === null) {
        throw new Error("Missing the required parameter 'shortName' when calling v2CustomerShortNameBranchBranchesBranchIDGet");
      }
      // verify the required parameter 'branchID' is set
      if (branchID === undefined || branchID === null) {
        throw new Error("Missing the required parameter 'branchID' when calling v2CustomerShortNameBranchBranchesBranchIDGet");
      }

      let pathParams = {
        'shortName': shortName,
        'branchID': branchID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = BranchModel;
      return this.apiClient.callApi(
        '/v2/customer/{shortName}/branch/branches/{branchID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
