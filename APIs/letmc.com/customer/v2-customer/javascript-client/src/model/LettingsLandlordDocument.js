/**
 * agentOS Api V2, Customer Login Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-customer
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LettingsLandlordDocument model module.
 * @module model/LettingsLandlordDocument
 * @version v2-customer
 */
class LettingsLandlordDocument {
    /**
     * Constructs a new <code>LettingsLandlordDocument</code>.
     * Document details.
     * @alias module:model/LettingsLandlordDocument
     */
    constructor() { 
        
        LettingsLandlordDocument.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LettingsLandlordDocument</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LettingsLandlordDocument} obj Optional instance to populate.
     * @return {module:model/LettingsLandlordDocument} The populated <code>LettingsLandlordDocument</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LettingsLandlordDocument();

            if (data.hasOwnProperty('FileName')) {
                obj['FileName'] = ApiClient.convertToType(data['FileName'], 'String');
            }
            if (data.hasOwnProperty('FileSize')) {
                obj['FileSize'] = ApiClient.convertToType(data['FileSize'], 'Number');
            }
            if (data.hasOwnProperty('ID')) {
                obj['ID'] = ApiClient.convertToType(data['ID'], 'String');
            }
            if (data.hasOwnProperty('MIMEType')) {
                obj['MIMEType'] = ApiClient.convertToType(data['MIMEType'], 'String');
            }
            if (data.hasOwnProperty('Note')) {
                obj['Note'] = ApiClient.convertToType(data['Note'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LettingsLandlordDocument</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LettingsLandlordDocument</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['FileName'] && !(typeof data['FileName'] === 'string' || data['FileName'] instanceof String)) {
            throw new Error("Expected the field `FileName` to be a primitive type in the JSON string but got " + data['FileName']);
        }
        // ensure the json data is a string
        if (data['ID'] && !(typeof data['ID'] === 'string' || data['ID'] instanceof String)) {
            throw new Error("Expected the field `ID` to be a primitive type in the JSON string but got " + data['ID']);
        }
        // ensure the json data is a string
        if (data['MIMEType'] && !(typeof data['MIMEType'] === 'string' || data['MIMEType'] instanceof String)) {
            throw new Error("Expected the field `MIMEType` to be a primitive type in the JSON string but got " + data['MIMEType']);
        }
        // ensure the json data is a string
        if (data['Note'] && !(typeof data['Note'] === 'string' || data['Note'] instanceof String)) {
            throw new Error("Expected the field `Note` to be a primitive type in the JSON string but got " + data['Note']);
        }

        return true;
    }


}



/**
 * File Name
 * @member {String} FileName
 */
LettingsLandlordDocument.prototype['FileName'] = undefined;

/**
 * File Size Bytes
 * @member {Number} FileSize
 */
LettingsLandlordDocument.prototype['FileSize'] = undefined;

/**
 * ID
 * @member {String} ID
 */
LettingsLandlordDocument.prototype['ID'] = undefined;

/**
 * MIME Type
 * @member {String} MIMEType
 */
LettingsLandlordDocument.prototype['MIMEType'] = undefined;

/**
 * Document Note
 * @member {String} Note
 */
LettingsLandlordDocument.prototype['Note'] = undefined;






export default LettingsLandlordDocument;

