/**
 * agentOS Api V2, Customer Login Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-customer
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LandlordSummaryTenancyModel model module.
 * @module model/LandlordSummaryTenancyModel
 * @version v2-customer
 */
class LandlordSummaryTenancyModel {
    /**
     * Constructs a new <code>LandlordSummaryTenancyModel</code>.
     * Landlord Summary - Landing Page.
     * @alias module:model/LandlordSummaryTenancyModel
     */
    constructor() { 
        
        LandlordSummaryTenancyModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LandlordSummaryTenancyModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LandlordSummaryTenancyModel} obj Optional instance to populate.
     * @return {module:model/LandlordSummaryTenancyModel} The populated <code>LandlordSummaryTenancyModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LandlordSummaryTenancyModel();

            if (data.hasOwnProperty('Bond')) {
                obj['Bond'] = ApiClient.convertToType(data['Bond'], 'Number');
            }
            if (data.hasOwnProperty('BranchID')) {
                obj['BranchID'] = ApiClient.convertToType(data['BranchID'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('GlobalReference')) {
                obj['GlobalReference'] = ApiClient.convertToType(data['GlobalReference'], 'String');
            }
            if (data.hasOwnProperty('ID')) {
                obj['ID'] = ApiClient.convertToType(data['ID'], 'String');
            }
            if (data.hasOwnProperty('MaintenanceJobs')) {
                obj['MaintenanceJobs'] = ApiClient.convertToType(data['MaintenanceJobs'], 'Number');
            }
            if (data.hasOwnProperty('ManagedRent')) {
                obj['ManagedRent'] = ApiClient.convertToType(data['ManagedRent'], 'Boolean');
            }
            if (data.hasOwnProperty('PropertyAddress')) {
                obj['PropertyAddress'] = ApiClient.convertToType(data['PropertyAddress'], 'String');
            }
            if (data.hasOwnProperty('Rent')) {
                obj['Rent'] = ApiClient.convertToType(data['Rent'], 'String');
            }
            if (data.hasOwnProperty('RentArrears')) {
                obj['RentArrears'] = ApiClient.convertToType(data['RentArrears'], 'Number');
            }
            if (data.hasOwnProperty('RentCollected')) {
                obj['RentCollected'] = ApiClient.convertToType(data['RentCollected'], 'Number');
            }
            if (data.hasOwnProperty('TenancyProperty')) {
                obj['TenancyProperty'] = ApiClient.convertToType(data['TenancyProperty'], 'String');
            }
            if (data.hasOwnProperty('TenancyState')) {
                obj['TenancyState'] = ApiClient.convertToType(data['TenancyState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LandlordSummaryTenancyModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LandlordSummaryTenancyModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['BranchID'] && !(typeof data['BranchID'] === 'string' || data['BranchID'] instanceof String)) {
            throw new Error("Expected the field `BranchID` to be a primitive type in the JSON string but got " + data['BranchID']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['GlobalReference'] && !(typeof data['GlobalReference'] === 'string' || data['GlobalReference'] instanceof String)) {
            throw new Error("Expected the field `GlobalReference` to be a primitive type in the JSON string but got " + data['GlobalReference']);
        }
        // ensure the json data is a string
        if (data['ID'] && !(typeof data['ID'] === 'string' || data['ID'] instanceof String)) {
            throw new Error("Expected the field `ID` to be a primitive type in the JSON string but got " + data['ID']);
        }
        // ensure the json data is a string
        if (data['PropertyAddress'] && !(typeof data['PropertyAddress'] === 'string' || data['PropertyAddress'] instanceof String)) {
            throw new Error("Expected the field `PropertyAddress` to be a primitive type in the JSON string but got " + data['PropertyAddress']);
        }
        // ensure the json data is a string
        if (data['Rent'] && !(typeof data['Rent'] === 'string' || data['Rent'] instanceof String)) {
            throw new Error("Expected the field `Rent` to be a primitive type in the JSON string but got " + data['Rent']);
        }
        // ensure the json data is a string
        if (data['TenancyProperty'] && !(typeof data['TenancyProperty'] === 'string' || data['TenancyProperty'] instanceof String)) {
            throw new Error("Expected the field `TenancyProperty` to be a primitive type in the JSON string but got " + data['TenancyProperty']);
        }
        // ensure the json data is a string
        if (data['TenancyState'] && !(typeof data['TenancyState'] === 'string' || data['TenancyState'] instanceof String)) {
            throw new Error("Expected the field `TenancyState` to be a primitive type in the JSON string but got " + data['TenancyState']);
        }

        return true;
    }


}



/**
 * Bomd
 * @member {Number} Bond
 */
LandlordSummaryTenancyModel.prototype['Bond'] = undefined;

/**
 * The Tenancy Branch ID
 * @member {String} BranchID
 */
LandlordSummaryTenancyModel.prototype['BranchID'] = undefined;

/**
 * Description.
 * @member {String} Description
 */
LandlordSummaryTenancyModel.prototype['Description'] = undefined;

/**
 * User Friendly ID
 * @member {String} GlobalReference
 */
LandlordSummaryTenancyModel.prototype['GlobalReference'] = undefined;

/**
 * ID
 * @member {String} ID
 */
LandlordSummaryTenancyModel.prototype['ID'] = undefined;

/**
 * Maintenance Jobs.
 * @member {Number} MaintenanceJobs
 */
LandlordSummaryTenancyModel.prototype['MaintenanceJobs'] = undefined;

/**
 * State of the tenancy
 * @member {Boolean} ManagedRent
 */
LandlordSummaryTenancyModel.prototype['ManagedRent'] = undefined;

/**
 * Display Property Address
 * @member {String} PropertyAddress
 */
LandlordSummaryTenancyModel.prototype['PropertyAddress'] = undefined;

/**
 * Rent
 * @member {String} Rent
 */
LandlordSummaryTenancyModel.prototype['Rent'] = undefined;

/**
 * Rent Arrears
 * @member {Number} RentArrears
 */
LandlordSummaryTenancyModel.prototype['RentArrears'] = undefined;

/**
 * Rent Arrears
 * @member {Number} RentCollected
 */
LandlordSummaryTenancyModel.prototype['RentCollected'] = undefined;

/**
 * Tenancy Property
 * @member {String} TenancyProperty
 */
LandlordSummaryTenancyModel.prototype['TenancyProperty'] = undefined;

/**
 * State of the tenancy
 * @member {String} TenancyState
 */
LandlordSummaryTenancyModel.prototype['TenancyState'] = undefined;






export default LandlordSummaryTenancyModel;

