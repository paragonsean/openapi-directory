/**
 * agentOS Api V2, Customer Login Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-customer
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LandlordMaintenanceJobNoteModel from './LandlordMaintenanceJobNoteModel';

/**
 * The LandlordMaintenanceJobModel model module.
 * @module model/LandlordMaintenanceJobModel
 * @version v2-customer
 */
class LandlordMaintenanceJobModel {
    /**
     * Constructs a new <code>LandlordMaintenanceJobModel</code>.
     * Maintenance Job
     * @alias module:model/LandlordMaintenanceJobModel
     */
    constructor() { 
        
        LandlordMaintenanceJobModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LandlordMaintenanceJobModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LandlordMaintenanceJobModel} obj Optional instance to populate.
     * @return {module:model/LandlordMaintenanceJobModel} The populated <code>LandlordMaintenanceJobModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LandlordMaintenanceJobModel();

            if (data.hasOwnProperty('AssignedTo')) {
                obj['AssignedTo'] = ApiClient.convertToType(data['AssignedTo'], 'String');
            }
            if (data.hasOwnProperty('ClosedDate')) {
                obj['ClosedDate'] = ApiClient.convertToType(data['ClosedDate'], 'Date');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('MaintenanceNotes')) {
                obj['MaintenanceNotes'] = ApiClient.convertToType(data['MaintenanceNotes'], [LandlordMaintenanceJobNoteModel]);
            }
            if (data.hasOwnProperty('Property')) {
                obj['Property'] = ApiClient.convertToType(data['Property'], 'String');
            }
            if (data.hasOwnProperty('Reported')) {
                obj['Reported'] = ApiClient.convertToType(data['Reported'], 'Date');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LandlordMaintenanceJobModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LandlordMaintenanceJobModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AssignedTo'] && !(typeof data['AssignedTo'] === 'string' || data['AssignedTo'] instanceof String)) {
            throw new Error("Expected the field `AssignedTo` to be a primitive type in the JSON string but got " + data['AssignedTo']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        if (data['MaintenanceNotes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['MaintenanceNotes'])) {
                throw new Error("Expected the field `MaintenanceNotes` to be an array in the JSON data but got " + data['MaintenanceNotes']);
            }
            // validate the optional field `MaintenanceNotes` (array)
            for (const item of data['MaintenanceNotes']) {
                LandlordMaintenanceJobNoteModel.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['Property'] && !(typeof data['Property'] === 'string' || data['Property'] instanceof String)) {
            throw new Error("Expected the field `Property` to be a primitive type in the JSON string but got " + data['Property']);
        }
        // ensure the json data is a string
        if (data['Status'] && !(typeof data['Status'] === 'string' || data['Status'] instanceof String)) {
            throw new Error("Expected the field `Status` to be a primitive type in the JSON string but got " + data['Status']);
        }

        return true;
    }


}



/**
 * AssignedTo
 * @member {String} AssignedTo
 */
LandlordMaintenanceJobModel.prototype['AssignedTo'] = undefined;

/**
 * Job Closed Date:-
 * @member {Date} ClosedDate
 */
LandlordMaintenanceJobModel.prototype['ClosedDate'] = undefined;

/**
 * Description
 * @member {String} Description
 */
LandlordMaintenanceJobModel.prototype['Description'] = undefined;

/**
 * @member {Array.<module:model/LandlordMaintenanceJobNoteModel>} MaintenanceNotes
 */
LandlordMaintenanceJobModel.prototype['MaintenanceNotes'] = undefined;

/**
 * Property
 * @member {String} Property
 */
LandlordMaintenanceJobModel.prototype['Property'] = undefined;

/**
 * Reported
 * @member {Date} Reported
 */
LandlordMaintenanceJobModel.prototype['Reported'] = undefined;

/**
 * Status
 * @member {String} Status
 */
LandlordMaintenanceJobModel.prototype['Status'] = undefined;






export default LandlordMaintenanceJobModel;

