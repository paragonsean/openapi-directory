/**
 * agentOS Api V2, Customer Login Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-customer
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import KeyValuePairStringString from './KeyValuePairStringString';

/**
 * The LandlordProfitLossRowModel model module.
 * @module model/LandlordProfitLossRowModel
 * @version v2-customer
 */
class LandlordProfitLossRowModel {
    /**
     * Constructs a new <code>LandlordProfitLossRowModel</code>.
     * Class for a group of entries.
     * @alias module:model/LandlordProfitLossRowModel
     */
    constructor() { 
        
        LandlordProfitLossRowModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LandlordProfitLossRowModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LandlordProfitLossRowModel} obj Optional instance to populate.
     * @return {module:model/LandlordProfitLossRowModel} The populated <code>LandlordProfitLossRowModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LandlordProfitLossRowModel();

            if (data.hasOwnProperty('MonthTotals')) {
                obj['MonthTotals'] = ApiClient.convertToType(data['MonthTotals'], [KeyValuePairStringString]);
            }
            if (data.hasOwnProperty('NominalCode')) {
                obj['NominalCode'] = ApiClient.convertToType(data['NominalCode'], 'String');
            }
            if (data.hasOwnProperty('Title')) {
                obj['Title'] = ApiClient.convertToType(data['Title'], 'String');
            }
            if (data.hasOwnProperty('Total')) {
                obj['Total'] = ApiClient.convertToType(data['Total'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LandlordProfitLossRowModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LandlordProfitLossRowModel</code>.
     */
    static validateJSON(data) {
        if (data['MonthTotals']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['MonthTotals'])) {
                throw new Error("Expected the field `MonthTotals` to be an array in the JSON data but got " + data['MonthTotals']);
            }
            // validate the optional field `MonthTotals` (array)
            for (const item of data['MonthTotals']) {
                KeyValuePairStringString.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['NominalCode'] && !(typeof data['NominalCode'] === 'string' || data['NominalCode'] instanceof String)) {
            throw new Error("Expected the field `NominalCode` to be a primitive type in the JSON string but got " + data['NominalCode']);
        }
        // ensure the json data is a string
        if (data['Title'] && !(typeof data['Title'] === 'string' || data['Title'] instanceof String)) {
            throw new Error("Expected the field `Title` to be a primitive type in the JSON string but got " + data['Title']);
        }
        // ensure the json data is a string
        if (data['Total'] && !(typeof data['Total'] === 'string' || data['Total'] instanceof String)) {
            throw new Error("Expected the field `Total` to be a primitive type in the JSON string but got " + data['Total']);
        }

        return true;
    }


}



/**
 * Month Totals
 * @member {Array.<module:model/KeyValuePairStringString>} MonthTotals
 */
LandlordProfitLossRowModel.prototype['MonthTotals'] = undefined;

/**
 * Nominal Code
 * @member {String} NominalCode
 */
LandlordProfitLossRowModel.prototype['NominalCode'] = undefined;

/**
 * Title of the values.
 * @member {String} Title
 */
LandlordProfitLossRowModel.prototype['Title'] = undefined;

/**
 * Total for all months.
 * @member {String} Total
 */
LandlordProfitLossRowModel.prototype['Total'] = undefined;






export default LandlordProfitLossRowModel;

