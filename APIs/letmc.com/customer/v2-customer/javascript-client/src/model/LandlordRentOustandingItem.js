/**
 * agentOS Api V2, Customer Login Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-customer
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LandlordRentOustandingItem model module.
 * @module model/LandlordRentOustandingItem
 * @version v2-customer
 */
class LandlordRentOustandingItem {
    /**
     * Constructs a new <code>LandlordRentOustandingItem</code>.
     * Outstanding Rent
     * @alias module:model/LandlordRentOustandingItem
     */
    constructor() { 
        
        LandlordRentOustandingItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LandlordRentOustandingItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LandlordRentOustandingItem} obj Optional instance to populate.
     * @return {module:model/LandlordRentOustandingItem} The populated <code>LandlordRentOustandingItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LandlordRentOustandingItem();

            if (data.hasOwnProperty('DebtDays')) {
                obj['DebtDays'] = ApiClient.convertToType(data['DebtDays'], 'Number');
            }
            if (data.hasOwnProperty('OutstandingRent')) {
                obj['OutstandingRent'] = ApiClient.convertToType(data['OutstandingRent'], 'Number');
            }
            if (data.hasOwnProperty('Property')) {
                obj['Property'] = ApiClient.convertToType(data['Property'], 'String');
            }
            if (data.hasOwnProperty('Tenant')) {
                obj['Tenant'] = ApiClient.convertToType(data['Tenant'], 'String');
            }
            if (data.hasOwnProperty('TenantID')) {
                obj['TenantID'] = ApiClient.convertToType(data['TenantID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LandlordRentOustandingItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LandlordRentOustandingItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Property'] && !(typeof data['Property'] === 'string' || data['Property'] instanceof String)) {
            throw new Error("Expected the field `Property` to be a primitive type in the JSON string but got " + data['Property']);
        }
        // ensure the json data is a string
        if (data['Tenant'] && !(typeof data['Tenant'] === 'string' || data['Tenant'] instanceof String)) {
            throw new Error("Expected the field `Tenant` to be a primitive type in the JSON string but got " + data['Tenant']);
        }
        // ensure the json data is a string
        if (data['TenantID'] && !(typeof data['TenantID'] === 'string' || data['TenantID'] instanceof String)) {
            throw new Error("Expected the field `TenantID` to be a primitive type in the JSON string but got " + data['TenantID']);
        }

        return true;
    }


}



/**
 * Days since the tenant went into arrears
 * @member {Number} DebtDays
 */
LandlordRentOustandingItem.prototype['DebtDays'] = undefined;

/**
 * Outstanding Rent
 * @member {Number} OutstandingRent
 */
LandlordRentOustandingItem.prototype['OutstandingRent'] = undefined;

/**
 * Property
 * @member {String} Property
 */
LandlordRentOustandingItem.prototype['Property'] = undefined;

/**
 * Tenant
 * @member {String} Tenant
 */
LandlordRentOustandingItem.prototype['Tenant'] = undefined;

/**
 * TenantID
 * @member {String} TenantID
 */
LandlordRentOustandingItem.prototype['TenantID'] = undefined;






export default LandlordRentOustandingItem;

