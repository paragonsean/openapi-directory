/**
 * agentOS API V3, Maintenance Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3-maintenance
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AgentOsApiV3MaintenanceCallGroup);
  }
}(this, function(expect, AgentOsApiV3MaintenanceCallGroup) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MaintenanceIssueModel', function() {
    it('should create an instance of MaintenanceIssueModel', function() {
      // uncomment below and update the code to test MaintenanceIssueModel
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be.a(AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel);
    });

    it('should have the property documents (base name: "Documents")', function() {
      // uncomment below and update the code to test the property documents
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property externalID (base name: "ExternalID")', function() {
      // uncomment below and update the code to test the property externalID
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property issueFault (base name: "IssueFault")', function() {
      // uncomment below and update the code to test the property issueFault
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property issueNotes (base name: "IssueNotes")', function() {
      // uncomment below and update the code to test the property issueNotes
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property issuePriority (base name: "IssuePriority")', function() {
      // uncomment below and update the code to test the property issuePriority
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property issueTitle (base name: "IssueTitle")', function() {
      // uncomment below and update the code to test the property issueTitle
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property propertyAddress1 (base name: "PropertyAddress1")', function() {
      // uncomment below and update the code to test the property propertyAddress1
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property propertyAddress2 (base name: "PropertyAddress2")', function() {
      // uncomment below and update the code to test the property propertyAddress2
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property propertyAddress3 (base name: "PropertyAddress3")', function() {
      // uncomment below and update the code to test the property propertyAddress3
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property propertyAddress4 (base name: "PropertyAddress4")', function() {
      // uncomment below and update the code to test the property propertyAddress4
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property propertyCountry (base name: "PropertyCountry")', function() {
      // uncomment below and update the code to test the property propertyCountry
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property propertyPostcode (base name: "PropertyPostcode")', function() {
      // uncomment below and update the code to test the property propertyPostcode
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property reportedAt (base name: "ReportedAt")', function() {
      // uncomment below and update the code to test the property reportedAt
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property tenantEMailAddress (base name: "TenantEMailAddress")', function() {
      // uncomment below and update the code to test the property tenantEMailAddress
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property tenantForename (base name: "TenantForename")', function() {
      // uncomment below and update the code to test the property tenantForename
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property tenantPhonePrimary (base name: "TenantPhonePrimary")', function() {
      // uncomment below and update the code to test the property tenantPhonePrimary
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property tenantPhoneSecondary (base name: "TenantPhoneSecondary")', function() {
      // uncomment below and update the code to test the property tenantPhoneSecondary
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property tenantPresenceRequested (base name: "TenantPresenceRequested")', function() {
      // uncomment below and update the code to test the property tenantPresenceRequested
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property tenantSurname (base name: "TenantSurname")', function() {
      // uncomment below and update the code to test the property tenantSurname
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

    it('should have the property tenantTitle (base name: "TenantTitle")', function() {
      // uncomment below and update the code to test the property tenantTitle
      //var instance = new AgentOsApiV3MaintenanceCallGroup.MaintenanceIssueModel();
      //expect(instance).to.be();
    });

  });

}));
