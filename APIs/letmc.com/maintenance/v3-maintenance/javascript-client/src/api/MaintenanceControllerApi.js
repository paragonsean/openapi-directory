/**
 * agentOS API V3, Maintenance Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3-maintenance
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import MaintenanceIssueModel from '../model/MaintenanceIssueModel';

/**
* MaintenanceController service.
* @module api/MaintenanceControllerApi
* @version v3-maintenance
*/
export default class MaintenanceControllerApi {

    /**
    * Constructs a new MaintenanceControllerApi. 
    * @alias module:api/MaintenanceControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the maintenanceControllerCreateMaintenanceJob operation.
     * @callback module:api/MaintenanceControllerApi~maintenanceControllerCreateMaintenanceJobCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a maintenance job for a specific branch
     * @param {String} shortName The unique client short-name
     * @param {String} branchID The unique ID of the Branch
     * @param {module:model/MaintenanceIssueModel} maintenanceIssueModel A JSON object containing details of the maintenance job
     * @param {module:api/MaintenanceControllerApi~maintenanceControllerCreateMaintenanceJobCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    maintenanceControllerCreateMaintenanceJob(shortName, branchID, maintenanceIssueModel, callback) {
      let postBody = maintenanceIssueModel;
      // verify the required parameter 'shortName' is set
      if (shortName === undefined || shortName === null) {
        throw new Error("Missing the required parameter 'shortName' when calling maintenanceControllerCreateMaintenanceJob");
      }
      // verify the required parameter 'branchID' is set
      if (branchID === undefined || branchID === null) {
        throw new Error("Missing the required parameter 'branchID' when calling maintenanceControllerCreateMaintenanceJob");
      }
      // verify the required parameter 'maintenanceIssueModel' is set
      if (maintenanceIssueModel === undefined || maintenanceIssueModel === null) {
        throw new Error("Missing the required parameter 'maintenanceIssueModel' when calling maintenanceControllerCreateMaintenanceJob");
      }

      let pathParams = {
        'shortName': shortName,
        'branchID': branchID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v3/maintenance/{shortName}/maintenance/{branchID}/createmaintenancejob', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
