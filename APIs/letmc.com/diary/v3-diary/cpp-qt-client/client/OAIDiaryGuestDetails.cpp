/**
 * agentOS API V3, Diary Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3-diary
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDiaryGuestDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDiaryGuestDetails::OAIDiaryGuestDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDiaryGuestDetails::OAIDiaryGuestDetails() {
    this->initializeModel();
}

OAIDiaryGuestDetails::~OAIDiaryGuestDetails() {}

void OAIDiaryGuestDetails::initializeModel() {

    m_allow_marketing_correspondence_isSet = false;
    m_allow_marketing_correspondence_isValid = false;

    m_email_address_isSet = false;
    m_email_address_isValid = false;

    m_forename_isSet = false;
    m_forename_isValid = false;

    m_mobile_phone_isSet = false;
    m_mobile_phone_isValid = false;

    m_oid_isSet = false;
    m_oid_isValid = false;

    m_surname_isSet = false;
    m_surname_isValid = false;
}

void OAIDiaryGuestDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDiaryGuestDetails::fromJsonObject(QJsonObject json) {

    m_allow_marketing_correspondence_isValid = ::OpenAPI::fromJsonValue(m_allow_marketing_correspondence, json[QString("AllowMarketingCorrespondence")]);
    m_allow_marketing_correspondence_isSet = !json[QString("AllowMarketingCorrespondence")].isNull() && m_allow_marketing_correspondence_isValid;

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("EmailAddress")]);
    m_email_address_isSet = !json[QString("EmailAddress")].isNull() && m_email_address_isValid;

    m_forename_isValid = ::OpenAPI::fromJsonValue(m_forename, json[QString("Forename")]);
    m_forename_isSet = !json[QString("Forename")].isNull() && m_forename_isValid;

    m_mobile_phone_isValid = ::OpenAPI::fromJsonValue(m_mobile_phone, json[QString("MobilePhone")]);
    m_mobile_phone_isSet = !json[QString("MobilePhone")].isNull() && m_mobile_phone_isValid;

    m_oid_isValid = ::OpenAPI::fromJsonValue(m_oid, json[QString("OID")]);
    m_oid_isSet = !json[QString("OID")].isNull() && m_oid_isValid;

    m_surname_isValid = ::OpenAPI::fromJsonValue(m_surname, json[QString("Surname")]);
    m_surname_isSet = !json[QString("Surname")].isNull() && m_surname_isValid;
}

QString OAIDiaryGuestDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDiaryGuestDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_marketing_correspondence_isSet) {
        obj.insert(QString("AllowMarketingCorrespondence"), ::OpenAPI::toJsonValue(m_allow_marketing_correspondence));
    }
    if (m_email_address_isSet) {
        obj.insert(QString("EmailAddress"), ::OpenAPI::toJsonValue(m_email_address));
    }
    if (m_forename_isSet) {
        obj.insert(QString("Forename"), ::OpenAPI::toJsonValue(m_forename));
    }
    if (m_mobile_phone_isSet) {
        obj.insert(QString("MobilePhone"), ::OpenAPI::toJsonValue(m_mobile_phone));
    }
    if (m_oid_isSet) {
        obj.insert(QString("OID"), ::OpenAPI::toJsonValue(m_oid));
    }
    if (m_surname_isSet) {
        obj.insert(QString("Surname"), ::OpenAPI::toJsonValue(m_surname));
    }
    return obj;
}

bool OAIDiaryGuestDetails::isAllowMarketingCorrespondence() const {
    return m_allow_marketing_correspondence;
}
void OAIDiaryGuestDetails::setAllowMarketingCorrespondence(const bool &allow_marketing_correspondence) {
    m_allow_marketing_correspondence = allow_marketing_correspondence;
    m_allow_marketing_correspondence_isSet = true;
}

bool OAIDiaryGuestDetails::is_allow_marketing_correspondence_Set() const{
    return m_allow_marketing_correspondence_isSet;
}

bool OAIDiaryGuestDetails::is_allow_marketing_correspondence_Valid() const{
    return m_allow_marketing_correspondence_isValid;
}

QString OAIDiaryGuestDetails::getEmailAddress() const {
    return m_email_address;
}
void OAIDiaryGuestDetails::setEmailAddress(const QString &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAIDiaryGuestDetails::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAIDiaryGuestDetails::is_email_address_Valid() const{
    return m_email_address_isValid;
}

QString OAIDiaryGuestDetails::getForename() const {
    return m_forename;
}
void OAIDiaryGuestDetails::setForename(const QString &forename) {
    m_forename = forename;
    m_forename_isSet = true;
}

bool OAIDiaryGuestDetails::is_forename_Set() const{
    return m_forename_isSet;
}

bool OAIDiaryGuestDetails::is_forename_Valid() const{
    return m_forename_isValid;
}

QString OAIDiaryGuestDetails::getMobilePhone() const {
    return m_mobile_phone;
}
void OAIDiaryGuestDetails::setMobilePhone(const QString &mobile_phone) {
    m_mobile_phone = mobile_phone;
    m_mobile_phone_isSet = true;
}

bool OAIDiaryGuestDetails::is_mobile_phone_Set() const{
    return m_mobile_phone_isSet;
}

bool OAIDiaryGuestDetails::is_mobile_phone_Valid() const{
    return m_mobile_phone_isValid;
}

QString OAIDiaryGuestDetails::getOid() const {
    return m_oid;
}
void OAIDiaryGuestDetails::setOid(const QString &oid) {
    m_oid = oid;
    m_oid_isSet = true;
}

bool OAIDiaryGuestDetails::is_oid_Set() const{
    return m_oid_isSet;
}

bool OAIDiaryGuestDetails::is_oid_Valid() const{
    return m_oid_isValid;
}

QString OAIDiaryGuestDetails::getSurname() const {
    return m_surname;
}
void OAIDiaryGuestDetails::setSurname(const QString &surname) {
    m_surname = surname;
    m_surname_isSet = true;
}

bool OAIDiaryGuestDetails::is_surname_Set() const{
    return m_surname_isSet;
}

bool OAIDiaryGuestDetails::is_surname_Valid() const{
    return m_surname_isValid;
}

bool OAIDiaryGuestDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_marketing_correspondence_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_forename_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_oid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_surname_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDiaryGuestDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
