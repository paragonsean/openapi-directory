/**
 * agentOS API V3, Diary Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3-diary
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDiaryAppointmentModel.h
 *
 * Represents a single diary appointment for a staff member.
 */

#ifndef OAIDiaryAppointmentModel_H
#define OAIDiaryAppointmentModel_H

#include <QJsonObject>

#include "OAILinkedGuestModel.h"
#include "OAILinkedPropertiesModel.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILinkedGuestModel;
class OAILinkedPropertiesModel;

class OAIDiaryAppointmentModel : public OAIObject {
public:
    OAIDiaryAppointmentModel();
    OAIDiaryAppointmentModel(QString json);
    ~OAIDiaryAppointmentModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppointmentType() const;
    void setAppointmentType(const QString &appointment_type);
    bool is_appointment_type_Set() const;
    bool is_appointment_type_Valid() const;

    bool isCancelled() const;
    void setCancelled(const bool &cancelled);
    bool is_cancelled_Set() const;
    bool is_cancelled_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCreatedBy() const;
    void setCreatedBy(const QString &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QString getETag() const;
    void setETag(const QString &e_tag);
    bool is_e_tag_Set() const;
    bool is_e_tag_Valid() const;

    QDateTime getEnd() const;
    void setEnd(const QDateTime &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    QList<OAILinkedGuestModel> getLinkedGuest() const;
    void setLinkedGuest(const QList<OAILinkedGuestModel> &linked_guest);
    bool is_linked_guest_Set() const;
    bool is_linked_guest_Valid() const;

    QList<OAILinkedPropertiesModel> getLinkedProperties() const;
    void setLinkedProperties(const QList<OAILinkedPropertiesModel> &linked_properties);
    bool is_linked_properties_Set() const;
    bool is_linked_properties_Valid() const;

    QDateTime getNextRecurringDate() const;
    void setNextRecurringDate(const QDateTime &next_recurring_date);
    bool is_next_recurring_date_Set() const;
    bool is_next_recurring_date_Valid() const;

    QString getOid() const;
    void setOid(const QString &oid);
    bool is_oid_Set() const;
    bool is_oid_Valid() const;

    qint32 getRecurrence() const;
    void setRecurrence(const qint32 &recurrence);
    bool is_recurrence_Set() const;
    bool is_recurrence_Valid() const;

    QString getRecurrenceType() const;
    void setRecurrenceType(const QString &recurrence_type);
    bool is_recurrence_type_Set() const;
    bool is_recurrence_type_Valid() const;

    QDateTime getRemindAt() const;
    void setRemindAt(const QDateTime &remind_at);
    bool is_remind_at_Set() const;
    bool is_remind_at_Valid() const;

    QString getRemindBefore() const;
    void setRemindBefore(const QString &remind_before);
    bool is_remind_before_Set() const;
    bool is_remind_before_Valid() const;

    QString getStaff() const;
    void setStaff(const QString &staff);
    bool is_staff_Set() const;
    bool is_staff_Valid() const;

    QDateTime getStart() const;
    void setStart(const QDateTime &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_appointment_type;
    bool m_appointment_type_isSet;
    bool m_appointment_type_isValid;

    bool m_cancelled;
    bool m_cancelled_isSet;
    bool m_cancelled_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QString m_e_tag;
    bool m_e_tag_isSet;
    bool m_e_tag_isValid;

    QDateTime m_end;
    bool m_end_isSet;
    bool m_end_isValid;

    QList<OAILinkedGuestModel> m_linked_guest;
    bool m_linked_guest_isSet;
    bool m_linked_guest_isValid;

    QList<OAILinkedPropertiesModel> m_linked_properties;
    bool m_linked_properties_isSet;
    bool m_linked_properties_isValid;

    QDateTime m_next_recurring_date;
    bool m_next_recurring_date_isSet;
    bool m_next_recurring_date_isValid;

    QString m_oid;
    bool m_oid_isSet;
    bool m_oid_isValid;

    qint32 m_recurrence;
    bool m_recurrence_isSet;
    bool m_recurrence_isValid;

    QString m_recurrence_type;
    bool m_recurrence_type_isSet;
    bool m_recurrence_type_isValid;

    QDateTime m_remind_at;
    bool m_remind_at_isSet;
    bool m_remind_at_isValid;

    QString m_remind_before;
    bool m_remind_before_isSet;
    bool m_remind_before_isValid;

    QString m_staff;
    bool m_staff_isSet;
    bool m_staff_isValid;

    QDateTime m_start;
    bool m_start_isSet;
    bool m_start_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDiaryAppointmentModel)

#endif // OAIDiaryAppointmentModel_H
