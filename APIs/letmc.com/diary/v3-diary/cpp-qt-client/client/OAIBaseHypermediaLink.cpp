/**
 * agentOS API V3, Diary Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3-diary
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBaseHypermediaLink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBaseHypermediaLink::OAIBaseHypermediaLink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBaseHypermediaLink::OAIBaseHypermediaLink() {
    this->initializeModel();
}

OAIBaseHypermediaLink::~OAIBaseHypermediaLink() {}

void OAIBaseHypermediaLink::initializeModel() {

    m_href_isSet = false;
    m_href_isValid = false;

    m_method_isSet = false;
    m_method_isValid = false;

    m_relationship_isSet = false;
    m_relationship_isValid = false;
}

void OAIBaseHypermediaLink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBaseHypermediaLink::fromJsonObject(QJsonObject json) {

    m_href_isValid = ::OpenAPI::fromJsonValue(m_href, json[QString("Href")]);
    m_href_isSet = !json[QString("Href")].isNull() && m_href_isValid;

    m_method_isValid = ::OpenAPI::fromJsonValue(m_method, json[QString("Method")]);
    m_method_isSet = !json[QString("Method")].isNull() && m_method_isValid;

    m_relationship_isValid = ::OpenAPI::fromJsonValue(m_relationship, json[QString("Relationship")]);
    m_relationship_isSet = !json[QString("Relationship")].isNull() && m_relationship_isValid;
}

QString OAIBaseHypermediaLink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBaseHypermediaLink::asJsonObject() const {
    QJsonObject obj;
    if (m_href_isSet) {
        obj.insert(QString("Href"), ::OpenAPI::toJsonValue(m_href));
    }
    if (m_method_isSet) {
        obj.insert(QString("Method"), ::OpenAPI::toJsonValue(m_method));
    }
    if (m_relationship_isSet) {
        obj.insert(QString("Relationship"), ::OpenAPI::toJsonValue(m_relationship));
    }
    return obj;
}

QString OAIBaseHypermediaLink::getHref() const {
    return m_href;
}
void OAIBaseHypermediaLink::setHref(const QString &href) {
    m_href = href;
    m_href_isSet = true;
}

bool OAIBaseHypermediaLink::is_href_Set() const{
    return m_href_isSet;
}

bool OAIBaseHypermediaLink::is_href_Valid() const{
    return m_href_isValid;
}

QString OAIBaseHypermediaLink::getMethod() const {
    return m_method;
}
void OAIBaseHypermediaLink::setMethod(const QString &method) {
    m_method = method;
    m_method_isSet = true;
}

bool OAIBaseHypermediaLink::is_method_Set() const{
    return m_method_isSet;
}

bool OAIBaseHypermediaLink::is_method_Valid() const{
    return m_method_isValid;
}

QString OAIBaseHypermediaLink::getRelationship() const {
    return m_relationship;
}
void OAIBaseHypermediaLink::setRelationship(const QString &relationship) {
    m_relationship = relationship;
    m_relationship_isSet = true;
}

bool OAIBaseHypermediaLink::is_relationship_Set() const{
    return m_relationship_isSet;
}

bool OAIBaseHypermediaLink::is_relationship_Valid() const{
    return m_relationship_isValid;
}

bool OAIBaseHypermediaLink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_href_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_relationship_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBaseHypermediaLink::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
