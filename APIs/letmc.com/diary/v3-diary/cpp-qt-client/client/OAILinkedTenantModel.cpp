/**
 * agentOS API V3, Diary Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3-diary
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkedTenantModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkedTenantModel::OAILinkedTenantModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkedTenantModel::OAILinkedTenantModel() {
    this->initializeModel();
}

OAILinkedTenantModel::~OAILinkedTenantModel() {}

void OAILinkedTenantModel::initializeModel() {

    m_e_tag_isSet = false;
    m_e_tag_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_forename_isSet = false;
    m_forename_isValid = false;

    m_oid_isSet = false;
    m_oid_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_surname_isSet = false;
    m_surname_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAILinkedTenantModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkedTenantModel::fromJsonObject(QJsonObject json) {

    m_e_tag_isValid = ::OpenAPI::fromJsonValue(m_e_tag, json[QString("ETag")]);
    m_e_tag_isSet = !json[QString("ETag")].isNull() && m_e_tag_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("Email")]);
    m_email_isSet = !json[QString("Email")].isNull() && m_email_isValid;

    m_forename_isValid = ::OpenAPI::fromJsonValue(m_forename, json[QString("Forename")]);
    m_forename_isSet = !json[QString("Forename")].isNull() && m_forename_isValid;

    m_oid_isValid = ::OpenAPI::fromJsonValue(m_oid, json[QString("OID")]);
    m_oid_isSet = !json[QString("OID")].isNull() && m_oid_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("PhoneNumber")]);
    m_phone_number_isSet = !json[QString("PhoneNumber")].isNull() && m_phone_number_isValid;

    m_surname_isValid = ::OpenAPI::fromJsonValue(m_surname, json[QString("Surname")]);
    m_surname_isSet = !json[QString("Surname")].isNull() && m_surname_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("Title")]);
    m_title_isSet = !json[QString("Title")].isNull() && m_title_isValid;
}

QString OAILinkedTenantModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkedTenantModel::asJsonObject() const {
    QJsonObject obj;
    if (m_e_tag_isSet) {
        obj.insert(QString("ETag"), ::OpenAPI::toJsonValue(m_e_tag));
    }
    if (m_email_isSet) {
        obj.insert(QString("Email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_forename_isSet) {
        obj.insert(QString("Forename"), ::OpenAPI::toJsonValue(m_forename));
    }
    if (m_oid_isSet) {
        obj.insert(QString("OID"), ::OpenAPI::toJsonValue(m_oid));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("PhoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_surname_isSet) {
        obj.insert(QString("Surname"), ::OpenAPI::toJsonValue(m_surname));
    }
    if (m_title_isSet) {
        obj.insert(QString("Title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAILinkedTenantModel::getETag() const {
    return m_e_tag;
}
void OAILinkedTenantModel::setETag(const QString &e_tag) {
    m_e_tag = e_tag;
    m_e_tag_isSet = true;
}

bool OAILinkedTenantModel::is_e_tag_Set() const{
    return m_e_tag_isSet;
}

bool OAILinkedTenantModel::is_e_tag_Valid() const{
    return m_e_tag_isValid;
}

QString OAILinkedTenantModel::getEmail() const {
    return m_email;
}
void OAILinkedTenantModel::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAILinkedTenantModel::is_email_Set() const{
    return m_email_isSet;
}

bool OAILinkedTenantModel::is_email_Valid() const{
    return m_email_isValid;
}

QString OAILinkedTenantModel::getForename() const {
    return m_forename;
}
void OAILinkedTenantModel::setForename(const QString &forename) {
    m_forename = forename;
    m_forename_isSet = true;
}

bool OAILinkedTenantModel::is_forename_Set() const{
    return m_forename_isSet;
}

bool OAILinkedTenantModel::is_forename_Valid() const{
    return m_forename_isValid;
}

QString OAILinkedTenantModel::getOid() const {
    return m_oid;
}
void OAILinkedTenantModel::setOid(const QString &oid) {
    m_oid = oid;
    m_oid_isSet = true;
}

bool OAILinkedTenantModel::is_oid_Set() const{
    return m_oid_isSet;
}

bool OAILinkedTenantModel::is_oid_Valid() const{
    return m_oid_isValid;
}

QString OAILinkedTenantModel::getPhoneNumber() const {
    return m_phone_number;
}
void OAILinkedTenantModel::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAILinkedTenantModel::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAILinkedTenantModel::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAILinkedTenantModel::getSurname() const {
    return m_surname;
}
void OAILinkedTenantModel::setSurname(const QString &surname) {
    m_surname = surname;
    m_surname_isSet = true;
}

bool OAILinkedTenantModel::is_surname_Set() const{
    return m_surname_isSet;
}

bool OAILinkedTenantModel::is_surname_Valid() const{
    return m_surname_isValid;
}

QString OAILinkedTenantModel::getTitle() const {
    return m_title;
}
void OAILinkedTenantModel::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAILinkedTenantModel::is_title_Set() const{
    return m_title_isSet;
}

bool OAILinkedTenantModel::is_title_Valid() const{
    return m_title_isValid;
}

bool OAILinkedTenantModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_e_tag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_forename_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_oid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_surname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkedTenantModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
