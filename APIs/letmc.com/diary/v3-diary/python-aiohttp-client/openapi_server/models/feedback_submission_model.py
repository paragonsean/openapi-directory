# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FeedbackSubmissionModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, appointment_id: str=None, feedback: str=None, property_id: str=None):
        """FeedbackSubmissionModel - a model defined in OpenAPI

        :param appointment_id: The appointment_id of this FeedbackSubmissionModel.
        :param feedback: The feedback of this FeedbackSubmissionModel.
        :param property_id: The property_id of this FeedbackSubmissionModel.
        """
        self.openapi_types = {
            'appointment_id': str,
            'feedback': str,
            'property_id': str
        }

        self.attribute_map = {
            'appointment_id': 'AppointmentID',
            'feedback': 'Feedback',
            'property_id': 'PropertyID'
        }

        self._appointment_id = appointment_id
        self._feedback = feedback
        self._property_id = property_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FeedbackSubmissionModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FeedbackSubmissionModel of this FeedbackSubmissionModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def appointment_id(self):
        """Gets the appointment_id of this FeedbackSubmissionModel.

        Appointment to submit feedback to:-

        :return: The appointment_id of this FeedbackSubmissionModel.
        :rtype: str
        """
        return self._appointment_id

    @appointment_id.setter
    def appointment_id(self, appointment_id):
        """Sets the appointment_id of this FeedbackSubmissionModel.

        Appointment to submit feedback to:-

        :param appointment_id: The appointment_id of this FeedbackSubmissionModel.
        :type appointment_id: str
        """

        self._appointment_id = appointment_id

    @property
    def feedback(self):
        """Gets the feedback of this FeedbackSubmissionModel.

        Feedback to submit:-

        :return: The feedback of this FeedbackSubmissionModel.
        :rtype: str
        """
        return self._feedback

    @feedback.setter
    def feedback(self, feedback):
        """Sets the feedback of this FeedbackSubmissionModel.

        Feedback to submit:-

        :param feedback: The feedback of this FeedbackSubmissionModel.
        :type feedback: str
        """

        self._feedback = feedback

    @property
    def property_id(self):
        """Gets the property_id of this FeedbackSubmissionModel.

        Property to submit feedback to:-

        :return: The property_id of this FeedbackSubmissionModel.
        :rtype: str
        """
        return self._property_id

    @property_id.setter
    def property_id(self, property_id):
        """Sets the property_id of this FeedbackSubmissionModel.

        Property to submit feedback to:-

        :param property_id: The property_id of this FeedbackSubmissionModel.
        :type property_id: str
        """

        self._property_id = property_id
