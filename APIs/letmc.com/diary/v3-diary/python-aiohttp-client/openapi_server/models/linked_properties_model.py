# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.latest_tenancy_model import LatestTenancyModel
from openapi_server.models.linked_landlord_model import LinkedLandlordModel
from openapi_server import util


class LinkedPropertiesModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address1: str=None, address2: str=None, address3: str=None, address4: str=None, address_flat_room_number: str=None, address_number: str=None, e_tag: str=None, latest_tenancy: LatestTenancyModel=None, main_landlord: LinkedLandlordModel=None, oid: str=None, postcode: str=None):
        """LinkedPropertiesModel - a model defined in OpenAPI

        :param address1: The address1 of this LinkedPropertiesModel.
        :param address2: The address2 of this LinkedPropertiesModel.
        :param address3: The address3 of this LinkedPropertiesModel.
        :param address4: The address4 of this LinkedPropertiesModel.
        :param address_flat_room_number: The address_flat_room_number of this LinkedPropertiesModel.
        :param address_number: The address_number of this LinkedPropertiesModel.
        :param e_tag: The e_tag of this LinkedPropertiesModel.
        :param latest_tenancy: The latest_tenancy of this LinkedPropertiesModel.
        :param main_landlord: The main_landlord of this LinkedPropertiesModel.
        :param oid: The oid of this LinkedPropertiesModel.
        :param postcode: The postcode of this LinkedPropertiesModel.
        """
        self.openapi_types = {
            'address1': str,
            'address2': str,
            'address3': str,
            'address4': str,
            'address_flat_room_number': str,
            'address_number': str,
            'e_tag': str,
            'latest_tenancy': LatestTenancyModel,
            'main_landlord': LinkedLandlordModel,
            'oid': str,
            'postcode': str
        }

        self.attribute_map = {
            'address1': 'Address1',
            'address2': 'Address2',
            'address3': 'Address3',
            'address4': 'Address4',
            'address_flat_room_number': 'AddressFlatRoomNumber',
            'address_number': 'AddressNumber',
            'e_tag': 'ETag',
            'latest_tenancy': 'LatestTenancy',
            'main_landlord': 'MainLandlord',
            'oid': 'OID',
            'postcode': 'Postcode'
        }

        self._address1 = address1
        self._address2 = address2
        self._address3 = address3
        self._address4 = address4
        self._address_flat_room_number = address_flat_room_number
        self._address_number = address_number
        self._e_tag = e_tag
        self._latest_tenancy = latest_tenancy
        self._main_landlord = main_landlord
        self._oid = oid
        self._postcode = postcode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LinkedPropertiesModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LinkedPropertiesModel of this LinkedPropertiesModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address1(self):
        """Gets the address1 of this LinkedPropertiesModel.

        Address 1

        :return: The address1 of this LinkedPropertiesModel.
        :rtype: str
        """
        return self._address1

    @address1.setter
    def address1(self, address1):
        """Sets the address1 of this LinkedPropertiesModel.

        Address 1

        :param address1: The address1 of this LinkedPropertiesModel.
        :type address1: str
        """

        self._address1 = address1

    @property
    def address2(self):
        """Gets the address2 of this LinkedPropertiesModel.

        Address2

        :return: The address2 of this LinkedPropertiesModel.
        :rtype: str
        """
        return self._address2

    @address2.setter
    def address2(self, address2):
        """Sets the address2 of this LinkedPropertiesModel.

        Address2

        :param address2: The address2 of this LinkedPropertiesModel.
        :type address2: str
        """

        self._address2 = address2

    @property
    def address3(self):
        """Gets the address3 of this LinkedPropertiesModel.

        Address 3

        :return: The address3 of this LinkedPropertiesModel.
        :rtype: str
        """
        return self._address3

    @address3.setter
    def address3(self, address3):
        """Sets the address3 of this LinkedPropertiesModel.

        Address 3

        :param address3: The address3 of this LinkedPropertiesModel.
        :type address3: str
        """

        self._address3 = address3

    @property
    def address4(self):
        """Gets the address4 of this LinkedPropertiesModel.

        Address 4

        :return: The address4 of this LinkedPropertiesModel.
        :rtype: str
        """
        return self._address4

    @address4.setter
    def address4(self, address4):
        """Sets the address4 of this LinkedPropertiesModel.

        Address 4

        :param address4: The address4 of this LinkedPropertiesModel.
        :type address4: str
        """

        self._address4 = address4

    @property
    def address_flat_room_number(self):
        """Gets the address_flat_room_number of this LinkedPropertiesModel.

        Address Flat Room Number

        :return: The address_flat_room_number of this LinkedPropertiesModel.
        :rtype: str
        """
        return self._address_flat_room_number

    @address_flat_room_number.setter
    def address_flat_room_number(self, address_flat_room_number):
        """Sets the address_flat_room_number of this LinkedPropertiesModel.

        Address Flat Room Number

        :param address_flat_room_number: The address_flat_room_number of this LinkedPropertiesModel.
        :type address_flat_room_number: str
        """

        self._address_flat_room_number = address_flat_room_number

    @property
    def address_number(self):
        """Gets the address_number of this LinkedPropertiesModel.

        Address Number

        :return: The address_number of this LinkedPropertiesModel.
        :rtype: str
        """
        return self._address_number

    @address_number.setter
    def address_number(self, address_number):
        """Sets the address_number of this LinkedPropertiesModel.

        Address Number

        :param address_number: The address_number of this LinkedPropertiesModel.
        :type address_number: str
        """

        self._address_number = address_number

    @property
    def e_tag(self):
        """Gets the e_tag of this LinkedPropertiesModel.

        ETag

        :return: The e_tag of this LinkedPropertiesModel.
        :rtype: str
        """
        return self._e_tag

    @e_tag.setter
    def e_tag(self, e_tag):
        """Sets the e_tag of this LinkedPropertiesModel.

        ETag

        :param e_tag: The e_tag of this LinkedPropertiesModel.
        :type e_tag: str
        """

        self._e_tag = e_tag

    @property
    def latest_tenancy(self):
        """Gets the latest_tenancy of this LinkedPropertiesModel.


        :return: The latest_tenancy of this LinkedPropertiesModel.
        :rtype: LatestTenancyModel
        """
        return self._latest_tenancy

    @latest_tenancy.setter
    def latest_tenancy(self, latest_tenancy):
        """Sets the latest_tenancy of this LinkedPropertiesModel.


        :param latest_tenancy: The latest_tenancy of this LinkedPropertiesModel.
        :type latest_tenancy: LatestTenancyModel
        """

        self._latest_tenancy = latest_tenancy

    @property
    def main_landlord(self):
        """Gets the main_landlord of this LinkedPropertiesModel.


        :return: The main_landlord of this LinkedPropertiesModel.
        :rtype: LinkedLandlordModel
        """
        return self._main_landlord

    @main_landlord.setter
    def main_landlord(self, main_landlord):
        """Sets the main_landlord of this LinkedPropertiesModel.


        :param main_landlord: The main_landlord of this LinkedPropertiesModel.
        :type main_landlord: LinkedLandlordModel
        """

        self._main_landlord = main_landlord

    @property
    def oid(self):
        """Gets the oid of this LinkedPropertiesModel.

        OID

        :return: The oid of this LinkedPropertiesModel.
        :rtype: str
        """
        return self._oid

    @oid.setter
    def oid(self, oid):
        """Sets the oid of this LinkedPropertiesModel.

        OID

        :param oid: The oid of this LinkedPropertiesModel.
        :type oid: str
        """

        self._oid = oid

    @property
    def postcode(self):
        """Gets the postcode of this LinkedPropertiesModel.

        Postcode

        :return: The postcode of this LinkedPropertiesModel.
        :rtype: str
        """
        return self._postcode

    @postcode.setter
    def postcode(self, postcode):
        """Sets the postcode of this LinkedPropertiesModel.

        Postcode

        :param postcode: The postcode of this LinkedPropertiesModel.
        :type postcode: str
        """

        self._postcode = postcode
