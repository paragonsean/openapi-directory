# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.linked_tenant_model import LinkedTenantModel
from openapi_server import util


class LatestTenancyModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_arrangements: str=None, access_mobile1: str=None, access_mobile2: str=None, access_mobile3: str=None, access_name1: str=None, access_name2: str=None, access_name3: str=None, e_tag: str=None, end_date: datetime=None, fixed_date: datetime=None, global_reference: str=None, is_tenancy_ended: bool=None, is_tenancy_proposed: bool=None, is_tenancy_signed: bool=None, linked_tenants: List[LinkedTenantModel]=None, oid: str=None, start_date: datetime=None):
        """LatestTenancyModel - a model defined in OpenAPI

        :param access_arrangements: The access_arrangements of this LatestTenancyModel.
        :param access_mobile1: The access_mobile1 of this LatestTenancyModel.
        :param access_mobile2: The access_mobile2 of this LatestTenancyModel.
        :param access_mobile3: The access_mobile3 of this LatestTenancyModel.
        :param access_name1: The access_name1 of this LatestTenancyModel.
        :param access_name2: The access_name2 of this LatestTenancyModel.
        :param access_name3: The access_name3 of this LatestTenancyModel.
        :param e_tag: The e_tag of this LatestTenancyModel.
        :param end_date: The end_date of this LatestTenancyModel.
        :param fixed_date: The fixed_date of this LatestTenancyModel.
        :param global_reference: The global_reference of this LatestTenancyModel.
        :param is_tenancy_ended: The is_tenancy_ended of this LatestTenancyModel.
        :param is_tenancy_proposed: The is_tenancy_proposed of this LatestTenancyModel.
        :param is_tenancy_signed: The is_tenancy_signed of this LatestTenancyModel.
        :param linked_tenants: The linked_tenants of this LatestTenancyModel.
        :param oid: The oid of this LatestTenancyModel.
        :param start_date: The start_date of this LatestTenancyModel.
        """
        self.openapi_types = {
            'access_arrangements': str,
            'access_mobile1': str,
            'access_mobile2': str,
            'access_mobile3': str,
            'access_name1': str,
            'access_name2': str,
            'access_name3': str,
            'e_tag': str,
            'end_date': datetime,
            'fixed_date': datetime,
            'global_reference': str,
            'is_tenancy_ended': bool,
            'is_tenancy_proposed': bool,
            'is_tenancy_signed': bool,
            'linked_tenants': List[LinkedTenantModel],
            'oid': str,
            'start_date': datetime
        }

        self.attribute_map = {
            'access_arrangements': 'AccessArrangements',
            'access_mobile1': 'AccessMobile1',
            'access_mobile2': 'AccessMobile2',
            'access_mobile3': 'AccessMobile3',
            'access_name1': 'AccessName1',
            'access_name2': 'AccessName2',
            'access_name3': 'AccessName3',
            'e_tag': 'ETag',
            'end_date': 'EndDate',
            'fixed_date': 'FixedDate',
            'global_reference': 'GlobalReference',
            'is_tenancy_ended': 'IsTenancyEnded',
            'is_tenancy_proposed': 'IsTenancyProposed',
            'is_tenancy_signed': 'IsTenancySigned',
            'linked_tenants': 'LinkedTenants',
            'oid': 'OID',
            'start_date': 'StartDate'
        }

        self._access_arrangements = access_arrangements
        self._access_mobile1 = access_mobile1
        self._access_mobile2 = access_mobile2
        self._access_mobile3 = access_mobile3
        self._access_name1 = access_name1
        self._access_name2 = access_name2
        self._access_name3 = access_name3
        self._e_tag = e_tag
        self._end_date = end_date
        self._fixed_date = fixed_date
        self._global_reference = global_reference
        self._is_tenancy_ended = is_tenancy_ended
        self._is_tenancy_proposed = is_tenancy_proposed
        self._is_tenancy_signed = is_tenancy_signed
        self._linked_tenants = linked_tenants
        self._oid = oid
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LatestTenancyModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LatestTenancyModel of this LatestTenancyModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_arrangements(self):
        """Gets the access_arrangements of this LatestTenancyModel.

        Access Arrangements

        :return: The access_arrangements of this LatestTenancyModel.
        :rtype: str
        """
        return self._access_arrangements

    @access_arrangements.setter
    def access_arrangements(self, access_arrangements):
        """Sets the access_arrangements of this LatestTenancyModel.

        Access Arrangements

        :param access_arrangements: The access_arrangements of this LatestTenancyModel.
        :type access_arrangements: str
        """

        self._access_arrangements = access_arrangements

    @property
    def access_mobile1(self):
        """Gets the access_mobile1 of this LatestTenancyModel.

        Arrange access Mobile 1

        :return: The access_mobile1 of this LatestTenancyModel.
        :rtype: str
        """
        return self._access_mobile1

    @access_mobile1.setter
    def access_mobile1(self, access_mobile1):
        """Sets the access_mobile1 of this LatestTenancyModel.

        Arrange access Mobile 1

        :param access_mobile1: The access_mobile1 of this LatestTenancyModel.
        :type access_mobile1: str
        """

        self._access_mobile1 = access_mobile1

    @property
    def access_mobile2(self):
        """Gets the access_mobile2 of this LatestTenancyModel.

        Arrange access Mobile 2

        :return: The access_mobile2 of this LatestTenancyModel.
        :rtype: str
        """
        return self._access_mobile2

    @access_mobile2.setter
    def access_mobile2(self, access_mobile2):
        """Sets the access_mobile2 of this LatestTenancyModel.

        Arrange access Mobile 2

        :param access_mobile2: The access_mobile2 of this LatestTenancyModel.
        :type access_mobile2: str
        """

        self._access_mobile2 = access_mobile2

    @property
    def access_mobile3(self):
        """Gets the access_mobile3 of this LatestTenancyModel.

        Arrange access Mobile 3

        :return: The access_mobile3 of this LatestTenancyModel.
        :rtype: str
        """
        return self._access_mobile3

    @access_mobile3.setter
    def access_mobile3(self, access_mobile3):
        """Sets the access_mobile3 of this LatestTenancyModel.

        Arrange access Mobile 3

        :param access_mobile3: The access_mobile3 of this LatestTenancyModel.
        :type access_mobile3: str
        """

        self._access_mobile3 = access_mobile3

    @property
    def access_name1(self):
        """Gets the access_name1 of this LatestTenancyModel.

        Arrange access contact name 1

        :return: The access_name1 of this LatestTenancyModel.
        :rtype: str
        """
        return self._access_name1

    @access_name1.setter
    def access_name1(self, access_name1):
        """Sets the access_name1 of this LatestTenancyModel.

        Arrange access contact name 1

        :param access_name1: The access_name1 of this LatestTenancyModel.
        :type access_name1: str
        """

        self._access_name1 = access_name1

    @property
    def access_name2(self):
        """Gets the access_name2 of this LatestTenancyModel.

        Arrange access contact name 2

        :return: The access_name2 of this LatestTenancyModel.
        :rtype: str
        """
        return self._access_name2

    @access_name2.setter
    def access_name2(self, access_name2):
        """Sets the access_name2 of this LatestTenancyModel.

        Arrange access contact name 2

        :param access_name2: The access_name2 of this LatestTenancyModel.
        :type access_name2: str
        """

        self._access_name2 = access_name2

    @property
    def access_name3(self):
        """Gets the access_name3 of this LatestTenancyModel.

        Arrange access contact name 3

        :return: The access_name3 of this LatestTenancyModel.
        :rtype: str
        """
        return self._access_name3

    @access_name3.setter
    def access_name3(self, access_name3):
        """Sets the access_name3 of this LatestTenancyModel.

        Arrange access contact name 3

        :param access_name3: The access_name3 of this LatestTenancyModel.
        :type access_name3: str
        """

        self._access_name3 = access_name3

    @property
    def e_tag(self):
        """Gets the e_tag of this LatestTenancyModel.

        ETag

        :return: The e_tag of this LatestTenancyModel.
        :rtype: str
        """
        return self._e_tag

    @e_tag.setter
    def e_tag(self, e_tag):
        """Sets the e_tag of this LatestTenancyModel.

        ETag

        :param e_tag: The e_tag of this LatestTenancyModel.
        :type e_tag: str
        """

        self._e_tag = e_tag

    @property
    def end_date(self):
        """Gets the end_date of this LatestTenancyModel.

        The end date of the Tenancy

        :return: The end_date of this LatestTenancyModel.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this LatestTenancyModel.

        The end date of the Tenancy

        :param end_date: The end_date of this LatestTenancyModel.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def fixed_date(self):
        """Gets the fixed_date of this LatestTenancyModel.

        The fixed date of the Tenancy

        :return: The fixed_date of this LatestTenancyModel.
        :rtype: datetime
        """
        return self._fixed_date

    @fixed_date.setter
    def fixed_date(self, fixed_date):
        """Sets the fixed_date of this LatestTenancyModel.

        The fixed date of the Tenancy

        :param fixed_date: The fixed_date of this LatestTenancyModel.
        :type fixed_date: datetime
        """

        self._fixed_date = fixed_date

    @property
    def global_reference(self):
        """Gets the global_reference of this LatestTenancyModel.

        The unique global reference of the Tenancy

        :return: The global_reference of this LatestTenancyModel.
        :rtype: str
        """
        return self._global_reference

    @global_reference.setter
    def global_reference(self, global_reference):
        """Sets the global_reference of this LatestTenancyModel.

        The unique global reference of the Tenancy

        :param global_reference: The global_reference of this LatestTenancyModel.
        :type global_reference: str
        """

        self._global_reference = global_reference

    @property
    def is_tenancy_ended(self):
        """Gets the is_tenancy_ended of this LatestTenancyModel.

        Has the Tenancy ended?

        :return: The is_tenancy_ended of this LatestTenancyModel.
        :rtype: bool
        """
        return self._is_tenancy_ended

    @is_tenancy_ended.setter
    def is_tenancy_ended(self, is_tenancy_ended):
        """Sets the is_tenancy_ended of this LatestTenancyModel.

        Has the Tenancy ended?

        :param is_tenancy_ended: The is_tenancy_ended of this LatestTenancyModel.
        :type is_tenancy_ended: bool
        """

        self._is_tenancy_ended = is_tenancy_ended

    @property
    def is_tenancy_proposed(self):
        """Gets the is_tenancy_proposed of this LatestTenancyModel.

        Is the tenancy Proposed?

        :return: The is_tenancy_proposed of this LatestTenancyModel.
        :rtype: bool
        """
        return self._is_tenancy_proposed

    @is_tenancy_proposed.setter
    def is_tenancy_proposed(self, is_tenancy_proposed):
        """Sets the is_tenancy_proposed of this LatestTenancyModel.

        Is the tenancy Proposed?

        :param is_tenancy_proposed: The is_tenancy_proposed of this LatestTenancyModel.
        :type is_tenancy_proposed: bool
        """

        self._is_tenancy_proposed = is_tenancy_proposed

    @property
    def is_tenancy_signed(self):
        """Gets the is_tenancy_signed of this LatestTenancyModel.

        Is the tenancy signed?

        :return: The is_tenancy_signed of this LatestTenancyModel.
        :rtype: bool
        """
        return self._is_tenancy_signed

    @is_tenancy_signed.setter
    def is_tenancy_signed(self, is_tenancy_signed):
        """Sets the is_tenancy_signed of this LatestTenancyModel.

        Is the tenancy signed?

        :param is_tenancy_signed: The is_tenancy_signed of this LatestTenancyModel.
        :type is_tenancy_signed: bool
        """

        self._is_tenancy_signed = is_tenancy_signed

    @property
    def linked_tenants(self):
        """Gets the linked_tenants of this LatestTenancyModel.

        A collection of tenants linked to the tenancy:-

        :return: The linked_tenants of this LatestTenancyModel.
        :rtype: List[LinkedTenantModel]
        """
        return self._linked_tenants

    @linked_tenants.setter
    def linked_tenants(self, linked_tenants):
        """Sets the linked_tenants of this LatestTenancyModel.

        A collection of tenants linked to the tenancy:-

        :param linked_tenants: The linked_tenants of this LatestTenancyModel.
        :type linked_tenants: List[LinkedTenantModel]
        """

        self._linked_tenants = linked_tenants

    @property
    def oid(self):
        """Gets the oid of this LatestTenancyModel.

        OID

        :return: The oid of this LatestTenancyModel.
        :rtype: str
        """
        return self._oid

    @oid.setter
    def oid(self, oid):
        """Sets the oid of this LatestTenancyModel.

        OID

        :param oid: The oid of this LatestTenancyModel.
        :type oid: str
        """

        self._oid = oid

    @property
    def start_date(self):
        """Gets the start_date of this LatestTenancyModel.

        The start date of the Tenancy

        :return: The start_date of this LatestTenancyModel.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this LatestTenancyModel.

        The start date of the Tenancy

        :param start_date: The start_date of this LatestTenancyModel.
        :type start_date: datetime
        """

        self._start_date = start_date
