/**
 * agentOS API V3, Diary Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3-diary
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AgentOsApiV3DiaryCallGroup);
  }
}(this, function(expect, AgentOsApiV3DiaryCallGroup) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LatestTenancyModel', function() {
    it('should create an instance of LatestTenancyModel', function() {
      // uncomment below and update the code to test LatestTenancyModel
      //var instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
      //expect(instance).to.be.a(AgentOsApiV3DiaryCallGroup.LatestTenancyModel);
    });

    it('should have the property accessArrangements (base name: "AccessArrangements")', function() {
      // uncomment below and update the code to test the property accessArrangements
      //var instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property accessMobile1 (base name: "AccessMobile1")', function() {
      // uncomment below and update the code to test the property accessMobile1
      //var instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property accessMobile2 (base name: "AccessMobile2")', function() {
      // uncomment below and update the code to test the property accessMobile2
      //var instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property accessMobile3 (base name: "AccessMobile3")', function() {
      // uncomment below and update the code to test the property accessMobile3
      //var instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property accessName1 (base name: "AccessName1")', function() {
      // uncomment below and update the code to test the property accessName1
      //var instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property accessName2 (base name: "AccessName2")', function() {
      // uncomment below and update the code to test the property accessName2
      //var instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property accessName3 (base name: "AccessName3")', function() {
      // uncomment below and update the code to test the property accessName3
      //var instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property eTag (base name: "ETag")', function() {
      // uncomment below and update the code to test the property eTag
      //var instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property endDate (base name: "EndDate")', function() {
      // uncomment below and update the code to test the property endDate
      //var instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property fixedDate (base name: "FixedDate")', function() {
      // uncomment below and update the code to test the property fixedDate
      //var instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property globalReference (base name: "GlobalReference")', function() {
      // uncomment below and update the code to test the property globalReference
      //var instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property isTenancyEnded (base name: "IsTenancyEnded")', function() {
      // uncomment below and update the code to test the property isTenancyEnded
      //var instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property isTenancyProposed (base name: "IsTenancyProposed")', function() {
      // uncomment below and update the code to test the property isTenancyProposed
      //var instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property isTenancySigned (base name: "IsTenancySigned")', function() {
      // uncomment below and update the code to test the property isTenancySigned
      //var instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property linkedTenants (base name: "LinkedTenants")', function() {
      // uncomment below and update the code to test the property linkedTenants
      //var instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property OID (base name: "OID")', function() {
      // uncomment below and update the code to test the property OID
      //var instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "StartDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instance = new AgentOsApiV3DiaryCallGroup.LatestTenancyModel();
      //expect(instance).to.be();
    });

  });

}));
