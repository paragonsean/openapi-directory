/**
 * agentOS API V3, Diary Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3-diary
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FeedbackSubmissionModel model module.
 * @module model/FeedbackSubmissionModel
 * @version v3-diary
 */
class FeedbackSubmissionModel {
    /**
     * Constructs a new <code>FeedbackSubmissionModel</code>.
     * Feedback Submission Model:-
     * @alias module:model/FeedbackSubmissionModel
     */
    constructor() { 
        
        FeedbackSubmissionModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FeedbackSubmissionModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FeedbackSubmissionModel} obj Optional instance to populate.
     * @return {module:model/FeedbackSubmissionModel} The populated <code>FeedbackSubmissionModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FeedbackSubmissionModel();

            if (data.hasOwnProperty('AppointmentID')) {
                obj['AppointmentID'] = ApiClient.convertToType(data['AppointmentID'], 'String');
            }
            if (data.hasOwnProperty('Feedback')) {
                obj['Feedback'] = ApiClient.convertToType(data['Feedback'], 'String');
            }
            if (data.hasOwnProperty('PropertyID')) {
                obj['PropertyID'] = ApiClient.convertToType(data['PropertyID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FeedbackSubmissionModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FeedbackSubmissionModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AppointmentID'] && !(typeof data['AppointmentID'] === 'string' || data['AppointmentID'] instanceof String)) {
            throw new Error("Expected the field `AppointmentID` to be a primitive type in the JSON string but got " + data['AppointmentID']);
        }
        // ensure the json data is a string
        if (data['Feedback'] && !(typeof data['Feedback'] === 'string' || data['Feedback'] instanceof String)) {
            throw new Error("Expected the field `Feedback` to be a primitive type in the JSON string but got " + data['Feedback']);
        }
        // ensure the json data is a string
        if (data['PropertyID'] && !(typeof data['PropertyID'] === 'string' || data['PropertyID'] instanceof String)) {
            throw new Error("Expected the field `PropertyID` to be a primitive type in the JSON string but got " + data['PropertyID']);
        }

        return true;
    }


}



/**
 * Appointment to submit feedback to:-
 * @member {String} AppointmentID
 */
FeedbackSubmissionModel.prototype['AppointmentID'] = undefined;

/**
 * Feedback to submit:-
 * @member {String} Feedback
 */
FeedbackSubmissionModel.prototype['Feedback'] = undefined;

/**
 * Property to submit feedback to:-
 * @member {String} PropertyID
 */
FeedbackSubmissionModel.prototype['PropertyID'] = undefined;






export default FeedbackSubmissionModel;

