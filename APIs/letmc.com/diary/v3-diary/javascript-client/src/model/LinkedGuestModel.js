/**
 * agentOS API V3, Diary Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3-diary
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LinkedGuestModel model module.
 * @module model/LinkedGuestModel
 * @version v3-diary
 */
class LinkedGuestModel {
    /**
     * Constructs a new <code>LinkedGuestModel</code>.
     * Holds information on guests
     * @alias module:model/LinkedGuestModel
     */
    constructor() { 
        
        LinkedGuestModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LinkedGuestModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LinkedGuestModel} obj Optional instance to populate.
     * @return {module:model/LinkedGuestModel} The populated <code>LinkedGuestModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LinkedGuestModel();

            if (data.hasOwnProperty('CreatedAt')) {
                obj['CreatedAt'] = ApiClient.convertToType(data['CreatedAt'], 'Date');
            }
            if (data.hasOwnProperty('Email')) {
                obj['Email'] = ApiClient.convertToType(data['Email'], 'String');
            }
            if (data.hasOwnProperty('GlobalReference')) {
                obj['GlobalReference'] = ApiClient.convertToType(data['GlobalReference'], 'String');
            }
            if (data.hasOwnProperty('Mobile')) {
                obj['Mobile'] = ApiClient.convertToType(data['Mobile'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('OID')) {
                obj['OID'] = ApiClient.convertToType(data['OID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LinkedGuestModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LinkedGuestModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Email'] && !(typeof data['Email'] === 'string' || data['Email'] instanceof String)) {
            throw new Error("Expected the field `Email` to be a primitive type in the JSON string but got " + data['Email']);
        }
        // ensure the json data is a string
        if (data['GlobalReference'] && !(typeof data['GlobalReference'] === 'string' || data['GlobalReference'] instanceof String)) {
            throw new Error("Expected the field `GlobalReference` to be a primitive type in the JSON string but got " + data['GlobalReference']);
        }
        // ensure the json data is a string
        if (data['Mobile'] && !(typeof data['Mobile'] === 'string' || data['Mobile'] instanceof String)) {
            throw new Error("Expected the field `Mobile` to be a primitive type in the JSON string but got " + data['Mobile']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['OID'] && !(typeof data['OID'] === 'string' || data['OID'] instanceof String)) {
            throw new Error("Expected the field `OID` to be a primitive type in the JSON string but got " + data['OID']);
        }

        return true;
    }


}



/**
 * Guest Created At:-
 * @member {Date} CreatedAt
 */
LinkedGuestModel.prototype['CreatedAt'] = undefined;

/**
 * Guest Email:-
 * @member {String} Email
 */
LinkedGuestModel.prototype['Email'] = undefined;

/**
 * Guest Global Reference:-
 * @member {String} GlobalReference
 */
LinkedGuestModel.prototype['GlobalReference'] = undefined;

/**
 * Guest Mobile:-
 * @member {String} Mobile
 */
LinkedGuestModel.prototype['Mobile'] = undefined;

/**
 * Guest Name:-
 * @member {String} Name
 */
LinkedGuestModel.prototype['Name'] = undefined;

/**
 * Guest OID:-
 * @member {String} OID
 */
LinkedGuestModel.prototype['OID'] = undefined;






export default LinkedGuestModel;

