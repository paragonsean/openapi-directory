/**
 * agentOS API V3, Diary Call Group
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3-diary
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GuestDiaryParametersModel model module.
 * @module model/GuestDiaryParametersModel
 * @version v3-diary
 */
class GuestDiaryParametersModel {
    /**
     * Constructs a new <code>GuestDiaryParametersModel</code>.
     * Guest Diary Parameters Model
     * @alias module:model/GuestDiaryParametersModel
     */
    constructor() { 
        
        GuestDiaryParametersModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GuestDiaryParametersModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GuestDiaryParametersModel} obj Optional instance to populate.
     * @return {module:model/GuestDiaryParametersModel} The populated <code>GuestDiaryParametersModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GuestDiaryParametersModel();

            if (data.hasOwnProperty('ContactMobile')) {
                obj['ContactMobile'] = ApiClient.convertToType(data['ContactMobile'], 'String');
            }
            if (data.hasOwnProperty('EmailAddress')) {
                obj['EmailAddress'] = ApiClient.convertToType(data['EmailAddress'], 'String');
            }
            if (data.hasOwnProperty('Forename')) {
                obj['Forename'] = ApiClient.convertToType(data['Forename'], 'String');
            }
            if (data.hasOwnProperty('OID')) {
                obj['OID'] = ApiClient.convertToType(data['OID'], 'String');
            }
            if (data.hasOwnProperty('Surname')) {
                obj['Surname'] = ApiClient.convertToType(data['Surname'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GuestDiaryParametersModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GuestDiaryParametersModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ContactMobile'] && !(typeof data['ContactMobile'] === 'string' || data['ContactMobile'] instanceof String)) {
            throw new Error("Expected the field `ContactMobile` to be a primitive type in the JSON string but got " + data['ContactMobile']);
        }
        // ensure the json data is a string
        if (data['EmailAddress'] && !(typeof data['EmailAddress'] === 'string' || data['EmailAddress'] instanceof String)) {
            throw new Error("Expected the field `EmailAddress` to be a primitive type in the JSON string but got " + data['EmailAddress']);
        }
        // ensure the json data is a string
        if (data['Forename'] && !(typeof data['Forename'] === 'string' || data['Forename'] instanceof String)) {
            throw new Error("Expected the field `Forename` to be a primitive type in the JSON string but got " + data['Forename']);
        }
        // ensure the json data is a string
        if (data['OID'] && !(typeof data['OID'] === 'string' || data['OID'] instanceof String)) {
            throw new Error("Expected the field `OID` to be a primitive type in the JSON string but got " + data['OID']);
        }
        // ensure the json data is a string
        if (data['Surname'] && !(typeof data['Surname'] === 'string' || data['Surname'] instanceof String)) {
            throw new Error("Expected the field `Surname` to be a primitive type in the JSON string but got " + data['Surname']);
        }

        return true;
    }


}



/**
 * Guest Mobile Phone
 * @member {String} ContactMobile
 */
GuestDiaryParametersModel.prototype['ContactMobile'] = undefined;

/**
 * Guest Email Address
 * @member {String} EmailAddress
 */
GuestDiaryParametersModel.prototype['EmailAddress'] = undefined;

/**
 * Guest Forename
 * @member {String} Forename
 */
GuestDiaryParametersModel.prototype['Forename'] = undefined;

/**
 * Guest OID
 * @member {String} OID
 */
GuestDiaryParametersModel.prototype['OID'] = undefined;

/**
 * Guest Surname
 * @member {String} Surname
 */
GuestDiaryParametersModel.prototype['Surname'] = undefined;






export default GuestDiaryParametersModel;

