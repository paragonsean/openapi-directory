/**
 * LetMC Api V3, reporting
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3-reporting
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LetMcApiV3Reporting);
  }
}(this, function(expect, LetMcApiV3Reporting) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ReportingReceivershipCaseDetailsModel', function() {
    it('should create an instance of ReportingReceivershipCaseDetailsModel', function() {
      // uncomment below and update the code to test ReportingReceivershipCaseDetailsModel
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be.a(LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel);
    });

    it('should have the property appointmentDate (base name: "AppointmentDate")', function() {
      // uncomment below and update the code to test the property appointmentDate
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be();
    });

    it('should have the property closedDate (base name: "ClosedDate")', function() {
      // uncomment below and update the code to test the property closedDate
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be();
    });

    it('should have the property closedReason (base name: "ClosedReason")', function() {
      // uncomment below and update the code to test the property closedReason
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "CreatedAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be();
    });

    it('should have the property displayFirstReceiver (base name: "DisplayFirstReceiver")', function() {
      // uncomment below and update the code to test the property displayFirstReceiver
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be();
    });

    it('should have the property displayFreeholdBlockManager (base name: "DisplayFreeholdBlockManager")', function() {
      // uncomment below and update the code to test the property displayFreeholdBlockManager
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be();
    });

    it('should have the property displaySecondReceiver (base name: "DisplaySecondReceiver")', function() {
      // uncomment below and update the code to test the property displaySecondReceiver
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be();
    });

    it('should have the property displayValidatingSolicitor (base name: "DisplayValidatingSolicitor")', function() {
      // uncomment below and update the code to test the property displayValidatingSolicitor
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be();
    });

    it('should have the property extraNotes (base name: "ExtraNotes")', function() {
      // uncomment below and update the code to test the property extraNotes
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be();
    });

    it('should have the property firstReceiverID (base name: "FirstReceiverID")', function() {
      // uncomment below and update the code to test the property firstReceiverID
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be();
    });

    it('should have the property freeholdBlockManagerID (base name: "FreeholdBlockManagerID")', function() {
      // uncomment below and update the code to test the property freeholdBlockManagerID
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be();
    });

    it('should have the property passedToLenderDate (base name: "PassedToLenderDate")', function() {
      // uncomment below and update the code to test the property passedToLenderDate
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be();
    });

    it('should have the property propertyOwnableID (base name: "PropertyOwnableID")', function() {
      // uncomment below and update the code to test the property propertyOwnableID
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be();
    });

    it('should have the property secondReceiverID (base name: "SecondReceiverID")', function() {
      // uncomment below and update the code to test the property secondReceiverID
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be();
    });

    it('should have the property tenure (base name: "Tenure")', function() {
      // uncomment below and update the code to test the property tenure
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be();
    });

    it('should have the property validatingSolicitorID (base name: "ValidatingSolicitorID")', function() {
      // uncomment below and update the code to test the property validatingSolicitorID
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be();
    });

    it('should have the property valuationDate (base name: "ValuationDate")', function() {
      // uncomment below and update the code to test the property valuationDate
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipCaseDetailsModel();
      //expect(instance).to.be();
    });

  });

}));
