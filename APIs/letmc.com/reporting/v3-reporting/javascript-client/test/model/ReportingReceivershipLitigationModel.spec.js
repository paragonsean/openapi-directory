/**
 * LetMC Api V3, reporting
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3-reporting
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LetMcApiV3Reporting);
  }
}(this, function(expect, LetMcApiV3Reporting) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LetMcApiV3Reporting.ReportingReceivershipLitigationModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ReportingReceivershipLitigationModel', function() {
    it('should create an instance of ReportingReceivershipLitigationModel', function() {
      // uncomment below and update the code to test ReportingReceivershipLitigationModel
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipLitigationModel();
      //expect(instance).to.be.a(LetMcApiV3Reporting.ReportingReceivershipLitigationModel);
    });

    it('should have the property closedLitigationDate (base name: "ClosedLitigationDate")', function() {
      // uncomment below and update the code to test the property closedLitigationDate
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipLitigationModel();
      //expect(instance).to.be();
    });

    it('should have the property closedLitigationReason (base name: "ClosedLitigationReason")', function() {
      // uncomment below and update the code to test the property closedLitigationReason
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipLitigationModel();
      //expect(instance).to.be();
    });

    it('should have the property compiledBySolicitorID (base name: "CompiledBySolicitorID")', function() {
      // uncomment below and update the code to test the property compiledBySolicitorID
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipLitigationModel();
      //expect(instance).to.be();
    });

    it('should have the property displayCompiledBySolicitor (base name: "DisplayCompiledBySolicitor")', function() {
      // uncomment below and update the code to test the property displayCompiledBySolicitor
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipLitigationModel();
      //expect(instance).to.be();
    });

    it('should have the property evictionDate (base name: "EvictionDate")', function() {
      // uncomment below and update the code to test the property evictionDate
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipLitigationModel();
      //expect(instance).to.be();
    });

    it('should have the property evictionOutcome (base name: "EvictionOutcome")', function() {
      // uncomment below and update the code to test the property evictionOutcome
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipLitigationModel();
      //expect(instance).to.be();
    });

    it('should have the property extraNotes (base name: "ExtraNotes")', function() {
      // uncomment below and update the code to test the property extraNotes
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipLitigationModel();
      //expect(instance).to.be();
    });

    it('should have the property hearingDate (base name: "HearingDate")', function() {
      // uncomment below and update the code to test the property hearingDate
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipLitigationModel();
      //expect(instance).to.be();
    });

    it('should have the property hearingOutcome (base name: "HearingOutcome")', function() {
      // uncomment below and update the code to test the property hearingOutcome
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipLitigationModel();
      //expect(instance).to.be();
    });

    it('should have the property litigationType (base name: "LitigationType")', function() {
      // uncomment below and update the code to test the property litigationType
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipLitigationModel();
      //expect(instance).to.be();
    });

    it('should have the property noticeExpiryDate (base name: "NoticeExpiryDate")', function() {
      // uncomment below and update the code to test the property noticeExpiryDate
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipLitigationModel();
      //expect(instance).to.be();
    });

    it('should have the property noticeServedDate (base name: "NoticeServedDate")', function() {
      // uncomment below and update the code to test the property noticeServedDate
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipLitigationModel();
      //expect(instance).to.be();
    });

    it('should have the property proceedingsIssuedDate (base name: "ProceedingsIssuedDate")', function() {
      // uncomment below and update the code to test the property proceedingsIssuedDate
      //var instance = new LetMcApiV3Reporting.ReportingReceivershipLitigationModel();
      //expect(instance).to.be();
    });

  });

}));
