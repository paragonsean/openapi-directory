# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReportingReceivershipLitigationModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, closed_litigation_date: datetime=None, closed_litigation_reason: str=None, compiled_by_solicitor_id: str=None, display_compiled_by_solicitor: str=None, eviction_date: datetime=None, eviction_outcome: str=None, extra_notes: str=None, hearing_date: datetime=None, hearing_outcome: str=None, litigation_type: str=None, notice_expiry_date: datetime=None, notice_served_date: datetime=None, proceedings_issued_date: datetime=None):
        """ReportingReceivershipLitigationModel - a model defined in OpenAPI

        :param closed_litigation_date: The closed_litigation_date of this ReportingReceivershipLitigationModel.
        :param closed_litigation_reason: The closed_litigation_reason of this ReportingReceivershipLitigationModel.
        :param compiled_by_solicitor_id: The compiled_by_solicitor_id of this ReportingReceivershipLitigationModel.
        :param display_compiled_by_solicitor: The display_compiled_by_solicitor of this ReportingReceivershipLitigationModel.
        :param eviction_date: The eviction_date of this ReportingReceivershipLitigationModel.
        :param eviction_outcome: The eviction_outcome of this ReportingReceivershipLitigationModel.
        :param extra_notes: The extra_notes of this ReportingReceivershipLitigationModel.
        :param hearing_date: The hearing_date of this ReportingReceivershipLitigationModel.
        :param hearing_outcome: The hearing_outcome of this ReportingReceivershipLitigationModel.
        :param litigation_type: The litigation_type of this ReportingReceivershipLitigationModel.
        :param notice_expiry_date: The notice_expiry_date of this ReportingReceivershipLitigationModel.
        :param notice_served_date: The notice_served_date of this ReportingReceivershipLitigationModel.
        :param proceedings_issued_date: The proceedings_issued_date of this ReportingReceivershipLitigationModel.
        """
        self.openapi_types = {
            'closed_litigation_date': datetime,
            'closed_litigation_reason': str,
            'compiled_by_solicitor_id': str,
            'display_compiled_by_solicitor': str,
            'eviction_date': datetime,
            'eviction_outcome': str,
            'extra_notes': str,
            'hearing_date': datetime,
            'hearing_outcome': str,
            'litigation_type': str,
            'notice_expiry_date': datetime,
            'notice_served_date': datetime,
            'proceedings_issued_date': datetime
        }

        self.attribute_map = {
            'closed_litigation_date': 'ClosedLitigationDate',
            'closed_litigation_reason': 'ClosedLitigationReason',
            'compiled_by_solicitor_id': 'CompiledBySolicitorID',
            'display_compiled_by_solicitor': 'DisplayCompiledBySolicitor',
            'eviction_date': 'EvictionDate',
            'eviction_outcome': 'EvictionOutcome',
            'extra_notes': 'ExtraNotes',
            'hearing_date': 'HearingDate',
            'hearing_outcome': 'HearingOutcome',
            'litigation_type': 'LitigationType',
            'notice_expiry_date': 'NoticeExpiryDate',
            'notice_served_date': 'NoticeServedDate',
            'proceedings_issued_date': 'ProceedingsIssuedDate'
        }

        self._closed_litigation_date = closed_litigation_date
        self._closed_litigation_reason = closed_litigation_reason
        self._compiled_by_solicitor_id = compiled_by_solicitor_id
        self._display_compiled_by_solicitor = display_compiled_by_solicitor
        self._eviction_date = eviction_date
        self._eviction_outcome = eviction_outcome
        self._extra_notes = extra_notes
        self._hearing_date = hearing_date
        self._hearing_outcome = hearing_outcome
        self._litigation_type = litigation_type
        self._notice_expiry_date = notice_expiry_date
        self._notice_served_date = notice_served_date
        self._proceedings_issued_date = proceedings_issued_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportingReceivershipLitigationModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportingReceivershipLitigationModel of this ReportingReceivershipLitigationModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def closed_litigation_date(self):
        """Gets the closed_litigation_date of this ReportingReceivershipLitigationModel.

        Closed Litigation Date

        :return: The closed_litigation_date of this ReportingReceivershipLitigationModel.
        :rtype: datetime
        """
        return self._closed_litigation_date

    @closed_litigation_date.setter
    def closed_litigation_date(self, closed_litigation_date):
        """Sets the closed_litigation_date of this ReportingReceivershipLitigationModel.

        Closed Litigation Date

        :param closed_litigation_date: The closed_litigation_date of this ReportingReceivershipLitigationModel.
        :type closed_litigation_date: datetime
        """

        self._closed_litigation_date = closed_litigation_date

    @property
    def closed_litigation_reason(self):
        """Gets the closed_litigation_reason of this ReportingReceivershipLitigationModel.

        Closed Litigation Reason

        :return: The closed_litigation_reason of this ReportingReceivershipLitigationModel.
        :rtype: str
        """
        return self._closed_litigation_reason

    @closed_litigation_reason.setter
    def closed_litigation_reason(self, closed_litigation_reason):
        """Sets the closed_litigation_reason of this ReportingReceivershipLitigationModel.

        Closed Litigation Reason

        :param closed_litigation_reason: The closed_litigation_reason of this ReportingReceivershipLitigationModel.
        :type closed_litigation_reason: str
        """
        allowed_values = ["PossessionObtained", "TenantVacated", "LitigationCancelled", "Other"]  # noqa: E501
        if closed_litigation_reason not in allowed_values:
            raise ValueError(
                "Invalid value for `closed_litigation_reason` ({0}), must be one of {1}"
                .format(closed_litigation_reason, allowed_values)
            )

        self._closed_litigation_reason = closed_litigation_reason

    @property
    def compiled_by_solicitor_id(self):
        """Gets the compiled_by_solicitor_id of this ReportingReceivershipLitigationModel.

        Compiled By Solicitor ID (SalesSolicitor)

        :return: The compiled_by_solicitor_id of this ReportingReceivershipLitigationModel.
        :rtype: str
        """
        return self._compiled_by_solicitor_id

    @compiled_by_solicitor_id.setter
    def compiled_by_solicitor_id(self, compiled_by_solicitor_id):
        """Sets the compiled_by_solicitor_id of this ReportingReceivershipLitigationModel.

        Compiled By Solicitor ID (SalesSolicitor)

        :param compiled_by_solicitor_id: The compiled_by_solicitor_id of this ReportingReceivershipLitigationModel.
        :type compiled_by_solicitor_id: str
        """

        self._compiled_by_solicitor_id = compiled_by_solicitor_id

    @property
    def display_compiled_by_solicitor(self):
        """Gets the display_compiled_by_solicitor of this ReportingReceivershipLitigationModel.

        Display Compiled By Solicitor

        :return: The display_compiled_by_solicitor of this ReportingReceivershipLitigationModel.
        :rtype: str
        """
        return self._display_compiled_by_solicitor

    @display_compiled_by_solicitor.setter
    def display_compiled_by_solicitor(self, display_compiled_by_solicitor):
        """Sets the display_compiled_by_solicitor of this ReportingReceivershipLitigationModel.

        Display Compiled By Solicitor

        :param display_compiled_by_solicitor: The display_compiled_by_solicitor of this ReportingReceivershipLitigationModel.
        :type display_compiled_by_solicitor: str
        """

        self._display_compiled_by_solicitor = display_compiled_by_solicitor

    @property
    def eviction_date(self):
        """Gets the eviction_date of this ReportingReceivershipLitigationModel.

        Eviction Date

        :return: The eviction_date of this ReportingReceivershipLitigationModel.
        :rtype: datetime
        """
        return self._eviction_date

    @eviction_date.setter
    def eviction_date(self, eviction_date):
        """Sets the eviction_date of this ReportingReceivershipLitigationModel.

        Eviction Date

        :param eviction_date: The eviction_date of this ReportingReceivershipLitigationModel.
        :type eviction_date: datetime
        """

        self._eviction_date = eviction_date

    @property
    def eviction_outcome(self):
        """Gets the eviction_outcome of this ReportingReceivershipLitigationModel.

        Eviction Outcome

        :return: The eviction_outcome of this ReportingReceivershipLitigationModel.
        :rtype: str
        """
        return self._eviction_outcome

    @eviction_outcome.setter
    def eviction_outcome(self, eviction_outcome):
        """Sets the eviction_outcome of this ReportingReceivershipLitigationModel.

        Eviction Outcome

        :param eviction_outcome: The eviction_outcome of this ReportingReceivershipLitigationModel.
        :type eviction_outcome: str
        """
        allowed_values = ["EvictionComplete", "EvictionCancelled", "Other"]  # noqa: E501
        if eviction_outcome not in allowed_values:
            raise ValueError(
                "Invalid value for `eviction_outcome` ({0}), must be one of {1}"
                .format(eviction_outcome, allowed_values)
            )

        self._eviction_outcome = eviction_outcome

    @property
    def extra_notes(self):
        """Gets the extra_notes of this ReportingReceivershipLitigationModel.

        Extra Notes

        :return: The extra_notes of this ReportingReceivershipLitigationModel.
        :rtype: str
        """
        return self._extra_notes

    @extra_notes.setter
    def extra_notes(self, extra_notes):
        """Sets the extra_notes of this ReportingReceivershipLitigationModel.

        Extra Notes

        :param extra_notes: The extra_notes of this ReportingReceivershipLitigationModel.
        :type extra_notes: str
        """

        self._extra_notes = extra_notes

    @property
    def hearing_date(self):
        """Gets the hearing_date of this ReportingReceivershipLitigationModel.

        Hearing Date

        :return: The hearing_date of this ReportingReceivershipLitigationModel.
        :rtype: datetime
        """
        return self._hearing_date

    @hearing_date.setter
    def hearing_date(self, hearing_date):
        """Sets the hearing_date of this ReportingReceivershipLitigationModel.

        Hearing Date

        :param hearing_date: The hearing_date of this ReportingReceivershipLitigationModel.
        :type hearing_date: datetime
        """

        self._hearing_date = hearing_date

    @property
    def hearing_outcome(self):
        """Gets the hearing_outcome of this ReportingReceivershipLitigationModel.

        Hearing Outcome

        :return: The hearing_outcome of this ReportingReceivershipLitigationModel.
        :rtype: str
        """
        return self._hearing_outcome

    @hearing_outcome.setter
    def hearing_outcome(self, hearing_outcome):
        """Sets the hearing_outcome of this ReportingReceivershipLitigationModel.

        Hearing Outcome

        :param hearing_outcome: The hearing_outcome of this ReportingReceivershipLitigationModel.
        :type hearing_outcome: str
        """

        self._hearing_outcome = hearing_outcome

    @property
    def litigation_type(self):
        """Gets the litigation_type of this ReportingReceivershipLitigationModel.

        Litigation Type

        :return: The litigation_type of this ReportingReceivershipLitigationModel.
        :rtype: str
        """
        return self._litigation_type

    @litigation_type.setter
    def litigation_type(self, litigation_type):
        """Sets the litigation_type of this ReportingReceivershipLitigationModel.

        Litigation Type

        :param litigation_type: The litigation_type of this ReportingReceivershipLitigationModel.
        :type litigation_type: str
        """

        self._litigation_type = litigation_type

    @property
    def notice_expiry_date(self):
        """Gets the notice_expiry_date of this ReportingReceivershipLitigationModel.

        Notice Expiry Date

        :return: The notice_expiry_date of this ReportingReceivershipLitigationModel.
        :rtype: datetime
        """
        return self._notice_expiry_date

    @notice_expiry_date.setter
    def notice_expiry_date(self, notice_expiry_date):
        """Sets the notice_expiry_date of this ReportingReceivershipLitigationModel.

        Notice Expiry Date

        :param notice_expiry_date: The notice_expiry_date of this ReportingReceivershipLitigationModel.
        :type notice_expiry_date: datetime
        """

        self._notice_expiry_date = notice_expiry_date

    @property
    def notice_served_date(self):
        """Gets the notice_served_date of this ReportingReceivershipLitigationModel.

        Notice Served Date

        :return: The notice_served_date of this ReportingReceivershipLitigationModel.
        :rtype: datetime
        """
        return self._notice_served_date

    @notice_served_date.setter
    def notice_served_date(self, notice_served_date):
        """Sets the notice_served_date of this ReportingReceivershipLitigationModel.

        Notice Served Date

        :param notice_served_date: The notice_served_date of this ReportingReceivershipLitigationModel.
        :type notice_served_date: datetime
        """

        self._notice_served_date = notice_served_date

    @property
    def proceedings_issued_date(self):
        """Gets the proceedings_issued_date of this ReportingReceivershipLitigationModel.

        Proceedings Issued Date

        :return: The proceedings_issued_date of this ReportingReceivershipLitigationModel.
        :rtype: datetime
        """
        return self._proceedings_issued_date

    @proceedings_issued_date.setter
    def proceedings_issued_date(self, proceedings_issued_date):
        """Sets the proceedings_issued_date of this ReportingReceivershipLitigationModel.

        Proceedings Issued Date

        :param proceedings_issued_date: The proceedings_issued_date of this ReportingReceivershipLitigationModel.
        :type proceedings_issued_date: datetime
        """

        self._proceedings_issued_date = proceedings_issued_date
