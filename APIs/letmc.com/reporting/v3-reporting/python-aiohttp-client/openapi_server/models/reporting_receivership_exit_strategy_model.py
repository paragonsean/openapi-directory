# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReportingReceivershipExitStrategyModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compiled: datetime=None, compiled_by_id: str=None, display_compiled_by_id: str=None, extra_notes: str=None, lender_response: str=None, lender_response_date: datetime=None, lock_changed: datetime=None, mortgage_arrears: float=None, mortgage_balance: float=None, mortgage_cmi: float=None, recommendation: str=None, review_date: datetime=None, sent_to_lender: datetime=None):
        """ReportingReceivershipExitStrategyModel - a model defined in OpenAPI

        :param compiled: The compiled of this ReportingReceivershipExitStrategyModel.
        :param compiled_by_id: The compiled_by_id of this ReportingReceivershipExitStrategyModel.
        :param display_compiled_by_id: The display_compiled_by_id of this ReportingReceivershipExitStrategyModel.
        :param extra_notes: The extra_notes of this ReportingReceivershipExitStrategyModel.
        :param lender_response: The lender_response of this ReportingReceivershipExitStrategyModel.
        :param lender_response_date: The lender_response_date of this ReportingReceivershipExitStrategyModel.
        :param lock_changed: The lock_changed of this ReportingReceivershipExitStrategyModel.
        :param mortgage_arrears: The mortgage_arrears of this ReportingReceivershipExitStrategyModel.
        :param mortgage_balance: The mortgage_balance of this ReportingReceivershipExitStrategyModel.
        :param mortgage_cmi: The mortgage_cmi of this ReportingReceivershipExitStrategyModel.
        :param recommendation: The recommendation of this ReportingReceivershipExitStrategyModel.
        :param review_date: The review_date of this ReportingReceivershipExitStrategyModel.
        :param sent_to_lender: The sent_to_lender of this ReportingReceivershipExitStrategyModel.
        """
        self.openapi_types = {
            'compiled': datetime,
            'compiled_by_id': str,
            'display_compiled_by_id': str,
            'extra_notes': str,
            'lender_response': str,
            'lender_response_date': datetime,
            'lock_changed': datetime,
            'mortgage_arrears': float,
            'mortgage_balance': float,
            'mortgage_cmi': float,
            'recommendation': str,
            'review_date': datetime,
            'sent_to_lender': datetime
        }

        self.attribute_map = {
            'compiled': 'Compiled',
            'compiled_by_id': 'CompiledByID',
            'display_compiled_by_id': 'DisplayCompiledByID',
            'extra_notes': 'ExtraNotes',
            'lender_response': 'LenderResponse',
            'lender_response_date': 'LenderResponseDate',
            'lock_changed': 'LockChanged',
            'mortgage_arrears': 'MortgageArrears',
            'mortgage_balance': 'MortgageBalance',
            'mortgage_cmi': 'MortgageCMI',
            'recommendation': 'Recommendation',
            'review_date': 'ReviewDate',
            'sent_to_lender': 'SentToLender'
        }

        self._compiled = compiled
        self._compiled_by_id = compiled_by_id
        self._display_compiled_by_id = display_compiled_by_id
        self._extra_notes = extra_notes
        self._lender_response = lender_response
        self._lender_response_date = lender_response_date
        self._lock_changed = lock_changed
        self._mortgage_arrears = mortgage_arrears
        self._mortgage_balance = mortgage_balance
        self._mortgage_cmi = mortgage_cmi
        self._recommendation = recommendation
        self._review_date = review_date
        self._sent_to_lender = sent_to_lender

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportingReceivershipExitStrategyModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportingReceivershipExitStrategyModel of this ReportingReceivershipExitStrategyModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compiled(self):
        """Gets the compiled of this ReportingReceivershipExitStrategyModel.

        The date Compiled

        :return: The compiled of this ReportingReceivershipExitStrategyModel.
        :rtype: datetime
        """
        return self._compiled

    @compiled.setter
    def compiled(self, compiled):
        """Sets the compiled of this ReportingReceivershipExitStrategyModel.

        The date Compiled

        :param compiled: The compiled of this ReportingReceivershipExitStrategyModel.
        :type compiled: datetime
        """

        self._compiled = compiled

    @property
    def compiled_by_id(self):
        """Gets the compiled_by_id of this ReportingReceivershipExitStrategyModel.

        Compiled By ID (ApplicationStaff)

        :return: The compiled_by_id of this ReportingReceivershipExitStrategyModel.
        :rtype: str
        """
        return self._compiled_by_id

    @compiled_by_id.setter
    def compiled_by_id(self, compiled_by_id):
        """Sets the compiled_by_id of this ReportingReceivershipExitStrategyModel.

        Compiled By ID (ApplicationStaff)

        :param compiled_by_id: The compiled_by_id of this ReportingReceivershipExitStrategyModel.
        :type compiled_by_id: str
        """

        self._compiled_by_id = compiled_by_id

    @property
    def display_compiled_by_id(self):
        """Gets the display_compiled_by_id of this ReportingReceivershipExitStrategyModel.

        Compiled By ID

        :return: The display_compiled_by_id of this ReportingReceivershipExitStrategyModel.
        :rtype: str
        """
        return self._display_compiled_by_id

    @display_compiled_by_id.setter
    def display_compiled_by_id(self, display_compiled_by_id):
        """Sets the display_compiled_by_id of this ReportingReceivershipExitStrategyModel.

        Compiled By ID

        :param display_compiled_by_id: The display_compiled_by_id of this ReportingReceivershipExitStrategyModel.
        :type display_compiled_by_id: str
        """

        self._display_compiled_by_id = display_compiled_by_id

    @property
    def extra_notes(self):
        """Gets the extra_notes of this ReportingReceivershipExitStrategyModel.

        Extra Notes

        :return: The extra_notes of this ReportingReceivershipExitStrategyModel.
        :rtype: str
        """
        return self._extra_notes

    @extra_notes.setter
    def extra_notes(self, extra_notes):
        """Sets the extra_notes of this ReportingReceivershipExitStrategyModel.

        Extra Notes

        :param extra_notes: The extra_notes of this ReportingReceivershipExitStrategyModel.
        :type extra_notes: str
        """

        self._extra_notes = extra_notes

    @property
    def lender_response(self):
        """Gets the lender_response of this ReportingReceivershipExitStrategyModel.

        Lender Response

        :return: The lender_response of this ReportingReceivershipExitStrategyModel.
        :rtype: str
        """
        return self._lender_response

    @lender_response.setter
    def lender_response(self, lender_response):
        """Sets the lender_response of this ReportingReceivershipExitStrategyModel.

        Lender Response

        :param lender_response: The lender_response of this ReportingReceivershipExitStrategyModel.
        :type lender_response: str
        """
        allowed_values = ["AgreeLet", "AgreeSell", "AgreeDisposalRec", "AgreeOther", "DisagreeLet", "DisagreeSell", "DisagreeDisposalRec", "DisagreeOther"]  # noqa: E501
        if lender_response not in allowed_values:
            raise ValueError(
                "Invalid value for `lender_response` ({0}), must be one of {1}"
                .format(lender_response, allowed_values)
            )

        self._lender_response = lender_response

    @property
    def lender_response_date(self):
        """Gets the lender_response_date of this ReportingReceivershipExitStrategyModel.

        Lender Response Date

        :return: The lender_response_date of this ReportingReceivershipExitStrategyModel.
        :rtype: datetime
        """
        return self._lender_response_date

    @lender_response_date.setter
    def lender_response_date(self, lender_response_date):
        """Sets the lender_response_date of this ReportingReceivershipExitStrategyModel.

        Lender Response Date

        :param lender_response_date: The lender_response_date of this ReportingReceivershipExitStrategyModel.
        :type lender_response_date: datetime
        """

        self._lender_response_date = lender_response_date

    @property
    def lock_changed(self):
        """Gets the lock_changed of this ReportingReceivershipExitStrategyModel.

        Lock Changed

        :return: The lock_changed of this ReportingReceivershipExitStrategyModel.
        :rtype: datetime
        """
        return self._lock_changed

    @lock_changed.setter
    def lock_changed(self, lock_changed):
        """Sets the lock_changed of this ReportingReceivershipExitStrategyModel.

        Lock Changed

        :param lock_changed: The lock_changed of this ReportingReceivershipExitStrategyModel.
        :type lock_changed: datetime
        """

        self._lock_changed = lock_changed

    @property
    def mortgage_arrears(self):
        """Gets the mortgage_arrears of this ReportingReceivershipExitStrategyModel.

        Mortgage Arrears

        :return: The mortgage_arrears of this ReportingReceivershipExitStrategyModel.
        :rtype: float
        """
        return self._mortgage_arrears

    @mortgage_arrears.setter
    def mortgage_arrears(self, mortgage_arrears):
        """Sets the mortgage_arrears of this ReportingReceivershipExitStrategyModel.

        Mortgage Arrears

        :param mortgage_arrears: The mortgage_arrears of this ReportingReceivershipExitStrategyModel.
        :type mortgage_arrears: float
        """

        self._mortgage_arrears = mortgage_arrears

    @property
    def mortgage_balance(self):
        """Gets the mortgage_balance of this ReportingReceivershipExitStrategyModel.

        Mortgage Balance

        :return: The mortgage_balance of this ReportingReceivershipExitStrategyModel.
        :rtype: float
        """
        return self._mortgage_balance

    @mortgage_balance.setter
    def mortgage_balance(self, mortgage_balance):
        """Sets the mortgage_balance of this ReportingReceivershipExitStrategyModel.

        Mortgage Balance

        :param mortgage_balance: The mortgage_balance of this ReportingReceivershipExitStrategyModel.
        :type mortgage_balance: float
        """

        self._mortgage_balance = mortgage_balance

    @property
    def mortgage_cmi(self):
        """Gets the mortgage_cmi of this ReportingReceivershipExitStrategyModel.

        Mortgage CMI

        :return: The mortgage_cmi of this ReportingReceivershipExitStrategyModel.
        :rtype: float
        """
        return self._mortgage_cmi

    @mortgage_cmi.setter
    def mortgage_cmi(self, mortgage_cmi):
        """Sets the mortgage_cmi of this ReportingReceivershipExitStrategyModel.

        Mortgage CMI

        :param mortgage_cmi: The mortgage_cmi of this ReportingReceivershipExitStrategyModel.
        :type mortgage_cmi: float
        """

        self._mortgage_cmi = mortgage_cmi

    @property
    def recommendation(self):
        """Gets the recommendation of this ReportingReceivershipExitStrategyModel.

        Recommendation

        :return: The recommendation of this ReportingReceivershipExitStrategyModel.
        :rtype: str
        """
        return self._recommendation

    @recommendation.setter
    def recommendation(self, recommendation):
        """Sets the recommendation of this ReportingReceivershipExitStrategyModel.

        Recommendation

        :param recommendation: The recommendation of this ReportingReceivershipExitStrategyModel.
        :type recommendation: str
        """
        allowed_values = ["Let", "Sell", "DisposalRec", "PendingExit", "Other"]  # noqa: E501
        if recommendation not in allowed_values:
            raise ValueError(
                "Invalid value for `recommendation` ({0}), must be one of {1}"
                .format(recommendation, allowed_values)
            )

        self._recommendation = recommendation

    @property
    def review_date(self):
        """Gets the review_date of this ReportingReceivershipExitStrategyModel.

        The Review Date

        :return: The review_date of this ReportingReceivershipExitStrategyModel.
        :rtype: datetime
        """
        return self._review_date

    @review_date.setter
    def review_date(self, review_date):
        """Sets the review_date of this ReportingReceivershipExitStrategyModel.

        The Review Date

        :param review_date: The review_date of this ReportingReceivershipExitStrategyModel.
        :type review_date: datetime
        """

        self._review_date = review_date

    @property
    def sent_to_lender(self):
        """Gets the sent_to_lender of this ReportingReceivershipExitStrategyModel.

        Sent To Lender

        :return: The sent_to_lender of this ReportingReceivershipExitStrategyModel.
        :rtype: datetime
        """
        return self._sent_to_lender

    @sent_to_lender.setter
    def sent_to_lender(self, sent_to_lender):
        """Sets the sent_to_lender of this ReportingReceivershipExitStrategyModel.

        Sent To Lender

        :param sent_to_lender: The sent_to_lender of this ReportingReceivershipExitStrategyModel.
        :type sent_to_lender: datetime
        """

        self._sent_to_lender = sent_to_lender
