# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reporting_receivership_case_details_model import ReportingReceivershipCaseDetailsModel
from openapi_server.models.reporting_receivership_exit_strategy_model import ReportingReceivershipExitStrategyModel
from openapi_server.models.reporting_receivership_litigation_model import ReportingReceivershipLitigationModel
from openapi_server import util


class ReportingReceivershipCaseModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, case_details: ReportingReceivershipCaseDetailsModel=None, exit_strategy: List[ReportingReceivershipExitStrategyModel]=None, litigation: List[ReportingReceivershipLitigationModel]=None):
        """ReportingReceivershipCaseModel - a model defined in OpenAPI

        :param case_details: The case_details of this ReportingReceivershipCaseModel.
        :param exit_strategy: The exit_strategy of this ReportingReceivershipCaseModel.
        :param litigation: The litigation of this ReportingReceivershipCaseModel.
        """
        self.openapi_types = {
            'case_details': ReportingReceivershipCaseDetailsModel,
            'exit_strategy': List[ReportingReceivershipExitStrategyModel],
            'litigation': List[ReportingReceivershipLitigationModel]
        }

        self.attribute_map = {
            'case_details': 'CaseDetails',
            'exit_strategy': 'ExitStrategy',
            'litigation': 'Litigation'
        }

        self._case_details = case_details
        self._exit_strategy = exit_strategy
        self._litigation = litigation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportingReceivershipCaseModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportingReceivershipCaseModel of this ReportingReceivershipCaseModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def case_details(self):
        """Gets the case_details of this ReportingReceivershipCaseModel.


        :return: The case_details of this ReportingReceivershipCaseModel.
        :rtype: ReportingReceivershipCaseDetailsModel
        """
        return self._case_details

    @case_details.setter
    def case_details(self, case_details):
        """Sets the case_details of this ReportingReceivershipCaseModel.


        :param case_details: The case_details of this ReportingReceivershipCaseModel.
        :type case_details: ReportingReceivershipCaseDetailsModel
        """

        self._case_details = case_details

    @property
    def exit_strategy(self):
        """Gets the exit_strategy of this ReportingReceivershipCaseModel.

        Exit Strategy

        :return: The exit_strategy of this ReportingReceivershipCaseModel.
        :rtype: List[ReportingReceivershipExitStrategyModel]
        """
        return self._exit_strategy

    @exit_strategy.setter
    def exit_strategy(self, exit_strategy):
        """Sets the exit_strategy of this ReportingReceivershipCaseModel.

        Exit Strategy

        :param exit_strategy: The exit_strategy of this ReportingReceivershipCaseModel.
        :type exit_strategy: List[ReportingReceivershipExitStrategyModel]
        """

        self._exit_strategy = exit_strategy

    @property
    def litigation(self):
        """Gets the litigation of this ReportingReceivershipCaseModel.

        Litigation

        :return: The litigation of this ReportingReceivershipCaseModel.
        :rtype: List[ReportingReceivershipLitigationModel]
        """
        return self._litigation

    @litigation.setter
    def litigation(self, litigation):
        """Sets the litigation of this ReportingReceivershipCaseModel.

        Litigation

        :param litigation: The litigation of this ReportingReceivershipCaseModel.
        :type litigation: List[ReportingReceivershipLitigationModel]
        """

        self._litigation = litigation
