/**
 * LetMC Api V3, reporting
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3-reporting
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReportingReceivershipLitigationModel.h
 *
 * Helper Model - Litigation
 */

#ifndef OAIReportingReceivershipLitigationModel_H
#define OAIReportingReceivershipLitigationModel_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReportingReceivershipLitigationModel : public OAIObject {
public:
    OAIReportingReceivershipLitigationModel();
    OAIReportingReceivershipLitigationModel(QString json);
    ~OAIReportingReceivershipLitigationModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getClosedLitigationDate() const;
    void setClosedLitigationDate(const QDateTime &closed_litigation_date);
    bool is_closed_litigation_date_Set() const;
    bool is_closed_litigation_date_Valid() const;

    QString getClosedLitigationReason() const;
    void setClosedLitigationReason(const QString &closed_litigation_reason);
    bool is_closed_litigation_reason_Set() const;
    bool is_closed_litigation_reason_Valid() const;

    QString getCompiledBySolicitorId() const;
    void setCompiledBySolicitorId(const QString &compiled_by_solicitor_id);
    bool is_compiled_by_solicitor_id_Set() const;
    bool is_compiled_by_solicitor_id_Valid() const;

    QString getDisplayCompiledBySolicitor() const;
    void setDisplayCompiledBySolicitor(const QString &display_compiled_by_solicitor);
    bool is_display_compiled_by_solicitor_Set() const;
    bool is_display_compiled_by_solicitor_Valid() const;

    QDateTime getEvictionDate() const;
    void setEvictionDate(const QDateTime &eviction_date);
    bool is_eviction_date_Set() const;
    bool is_eviction_date_Valid() const;

    QString getEvictionOutcome() const;
    void setEvictionOutcome(const QString &eviction_outcome);
    bool is_eviction_outcome_Set() const;
    bool is_eviction_outcome_Valid() const;

    QString getExtraNotes() const;
    void setExtraNotes(const QString &extra_notes);
    bool is_extra_notes_Set() const;
    bool is_extra_notes_Valid() const;

    QDateTime getHearingDate() const;
    void setHearingDate(const QDateTime &hearing_date);
    bool is_hearing_date_Set() const;
    bool is_hearing_date_Valid() const;

    QString getHearingOutcome() const;
    void setHearingOutcome(const QString &hearing_outcome);
    bool is_hearing_outcome_Set() const;
    bool is_hearing_outcome_Valid() const;

    QString getLitigationType() const;
    void setLitigationType(const QString &litigation_type);
    bool is_litigation_type_Set() const;
    bool is_litigation_type_Valid() const;

    QDateTime getNoticeExpiryDate() const;
    void setNoticeExpiryDate(const QDateTime &notice_expiry_date);
    bool is_notice_expiry_date_Set() const;
    bool is_notice_expiry_date_Valid() const;

    QDateTime getNoticeServedDate() const;
    void setNoticeServedDate(const QDateTime &notice_served_date);
    bool is_notice_served_date_Set() const;
    bool is_notice_served_date_Valid() const;

    QDateTime getProceedingsIssuedDate() const;
    void setProceedingsIssuedDate(const QDateTime &proceedings_issued_date);
    bool is_proceedings_issued_date_Set() const;
    bool is_proceedings_issued_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_closed_litigation_date;
    bool m_closed_litigation_date_isSet;
    bool m_closed_litigation_date_isValid;

    QString m_closed_litigation_reason;
    bool m_closed_litigation_reason_isSet;
    bool m_closed_litigation_reason_isValid;

    QString m_compiled_by_solicitor_id;
    bool m_compiled_by_solicitor_id_isSet;
    bool m_compiled_by_solicitor_id_isValid;

    QString m_display_compiled_by_solicitor;
    bool m_display_compiled_by_solicitor_isSet;
    bool m_display_compiled_by_solicitor_isValid;

    QDateTime m_eviction_date;
    bool m_eviction_date_isSet;
    bool m_eviction_date_isValid;

    QString m_eviction_outcome;
    bool m_eviction_outcome_isSet;
    bool m_eviction_outcome_isValid;

    QString m_extra_notes;
    bool m_extra_notes_isSet;
    bool m_extra_notes_isValid;

    QDateTime m_hearing_date;
    bool m_hearing_date_isSet;
    bool m_hearing_date_isValid;

    QString m_hearing_outcome;
    bool m_hearing_outcome_isSet;
    bool m_hearing_outcome_isValid;

    QString m_litigation_type;
    bool m_litigation_type_isSet;
    bool m_litigation_type_isValid;

    QDateTime m_notice_expiry_date;
    bool m_notice_expiry_date_isSet;
    bool m_notice_expiry_date_isValid;

    QDateTime m_notice_served_date;
    bool m_notice_served_date_isSet;
    bool m_notice_served_date_isValid;

    QDateTime m_proceedings_issued_date;
    bool m_proceedings_issued_date_isSet;
    bool m_proceedings_issued_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReportingReceivershipLitigationModel)

#endif // OAIReportingReceivershipLitigationModel_H
