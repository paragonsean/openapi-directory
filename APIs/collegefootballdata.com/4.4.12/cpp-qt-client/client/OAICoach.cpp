/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICoach.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICoach::OAICoach(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICoach::OAICoach() {
    this->initializeModel();
}

OAICoach::~OAICoach() {}

void OAICoach::initializeModel() {

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_hire_date_isSet = false;
    m_hire_date_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_seasons_isSet = false;
    m_seasons_isValid = false;
}

void OAICoach::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICoach::fromJsonObject(QJsonObject json) {

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_hire_date_isValid = ::OpenAPI::fromJsonValue(m_hire_date, json[QString("hire_date")]);
    m_hire_date_isSet = !json[QString("hire_date")].isNull() && m_hire_date_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_seasons_isValid = ::OpenAPI::fromJsonValue(m_seasons, json[QString("seasons")]);
    m_seasons_isSet = !json[QString("seasons")].isNull() && m_seasons_isValid;
}

QString OAICoach::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICoach::asJsonObject() const {
    QJsonObject obj;
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_hire_date_isSet) {
        obj.insert(QString("hire_date"), ::OpenAPI::toJsonValue(m_hire_date));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_seasons.size() > 0) {
        obj.insert(QString("seasons"), ::OpenAPI::toJsonValue(m_seasons));
    }
    return obj;
}

QString OAICoach::getFirstName() const {
    return m_first_name;
}
void OAICoach::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAICoach::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAICoach::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAICoach::getHireDate() const {
    return m_hire_date;
}
void OAICoach::setHireDate(const QString &hire_date) {
    m_hire_date = hire_date;
    m_hire_date_isSet = true;
}

bool OAICoach::is_hire_date_Set() const{
    return m_hire_date_isSet;
}

bool OAICoach::is_hire_date_Valid() const{
    return m_hire_date_isValid;
}

QString OAICoach::getLastName() const {
    return m_last_name;
}
void OAICoach::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAICoach::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAICoach::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QList<OAICoach_seasons_inner> OAICoach::getSeasons() const {
    return m_seasons;
}
void OAICoach::setSeasons(const QList<OAICoach_seasons_inner> &seasons) {
    m_seasons = seasons;
    m_seasons_isSet = true;
}

bool OAICoach::is_seasons_Set() const{
    return m_seasons_isSet;
}

bool OAICoach::is_seasons_Valid() const{
    return m_seasons_isValid;
}

bool OAICoach::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hire_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_seasons.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICoach::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
