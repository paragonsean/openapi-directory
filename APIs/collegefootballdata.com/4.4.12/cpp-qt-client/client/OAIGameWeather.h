/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGameWeather.h
 *
 * 
 */

#ifndef OAIGameWeather_H
#define OAIGameWeather_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGameWeather : public OAIObject {
public:
    OAIGameWeather();
    OAIGameWeather(QString json);
    ~OAIGameWeather() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAwayConference() const;
    void setAwayConference(const QString &away_conference);
    bool is_away_conference_Set() const;
    bool is_away_conference_Valid() const;

    QString getAwayTeam() const;
    void setAwayTeam(const QString &away_team);
    bool is_away_team_Set() const;
    bool is_away_team_Valid() const;

    double getDewPoint() const;
    void setDewPoint(const double &dew_point);
    bool is_dew_point_Set() const;
    bool is_dew_point_Valid() const;

    bool isGameIndoors() const;
    void setGameIndoors(const bool &game_indoors);
    bool is_game_indoors_Set() const;
    bool is_game_indoors_Valid() const;

    QString getHomeConference() const;
    void setHomeConference(const QString &home_conference);
    bool is_home_conference_Set() const;
    bool is_home_conference_Valid() const;

    QString getHomeTeam() const;
    void setHomeTeam(const QString &home_team);
    bool is_home_team_Set() const;
    bool is_home_team_Valid() const;

    double getHumidity() const;
    void setHumidity(const double &humidity);
    bool is_humidity_Set() const;
    bool is_humidity_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    double getPrecipitation() const;
    void setPrecipitation(const double &precipitation);
    bool is_precipitation_Set() const;
    bool is_precipitation_Valid() const;

    double getPressure() const;
    void setPressure(const double &pressure);
    bool is_pressure_Set() const;
    bool is_pressure_Valid() const;

    qint32 getSeason() const;
    void setSeason(const qint32 &season);
    bool is_season_Set() const;
    bool is_season_Valid() const;

    QString getSeasonType() const;
    void setSeasonType(const QString &season_type);
    bool is_season_type_Set() const;
    bool is_season_type_Valid() const;

    double getSnowfall() const;
    void setSnowfall(const double &snowfall);
    bool is_snowfall_Set() const;
    bool is_snowfall_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    double getTemperature() const;
    void setTemperature(const double &temperature);
    bool is_temperature_Set() const;
    bool is_temperature_Valid() const;

    QString getVenue() const;
    void setVenue(const QString &venue);
    bool is_venue_Set() const;
    bool is_venue_Valid() const;

    qint32 getVenueId() const;
    void setVenueId(const qint32 &venue_id);
    bool is_venue_id_Set() const;
    bool is_venue_id_Valid() const;

    QString getWeatherCondition() const;
    void setWeatherCondition(const QString &weather_condition);
    bool is_weather_condition_Set() const;
    bool is_weather_condition_Valid() const;

    qint32 getWeatherConditionCode() const;
    void setWeatherConditionCode(const qint32 &weather_condition_code);
    bool is_weather_condition_code_Set() const;
    bool is_weather_condition_code_Valid() const;

    qint32 getWeek() const;
    void setWeek(const qint32 &week);
    bool is_week_Set() const;
    bool is_week_Valid() const;

    double getWindDirection() const;
    void setWindDirection(const double &wind_direction);
    bool is_wind_direction_Set() const;
    bool is_wind_direction_Valid() const;

    double getWindSpeed() const;
    void setWindSpeed(const double &wind_speed);
    bool is_wind_speed_Set() const;
    bool is_wind_speed_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_away_conference;
    bool m_away_conference_isSet;
    bool m_away_conference_isValid;

    QString m_away_team;
    bool m_away_team_isSet;
    bool m_away_team_isValid;

    double m_dew_point;
    bool m_dew_point_isSet;
    bool m_dew_point_isValid;

    bool m_game_indoors;
    bool m_game_indoors_isSet;
    bool m_game_indoors_isValid;

    QString m_home_conference;
    bool m_home_conference_isSet;
    bool m_home_conference_isValid;

    QString m_home_team;
    bool m_home_team_isSet;
    bool m_home_team_isValid;

    double m_humidity;
    bool m_humidity_isSet;
    bool m_humidity_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    double m_precipitation;
    bool m_precipitation_isSet;
    bool m_precipitation_isValid;

    double m_pressure;
    bool m_pressure_isSet;
    bool m_pressure_isValid;

    qint32 m_season;
    bool m_season_isSet;
    bool m_season_isValid;

    QString m_season_type;
    bool m_season_type_isSet;
    bool m_season_type_isValid;

    double m_snowfall;
    bool m_snowfall_isSet;
    bool m_snowfall_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    double m_temperature;
    bool m_temperature_isSet;
    bool m_temperature_isValid;

    QString m_venue;
    bool m_venue_isSet;
    bool m_venue_isValid;

    qint32 m_venue_id;
    bool m_venue_id_isSet;
    bool m_venue_id_isValid;

    QString m_weather_condition;
    bool m_weather_condition_isSet;
    bool m_weather_condition_isValid;

    qint32 m_weather_condition_code;
    bool m_weather_condition_code_isSet;
    bool m_weather_condition_code_isValid;

    qint32 m_week;
    bool m_week_isSet;
    bool m_week_isValid;

    double m_wind_direction;
    bool m_wind_direction_isSet;
    bool m_wind_direction_isValid;

    double m_wind_speed;
    bool m_wind_speed_isSet;
    bool m_wind_speed_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGameWeather)

#endif // OAIGameWeather_H
