/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITeamMatchup.h
 *
 * 
 */

#ifndef OAITeamMatchup_H
#define OAITeamMatchup_H

#include <QJsonObject>

#include "OAITeamMatchup_games_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITeamMatchup_games_inner;

class OAITeamMatchup : public OAIObject {
public:
    OAITeamMatchup();
    OAITeamMatchup(QString json);
    ~OAITeamMatchup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getEndYear() const;
    void setEndYear(const qint32 &end_year);
    bool is_end_year_Set() const;
    bool is_end_year_Valid() const;

    QList<OAITeamMatchup_games_inner> getGames() const;
    void setGames(const QList<OAITeamMatchup_games_inner> &games);
    bool is_games_Set() const;
    bool is_games_Valid() const;

    qint32 getStartYear() const;
    void setStartYear(const qint32 &start_year);
    bool is_start_year_Set() const;
    bool is_start_year_Valid() const;

    QString getTeam1() const;
    void setTeam1(const QString &team1);
    bool is_team1_Set() const;
    bool is_team1_Valid() const;

    qint32 getTeam1Wins() const;
    void setTeam1Wins(const qint32 &team1_wins);
    bool is_team1_wins_Set() const;
    bool is_team1_wins_Valid() const;

    QString getTeam2() const;
    void setTeam2(const QString &team2);
    bool is_team2_Set() const;
    bool is_team2_Valid() const;

    qint32 getTeam2Wins() const;
    void setTeam2Wins(const qint32 &team2_wins);
    bool is_team2_wins_Set() const;
    bool is_team2_wins_Valid() const;

    qint32 getTies() const;
    void setTies(const qint32 &ties);
    bool is_ties_Set() const;
    bool is_ties_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_end_year;
    bool m_end_year_isSet;
    bool m_end_year_isValid;

    QList<OAITeamMatchup_games_inner> m_games;
    bool m_games_isSet;
    bool m_games_isValid;

    qint32 m_start_year;
    bool m_start_year_isSet;
    bool m_start_year_isValid;

    QString m_team1;
    bool m_team1_isSet;
    bool m_team1_isValid;

    qint32 m_team1_wins;
    bool m_team1_wins_isSet;
    bool m_team1_wins_isValid;

    QString m_team2;
    bool m_team2_isSet;
    bool m_team2_isValid;

    qint32 m_team2_wins;
    bool m_team2_wins_isSet;
    bool m_team2_wins_isValid;

    qint32 m_ties;
    bool m_ties_isSet;
    bool m_ties_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITeamMatchup)

#endif // OAITeamMatchup_H
