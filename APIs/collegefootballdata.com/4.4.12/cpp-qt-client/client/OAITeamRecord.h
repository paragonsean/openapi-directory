/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITeamRecord.h
 *
 * 
 */

#ifndef OAITeamRecord_H
#define OAITeamRecord_H

#include <QJsonObject>

#include "OAITeamRecord_awayGames.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITeamRecord_awayGames;

class OAITeamRecord : public OAIObject {
public:
    OAITeamRecord();
    OAITeamRecord(QString json);
    ~OAITeamRecord() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITeamRecord_awayGames getAwayGames() const;
    void setAwayGames(const OAITeamRecord_awayGames &away_games);
    bool is_away_games_Set() const;
    bool is_away_games_Valid() const;

    QString getConference() const;
    void setConference(const QString &conference);
    bool is_conference_Set() const;
    bool is_conference_Valid() const;

    OAITeamRecord_awayGames getConferenceGames() const;
    void setConferenceGames(const OAITeamRecord_awayGames &conference_games);
    bool is_conference_games_Set() const;
    bool is_conference_games_Valid() const;

    QString getDivision() const;
    void setDivision(const QString &division);
    bool is_division_Set() const;
    bool is_division_Valid() const;

    double getExpectedWins() const;
    void setExpectedWins(const double &expected_wins);
    bool is_expected_wins_Set() const;
    bool is_expected_wins_Valid() const;

    OAITeamRecord_awayGames getHomeGames() const;
    void setHomeGames(const OAITeamRecord_awayGames &home_games);
    bool is_home_games_Set() const;
    bool is_home_games_Valid() const;

    QString getTeam() const;
    void setTeam(const QString &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    OAITeamRecord_awayGames getTotal() const;
    void setTotal(const OAITeamRecord_awayGames &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    qint32 getYear() const;
    void setYear(const qint32 &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITeamRecord_awayGames m_away_games;
    bool m_away_games_isSet;
    bool m_away_games_isValid;

    QString m_conference;
    bool m_conference_isSet;
    bool m_conference_isValid;

    OAITeamRecord_awayGames m_conference_games;
    bool m_conference_games_isSet;
    bool m_conference_games_isValid;

    QString m_division;
    bool m_division_isSet;
    bool m_division_isValid;

    double m_expected_wins;
    bool m_expected_wins_isSet;
    bool m_expected_wins_isValid;

    OAITeamRecord_awayGames m_home_games;
    bool m_home_games_isSet;
    bool m_home_games_isValid;

    QString m_team;
    bool m_team_isSet;
    bool m_team_isValid;

    OAITeamRecord_awayGames m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    qint32 m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITeamRecord)

#endif // OAITeamRecord_H
