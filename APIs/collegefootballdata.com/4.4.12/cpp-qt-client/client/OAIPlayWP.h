/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlayWP.h
 *
 * 
 */

#ifndef OAIPlayWP_H
#define OAIPlayWP_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlayWP : public OAIObject {
public:
    OAIPlayWP();
    OAIPlayWP(QString json);
    ~OAIPlayWP() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAway() const;
    void setAway(const QString &away);
    bool is_away_Set() const;
    bool is_away_Valid() const;

    qint32 getAwayId() const;
    void setAwayId(const qint32 &away_id);
    bool is_away_id_Set() const;
    bool is_away_id_Valid() const;

    qint32 getAwayScore() const;
    void setAwayScore(const qint32 &away_score);
    bool is_away_score_Set() const;
    bool is_away_score_Valid() const;

    qint32 getDistance() const;
    void setDistance(const qint32 &distance);
    bool is_distance_Set() const;
    bool is_distance_Valid() const;

    qint32 getDown() const;
    void setDown(const qint32 &down);
    bool is_down_Set() const;
    bool is_down_Valid() const;

    qint32 getGamesId() const;
    void setGamesId(const qint32 &games_id);
    bool is_games_id_Set() const;
    bool is_games_id_Valid() const;

    QString getHome() const;
    void setHome(const QString &home);
    bool is_home_Set() const;
    bool is_home_Valid() const;

    bool isHomeBall() const;
    void setHomeBall(const bool &home_ball);
    bool is_home_ball_Set() const;
    bool is_home_ball_Valid() const;

    qint32 getHomeId() const;
    void setHomeId(const qint32 &home_id);
    bool is_home_id_Set() const;
    bool is_home_id_Valid() const;

    qint32 getHomeScore() const;
    void setHomeScore(const qint32 &home_score);
    bool is_home_score_Set() const;
    bool is_home_score_Valid() const;

    double getHomeWinProb() const;
    void setHomeWinProb(const double &home_win_prob);
    bool is_home_win_prob_Set() const;
    bool is_home_win_prob_Valid() const;

    qint32 getPlayId() const;
    void setPlayId(const qint32 &play_id);
    bool is_play_id_Set() const;
    bool is_play_id_Valid() const;

    qint32 getPlayNumber() const;
    void setPlayNumber(const qint32 &play_number);
    bool is_play_number_Set() const;
    bool is_play_number_Valid() const;

    QString getPlayText() const;
    void setPlayText(const QString &play_text);
    bool is_play_text_Set() const;
    bool is_play_text_Valid() const;

    double getSpread() const;
    void setSpread(const double &spread);
    bool is_spread_Set() const;
    bool is_spread_Valid() const;

    qint32 getTimeRemaining() const;
    void setTimeRemaining(const qint32 &time_remaining);
    bool is_time_remaining_Set() const;
    bool is_time_remaining_Valid() const;

    qint32 getYardLine() const;
    void setYardLine(const qint32 &yard_line);
    bool is_yard_line_Set() const;
    bool is_yard_line_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_away;
    bool m_away_isSet;
    bool m_away_isValid;

    qint32 m_away_id;
    bool m_away_id_isSet;
    bool m_away_id_isValid;

    qint32 m_away_score;
    bool m_away_score_isSet;
    bool m_away_score_isValid;

    qint32 m_distance;
    bool m_distance_isSet;
    bool m_distance_isValid;

    qint32 m_down;
    bool m_down_isSet;
    bool m_down_isValid;

    qint32 m_games_id;
    bool m_games_id_isSet;
    bool m_games_id_isValid;

    QString m_home;
    bool m_home_isSet;
    bool m_home_isValid;

    bool m_home_ball;
    bool m_home_ball_isSet;
    bool m_home_ball_isValid;

    qint32 m_home_id;
    bool m_home_id_isSet;
    bool m_home_id_isValid;

    qint32 m_home_score;
    bool m_home_score_isSet;
    bool m_home_score_isValid;

    double m_home_win_prob;
    bool m_home_win_prob_isSet;
    bool m_home_win_prob_isValid;

    qint32 m_play_id;
    bool m_play_id_isSet;
    bool m_play_id_isValid;

    qint32 m_play_number;
    bool m_play_number_isSet;
    bool m_play_number_isValid;

    QString m_play_text;
    bool m_play_text_isSet;
    bool m_play_text_isValid;

    double m_spread;
    bool m_spread_isSet;
    bool m_spread_isValid;

    qint32 m_time_remaining;
    bool m_time_remaining_isSet;
    bool m_time_remaining_isValid;

    qint32 m_yard_line;
    bool m_yard_line_isSet;
    bool m_yard_line_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlayWP)

#endif // OAIPlayWP_H
