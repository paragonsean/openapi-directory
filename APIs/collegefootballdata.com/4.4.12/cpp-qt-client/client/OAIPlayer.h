/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlayer.h
 *
 * 
 */

#ifndef OAIPlayer_H
#define OAIPlayer_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlayer : public OAIObject {
public:
    OAIPlayer();
    OAIPlayer(QString json);
    ~OAIPlayer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QString getHomeCity() const;
    void setHomeCity(const QString &home_city);
    bool is_home_city_Set() const;
    bool is_home_city_Valid() const;

    QString getHomeCountry() const;
    void setHomeCountry(const QString &home_country);
    bool is_home_country_Set() const;
    bool is_home_country_Valid() const;

    QString getHomeCountyFips() const;
    void setHomeCountyFips(const QString &home_county_fips);
    bool is_home_county_fips_Set() const;
    bool is_home_county_fips_Valid() const;

    double getHomeLatitude() const;
    void setHomeLatitude(const double &home_latitude);
    bool is_home_latitude_Set() const;
    bool is_home_latitude_Valid() const;

    double getHomeLongitude() const;
    void setHomeLongitude(const double &home_longitude);
    bool is_home_longitude_Set() const;
    bool is_home_longitude_Valid() const;

    QString getHomeState() const;
    void setHomeState(const QString &home_state);
    bool is_home_state_Set() const;
    bool is_home_state_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getJersey() const;
    void setJersey(const qint32 &jersey);
    bool is_jersey_Set() const;
    bool is_jersey_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    QString getPosition() const;
    void setPosition(const QString &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    QList<qint32> getRecruitIds() const;
    void setRecruitIds(const QList<qint32> &recruit_ids);
    bool is_recruit_ids_Set() const;
    bool is_recruit_ids_Valid() const;

    QString getTeam() const;
    void setTeam(const QString &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    qint32 getWeight() const;
    void setWeight(const qint32 &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    qint32 getYear() const;
    void setYear(const qint32 &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    QString m_home_city;
    bool m_home_city_isSet;
    bool m_home_city_isValid;

    QString m_home_country;
    bool m_home_country_isSet;
    bool m_home_country_isValid;

    QString m_home_county_fips;
    bool m_home_county_fips_isSet;
    bool m_home_county_fips_isValid;

    double m_home_latitude;
    bool m_home_latitude_isSet;
    bool m_home_latitude_isValid;

    double m_home_longitude;
    bool m_home_longitude_isSet;
    bool m_home_longitude_isValid;

    QString m_home_state;
    bool m_home_state_isSet;
    bool m_home_state_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_jersey;
    bool m_jersey_isSet;
    bool m_jersey_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    QString m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    QList<qint32> m_recruit_ids;
    bool m_recruit_ids_isSet;
    bool m_recruit_ids_isValid;

    QString m_team;
    bool m_team_isSet;
    bool m_team_isValid;

    qint32 m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;

    qint32 m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlayer)

#endif // OAIPlayer_H
