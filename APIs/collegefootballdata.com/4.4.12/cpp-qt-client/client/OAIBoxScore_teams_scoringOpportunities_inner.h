/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBoxScore_teams_scoringOpportunities_inner.h
 *
 * 
 */

#ifndef OAIBoxScore_teams_scoringOpportunities_inner_H
#define OAIBoxScore_teams_scoringOpportunities_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBoxScore_teams_scoringOpportunities_inner : public OAIObject {
public:
    OAIBoxScore_teams_scoringOpportunities_inner();
    OAIBoxScore_teams_scoringOpportunities_inner(QString json);
    ~OAIBoxScore_teams_scoringOpportunities_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getOpportunities() const;
    void setOpportunities(const qint32 &opportunities);
    bool is_opportunities_Set() const;
    bool is_opportunities_Valid() const;

    qint32 getPoints() const;
    void setPoints(const qint32 &points);
    bool is_points_Set() const;
    bool is_points_Valid() const;

    double getPointsPerOpportunity() const;
    void setPointsPerOpportunity(const double &points_per_opportunity);
    bool is_points_per_opportunity_Set() const;
    bool is_points_per_opportunity_Valid() const;

    QString getTeam() const;
    void setTeam(const QString &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_opportunities;
    bool m_opportunities_isSet;
    bool m_opportunities_isValid;

    qint32 m_points;
    bool m_points_isSet;
    bool m_points_isValid;

    double m_points_per_opportunity;
    bool m_points_per_opportunity_isSet;
    bool m_points_per_opportunity_isValid;

    QString m_team;
    bool m_team_isSet;
    bool m_team_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBoxScore_teams_scoringOpportunities_inner)

#endif // OAIBoxScore_teams_scoringOpportunities_inner_H
