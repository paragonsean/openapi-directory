/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBoxScore.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBoxScore::OAIBoxScore(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBoxScore::OAIBoxScore() {
    this->initializeModel();
}

OAIBoxScore::~OAIBoxScore() {}

void OAIBoxScore::initializeModel() {

    m_players_isSet = false;
    m_players_isValid = false;

    m_teams_isSet = false;
    m_teams_isValid = false;
}

void OAIBoxScore::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBoxScore::fromJsonObject(QJsonObject json) {

    m_players_isValid = ::OpenAPI::fromJsonValue(m_players, json[QString("players")]);
    m_players_isSet = !json[QString("players")].isNull() && m_players_isValid;

    m_teams_isValid = ::OpenAPI::fromJsonValue(m_teams, json[QString("teams")]);
    m_teams_isSet = !json[QString("teams")].isNull() && m_teams_isValid;
}

QString OAIBoxScore::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBoxScore::asJsonObject() const {
    QJsonObject obj;
    if (m_players.isSet()) {
        obj.insert(QString("players"), ::OpenAPI::toJsonValue(m_players));
    }
    if (m_teams.isSet()) {
        obj.insert(QString("teams"), ::OpenAPI::toJsonValue(m_teams));
    }
    return obj;
}

OAIBoxScore_players OAIBoxScore::getPlayers() const {
    return m_players;
}
void OAIBoxScore::setPlayers(const OAIBoxScore_players &players) {
    m_players = players;
    m_players_isSet = true;
}

bool OAIBoxScore::is_players_Set() const{
    return m_players_isSet;
}

bool OAIBoxScore::is_players_Valid() const{
    return m_players_isValid;
}

OAIBoxScore_teams OAIBoxScore::getTeams() const {
    return m_teams;
}
void OAIBoxScore::setTeams(const OAIBoxScore_teams &teams) {
    m_teams = teams;
    m_teams_isSet = true;
}

bool OAIBoxScore::is_teams_Set() const{
    return m_teams_isSet;
}

bool OAIBoxScore::is_teams_Valid() const{
    return m_teams_isValid;
}

bool OAIBoxScore::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_players.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_teams.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBoxScore::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
