/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPredictedPoints.h
 *
 * 
 */

#ifndef OAIPredictedPoints_H
#define OAIPredictedPoints_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPredictedPoints : public OAIObject {
public:
    OAIPredictedPoints();
    OAIPredictedPoints(QString json);
    ~OAIPredictedPoints() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getPredictedPoints() const;
    void setPredictedPoints(const double &predicted_points);
    bool is_predicted_points_Set() const;
    bool is_predicted_points_Valid() const;

    qint32 getYardLine() const;
    void setYardLine(const qint32 &yard_line);
    bool is_yard_line_Set() const;
    bool is_yard_line_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_predicted_points;
    bool m_predicted_points_isSet;
    bool m_predicted_points_isValid;

    qint32 m_yard_line;
    bool m_yard_line_isSet;
    bool m_yard_line_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPredictedPoints)

#endif // OAIPredictedPoints_H
