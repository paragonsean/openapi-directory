/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITeam.h
 *
 * 
 */

#ifndef OAITeam_H
#define OAITeam_H

#include <QJsonObject>

#include "OAITeam_location.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITeam_location;

class OAITeam : public OAIObject {
public:
    OAITeam();
    OAITeam(QString json);
    ~OAITeam() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAbbreviation() const;
    void setAbbreviation(const QString &abbreviation);
    bool is_abbreviation_Set() const;
    bool is_abbreviation_Valid() const;

    QString getAltColor() const;
    void setAltColor(const QString &alt_color);
    bool is_alt_color_Set() const;
    bool is_alt_color_Valid() const;

    QString getAltName1() const;
    void setAltName1(const QString &alt_name_1);
    bool is_alt_name_1_Set() const;
    bool is_alt_name_1_Valid() const;

    QString getAltName2() const;
    void setAltName2(const QString &alt_name_2);
    bool is_alt_name_2_Set() const;
    bool is_alt_name_2_Valid() const;

    QString getAltName3() const;
    void setAltName3(const QString &alt_name_3);
    bool is_alt_name_3_Set() const;
    bool is_alt_name_3_Valid() const;

    QString getClassification() const;
    void setClassification(const QString &classification);
    bool is_classification_Set() const;
    bool is_classification_Valid() const;

    QString getColor() const;
    void setColor(const QString &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    QString getConference() const;
    void setConference(const QString &conference);
    bool is_conference_Set() const;
    bool is_conference_Valid() const;

    QString getDivision() const;
    void setDivision(const QString &division);
    bool is_division_Set() const;
    bool is_division_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAITeam_location getLocation() const;
    void setLocation(const OAITeam_location &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QList<QString> getLogos() const;
    void setLogos(const QList<QString> &logos);
    bool is_logos_Set() const;
    bool is_logos_Valid() const;

    QString getMascot() const;
    void setMascot(const QString &mascot);
    bool is_mascot_Set() const;
    bool is_mascot_Valid() const;

    QString getSchool() const;
    void setSchool(const QString &school);
    bool is_school_Set() const;
    bool is_school_Valid() const;

    QString getTwitter() const;
    void setTwitter(const QString &twitter);
    bool is_twitter_Set() const;
    bool is_twitter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_abbreviation;
    bool m_abbreviation_isSet;
    bool m_abbreviation_isValid;

    QString m_alt_color;
    bool m_alt_color_isSet;
    bool m_alt_color_isValid;

    QString m_alt_name_1;
    bool m_alt_name_1_isSet;
    bool m_alt_name_1_isValid;

    QString m_alt_name_2;
    bool m_alt_name_2_isSet;
    bool m_alt_name_2_isValid;

    QString m_alt_name_3;
    bool m_alt_name_3_isSet;
    bool m_alt_name_3_isValid;

    QString m_classification;
    bool m_classification_isSet;
    bool m_classification_isValid;

    QString m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    QString m_conference;
    bool m_conference_isSet;
    bool m_conference_isValid;

    QString m_division;
    bool m_division_isSet;
    bool m_division_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAITeam_location m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QList<QString> m_logos;
    bool m_logos_isSet;
    bool m_logos_isValid;

    QString m_mascot;
    bool m_mascot_isSet;
    bool m_mascot_isValid;

    QString m_school;
    bool m_school_isSet;
    bool m_school_isValid;

    QString m_twitter;
    bool m_twitter_isSet;
    bool m_twitter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITeam)

#endif // OAITeam_H
