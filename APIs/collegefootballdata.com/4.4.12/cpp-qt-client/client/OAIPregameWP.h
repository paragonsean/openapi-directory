/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPregameWP.h
 *
 * 
 */

#ifndef OAIPregameWP_H
#define OAIPregameWP_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPregameWP : public OAIObject {
public:
    OAIPregameWP();
    OAIPregameWP(QString json);
    ~OAIPregameWP() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAwayTeam() const;
    void setAwayTeam(const QString &away_team);
    bool is_away_team_Set() const;
    bool is_away_team_Valid() const;

    qint32 getGameId() const;
    void setGameId(const qint32 &game_id);
    bool is_game_id_Set() const;
    bool is_game_id_Valid() const;

    QString getHomeTeam() const;
    void setHomeTeam(const QString &home_team);
    bool is_home_team_Set() const;
    bool is_home_team_Valid() const;

    double getHomeWinProb() const;
    void setHomeWinProb(const double &home_win_prob);
    bool is_home_win_prob_Set() const;
    bool is_home_win_prob_Valid() const;

    qint32 getSeason() const;
    void setSeason(const qint32 &season);
    bool is_season_Set() const;
    bool is_season_Valid() const;

    QString getSeasonType() const;
    void setSeasonType(const QString &season_type);
    bool is_season_type_Set() const;
    bool is_season_type_Valid() const;

    double getSpread() const;
    void setSpread(const double &spread);
    bool is_spread_Set() const;
    bool is_spread_Valid() const;

    qint32 getWeek() const;
    void setWeek(const qint32 &week);
    bool is_week_Set() const;
    bool is_week_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_away_team;
    bool m_away_team_isSet;
    bool m_away_team_isValid;

    qint32 m_game_id;
    bool m_game_id_isSet;
    bool m_game_id_isValid;

    QString m_home_team;
    bool m_home_team_isSet;
    bool m_home_team_isValid;

    double m_home_win_prob;
    bool m_home_win_prob_isSet;
    bool m_home_win_prob_isValid;

    qint32 m_season;
    bool m_season_isSet;
    bool m_season_isValid;

    QString m_season_type;
    bool m_season_type_isSet;
    bool m_season_type_isValid;

    double m_spread;
    bool m_spread_isSet;
    bool m_spread_isValid;

    qint32 m_week;
    bool m_week_isSet;
    bool m_week_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPregameWP)

#endif // OAIPregameWP_H
