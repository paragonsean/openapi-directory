/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecruit.h
 *
 * 
 */

#ifndef OAIRecruit_H
#define OAIRecruit_H

#include <QJsonObject>

#include "OAIRecruit_hometownInfo.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRecruit_hometownInfo;

class OAIRecruit : public OAIObject {
public:
    OAIRecruit();
    OAIRecruit(QString json);
    ~OAIRecruit() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAthleteId() const;
    void setAthleteId(const qint32 &athlete_id);
    bool is_athlete_id_Set() const;
    bool is_athlete_id_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCommittedTo() const;
    void setCommittedTo(const QString &committed_to);
    bool is_committed_to_Set() const;
    bool is_committed_to_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    double getHeight() const;
    void setHeight(const double &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    OAIRecruit_hometownInfo getHometownInfo() const;
    void setHometownInfo(const OAIRecruit_hometownInfo &hometown_info);
    bool is_hometown_info_Set() const;
    bool is_hometown_info_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPosition() const;
    void setPosition(const QString &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    qint32 getRanking() const;
    void setRanking(const qint32 &ranking);
    bool is_ranking_Set() const;
    bool is_ranking_Valid() const;

    double getRating() const;
    void setRating(const double &rating);
    bool is_rating_Set() const;
    bool is_rating_Valid() const;

    QString getRecruitType() const;
    void setRecruitType(const QString &recruit_type);
    bool is_recruit_type_Set() const;
    bool is_recruit_type_Valid() const;

    QString getSchool() const;
    void setSchool(const QString &school);
    bool is_school_Set() const;
    bool is_school_Valid() const;

    qint32 getStars() const;
    void setStars(const qint32 &stars);
    bool is_stars_Set() const;
    bool is_stars_Valid() const;

    QString getStateProvince() const;
    void setStateProvince(const QString &state_province);
    bool is_state_province_Set() const;
    bool is_state_province_Valid() const;

    qint32 getWeight() const;
    void setWeight(const qint32 &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    qint32 getYear() const;
    void setYear(const qint32 &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_athlete_id;
    bool m_athlete_id_isSet;
    bool m_athlete_id_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_committed_to;
    bool m_committed_to_isSet;
    bool m_committed_to_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    double m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    OAIRecruit_hometownInfo m_hometown_info;
    bool m_hometown_info_isSet;
    bool m_hometown_info_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    qint32 m_ranking;
    bool m_ranking_isSet;
    bool m_ranking_isValid;

    double m_rating;
    bool m_rating_isSet;
    bool m_rating_isValid;

    QString m_recruit_type;
    bool m_recruit_type_isSet;
    bool m_recruit_type_isValid;

    QString m_school;
    bool m_school_isSet;
    bool m_school_isValid;

    qint32 m_stars;
    bool m_stars_isSet;
    bool m_stars_isValid;

    QString m_state_province;
    bool m_state_province_isSet;
    bool m_state_province_isValid;

    qint32 m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;

    qint32 m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecruit)

#endif // OAIRecruit_H
