/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlayerUsage_usage.h
 *
 * 
 */

#ifndef OAIPlayerUsage_usage_H
#define OAIPlayerUsage_usage_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlayerUsage_usage : public OAIObject {
public:
    OAIPlayerUsage_usage();
    OAIPlayerUsage_usage(QString json);
    ~OAIPlayerUsage_usage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getFirstDown() const;
    void setFirstDown(const double &first_down);
    bool is_first_down_Set() const;
    bool is_first_down_Valid() const;

    double getOverall() const;
    void setOverall(const double &overall);
    bool is_overall_Set() const;
    bool is_overall_Valid() const;

    double getPass() const;
    void setPass(const double &pass);
    bool is_pass_Set() const;
    bool is_pass_Valid() const;

    double getPassingDowns() const;
    void setPassingDowns(const double &passing_downs);
    bool is_passing_downs_Set() const;
    bool is_passing_downs_Valid() const;

    double getRush() const;
    void setRush(const double &rush);
    bool is_rush_Set() const;
    bool is_rush_Valid() const;

    double getSecondDown() const;
    void setSecondDown(const double &second_down);
    bool is_second_down_Set() const;
    bool is_second_down_Valid() const;

    double getStandardDowns() const;
    void setStandardDowns(const double &standard_downs);
    bool is_standard_downs_Set() const;
    bool is_standard_downs_Valid() const;

    double getThirdDown() const;
    void setThirdDown(const double &third_down);
    bool is_third_down_Set() const;
    bool is_third_down_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_first_down;
    bool m_first_down_isSet;
    bool m_first_down_isValid;

    double m_overall;
    bool m_overall_isSet;
    bool m_overall_isValid;

    double m_pass;
    bool m_pass_isSet;
    bool m_pass_isValid;

    double m_passing_downs;
    bool m_passing_downs_isSet;
    bool m_passing_downs_isValid;

    double m_rush;
    bool m_rush_isSet;
    bool m_rush_isValid;

    double m_second_down;
    bool m_second_down_isSet;
    bool m_second_down_isValid;

    double m_standard_downs;
    bool m_standard_downs_isSet;
    bool m_standard_downs_isValid;

    double m_third_down;
    bool m_third_down_isSet;
    bool m_third_down_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlayerUsage_usage)

#endif // OAIPlayerUsage_usage_H
