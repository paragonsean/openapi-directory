/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlayerSeasonStat.h
 *
 * 
 */

#ifndef OAIPlayerSeasonStat_H
#define OAIPlayerSeasonStat_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlayerSeasonStat : public OAIObject {
public:
    OAIPlayerSeasonStat();
    OAIPlayerSeasonStat(QString json);
    ~OAIPlayerSeasonStat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getConference() const;
    void setConference(const QString &conference);
    bool is_conference_Set() const;
    bool is_conference_Valid() const;

    QString getPlayer() const;
    void setPlayer(const QString &player);
    bool is_player_Set() const;
    bool is_player_Valid() const;

    qint32 getPlayerId() const;
    void setPlayerId(const qint32 &player_id);
    bool is_player_id_Set() const;
    bool is_player_id_Valid() const;

    qint32 getSeason() const;
    void setSeason(const qint32 &season);
    bool is_season_Set() const;
    bool is_season_Valid() const;

    double getStat() const;
    void setStat(const double &stat);
    bool is_stat_Set() const;
    bool is_stat_Valid() const;

    QString getStatType() const;
    void setStatType(const QString &stat_type);
    bool is_stat_type_Set() const;
    bool is_stat_type_Valid() const;

    QString getTeam() const;
    void setTeam(const QString &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_conference;
    bool m_conference_isSet;
    bool m_conference_isValid;

    QString m_player;
    bool m_player_isSet;
    bool m_player_isValid;

    qint32 m_player_id;
    bool m_player_id_isSet;
    bool m_player_id_isValid;

    qint32 m_season;
    bool m_season_isSet;
    bool m_season_isValid;

    double m_stat;
    bool m_stat_isSet;
    bool m_stat_isValid;

    QString m_stat_type;
    bool m_stat_type_isSet;
    bool m_stat_type_isValid;

    QString m_team;
    bool m_team_isSet;
    bool m_team_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlayerSeasonStat)

#endif // OAIPlayerSeasonStat_H
