/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecruit_hometownInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecruit_hometownInfo::OAIRecruit_hometownInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecruit_hometownInfo::OAIRecruit_hometownInfo() {
    this->initializeModel();
}

OAIRecruit_hometownInfo::~OAIRecruit_hometownInfo() {}

void OAIRecruit_hometownInfo::initializeModel() {

    m_county_fips_isSet = false;
    m_county_fips_isValid = false;

    m_latitude_isSet = false;
    m_latitude_isValid = false;

    m_longitude_isSet = false;
    m_longitude_isValid = false;
}

void OAIRecruit_hometownInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecruit_hometownInfo::fromJsonObject(QJsonObject json) {

    m_county_fips_isValid = ::OpenAPI::fromJsonValue(m_county_fips, json[QString("countyFips")]);
    m_county_fips_isSet = !json[QString("countyFips")].isNull() && m_county_fips_isValid;

    m_latitude_isValid = ::OpenAPI::fromJsonValue(m_latitude, json[QString("latitude")]);
    m_latitude_isSet = !json[QString("latitude")].isNull() && m_latitude_isValid;

    m_longitude_isValid = ::OpenAPI::fromJsonValue(m_longitude, json[QString("longitude")]);
    m_longitude_isSet = !json[QString("longitude")].isNull() && m_longitude_isValid;
}

QString OAIRecruit_hometownInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecruit_hometownInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_county_fips_isSet) {
        obj.insert(QString("countyFips"), ::OpenAPI::toJsonValue(m_county_fips));
    }
    if (m_latitude_isSet) {
        obj.insert(QString("latitude"), ::OpenAPI::toJsonValue(m_latitude));
    }
    if (m_longitude_isSet) {
        obj.insert(QString("longitude"), ::OpenAPI::toJsonValue(m_longitude));
    }
    return obj;
}

QString OAIRecruit_hometownInfo::getCountyFips() const {
    return m_county_fips;
}
void OAIRecruit_hometownInfo::setCountyFips(const QString &county_fips) {
    m_county_fips = county_fips;
    m_county_fips_isSet = true;
}

bool OAIRecruit_hometownInfo::is_county_fips_Set() const{
    return m_county_fips_isSet;
}

bool OAIRecruit_hometownInfo::is_county_fips_Valid() const{
    return m_county_fips_isValid;
}

double OAIRecruit_hometownInfo::getLatitude() const {
    return m_latitude;
}
void OAIRecruit_hometownInfo::setLatitude(const double &latitude) {
    m_latitude = latitude;
    m_latitude_isSet = true;
}

bool OAIRecruit_hometownInfo::is_latitude_Set() const{
    return m_latitude_isSet;
}

bool OAIRecruit_hometownInfo::is_latitude_Valid() const{
    return m_latitude_isValid;
}

double OAIRecruit_hometownInfo::getLongitude() const {
    return m_longitude;
}
void OAIRecruit_hometownInfo::setLongitude(const double &longitude) {
    m_longitude = longitude;
    m_longitude_isSet = true;
}

bool OAIRecruit_hometownInfo::is_longitude_Set() const{
    return m_longitude_isSet;
}

bool OAIRecruit_hometownInfo::is_longitude_Valid() const{
    return m_longitude_isValid;
}

bool OAIRecruit_hometownInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_county_fips_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latitude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_longitude_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecruit_hometownInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
