/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScoreboardGame.h
 *
 * 
 */

#ifndef OAIScoreboardGame_H
#define OAIScoreboardGame_H

#include <QJsonObject>

#include "OAIScoreboardGame_awayTeam.h"
#include "OAIScoreboardGame_betting.h"
#include "OAIScoreboardGame_venue.h"
#include "OAIScoreboardGame_weather.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIScoreboardGame_awayTeam;
class OAIScoreboardGame_betting;
class OAIScoreboardGame_venue;
class OAIScoreboardGame_weather;

class OAIScoreboardGame : public OAIObject {
public:
    OAIScoreboardGame();
    OAIScoreboardGame(QString json);
    ~OAIScoreboardGame() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIScoreboardGame_awayTeam getAwayTeam() const;
    void setAwayTeam(const OAIScoreboardGame_awayTeam &away_team);
    bool is_away_team_Set() const;
    bool is_away_team_Valid() const;

    OAIScoreboardGame_betting getBetting() const;
    void setBetting(const OAIScoreboardGame_betting &betting);
    bool is_betting_Set() const;
    bool is_betting_Valid() const;

    QString getClock() const;
    void setClock(const QString &clock);
    bool is_clock_Set() const;
    bool is_clock_Valid() const;

    bool isConferenceGame() const;
    void setConferenceGame(const bool &conference_game);
    bool is_conference_game_Set() const;
    bool is_conference_game_Valid() const;

    OAIScoreboardGame_awayTeam getHomeTeam() const;
    void setHomeTeam(const OAIScoreboardGame_awayTeam &home_team);
    bool is_home_team_Set() const;
    bool is_home_team_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isNeutralSite() const;
    void setNeutralSite(const bool &neutral_site);
    bool is_neutral_site_Set() const;
    bool is_neutral_site_Valid() const;

    qint32 getPeriod() const;
    void setPeriod(const qint32 &period);
    bool is_period_Set() const;
    bool is_period_Valid() const;

    QString getPossession() const;
    void setPossession(const QString &possession);
    bool is_possession_Set() const;
    bool is_possession_Valid() const;

    QString getSituation() const;
    void setSituation(const QString &situation);
    bool is_situation_Set() const;
    bool is_situation_Valid() const;

    QString getStartDate() const;
    void setStartDate(const QString &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    bool isStartTimeTbd() const;
    void setStartTimeTbd(const bool &start_time_tbd);
    bool is_start_time_tbd_Set() const;
    bool is_start_time_tbd_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTv() const;
    void setTv(const QString &tv);
    bool is_tv_Set() const;
    bool is_tv_Valid() const;

    OAIScoreboardGame_venue getVenue() const;
    void setVenue(const OAIScoreboardGame_venue &venue);
    bool is_venue_Set() const;
    bool is_venue_Valid() const;

    OAIScoreboardGame_weather getWeather() const;
    void setWeather(const OAIScoreboardGame_weather &weather);
    bool is_weather_Set() const;
    bool is_weather_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIScoreboardGame_awayTeam m_away_team;
    bool m_away_team_isSet;
    bool m_away_team_isValid;

    OAIScoreboardGame_betting m_betting;
    bool m_betting_isSet;
    bool m_betting_isValid;

    QString m_clock;
    bool m_clock_isSet;
    bool m_clock_isValid;

    bool m_conference_game;
    bool m_conference_game_isSet;
    bool m_conference_game_isValid;

    OAIScoreboardGame_awayTeam m_home_team;
    bool m_home_team_isSet;
    bool m_home_team_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_neutral_site;
    bool m_neutral_site_isSet;
    bool m_neutral_site_isValid;

    qint32 m_period;
    bool m_period_isSet;
    bool m_period_isValid;

    QString m_possession;
    bool m_possession_isSet;
    bool m_possession_isValid;

    QString m_situation;
    bool m_situation_isSet;
    bool m_situation_isValid;

    QString m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    bool m_start_time_tbd;
    bool m_start_time_tbd_isSet;
    bool m_start_time_tbd_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_tv;
    bool m_tv_isSet;
    bool m_tv_isValid;

    OAIScoreboardGame_venue m_venue;
    bool m_venue_isSet;
    bool m_venue_isValid;

    OAIScoreboardGame_weather m_weather;
    bool m_weather_isSet;
    bool m_weather_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScoreboardGame)

#endif // OAIScoreboardGame_H
