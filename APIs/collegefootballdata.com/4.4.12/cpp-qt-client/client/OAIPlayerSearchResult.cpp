/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPlayerSearchResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPlayerSearchResult::OAIPlayerSearchResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPlayerSearchResult::OAIPlayerSearchResult() {
    this->initializeModel();
}

OAIPlayerSearchResult::~OAIPlayerSearchResult() {}

void OAIPlayerSearchResult::initializeModel() {

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_height_isSet = false;
    m_height_isValid = false;

    m_hometown_isSet = false;
    m_hometown_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_jersey_isSet = false;
    m_jersey_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_position_isSet = false;
    m_position_isValid = false;

    m_team_isSet = false;
    m_team_isValid = false;

    m_team_color_isSet = false;
    m_team_color_isValid = false;

    m_team_color_secondary_isSet = false;
    m_team_color_secondary_isValid = false;

    m_weight_isSet = false;
    m_weight_isValid = false;
}

void OAIPlayerSearchResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPlayerSearchResult::fromJsonObject(QJsonObject json) {

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_height_isValid = ::OpenAPI::fromJsonValue(m_height, json[QString("height")]);
    m_height_isSet = !json[QString("height")].isNull() && m_height_isValid;

    m_hometown_isValid = ::OpenAPI::fromJsonValue(m_hometown, json[QString("hometown")]);
    m_hometown_isSet = !json[QString("hometown")].isNull() && m_hometown_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_jersey_isValid = ::OpenAPI::fromJsonValue(m_jersey, json[QString("jersey")]);
    m_jersey_isSet = !json[QString("jersey")].isNull() && m_jersey_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_position_isValid = ::OpenAPI::fromJsonValue(m_position, json[QString("position")]);
    m_position_isSet = !json[QString("position")].isNull() && m_position_isValid;

    m_team_isValid = ::OpenAPI::fromJsonValue(m_team, json[QString("team")]);
    m_team_isSet = !json[QString("team")].isNull() && m_team_isValid;

    m_team_color_isValid = ::OpenAPI::fromJsonValue(m_team_color, json[QString("teamColor")]);
    m_team_color_isSet = !json[QString("teamColor")].isNull() && m_team_color_isValid;

    m_team_color_secondary_isValid = ::OpenAPI::fromJsonValue(m_team_color_secondary, json[QString("teamColorSecondary")]);
    m_team_color_secondary_isSet = !json[QString("teamColorSecondary")].isNull() && m_team_color_secondary_isValid;

    m_weight_isValid = ::OpenAPI::fromJsonValue(m_weight, json[QString("weight")]);
    m_weight_isSet = !json[QString("weight")].isNull() && m_weight_isValid;
}

QString OAIPlayerSearchResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPlayerSearchResult::asJsonObject() const {
    QJsonObject obj;
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_height_isSet) {
        obj.insert(QString("height"), ::OpenAPI::toJsonValue(m_height));
    }
    if (m_hometown_isSet) {
        obj.insert(QString("hometown"), ::OpenAPI::toJsonValue(m_hometown));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_jersey_isSet) {
        obj.insert(QString("jersey"), ::OpenAPI::toJsonValue(m_jersey));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_position_isSet) {
        obj.insert(QString("position"), ::OpenAPI::toJsonValue(m_position));
    }
    if (m_team_isSet) {
        obj.insert(QString("team"), ::OpenAPI::toJsonValue(m_team));
    }
    if (m_team_color_isSet) {
        obj.insert(QString("teamColor"), ::OpenAPI::toJsonValue(m_team_color));
    }
    if (m_team_color_secondary_isSet) {
        obj.insert(QString("teamColorSecondary"), ::OpenAPI::toJsonValue(m_team_color_secondary));
    }
    if (m_weight_isSet) {
        obj.insert(QString("weight"), ::OpenAPI::toJsonValue(m_weight));
    }
    return obj;
}

QString OAIPlayerSearchResult::getFirstName() const {
    return m_first_name;
}
void OAIPlayerSearchResult::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIPlayerSearchResult::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIPlayerSearchResult::is_first_name_Valid() const{
    return m_first_name_isValid;
}

qint32 OAIPlayerSearchResult::getHeight() const {
    return m_height;
}
void OAIPlayerSearchResult::setHeight(const qint32 &height) {
    m_height = height;
    m_height_isSet = true;
}

bool OAIPlayerSearchResult::is_height_Set() const{
    return m_height_isSet;
}

bool OAIPlayerSearchResult::is_height_Valid() const{
    return m_height_isValid;
}

QString OAIPlayerSearchResult::getHometown() const {
    return m_hometown;
}
void OAIPlayerSearchResult::setHometown(const QString &hometown) {
    m_hometown = hometown;
    m_hometown_isSet = true;
}

bool OAIPlayerSearchResult::is_hometown_Set() const{
    return m_hometown_isSet;
}

bool OAIPlayerSearchResult::is_hometown_Valid() const{
    return m_hometown_isValid;
}

qint32 OAIPlayerSearchResult::getId() const {
    return m_id;
}
void OAIPlayerSearchResult::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIPlayerSearchResult::is_id_Set() const{
    return m_id_isSet;
}

bool OAIPlayerSearchResult::is_id_Valid() const{
    return m_id_isValid;
}

qint32 OAIPlayerSearchResult::getJersey() const {
    return m_jersey;
}
void OAIPlayerSearchResult::setJersey(const qint32 &jersey) {
    m_jersey = jersey;
    m_jersey_isSet = true;
}

bool OAIPlayerSearchResult::is_jersey_Set() const{
    return m_jersey_isSet;
}

bool OAIPlayerSearchResult::is_jersey_Valid() const{
    return m_jersey_isValid;
}

QString OAIPlayerSearchResult::getLastName() const {
    return m_last_name;
}
void OAIPlayerSearchResult::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIPlayerSearchResult::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIPlayerSearchResult::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIPlayerSearchResult::getName() const {
    return m_name;
}
void OAIPlayerSearchResult::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPlayerSearchResult::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPlayerSearchResult::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIPlayerSearchResult::getPosition() const {
    return m_position;
}
void OAIPlayerSearchResult::setPosition(const QString &position) {
    m_position = position;
    m_position_isSet = true;
}

bool OAIPlayerSearchResult::is_position_Set() const{
    return m_position_isSet;
}

bool OAIPlayerSearchResult::is_position_Valid() const{
    return m_position_isValid;
}

QString OAIPlayerSearchResult::getTeam() const {
    return m_team;
}
void OAIPlayerSearchResult::setTeam(const QString &team) {
    m_team = team;
    m_team_isSet = true;
}

bool OAIPlayerSearchResult::is_team_Set() const{
    return m_team_isSet;
}

bool OAIPlayerSearchResult::is_team_Valid() const{
    return m_team_isValid;
}

QString OAIPlayerSearchResult::getTeamColor() const {
    return m_team_color;
}
void OAIPlayerSearchResult::setTeamColor(const QString &team_color) {
    m_team_color = team_color;
    m_team_color_isSet = true;
}

bool OAIPlayerSearchResult::is_team_color_Set() const{
    return m_team_color_isSet;
}

bool OAIPlayerSearchResult::is_team_color_Valid() const{
    return m_team_color_isValid;
}

QString OAIPlayerSearchResult::getTeamColorSecondary() const {
    return m_team_color_secondary;
}
void OAIPlayerSearchResult::setTeamColorSecondary(const QString &team_color_secondary) {
    m_team_color_secondary = team_color_secondary;
    m_team_color_secondary_isSet = true;
}

bool OAIPlayerSearchResult::is_team_color_secondary_Set() const{
    return m_team_color_secondary_isSet;
}

bool OAIPlayerSearchResult::is_team_color_secondary_Valid() const{
    return m_team_color_secondary_isValid;
}

qint32 OAIPlayerSearchResult::getWeight() const {
    return m_weight;
}
void OAIPlayerSearchResult::setWeight(const qint32 &weight) {
    m_weight = weight;
    m_weight_isSet = true;
}

bool OAIPlayerSearchResult::is_weight_Set() const{
    return m_weight_isSet;
}

bool OAIPlayerSearchResult::is_weight_Valid() const{
    return m_weight_isValid;
}

bool OAIPlayerSearchResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_height_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hometown_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_jersey_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_position_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_color_secondary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPlayerSearchResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
