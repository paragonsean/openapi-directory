/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlayerSearchResult.h
 *
 * 
 */

#ifndef OAIPlayerSearchResult_H
#define OAIPlayerSearchResult_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlayerSearchResult : public OAIObject {
public:
    OAIPlayerSearchResult();
    OAIPlayerSearchResult(QString json);
    ~OAIPlayerSearchResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QString getHometown() const;
    void setHometown(const QString &hometown);
    bool is_hometown_Set() const;
    bool is_hometown_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getJersey() const;
    void setJersey(const qint32 &jersey);
    bool is_jersey_Set() const;
    bool is_jersey_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPosition() const;
    void setPosition(const QString &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    QString getTeam() const;
    void setTeam(const QString &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    QString getTeamColor() const;
    void setTeamColor(const QString &team_color);
    bool is_team_color_Set() const;
    bool is_team_color_Valid() const;

    QString getTeamColorSecondary() const;
    void setTeamColorSecondary(const QString &team_color_secondary);
    bool is_team_color_secondary_Set() const;
    bool is_team_color_secondary_Valid() const;

    qint32 getWeight() const;
    void setWeight(const qint32 &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    QString m_hometown;
    bool m_hometown_isSet;
    bool m_hometown_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_jersey;
    bool m_jersey_isSet;
    bool m_jersey_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    QString m_team;
    bool m_team_isSet;
    bool m_team_isValid;

    QString m_team_color;
    bool m_team_color_isSet;
    bool m_team_color_isValid;

    QString m_team_color_secondary;
    bool m_team_color_secondary_isSet;
    bool m_team_color_secondary_isValid;

    qint32 m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlayerSearchResult)

#endif // OAIPlayerSearchResult_H
