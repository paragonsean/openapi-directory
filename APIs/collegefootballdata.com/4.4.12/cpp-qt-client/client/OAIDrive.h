/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDrive.h
 *
 * 
 */

#ifndef OAIDrive_H
#define OAIDrive_H

#include <QJsonObject>

#include "OAIDrive_end_time.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDrive_end_time;

class OAIDrive : public OAIObject {
public:
    OAIDrive();
    OAIDrive(QString json);
    ~OAIDrive() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDefense() const;
    void setDefense(const QString &defense);
    bool is_defense_Set() const;
    bool is_defense_Valid() const;

    QString getDefenseConference() const;
    void setDefenseConference(const QString &defense_conference);
    bool is_defense_conference_Set() const;
    bool is_defense_conference_Valid() const;

    qint32 getDriveNumber() const;
    void setDriveNumber(const qint32 &drive_number);
    bool is_drive_number_Set() const;
    bool is_drive_number_Valid() const;

    QString getDriveResult() const;
    void setDriveResult(const QString &drive_result);
    bool is_drive_result_Set() const;
    bool is_drive_result_Valid() const;

    qint32 getEndDefenseScore() const;
    void setEndDefenseScore(const qint32 &end_defense_score);
    bool is_end_defense_score_Set() const;
    bool is_end_defense_score_Valid() const;

    qint32 getEndOffenseScore() const;
    void setEndOffenseScore(const qint32 &end_offense_score);
    bool is_end_offense_score_Set() const;
    bool is_end_offense_score_Valid() const;

    qint32 getEndPeriod() const;
    void setEndPeriod(const qint32 &end_period);
    bool is_end_period_Set() const;
    bool is_end_period_Valid() const;

    OAIDrive_end_time getEndTime() const;
    void setEndTime(const OAIDrive_end_time &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    qint32 getEndYardline() const;
    void setEndYardline(const qint32 &end_yardline);
    bool is_end_yardline_Set() const;
    bool is_end_yardline_Valid() const;

    qint32 getEndYardsToGoal() const;
    void setEndYardsToGoal(const qint32 &end_yards_to_goal);
    bool is_end_yards_to_goal_Set() const;
    bool is_end_yards_to_goal_Valid() const;

    qint32 getGameId() const;
    void setGameId(const qint32 &game_id);
    bool is_game_id_Set() const;
    bool is_game_id_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsHomeOffense() const;
    void setIsHomeOffense(const bool &is_home_offense);
    bool is_is_home_offense_Set() const;
    bool is_is_home_offense_Valid() const;

    QString getOffense() const;
    void setOffense(const QString &offense);
    bool is_offense_Set() const;
    bool is_offense_Valid() const;

    QString getOffenseConference() const;
    void setOffenseConference(const QString &offense_conference);
    bool is_offense_conference_Set() const;
    bool is_offense_conference_Valid() const;

    qint32 getPlays() const;
    void setPlays(const qint32 &plays);
    bool is_plays_Set() const;
    bool is_plays_Valid() const;

    bool isScoring() const;
    void setScoring(const bool &scoring);
    bool is_scoring_Set() const;
    bool is_scoring_Valid() const;

    qint32 getStartDefenseScore() const;
    void setStartDefenseScore(const qint32 &start_defense_score);
    bool is_start_defense_score_Set() const;
    bool is_start_defense_score_Valid() const;

    qint32 getStartOffenseScore() const;
    void setStartOffenseScore(const qint32 &start_offense_score);
    bool is_start_offense_score_Set() const;
    bool is_start_offense_score_Valid() const;

    qint32 getStartPeriod() const;
    void setStartPeriod(const qint32 &start_period);
    bool is_start_period_Set() const;
    bool is_start_period_Valid() const;

    OAIDrive_end_time getStartTime() const;
    void setStartTime(const OAIDrive_end_time &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    qint32 getStartYardline() const;
    void setStartYardline(const qint32 &start_yardline);
    bool is_start_yardline_Set() const;
    bool is_start_yardline_Valid() const;

    qint32 getStartYardsToGoal() const;
    void setStartYardsToGoal(const qint32 &start_yards_to_goal);
    bool is_start_yards_to_goal_Set() const;
    bool is_start_yards_to_goal_Valid() const;

    qint32 getYards() const;
    void setYards(const qint32 &yards);
    bool is_yards_Set() const;
    bool is_yards_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_defense;
    bool m_defense_isSet;
    bool m_defense_isValid;

    QString m_defense_conference;
    bool m_defense_conference_isSet;
    bool m_defense_conference_isValid;

    qint32 m_drive_number;
    bool m_drive_number_isSet;
    bool m_drive_number_isValid;

    QString m_drive_result;
    bool m_drive_result_isSet;
    bool m_drive_result_isValid;

    qint32 m_end_defense_score;
    bool m_end_defense_score_isSet;
    bool m_end_defense_score_isValid;

    qint32 m_end_offense_score;
    bool m_end_offense_score_isSet;
    bool m_end_offense_score_isValid;

    qint32 m_end_period;
    bool m_end_period_isSet;
    bool m_end_period_isValid;

    OAIDrive_end_time m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    qint32 m_end_yardline;
    bool m_end_yardline_isSet;
    bool m_end_yardline_isValid;

    qint32 m_end_yards_to_goal;
    bool m_end_yards_to_goal_isSet;
    bool m_end_yards_to_goal_isValid;

    qint32 m_game_id;
    bool m_game_id_isSet;
    bool m_game_id_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_home_offense;
    bool m_is_home_offense_isSet;
    bool m_is_home_offense_isValid;

    QString m_offense;
    bool m_offense_isSet;
    bool m_offense_isValid;

    QString m_offense_conference;
    bool m_offense_conference_isSet;
    bool m_offense_conference_isValid;

    qint32 m_plays;
    bool m_plays_isSet;
    bool m_plays_isValid;

    bool m_scoring;
    bool m_scoring_isSet;
    bool m_scoring_isValid;

    qint32 m_start_defense_score;
    bool m_start_defense_score_isSet;
    bool m_start_defense_score_isValid;

    qint32 m_start_offense_score;
    bool m_start_offense_score_isSet;
    bool m_start_offense_score_isValid;

    qint32 m_start_period;
    bool m_start_period_isSet;
    bool m_start_period_isValid;

    OAIDrive_end_time m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    qint32 m_start_yardline;
    bool m_start_yardline_isSet;
    bool m_start_yardline_isValid;

    qint32 m_start_yards_to_goal;
    bool m_start_yards_to_goal_isSet;
    bool m_start_yards_to_goal_isValid;

    qint32 m_yards;
    bool m_yards_isSet;
    bool m_yards_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDrive)

#endif // OAIDrive_H
