/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScoreboardGame_awayTeam.h
 *
 * 
 */

#ifndef OAIScoreboardGame_awayTeam_H
#define OAIScoreboardGame_awayTeam_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIScoreboardGame_awayTeam : public OAIObject {
public:
    OAIScoreboardGame_awayTeam();
    OAIScoreboardGame_awayTeam(QString json);
    ~OAIScoreboardGame_awayTeam() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClassification() const;
    void setClassification(const QString &classification);
    bool is_classification_Set() const;
    bool is_classification_Valid() const;

    QString getConference() const;
    void setConference(const QString &conference);
    bool is_conference_Set() const;
    bool is_conference_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPoints() const;
    void setPoints(const qint32 &points);
    bool is_points_Set() const;
    bool is_points_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_classification;
    bool m_classification_isSet;
    bool m_classification_isValid;

    QString m_conference;
    bool m_conference_isSet;
    bool m_conference_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_points;
    bool m_points_isSet;
    bool m_points_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScoreboardGame_awayTeam)

#endif // OAIScoreboardGame_awayTeam_H
