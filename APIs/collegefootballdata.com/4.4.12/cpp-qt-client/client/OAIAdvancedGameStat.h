/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdvancedGameStat.h
 *
 * 
 */

#ifndef OAIAdvancedGameStat_H
#define OAIAdvancedGameStat_H

#include <QJsonObject>

#include "OAIAdvancedGameStat_defense.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdvancedGameStat_defense;

class OAIAdvancedGameStat : public OAIObject {
public:
    OAIAdvancedGameStat();
    OAIAdvancedGameStat(QString json);
    ~OAIAdvancedGameStat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAdvancedGameStat_defense getDefense() const;
    void setDefense(const OAIAdvancedGameStat_defense &defense);
    bool is_defense_Set() const;
    bool is_defense_Valid() const;

    qint32 getGameId() const;
    void setGameId(const qint32 &game_id);
    bool is_game_id_Set() const;
    bool is_game_id_Valid() const;

    OAIAdvancedGameStat_defense getOffense() const;
    void setOffense(const OAIAdvancedGameStat_defense &offense);
    bool is_offense_Set() const;
    bool is_offense_Valid() const;

    QString getOpponent() const;
    void setOpponent(const QString &opponent);
    bool is_opponent_Set() const;
    bool is_opponent_Valid() const;

    qint32 getSeason() const;
    void setSeason(const qint32 &season);
    bool is_season_Set() const;
    bool is_season_Valid() const;

    QString getTeam() const;
    void setTeam(const QString &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    qint32 getWeek() const;
    void setWeek(const qint32 &week);
    bool is_week_Set() const;
    bool is_week_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAdvancedGameStat_defense m_defense;
    bool m_defense_isSet;
    bool m_defense_isValid;

    qint32 m_game_id;
    bool m_game_id_isSet;
    bool m_game_id_isValid;

    OAIAdvancedGameStat_defense m_offense;
    bool m_offense_isSet;
    bool m_offense_isValid;

    QString m_opponent;
    bool m_opponent_isSet;
    bool m_opponent_isValid;

    qint32 m_season;
    bool m_season_isSet;
    bool m_season_isValid;

    QString m_team;
    bool m_team_isSet;
    bool m_team_isValid;

    qint32 m_week;
    bool m_week_isSet;
    bool m_week_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdvancedGameStat)

#endif // OAIAdvancedGameStat_H
