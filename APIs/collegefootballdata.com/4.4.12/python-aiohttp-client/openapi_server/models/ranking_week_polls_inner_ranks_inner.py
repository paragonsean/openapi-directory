# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RankingWeekPollsInnerRanksInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conference: str=None, first_place_votes: int=None, points: int=None, rank: int=None, school: str=None):
        """RankingWeekPollsInnerRanksInner - a model defined in OpenAPI

        :param conference: The conference of this RankingWeekPollsInnerRanksInner.
        :param first_place_votes: The first_place_votes of this RankingWeekPollsInnerRanksInner.
        :param points: The points of this RankingWeekPollsInnerRanksInner.
        :param rank: The rank of this RankingWeekPollsInnerRanksInner.
        :param school: The school of this RankingWeekPollsInnerRanksInner.
        """
        self.openapi_types = {
            'conference': str,
            'first_place_votes': int,
            'points': int,
            'rank': int,
            'school': str
        }

        self.attribute_map = {
            'conference': 'conference',
            'first_place_votes': 'firstPlaceVotes',
            'points': 'points',
            'rank': 'rank',
            'school': 'school'
        }

        self._conference = conference
        self._first_place_votes = first_place_votes
        self._points = points
        self._rank = rank
        self._school = school

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RankingWeekPollsInnerRanksInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RankingWeek_polls_inner_ranks_inner of this RankingWeekPollsInnerRanksInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conference(self):
        """Gets the conference of this RankingWeekPollsInnerRanksInner.


        :return: The conference of this RankingWeekPollsInnerRanksInner.
        :rtype: str
        """
        return self._conference

    @conference.setter
    def conference(self, conference):
        """Sets the conference of this RankingWeekPollsInnerRanksInner.


        :param conference: The conference of this RankingWeekPollsInnerRanksInner.
        :type conference: str
        """

        self._conference = conference

    @property
    def first_place_votes(self):
        """Gets the first_place_votes of this RankingWeekPollsInnerRanksInner.


        :return: The first_place_votes of this RankingWeekPollsInnerRanksInner.
        :rtype: int
        """
        return self._first_place_votes

    @first_place_votes.setter
    def first_place_votes(self, first_place_votes):
        """Sets the first_place_votes of this RankingWeekPollsInnerRanksInner.


        :param first_place_votes: The first_place_votes of this RankingWeekPollsInnerRanksInner.
        :type first_place_votes: int
        """

        self._first_place_votes = first_place_votes

    @property
    def points(self):
        """Gets the points of this RankingWeekPollsInnerRanksInner.


        :return: The points of this RankingWeekPollsInnerRanksInner.
        :rtype: int
        """
        return self._points

    @points.setter
    def points(self, points):
        """Sets the points of this RankingWeekPollsInnerRanksInner.


        :param points: The points of this RankingWeekPollsInnerRanksInner.
        :type points: int
        """

        self._points = points

    @property
    def rank(self):
        """Gets the rank of this RankingWeekPollsInnerRanksInner.


        :return: The rank of this RankingWeekPollsInnerRanksInner.
        :rtype: int
        """
        return self._rank

    @rank.setter
    def rank(self, rank):
        """Sets the rank of this RankingWeekPollsInnerRanksInner.


        :param rank: The rank of this RankingWeekPollsInnerRanksInner.
        :type rank: int
        """

        self._rank = rank

    @property
    def school(self):
        """Gets the school of this RankingWeekPollsInnerRanksInner.


        :return: The school of this RankingWeekPollsInnerRanksInner.
        :rtype: str
        """
        return self._school

    @school.setter
    def school(self, school):
        """Sets the school of this RankingWeekPollsInnerRanksInner.


        :param school: The school of this RankingWeekPollsInnerRanksInner.
        :type school: str
        """

        self._school = school
