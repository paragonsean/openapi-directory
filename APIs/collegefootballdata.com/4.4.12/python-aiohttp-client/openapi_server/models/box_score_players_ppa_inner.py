# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.box_score_players_ppa_inner_average import BoxScorePlayersPpaInnerAverage
from openapi_server import util


class BoxScorePlayersPpaInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average: BoxScorePlayersPpaInnerAverage=None, cumulative: BoxScorePlayersPpaInnerAverage=None, player: str=None, position: str=None, team: str=None):
        """BoxScorePlayersPpaInner - a model defined in OpenAPI

        :param average: The average of this BoxScorePlayersPpaInner.
        :param cumulative: The cumulative of this BoxScorePlayersPpaInner.
        :param player: The player of this BoxScorePlayersPpaInner.
        :param position: The position of this BoxScorePlayersPpaInner.
        :param team: The team of this BoxScorePlayersPpaInner.
        """
        self.openapi_types = {
            'average': BoxScorePlayersPpaInnerAverage,
            'cumulative': BoxScorePlayersPpaInnerAverage,
            'player': str,
            'position': str,
            'team': str
        }

        self.attribute_map = {
            'average': 'average',
            'cumulative': 'cumulative',
            'player': 'player',
            'position': 'position',
            'team': 'team'
        }

        self._average = average
        self._cumulative = cumulative
        self._player = player
        self._position = position
        self._team = team

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BoxScorePlayersPpaInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BoxScore_players_ppa_inner of this BoxScorePlayersPpaInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average(self):
        """Gets the average of this BoxScorePlayersPpaInner.


        :return: The average of this BoxScorePlayersPpaInner.
        :rtype: BoxScorePlayersPpaInnerAverage
        """
        return self._average

    @average.setter
    def average(self, average):
        """Sets the average of this BoxScorePlayersPpaInner.


        :param average: The average of this BoxScorePlayersPpaInner.
        :type average: BoxScorePlayersPpaInnerAverage
        """

        self._average = average

    @property
    def cumulative(self):
        """Gets the cumulative of this BoxScorePlayersPpaInner.


        :return: The cumulative of this BoxScorePlayersPpaInner.
        :rtype: BoxScorePlayersPpaInnerAverage
        """
        return self._cumulative

    @cumulative.setter
    def cumulative(self, cumulative):
        """Sets the cumulative of this BoxScorePlayersPpaInner.


        :param cumulative: The cumulative of this BoxScorePlayersPpaInner.
        :type cumulative: BoxScorePlayersPpaInnerAverage
        """

        self._cumulative = cumulative

    @property
    def player(self):
        """Gets the player of this BoxScorePlayersPpaInner.


        :return: The player of this BoxScorePlayersPpaInner.
        :rtype: str
        """
        return self._player

    @player.setter
    def player(self, player):
        """Sets the player of this BoxScorePlayersPpaInner.


        :param player: The player of this BoxScorePlayersPpaInner.
        :type player: str
        """

        self._player = player

    @property
    def position(self):
        """Gets the position of this BoxScorePlayersPpaInner.


        :return: The position of this BoxScorePlayersPpaInner.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this BoxScorePlayersPpaInner.


        :param position: The position of this BoxScorePlayersPpaInner.
        :type position: str
        """

        self._position = position

    @property
    def team(self):
        """Gets the team of this BoxScorePlayersPpaInner.


        :return: The team of this BoxScorePlayersPpaInner.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this BoxScorePlayersPpaInner.


        :param team: The team of this BoxScorePlayersPpaInner.
        :type team: str
        """

        self._team = team
