# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TeamPPADefenseCumulative(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, passing: float=None, rushing: float=None, total: float=None):
        """TeamPPADefenseCumulative - a model defined in OpenAPI

        :param passing: The passing of this TeamPPADefenseCumulative.
        :param rushing: The rushing of this TeamPPADefenseCumulative.
        :param total: The total of this TeamPPADefenseCumulative.
        """
        self.openapi_types = {
            'passing': float,
            'rushing': float,
            'total': float
        }

        self.attribute_map = {
            'passing': 'passing',
            'rushing': 'rushing',
            'total': 'total'
        }

        self._passing = passing
        self._rushing = rushing
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeamPPADefenseCumulative':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TeamPPA_defense_cumulative of this TeamPPADefenseCumulative.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def passing(self):
        """Gets the passing of this TeamPPADefenseCumulative.


        :return: The passing of this TeamPPADefenseCumulative.
        :rtype: float
        """
        return self._passing

    @passing.setter
    def passing(self, passing):
        """Sets the passing of this TeamPPADefenseCumulative.


        :param passing: The passing of this TeamPPADefenseCumulative.
        :type passing: float
        """

        self._passing = passing

    @property
    def rushing(self):
        """Gets the rushing of this TeamPPADefenseCumulative.


        :return: The rushing of this TeamPPADefenseCumulative.
        :rtype: float
        """
        return self._rushing

    @rushing.setter
    def rushing(self, rushing):
        """Sets the rushing of this TeamPPADefenseCumulative.


        :param rushing: The rushing of this TeamPPADefenseCumulative.
        :type rushing: float
        """

        self._rushing = rushing

    @property
    def total(self):
        """Gets the total of this TeamPPADefenseCumulative.


        :return: The total of this TeamPPADefenseCumulative.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this TeamPPADefenseCumulative.


        :param total: The total of this TeamPPADefenseCumulative.
        :type total: float
        """

        self._total = total
