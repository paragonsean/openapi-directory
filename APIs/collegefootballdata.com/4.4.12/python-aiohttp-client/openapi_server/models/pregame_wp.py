# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PregameWP(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, away_team: str=None, game_id: int=None, home_team: str=None, home_win_prob: float=None, season: int=None, season_type: str=None, spread: float=None, week: int=None):
        """PregameWP - a model defined in OpenAPI

        :param away_team: The away_team of this PregameWP.
        :param game_id: The game_id of this PregameWP.
        :param home_team: The home_team of this PregameWP.
        :param home_win_prob: The home_win_prob of this PregameWP.
        :param season: The season of this PregameWP.
        :param season_type: The season_type of this PregameWP.
        :param spread: The spread of this PregameWP.
        :param week: The week of this PregameWP.
        """
        self.openapi_types = {
            'away_team': str,
            'game_id': int,
            'home_team': str,
            'home_win_prob': float,
            'season': int,
            'season_type': str,
            'spread': float,
            'week': int
        }

        self.attribute_map = {
            'away_team': 'awayTeam',
            'game_id': 'gameId',
            'home_team': 'homeTeam',
            'home_win_prob': 'homeWinProb',
            'season': 'season',
            'season_type': 'seasonType',
            'spread': 'spread',
            'week': 'week'
        }

        self._away_team = away_team
        self._game_id = game_id
        self._home_team = home_team
        self._home_win_prob = home_win_prob
        self._season = season
        self._season_type = season_type
        self._spread = spread
        self._week = week

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PregameWP':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PregameWP of this PregameWP.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def away_team(self):
        """Gets the away_team of this PregameWP.


        :return: The away_team of this PregameWP.
        :rtype: str
        """
        return self._away_team

    @away_team.setter
    def away_team(self, away_team):
        """Sets the away_team of this PregameWP.


        :param away_team: The away_team of this PregameWP.
        :type away_team: str
        """

        self._away_team = away_team

    @property
    def game_id(self):
        """Gets the game_id of this PregameWP.


        :return: The game_id of this PregameWP.
        :rtype: int
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id):
        """Sets the game_id of this PregameWP.


        :param game_id: The game_id of this PregameWP.
        :type game_id: int
        """

        self._game_id = game_id

    @property
    def home_team(self):
        """Gets the home_team of this PregameWP.


        :return: The home_team of this PregameWP.
        :rtype: str
        """
        return self._home_team

    @home_team.setter
    def home_team(self, home_team):
        """Sets the home_team of this PregameWP.


        :param home_team: The home_team of this PregameWP.
        :type home_team: str
        """

        self._home_team = home_team

    @property
    def home_win_prob(self):
        """Gets the home_win_prob of this PregameWP.


        :return: The home_win_prob of this PregameWP.
        :rtype: float
        """
        return self._home_win_prob

    @home_win_prob.setter
    def home_win_prob(self, home_win_prob):
        """Sets the home_win_prob of this PregameWP.


        :param home_win_prob: The home_win_prob of this PregameWP.
        :type home_win_prob: float
        """

        self._home_win_prob = home_win_prob

    @property
    def season(self):
        """Gets the season of this PregameWP.


        :return: The season of this PregameWP.
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this PregameWP.


        :param season: The season of this PregameWP.
        :type season: int
        """

        self._season = season

    @property
    def season_type(self):
        """Gets the season_type of this PregameWP.


        :return: The season_type of this PregameWP.
        :rtype: str
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type):
        """Sets the season_type of this PregameWP.


        :param season_type: The season_type of this PregameWP.
        :type season_type: str
        """

        self._season_type = season_type

    @property
    def spread(self):
        """Gets the spread of this PregameWP.


        :return: The spread of this PregameWP.
        :rtype: float
        """
        return self._spread

    @spread.setter
    def spread(self, spread):
        """Sets the spread of this PregameWP.


        :param spread: The spread of this PregameWP.
        :type spread: float
        """

        self._spread = spread

    @property
    def week(self):
        """Gets the week of this PregameWP.


        :return: The week of this PregameWP.
        :rtype: int
        """
        return self._week

    @week.setter
    def week(self, week):
        """Sets the week of this PregameWP.


        :param week: The week of this PregameWP.
        :type week: int
        """

        self._week = week
