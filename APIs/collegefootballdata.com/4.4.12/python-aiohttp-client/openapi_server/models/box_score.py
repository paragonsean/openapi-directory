# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.box_score_players import BoxScorePlayers
from openapi_server.models.box_score_teams import BoxScoreTeams
from openapi_server import util


class BoxScore(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, players: BoxScorePlayers=None, teams: BoxScoreTeams=None):
        """BoxScore - a model defined in OpenAPI

        :param players: The players of this BoxScore.
        :param teams: The teams of this BoxScore.
        """
        self.openapi_types = {
            'players': BoxScorePlayers,
            'teams': BoxScoreTeams
        }

        self.attribute_map = {
            'players': 'players',
            'teams': 'teams'
        }

        self._players = players
        self._teams = teams

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BoxScore':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BoxScore of this BoxScore.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def players(self):
        """Gets the players of this BoxScore.


        :return: The players of this BoxScore.
        :rtype: BoxScorePlayers
        """
        return self._players

    @players.setter
    def players(self, players):
        """Sets the players of this BoxScore.


        :param players: The players of this BoxScore.
        :type players: BoxScorePlayers
        """

        self._players = players

    @property
    def teams(self):
        """Gets the teams of this BoxScore.


        :return: The teams of this BoxScore.
        :rtype: BoxScoreTeams
        """
        return self._teams

    @teams.setter
    def teams(self, teams):
        """Sets the teams of this BoxScore.


        :param teams: The teams of this BoxScore.
        :type teams: BoxScoreTeams
        """

        self._teams = teams
