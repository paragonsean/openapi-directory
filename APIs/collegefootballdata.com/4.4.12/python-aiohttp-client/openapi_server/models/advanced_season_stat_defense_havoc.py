# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdvancedSeasonStatDefenseHavoc(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, db: float=None, front_seven: float=None, total: float=None):
        """AdvancedSeasonStatDefenseHavoc - a model defined in OpenAPI

        :param db: The db of this AdvancedSeasonStatDefenseHavoc.
        :param front_seven: The front_seven of this AdvancedSeasonStatDefenseHavoc.
        :param total: The total of this AdvancedSeasonStatDefenseHavoc.
        """
        self.openapi_types = {
            'db': float,
            'front_seven': float,
            'total': float
        }

        self.attribute_map = {
            'db': 'db',
            'front_seven': 'frontSeven',
            'total': 'total'
        }

        self._db = db
        self._front_seven = front_seven
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdvancedSeasonStatDefenseHavoc':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdvancedSeasonStat_defense_havoc of this AdvancedSeasonStatDefenseHavoc.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def db(self):
        """Gets the db of this AdvancedSeasonStatDefenseHavoc.


        :return: The db of this AdvancedSeasonStatDefenseHavoc.
        :rtype: float
        """
        return self._db

    @db.setter
    def db(self, db):
        """Sets the db of this AdvancedSeasonStatDefenseHavoc.


        :param db: The db of this AdvancedSeasonStatDefenseHavoc.
        :type db: float
        """

        self._db = db

    @property
    def front_seven(self):
        """Gets the front_seven of this AdvancedSeasonStatDefenseHavoc.


        :return: The front_seven of this AdvancedSeasonStatDefenseHavoc.
        :rtype: float
        """
        return self._front_seven

    @front_seven.setter
    def front_seven(self, front_seven):
        """Sets the front_seven of this AdvancedSeasonStatDefenseHavoc.


        :param front_seven: The front_seven of this AdvancedSeasonStatDefenseHavoc.
        :type front_seven: float
        """

        self._front_seven = front_seven

    @property
    def total(self):
        """Gets the total of this AdvancedSeasonStatDefenseHavoc.


        :return: The total of this AdvancedSeasonStatDefenseHavoc.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this AdvancedSeasonStatDefenseHavoc.


        :param total: The total of this AdvancedSeasonStatDefenseHavoc.
        :type total: float
        """

        self._total = total
