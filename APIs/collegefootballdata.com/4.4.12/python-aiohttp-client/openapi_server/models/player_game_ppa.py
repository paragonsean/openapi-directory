# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.player_game_ppa_average_ppa import PlayerGamePPAAveragePPA
from openapi_server import util


class PlayerGamePPA(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average_ppa: PlayerGamePPAAveragePPA=None, name: str=None, opponent: str=None, position: str=None, season: int=None, team: str=None, week: int=None):
        """PlayerGamePPA - a model defined in OpenAPI

        :param average_ppa: The average_ppa of this PlayerGamePPA.
        :param name: The name of this PlayerGamePPA.
        :param opponent: The opponent of this PlayerGamePPA.
        :param position: The position of this PlayerGamePPA.
        :param season: The season of this PlayerGamePPA.
        :param team: The team of this PlayerGamePPA.
        :param week: The week of this PlayerGamePPA.
        """
        self.openapi_types = {
            'average_ppa': PlayerGamePPAAveragePPA,
            'name': str,
            'opponent': str,
            'position': str,
            'season': int,
            'team': str,
            'week': int
        }

        self.attribute_map = {
            'average_ppa': 'averagePPA',
            'name': 'name',
            'opponent': 'opponent',
            'position': 'position',
            'season': 'season',
            'team': 'team',
            'week': 'week'
        }

        self._average_ppa = average_ppa
        self._name = name
        self._opponent = opponent
        self._position = position
        self._season = season
        self._team = team
        self._week = week

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlayerGamePPA':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlayerGamePPA of this PlayerGamePPA.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average_ppa(self):
        """Gets the average_ppa of this PlayerGamePPA.


        :return: The average_ppa of this PlayerGamePPA.
        :rtype: PlayerGamePPAAveragePPA
        """
        return self._average_ppa

    @average_ppa.setter
    def average_ppa(self, average_ppa):
        """Sets the average_ppa of this PlayerGamePPA.


        :param average_ppa: The average_ppa of this PlayerGamePPA.
        :type average_ppa: PlayerGamePPAAveragePPA
        """

        self._average_ppa = average_ppa

    @property
    def name(self):
        """Gets the name of this PlayerGamePPA.


        :return: The name of this PlayerGamePPA.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PlayerGamePPA.


        :param name: The name of this PlayerGamePPA.
        :type name: str
        """

        self._name = name

    @property
    def opponent(self):
        """Gets the opponent of this PlayerGamePPA.


        :return: The opponent of this PlayerGamePPA.
        :rtype: str
        """
        return self._opponent

    @opponent.setter
    def opponent(self, opponent):
        """Sets the opponent of this PlayerGamePPA.


        :param opponent: The opponent of this PlayerGamePPA.
        :type opponent: str
        """

        self._opponent = opponent

    @property
    def position(self):
        """Gets the position of this PlayerGamePPA.


        :return: The position of this PlayerGamePPA.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this PlayerGamePPA.


        :param position: The position of this PlayerGamePPA.
        :type position: str
        """

        self._position = position

    @property
    def season(self):
        """Gets the season of this PlayerGamePPA.


        :return: The season of this PlayerGamePPA.
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this PlayerGamePPA.


        :param season: The season of this PlayerGamePPA.
        :type season: int
        """

        self._season = season

    @property
    def team(self):
        """Gets the team of this PlayerGamePPA.


        :return: The team of this PlayerGamePPA.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this PlayerGamePPA.


        :param team: The team of this PlayerGamePPA.
        :type team: str
        """

        self._team = team

    @property
    def week(self):
        """Gets the week of this PlayerGamePPA.


        :return: The week of this PlayerGamePPA.
        :rtype: int
        """
        return self._week

    @week.setter
    def week(self, week):
        """Sets the week of this PlayerGamePPA.


        :param week: The week of this PlayerGamePPA.
        :type week: int
        """

        self._week = week
