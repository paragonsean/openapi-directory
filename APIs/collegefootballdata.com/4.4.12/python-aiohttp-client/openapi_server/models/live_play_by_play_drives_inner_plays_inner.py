# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LivePlayByPlayDrivesInnerPlaysInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, away_score: int=None, clock: str=None, distance: int=None, down: int=None, down_type: str=None, epa: float=None, garbage_time: bool=None, home_score: int=None, id: int=None, period: int=None, play_text: str=None, play_type: str=None, play_type_id: int=None, rush_pass: str=None, success: bool=None, team: str=None, team_id: int=None, wallclock: str=None, yards_gained: int=None, yards_to_goal: int=None):
        """LivePlayByPlayDrivesInnerPlaysInner - a model defined in OpenAPI

        :param away_score: The away_score of this LivePlayByPlayDrivesInnerPlaysInner.
        :param clock: The clock of this LivePlayByPlayDrivesInnerPlaysInner.
        :param distance: The distance of this LivePlayByPlayDrivesInnerPlaysInner.
        :param down: The down of this LivePlayByPlayDrivesInnerPlaysInner.
        :param down_type: The down_type of this LivePlayByPlayDrivesInnerPlaysInner.
        :param epa: The epa of this LivePlayByPlayDrivesInnerPlaysInner.
        :param garbage_time: The garbage_time of this LivePlayByPlayDrivesInnerPlaysInner.
        :param home_score: The home_score of this LivePlayByPlayDrivesInnerPlaysInner.
        :param id: The id of this LivePlayByPlayDrivesInnerPlaysInner.
        :param period: The period of this LivePlayByPlayDrivesInnerPlaysInner.
        :param play_text: The play_text of this LivePlayByPlayDrivesInnerPlaysInner.
        :param play_type: The play_type of this LivePlayByPlayDrivesInnerPlaysInner.
        :param play_type_id: The play_type_id of this LivePlayByPlayDrivesInnerPlaysInner.
        :param rush_pass: The rush_pass of this LivePlayByPlayDrivesInnerPlaysInner.
        :param success: The success of this LivePlayByPlayDrivesInnerPlaysInner.
        :param team: The team of this LivePlayByPlayDrivesInnerPlaysInner.
        :param team_id: The team_id of this LivePlayByPlayDrivesInnerPlaysInner.
        :param wallclock: The wallclock of this LivePlayByPlayDrivesInnerPlaysInner.
        :param yards_gained: The yards_gained of this LivePlayByPlayDrivesInnerPlaysInner.
        :param yards_to_goal: The yards_to_goal of this LivePlayByPlayDrivesInnerPlaysInner.
        """
        self.openapi_types = {
            'away_score': int,
            'clock': str,
            'distance': int,
            'down': int,
            'down_type': str,
            'epa': float,
            'garbage_time': bool,
            'home_score': int,
            'id': int,
            'period': int,
            'play_text': str,
            'play_type': str,
            'play_type_id': int,
            'rush_pass': str,
            'success': bool,
            'team': str,
            'team_id': int,
            'wallclock': str,
            'yards_gained': int,
            'yards_to_goal': int
        }

        self.attribute_map = {
            'away_score': 'awayScore',
            'clock': 'clock',
            'distance': 'distance',
            'down': 'down',
            'down_type': 'downType',
            'epa': 'epa',
            'garbage_time': 'garbageTime',
            'home_score': 'homeScore',
            'id': 'id',
            'period': 'period',
            'play_text': 'playText',
            'play_type': 'playType',
            'play_type_id': 'playTypeId',
            'rush_pass': 'rushPass',
            'success': 'success',
            'team': 'team',
            'team_id': 'teamId',
            'wallclock': 'wallclock',
            'yards_gained': 'yardsGained',
            'yards_to_goal': 'yardsToGoal'
        }

        self._away_score = away_score
        self._clock = clock
        self._distance = distance
        self._down = down
        self._down_type = down_type
        self._epa = epa
        self._garbage_time = garbage_time
        self._home_score = home_score
        self._id = id
        self._period = period
        self._play_text = play_text
        self._play_type = play_type
        self._play_type_id = play_type_id
        self._rush_pass = rush_pass
        self._success = success
        self._team = team
        self._team_id = team_id
        self._wallclock = wallclock
        self._yards_gained = yards_gained
        self._yards_to_goal = yards_to_goal

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LivePlayByPlayDrivesInnerPlaysInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LivePlayByPlay_drives_inner_plays_inner of this LivePlayByPlayDrivesInnerPlaysInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def away_score(self):
        """Gets the away_score of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The away_score of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: int
        """
        return self._away_score

    @away_score.setter
    def away_score(self, away_score):
        """Sets the away_score of this LivePlayByPlayDrivesInnerPlaysInner.


        :param away_score: The away_score of this LivePlayByPlayDrivesInnerPlaysInner.
        :type away_score: int
        """

        self._away_score = away_score

    @property
    def clock(self):
        """Gets the clock of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The clock of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: str
        """
        return self._clock

    @clock.setter
    def clock(self, clock):
        """Sets the clock of this LivePlayByPlayDrivesInnerPlaysInner.


        :param clock: The clock of this LivePlayByPlayDrivesInnerPlaysInner.
        :type clock: str
        """

        self._clock = clock

    @property
    def distance(self):
        """Gets the distance of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The distance of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: int
        """
        return self._distance

    @distance.setter
    def distance(self, distance):
        """Sets the distance of this LivePlayByPlayDrivesInnerPlaysInner.


        :param distance: The distance of this LivePlayByPlayDrivesInnerPlaysInner.
        :type distance: int
        """

        self._distance = distance

    @property
    def down(self):
        """Gets the down of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The down of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: int
        """
        return self._down

    @down.setter
    def down(self, down):
        """Sets the down of this LivePlayByPlayDrivesInnerPlaysInner.


        :param down: The down of this LivePlayByPlayDrivesInnerPlaysInner.
        :type down: int
        """

        self._down = down

    @property
    def down_type(self):
        """Gets the down_type of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The down_type of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: str
        """
        return self._down_type

    @down_type.setter
    def down_type(self, down_type):
        """Sets the down_type of this LivePlayByPlayDrivesInnerPlaysInner.


        :param down_type: The down_type of this LivePlayByPlayDrivesInnerPlaysInner.
        :type down_type: str
        """

        self._down_type = down_type

    @property
    def epa(self):
        """Gets the epa of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The epa of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: float
        """
        return self._epa

    @epa.setter
    def epa(self, epa):
        """Sets the epa of this LivePlayByPlayDrivesInnerPlaysInner.


        :param epa: The epa of this LivePlayByPlayDrivesInnerPlaysInner.
        :type epa: float
        """

        self._epa = epa

    @property
    def garbage_time(self):
        """Gets the garbage_time of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The garbage_time of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: bool
        """
        return self._garbage_time

    @garbage_time.setter
    def garbage_time(self, garbage_time):
        """Sets the garbage_time of this LivePlayByPlayDrivesInnerPlaysInner.


        :param garbage_time: The garbage_time of this LivePlayByPlayDrivesInnerPlaysInner.
        :type garbage_time: bool
        """

        self._garbage_time = garbage_time

    @property
    def home_score(self):
        """Gets the home_score of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The home_score of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: int
        """
        return self._home_score

    @home_score.setter
    def home_score(self, home_score):
        """Sets the home_score of this LivePlayByPlayDrivesInnerPlaysInner.


        :param home_score: The home_score of this LivePlayByPlayDrivesInnerPlaysInner.
        :type home_score: int
        """

        self._home_score = home_score

    @property
    def id(self):
        """Gets the id of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The id of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LivePlayByPlayDrivesInnerPlaysInner.


        :param id: The id of this LivePlayByPlayDrivesInnerPlaysInner.
        :type id: int
        """

        self._id = id

    @property
    def period(self):
        """Gets the period of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The period of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: int
        """
        return self._period

    @period.setter
    def period(self, period):
        """Sets the period of this LivePlayByPlayDrivesInnerPlaysInner.


        :param period: The period of this LivePlayByPlayDrivesInnerPlaysInner.
        :type period: int
        """

        self._period = period

    @property
    def play_text(self):
        """Gets the play_text of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The play_text of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: str
        """
        return self._play_text

    @play_text.setter
    def play_text(self, play_text):
        """Sets the play_text of this LivePlayByPlayDrivesInnerPlaysInner.


        :param play_text: The play_text of this LivePlayByPlayDrivesInnerPlaysInner.
        :type play_text: str
        """

        self._play_text = play_text

    @property
    def play_type(self):
        """Gets the play_type of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The play_type of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: str
        """
        return self._play_type

    @play_type.setter
    def play_type(self, play_type):
        """Sets the play_type of this LivePlayByPlayDrivesInnerPlaysInner.


        :param play_type: The play_type of this LivePlayByPlayDrivesInnerPlaysInner.
        :type play_type: str
        """

        self._play_type = play_type

    @property
    def play_type_id(self):
        """Gets the play_type_id of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The play_type_id of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: int
        """
        return self._play_type_id

    @play_type_id.setter
    def play_type_id(self, play_type_id):
        """Sets the play_type_id of this LivePlayByPlayDrivesInnerPlaysInner.


        :param play_type_id: The play_type_id of this LivePlayByPlayDrivesInnerPlaysInner.
        :type play_type_id: int
        """

        self._play_type_id = play_type_id

    @property
    def rush_pass(self):
        """Gets the rush_pass of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The rush_pass of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: str
        """
        return self._rush_pass

    @rush_pass.setter
    def rush_pass(self, rush_pass):
        """Sets the rush_pass of this LivePlayByPlayDrivesInnerPlaysInner.


        :param rush_pass: The rush_pass of this LivePlayByPlayDrivesInnerPlaysInner.
        :type rush_pass: str
        """

        self._rush_pass = rush_pass

    @property
    def success(self):
        """Gets the success of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The success of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this LivePlayByPlayDrivesInnerPlaysInner.


        :param success: The success of this LivePlayByPlayDrivesInnerPlaysInner.
        :type success: bool
        """

        self._success = success

    @property
    def team(self):
        """Gets the team of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The team of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this LivePlayByPlayDrivesInnerPlaysInner.


        :param team: The team of this LivePlayByPlayDrivesInnerPlaysInner.
        :type team: str
        """

        self._team = team

    @property
    def team_id(self):
        """Gets the team_id of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The team_id of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this LivePlayByPlayDrivesInnerPlaysInner.


        :param team_id: The team_id of this LivePlayByPlayDrivesInnerPlaysInner.
        :type team_id: int
        """

        self._team_id = team_id

    @property
    def wallclock(self):
        """Gets the wallclock of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The wallclock of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: str
        """
        return self._wallclock

    @wallclock.setter
    def wallclock(self, wallclock):
        """Sets the wallclock of this LivePlayByPlayDrivesInnerPlaysInner.


        :param wallclock: The wallclock of this LivePlayByPlayDrivesInnerPlaysInner.
        :type wallclock: str
        """

        self._wallclock = wallclock

    @property
    def yards_gained(self):
        """Gets the yards_gained of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The yards_gained of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: int
        """
        return self._yards_gained

    @yards_gained.setter
    def yards_gained(self, yards_gained):
        """Sets the yards_gained of this LivePlayByPlayDrivesInnerPlaysInner.


        :param yards_gained: The yards_gained of this LivePlayByPlayDrivesInnerPlaysInner.
        :type yards_gained: int
        """

        self._yards_gained = yards_gained

    @property
    def yards_to_goal(self):
        """Gets the yards_to_goal of this LivePlayByPlayDrivesInnerPlaysInner.


        :return: The yards_to_goal of this LivePlayByPlayDrivesInnerPlaysInner.
        :rtype: int
        """
        return self._yards_to_goal

    @yards_to_goal.setter
    def yards_to_goal(self, yards_to_goal):
        """Sets the yards_to_goal of this LivePlayByPlayDrivesInnerPlaysInner.


        :param yards_to_goal: The yards_to_goal of this LivePlayByPlayDrivesInnerPlaysInner.
        :type yards_to_goal: int
        """

        self._yards_to_goal = yards_to_goal
