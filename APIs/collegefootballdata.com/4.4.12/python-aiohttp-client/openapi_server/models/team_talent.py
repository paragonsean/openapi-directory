# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TeamTalent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, school: str=None, talent: float=None, year: int=None):
        """TeamTalent - a model defined in OpenAPI

        :param school: The school of this TeamTalent.
        :param talent: The talent of this TeamTalent.
        :param year: The year of this TeamTalent.
        """
        self.openapi_types = {
            'school': str,
            'talent': float,
            'year': int
        }

        self.attribute_map = {
            'school': 'school',
            'talent': 'talent',
            'year': 'year'
        }

        self._school = school
        self._talent = talent
        self._year = year

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeamTalent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TeamTalent of this TeamTalent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def school(self):
        """Gets the school of this TeamTalent.


        :return: The school of this TeamTalent.
        :rtype: str
        """
        return self._school

    @school.setter
    def school(self, school):
        """Sets the school of this TeamTalent.


        :param school: The school of this TeamTalent.
        :type school: str
        """

        self._school = school

    @property
    def talent(self):
        """Gets the talent of this TeamTalent.


        :return: The talent of this TeamTalent.
        :rtype: float
        """
        return self._talent

    @talent.setter
    def talent(self, talent):
        """Sets the talent of this TeamTalent.


        :param talent: The talent of this TeamTalent.
        :type talent: float
        """

        self._talent = talent

    @property
    def year(self):
        """Gets the year of this TeamTalent.


        :return: The year of this TeamTalent.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this TeamTalent.


        :param year: The year of this TeamTalent.
        :type year: int
        """

        self._year = year
