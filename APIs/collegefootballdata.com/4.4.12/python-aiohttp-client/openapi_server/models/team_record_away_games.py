# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TeamRecordAwayGames(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, games: int=None, losses: int=None, ties: int=None, wins: int=None):
        """TeamRecordAwayGames - a model defined in OpenAPI

        :param games: The games of this TeamRecordAwayGames.
        :param losses: The losses of this TeamRecordAwayGames.
        :param ties: The ties of this TeamRecordAwayGames.
        :param wins: The wins of this TeamRecordAwayGames.
        """
        self.openapi_types = {
            'games': int,
            'losses': int,
            'ties': int,
            'wins': int
        }

        self.attribute_map = {
            'games': 'games',
            'losses': 'losses',
            'ties': 'ties',
            'wins': 'wins'
        }

        self._games = games
        self._losses = losses
        self._ties = ties
        self._wins = wins

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeamRecordAwayGames':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TeamRecord_awayGames of this TeamRecordAwayGames.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def games(self):
        """Gets the games of this TeamRecordAwayGames.


        :return: The games of this TeamRecordAwayGames.
        :rtype: int
        """
        return self._games

    @games.setter
    def games(self, games):
        """Sets the games of this TeamRecordAwayGames.


        :param games: The games of this TeamRecordAwayGames.
        :type games: int
        """

        self._games = games

    @property
    def losses(self):
        """Gets the losses of this TeamRecordAwayGames.


        :return: The losses of this TeamRecordAwayGames.
        :rtype: int
        """
        return self._losses

    @losses.setter
    def losses(self, losses):
        """Sets the losses of this TeamRecordAwayGames.


        :param losses: The losses of this TeamRecordAwayGames.
        :type losses: int
        """

        self._losses = losses

    @property
    def ties(self):
        """Gets the ties of this TeamRecordAwayGames.


        :return: The ties of this TeamRecordAwayGames.
        :rtype: int
        """
        return self._ties

    @ties.setter
    def ties(self, ties):
        """Sets the ties of this TeamRecordAwayGames.


        :param ties: The ties of this TeamRecordAwayGames.
        :type ties: int
        """

        self._ties = ties

    @property
    def wins(self):
        """Gets the wins of this TeamRecordAwayGames.


        :return: The wins of this TeamRecordAwayGames.
        :rtype: int
        """
        return self._wins

    @wins.setter
    def wins(self, wins):
        """Sets the wins of this TeamRecordAwayGames.


        :param wins: The wins of this TeamRecordAwayGames.
        :type wins: int
        """

        self._wins = wins
