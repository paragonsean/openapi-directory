# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ranking_week_polls_inner import RankingWeekPollsInner
from openapi_server import util


class RankingWeek(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, polls: List[RankingWeekPollsInner]=None, season: int=None, season_type: str=None, week: int=None):
        """RankingWeek - a model defined in OpenAPI

        :param polls: The polls of this RankingWeek.
        :param season: The season of this RankingWeek.
        :param season_type: The season_type of this RankingWeek.
        :param week: The week of this RankingWeek.
        """
        self.openapi_types = {
            'polls': List[RankingWeekPollsInner],
            'season': int,
            'season_type': str,
            'week': int
        }

        self.attribute_map = {
            'polls': 'polls',
            'season': 'season',
            'season_type': 'seasonType',
            'week': 'week'
        }

        self._polls = polls
        self._season = season
        self._season_type = season_type
        self._week = week

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RankingWeek':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RankingWeek of this RankingWeek.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def polls(self):
        """Gets the polls of this RankingWeek.


        :return: The polls of this RankingWeek.
        :rtype: List[RankingWeekPollsInner]
        """
        return self._polls

    @polls.setter
    def polls(self, polls):
        """Sets the polls of this RankingWeek.


        :param polls: The polls of this RankingWeek.
        :type polls: List[RankingWeekPollsInner]
        """

        self._polls = polls

    @property
    def season(self):
        """Gets the season of this RankingWeek.


        :return: The season of this RankingWeek.
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this RankingWeek.


        :param season: The season of this RankingWeek.
        :type season: int
        """

        self._season = season

    @property
    def season_type(self):
        """Gets the season_type of this RankingWeek.


        :return: The season_type of this RankingWeek.
        :rtype: str
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type):
        """Sets the season_type of this RankingWeek.


        :param season_type: The season_type of this RankingWeek.
        :type season_type: str
        """

        self._season_type = season_type

    @property
    def week(self):
        """Gets the week of this RankingWeek.


        :return: The week of this RankingWeek.
        :rtype: int
        """
        return self._week

    @week.setter
    def week(self, week):
        """Sets the week of this RankingWeek.


        :param week: The week of this RankingWeek.
        :type week: int
        """

        self._week = week
