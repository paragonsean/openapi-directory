# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GameWeather(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, away_conference: str=None, away_team: str=None, dew_point: float=None, game_indoors: bool=None, home_conference: str=None, home_team: str=None, humidity: float=None, id: int=None, precipitation: float=None, pressure: float=None, season: int=None, season_type: str=None, snowfall: float=None, start_time: str=None, temperature: float=None, venue: str=None, venue_id: int=None, weather_condition: str=None, weather_condition_code: int=None, week: int=None, wind_direction: float=None, wind_speed: float=None):
        """GameWeather - a model defined in OpenAPI

        :param away_conference: The away_conference of this GameWeather.
        :param away_team: The away_team of this GameWeather.
        :param dew_point: The dew_point of this GameWeather.
        :param game_indoors: The game_indoors of this GameWeather.
        :param home_conference: The home_conference of this GameWeather.
        :param home_team: The home_team of this GameWeather.
        :param humidity: The humidity of this GameWeather.
        :param id: The id of this GameWeather.
        :param precipitation: The precipitation of this GameWeather.
        :param pressure: The pressure of this GameWeather.
        :param season: The season of this GameWeather.
        :param season_type: The season_type of this GameWeather.
        :param snowfall: The snowfall of this GameWeather.
        :param start_time: The start_time of this GameWeather.
        :param temperature: The temperature of this GameWeather.
        :param venue: The venue of this GameWeather.
        :param venue_id: The venue_id of this GameWeather.
        :param weather_condition: The weather_condition of this GameWeather.
        :param weather_condition_code: The weather_condition_code of this GameWeather.
        :param week: The week of this GameWeather.
        :param wind_direction: The wind_direction of this GameWeather.
        :param wind_speed: The wind_speed of this GameWeather.
        """
        self.openapi_types = {
            'away_conference': str,
            'away_team': str,
            'dew_point': float,
            'game_indoors': bool,
            'home_conference': str,
            'home_team': str,
            'humidity': float,
            'id': int,
            'precipitation': float,
            'pressure': float,
            'season': int,
            'season_type': str,
            'snowfall': float,
            'start_time': str,
            'temperature': float,
            'venue': str,
            'venue_id': int,
            'weather_condition': str,
            'weather_condition_code': int,
            'week': int,
            'wind_direction': float,
            'wind_speed': float
        }

        self.attribute_map = {
            'away_conference': 'awayConference',
            'away_team': 'awayTeam',
            'dew_point': 'dewPoint',
            'game_indoors': 'gameIndoors',
            'home_conference': 'homeConference',
            'home_team': 'homeTeam',
            'humidity': 'humidity',
            'id': 'id',
            'precipitation': 'precipitation',
            'pressure': 'pressure',
            'season': 'season',
            'season_type': 'seasonType',
            'snowfall': 'snowfall',
            'start_time': 'startTime',
            'temperature': 'temperature',
            'venue': 'venue',
            'venue_id': 'venueId',
            'weather_condition': 'weatherCondition',
            'weather_condition_code': 'weatherConditionCode',
            'week': 'week',
            'wind_direction': 'windDirection',
            'wind_speed': 'windSpeed'
        }

        self._away_conference = away_conference
        self._away_team = away_team
        self._dew_point = dew_point
        self._game_indoors = game_indoors
        self._home_conference = home_conference
        self._home_team = home_team
        self._humidity = humidity
        self._id = id
        self._precipitation = precipitation
        self._pressure = pressure
        self._season = season
        self._season_type = season_type
        self._snowfall = snowfall
        self._start_time = start_time
        self._temperature = temperature
        self._venue = venue
        self._venue_id = venue_id
        self._weather_condition = weather_condition
        self._weather_condition_code = weather_condition_code
        self._week = week
        self._wind_direction = wind_direction
        self._wind_speed = wind_speed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GameWeather':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GameWeather of this GameWeather.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def away_conference(self):
        """Gets the away_conference of this GameWeather.


        :return: The away_conference of this GameWeather.
        :rtype: str
        """
        return self._away_conference

    @away_conference.setter
    def away_conference(self, away_conference):
        """Sets the away_conference of this GameWeather.


        :param away_conference: The away_conference of this GameWeather.
        :type away_conference: str
        """

        self._away_conference = away_conference

    @property
    def away_team(self):
        """Gets the away_team of this GameWeather.


        :return: The away_team of this GameWeather.
        :rtype: str
        """
        return self._away_team

    @away_team.setter
    def away_team(self, away_team):
        """Sets the away_team of this GameWeather.


        :param away_team: The away_team of this GameWeather.
        :type away_team: str
        """

        self._away_team = away_team

    @property
    def dew_point(self):
        """Gets the dew_point of this GameWeather.


        :return: The dew_point of this GameWeather.
        :rtype: float
        """
        return self._dew_point

    @dew_point.setter
    def dew_point(self, dew_point):
        """Sets the dew_point of this GameWeather.


        :param dew_point: The dew_point of this GameWeather.
        :type dew_point: float
        """

        self._dew_point = dew_point

    @property
    def game_indoors(self):
        """Gets the game_indoors of this GameWeather.


        :return: The game_indoors of this GameWeather.
        :rtype: bool
        """
        return self._game_indoors

    @game_indoors.setter
    def game_indoors(self, game_indoors):
        """Sets the game_indoors of this GameWeather.


        :param game_indoors: The game_indoors of this GameWeather.
        :type game_indoors: bool
        """

        self._game_indoors = game_indoors

    @property
    def home_conference(self):
        """Gets the home_conference of this GameWeather.


        :return: The home_conference of this GameWeather.
        :rtype: str
        """
        return self._home_conference

    @home_conference.setter
    def home_conference(self, home_conference):
        """Sets the home_conference of this GameWeather.


        :param home_conference: The home_conference of this GameWeather.
        :type home_conference: str
        """

        self._home_conference = home_conference

    @property
    def home_team(self):
        """Gets the home_team of this GameWeather.


        :return: The home_team of this GameWeather.
        :rtype: str
        """
        return self._home_team

    @home_team.setter
    def home_team(self, home_team):
        """Sets the home_team of this GameWeather.


        :param home_team: The home_team of this GameWeather.
        :type home_team: str
        """

        self._home_team = home_team

    @property
    def humidity(self):
        """Gets the humidity of this GameWeather.


        :return: The humidity of this GameWeather.
        :rtype: float
        """
        return self._humidity

    @humidity.setter
    def humidity(self, humidity):
        """Sets the humidity of this GameWeather.


        :param humidity: The humidity of this GameWeather.
        :type humidity: float
        """

        self._humidity = humidity

    @property
    def id(self):
        """Gets the id of this GameWeather.


        :return: The id of this GameWeather.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GameWeather.


        :param id: The id of this GameWeather.
        :type id: int
        """

        self._id = id

    @property
    def precipitation(self):
        """Gets the precipitation of this GameWeather.


        :return: The precipitation of this GameWeather.
        :rtype: float
        """
        return self._precipitation

    @precipitation.setter
    def precipitation(self, precipitation):
        """Sets the precipitation of this GameWeather.


        :param precipitation: The precipitation of this GameWeather.
        :type precipitation: float
        """

        self._precipitation = precipitation

    @property
    def pressure(self):
        """Gets the pressure of this GameWeather.


        :return: The pressure of this GameWeather.
        :rtype: float
        """
        return self._pressure

    @pressure.setter
    def pressure(self, pressure):
        """Sets the pressure of this GameWeather.


        :param pressure: The pressure of this GameWeather.
        :type pressure: float
        """

        self._pressure = pressure

    @property
    def season(self):
        """Gets the season of this GameWeather.


        :return: The season of this GameWeather.
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this GameWeather.


        :param season: The season of this GameWeather.
        :type season: int
        """

        self._season = season

    @property
    def season_type(self):
        """Gets the season_type of this GameWeather.


        :return: The season_type of this GameWeather.
        :rtype: str
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type):
        """Sets the season_type of this GameWeather.


        :param season_type: The season_type of this GameWeather.
        :type season_type: str
        """

        self._season_type = season_type

    @property
    def snowfall(self):
        """Gets the snowfall of this GameWeather.


        :return: The snowfall of this GameWeather.
        :rtype: float
        """
        return self._snowfall

    @snowfall.setter
    def snowfall(self, snowfall):
        """Sets the snowfall of this GameWeather.


        :param snowfall: The snowfall of this GameWeather.
        :type snowfall: float
        """

        self._snowfall = snowfall

    @property
    def start_time(self):
        """Gets the start_time of this GameWeather.


        :return: The start_time of this GameWeather.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GameWeather.


        :param start_time: The start_time of this GameWeather.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def temperature(self):
        """Gets the temperature of this GameWeather.


        :return: The temperature of this GameWeather.
        :rtype: float
        """
        return self._temperature

    @temperature.setter
    def temperature(self, temperature):
        """Sets the temperature of this GameWeather.


        :param temperature: The temperature of this GameWeather.
        :type temperature: float
        """

        self._temperature = temperature

    @property
    def venue(self):
        """Gets the venue of this GameWeather.


        :return: The venue of this GameWeather.
        :rtype: str
        """
        return self._venue

    @venue.setter
    def venue(self, venue):
        """Sets the venue of this GameWeather.


        :param venue: The venue of this GameWeather.
        :type venue: str
        """

        self._venue = venue

    @property
    def venue_id(self):
        """Gets the venue_id of this GameWeather.


        :return: The venue_id of this GameWeather.
        :rtype: int
        """
        return self._venue_id

    @venue_id.setter
    def venue_id(self, venue_id):
        """Sets the venue_id of this GameWeather.


        :param venue_id: The venue_id of this GameWeather.
        :type venue_id: int
        """

        self._venue_id = venue_id

    @property
    def weather_condition(self):
        """Gets the weather_condition of this GameWeather.


        :return: The weather_condition of this GameWeather.
        :rtype: str
        """
        return self._weather_condition

    @weather_condition.setter
    def weather_condition(self, weather_condition):
        """Sets the weather_condition of this GameWeather.


        :param weather_condition: The weather_condition of this GameWeather.
        :type weather_condition: str
        """

        self._weather_condition = weather_condition

    @property
    def weather_condition_code(self):
        """Gets the weather_condition_code of this GameWeather.


        :return: The weather_condition_code of this GameWeather.
        :rtype: int
        """
        return self._weather_condition_code

    @weather_condition_code.setter
    def weather_condition_code(self, weather_condition_code):
        """Sets the weather_condition_code of this GameWeather.


        :param weather_condition_code: The weather_condition_code of this GameWeather.
        :type weather_condition_code: int
        """

        self._weather_condition_code = weather_condition_code

    @property
    def week(self):
        """Gets the week of this GameWeather.


        :return: The week of this GameWeather.
        :rtype: int
        """
        return self._week

    @week.setter
    def week(self, week):
        """Sets the week of this GameWeather.


        :param week: The week of this GameWeather.
        :type week: int
        """

        self._week = week

    @property
    def wind_direction(self):
        """Gets the wind_direction of this GameWeather.


        :return: The wind_direction of this GameWeather.
        :rtype: float
        """
        return self._wind_direction

    @wind_direction.setter
    def wind_direction(self, wind_direction):
        """Sets the wind_direction of this GameWeather.


        :param wind_direction: The wind_direction of this GameWeather.
        :type wind_direction: float
        """

        self._wind_direction = wind_direction

    @property
    def wind_speed(self):
        """Gets the wind_speed of this GameWeather.


        :return: The wind_speed of this GameWeather.
        :rtype: float
        """
        return self._wind_speed

    @wind_speed.setter
    def wind_speed(self, wind_speed):
        """Sets the wind_speed of this GameWeather.


        :param wind_speed: The wind_speed of this GameWeather.
        :type wind_speed: float
        """

        self._wind_speed = wind_speed
