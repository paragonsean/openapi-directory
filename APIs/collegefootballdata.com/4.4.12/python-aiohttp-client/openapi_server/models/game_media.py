# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GameMedia(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, away_conference: str=None, away_team: str=None, home_conference: str=None, home_team: str=None, id: int=None, is_start_time_tbd: bool=None, media_type: str=None, outlet: str=None, season: int=None, season_type: str=None, start_time: str=None, week: int=None):
        """GameMedia - a model defined in OpenAPI

        :param away_conference: The away_conference of this GameMedia.
        :param away_team: The away_team of this GameMedia.
        :param home_conference: The home_conference of this GameMedia.
        :param home_team: The home_team of this GameMedia.
        :param id: The id of this GameMedia.
        :param is_start_time_tbd: The is_start_time_tbd of this GameMedia.
        :param media_type: The media_type of this GameMedia.
        :param outlet: The outlet of this GameMedia.
        :param season: The season of this GameMedia.
        :param season_type: The season_type of this GameMedia.
        :param start_time: The start_time of this GameMedia.
        :param week: The week of this GameMedia.
        """
        self.openapi_types = {
            'away_conference': str,
            'away_team': str,
            'home_conference': str,
            'home_team': str,
            'id': int,
            'is_start_time_tbd': bool,
            'media_type': str,
            'outlet': str,
            'season': int,
            'season_type': str,
            'start_time': str,
            'week': int
        }

        self.attribute_map = {
            'away_conference': 'awayConference',
            'away_team': 'awayTeam',
            'home_conference': 'homeConference',
            'home_team': 'homeTeam',
            'id': 'id',
            'is_start_time_tbd': 'isStartTimeTBD',
            'media_type': 'mediaType',
            'outlet': 'outlet',
            'season': 'season',
            'season_type': 'seasonType',
            'start_time': 'startTime',
            'week': 'week'
        }

        self._away_conference = away_conference
        self._away_team = away_team
        self._home_conference = home_conference
        self._home_team = home_team
        self._id = id
        self._is_start_time_tbd = is_start_time_tbd
        self._media_type = media_type
        self._outlet = outlet
        self._season = season
        self._season_type = season_type
        self._start_time = start_time
        self._week = week

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GameMedia':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GameMedia of this GameMedia.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def away_conference(self):
        """Gets the away_conference of this GameMedia.


        :return: The away_conference of this GameMedia.
        :rtype: str
        """
        return self._away_conference

    @away_conference.setter
    def away_conference(self, away_conference):
        """Sets the away_conference of this GameMedia.


        :param away_conference: The away_conference of this GameMedia.
        :type away_conference: str
        """

        self._away_conference = away_conference

    @property
    def away_team(self):
        """Gets the away_team of this GameMedia.


        :return: The away_team of this GameMedia.
        :rtype: str
        """
        return self._away_team

    @away_team.setter
    def away_team(self, away_team):
        """Sets the away_team of this GameMedia.


        :param away_team: The away_team of this GameMedia.
        :type away_team: str
        """

        self._away_team = away_team

    @property
    def home_conference(self):
        """Gets the home_conference of this GameMedia.


        :return: The home_conference of this GameMedia.
        :rtype: str
        """
        return self._home_conference

    @home_conference.setter
    def home_conference(self, home_conference):
        """Sets the home_conference of this GameMedia.


        :param home_conference: The home_conference of this GameMedia.
        :type home_conference: str
        """

        self._home_conference = home_conference

    @property
    def home_team(self):
        """Gets the home_team of this GameMedia.


        :return: The home_team of this GameMedia.
        :rtype: str
        """
        return self._home_team

    @home_team.setter
    def home_team(self, home_team):
        """Sets the home_team of this GameMedia.


        :param home_team: The home_team of this GameMedia.
        :type home_team: str
        """

        self._home_team = home_team

    @property
    def id(self):
        """Gets the id of this GameMedia.


        :return: The id of this GameMedia.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GameMedia.


        :param id: The id of this GameMedia.
        :type id: int
        """

        self._id = id

    @property
    def is_start_time_tbd(self):
        """Gets the is_start_time_tbd of this GameMedia.


        :return: The is_start_time_tbd of this GameMedia.
        :rtype: bool
        """
        return self._is_start_time_tbd

    @is_start_time_tbd.setter
    def is_start_time_tbd(self, is_start_time_tbd):
        """Sets the is_start_time_tbd of this GameMedia.


        :param is_start_time_tbd: The is_start_time_tbd of this GameMedia.
        :type is_start_time_tbd: bool
        """

        self._is_start_time_tbd = is_start_time_tbd

    @property
    def media_type(self):
        """Gets the media_type of this GameMedia.


        :return: The media_type of this GameMedia.
        :rtype: str
        """
        return self._media_type

    @media_type.setter
    def media_type(self, media_type):
        """Sets the media_type of this GameMedia.


        :param media_type: The media_type of this GameMedia.
        :type media_type: str
        """

        self._media_type = media_type

    @property
    def outlet(self):
        """Gets the outlet of this GameMedia.


        :return: The outlet of this GameMedia.
        :rtype: str
        """
        return self._outlet

    @outlet.setter
    def outlet(self, outlet):
        """Sets the outlet of this GameMedia.


        :param outlet: The outlet of this GameMedia.
        :type outlet: str
        """

        self._outlet = outlet

    @property
    def season(self):
        """Gets the season of this GameMedia.


        :return: The season of this GameMedia.
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this GameMedia.


        :param season: The season of this GameMedia.
        :type season: int
        """

        self._season = season

    @property
    def season_type(self):
        """Gets the season_type of this GameMedia.


        :return: The season_type of this GameMedia.
        :rtype: str
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type):
        """Sets the season_type of this GameMedia.


        :param season_type: The season_type of this GameMedia.
        :type season_type: str
        """

        self._season_type = season_type

    @property
    def start_time(self):
        """Gets the start_time of this GameMedia.


        :return: The start_time of this GameMedia.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GameMedia.


        :param start_time: The start_time of this GameMedia.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def week(self):
        """Gets the week of this GameMedia.


        :return: The week of this GameMedia.
        :rtype: int
        """
        return self._week

    @week.setter
    def week(self, week):
        """Sets the week of this GameMedia.


        :param week: The week of this GameMedia.
        :type week: int
        """

        self._week = week
