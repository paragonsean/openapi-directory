# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.advanced_season_stat_defense_field_position import AdvancedSeasonStatDefenseFieldPosition
from openapi_server.models.advanced_season_stat_defense_havoc import AdvancedSeasonStatDefenseHavoc
from openapi_server.models.advanced_season_stat_defense_passing_downs import AdvancedSeasonStatDefensePassingDowns
from openapi_server.models.advanced_season_stat_defense_passing_plays import AdvancedSeasonStatDefensePassingPlays
from openapi_server import util


class AdvancedSeasonStatDefense(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, drives: int=None, explosiveness: float=None, field_position: AdvancedSeasonStatDefenseFieldPosition=None, havoc: AdvancedSeasonStatDefenseHavoc=None, line_yards: float=None, line_yards_total: float=None, open_field_yards: float=None, open_field_yards_total: int=None, passing_downs: AdvancedSeasonStatDefensePassingDowns=None, passing_plays: AdvancedSeasonStatDefensePassingPlays=None, plays: int=None, points_per_opportunity: float=None, power_success: float=None, ppa: float=None, rushing_plays: AdvancedSeasonStatDefensePassingPlays=None, second_level_yards: float=None, second_level_yards_total: int=None, standard_downs: AdvancedSeasonStatDefensePassingDowns=None, stuff_rate: float=None, success_rate: float=None, total_opportunies: int=None, total_ppa: float=None):
        """AdvancedSeasonStatDefense - a model defined in OpenAPI

        :param drives: The drives of this AdvancedSeasonStatDefense.
        :param explosiveness: The explosiveness of this AdvancedSeasonStatDefense.
        :param field_position: The field_position of this AdvancedSeasonStatDefense.
        :param havoc: The havoc of this AdvancedSeasonStatDefense.
        :param line_yards: The line_yards of this AdvancedSeasonStatDefense.
        :param line_yards_total: The line_yards_total of this AdvancedSeasonStatDefense.
        :param open_field_yards: The open_field_yards of this AdvancedSeasonStatDefense.
        :param open_field_yards_total: The open_field_yards_total of this AdvancedSeasonStatDefense.
        :param passing_downs: The passing_downs of this AdvancedSeasonStatDefense.
        :param passing_plays: The passing_plays of this AdvancedSeasonStatDefense.
        :param plays: The plays of this AdvancedSeasonStatDefense.
        :param points_per_opportunity: The points_per_opportunity of this AdvancedSeasonStatDefense.
        :param power_success: The power_success of this AdvancedSeasonStatDefense.
        :param ppa: The ppa of this AdvancedSeasonStatDefense.
        :param rushing_plays: The rushing_plays of this AdvancedSeasonStatDefense.
        :param second_level_yards: The second_level_yards of this AdvancedSeasonStatDefense.
        :param second_level_yards_total: The second_level_yards_total of this AdvancedSeasonStatDefense.
        :param standard_downs: The standard_downs of this AdvancedSeasonStatDefense.
        :param stuff_rate: The stuff_rate of this AdvancedSeasonStatDefense.
        :param success_rate: The success_rate of this AdvancedSeasonStatDefense.
        :param total_opportunies: The total_opportunies of this AdvancedSeasonStatDefense.
        :param total_ppa: The total_ppa of this AdvancedSeasonStatDefense.
        """
        self.openapi_types = {
            'drives': int,
            'explosiveness': float,
            'field_position': AdvancedSeasonStatDefenseFieldPosition,
            'havoc': AdvancedSeasonStatDefenseHavoc,
            'line_yards': float,
            'line_yards_total': float,
            'open_field_yards': float,
            'open_field_yards_total': int,
            'passing_downs': AdvancedSeasonStatDefensePassingDowns,
            'passing_plays': AdvancedSeasonStatDefensePassingPlays,
            'plays': int,
            'points_per_opportunity': float,
            'power_success': float,
            'ppa': float,
            'rushing_plays': AdvancedSeasonStatDefensePassingPlays,
            'second_level_yards': float,
            'second_level_yards_total': int,
            'standard_downs': AdvancedSeasonStatDefensePassingDowns,
            'stuff_rate': float,
            'success_rate': float,
            'total_opportunies': int,
            'total_ppa': float
        }

        self.attribute_map = {
            'drives': 'drives',
            'explosiveness': 'explosiveness',
            'field_position': 'fieldPosition',
            'havoc': 'havoc',
            'line_yards': 'lineYards',
            'line_yards_total': 'lineYardsTotal',
            'open_field_yards': 'openFieldYards',
            'open_field_yards_total': 'openFieldYardsTotal',
            'passing_downs': 'passingDowns',
            'passing_plays': 'passingPlays',
            'plays': 'plays',
            'points_per_opportunity': 'pointsPerOpportunity',
            'power_success': 'powerSuccess',
            'ppa': 'ppa',
            'rushing_plays': 'rushingPlays',
            'second_level_yards': 'secondLevelYards',
            'second_level_yards_total': 'secondLevelYardsTotal',
            'standard_downs': 'standardDowns',
            'stuff_rate': 'stuffRate',
            'success_rate': 'successRate',
            'total_opportunies': 'totalOpportunies',
            'total_ppa': 'totalPPA'
        }

        self._drives = drives
        self._explosiveness = explosiveness
        self._field_position = field_position
        self._havoc = havoc
        self._line_yards = line_yards
        self._line_yards_total = line_yards_total
        self._open_field_yards = open_field_yards
        self._open_field_yards_total = open_field_yards_total
        self._passing_downs = passing_downs
        self._passing_plays = passing_plays
        self._plays = plays
        self._points_per_opportunity = points_per_opportunity
        self._power_success = power_success
        self._ppa = ppa
        self._rushing_plays = rushing_plays
        self._second_level_yards = second_level_yards
        self._second_level_yards_total = second_level_yards_total
        self._standard_downs = standard_downs
        self._stuff_rate = stuff_rate
        self._success_rate = success_rate
        self._total_opportunies = total_opportunies
        self._total_ppa = total_ppa

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdvancedSeasonStatDefense':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdvancedSeasonStat_defense of this AdvancedSeasonStatDefense.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def drives(self):
        """Gets the drives of this AdvancedSeasonStatDefense.


        :return: The drives of this AdvancedSeasonStatDefense.
        :rtype: int
        """
        return self._drives

    @drives.setter
    def drives(self, drives):
        """Sets the drives of this AdvancedSeasonStatDefense.


        :param drives: The drives of this AdvancedSeasonStatDefense.
        :type drives: int
        """

        self._drives = drives

    @property
    def explosiveness(self):
        """Gets the explosiveness of this AdvancedSeasonStatDefense.


        :return: The explosiveness of this AdvancedSeasonStatDefense.
        :rtype: float
        """
        return self._explosiveness

    @explosiveness.setter
    def explosiveness(self, explosiveness):
        """Sets the explosiveness of this AdvancedSeasonStatDefense.


        :param explosiveness: The explosiveness of this AdvancedSeasonStatDefense.
        :type explosiveness: float
        """

        self._explosiveness = explosiveness

    @property
    def field_position(self):
        """Gets the field_position of this AdvancedSeasonStatDefense.


        :return: The field_position of this AdvancedSeasonStatDefense.
        :rtype: AdvancedSeasonStatDefenseFieldPosition
        """
        return self._field_position

    @field_position.setter
    def field_position(self, field_position):
        """Sets the field_position of this AdvancedSeasonStatDefense.


        :param field_position: The field_position of this AdvancedSeasonStatDefense.
        :type field_position: AdvancedSeasonStatDefenseFieldPosition
        """

        self._field_position = field_position

    @property
    def havoc(self):
        """Gets the havoc of this AdvancedSeasonStatDefense.


        :return: The havoc of this AdvancedSeasonStatDefense.
        :rtype: AdvancedSeasonStatDefenseHavoc
        """
        return self._havoc

    @havoc.setter
    def havoc(self, havoc):
        """Sets the havoc of this AdvancedSeasonStatDefense.


        :param havoc: The havoc of this AdvancedSeasonStatDefense.
        :type havoc: AdvancedSeasonStatDefenseHavoc
        """

        self._havoc = havoc

    @property
    def line_yards(self):
        """Gets the line_yards of this AdvancedSeasonStatDefense.


        :return: The line_yards of this AdvancedSeasonStatDefense.
        :rtype: float
        """
        return self._line_yards

    @line_yards.setter
    def line_yards(self, line_yards):
        """Sets the line_yards of this AdvancedSeasonStatDefense.


        :param line_yards: The line_yards of this AdvancedSeasonStatDefense.
        :type line_yards: float
        """

        self._line_yards = line_yards

    @property
    def line_yards_total(self):
        """Gets the line_yards_total of this AdvancedSeasonStatDefense.


        :return: The line_yards_total of this AdvancedSeasonStatDefense.
        :rtype: float
        """
        return self._line_yards_total

    @line_yards_total.setter
    def line_yards_total(self, line_yards_total):
        """Sets the line_yards_total of this AdvancedSeasonStatDefense.


        :param line_yards_total: The line_yards_total of this AdvancedSeasonStatDefense.
        :type line_yards_total: float
        """

        self._line_yards_total = line_yards_total

    @property
    def open_field_yards(self):
        """Gets the open_field_yards of this AdvancedSeasonStatDefense.


        :return: The open_field_yards of this AdvancedSeasonStatDefense.
        :rtype: float
        """
        return self._open_field_yards

    @open_field_yards.setter
    def open_field_yards(self, open_field_yards):
        """Sets the open_field_yards of this AdvancedSeasonStatDefense.


        :param open_field_yards: The open_field_yards of this AdvancedSeasonStatDefense.
        :type open_field_yards: float
        """

        self._open_field_yards = open_field_yards

    @property
    def open_field_yards_total(self):
        """Gets the open_field_yards_total of this AdvancedSeasonStatDefense.


        :return: The open_field_yards_total of this AdvancedSeasonStatDefense.
        :rtype: int
        """
        return self._open_field_yards_total

    @open_field_yards_total.setter
    def open_field_yards_total(self, open_field_yards_total):
        """Sets the open_field_yards_total of this AdvancedSeasonStatDefense.


        :param open_field_yards_total: The open_field_yards_total of this AdvancedSeasonStatDefense.
        :type open_field_yards_total: int
        """

        self._open_field_yards_total = open_field_yards_total

    @property
    def passing_downs(self):
        """Gets the passing_downs of this AdvancedSeasonStatDefense.


        :return: The passing_downs of this AdvancedSeasonStatDefense.
        :rtype: AdvancedSeasonStatDefensePassingDowns
        """
        return self._passing_downs

    @passing_downs.setter
    def passing_downs(self, passing_downs):
        """Sets the passing_downs of this AdvancedSeasonStatDefense.


        :param passing_downs: The passing_downs of this AdvancedSeasonStatDefense.
        :type passing_downs: AdvancedSeasonStatDefensePassingDowns
        """

        self._passing_downs = passing_downs

    @property
    def passing_plays(self):
        """Gets the passing_plays of this AdvancedSeasonStatDefense.


        :return: The passing_plays of this AdvancedSeasonStatDefense.
        :rtype: AdvancedSeasonStatDefensePassingPlays
        """
        return self._passing_plays

    @passing_plays.setter
    def passing_plays(self, passing_plays):
        """Sets the passing_plays of this AdvancedSeasonStatDefense.


        :param passing_plays: The passing_plays of this AdvancedSeasonStatDefense.
        :type passing_plays: AdvancedSeasonStatDefensePassingPlays
        """

        self._passing_plays = passing_plays

    @property
    def plays(self):
        """Gets the plays of this AdvancedSeasonStatDefense.


        :return: The plays of this AdvancedSeasonStatDefense.
        :rtype: int
        """
        return self._plays

    @plays.setter
    def plays(self, plays):
        """Sets the plays of this AdvancedSeasonStatDefense.


        :param plays: The plays of this AdvancedSeasonStatDefense.
        :type plays: int
        """

        self._plays = plays

    @property
    def points_per_opportunity(self):
        """Gets the points_per_opportunity of this AdvancedSeasonStatDefense.


        :return: The points_per_opportunity of this AdvancedSeasonStatDefense.
        :rtype: float
        """
        return self._points_per_opportunity

    @points_per_opportunity.setter
    def points_per_opportunity(self, points_per_opportunity):
        """Sets the points_per_opportunity of this AdvancedSeasonStatDefense.


        :param points_per_opportunity: The points_per_opportunity of this AdvancedSeasonStatDefense.
        :type points_per_opportunity: float
        """

        self._points_per_opportunity = points_per_opportunity

    @property
    def power_success(self):
        """Gets the power_success of this AdvancedSeasonStatDefense.


        :return: The power_success of this AdvancedSeasonStatDefense.
        :rtype: float
        """
        return self._power_success

    @power_success.setter
    def power_success(self, power_success):
        """Sets the power_success of this AdvancedSeasonStatDefense.


        :param power_success: The power_success of this AdvancedSeasonStatDefense.
        :type power_success: float
        """

        self._power_success = power_success

    @property
    def ppa(self):
        """Gets the ppa of this AdvancedSeasonStatDefense.


        :return: The ppa of this AdvancedSeasonStatDefense.
        :rtype: float
        """
        return self._ppa

    @ppa.setter
    def ppa(self, ppa):
        """Sets the ppa of this AdvancedSeasonStatDefense.


        :param ppa: The ppa of this AdvancedSeasonStatDefense.
        :type ppa: float
        """

        self._ppa = ppa

    @property
    def rushing_plays(self):
        """Gets the rushing_plays of this AdvancedSeasonStatDefense.


        :return: The rushing_plays of this AdvancedSeasonStatDefense.
        :rtype: AdvancedSeasonStatDefensePassingPlays
        """
        return self._rushing_plays

    @rushing_plays.setter
    def rushing_plays(self, rushing_plays):
        """Sets the rushing_plays of this AdvancedSeasonStatDefense.


        :param rushing_plays: The rushing_plays of this AdvancedSeasonStatDefense.
        :type rushing_plays: AdvancedSeasonStatDefensePassingPlays
        """

        self._rushing_plays = rushing_plays

    @property
    def second_level_yards(self):
        """Gets the second_level_yards of this AdvancedSeasonStatDefense.


        :return: The second_level_yards of this AdvancedSeasonStatDefense.
        :rtype: float
        """
        return self._second_level_yards

    @second_level_yards.setter
    def second_level_yards(self, second_level_yards):
        """Sets the second_level_yards of this AdvancedSeasonStatDefense.


        :param second_level_yards: The second_level_yards of this AdvancedSeasonStatDefense.
        :type second_level_yards: float
        """

        self._second_level_yards = second_level_yards

    @property
    def second_level_yards_total(self):
        """Gets the second_level_yards_total of this AdvancedSeasonStatDefense.


        :return: The second_level_yards_total of this AdvancedSeasonStatDefense.
        :rtype: int
        """
        return self._second_level_yards_total

    @second_level_yards_total.setter
    def second_level_yards_total(self, second_level_yards_total):
        """Sets the second_level_yards_total of this AdvancedSeasonStatDefense.


        :param second_level_yards_total: The second_level_yards_total of this AdvancedSeasonStatDefense.
        :type second_level_yards_total: int
        """

        self._second_level_yards_total = second_level_yards_total

    @property
    def standard_downs(self):
        """Gets the standard_downs of this AdvancedSeasonStatDefense.


        :return: The standard_downs of this AdvancedSeasonStatDefense.
        :rtype: AdvancedSeasonStatDefensePassingDowns
        """
        return self._standard_downs

    @standard_downs.setter
    def standard_downs(self, standard_downs):
        """Sets the standard_downs of this AdvancedSeasonStatDefense.


        :param standard_downs: The standard_downs of this AdvancedSeasonStatDefense.
        :type standard_downs: AdvancedSeasonStatDefensePassingDowns
        """

        self._standard_downs = standard_downs

    @property
    def stuff_rate(self):
        """Gets the stuff_rate of this AdvancedSeasonStatDefense.


        :return: The stuff_rate of this AdvancedSeasonStatDefense.
        :rtype: float
        """
        return self._stuff_rate

    @stuff_rate.setter
    def stuff_rate(self, stuff_rate):
        """Sets the stuff_rate of this AdvancedSeasonStatDefense.


        :param stuff_rate: The stuff_rate of this AdvancedSeasonStatDefense.
        :type stuff_rate: float
        """

        self._stuff_rate = stuff_rate

    @property
    def success_rate(self):
        """Gets the success_rate of this AdvancedSeasonStatDefense.


        :return: The success_rate of this AdvancedSeasonStatDefense.
        :rtype: float
        """
        return self._success_rate

    @success_rate.setter
    def success_rate(self, success_rate):
        """Sets the success_rate of this AdvancedSeasonStatDefense.


        :param success_rate: The success_rate of this AdvancedSeasonStatDefense.
        :type success_rate: float
        """

        self._success_rate = success_rate

    @property
    def total_opportunies(self):
        """Gets the total_opportunies of this AdvancedSeasonStatDefense.


        :return: The total_opportunies of this AdvancedSeasonStatDefense.
        :rtype: int
        """
        return self._total_opportunies

    @total_opportunies.setter
    def total_opportunies(self, total_opportunies):
        """Sets the total_opportunies of this AdvancedSeasonStatDefense.


        :param total_opportunies: The total_opportunies of this AdvancedSeasonStatDefense.
        :type total_opportunies: int
        """

        self._total_opportunies = total_opportunies

    @property
    def total_ppa(self):
        """Gets the total_ppa of this AdvancedSeasonStatDefense.


        :return: The total_ppa of this AdvancedSeasonStatDefense.
        :rtype: float
        """
        return self._total_ppa

    @total_ppa.setter
    def total_ppa(self, total_ppa):
        """Sets the total_ppa of this AdvancedSeasonStatDefense.


        :param total_ppa: The total_ppa of this AdvancedSeasonStatDefense.
        :type total_ppa: float
        """

        self._total_ppa = total_ppa
