# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DriveEndTime(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, minutes: int=None, seconds: int=None):
        """DriveEndTime - a model defined in OpenAPI

        :param minutes: The minutes of this DriveEndTime.
        :param seconds: The seconds of this DriveEndTime.
        """
        self.openapi_types = {
            'minutes': int,
            'seconds': int
        }

        self.attribute_map = {
            'minutes': 'minutes',
            'seconds': 'seconds'
        }

        self._minutes = minutes
        self._seconds = seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DriveEndTime':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Drive_end_time of this DriveEndTime.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def minutes(self):
        """Gets the minutes of this DriveEndTime.


        :return: The minutes of this DriveEndTime.
        :rtype: int
        """
        return self._minutes

    @minutes.setter
    def minutes(self, minutes):
        """Sets the minutes of this DriveEndTime.


        :param minutes: The minutes of this DriveEndTime.
        :type minutes: int
        """

        self._minutes = minutes

    @property
    def seconds(self):
        """Gets the seconds of this DriveEndTime.


        :return: The seconds of this DriveEndTime.
        :rtype: int
        """
        return self._seconds

    @seconds.setter
    def seconds(self, seconds):
        """Sets the seconds of this DriveEndTime.


        :param seconds: The seconds of this DriveEndTime.
        :type seconds: int
        """

        self._seconds = seconds
