/*
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BoxScoreTeamsRushingInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:42:22.913706-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BoxScoreTeamsRushingInner {
  public static final String SERIALIZED_NAME_LINE_YARDS = "lineYards";
  @SerializedName(SERIALIZED_NAME_LINE_YARDS)
  private BigDecimal lineYards;

  public static final String SERIALIZED_NAME_LINE_YARDS_AVERAGE = "lineYardsAverage";
  @SerializedName(SERIALIZED_NAME_LINE_YARDS_AVERAGE)
  private BigDecimal lineYardsAverage;

  public static final String SERIALIZED_NAME_OPEN_FIELD_YARDS = "openFieldYards";
  @SerializedName(SERIALIZED_NAME_OPEN_FIELD_YARDS)
  private Integer openFieldYards;

  public static final String SERIALIZED_NAME_OPEN_FIELD_YARDS_AVERAGE = "openFieldYardsAverage";
  @SerializedName(SERIALIZED_NAME_OPEN_FIELD_YARDS_AVERAGE)
  private BigDecimal openFieldYardsAverage;

  public static final String SERIALIZED_NAME_POWER_SUCCESS = "powerSuccess";
  @SerializedName(SERIALIZED_NAME_POWER_SUCCESS)
  private BigDecimal powerSuccess;

  public static final String SERIALIZED_NAME_SECOND_LEVEL_YARDS = "secondLevelYards";
  @SerializedName(SERIALIZED_NAME_SECOND_LEVEL_YARDS)
  private Integer secondLevelYards;

  public static final String SERIALIZED_NAME_SECOND_LEVEL_YARDS_AVERAGE = "secondLevelYardsAverage";
  @SerializedName(SERIALIZED_NAME_SECOND_LEVEL_YARDS_AVERAGE)
  private BigDecimal secondLevelYardsAverage;

  public static final String SERIALIZED_NAME_STUFF_RATE = "stuffRate";
  @SerializedName(SERIALIZED_NAME_STUFF_RATE)
  private BigDecimal stuffRate;

  public static final String SERIALIZED_NAME_TEAM = "team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private String team;

  public BoxScoreTeamsRushingInner() {
  }

  public BoxScoreTeamsRushingInner lineYards(BigDecimal lineYards) {
    this.lineYards = lineYards;
    return this;
  }

  /**
   * Get lineYards
   * @return lineYards
   */
  @javax.annotation.Nullable
  public BigDecimal getLineYards() {
    return lineYards;
  }

  public void setLineYards(BigDecimal lineYards) {
    this.lineYards = lineYards;
  }


  public BoxScoreTeamsRushingInner lineYardsAverage(BigDecimal lineYardsAverage) {
    this.lineYardsAverage = lineYardsAverage;
    return this;
  }

  /**
   * Get lineYardsAverage
   * @return lineYardsAverage
   */
  @javax.annotation.Nullable
  public BigDecimal getLineYardsAverage() {
    return lineYardsAverage;
  }

  public void setLineYardsAverage(BigDecimal lineYardsAverage) {
    this.lineYardsAverage = lineYardsAverage;
  }


  public BoxScoreTeamsRushingInner openFieldYards(Integer openFieldYards) {
    this.openFieldYards = openFieldYards;
    return this;
  }

  /**
   * Get openFieldYards
   * @return openFieldYards
   */
  @javax.annotation.Nullable
  public Integer getOpenFieldYards() {
    return openFieldYards;
  }

  public void setOpenFieldYards(Integer openFieldYards) {
    this.openFieldYards = openFieldYards;
  }


  public BoxScoreTeamsRushingInner openFieldYardsAverage(BigDecimal openFieldYardsAverage) {
    this.openFieldYardsAverage = openFieldYardsAverage;
    return this;
  }

  /**
   * Get openFieldYardsAverage
   * @return openFieldYardsAverage
   */
  @javax.annotation.Nullable
  public BigDecimal getOpenFieldYardsAverage() {
    return openFieldYardsAverage;
  }

  public void setOpenFieldYardsAverage(BigDecimal openFieldYardsAverage) {
    this.openFieldYardsAverage = openFieldYardsAverage;
  }


  public BoxScoreTeamsRushingInner powerSuccess(BigDecimal powerSuccess) {
    this.powerSuccess = powerSuccess;
    return this;
  }

  /**
   * Get powerSuccess
   * @return powerSuccess
   */
  @javax.annotation.Nullable
  public BigDecimal getPowerSuccess() {
    return powerSuccess;
  }

  public void setPowerSuccess(BigDecimal powerSuccess) {
    this.powerSuccess = powerSuccess;
  }


  public BoxScoreTeamsRushingInner secondLevelYards(Integer secondLevelYards) {
    this.secondLevelYards = secondLevelYards;
    return this;
  }

  /**
   * Get secondLevelYards
   * @return secondLevelYards
   */
  @javax.annotation.Nullable
  public Integer getSecondLevelYards() {
    return secondLevelYards;
  }

  public void setSecondLevelYards(Integer secondLevelYards) {
    this.secondLevelYards = secondLevelYards;
  }


  public BoxScoreTeamsRushingInner secondLevelYardsAverage(BigDecimal secondLevelYardsAverage) {
    this.secondLevelYardsAverage = secondLevelYardsAverage;
    return this;
  }

  /**
   * Get secondLevelYardsAverage
   * @return secondLevelYardsAverage
   */
  @javax.annotation.Nullable
  public BigDecimal getSecondLevelYardsAverage() {
    return secondLevelYardsAverage;
  }

  public void setSecondLevelYardsAverage(BigDecimal secondLevelYardsAverage) {
    this.secondLevelYardsAverage = secondLevelYardsAverage;
  }


  public BoxScoreTeamsRushingInner stuffRate(BigDecimal stuffRate) {
    this.stuffRate = stuffRate;
    return this;
  }

  /**
   * Get stuffRate
   * @return stuffRate
   */
  @javax.annotation.Nullable
  public BigDecimal getStuffRate() {
    return stuffRate;
  }

  public void setStuffRate(BigDecimal stuffRate) {
    this.stuffRate = stuffRate;
  }


  public BoxScoreTeamsRushingInner team(String team) {
    this.team = team;
    return this;
  }

  /**
   * Get team
   * @return team
   */
  @javax.annotation.Nullable
  public String getTeam() {
    return team;
  }

  public void setTeam(String team) {
    this.team = team;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BoxScoreTeamsRushingInner boxScoreTeamsRushingInner = (BoxScoreTeamsRushingInner) o;
    return Objects.equals(this.lineYards, boxScoreTeamsRushingInner.lineYards) &&
        Objects.equals(this.lineYardsAverage, boxScoreTeamsRushingInner.lineYardsAverage) &&
        Objects.equals(this.openFieldYards, boxScoreTeamsRushingInner.openFieldYards) &&
        Objects.equals(this.openFieldYardsAverage, boxScoreTeamsRushingInner.openFieldYardsAverage) &&
        Objects.equals(this.powerSuccess, boxScoreTeamsRushingInner.powerSuccess) &&
        Objects.equals(this.secondLevelYards, boxScoreTeamsRushingInner.secondLevelYards) &&
        Objects.equals(this.secondLevelYardsAverage, boxScoreTeamsRushingInner.secondLevelYardsAverage) &&
        Objects.equals(this.stuffRate, boxScoreTeamsRushingInner.stuffRate) &&
        Objects.equals(this.team, boxScoreTeamsRushingInner.team);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lineYards, lineYardsAverage, openFieldYards, openFieldYardsAverage, powerSuccess, secondLevelYards, secondLevelYardsAverage, stuffRate, team);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BoxScoreTeamsRushingInner {\n");
    sb.append("    lineYards: ").append(toIndentedString(lineYards)).append("\n");
    sb.append("    lineYardsAverage: ").append(toIndentedString(lineYardsAverage)).append("\n");
    sb.append("    openFieldYards: ").append(toIndentedString(openFieldYards)).append("\n");
    sb.append("    openFieldYardsAverage: ").append(toIndentedString(openFieldYardsAverage)).append("\n");
    sb.append("    powerSuccess: ").append(toIndentedString(powerSuccess)).append("\n");
    sb.append("    secondLevelYards: ").append(toIndentedString(secondLevelYards)).append("\n");
    sb.append("    secondLevelYardsAverage: ").append(toIndentedString(secondLevelYardsAverage)).append("\n");
    sb.append("    stuffRate: ").append(toIndentedString(stuffRate)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("lineYards");
    openapiFields.add("lineYardsAverage");
    openapiFields.add("openFieldYards");
    openapiFields.add("openFieldYardsAverage");
    openapiFields.add("powerSuccess");
    openapiFields.add("secondLevelYards");
    openapiFields.add("secondLevelYardsAverage");
    openapiFields.add("stuffRate");
    openapiFields.add("team");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BoxScoreTeamsRushingInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BoxScoreTeamsRushingInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BoxScoreTeamsRushingInner is not found in the empty JSON string", BoxScoreTeamsRushingInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BoxScoreTeamsRushingInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BoxScoreTeamsRushingInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("team") != null && !jsonObj.get("team").isJsonNull()) && !jsonObj.get("team").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `team` to be a primitive type in the JSON string but got `%s`", jsonObj.get("team").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BoxScoreTeamsRushingInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BoxScoreTeamsRushingInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BoxScoreTeamsRushingInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BoxScoreTeamsRushingInner.class));

       return (TypeAdapter<T>) new TypeAdapter<BoxScoreTeamsRushingInner>() {
           @Override
           public void write(JsonWriter out, BoxScoreTeamsRushingInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BoxScoreTeamsRushingInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BoxScoreTeamsRushingInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BoxScoreTeamsRushingInner
   * @throws IOException if the JSON string is invalid with respect to BoxScoreTeamsRushingInner
   */
  public static BoxScoreTeamsRushingInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BoxScoreTeamsRushingInner.class);
  }

  /**
   * Convert an instance of BoxScoreTeamsRushingInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

