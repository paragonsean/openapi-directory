/*
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DriveEndTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Drive
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:42:22.913706-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Drive {
  public static final String SERIALIZED_NAME_DEFENSE = "defense";
  @SerializedName(SERIALIZED_NAME_DEFENSE)
  private String defense;

  public static final String SERIALIZED_NAME_DEFENSE_CONFERENCE = "defense_conference";
  @SerializedName(SERIALIZED_NAME_DEFENSE_CONFERENCE)
  private String defenseConference;

  public static final String SERIALIZED_NAME_DRIVE_NUMBER = "drive_number";
  @SerializedName(SERIALIZED_NAME_DRIVE_NUMBER)
  private Integer driveNumber;

  public static final String SERIALIZED_NAME_DRIVE_RESULT = "drive_result";
  @SerializedName(SERIALIZED_NAME_DRIVE_RESULT)
  private String driveResult;

  public static final String SERIALIZED_NAME_END_DEFENSE_SCORE = "end_defense_score";
  @SerializedName(SERIALIZED_NAME_END_DEFENSE_SCORE)
  private Integer endDefenseScore;

  public static final String SERIALIZED_NAME_END_OFFENSE_SCORE = "end_offense_score";
  @SerializedName(SERIALIZED_NAME_END_OFFENSE_SCORE)
  private Integer endOffenseScore;

  public static final String SERIALIZED_NAME_END_PERIOD = "end_period";
  @SerializedName(SERIALIZED_NAME_END_PERIOD)
  private Integer endPeriod;

  public static final String SERIALIZED_NAME_END_TIME = "end_time";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private DriveEndTime endTime;

  public static final String SERIALIZED_NAME_END_YARDLINE = "end_yardline";
  @SerializedName(SERIALIZED_NAME_END_YARDLINE)
  private Integer endYardline;

  public static final String SERIALIZED_NAME_END_YARDS_TO_GOAL = "end_yards_to_goal";
  @SerializedName(SERIALIZED_NAME_END_YARDS_TO_GOAL)
  private Integer endYardsToGoal;

  public static final String SERIALIZED_NAME_GAME_ID = "game_id";
  @SerializedName(SERIALIZED_NAME_GAME_ID)
  private Integer gameId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IS_HOME_OFFENSE = "is_home_offense";
  @SerializedName(SERIALIZED_NAME_IS_HOME_OFFENSE)
  private Boolean isHomeOffense;

  public static final String SERIALIZED_NAME_OFFENSE = "offense";
  @SerializedName(SERIALIZED_NAME_OFFENSE)
  private String offense;

  public static final String SERIALIZED_NAME_OFFENSE_CONFERENCE = "offense_conference";
  @SerializedName(SERIALIZED_NAME_OFFENSE_CONFERENCE)
  private String offenseConference;

  public static final String SERIALIZED_NAME_PLAYS = "plays";
  @SerializedName(SERIALIZED_NAME_PLAYS)
  private Integer plays;

  public static final String SERIALIZED_NAME_SCORING = "scoring";
  @SerializedName(SERIALIZED_NAME_SCORING)
  private Boolean scoring;

  public static final String SERIALIZED_NAME_START_DEFENSE_SCORE = "start_defense_score";
  @SerializedName(SERIALIZED_NAME_START_DEFENSE_SCORE)
  private Integer startDefenseScore;

  public static final String SERIALIZED_NAME_START_OFFENSE_SCORE = "start_offense_score";
  @SerializedName(SERIALIZED_NAME_START_OFFENSE_SCORE)
  private Integer startOffenseScore;

  public static final String SERIALIZED_NAME_START_PERIOD = "start_period";
  @SerializedName(SERIALIZED_NAME_START_PERIOD)
  private Integer startPeriod;

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private DriveEndTime startTime;

  public static final String SERIALIZED_NAME_START_YARDLINE = "start_yardline";
  @SerializedName(SERIALIZED_NAME_START_YARDLINE)
  private Integer startYardline;

  public static final String SERIALIZED_NAME_START_YARDS_TO_GOAL = "start_yards_to_goal";
  @SerializedName(SERIALIZED_NAME_START_YARDS_TO_GOAL)
  private Integer startYardsToGoal;

  public static final String SERIALIZED_NAME_YARDS = "yards";
  @SerializedName(SERIALIZED_NAME_YARDS)
  private Integer yards;

  public Drive() {
  }

  public Drive defense(String defense) {
    this.defense = defense;
    return this;
  }

  /**
   * Get defense
   * @return defense
   */
  @javax.annotation.Nullable
  public String getDefense() {
    return defense;
  }

  public void setDefense(String defense) {
    this.defense = defense;
  }


  public Drive defenseConference(String defenseConference) {
    this.defenseConference = defenseConference;
    return this;
  }

  /**
   * Get defenseConference
   * @return defenseConference
   */
  @javax.annotation.Nullable
  public String getDefenseConference() {
    return defenseConference;
  }

  public void setDefenseConference(String defenseConference) {
    this.defenseConference = defenseConference;
  }


  public Drive driveNumber(Integer driveNumber) {
    this.driveNumber = driveNumber;
    return this;
  }

  /**
   * Get driveNumber
   * @return driveNumber
   */
  @javax.annotation.Nullable
  public Integer getDriveNumber() {
    return driveNumber;
  }

  public void setDriveNumber(Integer driveNumber) {
    this.driveNumber = driveNumber;
  }


  public Drive driveResult(String driveResult) {
    this.driveResult = driveResult;
    return this;
  }

  /**
   * Get driveResult
   * @return driveResult
   */
  @javax.annotation.Nullable
  public String getDriveResult() {
    return driveResult;
  }

  public void setDriveResult(String driveResult) {
    this.driveResult = driveResult;
  }


  public Drive endDefenseScore(Integer endDefenseScore) {
    this.endDefenseScore = endDefenseScore;
    return this;
  }

  /**
   * Get endDefenseScore
   * @return endDefenseScore
   */
  @javax.annotation.Nullable
  public Integer getEndDefenseScore() {
    return endDefenseScore;
  }

  public void setEndDefenseScore(Integer endDefenseScore) {
    this.endDefenseScore = endDefenseScore;
  }


  public Drive endOffenseScore(Integer endOffenseScore) {
    this.endOffenseScore = endOffenseScore;
    return this;
  }

  /**
   * Get endOffenseScore
   * @return endOffenseScore
   */
  @javax.annotation.Nullable
  public Integer getEndOffenseScore() {
    return endOffenseScore;
  }

  public void setEndOffenseScore(Integer endOffenseScore) {
    this.endOffenseScore = endOffenseScore;
  }


  public Drive endPeriod(Integer endPeriod) {
    this.endPeriod = endPeriod;
    return this;
  }

  /**
   * Get endPeriod
   * @return endPeriod
   */
  @javax.annotation.Nullable
  public Integer getEndPeriod() {
    return endPeriod;
  }

  public void setEndPeriod(Integer endPeriod) {
    this.endPeriod = endPeriod;
  }


  public Drive endTime(DriveEndTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public DriveEndTime getEndTime() {
    return endTime;
  }

  public void setEndTime(DriveEndTime endTime) {
    this.endTime = endTime;
  }


  public Drive endYardline(Integer endYardline) {
    this.endYardline = endYardline;
    return this;
  }

  /**
   * Get endYardline
   * @return endYardline
   */
  @javax.annotation.Nullable
  public Integer getEndYardline() {
    return endYardline;
  }

  public void setEndYardline(Integer endYardline) {
    this.endYardline = endYardline;
  }


  public Drive endYardsToGoal(Integer endYardsToGoal) {
    this.endYardsToGoal = endYardsToGoal;
    return this;
  }

  /**
   * Get endYardsToGoal
   * @return endYardsToGoal
   */
  @javax.annotation.Nullable
  public Integer getEndYardsToGoal() {
    return endYardsToGoal;
  }

  public void setEndYardsToGoal(Integer endYardsToGoal) {
    this.endYardsToGoal = endYardsToGoal;
  }


  public Drive gameId(Integer gameId) {
    this.gameId = gameId;
    return this;
  }

  /**
   * Get gameId
   * @return gameId
   */
  @javax.annotation.Nullable
  public Integer getGameId() {
    return gameId;
  }

  public void setGameId(Integer gameId) {
    this.gameId = gameId;
  }


  public Drive id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public Drive isHomeOffense(Boolean isHomeOffense) {
    this.isHomeOffense = isHomeOffense;
    return this;
  }

  /**
   * Get isHomeOffense
   * @return isHomeOffense
   */
  @javax.annotation.Nullable
  public Boolean getIsHomeOffense() {
    return isHomeOffense;
  }

  public void setIsHomeOffense(Boolean isHomeOffense) {
    this.isHomeOffense = isHomeOffense;
  }


  public Drive offense(String offense) {
    this.offense = offense;
    return this;
  }

  /**
   * Get offense
   * @return offense
   */
  @javax.annotation.Nullable
  public String getOffense() {
    return offense;
  }

  public void setOffense(String offense) {
    this.offense = offense;
  }


  public Drive offenseConference(String offenseConference) {
    this.offenseConference = offenseConference;
    return this;
  }

  /**
   * Get offenseConference
   * @return offenseConference
   */
  @javax.annotation.Nullable
  public String getOffenseConference() {
    return offenseConference;
  }

  public void setOffenseConference(String offenseConference) {
    this.offenseConference = offenseConference;
  }


  public Drive plays(Integer plays) {
    this.plays = plays;
    return this;
  }

  /**
   * Get plays
   * @return plays
   */
  @javax.annotation.Nullable
  public Integer getPlays() {
    return plays;
  }

  public void setPlays(Integer plays) {
    this.plays = plays;
  }


  public Drive scoring(Boolean scoring) {
    this.scoring = scoring;
    return this;
  }

  /**
   * Get scoring
   * @return scoring
   */
  @javax.annotation.Nullable
  public Boolean getScoring() {
    return scoring;
  }

  public void setScoring(Boolean scoring) {
    this.scoring = scoring;
  }


  public Drive startDefenseScore(Integer startDefenseScore) {
    this.startDefenseScore = startDefenseScore;
    return this;
  }

  /**
   * Get startDefenseScore
   * @return startDefenseScore
   */
  @javax.annotation.Nullable
  public Integer getStartDefenseScore() {
    return startDefenseScore;
  }

  public void setStartDefenseScore(Integer startDefenseScore) {
    this.startDefenseScore = startDefenseScore;
  }


  public Drive startOffenseScore(Integer startOffenseScore) {
    this.startOffenseScore = startOffenseScore;
    return this;
  }

  /**
   * Get startOffenseScore
   * @return startOffenseScore
   */
  @javax.annotation.Nullable
  public Integer getStartOffenseScore() {
    return startOffenseScore;
  }

  public void setStartOffenseScore(Integer startOffenseScore) {
    this.startOffenseScore = startOffenseScore;
  }


  public Drive startPeriod(Integer startPeriod) {
    this.startPeriod = startPeriod;
    return this;
  }

  /**
   * Get startPeriod
   * @return startPeriod
   */
  @javax.annotation.Nullable
  public Integer getStartPeriod() {
    return startPeriod;
  }

  public void setStartPeriod(Integer startPeriod) {
    this.startPeriod = startPeriod;
  }


  public Drive startTime(DriveEndTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public DriveEndTime getStartTime() {
    return startTime;
  }

  public void setStartTime(DriveEndTime startTime) {
    this.startTime = startTime;
  }


  public Drive startYardline(Integer startYardline) {
    this.startYardline = startYardline;
    return this;
  }

  /**
   * Get startYardline
   * @return startYardline
   */
  @javax.annotation.Nullable
  public Integer getStartYardline() {
    return startYardline;
  }

  public void setStartYardline(Integer startYardline) {
    this.startYardline = startYardline;
  }


  public Drive startYardsToGoal(Integer startYardsToGoal) {
    this.startYardsToGoal = startYardsToGoal;
    return this;
  }

  /**
   * Get startYardsToGoal
   * @return startYardsToGoal
   */
  @javax.annotation.Nullable
  public Integer getStartYardsToGoal() {
    return startYardsToGoal;
  }

  public void setStartYardsToGoal(Integer startYardsToGoal) {
    this.startYardsToGoal = startYardsToGoal;
  }


  public Drive yards(Integer yards) {
    this.yards = yards;
    return this;
  }

  /**
   * Get yards
   * @return yards
   */
  @javax.annotation.Nullable
  public Integer getYards() {
    return yards;
  }

  public void setYards(Integer yards) {
    this.yards = yards;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Drive drive = (Drive) o;
    return Objects.equals(this.defense, drive.defense) &&
        Objects.equals(this.defenseConference, drive.defenseConference) &&
        Objects.equals(this.driveNumber, drive.driveNumber) &&
        Objects.equals(this.driveResult, drive.driveResult) &&
        Objects.equals(this.endDefenseScore, drive.endDefenseScore) &&
        Objects.equals(this.endOffenseScore, drive.endOffenseScore) &&
        Objects.equals(this.endPeriod, drive.endPeriod) &&
        Objects.equals(this.endTime, drive.endTime) &&
        Objects.equals(this.endYardline, drive.endYardline) &&
        Objects.equals(this.endYardsToGoal, drive.endYardsToGoal) &&
        Objects.equals(this.gameId, drive.gameId) &&
        Objects.equals(this.id, drive.id) &&
        Objects.equals(this.isHomeOffense, drive.isHomeOffense) &&
        Objects.equals(this.offense, drive.offense) &&
        Objects.equals(this.offenseConference, drive.offenseConference) &&
        Objects.equals(this.plays, drive.plays) &&
        Objects.equals(this.scoring, drive.scoring) &&
        Objects.equals(this.startDefenseScore, drive.startDefenseScore) &&
        Objects.equals(this.startOffenseScore, drive.startOffenseScore) &&
        Objects.equals(this.startPeriod, drive.startPeriod) &&
        Objects.equals(this.startTime, drive.startTime) &&
        Objects.equals(this.startYardline, drive.startYardline) &&
        Objects.equals(this.startYardsToGoal, drive.startYardsToGoal) &&
        Objects.equals(this.yards, drive.yards);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defense, defenseConference, driveNumber, driveResult, endDefenseScore, endOffenseScore, endPeriod, endTime, endYardline, endYardsToGoal, gameId, id, isHomeOffense, offense, offenseConference, plays, scoring, startDefenseScore, startOffenseScore, startPeriod, startTime, startYardline, startYardsToGoal, yards);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Drive {\n");
    sb.append("    defense: ").append(toIndentedString(defense)).append("\n");
    sb.append("    defenseConference: ").append(toIndentedString(defenseConference)).append("\n");
    sb.append("    driveNumber: ").append(toIndentedString(driveNumber)).append("\n");
    sb.append("    driveResult: ").append(toIndentedString(driveResult)).append("\n");
    sb.append("    endDefenseScore: ").append(toIndentedString(endDefenseScore)).append("\n");
    sb.append("    endOffenseScore: ").append(toIndentedString(endOffenseScore)).append("\n");
    sb.append("    endPeriod: ").append(toIndentedString(endPeriod)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    endYardline: ").append(toIndentedString(endYardline)).append("\n");
    sb.append("    endYardsToGoal: ").append(toIndentedString(endYardsToGoal)).append("\n");
    sb.append("    gameId: ").append(toIndentedString(gameId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isHomeOffense: ").append(toIndentedString(isHomeOffense)).append("\n");
    sb.append("    offense: ").append(toIndentedString(offense)).append("\n");
    sb.append("    offenseConference: ").append(toIndentedString(offenseConference)).append("\n");
    sb.append("    plays: ").append(toIndentedString(plays)).append("\n");
    sb.append("    scoring: ").append(toIndentedString(scoring)).append("\n");
    sb.append("    startDefenseScore: ").append(toIndentedString(startDefenseScore)).append("\n");
    sb.append("    startOffenseScore: ").append(toIndentedString(startOffenseScore)).append("\n");
    sb.append("    startPeriod: ").append(toIndentedString(startPeriod)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    startYardline: ").append(toIndentedString(startYardline)).append("\n");
    sb.append("    startYardsToGoal: ").append(toIndentedString(startYardsToGoal)).append("\n");
    sb.append("    yards: ").append(toIndentedString(yards)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("defense");
    openapiFields.add("defense_conference");
    openapiFields.add("drive_number");
    openapiFields.add("drive_result");
    openapiFields.add("end_defense_score");
    openapiFields.add("end_offense_score");
    openapiFields.add("end_period");
    openapiFields.add("end_time");
    openapiFields.add("end_yardline");
    openapiFields.add("end_yards_to_goal");
    openapiFields.add("game_id");
    openapiFields.add("id");
    openapiFields.add("is_home_offense");
    openapiFields.add("offense");
    openapiFields.add("offense_conference");
    openapiFields.add("plays");
    openapiFields.add("scoring");
    openapiFields.add("start_defense_score");
    openapiFields.add("start_offense_score");
    openapiFields.add("start_period");
    openapiFields.add("start_time");
    openapiFields.add("start_yardline");
    openapiFields.add("start_yards_to_goal");
    openapiFields.add("yards");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Drive
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Drive.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Drive is not found in the empty JSON string", Drive.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Drive.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Drive` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("defense") != null && !jsonObj.get("defense").isJsonNull()) && !jsonObj.get("defense").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defense` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defense").toString()));
      }
      if ((jsonObj.get("defense_conference") != null && !jsonObj.get("defense_conference").isJsonNull()) && !jsonObj.get("defense_conference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defense_conference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defense_conference").toString()));
      }
      if ((jsonObj.get("drive_result") != null && !jsonObj.get("drive_result").isJsonNull()) && !jsonObj.get("drive_result").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `drive_result` to be a primitive type in the JSON string but got `%s`", jsonObj.get("drive_result").toString()));
      }
      // validate the optional field `end_time`
      if (jsonObj.get("end_time") != null && !jsonObj.get("end_time").isJsonNull()) {
        DriveEndTime.validateJsonElement(jsonObj.get("end_time"));
      }
      if ((jsonObj.get("offense") != null && !jsonObj.get("offense").isJsonNull()) && !jsonObj.get("offense").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offense` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offense").toString()));
      }
      if ((jsonObj.get("offense_conference") != null && !jsonObj.get("offense_conference").isJsonNull()) && !jsonObj.get("offense_conference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offense_conference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offense_conference").toString()));
      }
      // validate the optional field `start_time`
      if (jsonObj.get("start_time") != null && !jsonObj.get("start_time").isJsonNull()) {
        DriveEndTime.validateJsonElement(jsonObj.get("start_time"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Drive.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Drive' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Drive> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Drive.class));

       return (TypeAdapter<T>) new TypeAdapter<Drive>() {
           @Override
           public void write(JsonWriter out, Drive value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Drive read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Drive given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Drive
   * @throws IOException if the JSON string is invalid with respect to Drive
   */
  public static Drive fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Drive.class);
  }

  /**
   * Convert an instance of Drive to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

