/*
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.LivePlayByPlay;
import org.openapitools.client.model.Play;
import org.openapitools.client.model.PlayStat;
import org.openapitools.client.model.PlayStatType;
import org.openapitools.client.model.PlayType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PlaysApi
 */
@Disabled
public class PlaysApiTest {

    private final PlaysApi api = new PlaysApi();

    /**
     * Live metrics and PBP (Patreon only)
     *
     * Get live metrics and PBP
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLivePlaysTest() throws ApiException {
        Integer id = null;
        LivePlayByPlay response = api.getLivePlays(id);
        // TODO: test validations
    }

    /**
     * Types of player play stats
     *
     * Type of play stats
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPlayStatTypesTest() throws ApiException {
        List<PlayStatType> response = api.getPlayStatTypes();
        // TODO: test validations
    }

    /**
     * Play stats by play
     *
     * Gets player stats associated by play (limit 1000)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPlayStatsTest() throws ApiException {
        Integer year = null;
        Integer week = null;
        String team = null;
        Integer gameId = null;
        Integer athleteId = null;
        Integer statTypeId = null;
        String seasonType = null;
        String conference = null;
        List<PlayStat> response = api.getPlayStats(year, week, team, gameId, athleteId, statTypeId, seasonType, conference);
        // TODO: test validations
    }

    /**
     * Play types
     *
     * Types of plays
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPlayTypesTest() throws ApiException {
        List<PlayType> response = api.getPlayTypes();
        // TODO: test validations
    }

    /**
     * Play by play data
     *
     * Get play data and results
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPlaysTest() throws ApiException {
        Integer year = null;
        Integer week = null;
        String seasonType = null;
        String team = null;
        String offense = null;
        String defense = null;
        String conference = null;
        String offenseConference = null;
        String defenseConference = null;
        Integer playType = null;
        String classification = null;
        List<Play> response = api.getPlays(year, week, seasonType, team, offense, defense, conference, offenseConference, defenseConference, playType, classification);
        // TODO: test validations
    }

}
