/*
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.PositionGroupRecruitingRating;
import org.openapitools.client.model.Recruit;
import org.openapitools.client.model.TeamRecruitingRank;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RecruitingApi
 */
@Disabled
public class RecruitingApiTest {

    private final RecruitingApi api = new RecruitingApi();

    /**
     * Recruit position group ratings
     *
     * Gets a list of aggregated statistics by team and position grouping
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRecruitingGroupsTest() throws ApiException {
        Integer startYear = null;
        Integer endYear = null;
        String team = null;
        String conference = null;
        List<PositionGroupRecruitingRating> response = api.getRecruitingGroups(startYear, endYear, team, conference);
        // TODO: test validations
    }

    /**
     * Player recruiting ratings and rankings
     *
     * Get player recruiting rankings and data. Requires either a year or team to be specified.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRecruitingPlayersTest() throws ApiException {
        Integer year = null;
        String classification = null;
        String position = null;
        String state = null;
        String team = null;
        List<Recruit> response = api.getRecruitingPlayers(year, classification, position, state, team);
        // TODO: test validations
    }

    /**
     * Team recruiting rankings and ratings
     *
     * Team recruiting rankings
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRecruitingTeamsTest() throws ApiException {
        Integer year = null;
        String team = null;
        List<TeamRecruitingRank> response = api.getRecruitingTeams(year, team);
        // TODO: test validations
    }

}
