/*
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ConferenceSPRating;
import org.openapitools.client.model.TeamEloRating;
import org.openapitools.client.model.TeamSPRating;
import org.openapitools.client.model.TeamSRSRating;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RatingsApi
 */
@Disabled
public class RatingsApiTest {

    private final RatingsApi api = new RatingsApi();

    /**
     * Historical SP+ ratings by conference
     *
     * Get average SP+ historical rating data by conference
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConferenceSPRatingsTest() throws ApiException {
        Integer year = null;
        String conference = null;
        List<ConferenceSPRating> response = api.getConferenceSPRatings(year, conference);
        // TODO: test validations
    }

    /**
     * Historical Elo ratings
     *
     * Elo rating data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEloRatingsTest() throws ApiException {
        Integer year = null;
        Integer week = null;
        String team = null;
        String conference = null;
        List<TeamEloRating> response = api.getEloRatings(year, week, team, conference);
        // TODO: test validations
    }

    /**
     * Historical SP+ ratings
     *
     * SP+ rating data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSPRatingsTest() throws ApiException {
        Integer year = null;
        String team = null;
        List<TeamSPRating> response = api.getSPRatings(year, team);
        // TODO: test validations
    }

    /**
     * Historical SRS ratings
     *
     * SRS rating data (requires either a year or team specified)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSRSRatingsTest() throws ApiException {
        Integer year = null;
        String team = null;
        String conference = null;
        List<TeamSRSRating> response = api.getSRSRatings(year, team, conference);
        // TODO: test validations
    }

}
