/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CollegeFootballDataApi);
  }
}(this, function(expect, CollegeFootballDataApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CollegeFootballDataApi.PlayersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PlayersApi', function() {
    describe('getPlayerSeasonStats', function() {
      it('should call getPlayerSeasonStats successfully', function(done) {
        //uncomment below and update the code to test getPlayerSeasonStats
        //instance.getPlayerSeasonStats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPlayerUsage', function() {
      it('should call getPlayerUsage successfully', function(done) {
        //uncomment below and update the code to test getPlayerUsage
        //instance.getPlayerUsage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReturningProduction', function() {
      it('should call getReturningProduction successfully', function(done) {
        //uncomment below and update the code to test getReturningProduction
        //instance.getReturningProduction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransferPortal', function() {
      it('should call getTransferPortal successfully', function(done) {
        //uncomment below and update the code to test getTransferPortal
        //instance.getTransferPortal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerSearch', function() {
      it('should call playerSearch successfully', function(done) {
        //uncomment below and update the code to test playerSearch
        //instance.playerSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
