/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Venue from '../model/Venue';

/**
* Venues service.
* @module api/VenuesApi
* @version 4.4.12
*/
export default class VenuesApi {

    /**
    * Constructs a new VenuesApi. 
    * @alias module:api/VenuesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getVenues operation.
     * @callback module:api/VenuesApi~getVenuesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Venue>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Arena and venue information
     * Venues
     * @param {module:api/VenuesApi~getVenuesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Venue>}
     */
    getVenues(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Venue];
      return this.apiClient.callApi(
        '/venues', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
