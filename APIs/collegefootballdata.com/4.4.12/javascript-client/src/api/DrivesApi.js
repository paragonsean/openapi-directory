/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Drive from '../model/Drive';

/**
* Drives service.
* @module api/DrivesApi
* @version 4.4.12
*/
export default class DrivesApi {

    /**
    * Constructs a new DrivesApi. 
    * @alias module:api/DrivesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getDrives operation.
     * @callback module:api/DrivesApi~getDrivesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Drive>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Drive data and results
     * Get game drives
     * @param {Number} year Year filter
     * @param {Object} opts Optional parameters
     * @param {String} [seasonType = 'regular')] Season type filter
     * @param {Number} [week] Week filter
     * @param {String} [team] Team filter
     * @param {String} [offense] Offensive team filter
     * @param {String} [defense] Defensive team filter
     * @param {String} [conference] Conference filter
     * @param {String} [offenseConference] Offensive conference filter
     * @param {String} [defenseConference] Defensive conference filter
     * @param {String} [classification] Division classification filter (fbs/fcs/ii/iii)
     * @param {module:api/DrivesApi~getDrivesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Drive>}
     */
    getDrives(year, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'year' is set
      if (year === undefined || year === null) {
        throw new Error("Missing the required parameter 'year' when calling getDrives");
      }

      let pathParams = {
      };
      let queryParams = {
        'seasonType': opts['seasonType'],
        'year': year,
        'week': opts['week'],
        'team': opts['team'],
        'offense': opts['offense'],
        'defense': opts['defense'],
        'conference': opts['conference'],
        'offenseConference': opts['offenseConference'],
        'defenseConference': opts['defenseConference'],
        'classification': opts['classification']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Drive];
      return this.apiClient.callApi(
        '/drives', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
