/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DraftPick from '../model/DraftPick';
import DraftPosition from '../model/DraftPosition';
import DraftTeam from '../model/DraftTeam';

/**
* Draft service.
* @module api/DraftApi
* @version 4.4.12
*/
export default class DraftApi {

    /**
    * Constructs a new DraftApi. 
    * @alias module:api/DraftApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getDraftPicks operation.
     * @callback module:api/DraftApi~getDraftPicksCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DraftPick>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List of NFL Draft picks
     * List of NFL Draft picks
     * @param {Object} opts Optional parameters
     * @param {Number} [year] Year filter
     * @param {String} [nflTeam] NFL team filter
     * @param {String} [college] Player college filter
     * @param {String} [conference] College confrence abbreviation filter
     * @param {String} [position] NFL position filter
     * @param {module:api/DraftApi~getDraftPicksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DraftPick>}
     */
    getDraftPicks(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'year': opts['year'],
        'nflTeam': opts['nflTeam'],
        'college': opts['college'],
        'conference': opts['conference'],
        'position': opts['position']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [DraftPick];
      return this.apiClient.callApi(
        '/draft/picks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNFLPositions operation.
     * @callback module:api/DraftApi~getNFLPositionsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DraftPosition>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List of NFL positions
     * List of NFL positions
     * @param {module:api/DraftApi~getNFLPositionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DraftPosition>}
     */
    getNFLPositions(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [DraftPosition];
      return this.apiClient.callApi(
        '/draft/positions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNFLTeams operation.
     * @callback module:api/DraftApi~getNFLTeamsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DraftTeam>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List of NFL teams
     * List of NFL teams
     * @param {module:api/DraftApi~getNFLTeamsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DraftTeam>}
     */
    getNFLTeams(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [DraftTeam];
      return this.apiClient.callApi(
        '/draft/teams', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
