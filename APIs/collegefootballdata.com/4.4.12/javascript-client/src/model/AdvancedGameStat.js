/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdvancedGameStatDefense from './AdvancedGameStatDefense';

/**
 * The AdvancedGameStat model module.
 * @module model/AdvancedGameStat
 * @version 4.4.12
 */
class AdvancedGameStat {
    /**
     * Constructs a new <code>AdvancedGameStat</code>.
     * @alias module:model/AdvancedGameStat
     */
    constructor() { 
        
        AdvancedGameStat.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdvancedGameStat</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdvancedGameStat} obj Optional instance to populate.
     * @return {module:model/AdvancedGameStat} The populated <code>AdvancedGameStat</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdvancedGameStat();

            if (data.hasOwnProperty('defense')) {
                obj['defense'] = AdvancedGameStatDefense.constructFromObject(data['defense']);
            }
            if (data.hasOwnProperty('gameId')) {
                obj['gameId'] = ApiClient.convertToType(data['gameId'], 'Number');
            }
            if (data.hasOwnProperty('offense')) {
                obj['offense'] = AdvancedGameStatDefense.constructFromObject(data['offense']);
            }
            if (data.hasOwnProperty('opponent')) {
                obj['opponent'] = ApiClient.convertToType(data['opponent'], 'String');
            }
            if (data.hasOwnProperty('season')) {
                obj['season'] = ApiClient.convertToType(data['season'], 'Number');
            }
            if (data.hasOwnProperty('team')) {
                obj['team'] = ApiClient.convertToType(data['team'], 'String');
            }
            if (data.hasOwnProperty('week')) {
                obj['week'] = ApiClient.convertToType(data['week'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdvancedGameStat</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdvancedGameStat</code>.
     */
    static validateJSON(data) {
        // validate the optional field `defense`
        if (data['defense']) { // data not null
          AdvancedGameStatDefense.validateJSON(data['defense']);
        }
        // validate the optional field `offense`
        if (data['offense']) { // data not null
          AdvancedGameStatDefense.validateJSON(data['offense']);
        }
        // ensure the json data is a string
        if (data['opponent'] && !(typeof data['opponent'] === 'string' || data['opponent'] instanceof String)) {
            throw new Error("Expected the field `opponent` to be a primitive type in the JSON string but got " + data['opponent']);
        }
        // ensure the json data is a string
        if (data['team'] && !(typeof data['team'] === 'string' || data['team'] instanceof String)) {
            throw new Error("Expected the field `team` to be a primitive type in the JSON string but got " + data['team']);
        }

        return true;
    }


}



/**
 * @member {module:model/AdvancedGameStatDefense} defense
 */
AdvancedGameStat.prototype['defense'] = undefined;

/**
 * @member {Number} gameId
 */
AdvancedGameStat.prototype['gameId'] = undefined;

/**
 * @member {module:model/AdvancedGameStatDefense} offense
 */
AdvancedGameStat.prototype['offense'] = undefined;

/**
 * @member {String} opponent
 */
AdvancedGameStat.prototype['opponent'] = undefined;

/**
 * @member {Number} season
 */
AdvancedGameStat.prototype['season'] = undefined;

/**
 * @member {String} team
 */
AdvancedGameStat.prototype['team'] = undefined;

/**
 * @member {Number} week
 */
AdvancedGameStat.prototype['week'] = undefined;






export default AdvancedGameStat;

