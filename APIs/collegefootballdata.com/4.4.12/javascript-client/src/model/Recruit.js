/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RecruitHometownInfo from './RecruitHometownInfo';

/**
 * The Recruit model module.
 * @module model/Recruit
 * @version 4.4.12
 */
class Recruit {
    /**
     * Constructs a new <code>Recruit</code>.
     * @alias module:model/Recruit
     */
    constructor() { 
        
        Recruit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Recruit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Recruit} obj Optional instance to populate.
     * @return {module:model/Recruit} The populated <code>Recruit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Recruit();

            if (data.hasOwnProperty('athleteId')) {
                obj['athleteId'] = ApiClient.convertToType(data['athleteId'], 'Number');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('committedTo')) {
                obj['committedTo'] = ApiClient.convertToType(data['committedTo'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('hometownInfo')) {
                obj['hometownInfo'] = RecruitHometownInfo.constructFromObject(data['hometownInfo']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'String');
            }
            if (data.hasOwnProperty('ranking')) {
                obj['ranking'] = ApiClient.convertToType(data['ranking'], 'Number');
            }
            if (data.hasOwnProperty('rating')) {
                obj['rating'] = ApiClient.convertToType(data['rating'], 'Number');
            }
            if (data.hasOwnProperty('recruitType')) {
                obj['recruitType'] = ApiClient.convertToType(data['recruitType'], 'String');
            }
            if (data.hasOwnProperty('school')) {
                obj['school'] = ApiClient.convertToType(data['school'], 'String');
            }
            if (data.hasOwnProperty('stars')) {
                obj['stars'] = ApiClient.convertToType(data['stars'], 'Number');
            }
            if (data.hasOwnProperty('stateProvince')) {
                obj['stateProvince'] = ApiClient.convertToType(data['stateProvince'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
            if (data.hasOwnProperty('year')) {
                obj['year'] = ApiClient.convertToType(data['year'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Recruit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Recruit</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // ensure the json data is a string
        if (data['committedTo'] && !(typeof data['committedTo'] === 'string' || data['committedTo'] instanceof String)) {
            throw new Error("Expected the field `committedTo` to be a primitive type in the JSON string but got " + data['committedTo']);
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // validate the optional field `hometownInfo`
        if (data['hometownInfo']) { // data not null
          RecruitHometownInfo.validateJSON(data['hometownInfo']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['position'] && !(typeof data['position'] === 'string' || data['position'] instanceof String)) {
            throw new Error("Expected the field `position` to be a primitive type in the JSON string but got " + data['position']);
        }
        // ensure the json data is a string
        if (data['recruitType'] && !(typeof data['recruitType'] === 'string' || data['recruitType'] instanceof String)) {
            throw new Error("Expected the field `recruitType` to be a primitive type in the JSON string but got " + data['recruitType']);
        }
        // ensure the json data is a string
        if (data['school'] && !(typeof data['school'] === 'string' || data['school'] instanceof String)) {
            throw new Error("Expected the field `school` to be a primitive type in the JSON string but got " + data['school']);
        }
        // ensure the json data is a string
        if (data['stateProvince'] && !(typeof data['stateProvince'] === 'string' || data['stateProvince'] instanceof String)) {
            throw new Error("Expected the field `stateProvince` to be a primitive type in the JSON string but got " + data['stateProvince']);
        }

        return true;
    }


}



/**
 * @member {Number} athleteId
 */
Recruit.prototype['athleteId'] = undefined;

/**
 * @member {String} city
 */
Recruit.prototype['city'] = undefined;

/**
 * @member {String} committedTo
 */
Recruit.prototype['committedTo'] = undefined;

/**
 * @member {String} country
 */
Recruit.prototype['country'] = undefined;

/**
 * @member {Number} height
 */
Recruit.prototype['height'] = undefined;

/**
 * @member {module:model/RecruitHometownInfo} hometownInfo
 */
Recruit.prototype['hometownInfo'] = undefined;

/**
 * @member {Number} id
 */
Recruit.prototype['id'] = undefined;

/**
 * @member {String} name
 */
Recruit.prototype['name'] = undefined;

/**
 * @member {String} position
 */
Recruit.prototype['position'] = undefined;

/**
 * @member {Number} ranking
 */
Recruit.prototype['ranking'] = undefined;

/**
 * @member {Number} rating
 */
Recruit.prototype['rating'] = undefined;

/**
 * @member {String} recruitType
 */
Recruit.prototype['recruitType'] = undefined;

/**
 * @member {String} school
 */
Recruit.prototype['school'] = undefined;

/**
 * @member {Number} stars
 */
Recruit.prototype['stars'] = undefined;

/**
 * @member {String} stateProvince
 */
Recruit.prototype['stateProvince'] = undefined;

/**
 * @member {Number} weight
 */
Recruit.prototype['weight'] = undefined;

/**
 * @member {Number} year
 */
Recruit.prototype['year'] = undefined;






export default Recruit;

