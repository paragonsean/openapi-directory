/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PortalPlayer model module.
 * @module model/PortalPlayer
 * @version 4.4.12
 */
class PortalPlayer {
    /**
     * Constructs a new <code>PortalPlayer</code>.
     * @alias module:model/PortalPlayer
     */
    constructor() { 
        
        PortalPlayer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PortalPlayer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PortalPlayer} obj Optional instance to populate.
     * @return {module:model/PortalPlayer} The populated <code>PortalPlayer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PortalPlayer();

            if (data.hasOwnProperty('destination')) {
                obj['destination'] = ApiClient.convertToType(data['destination'], 'String');
            }
            if (data.hasOwnProperty('eligibility')) {
                obj['eligibility'] = ApiClient.convertToType(data['eligibility'], 'String');
            }
            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('origin')) {
                obj['origin'] = ApiClient.convertToType(data['origin'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'String');
            }
            if (data.hasOwnProperty('rating')) {
                obj['rating'] = ApiClient.convertToType(data['rating'], 'Number');
            }
            if (data.hasOwnProperty('season')) {
                obj['season'] = ApiClient.convertToType(data['season'], 'Number');
            }
            if (data.hasOwnProperty('stars')) {
                obj['stars'] = ApiClient.convertToType(data['stars'], 'Number');
            }
            if (data.hasOwnProperty('transferDate')) {
                obj['transferDate'] = ApiClient.convertToType(data['transferDate'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PortalPlayer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PortalPlayer</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['destination'] && !(typeof data['destination'] === 'string' || data['destination'] instanceof String)) {
            throw new Error("Expected the field `destination` to be a primitive type in the JSON string but got " + data['destination']);
        }
        // ensure the json data is a string
        if (data['eligibility'] && !(typeof data['eligibility'] === 'string' || data['eligibility'] instanceof String)) {
            throw new Error("Expected the field `eligibility` to be a primitive type in the JSON string but got " + data['eligibility']);
        }
        // ensure the json data is a string
        if (data['firstName'] && !(typeof data['firstName'] === 'string' || data['firstName'] instanceof String)) {
            throw new Error("Expected the field `firstName` to be a primitive type in the JSON string but got " + data['firstName']);
        }
        // ensure the json data is a string
        if (data['lastName'] && !(typeof data['lastName'] === 'string' || data['lastName'] instanceof String)) {
            throw new Error("Expected the field `lastName` to be a primitive type in the JSON string but got " + data['lastName']);
        }
        // ensure the json data is a string
        if (data['origin'] && !(typeof data['origin'] === 'string' || data['origin'] instanceof String)) {
            throw new Error("Expected the field `origin` to be a primitive type in the JSON string but got " + data['origin']);
        }
        // ensure the json data is a string
        if (data['position'] && !(typeof data['position'] === 'string' || data['position'] instanceof String)) {
            throw new Error("Expected the field `position` to be a primitive type in the JSON string but got " + data['position']);
        }
        // ensure the json data is a string
        if (data['transferDate'] && !(typeof data['transferDate'] === 'string' || data['transferDate'] instanceof String)) {
            throw new Error("Expected the field `transferDate` to be a primitive type in the JSON string but got " + data['transferDate']);
        }

        return true;
    }


}



/**
 * @member {String} destination
 */
PortalPlayer.prototype['destination'] = undefined;

/**
 * @member {String} eligibility
 */
PortalPlayer.prototype['eligibility'] = undefined;

/**
 * @member {String} firstName
 */
PortalPlayer.prototype['firstName'] = undefined;

/**
 * @member {String} lastName
 */
PortalPlayer.prototype['lastName'] = undefined;

/**
 * @member {String} origin
 */
PortalPlayer.prototype['origin'] = undefined;

/**
 * @member {String} position
 */
PortalPlayer.prototype['position'] = undefined;

/**
 * @member {Number} rating
 */
PortalPlayer.prototype['rating'] = undefined;

/**
 * @member {Number} season
 */
PortalPlayer.prototype['season'] = undefined;

/**
 * @member {Number} stars
 */
PortalPlayer.prototype['stars'] = undefined;

/**
 * @member {String} transferDate
 */
PortalPlayer.prototype['transferDate'] = undefined;






export default PortalPlayer;

