/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DraftPickHometownInfo from './DraftPickHometownInfo';

/**
 * The DraftPick model module.
 * @module model/DraftPick
 * @version 4.4.12
 */
class DraftPick {
    /**
     * Constructs a new <code>DraftPick</code>.
     * @alias module:model/DraftPick
     */
    constructor() { 
        
        DraftPick.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DraftPick</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DraftPick} obj Optional instance to populate.
     * @return {module:model/DraftPick} The populated <code>DraftPick</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DraftPick();

            if (data.hasOwnProperty('collegeAthleteId')) {
                obj['collegeAthleteId'] = ApiClient.convertToType(data['collegeAthleteId'], 'Number');
            }
            if (data.hasOwnProperty('collegeConference')) {
                obj['collegeConference'] = ApiClient.convertToType(data['collegeConference'], 'String');
            }
            if (data.hasOwnProperty('collegeId')) {
                obj['collegeId'] = ApiClient.convertToType(data['collegeId'], 'Number');
            }
            if (data.hasOwnProperty('collegeTeam')) {
                obj['collegeTeam'] = ApiClient.convertToType(data['collegeTeam'], 'String');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('hometownInfo')) {
                obj['hometownInfo'] = DraftPickHometownInfo.constructFromObject(data['hometownInfo']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('nflAthleteId')) {
                obj['nflAthleteId'] = ApiClient.convertToType(data['nflAthleteId'], 'Number');
            }
            if (data.hasOwnProperty('nflTeam')) {
                obj['nflTeam'] = ApiClient.convertToType(data['nflTeam'], 'String');
            }
            if (data.hasOwnProperty('overall')) {
                obj['overall'] = ApiClient.convertToType(data['overall'], 'Number');
            }
            if (data.hasOwnProperty('pick')) {
                obj['pick'] = ApiClient.convertToType(data['pick'], 'Number');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'String');
            }
            if (data.hasOwnProperty('preDraftGrade')) {
                obj['preDraftGrade'] = ApiClient.convertToType(data['preDraftGrade'], 'Number');
            }
            if (data.hasOwnProperty('preDraftPositionRanking')) {
                obj['preDraftPositionRanking'] = ApiClient.convertToType(data['preDraftPositionRanking'], 'Number');
            }
            if (data.hasOwnProperty('preDraftRanking')) {
                obj['preDraftRanking'] = ApiClient.convertToType(data['preDraftRanking'], 'Number');
            }
            if (data.hasOwnProperty('round')) {
                obj['round'] = ApiClient.convertToType(data['round'], 'Number');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
            if (data.hasOwnProperty('year')) {
                obj['year'] = ApiClient.convertToType(data['year'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DraftPick</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DraftPick</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['collegeConference'] && !(typeof data['collegeConference'] === 'string' || data['collegeConference'] instanceof String)) {
            throw new Error("Expected the field `collegeConference` to be a primitive type in the JSON string but got " + data['collegeConference']);
        }
        // ensure the json data is a string
        if (data['collegeTeam'] && !(typeof data['collegeTeam'] === 'string' || data['collegeTeam'] instanceof String)) {
            throw new Error("Expected the field `collegeTeam` to be a primitive type in the JSON string but got " + data['collegeTeam']);
        }
        // validate the optional field `hometownInfo`
        if (data['hometownInfo']) { // data not null
          DraftPickHometownInfo.validateJSON(data['hometownInfo']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['nflTeam'] && !(typeof data['nflTeam'] === 'string' || data['nflTeam'] instanceof String)) {
            throw new Error("Expected the field `nflTeam` to be a primitive type in the JSON string but got " + data['nflTeam']);
        }
        // ensure the json data is a string
        if (data['position'] && !(typeof data['position'] === 'string' || data['position'] instanceof String)) {
            throw new Error("Expected the field `position` to be a primitive type in the JSON string but got " + data['position']);
        }

        return true;
    }


}



/**
 * @member {Number} collegeAthleteId
 */
DraftPick.prototype['collegeAthleteId'] = undefined;

/**
 * @member {String} collegeConference
 */
DraftPick.prototype['collegeConference'] = undefined;

/**
 * @member {Number} collegeId
 */
DraftPick.prototype['collegeId'] = undefined;

/**
 * @member {String} collegeTeam
 */
DraftPick.prototype['collegeTeam'] = undefined;

/**
 * @member {Number} height
 */
DraftPick.prototype['height'] = undefined;

/**
 * @member {module:model/DraftPickHometownInfo} hometownInfo
 */
DraftPick.prototype['hometownInfo'] = undefined;

/**
 * @member {String} name
 */
DraftPick.prototype['name'] = undefined;

/**
 * @member {Number} nflAthleteId
 */
DraftPick.prototype['nflAthleteId'] = undefined;

/**
 * @member {String} nflTeam
 */
DraftPick.prototype['nflTeam'] = undefined;

/**
 * @member {Number} overall
 */
DraftPick.prototype['overall'] = undefined;

/**
 * @member {Number} pick
 */
DraftPick.prototype['pick'] = undefined;

/**
 * @member {String} position
 */
DraftPick.prototype['position'] = undefined;

/**
 * @member {Number} preDraftGrade
 */
DraftPick.prototype['preDraftGrade'] = undefined;

/**
 * @member {Number} preDraftPositionRanking
 */
DraftPick.prototype['preDraftPositionRanking'] = undefined;

/**
 * @member {Number} preDraftRanking
 */
DraftPick.prototype['preDraftRanking'] = undefined;

/**
 * @member {Number} round
 */
DraftPick.prototype['round'] = undefined;

/**
 * @member {Number} weight
 */
DraftPick.prototype['weight'] = undefined;

/**
 * @member {Number} year
 */
DraftPick.prototype['year'] = undefined;






export default DraftPick;

