/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RankingWeekPollsInner from './RankingWeekPollsInner';

/**
 * The RankingWeek model module.
 * @module model/RankingWeek
 * @version 4.4.12
 */
class RankingWeek {
    /**
     * Constructs a new <code>RankingWeek</code>.
     * @alias module:model/RankingWeek
     */
    constructor() { 
        
        RankingWeek.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RankingWeek</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RankingWeek} obj Optional instance to populate.
     * @return {module:model/RankingWeek} The populated <code>RankingWeek</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RankingWeek();

            if (data.hasOwnProperty('polls')) {
                obj['polls'] = ApiClient.convertToType(data['polls'], [RankingWeekPollsInner]);
            }
            if (data.hasOwnProperty('season')) {
                obj['season'] = ApiClient.convertToType(data['season'], 'Number');
            }
            if (data.hasOwnProperty('seasonType')) {
                obj['seasonType'] = ApiClient.convertToType(data['seasonType'], 'String');
            }
            if (data.hasOwnProperty('week')) {
                obj['week'] = ApiClient.convertToType(data['week'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RankingWeek</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RankingWeek</code>.
     */
    static validateJSON(data) {
        if (data['polls']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['polls'])) {
                throw new Error("Expected the field `polls` to be an array in the JSON data but got " + data['polls']);
            }
            // validate the optional field `polls` (array)
            for (const item of data['polls']) {
                RankingWeekPollsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['seasonType'] && !(typeof data['seasonType'] === 'string' || data['seasonType'] instanceof String)) {
            throw new Error("Expected the field `seasonType` to be a primitive type in the JSON string but got " + data['seasonType']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/RankingWeekPollsInner>} polls
 */
RankingWeek.prototype['polls'] = undefined;

/**
 * @member {Number} season
 */
RankingWeek.prototype['season'] = undefined;

/**
 * @member {String} seasonType
 */
RankingWeek.prototype['seasonType'] = undefined;

/**
 * @member {Number} week
 */
RankingWeek.prototype['week'] = undefined;






export default RankingWeek;

