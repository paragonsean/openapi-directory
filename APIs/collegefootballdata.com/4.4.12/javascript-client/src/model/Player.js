/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Player model module.
 * @module model/Player
 * @version 4.4.12
 */
class Player {
    /**
     * Constructs a new <code>Player</code>.
     * @alias module:model/Player
     */
    constructor() { 
        
        Player.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Player</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Player} obj Optional instance to populate.
     * @return {module:model/Player} The populated <code>Player</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Player();

            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('home_city')) {
                obj['home_city'] = ApiClient.convertToType(data['home_city'], 'String');
            }
            if (data.hasOwnProperty('home_country')) {
                obj['home_country'] = ApiClient.convertToType(data['home_country'], 'String');
            }
            if (data.hasOwnProperty('home_county_fips')) {
                obj['home_county_fips'] = ApiClient.convertToType(data['home_county_fips'], 'String');
            }
            if (data.hasOwnProperty('home_latitude')) {
                obj['home_latitude'] = ApiClient.convertToType(data['home_latitude'], 'Number');
            }
            if (data.hasOwnProperty('home_longitude')) {
                obj['home_longitude'] = ApiClient.convertToType(data['home_longitude'], 'Number');
            }
            if (data.hasOwnProperty('home_state')) {
                obj['home_state'] = ApiClient.convertToType(data['home_state'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('jersey')) {
                obj['jersey'] = ApiClient.convertToType(data['jersey'], 'Number');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'String');
            }
            if (data.hasOwnProperty('recruit_ids')) {
                obj['recruit_ids'] = ApiClient.convertToType(data['recruit_ids'], ['Number']);
            }
            if (data.hasOwnProperty('team')) {
                obj['team'] = ApiClient.convertToType(data['team'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
            if (data.hasOwnProperty('year')) {
                obj['year'] = ApiClient.convertToType(data['year'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Player</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Player</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['home_city'] && !(typeof data['home_city'] === 'string' || data['home_city'] instanceof String)) {
            throw new Error("Expected the field `home_city` to be a primitive type in the JSON string but got " + data['home_city']);
        }
        // ensure the json data is a string
        if (data['home_country'] && !(typeof data['home_country'] === 'string' || data['home_country'] instanceof String)) {
            throw new Error("Expected the field `home_country` to be a primitive type in the JSON string but got " + data['home_country']);
        }
        // ensure the json data is a string
        if (data['home_county_fips'] && !(typeof data['home_county_fips'] === 'string' || data['home_county_fips'] instanceof String)) {
            throw new Error("Expected the field `home_county_fips` to be a primitive type in the JSON string but got " + data['home_county_fips']);
        }
        // ensure the json data is a string
        if (data['home_state'] && !(typeof data['home_state'] === 'string' || data['home_state'] instanceof String)) {
            throw new Error("Expected the field `home_state` to be a primitive type in the JSON string but got " + data['home_state']);
        }
        // ensure the json data is a string
        if (data['last_name'] && !(typeof data['last_name'] === 'string' || data['last_name'] instanceof String)) {
            throw new Error("Expected the field `last_name` to be a primitive type in the JSON string but got " + data['last_name']);
        }
        // ensure the json data is a string
        if (data['position'] && !(typeof data['position'] === 'string' || data['position'] instanceof String)) {
            throw new Error("Expected the field `position` to be a primitive type in the JSON string but got " + data['position']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['recruit_ids'])) {
            throw new Error("Expected the field `recruit_ids` to be an array in the JSON data but got " + data['recruit_ids']);
        }
        // ensure the json data is a string
        if (data['team'] && !(typeof data['team'] === 'string' || data['team'] instanceof String)) {
            throw new Error("Expected the field `team` to be a primitive type in the JSON string but got " + data['team']);
        }

        return true;
    }


}



/**
 * @member {String} first_name
 */
Player.prototype['first_name'] = undefined;

/**
 * @member {Number} height
 */
Player.prototype['height'] = undefined;

/**
 * @member {String} home_city
 */
Player.prototype['home_city'] = undefined;

/**
 * @member {String} home_country
 */
Player.prototype['home_country'] = undefined;

/**
 * @member {String} home_county_fips
 */
Player.prototype['home_county_fips'] = undefined;

/**
 * @member {Number} home_latitude
 */
Player.prototype['home_latitude'] = undefined;

/**
 * @member {Number} home_longitude
 */
Player.prototype['home_longitude'] = undefined;

/**
 * @member {String} home_state
 */
Player.prototype['home_state'] = undefined;

/**
 * @member {Number} id
 */
Player.prototype['id'] = undefined;

/**
 * @member {Number} jersey
 */
Player.prototype['jersey'] = undefined;

/**
 * @member {String} last_name
 */
Player.prototype['last_name'] = undefined;

/**
 * @member {String} position
 */
Player.prototype['position'] = undefined;

/**
 * @member {Array.<Number>} recruit_ids
 */
Player.prototype['recruit_ids'] = undefined;

/**
 * @member {String} team
 */
Player.prototype['team'] = undefined;

/**
 * @member {Number} weight
 */
Player.prototype['weight'] = undefined;

/**
 * @member {Number} year
 */
Player.prototype['year'] = undefined;






export default Player;

