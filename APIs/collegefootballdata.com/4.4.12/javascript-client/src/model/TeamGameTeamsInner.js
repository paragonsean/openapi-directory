/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TeamGameTeamsInnerStatsInner from './TeamGameTeamsInnerStatsInner';

/**
 * The TeamGameTeamsInner model module.
 * @module model/TeamGameTeamsInner
 * @version 4.4.12
 */
class TeamGameTeamsInner {
    /**
     * Constructs a new <code>TeamGameTeamsInner</code>.
     * @alias module:model/TeamGameTeamsInner
     */
    constructor() { 
        
        TeamGameTeamsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TeamGameTeamsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TeamGameTeamsInner} obj Optional instance to populate.
     * @return {module:model/TeamGameTeamsInner} The populated <code>TeamGameTeamsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TeamGameTeamsInner();

            if (data.hasOwnProperty('conference')) {
                obj['conference'] = ApiClient.convertToType(data['conference'], 'String');
            }
            if (data.hasOwnProperty('homeAway')) {
                obj['homeAway'] = ApiClient.convertToType(data['homeAway'], 'String');
            }
            if (data.hasOwnProperty('points')) {
                obj['points'] = ApiClient.convertToType(data['points'], 'Number');
            }
            if (data.hasOwnProperty('school')) {
                obj['school'] = ApiClient.convertToType(data['school'], 'String');
            }
            if (data.hasOwnProperty('stats')) {
                obj['stats'] = ApiClient.convertToType(data['stats'], [TeamGameTeamsInnerStatsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TeamGameTeamsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TeamGameTeamsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['conference'] && !(typeof data['conference'] === 'string' || data['conference'] instanceof String)) {
            throw new Error("Expected the field `conference` to be a primitive type in the JSON string but got " + data['conference']);
        }
        // ensure the json data is a string
        if (data['homeAway'] && !(typeof data['homeAway'] === 'string' || data['homeAway'] instanceof String)) {
            throw new Error("Expected the field `homeAway` to be a primitive type in the JSON string but got " + data['homeAway']);
        }
        // ensure the json data is a string
        if (data['school'] && !(typeof data['school'] === 'string' || data['school'] instanceof String)) {
            throw new Error("Expected the field `school` to be a primitive type in the JSON string but got " + data['school']);
        }
        if (data['stats']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['stats'])) {
                throw new Error("Expected the field `stats` to be an array in the JSON data but got " + data['stats']);
            }
            // validate the optional field `stats` (array)
            for (const item of data['stats']) {
                TeamGameTeamsInnerStatsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} conference
 */
TeamGameTeamsInner.prototype['conference'] = undefined;

/**
 * @member {String} homeAway
 */
TeamGameTeamsInner.prototype['homeAway'] = undefined;

/**
 * @member {Number} points
 */
TeamGameTeamsInner.prototype['points'] = undefined;

/**
 * @member {String} school
 */
TeamGameTeamsInner.prototype['school'] = undefined;

/**
 * @member {Array.<module:model/TeamGameTeamsInnerStatsInner>} stats
 */
TeamGameTeamsInner.prototype['stats'] = undefined;






export default TeamGameTeamsInner;

