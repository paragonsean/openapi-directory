/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CoachSeasonsInner from './CoachSeasonsInner';

/**
 * The Coach model module.
 * @module model/Coach
 * @version 4.4.12
 */
class Coach {
    /**
     * Constructs a new <code>Coach</code>.
     * @alias module:model/Coach
     */
    constructor() { 
        
        Coach.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Coach</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Coach} obj Optional instance to populate.
     * @return {module:model/Coach} The populated <code>Coach</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Coach();

            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('hire_date')) {
                obj['hire_date'] = ApiClient.convertToType(data['hire_date'], 'String');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('seasons')) {
                obj['seasons'] = ApiClient.convertToType(data['seasons'], [CoachSeasonsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Coach</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Coach</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['hire_date'] && !(typeof data['hire_date'] === 'string' || data['hire_date'] instanceof String)) {
            throw new Error("Expected the field `hire_date` to be a primitive type in the JSON string but got " + data['hire_date']);
        }
        // ensure the json data is a string
        if (data['last_name'] && !(typeof data['last_name'] === 'string' || data['last_name'] instanceof String)) {
            throw new Error("Expected the field `last_name` to be a primitive type in the JSON string but got " + data['last_name']);
        }
        if (data['seasons']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['seasons'])) {
                throw new Error("Expected the field `seasons` to be an array in the JSON data but got " + data['seasons']);
            }
            // validate the optional field `seasons` (array)
            for (const item of data['seasons']) {
                CoachSeasonsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} first_name
 */
Coach.prototype['first_name'] = undefined;

/**
 * @member {String} hire_date
 */
Coach.prototype['hire_date'] = undefined;

/**
 * @member {String} last_name
 */
Coach.prototype['last_name'] = undefined;

/**
 * @member {Array.<module:model/CoachSeasonsInner>} seasons
 */
Coach.prototype['seasons'] = undefined;






export default Coach;

