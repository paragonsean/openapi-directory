/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GameLinesLinesInner model module.
 * @module model/GameLinesLinesInner
 * @version 4.4.12
 */
class GameLinesLinesInner {
    /**
     * Constructs a new <code>GameLinesLinesInner</code>.
     * @alias module:model/GameLinesLinesInner
     */
    constructor() { 
        
        GameLinesLinesInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GameLinesLinesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GameLinesLinesInner} obj Optional instance to populate.
     * @return {module:model/GameLinesLinesInner} The populated <code>GameLinesLinesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GameLinesLinesInner();

            if (data.hasOwnProperty('awayMoneyline')) {
                obj['awayMoneyline'] = ApiClient.convertToType(data['awayMoneyline'], 'Number');
            }
            if (data.hasOwnProperty('formattedSpread')) {
                obj['formattedSpread'] = ApiClient.convertToType(data['formattedSpread'], 'String');
            }
            if (data.hasOwnProperty('homeMoneyline')) {
                obj['homeMoneyline'] = ApiClient.convertToType(data['homeMoneyline'], 'Number');
            }
            if (data.hasOwnProperty('overUnder')) {
                obj['overUnder'] = ApiClient.convertToType(data['overUnder'], 'Number');
            }
            if (data.hasOwnProperty('overUnderOpen')) {
                obj['overUnderOpen'] = ApiClient.convertToType(data['overUnderOpen'], 'Number');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
            if (data.hasOwnProperty('spread')) {
                obj['spread'] = ApiClient.convertToType(data['spread'], 'Number');
            }
            if (data.hasOwnProperty('spreadOpen')) {
                obj['spreadOpen'] = ApiClient.convertToType(data['spreadOpen'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GameLinesLinesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GameLinesLinesInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['formattedSpread'] && !(typeof data['formattedSpread'] === 'string' || data['formattedSpread'] instanceof String)) {
            throw new Error("Expected the field `formattedSpread` to be a primitive type in the JSON string but got " + data['formattedSpread']);
        }
        // ensure the json data is a string
        if (data['provider'] && !(typeof data['provider'] === 'string' || data['provider'] instanceof String)) {
            throw new Error("Expected the field `provider` to be a primitive type in the JSON string but got " + data['provider']);
        }

        return true;
    }


}



/**
 * @member {Number} awayMoneyline
 */
GameLinesLinesInner.prototype['awayMoneyline'] = undefined;

/**
 * @member {String} formattedSpread
 */
GameLinesLinesInner.prototype['formattedSpread'] = undefined;

/**
 * @member {Number} homeMoneyline
 */
GameLinesLinesInner.prototype['homeMoneyline'] = undefined;

/**
 * @member {Number} overUnder
 */
GameLinesLinesInner.prototype['overUnder'] = undefined;

/**
 * @member {Number} overUnderOpen
 */
GameLinesLinesInner.prototype['overUnderOpen'] = undefined;

/**
 * @member {String} provider
 */
GameLinesLinesInner.prototype['provider'] = undefined;

/**
 * @member {Number} spread
 */
GameLinesLinesInner.prototype['spread'] = undefined;

/**
 * @member {Number} spreadOpen
 */
GameLinesLinesInner.prototype['spreadOpen'] = undefined;






export default GameLinesLinesInner;

