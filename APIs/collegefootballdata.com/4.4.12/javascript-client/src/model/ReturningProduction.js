/**
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReturningProduction model module.
 * @module model/ReturningProduction
 * @version 4.4.12
 */
class ReturningProduction {
    /**
     * Constructs a new <code>ReturningProduction</code>.
     * @alias module:model/ReturningProduction
     */
    constructor() { 
        
        ReturningProduction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReturningProduction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReturningProduction} obj Optional instance to populate.
     * @return {module:model/ReturningProduction} The populated <code>ReturningProduction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReturningProduction();

            if (data.hasOwnProperty('conference')) {
                obj['conference'] = ApiClient.convertToType(data['conference'], 'String');
            }
            if (data.hasOwnProperty('passingUsage')) {
                obj['passingUsage'] = ApiClient.convertToType(data['passingUsage'], 'Number');
            }
            if (data.hasOwnProperty('percentPPA')) {
                obj['percentPPA'] = ApiClient.convertToType(data['percentPPA'], 'Number');
            }
            if (data.hasOwnProperty('percentPassingPPA')) {
                obj['percentPassingPPA'] = ApiClient.convertToType(data['percentPassingPPA'], 'Number');
            }
            if (data.hasOwnProperty('percentReceivingPPA')) {
                obj['percentReceivingPPA'] = ApiClient.convertToType(data['percentReceivingPPA'], 'Number');
            }
            if (data.hasOwnProperty('percentRushingPPA')) {
                obj['percentRushingPPA'] = ApiClient.convertToType(data['percentRushingPPA'], 'Number');
            }
            if (data.hasOwnProperty('receivingUsage')) {
                obj['receivingUsage'] = ApiClient.convertToType(data['receivingUsage'], 'Number');
            }
            if (data.hasOwnProperty('rushingUsage')) {
                obj['rushingUsage'] = ApiClient.convertToType(data['rushingUsage'], 'Number');
            }
            if (data.hasOwnProperty('season')) {
                obj['season'] = ApiClient.convertToType(data['season'], 'Number');
            }
            if (data.hasOwnProperty('team')) {
                obj['team'] = ApiClient.convertToType(data['team'], 'String');
            }
            if (data.hasOwnProperty('totalPPA')) {
                obj['totalPPA'] = ApiClient.convertToType(data['totalPPA'], 'Number');
            }
            if (data.hasOwnProperty('totalPassingPPA')) {
                obj['totalPassingPPA'] = ApiClient.convertToType(data['totalPassingPPA'], 'Number');
            }
            if (data.hasOwnProperty('totalReceivingPPA')) {
                obj['totalReceivingPPA'] = ApiClient.convertToType(data['totalReceivingPPA'], 'Number');
            }
            if (data.hasOwnProperty('totalRushingPPA')) {
                obj['totalRushingPPA'] = ApiClient.convertToType(data['totalRushingPPA'], 'Number');
            }
            if (data.hasOwnProperty('usage')) {
                obj['usage'] = ApiClient.convertToType(data['usage'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReturningProduction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReturningProduction</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['conference'] && !(typeof data['conference'] === 'string' || data['conference'] instanceof String)) {
            throw new Error("Expected the field `conference` to be a primitive type in the JSON string but got " + data['conference']);
        }
        // ensure the json data is a string
        if (data['team'] && !(typeof data['team'] === 'string' || data['team'] instanceof String)) {
            throw new Error("Expected the field `team` to be a primitive type in the JSON string but got " + data['team']);
        }

        return true;
    }


}



/**
 * @member {String} conference
 */
ReturningProduction.prototype['conference'] = undefined;

/**
 * @member {Number} passingUsage
 */
ReturningProduction.prototype['passingUsage'] = undefined;

/**
 * @member {Number} percentPPA
 */
ReturningProduction.prototype['percentPPA'] = undefined;

/**
 * @member {Number} percentPassingPPA
 */
ReturningProduction.prototype['percentPassingPPA'] = undefined;

/**
 * @member {Number} percentReceivingPPA
 */
ReturningProduction.prototype['percentReceivingPPA'] = undefined;

/**
 * @member {Number} percentRushingPPA
 */
ReturningProduction.prototype['percentRushingPPA'] = undefined;

/**
 * @member {Number} receivingUsage
 */
ReturningProduction.prototype['receivingUsage'] = undefined;

/**
 * @member {Number} rushingUsage
 */
ReturningProduction.prototype['rushingUsage'] = undefined;

/**
 * @member {Number} season
 */
ReturningProduction.prototype['season'] = undefined;

/**
 * @member {String} team
 */
ReturningProduction.prototype['team'] = undefined;

/**
 * @member {Number} totalPPA
 */
ReturningProduction.prototype['totalPPA'] = undefined;

/**
 * @member {Number} totalPassingPPA
 */
ReturningProduction.prototype['totalPassingPPA'] = undefined;

/**
 * @member {Number} totalReceivingPPA
 */
ReturningProduction.prototype['totalReceivingPPA'] = undefined;

/**
 * @member {Number} totalRushingPPA
 */
ReturningProduction.prototype['totalRushingPPA'] = undefined;

/**
 * @member {Number} usage
 */
ReturningProduction.prototype['usage'] = undefined;






export default ReturningProduction;

