/**
 * The Water Linked Underwater GPS API
 * API for the Water Linked Underwater GPS. For more details: http://www.waterlinked.com  Recommended approach for connecting to a Underwater GPS via the API is: - If \"GET /api/\" times out, the Underwater GPS is not running (on this IP address) - If \"GET /api/\" responds with 200 OK check that the api version returrned (eg \"v1\") is supported by the client (eg: also supports \"v1\"). - If the api version returned does not match what the client supports: give an error to the user and recommend upgrading. (Eg: response is \"v2\" while client only supports \"v1\") - If \"GET /api/\" responds with 301 Moved permanently. \"GET /api/v1/version\" to check if the kit has a version earlier than 1.5. - \"GET /api/v1/version\" will always respond with 200 OK on Underwater GPS earlier than 1.5 release.  Configuration API is is not considered stable and will potentially be changed
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import WaterlinkedAbout from '../model/WaterlinkedAbout';
import WaterlinkedOperationResponse from '../model/WaterlinkedOperationResponse';
import WaterlinkedStatus from '../model/WaterlinkedStatus';
import WaterlinkedTemperature from '../model/WaterlinkedTemperature';
import WupdaterApiversion from '../model/WupdaterApiversion';

/**
* About service.
* @module api/AboutApi
* @version 1.0.0
*/
export default class AboutApi {

    /**
    * Constructs a new AboutApi. 
    * @alias module:api/AboutApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the aboutApiVersion operation.
     * @callback module:api/AboutApi~aboutApiVersionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WupdaterApiversion} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ApiVersion about
     * @param {module:api/AboutApi~aboutApiVersionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WupdaterApiversion}
     */
    aboutApiVersion(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/vnd.wupdater.apiversion'];
      let returnType = WupdaterApiversion;
      return this.apiClient.callApi(
        '/api/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aboutFactoryReset operation.
     * @callback module:api/AboutApi~aboutFactoryResetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WaterlinkedOperationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * FactoryReset about
     * Reset all settings on master electronics
     * @param {module:api/AboutApi~aboutFactoryResetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WaterlinkedOperationResponse}
     */
    aboutFactoryReset(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/vnd.waterlinked.operation_response+json'];
      let returnType = WaterlinkedOperationResponse;
      return this.apiClient.callApi(
        '/api/v1/about/factoryreset', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aboutGet operation.
     * @callback module:api/AboutApi~aboutGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WaterlinkedAbout} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get about
     * Get about information
     * @param {module:api/AboutApi~aboutGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WaterlinkedAbout}
     */
    aboutGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/vnd.waterlinked.about+json'];
      let returnType = WaterlinkedAbout;
      return this.apiClient.callApi(
        '/api/v1/about', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aboutLED operation.
     * @callback module:api/AboutApi~aboutLEDCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * LED about
     * Flash LED1 on master electronics
     * @param {module:api/AboutApi~aboutLEDCallback} callback The callback function, accepting three arguments: error, data, response
     */
    aboutLED(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v1/about/led', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aboutStatus operation.
     * @callback module:api/AboutApi~aboutStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WaterlinkedStatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Status about
     * Get current IMU and GPS status
     * @param {module:api/AboutApi~aboutStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WaterlinkedStatus}
     */
    aboutStatus(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/vnd.waterlinked.status+json'];
      let returnType = WaterlinkedStatus;
      return this.apiClient.callApi(
        '/api/v1/about/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aboutTemperature operation.
     * @callback module:api/AboutApi~aboutTemperatureCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WaterlinkedTemperature} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Temperature about
     * Get board temperature
     * @param {module:api/AboutApi~aboutTemperatureCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WaterlinkedTemperature}
     */
    aboutTemperature(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/vnd.waterlinked.temperature+json'];
      let returnType = WaterlinkedTemperature;
      return this.apiClient.callApi(
        '/api/v1/about/temperature', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
