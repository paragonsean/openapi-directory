/**
 * The Water Linked Underwater GPS API
 * API for the Water Linked Underwater GPS. For more details: http://www.waterlinked.com  Recommended approach for connecting to a Underwater GPS via the API is: - If \"GET /api/\" times out, the Underwater GPS is not running (on this IP address) - If \"GET /api/\" responds with 200 OK check that the api version returrned (eg \"v1\") is supported by the client (eg: also supports \"v1\"). - If the api version returned does not match what the client supports: give an error to the user and recommend upgrading. (Eg: response is \"v2\" while client only supports \"v1\") - If \"GET /api/\" responds with 301 Moved permanently. \"GET /api/v1/version\" to check if the kit has a version earlier than 1.5. - \"GET /api/v1/version\" will always respond with 200 OK on Underwater GPS earlier than 1.5 release.  Configuration API is is not considered stable and will potentially be changed
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWaterlinkedTemperature.h
 *
 * Temperature information (default view)
 */

#ifndef OAIWaterlinkedTemperature_H
#define OAIWaterlinkedTemperature_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWaterlinkedTemperature : public OAIObject {
public:
    OAIWaterlinkedTemperature();
    OAIWaterlinkedTemperature(QString json);
    ~OAIWaterlinkedTemperature() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getBoard() const;
    void setBoard(const double &board);
    bool is_board_Set() const;
    bool is_board_Valid() const;

    double getWater() const;
    void setWater(const double &water);
    bool is_water_Set() const;
    bool is_water_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_board;
    bool m_board_isSet;
    bool m_board_isValid;

    double m_water;
    bool m_water_isSet;
    bool m_water_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWaterlinkedTemperature)

#endif // OAIWaterlinkedTemperature_H
