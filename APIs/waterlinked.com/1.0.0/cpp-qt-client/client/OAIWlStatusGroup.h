/**
 * The Water Linked Underwater GPS API
 * API for the Water Linked Underwater GPS. For more details: http://www.waterlinked.com  Recommended approach for connecting to a Underwater GPS via the API is: - If \"GET /api/\" times out, the Underwater GPS is not running (on this IP address) - If \"GET /api/\" responds with 200 OK check that the api version returrned (eg \"v1\") is supported by the client (eg: also supports \"v1\"). - If the api version returned does not match what the client supports: give an error to the user and recommend upgrading. (Eg: response is \"v2\" while client only supports \"v1\") - If \"GET /api/\" responds with 301 Moved permanently. \"GET /api/v1/version\" to check if the kit has a version earlier than 1.5. - \"GET /api/v1/version\" will always respond with 200 OK on Underwater GPS earlier than 1.5 release.  Configuration API is is not considered stable and will potentially be changed
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWlStatusGroup.h
 *
 * Current status from one specific status group (default view)
 */

#ifndef OAIWlStatusGroup_H
#define OAIWlStatusGroup_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWlStatusGroup : public OAIObject {
public:
    OAIWlStatusGroup();
    OAIWlStatusGroup(QString json);
    ~OAIWlStatusGroup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getErrorIds() const;
    void setErrorIds(const QList<QString> &error_ids);
    bool is_error_ids_Set() const;
    bool is_error_ids_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusGroup() const;
    void setStatusGroup(const QString &status_group);
    bool is_status_group_Set() const;
    bool is_status_group_Valid() const;

    QString getStatusGroupId() const;
    void setStatusGroupId(const QString &status_group_id);
    bool is_status_group_id_Set() const;
    bool is_status_group_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_error_ids;
    bool m_error_ids_isSet;
    bool m_error_ids_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_group;
    bool m_status_group_isSet;
    bool m_status_group_isValid;

    QString m_status_group_id;
    bool m_status_group_id_isSet;
    bool m_status_group_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWlStatusGroup)

#endif // OAIWlStatusGroup_H
