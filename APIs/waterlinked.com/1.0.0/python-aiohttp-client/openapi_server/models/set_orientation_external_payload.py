# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SetOrientationExternalPayload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, orientation: float=None):
        """SetOrientationExternalPayload - a model defined in OpenAPI

        :param orientation: The orientation of this SetOrientationExternalPayload.
        """
        self.openapi_types = {
            'orientation': float
        }

        self.attribute_map = {
            'orientation': 'orientation'
        }

        self._orientation = orientation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetOrientationExternalPayload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SetOrientationExternalPayload of this SetOrientationExternalPayload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def orientation(self):
        """Gets the orientation of this SetOrientationExternalPayload.

        Current orientation/compass heading (degrees). -1 means no orientation set

        :return: The orientation of this SetOrientationExternalPayload.
        :rtype: float
        """
        return self._orientation

    @orientation.setter
    def orientation(self, orientation):
        """Sets the orientation of this SetOrientationExternalPayload.

        Current orientation/compass heading (degrees). -1 means no orientation set

        :param orientation: The orientation of this SetOrientationExternalPayload.
        :type orientation: float
        """
        if orientation is None:
            raise ValueError("Invalid value for `orientation`, must not be `None`")
        if orientation is not None and orientation > 359.999:
            raise ValueError("Invalid value for `orientation`, must be a value less than or equal to `359.999`")
        if orientation is not None and orientation < -1:
            raise ValueError("Invalid value for `orientation`, must be a value greater than or equal to `-1`")

        self._orientation = orientation
