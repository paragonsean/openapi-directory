# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SetNorthImuPayload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, heading: float=None):
        """SetNorthImuPayload - a model defined in OpenAPI

        :param heading: The heading of this SetNorthImuPayload.
        """
        self.openapi_types = {
            'heading': float
        }

        self.attribute_map = {
            'heading': 'heading'
        }

        self._heading = heading

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetNorthImuPayload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SetNorthImuPayload of this SetNorthImuPayload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def heading(self):
        """Gets the heading of this SetNorthImuPayload.

        Current heading

        :return: The heading of this SetNorthImuPayload.
        :rtype: float
        """
        return self._heading

    @heading.setter
    def heading(self, heading):
        """Sets the heading of this SetNorthImuPayload.

        Current heading

        :param heading: The heading of this SetNorthImuPayload.
        :type heading: float
        """
        if heading is None:
            raise ValueError("Invalid value for `heading`, must not be `None`")
        if heading is not None and heading > 3.6E+2:
            raise ValueError("Invalid value for `heading`, must be a value less than or equal to `3.6E+2`")
        if heading is not None and heading < 0:
            raise ValueError("Invalid value for `heading`, must be a value greater than or equal to `0`")

        self._heading = heading
