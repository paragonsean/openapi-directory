/*
 * The Water Linked Underwater GPS API
 * API for the Water Linked Underwater GPS. For more details: http://www.waterlinked.com  Recommended approach for connecting to a Underwater GPS via the API is: - If \"GET /api/\" times out, the Underwater GPS is not running (on this IP address) - If \"GET /api/\" responds with 200 OK check that the api version returrned (eg \"v1\") is supported by the client (eg: also supports \"v1\"). - If the api version returned does not match what the client supports: give an error to the user and recommend upgrading. (Eg: response is \"v2\" while client only supports \"v1\") - If \"GET /api/\" responds with 301 Moved permanently. \"GET /api/v1/version\" to check if the kit has a version earlier than 1.5. - \"GET /api/v1/version\" will always respond with 200 OK on Underwater GPS earlier than 1.5 release.  Configuration API is is not considered stable and will potentially be changed
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for WaterlinkedAbout
 */
public class WaterlinkedAboutTest {
    private final WaterlinkedAbout model = new WaterlinkedAbout();

    /**
     * Model tests for WaterlinkedAbout
     */
    @Test
    public void testWaterlinkedAbout() {
        // TODO: test WaterlinkedAbout
    }

    /**
     * Test the property 'chipid'
     */
    @Test
    public void chipidTest() {
        // TODO: test chipid
    }

    /**
     * Test the property 'hardwareRevision'
     */
    @Test
    public void hardwareRevisionTest() {
        // TODO: test hardwareRevision
    }

    /**
     * Test the property 'productId'
     */
    @Test
    public void productIdTest() {
        // TODO: test productId
    }

    /**
     * Test the property 'productName'
     */
    @Test
    public void productNameTest() {
        // TODO: test productName
    }

    /**
     * Test the property 'variant'
     */
    @Test
    public void variantTest() {
        // TODO: test variant
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'versionShort'
     */
    @Test
    public void versionShortTest() {
        // TODO: test versionShort
    }

}
