/*
 * The Water Linked Underwater GPS API
 * API for the Water Linked Underwater GPS. For more details: http://www.waterlinked.com  Recommended approach for connecting to a Underwater GPS via the API is: - If \"GET /api/\" times out, the Underwater GPS is not running (on this IP address) - If \"GET /api/\" responds with 200 OK check that the api version returrned (eg \"v1\") is supported by the client (eg: also supports \"v1\"). - If the api version returned does not match what the client supports: give an error to the user and recommend upgrading. (Eg: response is \"v2\" while client only supports \"v1\") - If \"GET /api/\" responds with 301 Moved permanently. \"GET /api/v1/version\" to check if the kit has a version earlier than 1.5. - \"GET /api/v1/version\" will always respond with 200 OK on Underwater GPS earlier than 1.5 release.  Configuration API is is not considered stable and will potentially be changed
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CalibrateImuPayload;
import org.openapitools.client.model.SetNorthImuPayload;
import org.openapitools.client.model.WaterlinkedImu;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ImuApi
 */
@Disabled
public class ImuApiTest {

    private final ImuApi api = new ImuApi();

    /**
     * Calibrate imu
     *
     * [DEPRECATED]Start calibration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void imuCalibrateTest() throws ApiException {
        CalibrateImuPayload payload = null;
        api.imuCalibrate(payload);
        // TODO: test validations
    }

    /**
     * Get imu
     *
     * Get IMU status and orientation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void imuGetTest() throws ApiException {
        WaterlinkedImu response = api.imuGet();
        // TODO: test validations
    }

    /**
     * ResetGyro imu
     *
     * Reset Gyro
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void imuResetGyroTest() throws ApiException {
        api.imuResetGyro();
        // TODO: test validations
    }

    /**
     * SetNorth imu
     *
     * Set north point
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void imuSetNorthTest() throws ApiException {
        SetNorthImuPayload payload = null;
        api.imuSetNorth(payload);
        // TODO: test validations
    }

}
