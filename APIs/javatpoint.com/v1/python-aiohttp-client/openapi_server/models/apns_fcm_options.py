# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApnsFcmOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analytics_label: str=None, image: str=None):
        """ApnsFcmOptions - a model defined in OpenAPI

        :param analytics_label: The analytics_label of this ApnsFcmOptions.
        :param image: The image of this ApnsFcmOptions.
        """
        self.openapi_types = {
            'analytics_label': str,
            'image': str
        }

        self.attribute_map = {
            'analytics_label': 'analyticsLabel',
            'image': 'image'
        }

        self._analytics_label = analytics_label
        self._image = image

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApnsFcmOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApnsFcmOptions of this ApnsFcmOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analytics_label(self):
        """Gets the analytics_label of this ApnsFcmOptions.

        Label associated with the message's analytics data.

        :return: The analytics_label of this ApnsFcmOptions.
        :rtype: str
        """
        return self._analytics_label

    @analytics_label.setter
    def analytics_label(self, analytics_label):
        """Sets the analytics_label of this ApnsFcmOptions.

        Label associated with the message's analytics data.

        :param analytics_label: The analytics_label of this ApnsFcmOptions.
        :type analytics_label: str
        """

        self._analytics_label = analytics_label

    @property
    def image(self):
        """Gets the image of this ApnsFcmOptions.

        Contains the URL of an image that is going to be displayed in a notification. If present, it will override google.firebase.fcm.v1.Notification.image.

        :return: The image of this ApnsFcmOptions.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this ApnsFcmOptions.

        Contains the URL of an image that is going to be displayed in a notification. If present, it will override google.firebase.fcm.v1.Notification.image.

        :param image: The image of this ApnsFcmOptions.
        :type image: str
        """

        self._image = image
