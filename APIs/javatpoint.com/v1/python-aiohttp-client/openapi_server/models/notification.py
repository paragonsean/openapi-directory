# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Notification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, image: str=None, title: str=None):
        """Notification - a model defined in OpenAPI

        :param body: The body of this Notification.
        :param image: The image of this Notification.
        :param title: The title of this Notification.
        """
        self.openapi_types = {
            'body': str,
            'image': str,
            'title': str
        }

        self.attribute_map = {
            'body': 'body',
            'image': 'image',
            'title': 'title'
        }

        self._body = body
        self._image = image
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Notification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Notification of this Notification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this Notification.

        The notification's body text.

        :return: The body of this Notification.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this Notification.

        The notification's body text.

        :param body: The body of this Notification.
        :type body: str
        """

        self._body = body

    @property
    def image(self):
        """Gets the image of this Notification.

        Contains the URL of an image that is going to be downloaded on the device and displayed in a notification. JPEG, PNG, BMP have full support across platforms. Animated GIF and video only work on iOS. WebP and HEIF have varying levels of support across platforms and platform versions. Android has 1MB image size limit. Quota usage and implications/costs for hosting image on Firebase Storage: https://firebase.google.com/pricing

        :return: The image of this Notification.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this Notification.

        Contains the URL of an image that is going to be downloaded on the device and displayed in a notification. JPEG, PNG, BMP have full support across platforms. Animated GIF and video only work on iOS. WebP and HEIF have varying levels of support across platforms and platform versions. Android has 1MB image size limit. Quota usage and implications/costs for hosting image on Firebase Storage: https://firebase.google.com/pricing

        :param image: The image of this Notification.
        :type image: str
        """

        self._image = image

    @property
    def title(self):
        """Gets the title of this Notification.

        The notification's title.

        :return: The title of this Notification.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Notification.

        The notification's title.

        :param title: The title of this Notification.
        :type title: str
        """

        self._title = title
