# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WebpushFcmOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analytics_label: str=None, link: str=None):
        """WebpushFcmOptions - a model defined in OpenAPI

        :param analytics_label: The analytics_label of this WebpushFcmOptions.
        :param link: The link of this WebpushFcmOptions.
        """
        self.openapi_types = {
            'analytics_label': str,
            'link': str
        }

        self.attribute_map = {
            'analytics_label': 'analyticsLabel',
            'link': 'link'
        }

        self._analytics_label = analytics_label
        self._link = link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebpushFcmOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebpushFcmOptions of this WebpushFcmOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analytics_label(self):
        """Gets the analytics_label of this WebpushFcmOptions.

        Label associated with the message's analytics data.

        :return: The analytics_label of this WebpushFcmOptions.
        :rtype: str
        """
        return self._analytics_label

    @analytics_label.setter
    def analytics_label(self, analytics_label):
        """Sets the analytics_label of this WebpushFcmOptions.

        Label associated with the message's analytics data.

        :param analytics_label: The analytics_label of this WebpushFcmOptions.
        :type analytics_label: str
        """

        self._analytics_label = analytics_label

    @property
    def link(self):
        """Gets the link of this WebpushFcmOptions.

        The link to open when the user clicks on the notification. For all URL values, HTTPS is required.

        :return: The link of this WebpushFcmOptions.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this WebpushFcmOptions.

        The link to open when the user clicks on the notification. For all URL values, HTTPS is required.

        :param link: The link of this WebpushFcmOptions.
        :type link: str
        """

        self._link = link
