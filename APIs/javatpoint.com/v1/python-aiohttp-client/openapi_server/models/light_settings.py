# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.color import Color
from openapi_server import util


class LightSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, color: Color=None, light_off_duration: str=None, light_on_duration: str=None):
        """LightSettings - a model defined in OpenAPI

        :param color: The color of this LightSettings.
        :param light_off_duration: The light_off_duration of this LightSettings.
        :param light_on_duration: The light_on_duration of this LightSettings.
        """
        self.openapi_types = {
            'color': Color,
            'light_off_duration': str,
            'light_on_duration': str
        }

        self.attribute_map = {
            'color': 'color',
            'light_off_duration': 'lightOffDuration',
            'light_on_duration': 'lightOnDuration'
        }

        self._color = color
        self._light_off_duration = light_off_duration
        self._light_on_duration = light_on_duration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LightSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LightSettings of this LightSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def color(self):
        """Gets the color of this LightSettings.


        :return: The color of this LightSettings.
        :rtype: Color
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this LightSettings.


        :param color: The color of this LightSettings.
        :type color: Color
        """

        self._color = color

    @property
    def light_off_duration(self):
        """Gets the light_off_duration of this LightSettings.

        Required. Along with `light_on_duration `, define the blink rate of LED flashes. Resolution defined by [proto.Duration](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration)

        :return: The light_off_duration of this LightSettings.
        :rtype: str
        """
        return self._light_off_duration

    @light_off_duration.setter
    def light_off_duration(self, light_off_duration):
        """Sets the light_off_duration of this LightSettings.

        Required. Along with `light_on_duration `, define the blink rate of LED flashes. Resolution defined by [proto.Duration](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration)

        :param light_off_duration: The light_off_duration of this LightSettings.
        :type light_off_duration: str
        """

        self._light_off_duration = light_off_duration

    @property
    def light_on_duration(self):
        """Gets the light_on_duration of this LightSettings.

        Required. Along with `light_off_duration`, define the blink rate of LED flashes. Resolution defined by [proto.Duration](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration)

        :return: The light_on_duration of this LightSettings.
        :rtype: str
        """
        return self._light_on_duration

    @light_on_duration.setter
    def light_on_duration(self, light_on_duration):
        """Sets the light_on_duration of this LightSettings.

        Required. Along with `light_off_duration`, define the blink rate of LED flashes. Resolution defined by [proto.Duration](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration)

        :param light_on_duration: The light_on_duration of this LightSettings.
        :type light_on_duration: str
        """

        self._light_on_duration = light_on_duration
