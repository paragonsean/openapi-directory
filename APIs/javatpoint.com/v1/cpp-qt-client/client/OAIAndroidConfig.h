/**
 * Firebase Cloud Messaging API
 * FCM send API that provides a cross-platform messaging solution to reliably deliver messages at no cost.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAndroidConfig.h
 *
 * Android specific options for messages sent through [FCM connection server](https://goo.gl/4GLdUl).
 */

#ifndef OAIAndroidConfig_H
#define OAIAndroidConfig_H

#include <QJsonObject>

#include "OAIAndroidFcmOptions.h"
#include "OAIAndroidNotification.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAndroidFcmOptions;
class OAIAndroidNotification;

class OAIAndroidConfig : public OAIObject {
public:
    OAIAndroidConfig();
    OAIAndroidConfig(QString json);
    ~OAIAndroidConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCollapseKey() const;
    void setCollapseKey(const QString &collapse_key);
    bool is_collapse_key_Set() const;
    bool is_collapse_key_Valid() const;

    QMap<QString, QString> getData() const;
    void setData(const QMap<QString, QString> &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    bool isDirectBootOk() const;
    void setDirectBootOk(const bool &direct_boot_ok);
    bool is_direct_boot_ok_Set() const;
    bool is_direct_boot_ok_Valid() const;

    OAIAndroidFcmOptions getFcmOptions() const;
    void setFcmOptions(const OAIAndroidFcmOptions &fcm_options);
    bool is_fcm_options_Set() const;
    bool is_fcm_options_Valid() const;

    OAIAndroidNotification getNotification() const;
    void setNotification(const OAIAndroidNotification &notification);
    bool is_notification_Set() const;
    bool is_notification_Valid() const;

    QString getPriority() const;
    void setPriority(const QString &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getRestrictedPackageName() const;
    void setRestrictedPackageName(const QString &restricted_package_name);
    bool is_restricted_package_name_Set() const;
    bool is_restricted_package_name_Valid() const;

    QString getTtl() const;
    void setTtl(const QString &ttl);
    bool is_ttl_Set() const;
    bool is_ttl_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_collapse_key;
    bool m_collapse_key_isSet;
    bool m_collapse_key_isValid;

    QMap<QString, QString> m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    bool m_direct_boot_ok;
    bool m_direct_boot_ok_isSet;
    bool m_direct_boot_ok_isValid;

    OAIAndroidFcmOptions m_fcm_options;
    bool m_fcm_options_isSet;
    bool m_fcm_options_isValid;

    OAIAndroidNotification m_notification;
    bool m_notification_isSet;
    bool m_notification_isValid;

    QString m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_restricted_package_name;
    bool m_restricted_package_name_isSet;
    bool m_restricted_package_name_isValid;

    QString m_ttl;
    bool m_ttl_isSet;
    bool m_ttl_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAndroidConfig)

#endif // OAIAndroidConfig_H
