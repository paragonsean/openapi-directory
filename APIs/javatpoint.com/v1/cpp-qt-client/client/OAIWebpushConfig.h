/**
 * Firebase Cloud Messaging API
 * FCM send API that provides a cross-platform messaging solution to reliably deliver messages at no cost.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWebpushConfig.h
 *
 * [Webpush protocol](https://tools.ietf.org/html/rfc8030) options.
 */

#ifndef OAIWebpushConfig_H
#define OAIWebpushConfig_H

#include <QJsonObject>

#include "OAIWebpushFcmOptions.h"
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWebpushFcmOptions;

class OAIWebpushConfig : public OAIObject {
public:
    OAIWebpushConfig();
    OAIWebpushConfig(QString json);
    ~OAIWebpushConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getData() const;
    void setData(const QMap<QString, QString> &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    OAIWebpushFcmOptions getFcmOptions() const;
    void setFcmOptions(const OAIWebpushFcmOptions &fcm_options);
    bool is_fcm_options_Set() const;
    bool is_fcm_options_Valid() const;

    QMap<QString, QString> getHeaders() const;
    void setHeaders(const QMap<QString, QString> &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    QMap<QString, QJsonValue> getNotification() const;
    void setNotification(const QMap<QString, QJsonValue> &notification);
    bool is_notification_Set() const;
    bool is_notification_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    OAIWebpushFcmOptions m_fcm_options;
    bool m_fcm_options_isSet;
    bool m_fcm_options_isValid;

    QMap<QString, QString> m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    QMap<QString, QJsonValue> m_notification;
    bool m_notification_isSet;
    bool m_notification_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWebpushConfig)

#endif // OAIWebpushConfig_H
