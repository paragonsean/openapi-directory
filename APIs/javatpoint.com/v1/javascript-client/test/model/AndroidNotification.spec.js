/**
 * Firebase Cloud Messaging API
 * FCM send API that provides a cross-platform messaging solution to reliably deliver messages at no cost.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FirebaseCloudMessagingApi);
  }
}(this, function(expect, FirebaseCloudMessagingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FirebaseCloudMessagingApi.AndroidNotification();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AndroidNotification', function() {
    it('should create an instance of AndroidNotification', function() {
      // uncomment below and update the code to test AndroidNotification
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be.a(FirebaseCloudMessagingApi.AndroidNotification);
    });

    it('should have the property body (base name: "body")', function() {
      // uncomment below and update the code to test the property body
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property bodyLocArgs (base name: "bodyLocArgs")', function() {
      // uncomment below and update the code to test the property bodyLocArgs
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property bodyLocKey (base name: "bodyLocKey")', function() {
      // uncomment below and update the code to test the property bodyLocKey
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property bypassProxyNotification (base name: "bypassProxyNotification")', function() {
      // uncomment below and update the code to test the property bypassProxyNotification
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property channelId (base name: "channelId")', function() {
      // uncomment below and update the code to test the property channelId
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property clickAction (base name: "clickAction")', function() {
      // uncomment below and update the code to test the property clickAction
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property color (base name: "color")', function() {
      // uncomment below and update the code to test the property color
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property defaultLightSettings (base name: "defaultLightSettings")', function() {
      // uncomment below and update the code to test the property defaultLightSettings
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property defaultSound (base name: "defaultSound")', function() {
      // uncomment below and update the code to test the property defaultSound
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property defaultVibrateTimings (base name: "defaultVibrateTimings")', function() {
      // uncomment below and update the code to test the property defaultVibrateTimings
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property eventTime (base name: "eventTime")', function() {
      // uncomment below and update the code to test the property eventTime
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property icon (base name: "icon")', function() {
      // uncomment below and update the code to test the property icon
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property image (base name: "image")', function() {
      // uncomment below and update the code to test the property image
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property lightSettings (base name: "lightSettings")', function() {
      // uncomment below and update the code to test the property lightSettings
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property localOnly (base name: "localOnly")', function() {
      // uncomment below and update the code to test the property localOnly
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property notificationCount (base name: "notificationCount")', function() {
      // uncomment below and update the code to test the property notificationCount
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property notificationPriority (base name: "notificationPriority")', function() {
      // uncomment below and update the code to test the property notificationPriority
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property sound (base name: "sound")', function() {
      // uncomment below and update the code to test the property sound
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property sticky (base name: "sticky")', function() {
      // uncomment below and update the code to test the property sticky
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property tag (base name: "tag")', function() {
      // uncomment below and update the code to test the property tag
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property ticker (base name: "ticker")', function() {
      // uncomment below and update the code to test the property ticker
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property titleLocArgs (base name: "titleLocArgs")', function() {
      // uncomment below and update the code to test the property titleLocArgs
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property titleLocKey (base name: "titleLocKey")', function() {
      // uncomment below and update the code to test the property titleLocKey
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property vibrateTimings (base name: "vibrateTimings")', function() {
      // uncomment below and update the code to test the property vibrateTimings
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

    it('should have the property visibility (base name: "visibility")', function() {
      // uncomment below and update the code to test the property visibility
      //var instance = new FirebaseCloudMessagingApi.AndroidNotification();
      //expect(instance).to.be();
    });

  });

}));
