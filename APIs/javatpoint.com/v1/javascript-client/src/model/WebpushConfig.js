/**
 * Firebase Cloud Messaging API
 * FCM send API that provides a cross-platform messaging solution to reliably deliver messages at no cost.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WebpushFcmOptions from './WebpushFcmOptions';

/**
 * The WebpushConfig model module.
 * @module model/WebpushConfig
 * @version v1
 */
class WebpushConfig {
    /**
     * Constructs a new <code>WebpushConfig</code>.
     * [Webpush protocol](https://tools.ietf.org/html/rfc8030) options.
     * @alias module:model/WebpushConfig
     */
    constructor() { 
        
        WebpushConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WebpushConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebpushConfig} obj Optional instance to populate.
     * @return {module:model/WebpushConfig} The populated <code>WebpushConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebpushConfig();

            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], {'String': 'String'});
            }
            if (data.hasOwnProperty('fcmOptions')) {
                obj['fcmOptions'] = WebpushFcmOptions.constructFromObject(data['fcmOptions']);
            }
            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], {'String': 'String'});
            }
            if (data.hasOwnProperty('notification')) {
                obj['notification'] = ApiClient.convertToType(data['notification'], {'String': Object});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebpushConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebpushConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `fcmOptions`
        if (data['fcmOptions']) { // data not null
          WebpushFcmOptions.validateJSON(data['fcmOptions']);
        }

        return true;
    }


}



/**
 * Arbitrary key/value payload. If present, it will override google.firebase.fcm.v1.Message.data.
 * @member {Object.<String, String>} data
 */
WebpushConfig.prototype['data'] = undefined;

/**
 * @member {module:model/WebpushFcmOptions} fcmOptions
 */
WebpushConfig.prototype['fcmOptions'] = undefined;

/**
 * HTTP headers defined in webpush protocol. Refer to [Webpush protocol](https://tools.ietf.org/html/rfc8030#section-5) for supported headers, e.g. \"TTL\": \"15\".
 * @member {Object.<String, String>} headers
 */
WebpushConfig.prototype['headers'] = undefined;

/**
 * Web Notification options as a JSON object. Supports Notification instance properties as defined in [Web Notification API](https://developer.mozilla.org/en-US/docs/Web/API/Notification). If present, \"title\" and \"body\" fields override [google.firebase.fcm.v1.Notification.title] and [google.firebase.fcm.v1.Notification.body].
 * @member {Object.<String, Object>} notification
 */
WebpushConfig.prototype['notification'] = undefined;






export default WebpushConfig;

