/**
 * Midjourney REST API by useapi.net
 * Simple, reliable and affordable way to use Midjourney via standard REST API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccountResponse from './model/AccountResponse';
import BlendResponse from './model/BlendResponse';
import ButtonResponse from './model/ButtonResponse';
import ButtonResponseErrorUpscaled from './model/ButtonResponseErrorUpscaled';
import DescribeResponse from './model/DescribeResponse';
import DescribeResponseEmbedsInner from './model/DescribeResponseEmbedsInner';
import DescribeResponseEmbedsInnerImage from './model/DescribeResponseEmbedsInnerImage';
import ImagineResponse from './model/ImagineResponse';
import ImagineResponseModerated from './model/ImagineResponseModerated';
import JobCancelResponse from './model/JobCancelResponse';
import JobResponse from './model/JobResponse';
import JobResponseAttachmentsInner from './model/JobResponseAttachmentsInner';
import JobResponseChildrenInner from './model/JobResponseChildrenInner';
import JobsBlendPostRequest from './model/JobsBlendPostRequest';
import JobsButtonPostRequest from './model/JobsButtonPostRequest';
import JobsDescribePostRequest from './model/JobsDescribePostRequest';
import JobsImaginePostRequest from './model/JobsImaginePostRequest';
import ResponseError from './model/ResponseError';
import ResponseMaxJobs from './model/ResponseMaxJobs';
import DefaultApi from './api/DefaultApi';


/**
* Simple, reliable and affordable way to use Midjourney via standard REST API.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MidjourneyRestApiByUseapiNet = require('index'); // See note below*.
* var xxxSvc = new MidjourneyRestApiByUseapiNet.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MidjourneyRestApiByUseapiNet.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MidjourneyRestApiByUseapiNet.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MidjourneyRestApiByUseapiNet.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccountResponse model constructor.
     * @property {module:model/AccountResponse}
     */
    AccountResponse,

    /**
     * The BlendResponse model constructor.
     * @property {module:model/BlendResponse}
     */
    BlendResponse,

    /**
     * The ButtonResponse model constructor.
     * @property {module:model/ButtonResponse}
     */
    ButtonResponse,

    /**
     * The ButtonResponseErrorUpscaled model constructor.
     * @property {module:model/ButtonResponseErrorUpscaled}
     */
    ButtonResponseErrorUpscaled,

    /**
     * The DescribeResponse model constructor.
     * @property {module:model/DescribeResponse}
     */
    DescribeResponse,

    /**
     * The DescribeResponseEmbedsInner model constructor.
     * @property {module:model/DescribeResponseEmbedsInner}
     */
    DescribeResponseEmbedsInner,

    /**
     * The DescribeResponseEmbedsInnerImage model constructor.
     * @property {module:model/DescribeResponseEmbedsInnerImage}
     */
    DescribeResponseEmbedsInnerImage,

    /**
     * The ImagineResponse model constructor.
     * @property {module:model/ImagineResponse}
     */
    ImagineResponse,

    /**
     * The ImagineResponseModerated model constructor.
     * @property {module:model/ImagineResponseModerated}
     */
    ImagineResponseModerated,

    /**
     * The JobCancelResponse model constructor.
     * @property {module:model/JobCancelResponse}
     */
    JobCancelResponse,

    /**
     * The JobResponse model constructor.
     * @property {module:model/JobResponse}
     */
    JobResponse,

    /**
     * The JobResponseAttachmentsInner model constructor.
     * @property {module:model/JobResponseAttachmentsInner}
     */
    JobResponseAttachmentsInner,

    /**
     * The JobResponseChildrenInner model constructor.
     * @property {module:model/JobResponseChildrenInner}
     */
    JobResponseChildrenInner,

    /**
     * The JobsBlendPostRequest model constructor.
     * @property {module:model/JobsBlendPostRequest}
     */
    JobsBlendPostRequest,

    /**
     * The JobsButtonPostRequest model constructor.
     * @property {module:model/JobsButtonPostRequest}
     */
    JobsButtonPostRequest,

    /**
     * The JobsDescribePostRequest model constructor.
     * @property {module:model/JobsDescribePostRequest}
     */
    JobsDescribePostRequest,

    /**
     * The JobsImaginePostRequest model constructor.
     * @property {module:model/JobsImaginePostRequest}
     */
    JobsImaginePostRequest,

    /**
     * The ResponseError model constructor.
     * @property {module:model/ResponseError}
     */
    ResponseError,

    /**
     * The ResponseMaxJobs model constructor.
     * @property {module:model/ResponseMaxJobs}
     */
    ResponseMaxJobs,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
