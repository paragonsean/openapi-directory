# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_response_embeds_inner_image import DescribeResponseEmbedsInnerImage
from openapi_server import util


class DescribeResponseEmbedsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, image: DescribeResponseEmbedsInnerImage=None, type: str=None):
        """DescribeResponseEmbedsInner - a model defined in OpenAPI

        :param description: The description of this DescribeResponseEmbedsInner.
        :param image: The image of this DescribeResponseEmbedsInner.
        :param type: The type of this DescribeResponseEmbedsInner.
        """
        self.openapi_types = {
            'description': str,
            'image': DescribeResponseEmbedsInnerImage,
            'type': str
        }

        self.attribute_map = {
            'description': 'description',
            'image': 'image',
            'type': 'type'
        }

        self._description = description
        self._image = image
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeResponseEmbedsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The describeResponse_embeds_inner of this DescribeResponseEmbedsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this DescribeResponseEmbedsInner.


        :return: The description of this DescribeResponseEmbedsInner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DescribeResponseEmbedsInner.


        :param description: The description of this DescribeResponseEmbedsInner.
        :type description: str
        """

        self._description = description

    @property
    def image(self):
        """Gets the image of this DescribeResponseEmbedsInner.


        :return: The image of this DescribeResponseEmbedsInner.
        :rtype: DescribeResponseEmbedsInnerImage
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this DescribeResponseEmbedsInner.


        :param image: The image of this DescribeResponseEmbedsInner.
        :type image: DescribeResponseEmbedsInnerImage
        """

        self._image = image

    @property
    def type(self):
        """Gets the type of this DescribeResponseEmbedsInner.


        :return: The type of this DescribeResponseEmbedsInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DescribeResponseEmbedsInner.


        :param type: The type of this DescribeResponseEmbedsInner.
        :type type: str
        """

        self._type = type
