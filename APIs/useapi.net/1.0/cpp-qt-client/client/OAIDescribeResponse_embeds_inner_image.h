/**
 * Midjourney REST API by useapi.net
 * Simple, reliable and affordable way to use Midjourney via standard REST API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeResponse_embeds_inner_image.h
 *
 * 
 */

#ifndef OAIDescribeResponse_embeds_inner_image_H
#define OAIDescribeResponse_embeds_inner_image_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeResponse_embeds_inner_image : public OAIObject {
public:
    OAIDescribeResponse_embeds_inner_image();
    OAIDescribeResponse_embeds_inner_image(QString json);
    ~OAIDescribeResponse_embeds_inner_image() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getHeight() const;
    void setHeight(const double &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QString getProxyUrl() const;
    void setProxyUrl(const QString &proxy_url);
    bool is_proxy_url_Set() const;
    bool is_proxy_url_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    double getWidth() const;
    void setWidth(const double &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    QString m_proxy_url;
    bool m_proxy_url_isSet;
    bool m_proxy_url_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    double m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeResponse_embeds_inner_image)

#endif // OAIDescribeResponse_embeds_inner_image_H
