/*
 * Midjourney REST API by useapi.net
 * Simple, reliable and affordable way to use Midjourney via standard REST API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccountResponse;
import org.openapitools.client.model.BlendResponse;
import org.openapitools.client.model.ButtonResponse;
import org.openapitools.client.model.ButtonResponseErrorUpscaled;
import org.openapitools.client.model.DescribeResponse;
import org.openapitools.client.model.ImagineResponse;
import org.openapitools.client.model.ImagineResponseModerated;
import org.openapitools.client.model.JobCancelResponse;
import org.openapitools.client.model.JobResponse;
import org.openapitools.client.model.JobsBlendPostRequest;
import org.openapitools.client.model.JobsButtonPostRequest;
import org.openapitools.client.model.JobsDescribePostRequest;
import org.openapitools.client.model.JobsImaginePostRequest;
import org.openapitools.client.model.ResponseError;
import org.openapitools.client.model.ResponseMaxJobs;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Retrieve account information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountGetTest() throws ApiException {
        AccountResponse response = api.accountGet();
        // TODO: test validations
    }

    /**
     * Submit the Midjourney /blend command
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsBlendPostTest() throws ApiException {
        JobsBlendPostRequest jobsBlendPostRequest = null;
        BlendResponse response = api.jobsBlendPost(jobsBlendPostRequest);
        // TODO: test validations
    }

    /**
     * Submit the Midjourney /imagine command
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsButtonPostTest() throws ApiException {
        JobsButtonPostRequest jobsButtonPostRequest = null;
        ButtonResponse response = api.jobsButtonPost(jobsButtonPostRequest);
        // TODO: test validations
    }

    /**
     * Cancel execution of job created by jobs/imagine, jobs/button, jobs/blend or jobs/describe
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsCancelGetTest() throws ApiException {
        String jobid = null;
        JobCancelResponse response = api.jobsCancelGet(jobid);
        // TODO: test validations
    }

    /**
     * Submit the Midjourney /describe command
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsDescribePostTest() throws ApiException {
        JobsDescribePostRequest jobsDescribePostRequest = null;
        DescribeResponse response = api.jobsDescribePost(jobsDescribePostRequest);
        // TODO: test validations
    }

    /**
     * Get list of currently executing jobs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsGetTest() throws ApiException {
        List<String> response = api.jobsGet();
        // TODO: test validations
    }

    /**
     * Retrieve status and results of jobs/imagine, jobs/button, jobs/blend or jobs/describe
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsGet_0Test() throws ApiException {
        String jobid = null;
        JobResponse response = api.jobsGet_0(jobid);
        // TODO: test validations
    }

    /**
     * Submit the Midjourney /imagine command
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsImaginePostTest() throws ApiException {
        JobsImaginePostRequest jobsImaginePostRequest = null;
        ImagineResponse response = api.jobsImaginePost(jobsImaginePostRequest);
        // TODO: test validations
    }

}
