/**
 * Sandbox API
 * Sandbox API
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@getsandbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RuntimeTransaction from './RuntimeTransaction';

/**
 * The ActivityMessage model module.
 * @module model/ActivityMessage
 * @version v1
 */
class ActivityMessage {
    /**
     * Constructs a new <code>ActivityMessage</code>.
     * @alias module:model/ActivityMessage
     */
    constructor() { 
        
        ActivityMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActivityMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActivityMessage} obj Optional instance to populate.
     * @return {module:model/ActivityMessage} The populated <code>ActivityMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActivityMessage();

            if (data.hasOwnProperty('createdTimestamp')) {
                obj['createdTimestamp'] = ApiClient.convertToType(data['createdTimestamp'], 'Number');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('messageObject')) {
                obj['messageObject'] = RuntimeTransaction.constructFromObject(data['messageObject']);
            }
            if (data.hasOwnProperty('messageType')) {
                obj['messageType'] = ApiClient.convertToType(data['messageType'], 'String');
            }
            if (data.hasOwnProperty('sandboxId')) {
                obj['sandboxId'] = ApiClient.convertToType(data['sandboxId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActivityMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActivityMessage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // validate the optional field `messageObject`
        if (data['messageObject']) { // data not null
          RuntimeTransaction.validateJSON(data['messageObject']);
        }
        // ensure the json data is a string
        if (data['messageType'] && !(typeof data['messageType'] === 'string' || data['messageType'] instanceof String)) {
            throw new Error("Expected the field `messageType` to be a primitive type in the JSON string but got " + data['messageType']);
        }
        // ensure the json data is a string
        if (data['sandboxId'] && !(typeof data['sandboxId'] === 'string' || data['sandboxId'] instanceof String)) {
            throw new Error("Expected the field `sandboxId` to be a primitive type in the JSON string but got " + data['sandboxId']);
        }

        return true;
    }


}



/**
 * Epoch time in milliseconds when the message was created
 * @member {Number} createdTimestamp
 */
ActivityMessage.prototype['createdTimestamp'] = undefined;

/**
 * The details of the message when type is 'log'
 * @member {String} message
 */
ActivityMessage.prototype['message'] = undefined;

/**
 * @member {module:model/RuntimeTransaction} messageObject
 */
ActivityMessage.prototype['messageObject'] = undefined;

/**
 * @member {module:model/ActivityMessage.MessageTypeEnum} messageType
 */
ActivityMessage.prototype['messageType'] = undefined;

/**
 * The ID of the sandbox that generated this message
 * @member {String} sandboxId
 */
ActivityMessage.prototype['sandboxId'] = undefined;





/**
 * Allowed values for the <code>messageType</code> property.
 * @enum {String}
 * @readonly
 */
ActivityMessage['MessageTypeEnum'] = {

    /**
     * value: "request"
     * @const
     */
    "request": "request",

    /**
     * value: "log"
     * @const
     */
    "log": "log"
};



export default ActivityMessage;

