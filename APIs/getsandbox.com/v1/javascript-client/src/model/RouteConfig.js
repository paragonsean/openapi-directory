/**
 * Sandbox API
 * Sandbox API
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@getsandbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RouteConfig model module.
 * @module model/RouteConfig
 * @version v1
 */
class RouteConfig {
    /**
     * Constructs a new <code>RouteConfig</code>.
     * @alias module:model/RouteConfig
     */
    constructor() { 
        
        RouteConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RouteConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RouteConfig} obj Optional instance to populate.
     * @return {module:model/RouteConfig} The populated <code>RouteConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RouteConfig();

            if (data.hasOwnProperty('errorStrategy')) {
                obj['errorStrategy'] = ApiClient.convertToType(data['errorStrategy'], 'String');
            }
            if (data.hasOwnProperty('latencyMs')) {
                obj['latencyMs'] = ApiClient.convertToType(data['latencyMs'], 'Number');
            }
            if (data.hasOwnProperty('latencyMultiplier')) {
                obj['latencyMultiplier'] = ApiClient.convertToType(data['latencyMultiplier'], 'Number');
            }
            if (data.hasOwnProperty('latencyType')) {
                obj['latencyType'] = ApiClient.convertToType(data['latencyType'], 'String');
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RouteConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RouteConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['errorStrategy'] && !(typeof data['errorStrategy'] === 'string' || data['errorStrategy'] instanceof String)) {
            throw new Error("Expected the field `errorStrategy` to be a primitive type in the JSON string but got " + data['errorStrategy']);
        }
        // ensure the json data is a string
        if (data['latencyType'] && !(typeof data['latencyType'] === 'string' || data['latencyType'] instanceof String)) {
            throw new Error("Expected the field `latencyType` to be a primitive type in the JSON string but got " + data['latencyType']);
        }
        // ensure the json data is a string
        if (data['method'] && !(typeof data['method'] === 'string' || data['method'] instanceof String)) {
            throw new Error("Expected the field `method` to be a primitive type in the JSON string but got " + data['method']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }

        return true;
    }


}



/**
 * @member {module:model/RouteConfig.ErrorStrategyEnum} errorStrategy
 */
RouteConfig.prototype['errorStrategy'] = undefined;

/**
 * @member {Number} latencyMs
 */
RouteConfig.prototype['latencyMs'] = undefined;

/**
 * @member {Number} latencyMultiplier
 */
RouteConfig.prototype['latencyMultiplier'] = undefined;

/**
 * @member {module:model/RouteConfig.LatencyTypeEnum} latencyType
 */
RouteConfig.prototype['latencyType'] = undefined;

/**
 * @member {String} method
 */
RouteConfig.prototype['method'] = undefined;

/**
 * @member {String} path
 */
RouteConfig.prototype['path'] = undefined;





/**
 * Allowed values for the <code>errorStrategy</code> property.
 * @enum {String}
 * @readonly
 */
RouteConfig['ErrorStrategyEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "TIMEOUT"
     * @const
     */
    "TIMEOUT": "TIMEOUT",

    /**
     * value: "SERVICE_DOWN"
     * @const
     */
    "SERVICE_DOWN": "SERVICE_DOWN"
};


/**
 * Allowed values for the <code>latencyType</code> property.
 * @enum {String}
 * @readonly
 */
RouteConfig['LatencyTypeEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "CONSTANT"
     * @const
     */
    "CONSTANT": "CONSTANT",

    /**
     * value: "LINEAR"
     * @const
     */
    "LINEAR": "LINEAR"
};



export default RouteConfig;

