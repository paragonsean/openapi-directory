/**
 * Sandbox API
 * Sandbox API
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@getsandbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RuntimeRequest from './RuntimeRequest';
import RuntimeResponse from './RuntimeResponse';

/**
 * The RuntimeTransaction model module.
 * @module model/RuntimeTransaction
 * @version v1
 */
class RuntimeTransaction {
    /**
     * Constructs a new <code>RuntimeTransaction</code>.
     * @alias module:model/RuntimeTransaction
     */
    constructor() { 
        
        RuntimeTransaction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RuntimeTransaction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RuntimeTransaction} obj Optional instance to populate.
     * @return {module:model/RuntimeTransaction} The populated <code>RuntimeTransaction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RuntimeTransaction();

            if (data.hasOwnProperty('request')) {
                obj['request'] = RuntimeRequest.constructFromObject(data['request']);
            }
            if (data.hasOwnProperty('responses')) {
                obj['responses'] = ApiClient.convertToType(data['responses'], [RuntimeResponse]);
            }
            if (data.hasOwnProperty('sandboxName')) {
                obj['sandboxName'] = ApiClient.convertToType(data['sandboxName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RuntimeTransaction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RuntimeTransaction</code>.
     */
    static validateJSON(data) {
        // validate the optional field `request`
        if (data['request']) { // data not null
          RuntimeRequest.validateJSON(data['request']);
        }
        if (data['responses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['responses'])) {
                throw new Error("Expected the field `responses` to be an array in the JSON data but got " + data['responses']);
            }
            // validate the optional field `responses` (array)
            for (const item of data['responses']) {
                RuntimeResponse.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['sandboxName'] && !(typeof data['sandboxName'] === 'string' || data['sandboxName'] instanceof String)) {
            throw new Error("Expected the field `sandboxName` to be a primitive type in the JSON string but got " + data['sandboxName']);
        }

        return true;
    }


}



/**
 * @member {module:model/RuntimeRequest} request
 */
RuntimeTransaction.prototype['request'] = undefined;

/**
 * @member {Array.<module:model/RuntimeResponse>} responses
 */
RuntimeTransaction.prototype['responses'] = undefined;

/**
 * The source sandbox name.
 * @member {String} sandboxName
 */
RuntimeTransaction.prototype['sandboxName'] = undefined;






export default RuntimeTransaction;

