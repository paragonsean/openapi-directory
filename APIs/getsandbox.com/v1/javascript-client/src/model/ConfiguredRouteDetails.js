/**
 * Sandbox API
 * Sandbox API
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@getsandbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RouteConfig from './RouteConfig';

/**
 * The ConfiguredRouteDetails model module.
 * @module model/ConfiguredRouteDetails
 * @version v1
 */
class ConfiguredRouteDetails {
    /**
     * Constructs a new <code>ConfiguredRouteDetails</code>.
     * @alias module:model/ConfiguredRouteDetails
     * @param errorOverrideType {module:model/ConfiguredRouteDetails.ErrorOverrideTypeEnum} The type of error override applied to this route.
     */
    constructor(errorOverrideType) { 
        
        ConfiguredRouteDetails.initialize(this, errorOverrideType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, errorOverrideType) { 
        obj['errorOverrideType'] = errorOverrideType;
    }

    /**
     * Constructs a <code>ConfiguredRouteDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConfiguredRouteDetails} obj Optional instance to populate.
     * @return {module:model/ConfiguredRouteDetails} The populated <code>ConfiguredRouteDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConfiguredRouteDetails();

            if (data.hasOwnProperty('activeErrorOverride')) {
                obj['activeErrorOverride'] = ApiClient.convertToType(data['activeErrorOverride'], 'Boolean');
            }
            if (data.hasOwnProperty('activeLatency')) {
                obj['activeLatency'] = ApiClient.convertToType(data['activeLatency'], 'Boolean');
            }
            if (data.hasOwnProperty('defaultLatency')) {
                obj['defaultLatency'] = ApiClient.convertToType(data['defaultLatency'], 'Number');
            }
            if (data.hasOwnProperty('errorOverrideType')) {
                obj['errorOverrideType'] = ApiClient.convertToType(data['errorOverrideType'], 'String');
            }
            if (data.hasOwnProperty('loadLatency')) {
                obj['loadLatency'] = ApiClient.convertToType(data['loadLatency'], 'Number');
            }
            if (data.hasOwnProperty('loadThreshold')) {
                obj['loadThreshold'] = ApiClient.convertToType(data['loadThreshold'], 'Number');
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], {'String': 'String'});
            }
            if (data.hasOwnProperty('routeConfig')) {
                obj['routeConfig'] = RouteConfig.constructFromObject(data['routeConfig']);
            }
            if (data.hasOwnProperty('transport')) {
                obj['transport'] = ApiClient.convertToType(data['transport'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConfiguredRouteDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConfiguredRouteDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ConfiguredRouteDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['errorOverrideType'] && !(typeof data['errorOverrideType'] === 'string' || data['errorOverrideType'] instanceof String)) {
            throw new Error("Expected the field `errorOverrideType` to be a primitive type in the JSON string but got " + data['errorOverrideType']);
        }
        // ensure the json data is a string
        if (data['method'] && !(typeof data['method'] === 'string' || data['method'] instanceof String)) {
            throw new Error("Expected the field `method` to be a primitive type in the JSON string but got " + data['method']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // validate the optional field `routeConfig`
        if (data['routeConfig']) { // data not null
          RouteConfig.validateJSON(data['routeConfig']);
        }
        // ensure the json data is a string
        if (data['transport'] && !(typeof data['transport'] === 'string' || data['transport'] instanceof String)) {
            throw new Error("Expected the field `transport` to be a primitive type in the JSON string but got " + data['transport']);
        }

        return true;
    }


}

ConfiguredRouteDetails.RequiredProperties = ["errorOverrideType"];

/**
 * Whether error overrides are enabled or not.
 * @member {Boolean} activeErrorOverride
 */
ConfiguredRouteDetails.prototype['activeErrorOverride'] = undefined;

/**
 * Whether latency delays are enabled or not.
 * @member {Boolean} activeLatency
 */
ConfiguredRouteDetails.prototype['activeLatency'] = undefined;

/**
 * A delay in milliseconds applied to requests at a 'normal' level.
 * @member {Number} defaultLatency
 */
ConfiguredRouteDetails.prototype['defaultLatency'] = undefined;

/**
 * The type of error override applied to this route.
 * @member {module:model/ConfiguredRouteDetails.ErrorOverrideTypeEnum} errorOverrideType
 */
ConfiguredRouteDetails.prototype['errorOverrideType'] = undefined;

/**
 * A delay in milliseconds applied to requests at a 'high' level.
 * @member {Number} loadLatency
 */
ConfiguredRouteDetails.prototype['loadLatency'] = undefined;

/**
 * The threshold in transactions/second to signify 'high' load
 * @member {Number} loadThreshold
 */
ConfiguredRouteDetails.prototype['loadThreshold'] = undefined;

/**
 * @member {String} method
 */
ConfiguredRouteDetails.prototype['method'] = undefined;

/**
 * @member {String} path
 */
ConfiguredRouteDetails.prototype['path'] = undefined;

/**
 * @member {Object.<String, String>} properties
 */
ConfiguredRouteDetails.prototype['properties'] = undefined;

/**
 * @member {module:model/RouteConfig} routeConfig
 */
ConfiguredRouteDetails.prototype['routeConfig'] = undefined;

/**
 * @member {String} transport
 */
ConfiguredRouteDetails.prototype['transport'] = undefined;





/**
 * Allowed values for the <code>errorOverrideType</code> property.
 * @enum {String}
 * @readonly
 */
ConfiguredRouteDetails['ErrorOverrideTypeEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "TIMEOUT"
     * @const
     */
    "TIMEOUT": "TIMEOUT",

    /**
     * value: "SERVICE_DOWN"
     * @const
     */
    "SERVICE_DOWN": "SERVICE_DOWN"
};



export default ConfiguredRouteDetails;

