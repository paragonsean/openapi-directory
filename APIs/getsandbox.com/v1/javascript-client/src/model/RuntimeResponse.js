/**
 * Sandbox API
 * Sandbox API
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@getsandbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Error from './Error';

/**
 * The RuntimeResponse model module.
 * @module model/RuntimeResponse
 * @version v1
 */
class RuntimeResponse {
    /**
     * Constructs a new <code>RuntimeResponse</code>.
     * @alias module:model/RuntimeResponse
     */
    constructor() { 
        
        RuntimeResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RuntimeResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RuntimeResponse} obj Optional instance to populate.
     * @return {module:model/RuntimeResponse} The populated <code>RuntimeResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RuntimeResponse();

            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('durationMillis')) {
                obj['durationMillis'] = ApiClient.convertToType(data['durationMillis'], 'Number');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = Error.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], {'String': 'String'});
            }
            if (data.hasOwnProperty('respondedTimestamp')) {
                obj['respondedTimestamp'] = ApiClient.convertToType(data['respondedTimestamp'], 'Number');
            }
            if (data.hasOwnProperty('responseDelay')) {
                obj['responseDelay'] = ApiClient.convertToType(data['responseDelay'], 'Number');
            }
            if (data.hasOwnProperty('transport')) {
                obj['transport'] = ApiClient.convertToType(data['transport'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RuntimeResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RuntimeResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          Error.validateJSON(data['error']);
        }
        // ensure the json data is a string
        if (data['transport'] && !(typeof data['transport'] === 'string' || data['transport'] instanceof String)) {
            throw new Error("Expected the field `transport` to be a primitive type in the JSON string but got " + data['transport']);
        }

        return true;
    }


}



/**
 * The body of the given response.
 * @member {String} body
 */
RuntimeResponse.prototype['body'] = undefined;

/**
 * Duration in milliseconds of the processing time in Sandbox.
 * @member {Number} durationMillis
 */
RuntimeResponse.prototype['durationMillis'] = undefined;

/**
 * @member {module:model/Error} error
 */
RuntimeResponse.prototype['error'] = undefined;

/**
 * Transport headers for the given response.
 * @member {Object.<String, String>} headers
 */
RuntimeResponse.prototype['headers'] = undefined;

/**
 * The epoch time in milliseconds when the response was sent.
 * @member {Number} respondedTimestamp
 */
RuntimeResponse.prototype['respondedTimestamp'] = undefined;

/**
 * Duration in milliseconds of the response delay.
 * @member {Number} responseDelay
 */
RuntimeResponse.prototype['responseDelay'] = undefined;

/**
 * Which transport the request was for, 'HTTP'.
 * @member {String} transport
 */
RuntimeResponse.prototype['transport'] = undefined;






export default RuntimeResponse;

