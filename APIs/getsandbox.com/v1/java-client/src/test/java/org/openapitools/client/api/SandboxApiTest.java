/*
 * Sandbox API
 * Sandbox API
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@getsandbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateSandbox;
import org.openapitools.client.model.Sandbox;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SandboxApi
 */
@Disabled
public class SandboxApiTest {

    private final SandboxApi api = new SandboxApi();

    /**
     * createSandbox
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSandboxTest() throws ApiException {
        CreateSandbox body = null;
        Sandbox response = api.createSandbox(body);
        // TODO: test validations
    }

    /**
     * deleteSandbox
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSandboxTest() throws ApiException {
        String sandboxName = null;
        api.deleteSandbox(sandboxName);
        // TODO: test validations
    }

    /**
     * deleteSandboxState
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSandboxStateTest() throws ApiException {
        String sandboxName = null;
        api.deleteSandboxState(sandboxName);
        // TODO: test validations
    }

    /**
     * forkSandbox
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void forkSandboxTest() throws ApiException {
        String sandboxName = null;
        Sandbox response = api.forkSandbox(sandboxName);
        // TODO: test validations
    }

    /**
     * getSandbox
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSandboxTest() throws ApiException {
        String sandboxName = null;
        Sandbox response = api.getSandbox(sandboxName);
        // TODO: test validations
    }

    /**
     * getSandboxState
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSandboxStateTest() throws ApiException {
        String sandboxName = null;
        api.getSandboxState(sandboxName);
        // TODO: test validations
    }

    /**
     * getSandboxes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSandboxesTest() throws ApiException {
        String filterType = null;
        List<Sandbox> response = api.getSandboxes(filterType);
        // TODO: test validations
    }

    /**
     * updateSandbox
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSandboxTest() throws ApiException {
        String sandboxName = null;
        Sandbox body = null;
        Sandbox response = api.updateSandbox(sandboxName, body);
        // TODO: test validations
    }

}
