/**
 * Sandbox API
 * Sandbox API
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@getsandbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRuntimeRequest.h
 *
 * 
 */

#ifndef OAIRuntimeRequest_H
#define OAIRuntimeRequest_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRuntimeRequest : public OAIObject {
public:
    OAIRuntimeRequest();
    OAIRuntimeRequest(QString json);
    ~OAIRuntimeRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QString getContentType() const;
    void setContentType(const QString &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    QString getFullSandboxId() const;
    void setFullSandboxId(const QString &full_sandbox_id);
    bool is_full_sandbox_id_Set() const;
    bool is_full_sandbox_id_Valid() const;

    QString getFullSandboxName() const;
    void setFullSandboxName(const QString &full_sandbox_name);
    bool is_full_sandbox_name_Set() const;
    bool is_full_sandbox_name_Valid() const;

    QMap<QString, QString> getHeaders() const;
    void setHeaders(const QMap<QString, QString> &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    QString getIp() const;
    void setIp(const QString &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    QMap<QString, QString> getProperties() const;
    void setProperties(const QMap<QString, QString> &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    qint64 getReceivedTimestamp() const;
    void setReceivedTimestamp(const qint64 &received_timestamp);
    bool is_received_timestamp_Set() const;
    bool is_received_timestamp_Valid() const;

    QString getSandboxId() const;
    void setSandboxId(const QString &sandbox_id);
    bool is_sandbox_id_Set() const;
    bool is_sandbox_id_Valid() const;

    QString getSandboxName() const;
    void setSandboxName(const QString &sandbox_name);
    bool is_sandbox_name_Set() const;
    bool is_sandbox_name_Valid() const;

    QString getTransport() const;
    void setTransport(const QString &transport);
    bool is_transport_Set() const;
    bool is_transport_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QString m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;

    QString m_full_sandbox_id;
    bool m_full_sandbox_id_isSet;
    bool m_full_sandbox_id_isValid;

    QString m_full_sandbox_name;
    bool m_full_sandbox_name_isSet;
    bool m_full_sandbox_name_isValid;

    QMap<QString, QString> m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    QString m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;

    QMap<QString, QString> m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    qint64 m_received_timestamp;
    bool m_received_timestamp_isSet;
    bool m_received_timestamp_isValid;

    QString m_sandbox_id;
    bool m_sandbox_id_isSet;
    bool m_sandbox_id_isValid;

    QString m_sandbox_name;
    bool m_sandbox_name_isSet;
    bool m_sandbox_name_isValid;

    QString m_transport;
    bool m_transport_isSet;
    bool m_transport_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRuntimeRequest)

#endif // OAIRuntimeRequest_H
