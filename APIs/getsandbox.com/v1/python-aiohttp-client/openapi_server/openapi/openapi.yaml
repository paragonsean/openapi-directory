openapi: 3.0.1
info:
  contact:
    email: hello@getsandbox.com
    name: Sandbox Support
    url: https://getsandbox.com
  description: Sandbox API
  termsOfService: https://getsandbox.com/policy/customer-agreement
  title: Sandbox API
  version: v1
  x-apisguru-categories:
  - developer_tools
  x-logo:
    backgroundColor: '#161924'
    url: https://getsandbox.com/lib/img/logo-white-72dpi.png
  x-origin:
  - format: swagger
    url: https://getsandbox.com/lib/js/vendor/swagger/swagger.json
    version: "2.0"
  x-providerName: getsandbox.com
  x-tags:
  - sandbox
  - API
  - REST
  - SOAP
  - Swagger
  - OpenAPI
externalDocs:
  url: https://getsandbox.com/docs/api/overview
servers:
- url: https://getsandbox.com/api/
tags:
- name: Activity
- name: Sandbox
paths:
  /1/activity/search:
    get:
      operationId: get_sandboxes_activity
      parameters:
      - description: "Timestamp to start search from, epoch time in milliseconds."
        in: query
        name: fromTimestamp
        schema:
          format: int64
          type: integer
      - description: Comma-separated list of Sandbox names to search.
        in: query
        name: sourceSandboxes
        schema:
          type: string
      - description: "A keyword to search activities by, will match any part of the\
          \ ActivityMessage."
        in: query
        name: keyword
        schema:
          type: string
      - description: "Flag to return all types of activity, defaults to just Requests"
        in: query
        name: allTypes
        schema:
          type: boolean
      - description: Maximum number of results to return
        in: query
        name: maxResults
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              example: |-
                [
                  {
                    "createdTimestamp": 1464829513623,
                    "messageType": "request",
                    "sandboxId": "s-328f0d3a-7cf8-400c-a5e8-dc0e84b737b3",
                    "messageObject": {
                      "request": {
                        "transport": "HTTP",
                        "sandboxId": "s-328f0d3a-7cf8-400c-a5e8-dc0e84b737b3",
                        "sandboxName": "testbox",
                        "fullSandboxName": "testbox",
                        "fullSandboxId": "s-328f0d3a-7cf8-400c-a5e8-dc0e84b737b3",
                        "headers": {
                          "Accept": "*/*",
                          "Host": "testbox.getsandbox.com",
                          "User-Agent": "curl/7.43.0",
                          "X-Forwarded-For": "10.0.2.2"
                        },
                        "properties": {},
                        "body": "",
                        "ip": "10.0.2.2",
                        "cookies": {},
                        "query": {},
                        "accepted": ["*/*"],
                        "url": "/hello",
                        "params": {},
                        "method": "GET",
                        "path": "/hello",
                        "rawUrl": "/hello",
                        "received_timestamp": 1464829513575
                      },
                      "responses": [
                        {
                          "transport": "HTTP",
                          "body": "[\n  \"hello\"\n]",
                          "headers": {
                            "Content-Type": "application/json"
                          },
                          "cookies": [],
                          "responded_timestamp": 1464829513609,
                          "duration_ms": 34,
                          "status": 200
                        }
                      ]
                    }
                  },
                  {
                    "createdTimestamp": 1464829507925,
                    "messageType": "request",
                    "sandboxId": "s-328f0d3a-7cf8-400c-a5e8-dc0e84b737b3",
                    "messageObject": {
                      "request": {
                        "transport": "HTTP",
                        "sandboxId": "s-328f0d3a-7cf8-400c-a5e8-dc0e84b737b3",
                        "sandboxName": "testbox",
                        "fullSandboxName": "testbox",
                        "fullSandboxId": "s-328f0d3a-7cf8-400c-a5e8-dc0e84b737b3",
                        "headers": {
                          "Accept": "*/*",
                          "Host": "testbox.getsandbox.com",
                          "User-Agent": "curl/7.43.0",
                          "X-Forwarded-For": "10.0.2.2"
                        },
                        "properties": {},
                        "body": "",
                        "ip": "10.0.2.2",
                        "cookies": {},
                        "query": {},
                        "accepted": ["*/*"],
                        "url": "/hello",
                        "params": {},
                        "method": "GET",
                        "path": "/hello",
                        "rawUrl": "/hello",
                        "received_timestamp": 1464829507856
                      },
                      "responses": [
                        {
                          "transport": "HTTP",
                          "body": "[\n  \"hello\",\n  \"hello\",\n  \"hello\",\n  \"hello\",\n  \"hello\",\n  \"hello\"\n]",
                          "headers": {
                            "Content-Type": "application/json"
                          },
                          "cookies": [],
                          "responded_timestamp": 1464829507885,
                          "duration_ms": 29,
                          "status": 200
                        }
                      ]
                    }
                  }
                ]
              schema:
                items:
                  $ref: '#/components/schemas/ActivityMessage'
                type: array
          description: successful operation
      summary: searchActivity
      tags:
      - Activity
      x-openapi-router-controller: openapi_server.controllers.activity_controller
  /1/sandboxes:
    get:
      operationId: get_sandboxes
      parameters:
      - in: query
        name: filterType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                [
                  {
                    "id": "s-328f0d3a-7cf8-400c-a5e8-dc0e84b737b3",
                    "name": "testbox",
                    "description": "",
                    "configuredRoutes": [],
                    "hasRepository": true,
                    "apiDefinition": "None",
                    "stackType": "JavaScript",
                    "runtimeVersion": "VERSION_2",
                    "proxyStatus": "STARTED",
                    "transportType": "HTTP",
                    "properties": {},
                    "gitUrl": "http://git.getsandbox.com/testbox.git",
                    "sandboxUrl": "http://testbox.getsandbox.com"
                  }
                ]
              schema:
                items:
                  $ref: '#/components/schemas/Sandbox'
                type: array
          description: successful operation
      summary: getSandboxes
      tags:
      - Sandbox
      x-openapi-router-controller: openapi_server.controllers.sandbox_controller
    post:
      operationId: create_sandbox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSandbox'
        description: Sandbox to be created
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "id": "s-328f0d3a-7cf8-400c-a5e8-dc0e84b737b3",
                  "name": "testbox",
                  "description": "",
                  "configuredRoutes": [],
                  "hasRepository": true,
                  "apiDefinition": "None",
                  "stackType": "JavaScript",
                  "runtimeVersion": "VERSION_2",
                  "proxyStatus": "STARTED",
                  "transportType": "HTTP",
                  "properties": {},
                  "gitUrl": "http://git.getsandbox.com/testbox.git",
                  "sandboxUrl": "http://testbox.getsandbox.com"
                }
              schema:
                $ref: '#/components/schemas/Sandbox'
          description: successful operation
      summary: createSandbox
      tags:
      - Sandbox
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.sandbox_controller
  /1/sandboxes/{sandboxName}:
    delete:
      operationId: delete_sandbox
      parameters:
      - description: Name of the Sandbox
        in: path
        name: sandboxName
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      summary: deleteSandbox
      tags:
      - Sandbox
      x-openapi-router-controller: openapi_server.controllers.sandbox_controller
    get:
      operationId: get_sandbox
      parameters:
      - description: Name of the Sandbox
        in: path
        name: sandboxName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "id": "s-328f0d3a-7cf8-400c-a5e8-dc0e84b737b3",
                  "name": "testbox",
                  "description": "",
                  "configuredRoutes": [],
                  "hasRepository": true,
                  "apiDefinition": "None",
                  "stackType": "JavaScript",
                  "runtimeVersion": "VERSION_2",
                  "proxyStatus": "STARTED",
                  "transportType": "HTTP",
                  "properties": {},
                  "gitUrl": "http://git.getsandbox.com/testbox.git",
                  "sandboxUrl": "http://testbox.getsandbox.com"
                }
              schema:
                $ref: '#/components/schemas/Sandbox'
          description: successful operation
      summary: getSandbox
      tags:
      - Sandbox
      x-openapi-router-controller: openapi_server.controllers.sandbox_controller
    put:
      operationId: update_sandbox
      parameters:
      - description: Name of the Sandbox
        in: path
        name: sandboxName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sandbox'
        description: Fields to updated on given Sandbox
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "id": "s-328f0d3a-7cf8-400c-a5e8-dc0e84b737b3",
                  "name": "testbox",
                  "description": "",
                  "configuredRoutes": [],
                  "hasRepository": true,
                  "apiDefinition": "None",
                  "stackType": "JavaScript",
                  "runtimeVersion": "VERSION_2",
                  "proxyStatus": "STARTED",
                  "transportType": "HTTP",
                  "properties": {},
                  "gitUrl": "http://git.getsandbox.com/testbox.git",
                  "sandboxUrl": "http://testbox.getsandbox.com"
                }
              schema:
                $ref: '#/components/schemas/Sandbox'
          description: successful operation
      summary: updateSandbox
      tags:
      - Sandbox
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.sandbox_controller
  /1/sandboxes/{sandboxName}/fork:
    get:
      operationId: fork_sandbox
      parameters:
      - description: Name of the Sandbox
        in: path
        name: sandboxName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "id": "s-328f0d3a-7cf8-400c-a5e8-dc0e84b737b3",
                  "name": "testbox",
                  "description": "",
                  "configuredRoutes": [],
                  "hasRepository": true,
                  "apiDefinition": "None",
                  "stackType": "JavaScript",
                  "runtimeVersion": "VERSION_2",
                  "proxyStatus": "STARTED",
                  "transportType": "HTTP",
                  "properties": {},
                  "gitUrl": "http://git.getsandbox.com/testbox.git",
                  "sandboxUrl": "http://testbox.getsandbox.com"
                }
              schema:
                $ref: '#/components/schemas/Sandbox'
          description: successful operation
      summary: forkSandbox
      tags:
      - Sandbox
      x-openapi-router-controller: openapi_server.controllers.sandbox_controller
  /1/sandboxes/{sandboxName}/state:
    delete:
      operationId: delete_sandbox_state
      parameters:
      - description: Name of the Sandbox
        in: path
        name: sandboxName
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      summary: deleteSandboxState
      tags:
      - Sandbox
      x-openapi-router-controller: openapi_server.controllers.sandbox_controller
    get:
      operationId: get_sandbox_state
      parameters:
      - description: Name of the Sandbox
        in: path
        name: sandboxName
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      summary: getSandboxState
      tags:
      - Sandbox
      x-openapi-router-controller: openapi_server.controllers.sandbox_controller
components:
  schemas:
    ActivityMessage:
      example:
        messageType: request
        createdTimestamp: 0
        sandboxId: sandboxId
        messageObject:
          request:
            headers:
              key: headers
            receivedTimestamp: 6
            fullSandboxName: fullSandboxName
            ip: ip
            sandboxId: sandboxId
            fullSandboxId: fullSandboxId
            sandboxName: sandboxName
            transport: transport
            body: body
            contentType: contentType
            properties:
              key: properties
          responses:
          - respondedTimestamp: 5
            headers:
              key: headers
            durationMillis: 1
            transport: transport
            body: body
            error:
              detailedMessage: detailedMessage
              code: code
              field: field
              message: message
            responseDelay: 5
          - respondedTimestamp: 5
            headers:
              key: headers
            durationMillis: 1
            transport: transport
            body: body
            error:
              detailedMessage: detailedMessage
              code: code
              field: field
              message: message
            responseDelay: 5
          sandboxName: sandboxName
        message: message
      properties:
        createdTimestamp:
          description: Epoch time in milliseconds when the message was created
          format: int64
          title: createdTimestamp
          type: integer
        message:
          description: The details of the message when type is 'log'
          title: message
          type: string
        messageObject:
          $ref: '#/components/schemas/RuntimeTransaction'
        messageType:
          enum:
          - request
          - log
          title: messageType
          type: string
        sandboxId:
          description: The ID of the sandbox that generated this message
          title: sandboxId
          type: string
      title: ActivityMessage
      type: object
    ConfiguredRouteDetails:
      example:
        defaultLatency: 2402
        loadLatency: 18082
        path: path
        routeConfig:
          path: path
          latencyMultiplier: 5
          method: method
          errorStrategy: NONE
          latencyMs: 5
          latencyType: NONE
        activeLatency: true
        method: method
        transport: transport
        loadThreshold: 14
        activeErrorOverride: true
        properties:
          key: properties
        errorOverrideType: NONE
      properties:
        activeErrorOverride:
          description: Whether error overrides are enabled or not.
          title: activeErrorOverride
          type: boolean
        activeLatency:
          description: Whether latency delays are enabled or not.
          title: activeLatency
          type: boolean
        defaultLatency:
          description: A delay in milliseconds applied to requests at a 'normal' level.
          format: int32
          maximum: 30000
          minimum: 0
          title: defaultLatency
          type: integer
        errorOverrideType:
          description: The type of error override applied to this route.
          enum:
          - NONE
          - TIMEOUT
          - SERVICE_DOWN
          title: errorOverrideType
          type: string
        loadLatency:
          description: A delay in milliseconds applied to requests at a 'high' level.
          format: int32
          maximum: 30000
          minimum: 0
          title: loadLatency
          type: integer
        loadThreshold:
          description: The threshold in transactions/second to signify 'high' load
          format: int32
          maximum: 100
          minimum: 0
          title: loadThreshold
          type: integer
        method:
          title: method
          type: string
        path:
          title: path
          type: string
        properties:
          additionalProperties:
            type: string
          title: properties
          type: object
        routeConfig:
          $ref: '#/components/schemas/RouteConfig'
        transport:
          title: transport
          type: string
      required:
      - errorOverrideType
      title: ConfiguredRouteDetails
      type: object
    CreateSandbox:
      example:
        parentSandboxName: parentSandboxName
        commitBaseTemplate: true
        name: name
        description: description
        ownerOrganisationName: ownerOrganisationName
        transportType: HTTP
      properties:
        commitBaseTemplate:
          description: Whether to commit the example Sandbox definition upon creation.
          title: commitBaseTemplate
          type: boolean
        description:
          description: Text describing this Sandbox.
          maxLength: 255
          minLength: 0
          pattern: "^[A-Za-z-_ 0-9]*$"
          title: description
          type: string
        name:
          description: "Optional name to give the Sandbox, will be generated if omitted."
          pattern: "^[A-Za-z-_ 0-9]*$"
          title: name
          type: string
        ownerOrganisationName:
          description: Name of the team this Sandbox should be created under.
          maxLength: 36
          minLength: 2
          pattern: "^[a-zA-Z-_0-9]*$"
          title: ownerOrganisationName
          type: string
        parentSandboxName:
          description: "Name of the Sandbox this should be created under, if exists\
            \ will be a 'clone'."
          pattern: "^[A-Za-z-_ 0-9]*$"
          title: parentSandboxName
          type: string
        transportType:
          enum:
          - HTTP
          title: transportType
          type: string
      title: CreateSandbox
      type: object
    Error:
      example:
        detailedMessage: detailedMessage
        code: code
        field: field
        message: message
      properties:
        code:
          title: code
          type: string
        detailedMessage:
          description: Longer message describing the error.
          title: detailedMessage
          type: string
        field:
          description: Message describing which field the error relates to.
          title: field
          type: string
        message:
          description: Short message describing the error.
          title: message
          type: string
      title: Error
      type: object
    RouteConfig:
      example:
        path: path
        latencyMultiplier: 5
        method: method
        errorStrategy: NONE
        latencyMs: 5
        latencyType: NONE
      properties:
        errorStrategy:
          enum:
          - NONE
          - TIMEOUT
          - SERVICE_DOWN
          title: errorStrategy
          type: string
        latencyMs:
          format: int32
          title: latencyMs
          type: integer
        latencyMultiplier:
          format: int32
          title: latencyMultiplier
          type: integer
        latencyType:
          enum:
          - NONE
          - CONSTANT
          - LINEAR
          title: latencyType
          type: string
        method:
          title: method
          type: string
        path:
          title: path
          type: string
      title: RouteConfig
      type: object
    RuntimeRequest:
      example:
        headers:
          key: headers
        receivedTimestamp: 6
        fullSandboxName: fullSandboxName
        ip: ip
        sandboxId: sandboxId
        fullSandboxId: fullSandboxId
        sandboxName: sandboxName
        transport: transport
        body: body
        contentType: contentType
        properties:
          key: properties
      properties:
        body:
          description: The body of the given request.
          title: body
          type: string
        contentType:
          description: "The content type of the body, for example 'application/json'."
          title: contentType
          type: string
        fullSandboxId:
          description: The parent ID of the Sandbox that received the request.
          title: fullSandboxId
          type: string
        fullSandboxName:
          description: The parent name of the Sandbox that received the request.
          title: fullSandboxName
          type: string
        headers:
          additionalProperties:
            type: string
          description: Transport headers for the given request.
          title: headers
          type: object
        ip:
          description: The requestor IP address.
          title: ip
          type: string
        properties:
          additionalProperties:
            type: string
          title: properties
          type: object
        receivedTimestamp:
          description: The epoch time in milliseconds when the request was received.
          format: int64
          title: receivedTimestamp
          type: integer
        sandboxId:
          description: The ID of the Sandbox that received the request.
          title: sandboxId
          type: string
        sandboxName:
          description: The name of the Sandbox that received the request.
          title: sandboxName
          type: string
        transport:
          description: "Which transport the request was for, 'HTTP'."
          title: transport
          type: string
      title: RuntimeRequest
      type: object
    RuntimeResponse:
      example:
        respondedTimestamp: 5
        headers:
          key: headers
        durationMillis: 1
        transport: transport
        body: body
        error:
          detailedMessage: detailedMessage
          code: code
          field: field
          message: message
        responseDelay: 5
      properties:
        body:
          description: The body of the given response.
          title: body
          type: string
        durationMillis:
          description: Duration in milliseconds of the processing time in Sandbox.
          format: int64
          title: durationMillis
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        headers:
          additionalProperties:
            type: string
          description: Transport headers for the given response.
          title: headers
          type: object
        respondedTimestamp:
          description: The epoch time in milliseconds when the response was sent.
          format: int64
          title: respondedTimestamp
          type: integer
        responseDelay:
          description: Duration in milliseconds of the response delay.
          format: int32
          title: responseDelay
          type: integer
        transport:
          description: "Which transport the request was for, 'HTTP'."
          title: transport
          type: string
      title: RuntimeResponse
      type: object
    RuntimeTransaction:
      example:
        request:
          headers:
            key: headers
          receivedTimestamp: 6
          fullSandboxName: fullSandboxName
          ip: ip
          sandboxId: sandboxId
          fullSandboxId: fullSandboxId
          sandboxName: sandboxName
          transport: transport
          body: body
          contentType: contentType
          properties:
            key: properties
        responses:
        - respondedTimestamp: 5
          headers:
            key: headers
          durationMillis: 1
          transport: transport
          body: body
          error:
            detailedMessage: detailedMessage
            code: code
            field: field
            message: message
          responseDelay: 5
        - respondedTimestamp: 5
          headers:
            key: headers
          durationMillis: 1
          transport: transport
          body: body
          error:
            detailedMessage: detailedMessage
            code: code
            field: field
            message: message
          responseDelay: 5
        sandboxName: sandboxName
      properties:
        request:
          $ref: '#/components/schemas/RuntimeRequest'
        responses:
          items:
            $ref: '#/components/schemas/RuntimeResponse'
          title: responses
          type: array
        sandboxName:
          description: The source sandbox name.
          title: sandboxName
          type: string
      title: RuntimeTransaction
      type: object
    Sandbox:
      example:
        proxyStatus: STARTED
        runtimeVersion: VERSION_1
        sandboxUrl: sandboxUrl
        description: description
        apiDefinition: None
        childSandboxes:
        - null
        - null
        ipWhitelist:
        - ipWhitelist
        - ipWhitelist
        parentSandbox: null
        configuredRoutes:
        - defaultLatency: 2402
          loadLatency: 18082
          path: path
          routeConfig:
            path: path
            latencyMultiplier: 5
            method: method
            errorStrategy: NONE
            latencyMs: 5
            latencyType: NONE
          activeLatency: true
          method: method
          transport: transport
          loadThreshold: 14
          activeErrorOverride: true
          properties:
            key: properties
          errorOverrideType: NONE
        - defaultLatency: 2402
          loadLatency: 18082
          path: path
          routeConfig:
            path: path
            latencyMultiplier: 5
            method: method
            errorStrategy: NONE
            latencyMs: 5
            latencyType: NONE
          activeLatency: true
          method: method
          transport: transport
          loadThreshold: 14
          activeErrorOverride: true
          properties:
            key: properties
          errorOverrideType: NONE
        name: name
        transportType: HTTP
        hasRepository: true
        id: id
        stackType: JavaScript
        gitUrl: gitUrl
        properties:
          key: "{}"
        gitAccessToken: gitAccessToken
      properties:
        apiDefinition:
          description: The import source of this Sandbox.
          enum:
          - None
          - Apiary
          - Swagger_V2_Json
          - RAML_V08
          - WSDL
          title: apiDefinition
          type: string
        childSandboxes:
          description: Clones of this Sandbox.
          items:
            $ref: '#/components/schemas/Sandbox'
          title: childSandboxes
          type: array
          uniqueItems: true
        configuredRoutes:
          description: "Extra configuration applied to some routes, delays, overrides\
            \ etc."
          items:
            $ref: '#/components/schemas/ConfiguredRouteDetails'
          title: configuredRoutes
          type: array
          uniqueItems: true
        description:
          maxLength: 255
          minLength: 0
          pattern: "^[A-Za-z0-9 _\\-]*$"
          title: description
          type: string
        gitAccessToken:
          title: gitAccessToken
          type: string
        gitUrl:
          description: The git clone URL.
          title: gitUrl
          type: string
        hasRepository:
          description: Whether this Sandbox has a git repository or not.
          title: hasRepository
          type: boolean
        id:
          description: The ID of the Sandbox.
          title: id
          type: string
        ipWhitelist:
          description: "The list of IPs allowed to make requests, all allowed if omitted."
          items:
            type: string
          title: ipWhitelist
          type: array
          uniqueItems: true
        name:
          pattern: "^[a-z0-9\\-]*$"
          title: name
          type: string
        parentSandbox:
          $ref: '#/components/schemas/Sandbox'
        properties:
          additionalProperties:
            properties: {}
            type: object
          title: properties
          type: object
        proxyStatus:
          description: The listener status.
          enum:
          - STARTED
          - STOPPED
          title: proxyStatus
          type: string
        runtimeVersion:
          description: The library version of this Sandbox.
          enum:
          - VERSION_1
          - VERSION_2
          title: runtimeVersion
          type: string
        sandboxUrl:
          description: The request URL for this Sandbox.
          title: sandboxUrl
          type: string
        stackType:
          enum:
          - JavaScript
          title: stackType
          type: string
        transportType:
          description: The listener transport.
          enum:
          - HTTP
          title: transportType
          type: string
      required:
      - name
      title: Sandbox
      type: object
  securitySchemes:
    api_key:
      in: header
      name: API_Key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_api_key
x-original-swagger-version: "2.0"
