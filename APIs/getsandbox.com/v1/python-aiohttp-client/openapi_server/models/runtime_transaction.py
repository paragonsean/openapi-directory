# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.runtime_request import RuntimeRequest
from openapi_server.models.runtime_response import RuntimeResponse
from openapi_server import util


class RuntimeTransaction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, request: RuntimeRequest=None, responses: List[RuntimeResponse]=None, sandbox_name: str=None):
        """RuntimeTransaction - a model defined in OpenAPI

        :param request: The request of this RuntimeTransaction.
        :param responses: The responses of this RuntimeTransaction.
        :param sandbox_name: The sandbox_name of this RuntimeTransaction.
        """
        self.openapi_types = {
            'request': RuntimeRequest,
            'responses': List[RuntimeResponse],
            'sandbox_name': str
        }

        self.attribute_map = {
            'request': 'request',
            'responses': 'responses',
            'sandbox_name': 'sandboxName'
        }

        self._request = request
        self._responses = responses
        self._sandbox_name = sandbox_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RuntimeTransaction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RuntimeTransaction of this RuntimeTransaction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def request(self):
        """Gets the request of this RuntimeTransaction.


        :return: The request of this RuntimeTransaction.
        :rtype: RuntimeRequest
        """
        return self._request

    @request.setter
    def request(self, request):
        """Sets the request of this RuntimeTransaction.


        :param request: The request of this RuntimeTransaction.
        :type request: RuntimeRequest
        """

        self._request = request

    @property
    def responses(self):
        """Gets the responses of this RuntimeTransaction.


        :return: The responses of this RuntimeTransaction.
        :rtype: List[RuntimeResponse]
        """
        return self._responses

    @responses.setter
    def responses(self, responses):
        """Sets the responses of this RuntimeTransaction.


        :param responses: The responses of this RuntimeTransaction.
        :type responses: List[RuntimeResponse]
        """

        self._responses = responses

    @property
    def sandbox_name(self):
        """Gets the sandbox_name of this RuntimeTransaction.

        The source sandbox name.

        :return: The sandbox_name of this RuntimeTransaction.
        :rtype: str
        """
        return self._sandbox_name

    @sandbox_name.setter
    def sandbox_name(self, sandbox_name):
        """Sets the sandbox_name of this RuntimeTransaction.

        The source sandbox name.

        :param sandbox_name: The sandbox_name of this RuntimeTransaction.
        :type sandbox_name: str
        """

        self._sandbox_name = sandbox_name
