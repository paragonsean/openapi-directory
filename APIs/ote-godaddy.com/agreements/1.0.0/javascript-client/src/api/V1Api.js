/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import ErrorLimit from '../model/ErrorLimit';
import LegalAgreement from '../model/LegalAgreement';

/**
* V1 service.
* @module api/V1Api
* @version 1.0.0
*/
export default class V1Api {

    /**
    * Constructs a new V1Api. 
    * @alias module:api/V1Api
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the get operation.
     * @callback module:api/V1Api~getCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/LegalAgreement>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve Legal Agreements for provided agreements keys
     * @param {Array.<String>} keys Keys for Agreements whose details are to be retrieved
     * @param {Object} opts Optional parameters
     * @param {Number} [xPrivateLabelId] PrivateLabelId to operate as, if different from JWT
     * @param {String} [xMarketId = 'en-US')] Unique identifier of the Market used to retrieve/translate Legal Agreements
     * @param {module:api/V1Api~getCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/LegalAgreement>}
     */
    get(keys, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'keys' is set
      if (keys === undefined || keys === null) {
        throw new Error("Missing the required parameter 'keys' when calling get");
      }

      let pathParams = {
      };
      let queryParams = {
        'keys': this.apiClient.buildCollectionParam(keys, 'csv')
      };
      let headerParams = {
        'X-Private-Label-Id': opts['xPrivateLabelId'],
        'X-Market-Id': opts['xMarketId']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/javascript', 'application/json', 'application/xml', 'text/javascript', 'text/xml'];
      let returnType = [LegalAgreement];
      return this.apiClient.callApi(
        '/v1/agreements', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
