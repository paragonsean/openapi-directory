# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LineItemTaxCollector(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tax_collector_id: int=None):
        """LineItemTaxCollector - a model defined in OpenAPI

        :param tax_collector_id: The tax_collector_id of this LineItemTaxCollector.
        """
        self.openapi_types = {
            'tax_collector_id': int
        }

        self.attribute_map = {
            'tax_collector_id': 'taxCollectorId'
        }

        self._tax_collector_id = tax_collector_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LineItemTaxCollector':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LineItemTaxCollector of this LineItemTaxCollector.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tax_collector_id(self):
        """Gets the tax_collector_id of this LineItemTaxCollector.

        Unique identifier for the company

        :return: The tax_collector_id of this LineItemTaxCollector.
        :rtype: int
        """
        return self._tax_collector_id

    @tax_collector_id.setter
    def tax_collector_id(self, tax_collector_id):
        """Sets the tax_collector_id of this LineItemTaxCollector.

        Unique identifier for the company

        :param tax_collector_id: The tax_collector_id of this LineItemTaxCollector.
        :type tax_collector_id: int
        """
        if tax_collector_id is None:
            raise ValueError("Invalid value for `tax_collector_id`, must not be `None`")

        self._tax_collector_id = tax_collector_id
