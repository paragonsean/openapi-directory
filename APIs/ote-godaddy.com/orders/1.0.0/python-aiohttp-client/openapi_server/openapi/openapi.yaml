openapi: 3.0.0
info:
  title: ""
  version: 1.0.0
  x-apisguru-categories:
  - hosting
  x-origin:
  - format: swagger
    url: https://developer.godaddy.com/swagger/swagger_orders.json
    version: "2.0"
  x-providerName: ote-godaddy.com
  x-serviceName: orders
servers:
- url: //api.ote-godaddy.com
tags:
- description: ""
  name: v1
paths:
  /v1/orders:
    get:
      description: <strong>API Resellers</strong><ul><li>This endpoint does not support
        subaccounts and therefore API Resellers should not supply an X-Shopper-Id
        header</li></ul>
      operationId: list
      parameters:
      - description: Start of range indicating what time-frame should be returned.
          Inclusive
        explode: true
        in: query
        name: periodStart
        required: false
        schema:
          type: string
        style: form
      - description: End of range indicating what time-frame should be returned. Inclusive
        explode: true
        in: query
        name: periodEnd
        required: false
        schema:
          type: string
        style: form
      - description: Domain name to use as the filter of results
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: Product group id to use as the filter of results
        explode: true
        in: query
        name: productGroupId
        required: false
        schema:
          type: integer
        style: form
      - description: Payment profile id to use as the filter of results
        explode: true
        in: query
        name: paymentProfileId
        required: false
        schema:
          type: integer
        style: form
      - description: Parent order id to use as the filter of results
        explode: true
        in: query
        name: parentOrderId
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to skip for pagination
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: Maximum number of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 10000
          minimum: 1
          type: integer
        style: form
      - description: Property name that will be used to sort results. '-' indicates
          descending
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: -createdAt
          enum:
          - createdAt
          - -createdAt
          - orderId
          - -orderId
          - pricing.total
          - -pricing.total
          type: string
        style: form
      - description: "Shopper ID to be operated on, if different from JWT<br/><b>Reseller\
          \ subaccounts are not supported</b>"
        explode: false
        in: header
        name: X-Shopper-Id
        required: false
        schema:
          type: string
        style: simple
      - description: Unique identifier of the Market in which the request is happening
        explode: false
        in: header
        name: X-Market-Id
        required: false
        schema:
          default: en-US
          type: string
        style: simple
      responses:
        "200":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/OrderList'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderList'
            text/javascript:
              schema:
                $ref: '#/components/schemas/OrderList'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrderList'
          description: Request was successful
        "400":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        "401":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        "403":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        "429":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
          description: Too many requests received within interval
        "500":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "504":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Gateway timeout
      summary: Retrieve a list of orders for the authenticated shopper. Only one filter
        may be used at a time
      tags:
      - v1
      x-openapi-router-controller: openapi_server.controllers.v1_controller
  /v1/orders/{orderId}:
    get:
      description: <strong>API Resellers</strong><ul><li>This endpoint does not support
        subaccounts and therefore API Resellers should not supply an X-Shopper-Id
        header</li></ul>
      operationId: get
      parameters:
      - description: Order id whose details are to be retrieved
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      - description: "Shopper ID to be operated on, if different from JWT<br/><b>Reseller\
          \ subaccounts are not supported</b>"
        explode: false
        in: header
        name: X-Shopper-Id
        required: false
        schema:
          type: string
        style: simple
      - description: Unique identifier of the Market in which the request is happening
        explode: false
        in: header
        name: X-Market-Id
        required: false
        schema:
          default: en-US
          type: string
        style: simple
      responses:
        "200":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Order'
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Order'
            text/xml:
              schema:
                $ref: '#/components/schemas/Order'
          description: Request was successful
        "400":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        "401":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        "403":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        "404":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource not found
        "429":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
          description: Too many requests received within interval
        "500":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "504":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Gateway timeout
      summary: Retrieve details for specified order
      tags:
      - v1
      x-openapi-router-controller: openapi_server.controllers.v1_controller
components:
  schemas:
    Address:
      example:
        country: US
        address2: address2
        city: city
        address1: address1
        postalCode: postalCode
        state: state
      properties:
        address1:
          format: street-address
          title: address1
          type: string
        address2:
          format: street-address2
          title: address2
          type: string
        city:
          format: city-name
          title: city
          type: string
        country:
          default: US
          description: |-
            Two-letter ISO country code to be used as a hint for target region<br/><br/>
            NOTE: These are sample values, there are many
            <a href='http://www.iso.org/iso/country_codes.htm'>more</a>
          enum:
          - AC
          - AD
          - AE
          - AF
          - AG
          - AI
          - AL
          - AM
          - AO
          - AQ
          - AR
          - AS
          - AT
          - AU
          - AW
          - AX
          - AZ
          - BA
          - BB
          - BD
          - BE
          - BF
          - BG
          - BH
          - BI
          - BJ
          - BM
          - BN
          - BO
          - BQ
          - BR
          - BS
          - BT
          - BV
          - BW
          - BY
          - BZ
          - CA
          - CC
          - CD
          - CF
          - CG
          - CH
          - CI
          - CK
          - CL
          - CM
          - CN
          - CO
          - CR
          - CV
          - CW
          - CX
          - CY
          - CZ
          - DE
          - DJ
          - DK
          - DM
          - DO
          - DZ
          - EC
          - EE
          - EG
          - EH
          - ER
          - ES
          - ET
          - FI
          - FJ
          - FK
          - FM
          - FO
          - FR
          - GA
          - GB
          - GD
          - GE
          - GF
          - GG
          - GH
          - GI
          - GL
          - GM
          - GN
          - GP
          - GQ
          - GR
          - GS
          - GT
          - GU
          - GW
          - GY
          - HK
          - HM
          - HN
          - HR
          - HT
          - HU
          - ID
          - IE
          - IL
          - IM
          - IN
          - IO
          - IQ
          - IS
          - IT
          - JE
          - JM
          - JO
          - JP
          - KE
          - KG
          - KH
          - KI
          - KM
          - KN
          - KR
          - KV
          - KW
          - KY
          - KZ
          - LA
          - LB
          - LC
          - LI
          - LK
          - LR
          - LS
          - LT
          - LU
          - LV
          - LY
          - MA
          - MC
          - MD
          - ME
          - MG
          - MH
          - MK
          - ML
          - MM
          - MN
          - MO
          - MP
          - MQ
          - MR
          - MS
          - MT
          - MU
          - MV
          - MW
          - MX
          - MY
          - MZ
          - NA
          - NC
          - NE
          - NF
          - NG
          - NI
          - NL
          - "false"
          - NP
          - NR
          - NU
          - NZ
          - OM
          - PA
          - PE
          - PF
          - PG
          - PH
          - PK
          - PL
          - PM
          - PN
          - PR
          - PS
          - PT
          - PW
          - PY
          - QA
          - RE
          - RO
          - RS
          - RU
          - RW
          - SA
          - SB
          - SC
          - SE
          - SG
          - SH
          - SI
          - SJ
          - SK
          - SL
          - SM
          - SN
          - SO
          - SR
          - ST
          - SV
          - SX
          - SZ
          - TC
          - TD
          - TF
          - TG
          - TH
          - TJ
          - TK
          - TL
          - TM
          - TN
          - TO
          - TP
          - TR
          - TT
          - TV
          - TW
          - TZ
          - UA
          - UG
          - UM
          - US
          - UY
          - UZ
          - VA
          - VC
          - VE
          - VG
          - VI
          - VN
          - VU
          - WF
          - WS
          - YE
          - YT
          - ZA
          - ZM
          - ZW
          format: iso-country-code
          title: country
          type: string
        postalCode:
          description: Postal or zip code
          format: postal-code
          title: postalCode
          type: string
        state:
          description: State or province or territory
          format: state-province-territory
          title: state
          type: string
      required:
      - address1
      - city
      - country
      - postalCode
      - state
      title: Address
    BillTo:
      example:
        taxId: taxId
        contact:
          nameLast: nameLast
          nameFirst: nameFirst
          addressMailing:
            country: US
            address2: address2
            city: city
            address1: address1
            postalCode: postalCode
            state: state
          phone: phone
          jobTitle: jobTitle
          organization: organization
          fax: fax
          nameMiddle: nameMiddle
          email: email
      properties:
        contact:
          $ref: '#/components/schemas/Contact'
        taxId:
          description: Tax id used for calculating the tax the customer is required
            to pay
          title: taxId
          type: string
      required:
      - contact
      title: BillTo
    Contact:
      example:
        nameLast: nameLast
        nameFirst: nameFirst
        addressMailing:
          country: US
          address2: address2
          city: city
          address1: address1
          postalCode: postalCode
          state: state
        phone: phone
        jobTitle: jobTitle
        organization: organization
        fax: fax
        nameMiddle: nameMiddle
        email: email
      properties:
        addressMailing:
          $ref: '#/components/schemas/Address'
        email:
          format: email
          title: email
          type: string
        fax:
          format: phone
          title: fax
          type: string
        jobTitle:
          title: jobTitle
          type: string
        nameFirst:
          format: person-name
          title: nameFirst
          type: string
        nameLast:
          format: person-name
          title: nameLast
          type: string
        nameMiddle:
          title: nameMiddle
          type: string
        organization:
          format: organization-name
          title: organization
          type: string
        phone:
          format: phone
          title: phone
          type: string
      required:
      - addressMailing
      - email
      - nameFirst
      - nameLast
      - phone
      title: Contact
    Error:
      example:
        code: code
        fields:
        - pathRelated: pathRelated
          path: path
          code: code
          message: message
        - pathRelated: pathRelated
          path: path
          code: code
          message: message
        message: message
      properties:
        code:
          description: "Short identifier for the error, suitable for indicating the\
            \ specific error within client code"
          format: constant
          title: code
          type: string
        fields:
          description: "List of the specific fields, and the errors found with their\
            \ contents"
          items:
            $ref: '#/components/schemas/ErrorField'
          title: fields
          type: array
        message:
          description: "Human-readable, English description of the error"
          title: message
          type: string
      required:
      - code
      title: Error
    ErrorField:
      example:
        pathRelated: pathRelated
        path: path
        code: code
        message: message
      properties:
        code:
          description: "Short identifier for the error, suitable for indicating the\
            \ specific error within client code"
          format: constant
          title: code
          type: string
        message:
          description: "Human-readable, English description of the problem with the\
            \ contents of the field"
          title: message
          type: string
        path:
          description: |-
            <ul>
            <li style='margin-left: 12px;'>JSONPath referring to a field containing an error</li>
            <strong style='margin-left: 12px;'>OR</strong>
            <li style='margin-left: 12px;'>JSONPath referring to a field that refers to an object containing an error, with more detail in `pathRelated`</li>
            </ul>
          format: json-path
          title: path
          type: string
        pathRelated:
          description: "JSONPath referring to a field containing an error, which is\
            \ referenced by `path`"
          format: json-path
          title: pathRelated
          type: string
      required:
      - code
      - path
      title: ErrorField
    ErrorLimit:
      example:
        code: code
        retryAfterSec: 6
        fields:
        - pathRelated: pathRelated
          path: path
          code: code
          message: message
        - pathRelated: pathRelated
          path: path
          code: code
          message: message
        message: message
      properties:
        code:
          description: "Short identifier for the error, suitable for indicating the\
            \ specific error within client code"
          format: constant
          title: code
          type: string
        fields:
          description: "List of the specific fields, and the errors found with their\
            \ contents"
          items:
            $ref: '#/components/schemas/ErrorField'
          title: fields
          type: array
        message:
          description: "Human-readable, English description of the error"
          title: message
          type: string
        retryAfterSec:
          description: Number of seconds to wait before attempting a similar request
          format: integer-positive
          title: retryAfterSec
          type: integer
      required:
      - code
      - retryAfterSec
      title: ErrorLimit
    LineItem:
      example:
        period: 0.8008281904610115
        quantity: 4
        pfid: 6
        domains:
        - domains
        - domains
        label: label
        taxCollector:
          taxCollectorId: 7
        periodUnit: MONTH
        pricing:
          fees:
            icann: 5
            total: 5
          sale: 7
          unit: "{}"
          subtotal: 3
          discount: 1
          taxes: 2
          savings: 9
          list: 2
      properties:
        domains:
          description: A collection of domain names purchased if the current product
            is domain
          items:
            type: string
          title: domains
          type: array
        label:
          description: Human readable description of the current product
          title: label
          type: string
        period:
          default: 1
          format: double
          title: period
          type: number
        periodUnit:
          default: MONTH
          description: The unit of time that periodCount is measured in
          enum:
          - MONTH
          - QUARTER
          - SEMI_ANNUAL
          - YEAR
          - ONE_TIME
          title: periodUnit
          type: string
        pfid:
          description: Unique identifier of the current product
          title: pfid
          type: integer
        pricing:
          $ref: '#/components/schemas/LineItemPricing'
        quantity:
          description: Number of the current product included in the specified order
          format: integer-positive
          title: quantity
          type: integer
        taxCollector:
          $ref: '#/components/schemas/LineItemTaxCollector'
      required:
      - label
      - pricing
      - quantity
      title: LineItem
    LineItemPricing:
      example:
        fees:
          icann: 5
          total: 5
        sale: 7
        unit: "{}"
        subtotal: 3
        discount: 1
        taxes: 2
        savings: 9
        list: 2
      properties:
        discount:
          description: Discount off of sale price for given `quantity` and `period`
            <pre>`discount` = `sale` - `subtotal`</pre>
          format: currency-micro-unit
          title: discount
          type: integer
        fees:
          $ref: '#/components/schemas/OrderFee'
        list:
          description: List price for given `quantity` and `period`
          format: currency-micro-unit
          title: list
          type: integer
        sale:
          description: Actual price for the current product
          format: currency-micro-unit
          title: sale
          type: integer
        savings:
          description: Savings off of list price for given `quantity` and `period`
            <pre>`savings` = `list` - `subtotal`</pre>
          format: currency-micro-unit
          title: savings
          type: integer
        subtotal:
          description: Price with any discounts and without taxes or fees for given
            `quantity` and `period`
          format: currency-micro-unit
          title: subtotal
          type: integer
        taxes:
          description: Taxes for given `quantity` and `period`
          format: currency-micro-unit
          title: taxes
          type: integer
        unit:
          description: Pricing for a single unit of the given item
          title: unit
          type: object
      required:
      - discount
      - fees
      - list
      - sale
      - savings
      - subtotal
      - taxes
      - unit
      title: LineItemPricing
    LineItemPricingTaxDetail:
      example:
        amount: 4
        rate: 5.025004791520295
      properties:
        amount:
          description: Tax amount
          format: currency-micro-unit
          title: amount
          type: integer
        rate:
          format: double
          title: rate
          type: number
      required:
      - ""
      title: LineItemPricingTaxDetail
    LineItemSummary:
      example:
        label: label
      properties:
        label:
          description: Product label of the current line item
          title: label
          type: string
      required:
      - label
      title: LineItemSummary
    LineItemTaxCollector:
      example:
        taxCollectorId: 7
      properties:
        taxCollectorId:
          description: Unique identifier for the company
          format: integer-positive
          title: taxCollectorId
          type: integer
      required:
      - taxCollectorId
      title: LineItemTaxCollector
    LineItemUnitPricing:
      properties:
        discount:
          description: Discount without consideration of `quantity` and `period`
          format: currency-micro-unit
          type: integer
        fees:
          $ref: '#/components/schemas/OrderFee'
        list:
          description: List price without consideration of `quantity` and `period`
          format: currency-micro-unit
          type: integer
        sale:
          description: Sale price without consideration of `quantity` and `period`
          format: currency-micro-unit
          type: integer
        savings:
          description: Savings without consideration of `quantity` and `period`
          format: currency-micro-unit
          type: integer
        taxes:
          description: Taxes without consideration of `quantity` and `period`
          format: currency-micro-unit
          type: integer
      required:
      - discount
      - fees
      - list
      - sale
      - savings
      - taxes
    Order:
      example:
        createdAt: createdAt
        orderId: orderId
        parentOrderId: parentOrderId
        billTo:
          taxId: taxId
          contact:
            nameLast: nameLast
            nameFirst: nameFirst
            addressMailing:
              country: US
              address2: address2
              city: city
              address1: address1
              postalCode: postalCode
              state: state
            phone: phone
            jobTitle: jobTitle
            organization: organization
            fax: fax
            nameMiddle: nameMiddle
            email: email
        payments:
        - amount: 1
          paymentProfileId: paymentProfileId
          category: CREDIT_CARD
          subcategory: CHECKING_PERSONAL
        - amount: 1
          paymentProfileId: paymentProfileId
          category: CREDIT_CARD
          subcategory: CHECKING_PERSONAL
        currency: currency
        items:
        - period: 0.8008281904610115
          quantity: 4
          pfid: 6
          domains:
          - domains
          - domains
          label: label
          taxCollector:
            taxCollectorId: 7
          periodUnit: MONTH
          pricing:
            fees:
              icann: 5
              total: 5
            sale: 7
            unit: "{}"
            subtotal: 3
            discount: 1
            taxes: 2
            savings: 9
            list: 2
        - period: 0.8008281904610115
          quantity: 4
          pfid: 6
          domains:
          - domains
          - domains
          label: label
          taxCollector:
            taxCollectorId: 7
          periodUnit: MONTH
          pricing:
            fees:
              icann: 5
              total: 5
            sale: 7
            unit: "{}"
            subtotal: 3
            discount: 1
            taxes: 2
            savings: 9
            list: 2
        pricing:
          fees:
            icann: 5
            total: 5
          total: 9
          taxDetails:
          - amount: 4
            rate: 5.025004791520295
          - amount: 4
            rate: 5.025004791520295
          subtotal: 1
          discount: 1
          taxes: 9
          id: 1.4894159098541704
          savings: 7
          list: 6
      properties:
        billTo:
          $ref: '#/components/schemas/BillTo'
        createdAt:
          description: Date and time when the current order is created on
          format: iso-datetime
          title: createdAt
          type: string
        currency:
          description: Currency in which the order has been placed
          format: iso-currency-code
          title: currency
          type: string
        items:
          items:
            $ref: '#/components/schemas/LineItem'
          title: items
          type: array
        orderId:
          description: Unique identifier of current order
          title: orderId
          type: string
        parentOrderId:
          description: |-
            Unique identifier of the parent order. All refund/chargeback orders are tied to the original order.
            The orginal order's `orderId` is the `parentOrderId` of refund/chargeback orders
          title: parentOrderId
          type: string
        payments:
          items:
            $ref: '#/components/schemas/Payment'
          title: payments
          type: array
        pricing:
          $ref: '#/components/schemas/OrderPricing'
      required:
      - billTo
      - createdAt
      - currency
      - items
      - orderId
      - payments
      - pricing
      title: Order
    OrderFee:
      example:
        icann: 5
        total: 5
      properties:
        icann:
          description: Domain registration transaction fee charged by ICANN
          format: currency-micro-unit
          title: icann
          type: integer
        total:
          description: Sum of all fees
          format: currency-micro-unit
          title: total
          type: integer
      required:
      - total
      title: OrderFee
    OrderList:
      example:
        pagination:
          next: next
          total: 0
          last: last
          previous: previous
          first: first
        orders:
        - createdAt: createdAt
          orderId: orderId
          parentOrderId: parentOrderId
          currency: currency
          items:
          - label: label
          - label: label
          pricing:
            total: total
        - createdAt: createdAt
          orderId: orderId
          parentOrderId: parentOrderId
          currency: currency
          items:
          - label: label
          - label: label
          pricing:
            total: total
      properties:
        orders:
          description: A collection of orders
          items:
            $ref: '#/components/schemas/OrderSummary'
          title: orders
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - orders
      - pagination
      title: OrderList
    OrderPricing:
      example:
        fees:
          icann: 5
          total: 5
        total: 9
        taxDetails:
        - amount: 4
          rate: 5.025004791520295
        - amount: 4
          rate: 5.025004791520295
        subtotal: 1
        discount: 1
        taxes: 9
        id: 1.4894159098541704
        savings: 7
        list: 6
      properties:
        discount:
          description: Discount from promotional pricing
          format: currency-micro-unit
          title: discount
          type: integer
        fees:
          $ref: '#/components/schemas/OrderFee'
        id:
          format: double
          title: id
          type: number
        list:
          description: Sum of list prices for the entire cart
          format: currency-micro-unit
          title: list
          type: integer
        savings:
          description: Savings off of list price <pre>`savings` = `list` - `subtotal`</pre>
          format: currency-micro-unit
          title: savings
          type: integer
        subtotal:
          description: Price with `discount` and without taxes or fees
          format: currency-micro-unit
          title: subtotal
          type: integer
        taxDetails:
          description: A collection of line item tax details
          items:
            $ref: '#/components/schemas/LineItemPricingTaxDetail'
          title: taxDetails
          type: array
        taxes:
          description: Taxes for the entire cart
          format: currency-micro-unit
          title: taxes
          type: integer
        total:
          description: Price the customer pays <pre>`total` = `subtotal` + `taxes`
            + `fees.total`</pre>
          format: currency-micro-unit
          title: total
          type: integer
      required:
      - discount
      - fees
      - list
      - savings
      - subtotal
      - taxes
      - total
      title: OrderPricing
    OrderSummary:
      example:
        createdAt: createdAt
        orderId: orderId
        parentOrderId: parentOrderId
        currency: currency
        items:
        - label: label
        - label: label
        pricing:
          total: total
      properties:
        createdAt:
          description: Date and time when the current order was created
          format: iso-datetime
          title: createdAt
          type: string
        currency:
          description: Currency in which the order was placed
          format: iso-currency-code
          title: currency
          type: string
        items:
          description: Sets of two or more line items in current order
          items:
            $ref: '#/components/schemas/LineItemSummary'
          title: items
          type: array
        orderId:
          description: Unique identifier of the current order
          title: orderId
          type: string
        parentOrderId:
          description: |-
            Unique identifier of the parent order. All refund/chargeback orders are tied to the original order.
            The orginal order's `orderId` is the `parentOrderId` of refund/chargeback orders
          title: parentOrderId
          type: string
        pricing:
          $ref: '#/components/schemas/OrderSummaryPricing'
      required:
      - createdAt
      - currency
      - items
      - orderId
      - pricing
      title: OrderSummary
    OrderSummaryPricing:
      example:
        total: total
      properties:
        total:
          description: Total amount charged for the current order. Negative for Refund
            and Chargeback
          format: currency-micro-unit
          title: total
          type: string
      required:
      - total
      title: OrderSummaryPricing
    Pagination:
      example:
        next: next
        total: 0
        last: last
        previous: previous
        first: first
      properties:
        first:
          description: URI to access the first page
          title: first
          type: string
        last:
          description: URI to access the last page
          title: last
          type: string
        next:
          description: URI to access the next page
          title: next
          type: string
        previous:
          description: URI to access the previous page
          title: previous
          type: string
        total:
          description: Number of records available
          title: total
          type: integer
      title: Pagination
    Payment:
      example:
        amount: 1
        paymentProfileId: paymentProfileId
        category: CREDIT_CARD
        subcategory: CHECKING_PERSONAL
      properties:
        amount:
          description: Amount paid by the current payment
          format: currency-micro-unit
          title: amount
          type: integer
        category:
          description: |-
            The category of payment method used at the time of purchase.
            Most common values are listed in the enum.
          enum:
          - CREDIT_CARD
          - PAYPAL
          - ACH
          - GIFT_CARD
          - IN_STORE_CREDIT
          - PREPAID
          title: category
          type: string
        paymentProfileId:
          description: Unique identifier of the payment profile used by current payment
          title: paymentProfileId
          type: string
        subcategory:
          description: |-
            The subcategory of payment method used at the time of purchase.
             This field is only set for certain payment categories, such as ACH and CREDIT_CARD.
            Most common values are listed in the enum.
          enum:
          - CHECKING_PERSONAL
          - CHECKING_BUSINESS
          - VISA
          - MASTER_CARD
          - AMEX
          - JCB
          - UNIONPAY
          title: subcategory
          type: string
      required:
      - amount
      - category
      - paymentProfileId
      title: Payment
