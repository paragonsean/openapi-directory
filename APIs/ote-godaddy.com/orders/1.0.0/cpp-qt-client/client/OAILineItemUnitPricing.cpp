/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILineItemUnitPricing.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILineItemUnitPricing::OAILineItemUnitPricing(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILineItemUnitPricing::OAILineItemUnitPricing() {
    this->initializeModel();
}

OAILineItemUnitPricing::~OAILineItemUnitPricing() {}

void OAILineItemUnitPricing::initializeModel() {

    m_discount_isSet = false;
    m_discount_isValid = false;

    m_fees_isSet = false;
    m_fees_isValid = false;

    m_list_isSet = false;
    m_list_isValid = false;

    m_sale_isSet = false;
    m_sale_isValid = false;

    m_savings_isSet = false;
    m_savings_isValid = false;

    m_taxes_isSet = false;
    m_taxes_isValid = false;
}

void OAILineItemUnitPricing::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILineItemUnitPricing::fromJsonObject(QJsonObject json) {

    m_discount_isValid = ::OpenAPI::fromJsonValue(m_discount, json[QString("discount")]);
    m_discount_isSet = !json[QString("discount")].isNull() && m_discount_isValid;

    m_fees_isValid = ::OpenAPI::fromJsonValue(m_fees, json[QString("fees")]);
    m_fees_isSet = !json[QString("fees")].isNull() && m_fees_isValid;

    m_list_isValid = ::OpenAPI::fromJsonValue(m_list, json[QString("list")]);
    m_list_isSet = !json[QString("list")].isNull() && m_list_isValid;

    m_sale_isValid = ::OpenAPI::fromJsonValue(m_sale, json[QString("sale")]);
    m_sale_isSet = !json[QString("sale")].isNull() && m_sale_isValid;

    m_savings_isValid = ::OpenAPI::fromJsonValue(m_savings, json[QString("savings")]);
    m_savings_isSet = !json[QString("savings")].isNull() && m_savings_isValid;

    m_taxes_isValid = ::OpenAPI::fromJsonValue(m_taxes, json[QString("taxes")]);
    m_taxes_isSet = !json[QString("taxes")].isNull() && m_taxes_isValid;
}

QString OAILineItemUnitPricing::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILineItemUnitPricing::asJsonObject() const {
    QJsonObject obj;
    if (m_discount_isSet) {
        obj.insert(QString("discount"), ::OpenAPI::toJsonValue(m_discount));
    }
    if (m_fees.isSet()) {
        obj.insert(QString("fees"), ::OpenAPI::toJsonValue(m_fees));
    }
    if (m_list_isSet) {
        obj.insert(QString("list"), ::OpenAPI::toJsonValue(m_list));
    }
    if (m_sale_isSet) {
        obj.insert(QString("sale"), ::OpenAPI::toJsonValue(m_sale));
    }
    if (m_savings_isSet) {
        obj.insert(QString("savings"), ::OpenAPI::toJsonValue(m_savings));
    }
    if (m_taxes_isSet) {
        obj.insert(QString("taxes"), ::OpenAPI::toJsonValue(m_taxes));
    }
    return obj;
}

qint32 OAILineItemUnitPricing::getDiscount() const {
    return m_discount;
}
void OAILineItemUnitPricing::setDiscount(const qint32 &discount) {
    m_discount = discount;
    m_discount_isSet = true;
}

bool OAILineItemUnitPricing::is_discount_Set() const{
    return m_discount_isSet;
}

bool OAILineItemUnitPricing::is_discount_Valid() const{
    return m_discount_isValid;
}

OAIOrderFee OAILineItemUnitPricing::getFees() const {
    return m_fees;
}
void OAILineItemUnitPricing::setFees(const OAIOrderFee &fees) {
    m_fees = fees;
    m_fees_isSet = true;
}

bool OAILineItemUnitPricing::is_fees_Set() const{
    return m_fees_isSet;
}

bool OAILineItemUnitPricing::is_fees_Valid() const{
    return m_fees_isValid;
}

qint32 OAILineItemUnitPricing::getList() const {
    return m_list;
}
void OAILineItemUnitPricing::setList(const qint32 &list) {
    m_list = list;
    m_list_isSet = true;
}

bool OAILineItemUnitPricing::is_list_Set() const{
    return m_list_isSet;
}

bool OAILineItemUnitPricing::is_list_Valid() const{
    return m_list_isValid;
}

qint32 OAILineItemUnitPricing::getSale() const {
    return m_sale;
}
void OAILineItemUnitPricing::setSale(const qint32 &sale) {
    m_sale = sale;
    m_sale_isSet = true;
}

bool OAILineItemUnitPricing::is_sale_Set() const{
    return m_sale_isSet;
}

bool OAILineItemUnitPricing::is_sale_Valid() const{
    return m_sale_isValid;
}

qint32 OAILineItemUnitPricing::getSavings() const {
    return m_savings;
}
void OAILineItemUnitPricing::setSavings(const qint32 &savings) {
    m_savings = savings;
    m_savings_isSet = true;
}

bool OAILineItemUnitPricing::is_savings_Set() const{
    return m_savings_isSet;
}

bool OAILineItemUnitPricing::is_savings_Valid() const{
    return m_savings_isValid;
}

qint32 OAILineItemUnitPricing::getTaxes() const {
    return m_taxes;
}
void OAILineItemUnitPricing::setTaxes(const qint32 &taxes) {
    m_taxes = taxes;
    m_taxes_isSet = true;
}

bool OAILineItemUnitPricing::is_taxes_Set() const{
    return m_taxes_isSet;
}

bool OAILineItemUnitPricing::is_taxes_Valid() const{
    return m_taxes_isValid;
}

bool OAILineItemUnitPricing::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_discount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fees.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sale_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_savings_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_taxes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILineItemUnitPricing::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_discount_isValid && m_fees_isValid && m_list_isValid && m_sale_isValid && m_savings_isValid && m_taxes_isValid && true;
}

} // namespace OpenAPI
