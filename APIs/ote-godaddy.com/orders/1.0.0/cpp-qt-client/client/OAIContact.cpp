/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContact.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContact::OAIContact(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContact::OAIContact() {
    this->initializeModel();
}

OAIContact::~OAIContact() {}

void OAIContact::initializeModel() {

    m_address_mailing_isSet = false;
    m_address_mailing_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_fax_isSet = false;
    m_fax_isValid = false;

    m_job_title_isSet = false;
    m_job_title_isValid = false;

    m_name_first_isSet = false;
    m_name_first_isValid = false;

    m_name_last_isSet = false;
    m_name_last_isValid = false;

    m_name_middle_isSet = false;
    m_name_middle_isValid = false;

    m_organization_isSet = false;
    m_organization_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;
}

void OAIContact::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContact::fromJsonObject(QJsonObject json) {

    m_address_mailing_isValid = ::OpenAPI::fromJsonValue(m_address_mailing, json[QString("addressMailing")]);
    m_address_mailing_isSet = !json[QString("addressMailing")].isNull() && m_address_mailing_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_fax_isValid = ::OpenAPI::fromJsonValue(m_fax, json[QString("fax")]);
    m_fax_isSet = !json[QString("fax")].isNull() && m_fax_isValid;

    m_job_title_isValid = ::OpenAPI::fromJsonValue(m_job_title, json[QString("jobTitle")]);
    m_job_title_isSet = !json[QString("jobTitle")].isNull() && m_job_title_isValid;

    m_name_first_isValid = ::OpenAPI::fromJsonValue(m_name_first, json[QString("nameFirst")]);
    m_name_first_isSet = !json[QString("nameFirst")].isNull() && m_name_first_isValid;

    m_name_last_isValid = ::OpenAPI::fromJsonValue(m_name_last, json[QString("nameLast")]);
    m_name_last_isSet = !json[QString("nameLast")].isNull() && m_name_last_isValid;

    m_name_middle_isValid = ::OpenAPI::fromJsonValue(m_name_middle, json[QString("nameMiddle")]);
    m_name_middle_isSet = !json[QString("nameMiddle")].isNull() && m_name_middle_isValid;

    m_organization_isValid = ::OpenAPI::fromJsonValue(m_organization, json[QString("organization")]);
    m_organization_isSet = !json[QString("organization")].isNull() && m_organization_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;
}

QString OAIContact::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContact::asJsonObject() const {
    QJsonObject obj;
    if (m_address_mailing.isSet()) {
        obj.insert(QString("addressMailing"), ::OpenAPI::toJsonValue(m_address_mailing));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_fax_isSet) {
        obj.insert(QString("fax"), ::OpenAPI::toJsonValue(m_fax));
    }
    if (m_job_title_isSet) {
        obj.insert(QString("jobTitle"), ::OpenAPI::toJsonValue(m_job_title));
    }
    if (m_name_first_isSet) {
        obj.insert(QString("nameFirst"), ::OpenAPI::toJsonValue(m_name_first));
    }
    if (m_name_last_isSet) {
        obj.insert(QString("nameLast"), ::OpenAPI::toJsonValue(m_name_last));
    }
    if (m_name_middle_isSet) {
        obj.insert(QString("nameMiddle"), ::OpenAPI::toJsonValue(m_name_middle));
    }
    if (m_organization_isSet) {
        obj.insert(QString("organization"), ::OpenAPI::toJsonValue(m_organization));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    return obj;
}

OAIAddress OAIContact::getAddressMailing() const {
    return m_address_mailing;
}
void OAIContact::setAddressMailing(const OAIAddress &address_mailing) {
    m_address_mailing = address_mailing;
    m_address_mailing_isSet = true;
}

bool OAIContact::is_address_mailing_Set() const{
    return m_address_mailing_isSet;
}

bool OAIContact::is_address_mailing_Valid() const{
    return m_address_mailing_isValid;
}

QString OAIContact::getEmail() const {
    return m_email;
}
void OAIContact::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIContact::is_email_Set() const{
    return m_email_isSet;
}

bool OAIContact::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIContact::getFax() const {
    return m_fax;
}
void OAIContact::setFax(const QString &fax) {
    m_fax = fax;
    m_fax_isSet = true;
}

bool OAIContact::is_fax_Set() const{
    return m_fax_isSet;
}

bool OAIContact::is_fax_Valid() const{
    return m_fax_isValid;
}

QString OAIContact::getJobTitle() const {
    return m_job_title;
}
void OAIContact::setJobTitle(const QString &job_title) {
    m_job_title = job_title;
    m_job_title_isSet = true;
}

bool OAIContact::is_job_title_Set() const{
    return m_job_title_isSet;
}

bool OAIContact::is_job_title_Valid() const{
    return m_job_title_isValid;
}

QString OAIContact::getNameFirst() const {
    return m_name_first;
}
void OAIContact::setNameFirst(const QString &name_first) {
    m_name_first = name_first;
    m_name_first_isSet = true;
}

bool OAIContact::is_name_first_Set() const{
    return m_name_first_isSet;
}

bool OAIContact::is_name_first_Valid() const{
    return m_name_first_isValid;
}

QString OAIContact::getNameLast() const {
    return m_name_last;
}
void OAIContact::setNameLast(const QString &name_last) {
    m_name_last = name_last;
    m_name_last_isSet = true;
}

bool OAIContact::is_name_last_Set() const{
    return m_name_last_isSet;
}

bool OAIContact::is_name_last_Valid() const{
    return m_name_last_isValid;
}

QString OAIContact::getNameMiddle() const {
    return m_name_middle;
}
void OAIContact::setNameMiddle(const QString &name_middle) {
    m_name_middle = name_middle;
    m_name_middle_isSet = true;
}

bool OAIContact::is_name_middle_Set() const{
    return m_name_middle_isSet;
}

bool OAIContact::is_name_middle_Valid() const{
    return m_name_middle_isValid;
}

QString OAIContact::getOrganization() const {
    return m_organization;
}
void OAIContact::setOrganization(const QString &organization) {
    m_organization = organization;
    m_organization_isSet = true;
}

bool OAIContact::is_organization_Set() const{
    return m_organization_isSet;
}

bool OAIContact::is_organization_Valid() const{
    return m_organization_isValid;
}

QString OAIContact::getPhone() const {
    return m_phone;
}
void OAIContact::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAIContact::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAIContact::is_phone_Valid() const{
    return m_phone_isValid;
}

bool OAIContact::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_mailing.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_first_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_last_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_middle_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContact::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_address_mailing_isValid && m_email_isValid && m_name_first_isValid && m_name_last_isValid && m_phone_isValid && true;
}

} // namespace OpenAPI
