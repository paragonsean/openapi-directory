/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrder.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrder::OAIOrder(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrder::OAIOrder() {
    this->initializeModel();
}

OAIOrder::~OAIOrder() {}

void OAIOrder::initializeModel() {

    m_bill_to_isSet = false;
    m_bill_to_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_parent_order_id_isSet = false;
    m_parent_order_id_isValid = false;

    m_payments_isSet = false;
    m_payments_isValid = false;

    m_pricing_isSet = false;
    m_pricing_isValid = false;
}

void OAIOrder::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrder::fromJsonObject(QJsonObject json) {

    m_bill_to_isValid = ::OpenAPI::fromJsonValue(m_bill_to, json[QString("billTo")]);
    m_bill_to_isSet = !json[QString("billTo")].isNull() && m_bill_to_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("items")]);
    m_items_isSet = !json[QString("items")].isNull() && m_items_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("orderId")]);
    m_order_id_isSet = !json[QString("orderId")].isNull() && m_order_id_isValid;

    m_parent_order_id_isValid = ::OpenAPI::fromJsonValue(m_parent_order_id, json[QString("parentOrderId")]);
    m_parent_order_id_isSet = !json[QString("parentOrderId")].isNull() && m_parent_order_id_isValid;

    m_payments_isValid = ::OpenAPI::fromJsonValue(m_payments, json[QString("payments")]);
    m_payments_isSet = !json[QString("payments")].isNull() && m_payments_isValid;

    m_pricing_isValid = ::OpenAPI::fromJsonValue(m_pricing, json[QString("pricing")]);
    m_pricing_isSet = !json[QString("pricing")].isNull() && m_pricing_isValid;
}

QString OAIOrder::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrder::asJsonObject() const {
    QJsonObject obj;
    if (m_bill_to.isSet()) {
        obj.insert(QString("billTo"), ::OpenAPI::toJsonValue(m_bill_to));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_items.size() > 0) {
        obj.insert(QString("items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("orderId"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_parent_order_id_isSet) {
        obj.insert(QString("parentOrderId"), ::OpenAPI::toJsonValue(m_parent_order_id));
    }
    if (m_payments.size() > 0) {
        obj.insert(QString("payments"), ::OpenAPI::toJsonValue(m_payments));
    }
    if (m_pricing.isSet()) {
        obj.insert(QString("pricing"), ::OpenAPI::toJsonValue(m_pricing));
    }
    return obj;
}

OAIBillTo OAIOrder::getBillTo() const {
    return m_bill_to;
}
void OAIOrder::setBillTo(const OAIBillTo &bill_to) {
    m_bill_to = bill_to;
    m_bill_to_isSet = true;
}

bool OAIOrder::is_bill_to_Set() const{
    return m_bill_to_isSet;
}

bool OAIOrder::is_bill_to_Valid() const{
    return m_bill_to_isValid;
}

QString OAIOrder::getCreatedAt() const {
    return m_created_at;
}
void OAIOrder::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIOrder::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIOrder::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIOrder::getCurrency() const {
    return m_currency;
}
void OAIOrder::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIOrder::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIOrder::is_currency_Valid() const{
    return m_currency_isValid;
}

QList<OAILineItem> OAIOrder::getItems() const {
    return m_items;
}
void OAIOrder::setItems(const QList<OAILineItem> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIOrder::is_items_Set() const{
    return m_items_isSet;
}

bool OAIOrder::is_items_Valid() const{
    return m_items_isValid;
}

QString OAIOrder::getOrderId() const {
    return m_order_id;
}
void OAIOrder::setOrderId(const QString &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAIOrder::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAIOrder::is_order_id_Valid() const{
    return m_order_id_isValid;
}

QString OAIOrder::getParentOrderId() const {
    return m_parent_order_id;
}
void OAIOrder::setParentOrderId(const QString &parent_order_id) {
    m_parent_order_id = parent_order_id;
    m_parent_order_id_isSet = true;
}

bool OAIOrder::is_parent_order_id_Set() const{
    return m_parent_order_id_isSet;
}

bool OAIOrder::is_parent_order_id_Valid() const{
    return m_parent_order_id_isValid;
}

QList<OAIPayment> OAIOrder::getPayments() const {
    return m_payments;
}
void OAIOrder::setPayments(const QList<OAIPayment> &payments) {
    m_payments = payments;
    m_payments_isSet = true;
}

bool OAIOrder::is_payments_Set() const{
    return m_payments_isSet;
}

bool OAIOrder::is_payments_Valid() const{
    return m_payments_isValid;
}

OAIOrderPricing OAIOrder::getPricing() const {
    return m_pricing;
}
void OAIOrder::setPricing(const OAIOrderPricing &pricing) {
    m_pricing = pricing;
    m_pricing_isSet = true;
}

bool OAIOrder::is_pricing_Set() const{
    return m_pricing_isSet;
}

bool OAIOrder::is_pricing_Valid() const{
    return m_pricing_isValid;
}

bool OAIOrder::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bill_to.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_pricing.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrder::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_bill_to_isValid && m_created_at_isValid && m_currency_isValid && m_items_isValid && m_order_id_isValid && m_payments_isValid && m_pricing_isValid && true;
}

} // namespace OpenAPI
