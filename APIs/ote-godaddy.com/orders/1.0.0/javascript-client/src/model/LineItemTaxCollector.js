/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LineItemTaxCollector model module.
 * @module model/LineItemTaxCollector
 * @version 1.0.0
 */
class LineItemTaxCollector {
    /**
     * Constructs a new <code>LineItemTaxCollector</code>.
     * @alias module:model/LineItemTaxCollector
     * @param taxCollectorId {Number} Unique identifier for the company
     */
    constructor(taxCollectorId) { 
        
        LineItemTaxCollector.initialize(this, taxCollectorId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, taxCollectorId) { 
        obj['taxCollectorId'] = taxCollectorId;
    }

    /**
     * Constructs a <code>LineItemTaxCollector</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LineItemTaxCollector} obj Optional instance to populate.
     * @return {module:model/LineItemTaxCollector} The populated <code>LineItemTaxCollector</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LineItemTaxCollector();

            if (data.hasOwnProperty('taxCollectorId')) {
                obj['taxCollectorId'] = ApiClient.convertToType(data['taxCollectorId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LineItemTaxCollector</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LineItemTaxCollector</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LineItemTaxCollector.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

LineItemTaxCollector.RequiredProperties = ["taxCollectorId"];

/**
 * Unique identifier for the company
 * @member {Number} taxCollectorId
 */
LineItemTaxCollector.prototype['taxCollectorId'] = undefined;






export default LineItemTaxCollector;

