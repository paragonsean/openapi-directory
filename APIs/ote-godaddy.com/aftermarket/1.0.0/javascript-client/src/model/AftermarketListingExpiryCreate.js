/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AftermarketListingExpiryCreate model module.
 * @module model/AftermarketListingExpiryCreate
 * @version 1.0.0
 */
class AftermarketListingExpiryCreate {
    /**
     * Constructs a new <code>AftermarketListingExpiryCreate</code>.
     * @alias module:model/AftermarketListingExpiryCreate
     * @param domain {String} Domain name
     * @param expiresAt {String} Date when the domain expires
     * @param losingRegistrarId {Number} Losing registrar id for the domain
     */
    constructor(domain, expiresAt, losingRegistrarId) { 
        
        AftermarketListingExpiryCreate.initialize(this, domain, expiresAt, losingRegistrarId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, domain, expiresAt, losingRegistrarId) { 
        obj['domain'] = domain;
        obj['expiresAt'] = expiresAt;
        obj['losingRegistrarId'] = losingRegistrarId || 1;
    }

    /**
     * Constructs a <code>AftermarketListingExpiryCreate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AftermarketListingExpiryCreate} obj Optional instance to populate.
     * @return {module:model/AftermarketListingExpiryCreate} The populated <code>AftermarketListingExpiryCreate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AftermarketListingExpiryCreate();

            if (data.hasOwnProperty('domain')) {
                obj['domain'] = ApiClient.convertToType(data['domain'], 'String');
            }
            if (data.hasOwnProperty('expiresAt')) {
                obj['expiresAt'] = ApiClient.convertToType(data['expiresAt'], 'String');
            }
            if (data.hasOwnProperty('losingRegistrarId')) {
                obj['losingRegistrarId'] = ApiClient.convertToType(data['losingRegistrarId'], 'Number');
            }
            if (data.hasOwnProperty('pageViewsMonthly')) {
                obj['pageViewsMonthly'] = ApiClient.convertToType(data['pageViewsMonthly'], 'Number');
            }
            if (data.hasOwnProperty('revenueMonthly')) {
                obj['revenueMonthly'] = ApiClient.convertToType(data['revenueMonthly'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AftermarketListingExpiryCreate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AftermarketListingExpiryCreate</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AftermarketListingExpiryCreate.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['domain'] && !(typeof data['domain'] === 'string' || data['domain'] instanceof String)) {
            throw new Error("Expected the field `domain` to be a primitive type in the JSON string but got " + data['domain']);
        }
        // ensure the json data is a string
        if (data['expiresAt'] && !(typeof data['expiresAt'] === 'string' || data['expiresAt'] instanceof String)) {
            throw new Error("Expected the field `expiresAt` to be a primitive type in the JSON string but got " + data['expiresAt']);
        }

        return true;
    }


}

AftermarketListingExpiryCreate.RequiredProperties = ["domain", "expiresAt", "losingRegistrarId"];

/**
 * Domain name
 * @member {String} domain
 */
AftermarketListingExpiryCreate.prototype['domain'] = undefined;

/**
 * Date when the domain expires
 * @member {String} expiresAt
 */
AftermarketListingExpiryCreate.prototype['expiresAt'] = undefined;

/**
 * Losing registrar id for the domain
 * @member {Number} losingRegistrarId
 * @default 1
 */
AftermarketListingExpiryCreate.prototype['losingRegistrarId'] = 1;

/**
 * Monthly traffic page view for the domain
 * @member {Number} pageViewsMonthly
 */
AftermarketListingExpiryCreate.prototype['pageViewsMonthly'] = undefined;

/**
 * Monthly parking revenue (in USD micro unit) for the domain
 * @member {Number} revenueMonthly
 */
AftermarketListingExpiryCreate.prototype['revenueMonthly'] = undefined;






export default AftermarketListingExpiryCreate;

