/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AftermarketListingAction from '../model/AftermarketListingAction';
import AftermarketListingExpiryCreate from '../model/AftermarketListingExpiryCreate';
import Error from '../model/Error';
import ErrorLimit from '../model/ErrorLimit';

/**
* V1 service.
* @module api/V1Api
* @version 1.0.0
*/
export default class V1Api {

    /**
    * Constructs a new V1Api. 
    * @alias module:api/V1Api
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the addExpiryListings operation.
     * @callback module:api/V1Api~addExpiryListingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AftermarketListingAction} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add expiry listings into GoDaddy Auction
     * @param {Array.<module:model/AftermarketListingExpiryCreate>} aftermarketListingExpiryCreate An array of expiry listings to be loaded
     * @param {module:api/V1Api~addExpiryListingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AftermarketListingAction}
     */
    addExpiryListings(aftermarketListingExpiryCreate, callback) {
      let postBody = aftermarketListingExpiryCreate;
      // verify the required parameter 'aftermarketListingExpiryCreate' is set
      if (aftermarketListingExpiryCreate === undefined || aftermarketListingExpiryCreate === null) {
        throw new Error("Missing the required parameter 'aftermarketListingExpiryCreate' when calling addExpiryListings");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml', 'text/xml'];
      let accepts = ['application/javascript', 'application/json', 'application/xml', 'text/javascript', 'text/xml'];
      let returnType = AftermarketListingAction;
      return this.apiClient.callApi(
        '/v1/aftermarket/listings/expiry', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteListings operation.
     * @callback module:api/V1Api~deleteListingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AftermarketListingAction} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove listings from GoDaddy Auction
     * @param {Array.<String>} domains A comma separated list of domain names
     * @param {module:api/V1Api~deleteListingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AftermarketListingAction}
     */
    deleteListings(domains, callback) {
      let postBody = null;
      // verify the required parameter 'domains' is set
      if (domains === undefined || domains === null) {
        throw new Error("Missing the required parameter 'domains' when calling deleteListings");
      }

      let pathParams = {
      };
      let queryParams = {
        'domains': this.apiClient.buildCollectionParam(domains, 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/javascript', 'application/json', 'application/xml', 'text/javascript', 'text/xml'];
      let returnType = AftermarketListingAction;
      return this.apiClient.callApi(
        '/v1/aftermarket/listings', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
