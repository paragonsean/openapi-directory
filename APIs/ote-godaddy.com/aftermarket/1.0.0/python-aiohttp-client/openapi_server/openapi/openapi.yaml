openapi: 3.0.0
info:
  title: ""
  version: 1.0.0
  x-apisguru-categories:
  - hosting
  x-origin:
  - format: swagger
    url: https://developer.godaddy.com/swagger/swagger_aftermarket.json
    version: "2.0"
  x-providerName: ote-godaddy.com
  x-serviceName: aftermarket
servers:
- url: //api.ote-godaddy.com
tags:
- description: ""
  name: v1
paths:
  /v1/aftermarket/listings:
    delete:
      operationId: delete_listings
      parameters:
      - description: A comma separated list of domain names
        explode: false
        in: query
        name: domains
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
            application/json:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
            application/xml:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
            text/xml:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
          description: Request was successful
        "400":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        "401":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        "403":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        "422":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: "\tRequired parameters must be specified in correct format"
        "429":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
          description: Too many requests received within interval
        "500":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      summary: Remove listings from GoDaddy Auction
      tags:
      - v1
      x-openapi-router-controller: openapi_server.controllers.v1_controller
  /v1/aftermarket/listings/expiry:
    post:
      operationId: add_expiry_listings
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AftermarketListingExpiryCreate'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/AftermarketListingExpiryCreate'
              type: array
          text/xml:
            schema:
              items:
                $ref: '#/components/schemas/AftermarketListingExpiryCreate'
              type: array
        description: An array of expiry listings to be loaded
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
            application/json:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
            application/xml:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
            text/xml:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
          description: Request was successful
        "400":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        "401":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        "403":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        "422":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Required parameters must be specified in correct format<br>Too
            many Listings provided<br>Invalid Losing Registrar Id
        "429":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
          description: Too many requests received within interval
        "500":
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      summary: Add expiry listings into GoDaddy Auction
      tags:
      - v1
      x-openapi-router-controller: openapi_server.controllers.v1_controller
      x-codegen-request-body-name: body
components:
  schemas:
    AftermarketListingAction:
      example:
        listingActionId: 0
      properties:
        listingActionId:
          description: Action Id
          title: listingActionId
          type: integer
      required:
      - listingActionId
      title: AftermarketListingAction
    AftermarketListingExpiryCreate:
      example:
        pageViewsMonthly: 6
        domain: domain
        revenueMonthly: 1
        expiresAt: expiresAt
        losingRegistrarId: 1
      properties:
        domain:
          description: Domain name
          title: domain
          type: string
        expiresAt:
          description: Date when the domain expires
          format: iso-datetime
          title: expiresAt
          type: string
        losingRegistrarId:
          default: 1
          description: Losing registrar id for the domain
          minimum: 1
          title: losingRegistrarId
          type: integer
        pageViewsMonthly:
          description: Monthly traffic page view for the domain
          title: pageViewsMonthly
          type: integer
        revenueMonthly:
          description: Monthly parking revenue (in USD micro unit) for the domain
          title: revenueMonthly
          type: integer
      required:
      - domain
      - expiresAt
      - losingRegistrarId
      title: AftermarketListingExpiryCreate
    Error:
      example:
        code: code
        fields:
        - pathRelated: pathRelated
          path: path
          code: code
          message: message
        - pathRelated: pathRelated
          path: path
          code: code
          message: message
        message: message
      properties:
        code:
          description: "Short identifier for the error, suitable for indicating the\
            \ specific error within client code"
          format: constant
          title: code
          type: string
        fields:
          description: "List of the specific fields, and the errors found with their\
            \ contents"
          items:
            $ref: '#/components/schemas/ErrorField'
          title: fields
          type: array
        message:
          description: "Human-readable, English description of the error"
          title: message
          type: string
      required:
      - code
      title: Error
    ErrorField:
      example:
        pathRelated: pathRelated
        path: path
        code: code
        message: message
      properties:
        code:
          description: "Short identifier for the error, suitable for indicating the\
            \ specific error within client code"
          format: constant
          title: code
          type: string
        message:
          description: "Human-readable, English description of the problem with the\
            \ contents of the field"
          title: message
          type: string
        path:
          description: |-
            <ul>
            <li style='margin-left: 12px;'>JSONPath referring to a field containing an error</li>
            <strong style='margin-left: 12px;'>OR</strong>
            <li style='margin-left: 12px;'>JSONPath referring to a field that refers to an object containing an error, with more detail in `pathRelated`</li>
            </ul>
          format: json-path
          title: path
          type: string
        pathRelated:
          description: "JSONPath referring to a field containing an error, which is\
            \ referenced by `path`"
          format: json-path
          title: pathRelated
          type: string
      required:
      - code
      - path
      title: ErrorField
    ErrorLimit:
      example:
        code: code
        retryAfterSec: 6
        fields:
        - pathRelated: pathRelated
          path: path
          code: code
          message: message
        - pathRelated: pathRelated
          path: path
          code: code
          message: message
        message: message
      properties:
        code:
          description: "Short identifier for the error, suitable for indicating the\
            \ specific error within client code"
          format: constant
          title: code
          type: string
        fields:
          description: "List of the specific fields, and the errors found with their\
            \ contents"
          items:
            $ref: '#/components/schemas/ErrorField'
          title: fields
          type: array
        message:
          description: "Human-readable, English description of the error"
          title: message
          type: string
        retryAfterSec:
          description: Number of seconds to wait before attempting a similar request
          format: integer-positive
          title: retryAfterSec
          type: integer
      required:
      - code
      - retryAfterSec
      title: ErrorLimit
    expiry:
      properties:
        id:
          format: double
          type: number
