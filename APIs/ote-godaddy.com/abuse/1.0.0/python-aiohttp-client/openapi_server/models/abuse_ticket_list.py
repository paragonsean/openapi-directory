# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pagination import Pagination
from openapi_server import util


class AbuseTicketList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pagination: Pagination=None, ticket_ids: List[str]=None):
        """AbuseTicketList - a model defined in OpenAPI

        :param pagination: The pagination of this AbuseTicketList.
        :param ticket_ids: The ticket_ids of this AbuseTicketList.
        """
        self.openapi_types = {
            'pagination': Pagination,
            'ticket_ids': List[str]
        }

        self.attribute_map = {
            'pagination': 'pagination',
            'ticket_ids': 'ticketIds'
        }

        self._pagination = pagination
        self._ticket_ids = ticket_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AbuseTicketList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AbuseTicketList of this AbuseTicketList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pagination(self):
        """Gets the pagination of this AbuseTicketList.


        :return: The pagination of this AbuseTicketList.
        :rtype: Pagination
        """
        return self._pagination

    @pagination.setter
    def pagination(self, pagination):
        """Sets the pagination of this AbuseTicketList.


        :param pagination: The pagination of this AbuseTicketList.
        :type pagination: Pagination
        """

        self._pagination = pagination

    @property
    def ticket_ids(self):
        """Gets the ticket_ids of this AbuseTicketList.

        A list of abuse ticket ids originated by this reporter.

        :return: The ticket_ids of this AbuseTicketList.
        :rtype: List[str]
        """
        return self._ticket_ids

    @ticket_ids.setter
    def ticket_ids(self, ticket_ids):
        """Sets the ticket_ids of this AbuseTicketList.

        A list of abuse ticket ids originated by this reporter.

        :param ticket_ids: The ticket_ids of this AbuseTicketList.
        :type ticket_ids: List[str]
        """
        if ticket_ids is None:
            raise ValueError("Invalid value for `ticket_ids`, must not be `None`")

        self._ticket_ids = ticket_ids
