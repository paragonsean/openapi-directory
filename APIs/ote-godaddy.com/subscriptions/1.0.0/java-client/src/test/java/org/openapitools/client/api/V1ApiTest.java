/*
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.ErrorLimit;
import org.openapitools.client.model.ProductGroup;
import org.openapitools.client.model.Subscription;
import org.openapitools.client.model.SubscriptionList;
import org.openapitools.client.model.SubscriptionUpdate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for V1Api
 */
@Disabled
public class V1ApiTest {

    private final V1Api api = new V1Api();

    /**
     * Retrieve a list of Subscriptions for the specified Shopper
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void callListTest() throws ApiException {
        String xShopperId = null;
        String xMarketId = null;
        List<String> productGroupKeys = null;
        List<String> includes = null;
        Integer offset = null;
        Integer limit = null;
        String sort = null;
        SubscriptionList response = api.callList(xShopperId, xMarketId, productGroupKeys, includes, offset, limit, sort);
        // TODO: test validations
    }

    /**
     * Cancel the specified Subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelTest() throws ApiException {
        String subscriptionId = null;
        String xShopperId = null;
        api.cancel(subscriptionId, xShopperId);
        // TODO: test validations
    }

    /**
     * Retrieve details for the specified Subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTest() throws ApiException {
        String subscriptionId = null;
        String xShopperId = null;
        String xMarketId = null;
        Subscription response = api.get(subscriptionId, xShopperId, xMarketId);
        // TODO: test validations
    }

    /**
     * Retrieve a list of ProductGroups for the specified Shopper
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productGroupsTest() throws ApiException {
        String xShopperId = null;
        String xMarketId = null;
        List<ProductGroup> response = api.productGroups(xShopperId, xMarketId);
        // TODO: test validations
    }

    /**
     * Update details for the specified Subscription
     *
     * Only Subscription properties that can be changed without immediate financial impact can be modified via PATCH, whereas some properties can be changed by purchasing a renewal&lt;br/&gt;&lt;strong&gt;This endpoint only supports JWT authentication&lt;/strong&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTest() throws ApiException {
        String subscriptionId = null;
        SubscriptionUpdate subscriptionUpdate = null;
        api.update(subscriptionId, subscriptionUpdate);
        // TODO: test validations
    }

}
