/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubscriptionUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubscriptionUpdate::OAISubscriptionUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubscriptionUpdate::OAISubscriptionUpdate() {
    this->initializeModel();
}

OAISubscriptionUpdate::~OAISubscriptionUpdate() {}

void OAISubscriptionUpdate::initializeModel() {

    m_payment_profile_id_isSet = false;
    m_payment_profile_id_isValid = false;

    m_renew_auto_isSet = false;
    m_renew_auto_isValid = false;
}

void OAISubscriptionUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubscriptionUpdate::fromJsonObject(QJsonObject json) {

    m_payment_profile_id_isValid = ::OpenAPI::fromJsonValue(m_payment_profile_id, json[QString("paymentProfileId")]);
    m_payment_profile_id_isSet = !json[QString("paymentProfileId")].isNull() && m_payment_profile_id_isValid;

    m_renew_auto_isValid = ::OpenAPI::fromJsonValue(m_renew_auto, json[QString("renewAuto")]);
    m_renew_auto_isSet = !json[QString("renewAuto")].isNull() && m_renew_auto_isValid;
}

QString OAISubscriptionUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubscriptionUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_payment_profile_id_isSet) {
        obj.insert(QString("paymentProfileId"), ::OpenAPI::toJsonValue(m_payment_profile_id));
    }
    if (m_renew_auto_isSet) {
        obj.insert(QString("renewAuto"), ::OpenAPI::toJsonValue(m_renew_auto));
    }
    return obj;
}

qint32 OAISubscriptionUpdate::getPaymentProfileId() const {
    return m_payment_profile_id;
}
void OAISubscriptionUpdate::setPaymentProfileId(const qint32 &payment_profile_id) {
    m_payment_profile_id = payment_profile_id;
    m_payment_profile_id_isSet = true;
}

bool OAISubscriptionUpdate::is_payment_profile_id_Set() const{
    return m_payment_profile_id_isSet;
}

bool OAISubscriptionUpdate::is_payment_profile_id_Valid() const{
    return m_payment_profile_id_isValid;
}

bool OAISubscriptionUpdate::isRenewAuto() const {
    return m_renew_auto;
}
void OAISubscriptionUpdate::setRenewAuto(const bool &renew_auto) {
    m_renew_auto = renew_auto;
    m_renew_auto_isSet = true;
}

bool OAISubscriptionUpdate::is_renew_auto_Set() const{
    return m_renew_auto_isSet;
}

bool OAISubscriptionUpdate::is_renew_auto_Valid() const{
    return m_renew_auto_isValid;
}

bool OAISubscriptionUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_payment_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_renew_auto_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubscriptionUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
