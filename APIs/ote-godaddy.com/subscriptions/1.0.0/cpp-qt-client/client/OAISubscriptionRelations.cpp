/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubscriptionRelations.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubscriptionRelations::OAISubscriptionRelations(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubscriptionRelations::OAISubscriptionRelations() {
    this->initializeModel();
}

OAISubscriptionRelations::~OAISubscriptionRelations() {}

void OAISubscriptionRelations::initializeModel() {

    m_children_isSet = false;
    m_children_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;
}

void OAISubscriptionRelations::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubscriptionRelations::fromJsonObject(QJsonObject json) {

    m_children_isValid = ::OpenAPI::fromJsonValue(m_children, json[QString("children")]);
    m_children_isSet = !json[QString("children")].isNull() && m_children_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;
}

QString OAISubscriptionRelations::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubscriptionRelations::asJsonObject() const {
    QJsonObject obj;
    if (m_children.size() > 0) {
        obj.insert(QString("children"), ::OpenAPI::toJsonValue(m_children));
    }
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    return obj;
}

QList<QString> OAISubscriptionRelations::getChildren() const {
    return m_children;
}
void OAISubscriptionRelations::setChildren(const QList<QString> &children) {
    m_children = children;
    m_children_isSet = true;
}

bool OAISubscriptionRelations::is_children_Set() const{
    return m_children_isSet;
}

bool OAISubscriptionRelations::is_children_Valid() const{
    return m_children_isValid;
}

QString OAISubscriptionRelations::getParent() const {
    return m_parent;
}
void OAISubscriptionRelations::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAISubscriptionRelations::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAISubscriptionRelations::is_parent_Valid() const{
    return m_parent_isValid;
}

bool OAISubscriptionRelations::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_children.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubscriptionRelations::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
