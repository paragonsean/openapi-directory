/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubscriptionList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubscriptionList::OAISubscriptionList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubscriptionList::OAISubscriptionList() {
    this->initializeModel();
}

OAISubscriptionList::~OAISubscriptionList() {}

void OAISubscriptionList::initializeModel() {

    m_pagination_isSet = false;
    m_pagination_isValid = false;

    m_subscriptions_isSet = false;
    m_subscriptions_isValid = false;
}

void OAISubscriptionList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubscriptionList::fromJsonObject(QJsonObject json) {

    m_pagination_isValid = ::OpenAPI::fromJsonValue(m_pagination, json[QString("pagination")]);
    m_pagination_isSet = !json[QString("pagination")].isNull() && m_pagination_isValid;

    m_subscriptions_isValid = ::OpenAPI::fromJsonValue(m_subscriptions, json[QString("subscriptions")]);
    m_subscriptions_isSet = !json[QString("subscriptions")].isNull() && m_subscriptions_isValid;
}

QString OAISubscriptionList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubscriptionList::asJsonObject() const {
    QJsonObject obj;
    if (m_pagination.isSet()) {
        obj.insert(QString("pagination"), ::OpenAPI::toJsonValue(m_pagination));
    }
    if (m_subscriptions.size() > 0) {
        obj.insert(QString("subscriptions"), ::OpenAPI::toJsonValue(m_subscriptions));
    }
    return obj;
}

OAIPagination OAISubscriptionList::getPagination() const {
    return m_pagination;
}
void OAISubscriptionList::setPagination(const OAIPagination &pagination) {
    m_pagination = pagination;
    m_pagination_isSet = true;
}

bool OAISubscriptionList::is_pagination_Set() const{
    return m_pagination_isSet;
}

bool OAISubscriptionList::is_pagination_Valid() const{
    return m_pagination_isValid;
}

QList<OAISubscription> OAISubscriptionList::getSubscriptions() const {
    return m_subscriptions;
}
void OAISubscriptionList::setSubscriptions(const QList<OAISubscription> &subscriptions) {
    m_subscriptions = subscriptions;
    m_subscriptions_isSet = true;
}

bool OAISubscriptionList::is_subscriptions_Set() const{
    return m_subscriptions_isSet;
}

bool OAISubscriptionList::is_subscriptions_Valid() const{
    return m_subscriptions_isValid;
}

bool OAISubscriptionList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pagination.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscriptions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubscriptionList::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pagination_isValid && m_subscriptions_isValid && true;
}

} // namespace OpenAPI
