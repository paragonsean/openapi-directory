/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductGroup::OAIProductGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductGroup::OAIProductGroup() {
    this->initializeModel();
}

OAIProductGroup::~OAIProductGroup() {}

void OAIProductGroup::initializeModel() {

    m_product_group_key_isSet = false;
    m_product_group_key_isValid = false;

    m_subscription_count_isSet = false;
    m_subscription_count_isValid = false;
}

void OAIProductGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductGroup::fromJsonObject(QJsonObject json) {

    m_product_group_key_isValid = ::OpenAPI::fromJsonValue(m_product_group_key, json[QString("productGroupKey")]);
    m_product_group_key_isSet = !json[QString("productGroupKey")].isNull() && m_product_group_key_isValid;

    m_subscription_count_isValid = ::OpenAPI::fromJsonValue(m_subscription_count, json[QString("subscriptionCount")]);
    m_subscription_count_isSet = !json[QString("subscriptionCount")].isNull() && m_subscription_count_isValid;
}

QString OAIProductGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_product_group_key_isSet) {
        obj.insert(QString("productGroupKey"), ::OpenAPI::toJsonValue(m_product_group_key));
    }
    if (m_subscription_count_isSet) {
        obj.insert(QString("subscriptionCount"), ::OpenAPI::toJsonValue(m_subscription_count));
    }
    return obj;
}

QString OAIProductGroup::getProductGroupKey() const {
    return m_product_group_key;
}
void OAIProductGroup::setProductGroupKey(const QString &product_group_key) {
    m_product_group_key = product_group_key;
    m_product_group_key_isSet = true;
}

bool OAIProductGroup::is_product_group_key_Set() const{
    return m_product_group_key_isSet;
}

bool OAIProductGroup::is_product_group_key_Valid() const{
    return m_product_group_key_isValid;
}

qint32 OAIProductGroup::getSubscriptionCount() const {
    return m_subscription_count;
}
void OAIProductGroup::setSubscriptionCount(const qint32 &subscription_count) {
    m_subscription_count = subscription_count;
    m_subscription_count_isSet = true;
}

bool OAIProductGroup::is_subscription_count_Set() const{
    return m_subscription_count_isSet;
}

bool OAIProductGroup::is_subscription_count_Valid() const{
    return m_subscription_count_isValid;
}

bool OAIProductGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_product_group_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_product_group_key_isValid && m_subscription_count_isValid && true;
}

} // namespace OpenAPI
