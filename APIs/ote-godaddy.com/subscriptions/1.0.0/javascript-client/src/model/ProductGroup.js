/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProductGroup model module.
 * @module model/ProductGroup
 * @version 1.0.0
 */
class ProductGroup {
    /**
     * Constructs a new <code>ProductGroup</code>.
     * @alias module:model/ProductGroup
     * @param productGroupKey {String} Primary key of a grouping of related Subscriptions
     * @param subscriptionCount {Number} The number of Subscriptions that the shopper owns in this group
     */
    constructor(productGroupKey, subscriptionCount) { 
        
        ProductGroup.initialize(this, productGroupKey, subscriptionCount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, productGroupKey, subscriptionCount) { 
        obj['productGroupKey'] = productGroupKey;
        obj['subscriptionCount'] = subscriptionCount;
    }

    /**
     * Constructs a <code>ProductGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductGroup} obj Optional instance to populate.
     * @return {module:model/ProductGroup} The populated <code>ProductGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductGroup();

            if (data.hasOwnProperty('productGroupKey')) {
                obj['productGroupKey'] = ApiClient.convertToType(data['productGroupKey'], 'String');
            }
            if (data.hasOwnProperty('subscriptionCount')) {
                obj['subscriptionCount'] = ApiClient.convertToType(data['subscriptionCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductGroup</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProductGroup.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['productGroupKey'] && !(typeof data['productGroupKey'] === 'string' || data['productGroupKey'] instanceof String)) {
            throw new Error("Expected the field `productGroupKey` to be a primitive type in the JSON string but got " + data['productGroupKey']);
        }

        return true;
    }


}

ProductGroup.RequiredProperties = ["productGroupKey", "subscriptionCount"];

/**
 * Primary key of a grouping of related Subscriptions
 * @member {String} productGroupKey
 */
ProductGroup.prototype['productGroupKey'] = undefined;

/**
 * The number of Subscriptions that the shopper owns in this group
 * @member {Number} subscriptionCount
 */
ProductGroup.prototype['subscriptionCount'] = undefined;






export default ProductGroup;

