/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubscriptionAddon model module.
 * @module model/SubscriptionAddon
 * @version 1.0.0
 */
class SubscriptionAddon {
    /**
     * Constructs a new <code>SubscriptionAddon</code>.
     * @alias module:model/SubscriptionAddon
     * @param commitment {module:model/SubscriptionAddon.CommitmentEnum} The financial commitment the customer has in the product
     * @param pfid {Number} Unique identifier of the add-in product
     * @param quantity {Number} 
     */
    constructor(commitment, pfid, quantity) { 
        
        SubscriptionAddon.initialize(this, commitment, pfid, quantity);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, commitment, pfid, quantity) { 
        obj['commitment'] = commitment;
        obj['pfid'] = pfid;
        obj['quantity'] = quantity;
    }

    /**
     * Constructs a <code>SubscriptionAddon</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionAddon} obj Optional instance to populate.
     * @return {module:model/SubscriptionAddon} The populated <code>SubscriptionAddon</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionAddon();

            if (data.hasOwnProperty('commitment')) {
                obj['commitment'] = ApiClient.convertToType(data['commitment'], 'String');
            }
            if (data.hasOwnProperty('pfid')) {
                obj['pfid'] = ApiClient.convertToType(data['pfid'], 'Number');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionAddon</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionAddon</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SubscriptionAddon.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['commitment'] && !(typeof data['commitment'] === 'string' || data['commitment'] instanceof String)) {
            throw new Error("Expected the field `commitment` to be a primitive type in the JSON string but got " + data['commitment']);
        }

        return true;
    }


}

SubscriptionAddon.RequiredProperties = ["commitment", "pfid", "quantity"];

/**
 * The financial commitment the customer has in the product
 * @member {module:model/SubscriptionAddon.CommitmentEnum} commitment
 */
SubscriptionAddon.prototype['commitment'] = undefined;

/**
 * Unique identifier of the add-in product
 * @member {Number} pfid
 */
SubscriptionAddon.prototype['pfid'] = undefined;

/**
 * @member {Number} quantity
 */
SubscriptionAddon.prototype['quantity'] = undefined;





/**
 * Allowed values for the <code>commitment</code> property.
 * @enum {String}
 * @readonly
 */
SubscriptionAddon['CommitmentEnum'] = {

    /**
     * value: "PAID"
     * @const
     */
    "PAID": "PAID",

    /**
     * value: "FREE"
     * @const
     */
    "FREE": "FREE",

    /**
     * value: "TRIAL"
     * @const
     */
    "TRIAL": "TRIAL"
};



export default SubscriptionAddon;

