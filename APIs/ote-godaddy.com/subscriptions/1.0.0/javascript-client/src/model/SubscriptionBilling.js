/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubscriptionBilling model module.
 * @module model/SubscriptionBilling
 * @version 1.0.0
 */
class SubscriptionBilling {
    /**
     * Constructs a new <code>SubscriptionBilling</code>.
     * @alias module:model/SubscriptionBilling
     * @param commitment {module:model/SubscriptionBilling.CommitmentEnum} The financial commitment the customer has in the product
     * @param renewAt {String} The point in time after which the Subscription will bill for automatic renewal
     * @param status {module:model/SubscriptionBilling.StatusEnum} Whether payments are past due
     */
    constructor(commitment, renewAt, status) { 
        
        SubscriptionBilling.initialize(this, commitment, renewAt, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, commitment, renewAt, status) { 
        obj['commitment'] = commitment;
        obj['renewAt'] = renewAt;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>SubscriptionBilling</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionBilling} obj Optional instance to populate.
     * @return {module:model/SubscriptionBilling} The populated <code>SubscriptionBilling</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionBilling();

            if (data.hasOwnProperty('commitment')) {
                obj['commitment'] = ApiClient.convertToType(data['commitment'], 'String');
            }
            if (data.hasOwnProperty('pastDueTypes')) {
                obj['pastDueTypes'] = ApiClient.convertToType(data['pastDueTypes'], ['String']);
            }
            if (data.hasOwnProperty('renewAt')) {
                obj['renewAt'] = ApiClient.convertToType(data['renewAt'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionBilling</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionBilling</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SubscriptionBilling.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['commitment'] && !(typeof data['commitment'] === 'string' || data['commitment'] instanceof String)) {
            throw new Error("Expected the field `commitment` to be a primitive type in the JSON string but got " + data['commitment']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['pastDueTypes'])) {
            throw new Error("Expected the field `pastDueTypes` to be an array in the JSON data but got " + data['pastDueTypes']);
        }
        // ensure the json data is a string
        if (data['renewAt'] && !(typeof data['renewAt'] === 'string' || data['renewAt'] instanceof String)) {
            throw new Error("Expected the field `renewAt` to be a primitive type in the JSON string but got " + data['renewAt']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

SubscriptionBilling.RequiredProperties = ["commitment", "renewAt", "status"];

/**
 * The financial commitment the customer has in the product
 * @member {module:model/SubscriptionBilling.CommitmentEnum} commitment
 */
SubscriptionBilling.prototype['commitment'] = undefined;

/**
 * The types of charges that are past due when `status` is PAST_DUE
 * @member {Array.<module:model/SubscriptionBilling.PastDueTypesEnum>} pastDueTypes
 */
SubscriptionBilling.prototype['pastDueTypes'] = undefined;

/**
 * The point in time after which the Subscription will bill for automatic renewal
 * @member {String} renewAt
 */
SubscriptionBilling.prototype['renewAt'] = undefined;

/**
 * Whether payments are past due
 * @member {module:model/SubscriptionBilling.StatusEnum} status
 */
SubscriptionBilling.prototype['status'] = undefined;





/**
 * Allowed values for the <code>commitment</code> property.
 * @enum {String}
 * @readonly
 */
SubscriptionBilling['CommitmentEnum'] = {

    /**
     * value: "PAID"
     * @const
     */
    "PAID": "PAID",

    /**
     * value: "FREE"
     * @const
     */
    "FREE": "FREE",

    /**
     * value: "TRIAL"
     * @const
     */
    "TRIAL": "TRIAL"
};


/**
 * Allowed values for the <code>pastDueTypes</code> property.
 * @enum {String}
 * @readonly
 */
SubscriptionBilling['PastDueTypesEnum'] = {

    /**
     * value: "ADDON"
     * @const
     */
    "ADDON": "ADDON",

    /**
     * value: "BURST"
     * @const
     */
    "BURST": "BURST",

    /**
     * value: "SUBSCRIPTION"
     * @const
     */
    "SUBSCRIPTION": "SUBSCRIPTION"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
SubscriptionBilling['StatusEnum'] = {

    /**
     * value: "CURRENT"
     * @const
     */
    "CURRENT": "CURRENT",

    /**
     * value: "PAST_DUE"
     * @const
     */
    "PAST_DUE": "PAST_DUE"
};



export default SubscriptionBilling;

