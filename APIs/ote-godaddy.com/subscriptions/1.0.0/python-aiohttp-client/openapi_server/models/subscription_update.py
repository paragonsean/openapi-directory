# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubscriptionUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, payment_profile_id: int=None, renew_auto: bool=None):
        """SubscriptionUpdate - a model defined in OpenAPI

        :param payment_profile_id: The payment_profile_id of this SubscriptionUpdate.
        :param renew_auto: The renew_auto of this SubscriptionUpdate.
        """
        self.openapi_types = {
            'payment_profile_id': int,
            'renew_auto': bool
        }

        self.attribute_map = {
            'payment_profile_id': 'paymentProfileId',
            'renew_auto': 'renewAuto'
        }

        self._payment_profile_id = payment_profile_id
        self._renew_auto = renew_auto

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscriptionUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscriptionUpdate of this SubscriptionUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def payment_profile_id(self):
        """Gets the payment_profile_id of this SubscriptionUpdate.

        Unique identifier of the payment profile you want to be used for automatic renewal

        :return: The payment_profile_id of this SubscriptionUpdate.
        :rtype: int
        """
        return self._payment_profile_id

    @payment_profile_id.setter
    def payment_profile_id(self, payment_profile_id):
        """Sets the payment_profile_id of this SubscriptionUpdate.

        Unique identifier of the payment profile you want to be used for automatic renewal

        :param payment_profile_id: The payment_profile_id of this SubscriptionUpdate.
        :type payment_profile_id: int
        """

        self._payment_profile_id = payment_profile_id

    @property
    def renew_auto(self):
        """Gets the renew_auto of this SubscriptionUpdate.

        Whether or not you want the Subscription renew automatically

        :return: The renew_auto of this SubscriptionUpdate.
        :rtype: bool
        """
        return self._renew_auto

    @renew_auto.setter
    def renew_auto(self, renew_auto):
        """Sets the renew_auto of this SubscriptionUpdate.

        Whether or not you want the Subscription renew automatically

        :param renew_auto: The renew_auto of this SubscriptionUpdate.
        :type renew_auto: bool
        """

        self._renew_auto = renew_auto
