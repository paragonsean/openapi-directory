/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ShopperStatus model module.
 * @module model/ShopperStatus
 * @version 1.0.0
 */
class ShopperStatus {
    /**
     * Constructs a new <code>ShopperStatus</code>.
     * @alias module:model/ShopperStatus
     */
    constructor() { 
        
        ShopperStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShopperStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShopperStatus} obj Optional instance to populate.
     * @return {module:model/ShopperStatus} The populated <code>ShopperStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShopperStatus();

            if (data.hasOwnProperty('billingState')) {
                obj['billingState'] = ApiClient.convertToType(data['billingState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShopperStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShopperStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['billingState'] && !(typeof data['billingState'] === 'string' || data['billingState'] instanceof String)) {
            throw new Error("Expected the field `billingState` to be a primitive type in the JSON string but got " + data['billingState']);
        }

        return true;
    }


}



/**
 * Indicates the billing state of the Shopper.<br />ABANDONED: The shopper has not been billed in at least 10 years and has no active subscriptions.<br />INACTIVE: The shopper has been billed within the last 10 years but has no active subscriptions.<br />ACTIVE: The shopper has at least one active subscription.
 * @member {module:model/ShopperStatus.BillingStateEnum} billingState
 */
ShopperStatus.prototype['billingState'] = undefined;





/**
 * Allowed values for the <code>billingState</code> property.
 * @enum {String}
 * @readonly
 */
ShopperStatus['BillingStateEnum'] = {

    /**
     * value: "ABANDONED"
     * @const
     */
    "ABANDONED": "ABANDONED",

    /**
     * value: "INACTIVE"
     * @const
     */
    "INACTIVE": "INACTIVE",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE"
};



export default ShopperStatus;

