/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShopperUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShopperUpdate::OAIShopperUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShopperUpdate::OAIShopperUpdate() {
    this->initializeModel();
}

OAIShopperUpdate::~OAIShopperUpdate() {}

void OAIShopperUpdate::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_external_id_isSet = false;
    m_external_id_isValid = false;

    m_market_id_isSet = false;
    m_market_id_isValid = false;

    m_name_first_isSet = false;
    m_name_first_isValid = false;

    m_name_last_isSet = false;
    m_name_last_isValid = false;
}

void OAIShopperUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIShopperUpdate::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_external_id_isValid = ::OpenAPI::fromJsonValue(m_external_id, json[QString("externalId")]);
    m_external_id_isSet = !json[QString("externalId")].isNull() && m_external_id_isValid;

    m_market_id_isValid = ::OpenAPI::fromJsonValue(m_market_id, json[QString("marketId")]);
    m_market_id_isSet = !json[QString("marketId")].isNull() && m_market_id_isValid;

    m_name_first_isValid = ::OpenAPI::fromJsonValue(m_name_first, json[QString("nameFirst")]);
    m_name_first_isSet = !json[QString("nameFirst")].isNull() && m_name_first_isValid;

    m_name_last_isValid = ::OpenAPI::fromJsonValue(m_name_last, json[QString("nameLast")]);
    m_name_last_isSet = !json[QString("nameLast")].isNull() && m_name_last_isValid;
}

QString OAIShopperUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIShopperUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_external_id_isSet) {
        obj.insert(QString("externalId"), ::OpenAPI::toJsonValue(m_external_id));
    }
    if (m_market_id_isSet) {
        obj.insert(QString("marketId"), ::OpenAPI::toJsonValue(m_market_id));
    }
    if (m_name_first_isSet) {
        obj.insert(QString("nameFirst"), ::OpenAPI::toJsonValue(m_name_first));
    }
    if (m_name_last_isSet) {
        obj.insert(QString("nameLast"), ::OpenAPI::toJsonValue(m_name_last));
    }
    return obj;
}

QString OAIShopperUpdate::getEmail() const {
    return m_email;
}
void OAIShopperUpdate::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIShopperUpdate::is_email_Set() const{
    return m_email_isSet;
}

bool OAIShopperUpdate::is_email_Valid() const{
    return m_email_isValid;
}

qint32 OAIShopperUpdate::getExternalId() const {
    return m_external_id;
}
void OAIShopperUpdate::setExternalId(const qint32 &external_id) {
    m_external_id = external_id;
    m_external_id_isSet = true;
}

bool OAIShopperUpdate::is_external_id_Set() const{
    return m_external_id_isSet;
}

bool OAIShopperUpdate::is_external_id_Valid() const{
    return m_external_id_isValid;
}

QString OAIShopperUpdate::getMarketId() const {
    return m_market_id;
}
void OAIShopperUpdate::setMarketId(const QString &market_id) {
    m_market_id = market_id;
    m_market_id_isSet = true;
}

bool OAIShopperUpdate::is_market_id_Set() const{
    return m_market_id_isSet;
}

bool OAIShopperUpdate::is_market_id_Valid() const{
    return m_market_id_isValid;
}

QString OAIShopperUpdate::getNameFirst() const {
    return m_name_first;
}
void OAIShopperUpdate::setNameFirst(const QString &name_first) {
    m_name_first = name_first;
    m_name_first_isSet = true;
}

bool OAIShopperUpdate::is_name_first_Set() const{
    return m_name_first_isSet;
}

bool OAIShopperUpdate::is_name_first_Valid() const{
    return m_name_first_isValid;
}

QString OAIShopperUpdate::getNameLast() const {
    return m_name_last;
}
void OAIShopperUpdate::setNameLast(const QString &name_last) {
    m_name_last = name_last;
    m_name_last_isSet = true;
}

bool OAIShopperUpdate::is_name_last_Set() const{
    return m_name_last_isSet;
}

bool OAIShopperUpdate::is_name_last_Valid() const{
    return m_name_last_isValid;
}

bool OAIShopperUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_market_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_first_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_last_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIShopperUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
