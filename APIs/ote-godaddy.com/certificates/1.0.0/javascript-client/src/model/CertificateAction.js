/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CertificateAction model module.
 * @module model/CertificateAction
 * @version 1.0.0
 */
class CertificateAction {
    /**
     * Constructs a new <code>CertificateAction</code>.
     * @alias module:model/CertificateAction
     * @param createdAt {String} Date action created
     * @param type {module:model/CertificateAction.TypeEnum} 
     */
    constructor(createdAt, type) { 
        
        CertificateAction.initialize(this, createdAt, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, type) { 
        obj['createdAt'] = createdAt;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>CertificateAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CertificateAction} obj Optional instance to populate.
     * @return {module:model/CertificateAction} The populated <code>CertificateAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CertificateAction();

            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CertificateAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CertificateAction</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CertificateAction.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['createdAt'] && !(typeof data['createdAt'] === 'string' || data['createdAt'] instanceof String)) {
            throw new Error("Expected the field `createdAt` to be a primitive type in the JSON string but got " + data['createdAt']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

CertificateAction.RequiredProperties = ["createdAt", "type"];

/**
 * Date action created
 * @member {String} createdAt
 */
CertificateAction.prototype['createdAt'] = undefined;

/**
 * @member {module:model/CertificateAction.TypeEnum} type
 */
CertificateAction.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
CertificateAction['TypeEnum'] = {

    /**
     * value: "CERTIFICATE_ISSUED"
     * @const
     */
    "CERTIFICATE_ISSUED": "CERTIFICATE_ISSUED",

    /**
     * value: "CERTIFICATE_ORDER_CANCELED"
     * @const
     */
    "CERTIFICATE_ORDER_CANCELED": "CERTIFICATE_ORDER_CANCELED",

    /**
     * value: "CERTIFICATE_ORDER_CREATED"
     * @const
     */
    "CERTIFICATE_ORDER_CREATED": "CERTIFICATE_ORDER_CREATED",

    /**
     * value: "CERTIFICATE_REVOKED"
     * @const
     */
    "CERTIFICATE_REVOKED": "CERTIFICATE_REVOKED",

    /**
     * value: "DOMAIN_VALIDATION_COMPLETE"
     * @const
     */
    "DOMAIN_VALIDATION_COMPLETE": "DOMAIN_VALIDATION_COMPLETE",

    /**
     * value: "FRAUD_DETECTED"
     * @const
     */
    "FRAUD_DETECTED": "FRAUD_DETECTED",

    /**
     * value: "ORG_NAME_CHANGE"
     * @const
     */
    "ORG_NAME_CHANGE": "ORG_NAME_CHANGE",

    /**
     * value: "ORG_VALIDATION_COMPLETE"
     * @const
     */
    "ORG_VALIDATION_COMPLETE": "ORG_VALIDATION_COMPLETE",

    /**
     * value: "SAN_DROP"
     * @const
     */
    "SAN_DROP": "SAN_DROP"
};



export default CertificateAction;

