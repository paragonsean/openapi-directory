/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICertificateBundle.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICertificateBundle::OAICertificateBundle(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICertificateBundle::OAICertificateBundle() {
    this->initializeModel();
}

OAICertificateBundle::~OAICertificateBundle() {}

void OAICertificateBundle::initializeModel() {

    m_pems_isSet = false;
    m_pems_isValid = false;

    m_serial_number_isSet = false;
    m_serial_number_isValid = false;
}

void OAICertificateBundle::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICertificateBundle::fromJsonObject(QJsonObject json) {

    m_pems_isValid = ::OpenAPI::fromJsonValue(m_pems, json[QString("pems")]);
    m_pems_isSet = !json[QString("pems")].isNull() && m_pems_isValid;

    m_serial_number_isValid = ::OpenAPI::fromJsonValue(m_serial_number, json[QString("serialNumber")]);
    m_serial_number_isSet = !json[QString("serialNumber")].isNull() && m_serial_number_isValid;
}

QString OAICertificateBundle::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICertificateBundle::asJsonObject() const {
    QJsonObject obj;
    if (m_pems.isSet()) {
        obj.insert(QString("pems"), ::OpenAPI::toJsonValue(m_pems));
    }
    if (m_serial_number_isSet) {
        obj.insert(QString("serialNumber"), ::OpenAPI::toJsonValue(m_serial_number));
    }
    return obj;
}

OAIPEMCertificates OAICertificateBundle::getPems() const {
    return m_pems;
}
void OAICertificateBundle::setPems(const OAIPEMCertificates &pems) {
    m_pems = pems;
    m_pems_isSet = true;
}

bool OAICertificateBundle::is_pems_Set() const{
    return m_pems_isSet;
}

bool OAICertificateBundle::is_pems_Valid() const{
    return m_pems_isValid;
}

QString OAICertificateBundle::getSerialNumber() const {
    return m_serial_number;
}
void OAICertificateBundle::setSerialNumber(const QString &serial_number) {
    m_serial_number = serial_number;
    m_serial_number_isSet = true;
}

bool OAICertificateBundle::is_serial_number_Set() const{
    return m_serial_number_isSet;
}

bool OAICertificateBundle::is_serial_number_Valid() const{
    return m_serial_number_isValid;
}

bool OAICertificateBundle::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pems.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_serial_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICertificateBundle::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pems_isValid && m_serial_number_isValid && true;
}

} // namespace OpenAPI
