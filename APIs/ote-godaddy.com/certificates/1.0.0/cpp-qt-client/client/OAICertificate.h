/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificate.h
 *
 * 
 */

#ifndef OAICertificate_H
#define OAICertificate_H

#include <QJsonObject>

#include "OAICertificateContact.h"
#include "OAICertificateOrganization.h"
#include "OAISubjectAlternativeNameDetails.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICertificateContact;
class OAICertificateOrganization;
class OAISubjectAlternativeNameDetails;

class OAICertificate : public OAIObject {
public:
    OAICertificate();
    OAICertificate(QString json);
    ~OAICertificate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCertificateId() const;
    void setCertificateId(const QString &certificate_id);
    bool is_certificate_id_Set() const;
    bool is_certificate_id_Valid() const;

    QString getCommonName() const;
    void setCommonName(const QString &common_name);
    bool is_common_name_Set() const;
    bool is_common_name_Valid() const;

    OAICertificateContact getContact() const;
    void setContact(const OAICertificateContact &contact);
    bool is_contact_Set() const;
    bool is_contact_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDeniedReason() const;
    void setDeniedReason(const QString &denied_reason);
    bool is_denied_reason_Set() const;
    bool is_denied_reason_Valid() const;

    OAICertificateOrganization getOrganization() const;
    void setOrganization(const OAICertificateOrganization &organization);
    bool is_organization_Set() const;
    bool is_organization_Valid() const;

    qint32 getPeriod() const;
    void setPeriod(const qint32 &period);
    bool is_period_Set() const;
    bool is_period_Valid() const;

    QString getProductType() const;
    void setProductType(const QString &product_type);
    bool is_product_type_Set() const;
    bool is_product_type_Valid() const;

    qint32 getProgress() const;
    void setProgress(const qint32 &progress);
    bool is_progress_Set() const;
    bool is_progress_Valid() const;

    QString getRevokedAt() const;
    void setRevokedAt(const QString &revoked_at);
    bool is_revoked_at_Set() const;
    bool is_revoked_at_Valid() const;

    QString getRootType() const;
    void setRootType(const QString &root_type);
    bool is_root_type_Set() const;
    bool is_root_type_Valid() const;

    QString getSerialNumber() const;
    void setSerialNumber(const QString &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    QString getSerialNumberHex() const;
    void setSerialNumberHex(const QString &serial_number_hex);
    bool is_serial_number_hex_Set() const;
    bool is_serial_number_hex_Valid() const;

    QString getSlotSize() const;
    void setSlotSize(const QString &slot_size);
    bool is_slot_size_Set() const;
    bool is_slot_size_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAISubjectAlternativeNameDetails> getSubjectAlternativeNames() const;
    void setSubjectAlternativeNames(const QList<OAISubjectAlternativeNameDetails> &subject_alternative_names);
    bool is_subject_alternative_names_Set() const;
    bool is_subject_alternative_names_Valid() const;

    QString getValidEnd() const;
    void setValidEnd(const QString &valid_end);
    bool is_valid_end_Set() const;
    bool is_valid_end_Valid() const;

    QString getValidStart() const;
    void setValidStart(const QString &valid_start);
    bool is_valid_start_Set() const;
    bool is_valid_start_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_certificate_id;
    bool m_certificate_id_isSet;
    bool m_certificate_id_isValid;

    QString m_common_name;
    bool m_common_name_isSet;
    bool m_common_name_isValid;

    OAICertificateContact m_contact;
    bool m_contact_isSet;
    bool m_contact_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_denied_reason;
    bool m_denied_reason_isSet;
    bool m_denied_reason_isValid;

    OAICertificateOrganization m_organization;
    bool m_organization_isSet;
    bool m_organization_isValid;

    qint32 m_period;
    bool m_period_isSet;
    bool m_period_isValid;

    QString m_product_type;
    bool m_product_type_isSet;
    bool m_product_type_isValid;

    qint32 m_progress;
    bool m_progress_isSet;
    bool m_progress_isValid;

    QString m_revoked_at;
    bool m_revoked_at_isSet;
    bool m_revoked_at_isValid;

    QString m_root_type;
    bool m_root_type_isSet;
    bool m_root_type_isValid;

    QString m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;

    QString m_serial_number_hex;
    bool m_serial_number_hex_isSet;
    bool m_serial_number_hex_isValid;

    QString m_slot_size;
    bool m_slot_size_isSet;
    bool m_slot_size_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAISubjectAlternativeNameDetails> m_subject_alternative_names;
    bool m_subject_alternative_names_isSet;
    bool m_subject_alternative_names_isValid;

    QString m_valid_end;
    bool m_valid_end_isSet;
    bool m_valid_end_isValid;

    QString m_valid_start;
    bool m_valid_start_isSet;
    bool m_valid_start_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificate)

#endif // OAICertificate_H
