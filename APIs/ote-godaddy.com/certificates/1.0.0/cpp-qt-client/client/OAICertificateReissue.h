/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificateReissue.h
 *
 * 
 */

#ifndef OAICertificateReissue_H
#define OAICertificateReissue_H

#include <QJsonObject>

#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICertificateReissue : public OAIObject {
public:
    OAICertificateReissue();
    OAICertificateReissue(QString json);
    ~OAICertificateReissue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCallbackUrl() const;
    void setCallbackUrl(const QString &callback_url);
    bool is_callback_url_Set() const;
    bool is_callback_url_Valid() const;

    QString getCommonName() const;
    void setCommonName(const QString &common_name);
    bool is_common_name_Set() const;
    bool is_common_name_Valid() const;

    QString getCsr() const;
    void setCsr(const QString &csr);
    bool is_csr_Set() const;
    bool is_csr_Valid() const;

    qint32 getDelayExistingRevoke() const;
    void setDelayExistingRevoke(const qint32 &delay_existing_revoke);
    bool is_delay_existing_revoke_Set() const;
    bool is_delay_existing_revoke_Valid() const;

    QSet<QString> getForceDomainRevetting() const;
    void setForceDomainRevetting(const QSet<QString> &force_domain_revetting);
    bool is_force_domain_revetting_Set() const;
    bool is_force_domain_revetting_Valid() const;

    QString getRootType() const;
    void setRootType(const QString &root_type);
    bool is_root_type_Set() const;
    bool is_root_type_Valid() const;

    QSet<QString> getSubjectAlternativeNames() const;
    void setSubjectAlternativeNames(const QSet<QString> &subject_alternative_names);
    bool is_subject_alternative_names_Set() const;
    bool is_subject_alternative_names_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_callback_url;
    bool m_callback_url_isSet;
    bool m_callback_url_isValid;

    QString m_common_name;
    bool m_common_name_isSet;
    bool m_common_name_isValid;

    QString m_csr;
    bool m_csr_isSet;
    bool m_csr_isValid;

    qint32 m_delay_existing_revoke;
    bool m_delay_existing_revoke_isSet;
    bool m_delay_existing_revoke_isValid;

    QSet<QString> m_force_domain_revetting;
    bool m_force_domain_revetting_isSet;
    bool m_force_domain_revetting_isValid;

    QString m_root_type;
    bool m_root_type_isSet;
    bool m_root_type_isValid;

    QSet<QString> m_subject_alternative_names;
    bool m_subject_alternative_names_isSet;
    bool m_subject_alternative_names_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificateReissue)

#endif // OAICertificateReissue_H
