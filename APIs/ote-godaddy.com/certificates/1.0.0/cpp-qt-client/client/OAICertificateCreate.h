/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificateCreate.h
 *
 * 
 */

#ifndef OAICertificateCreate_H
#define OAICertificateCreate_H

#include <QJsonObject>

#include "OAICertificateContact.h"
#include "OAICertificateOrganizationCreate.h"
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICertificateContact;
class OAICertificateOrganizationCreate;

class OAICertificateCreate : public OAIObject {
public:
    OAICertificateCreate();
    OAICertificateCreate(QString json);
    ~OAICertificateCreate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCallbackUrl() const;
    void setCallbackUrl(const QString &callback_url);
    bool is_callback_url_Set() const;
    bool is_callback_url_Valid() const;

    QString getCommonName() const;
    void setCommonName(const QString &common_name);
    bool is_common_name_Set() const;
    bool is_common_name_Valid() const;

    OAICertificateContact getContact() const;
    void setContact(const OAICertificateContact &contact);
    bool is_contact_Set() const;
    bool is_contact_Valid() const;

    QString getCsr() const;
    void setCsr(const QString &csr);
    bool is_csr_Set() const;
    bool is_csr_Valid() const;

    bool isIntelVPro() const;
    void setIntelVPro(const bool &intel_v_pro);
    bool is_intel_v_pro_Set() const;
    bool is_intel_v_pro_Valid() const;

    OAICertificateOrganizationCreate getOrganization() const;
    void setOrganization(const OAICertificateOrganizationCreate &organization);
    bool is_organization_Set() const;
    bool is_organization_Valid() const;

    qint32 getPeriod() const;
    void setPeriod(const qint32 &period);
    bool is_period_Set() const;
    bool is_period_Valid() const;

    QString getProductType() const;
    void setProductType(const QString &product_type);
    bool is_product_type_Set() const;
    bool is_product_type_Valid() const;

    QString getRootType() const;
    void setRootType(const QString &root_type);
    bool is_root_type_Set() const;
    bool is_root_type_Valid() const;

    QString getSlotSize() const;
    void setSlotSize(const QString &slot_size);
    bool is_slot_size_Set() const;
    bool is_slot_size_Valid() const;

    QSet<QString> getSubjectAlternativeNames() const;
    void setSubjectAlternativeNames(const QSet<QString> &subject_alternative_names);
    bool is_subject_alternative_names_Set() const;
    bool is_subject_alternative_names_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_callback_url;
    bool m_callback_url_isSet;
    bool m_callback_url_isValid;

    QString m_common_name;
    bool m_common_name_isSet;
    bool m_common_name_isValid;

    OAICertificateContact m_contact;
    bool m_contact_isSet;
    bool m_contact_isValid;

    QString m_csr;
    bool m_csr_isSet;
    bool m_csr_isValid;

    bool m_intel_v_pro;
    bool m_intel_v_pro_isSet;
    bool m_intel_v_pro_isValid;

    OAICertificateOrganizationCreate m_organization;
    bool m_organization_isSet;
    bool m_organization_isValid;

    qint32 m_period;
    bool m_period_isSet;
    bool m_period_isValid;

    QString m_product_type;
    bool m_product_type_isSet;
    bool m_product_type_isValid;

    QString m_root_type;
    bool m_root_type_isSet;
    bool m_root_type_isValid;

    QString m_slot_size;
    bool m_slot_size_isSet;
    bool m_slot_size_isValid;

    QSet<QString> m_subject_alternative_names;
    bool m_subject_alternative_names_isSet;
    bool m_subject_alternative_names_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificateCreate)

#endif // OAICertificateCreate_H
