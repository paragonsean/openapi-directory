/**
 * ATM Locator API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIATM_inner.h
 *
 * ATM information.
 */

#ifndef OAIATM_inner_H
#define OAIATM_inner_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIOtherATMServices_inner.h"
#include "OAIOtherAccessibility_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOtherATMServices_inner;
class OAIOtherAccessibility_inner;

class OAIATM_inner : public OAIObject {
public:
    OAIATM_inner();
    OAIATM_inner(QString json);
    ~OAIATM_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAtmServices() const;
    void setAtmServices(const QList<QString> &atm_services);
    bool is_atm_services_Set() const;
    bool is_atm_services_Valid() const;

    bool isAccess24HoursIndicator() const;
    void setAccess24HoursIndicator(const bool &access24_hours_indicator);
    bool is_access24_hours_indicator_Set() const;
    bool is_access24_hours_indicator_Valid() const;

    QList<QString> getAccessibility() const;
    void setAccessibility(const QList<QString> &accessibility);
    bool is_accessibility_Set() const;
    bool is_accessibility_Valid() const;

    OAIObject getBranch() const;
    void setBranch(const OAIObject &branch);
    bool is_branch_Set() const;
    bool is_branch_Valid() const;

    QString getIdentification() const;
    void setIdentification(const QString &identification);
    bool is_identification_Set() const;
    bool is_identification_Valid() const;

    OAIObject getLocation() const;
    void setLocation(const OAIObject &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getMinimumPossibleAmount() const;
    void setMinimumPossibleAmount(const QString &minimum_possible_amount);
    bool is_minimum_possible_amount_Set() const;
    bool is_minimum_possible_amount_Valid() const;

    QList<QString> getNote() const;
    void setNote(const QList<QString> &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QList<OAIOtherATMServices_inner> getOtherAtmServices() const;
    void setOtherAtmServices(const QList<OAIOtherATMServices_inner> &other_atm_services);
    bool is_other_atm_services_Set() const;
    bool is_other_atm_services_Valid() const;

    QList<OAIOtherAccessibility_inner> getOtherAccessibility() const;
    void setOtherAccessibility(const QList<OAIOtherAccessibility_inner> &other_accessibility);
    bool is_other_accessibility_Set() const;
    bool is_other_accessibility_Valid() const;

    QList<QString> getSupportedCurrencies() const;
    void setSupportedCurrencies(const QList<QString> &supported_currencies);
    bool is_supported_currencies_Set() const;
    bool is_supported_currencies_Valid() const;

    QList<QString> getSupportedLanguages() const;
    void setSupportedLanguages(const QList<QString> &supported_languages);
    bool is_supported_languages_Set() const;
    bool is_supported_languages_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_atm_services;
    bool m_atm_services_isSet;
    bool m_atm_services_isValid;

    bool m_access24_hours_indicator;
    bool m_access24_hours_indicator_isSet;
    bool m_access24_hours_indicator_isValid;

    QList<QString> m_accessibility;
    bool m_accessibility_isSet;
    bool m_accessibility_isValid;

    OAIObject m_branch;
    bool m_branch_isSet;
    bool m_branch_isValid;

    QString m_identification;
    bool m_identification_isSet;
    bool m_identification_isValid;

    OAIObject m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_minimum_possible_amount;
    bool m_minimum_possible_amount_isSet;
    bool m_minimum_possible_amount_isValid;

    QList<QString> m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QList<OAIOtherATMServices_inner> m_other_atm_services;
    bool m_other_atm_services_isSet;
    bool m_other_atm_services_isValid;

    QList<OAIOtherAccessibility_inner> m_other_accessibility;
    bool m_other_accessibility_isSet;
    bool m_other_accessibility_isValid;

    QList<QString> m_supported_currencies;
    bool m_supported_currencies_isSet;
    bool m_supported_currencies_isValid;

    QList<QString> m_supported_languages;
    bool m_supported_languages_isSet;
    bool m_supported_languages_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIATM_inner)

#endif // OAIATM_inner_H
