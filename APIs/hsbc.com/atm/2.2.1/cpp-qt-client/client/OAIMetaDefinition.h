/**
 * ATM Locator API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetaDefinition.h
 *
 * 
 */

#ifndef OAIMetaDefinition_H
#define OAIMetaDefinition_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMetaDefinition : public OAIObject {
public:
    OAIMetaDefinition();
    OAIMetaDefinition(QString json);
    ~OAIMetaDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAgreement() const;
    void setAgreement(const QString &agreement);
    bool is_agreement_Set() const;
    bool is_agreement_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getLicense() const;
    void setLicense(const QString &license);
    bool is_license_Set() const;
    bool is_license_Valid() const;

    QString getTermsOfUse() const;
    void setTermsOfUse(const QString &terms_of_use);
    bool is_terms_of_use_Set() const;
    bool is_terms_of_use_Valid() const;

    qint32 getTotalResults() const;
    void setTotalResults(const qint32 &total_results);
    bool is_total_results_Set() const;
    bool is_total_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_agreement;
    bool m_agreement_isSet;
    bool m_agreement_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_license;
    bool m_license_isSet;
    bool m_license_isValid;

    QString m_terms_of_use;
    bool m_terms_of_use_isSet;
    bool m_terms_of_use_isValid;

    qint32 m_total_results;
    bool m_total_results_isSet;
    bool m_total_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetaDefinition)

#endif // OAIMetaDefinition_H
