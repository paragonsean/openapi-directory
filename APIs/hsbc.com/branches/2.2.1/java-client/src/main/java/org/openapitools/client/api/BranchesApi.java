/*
 * Branch Locator API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.math.BigDecimal;
import org.openapitools.client.model.BranchDefinitionMeta;
import org.openapitools.client.model.ErrorDefinition400;
import org.openapitools.client.model.ErrorDefinition408;
import org.openapitools.client.model.ErrorDefinition429;
import org.openapitools.client.model.ErrorDefinition500;
import org.openapitools.client.model.ErrorDefinition503;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BranchesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public BranchesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public BranchesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for openBankingV22BranchesGet
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call openBankingV22BranchesGetCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/open-banking/v2.2/branches";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/prs.openbanking.opendata.v2.2+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call openBankingV22BranchesGetValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return openBankingV22BranchesGetCall(_callback);

    }

    /**
     * 
     * This API will return the branch details for all branches and is prepared to the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. It is regulated by the UK Competition and Markets Authority (CMA). Data is only available for the United Kingdom.
     * @return BranchDefinitionMeta
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public BranchDefinitionMeta openBankingV22BranchesGet() throws ApiException {
        ApiResponse<BranchDefinitionMeta> localVarResp = openBankingV22BranchesGetWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * This API will return the branch details for all branches and is prepared to the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. It is regulated by the UK Competition and Markets Authority (CMA). Data is only available for the United Kingdom.
     * @return ApiResponse&lt;BranchDefinitionMeta&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BranchDefinitionMeta> openBankingV22BranchesGetWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = openBankingV22BranchesGetValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<BranchDefinitionMeta>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This API will return the branch details for all branches and is prepared to the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. It is regulated by the UK Competition and Markets Authority (CMA). Data is only available for the United Kingdom.
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call openBankingV22BranchesGetAsync(final ApiCallback<BranchDefinitionMeta> _callback) throws ApiException {

        okhttp3.Call localVarCall = openBankingV22BranchesGetValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<BranchDefinitionMeta>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for xOpenBankingV22BranchesCountryCountryGet
     * @param country The ISO country code e.g. &amp;quot;GB&amp;quot; (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call xOpenBankingV22BranchesCountryCountryGetCall(String country, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/x-open-banking/v2.2/branches/country/{country}"
            .replace("{" + "country" + "}", localVarApiClient.escapeString(country.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/prs.openbanking.opendata.v2.2+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call xOpenBankingV22BranchesCountryCountryGetValidateBeforeCall(String country, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'country' is set
        if (country == null) {
            throw new ApiException("Missing the required parameter 'country' when calling xOpenBankingV22BranchesCountryCountryGet(Async)");
        }

        return xOpenBankingV22BranchesCountryCountryGetCall(country, _callback);

    }

    /**
     * 
     * This extended API will return the branch details for all branches in the specified country. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param country The ISO country code e.g. &amp;quot;GB&amp;quot; (required)
     * @return BranchDefinitionMeta
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public BranchDefinitionMeta xOpenBankingV22BranchesCountryCountryGet(String country) throws ApiException {
        ApiResponse<BranchDefinitionMeta> localVarResp = xOpenBankingV22BranchesCountryCountryGetWithHttpInfo(country);
        return localVarResp.getData();
    }

    /**
     * 
     * This extended API will return the branch details for all branches in the specified country. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param country The ISO country code e.g. &amp;quot;GB&amp;quot; (required)
     * @return ApiResponse&lt;BranchDefinitionMeta&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BranchDefinitionMeta> xOpenBankingV22BranchesCountryCountryGetWithHttpInfo(String country) throws ApiException {
        okhttp3.Call localVarCall = xOpenBankingV22BranchesCountryCountryGetValidateBeforeCall(country, null);
        Type localVarReturnType = new TypeToken<BranchDefinitionMeta>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This extended API will return the branch details for all branches in the specified country. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param country The ISO country code e.g. &amp;quot;GB&amp;quot; (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call xOpenBankingV22BranchesCountryCountryGetAsync(String country, final ApiCallback<BranchDefinitionMeta> _callback) throws ApiException {

        okhttp3.Call localVarCall = xOpenBankingV22BranchesCountryCountryGetValidateBeforeCall(country, _callback);
        Type localVarReturnType = new TypeToken<BranchDefinitionMeta>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for xOpenBankingV22BranchesCountryCountryTownTownGet
     * @param country The ISO country code e.g. &amp;quot;GB&amp;quot; (required)
     * @param town Town name, not case sensitive (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call xOpenBankingV22BranchesCountryCountryTownTownGetCall(String country, String town, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/x-open-banking/v2.2/branches/country/{country}/town/{town}"
            .replace("{" + "country" + "}", localVarApiClient.escapeString(country.toString()))
            .replace("{" + "town" + "}", localVarApiClient.escapeString(town.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/prs.openbanking.opendata.v2.2+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call xOpenBankingV22BranchesCountryCountryTownTownGetValidateBeforeCall(String country, String town, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'country' is set
        if (country == null) {
            throw new ApiException("Missing the required parameter 'country' when calling xOpenBankingV22BranchesCountryCountryTownTownGet(Async)");
        }

        // verify the required parameter 'town' is set
        if (town == null) {
            throw new ApiException("Missing the required parameter 'town' when calling xOpenBankingV22BranchesCountryCountryTownTownGet(Async)");
        }

        return xOpenBankingV22BranchesCountryCountryTownTownGetCall(country, town, _callback);

    }

    /**
     * 
     * This extended API will return the branch details for all branches in the specified town. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param country The ISO country code e.g. &amp;quot;GB&amp;quot; (required)
     * @param town Town name, not case sensitive (required)
     * @return BranchDefinitionMeta
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public BranchDefinitionMeta xOpenBankingV22BranchesCountryCountryTownTownGet(String country, String town) throws ApiException {
        ApiResponse<BranchDefinitionMeta> localVarResp = xOpenBankingV22BranchesCountryCountryTownTownGetWithHttpInfo(country, town);
        return localVarResp.getData();
    }

    /**
     * 
     * This extended API will return the branch details for all branches in the specified town. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param country The ISO country code e.g. &amp;quot;GB&amp;quot; (required)
     * @param town Town name, not case sensitive (required)
     * @return ApiResponse&lt;BranchDefinitionMeta&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BranchDefinitionMeta> xOpenBankingV22BranchesCountryCountryTownTownGetWithHttpInfo(String country, String town) throws ApiException {
        okhttp3.Call localVarCall = xOpenBankingV22BranchesCountryCountryTownTownGetValidateBeforeCall(country, town, null);
        Type localVarReturnType = new TypeToken<BranchDefinitionMeta>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This extended API will return the branch details for all branches in the specified town. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param country The ISO country code e.g. &amp;quot;GB&amp;quot; (required)
     * @param town Town name, not case sensitive (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call xOpenBankingV22BranchesCountryCountryTownTownGetAsync(String country, String town, final ApiCallback<BranchDefinitionMeta> _callback) throws ApiException {

        okhttp3.Call localVarCall = xOpenBankingV22BranchesCountryCountryTownTownGetValidateBeforeCall(country, town, _callback);
        Type localVarReturnType = new TypeToken<BranchDefinitionMeta>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGet
     * @param latitude Positive or negative decimal value in degrees. eg &amp;quot;51.50551621597067&amp;quot; (required)
     * @param longitude Positive or negative decimal value in degrees. eg &amp;quot;-0.0180120225995&amp;quot; (required)
     * @param radius Number of miles (1 to 10) as an integer. Default &#x3D; 1 (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGetCall(String latitude, String longitude, BigDecimal radius, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/x-open-banking/v2.2/branches/geo-location/lat/{latitude}/long/{longitude}"
            .replace("{" + "latitude" + "}", localVarApiClient.escapeString(latitude.toString()))
            .replace("{" + "longitude" + "}", localVarApiClient.escapeString(longitude.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (radius != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("radius", radius));
        }

        final String[] localVarAccepts = {
            "application/prs.openbanking.opendata.v2.2+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGetValidateBeforeCall(String latitude, String longitude, BigDecimal radius, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'latitude' is set
        if (latitude == null) {
            throw new ApiException("Missing the required parameter 'latitude' when calling xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGet(Async)");
        }

        // verify the required parameter 'longitude' is set
        if (longitude == null) {
            throw new ApiException("Missing the required parameter 'longitude' when calling xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGet(Async)");
        }

        // verify the required parameter 'radius' is set
        if (radius == null) {
            throw new ApiException("Missing the required parameter 'radius' when calling xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGet(Async)");
        }

        return xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGetCall(latitude, longitude, radius, _callback);

    }

    /**
     * 
     * This API will return the branch details for all branches within a specified radius (1 to 10 miles) of the specified latitude and longitude. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param latitude Positive or negative decimal value in degrees. eg &amp;quot;51.50551621597067&amp;quot; (required)
     * @param longitude Positive or negative decimal value in degrees. eg &amp;quot;-0.0180120225995&amp;quot; (required)
     * @param radius Number of miles (1 to 10) as an integer. Default &#x3D; 1 (required)
     * @return BranchDefinitionMeta
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public BranchDefinitionMeta xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGet(String latitude, String longitude, BigDecimal radius) throws ApiException {
        ApiResponse<BranchDefinitionMeta> localVarResp = xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGetWithHttpInfo(latitude, longitude, radius);
        return localVarResp.getData();
    }

    /**
     * 
     * This API will return the branch details for all branches within a specified radius (1 to 10 miles) of the specified latitude and longitude. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param latitude Positive or negative decimal value in degrees. eg &amp;quot;51.50551621597067&amp;quot; (required)
     * @param longitude Positive or negative decimal value in degrees. eg &amp;quot;-0.0180120225995&amp;quot; (required)
     * @param radius Number of miles (1 to 10) as an integer. Default &#x3D; 1 (required)
     * @return ApiResponse&lt;BranchDefinitionMeta&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BranchDefinitionMeta> xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGetWithHttpInfo(String latitude, String longitude, BigDecimal radius) throws ApiException {
        okhttp3.Call localVarCall = xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGetValidateBeforeCall(latitude, longitude, radius, null);
        Type localVarReturnType = new TypeToken<BranchDefinitionMeta>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This API will return the branch details for all branches within a specified radius (1 to 10 miles) of the specified latitude and longitude. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param latitude Positive or negative decimal value in degrees. eg &amp;quot;51.50551621597067&amp;quot; (required)
     * @param longitude Positive or negative decimal value in degrees. eg &amp;quot;-0.0180120225995&amp;quot; (required)
     * @param radius Number of miles (1 to 10) as an integer. Default &#x3D; 1 (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGetAsync(String latitude, String longitude, BigDecimal radius, final ApiCallback<BranchDefinitionMeta> _callback) throws ApiException {

        okhttp3.Call localVarCall = xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGetValidateBeforeCall(latitude, longitude, radius, _callback);
        Type localVarReturnType = new TypeToken<BranchDefinitionMeta>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for xOpenBankingV22BranchesPostcodePostcodeGet
     * @param postcode Letters and numerals only. No spaces or special characters. eg. &amp;quot;SW1A1AA&amp;quot; (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call xOpenBankingV22BranchesPostcodePostcodeGetCall(String postcode, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/x-open-banking/v2.2/branches/postcode/{postcode}"
            .replace("{" + "postcode" + "}", localVarApiClient.escapeString(postcode.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/prs.openbanking.opendata.v2.2+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call xOpenBankingV22BranchesPostcodePostcodeGetValidateBeforeCall(String postcode, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'postcode' is set
        if (postcode == null) {
            throw new ApiException("Missing the required parameter 'postcode' when calling xOpenBankingV22BranchesPostcodePostcodeGet(Async)");
        }

        return xOpenBankingV22BranchesPostcodePostcodeGetCall(postcode, _callback);

    }

    /**
     * 
     * This extended API will return the branch details for all branches within a 5 mile radius of the specified postcode. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param postcode Letters and numerals only. No spaces or special characters. eg. &amp;quot;SW1A1AA&amp;quot; (required)
     * @return BranchDefinitionMeta
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public BranchDefinitionMeta xOpenBankingV22BranchesPostcodePostcodeGet(String postcode) throws ApiException {
        ApiResponse<BranchDefinitionMeta> localVarResp = xOpenBankingV22BranchesPostcodePostcodeGetWithHttpInfo(postcode);
        return localVarResp.getData();
    }

    /**
     * 
     * This extended API will return the branch details for all branches within a 5 mile radius of the specified postcode. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param postcode Letters and numerals only. No spaces or special characters. eg. &amp;quot;SW1A1AA&amp;quot; (required)
     * @return ApiResponse&lt;BranchDefinitionMeta&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BranchDefinitionMeta> xOpenBankingV22BranchesPostcodePostcodeGetWithHttpInfo(String postcode) throws ApiException {
        okhttp3.Call localVarCall = xOpenBankingV22BranchesPostcodePostcodeGetValidateBeforeCall(postcode, null);
        Type localVarReturnType = new TypeToken<BranchDefinitionMeta>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This extended API will return the branch details for all branches within a 5 mile radius of the specified postcode. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param postcode Letters and numerals only. No spaces or special characters. eg. &amp;quot;SW1A1AA&amp;quot; (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call xOpenBankingV22BranchesPostcodePostcodeGetAsync(String postcode, final ApiCallback<BranchDefinitionMeta> _callback) throws ApiException {

        okhttp3.Call localVarCall = xOpenBankingV22BranchesPostcodePostcodeGetValidateBeforeCall(postcode, _callback);
        Type localVarReturnType = new TypeToken<BranchDefinitionMeta>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for xOpenBankingV22BranchesSortcodeSortcodeGet
     * @param sortcode 6 digit number with no spaces or special characters. eg. &amp;quot;400003&amp;quot; (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call xOpenBankingV22BranchesSortcodeSortcodeGetCall(String sortcode, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/x-open-banking/v2.2/branches/sortcode/{sortcode}"
            .replace("{" + "sortcode" + "}", localVarApiClient.escapeString(sortcode.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/prs.openbanking.opendata.v2.2+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call xOpenBankingV22BranchesSortcodeSortcodeGetValidateBeforeCall(String sortcode, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'sortcode' is set
        if (sortcode == null) {
            throw new ApiException("Missing the required parameter 'sortcode' when calling xOpenBankingV22BranchesSortcodeSortcodeGet(Async)");
        }

        return xOpenBankingV22BranchesSortcodeSortcodeGetCall(sortcode, _callback);

    }

    /**
     * 
     * This extended API will return the branch details for a branch specified by its sort code. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param sortcode 6 digit number with no spaces or special characters. eg. &amp;quot;400003&amp;quot; (required)
     * @return BranchDefinitionMeta
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public BranchDefinitionMeta xOpenBankingV22BranchesSortcodeSortcodeGet(String sortcode) throws ApiException {
        ApiResponse<BranchDefinitionMeta> localVarResp = xOpenBankingV22BranchesSortcodeSortcodeGetWithHttpInfo(sortcode);
        return localVarResp.getData();
    }

    /**
     * 
     * This extended API will return the branch details for a branch specified by its sort code. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param sortcode 6 digit number with no spaces or special characters. eg. &amp;quot;400003&amp;quot; (required)
     * @return ApiResponse&lt;BranchDefinitionMeta&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BranchDefinitionMeta> xOpenBankingV22BranchesSortcodeSortcodeGetWithHttpInfo(String sortcode) throws ApiException {
        okhttp3.Call localVarCall = xOpenBankingV22BranchesSortcodeSortcodeGetValidateBeforeCall(sortcode, null);
        Type localVarReturnType = new TypeToken<BranchDefinitionMeta>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This extended API will return the branch details for a branch specified by its sort code. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param sortcode 6 digit number with no spaces or special characters. eg. &amp;quot;400003&amp;quot; (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> System error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call xOpenBankingV22BranchesSortcodeSortcodeGetAsync(String sortcode, final ApiCallback<BranchDefinitionMeta> _callback) throws ApiException {

        okhttp3.Call localVarCall = xOpenBankingV22BranchesSortcodeSortcodeGetValidateBeforeCall(sortcode, _callback);
        Type localVarReturnType = new TypeToken<BranchDefinitionMeta>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
