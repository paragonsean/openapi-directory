/**
 * Branch Locator API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BranchDefinitionMeta from '../model/BranchDefinitionMeta';
import ErrorDefinition400 from '../model/ErrorDefinition400';
import ErrorDefinition408 from '../model/ErrorDefinition408';
import ErrorDefinition429 from '../model/ErrorDefinition429';
import ErrorDefinition500 from '../model/ErrorDefinition500';
import ErrorDefinition503 from '../model/ErrorDefinition503';

/**
* Branches service.
* @module api/BranchesApi
* @version 2.2.1
*/
export default class BranchesApi {

    /**
    * Constructs a new BranchesApi. 
    * @alias module:api/BranchesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the openBankingV22BranchesGet operation.
     * @callback module:api/BranchesApi~openBankingV22BranchesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BranchDefinitionMeta} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This API will return the branch details for all branches and is prepared to the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. It is regulated by the UK Competition and Markets Authority (CMA). Data is only available for the United Kingdom.
     * @param {module:api/BranchesApi~openBankingV22BranchesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BranchDefinitionMeta}
     */
    openBankingV22BranchesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/prs.openbanking.opendata.v2.2+json'];
      let returnType = BranchDefinitionMeta;
      return this.apiClient.callApi(
        '/open-banking/v2.2/branches', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the xOpenBankingV22BranchesCountryCountryGet operation.
     * @callback module:api/BranchesApi~xOpenBankingV22BranchesCountryCountryGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BranchDefinitionMeta} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This extended API will return the branch details for all branches in the specified country. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param {String} country The ISO country code e.g. &quot;GB&quot;
     * @param {module:api/BranchesApi~xOpenBankingV22BranchesCountryCountryGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BranchDefinitionMeta}
     */
    xOpenBankingV22BranchesCountryCountryGet(country, callback) {
      let postBody = null;
      // verify the required parameter 'country' is set
      if (country === undefined || country === null) {
        throw new Error("Missing the required parameter 'country' when calling xOpenBankingV22BranchesCountryCountryGet");
      }

      let pathParams = {
        'country': country
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/prs.openbanking.opendata.v2.2+json'];
      let returnType = BranchDefinitionMeta;
      return this.apiClient.callApi(
        '/x-open-banking/v2.2/branches/country/{country}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the xOpenBankingV22BranchesCountryCountryTownTownGet operation.
     * @callback module:api/BranchesApi~xOpenBankingV22BranchesCountryCountryTownTownGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BranchDefinitionMeta} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This extended API will return the branch details for all branches in the specified town. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param {String} country The ISO country code e.g. &quot;GB&quot;
     * @param {String} town Town name, not case sensitive
     * @param {module:api/BranchesApi~xOpenBankingV22BranchesCountryCountryTownTownGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BranchDefinitionMeta}
     */
    xOpenBankingV22BranchesCountryCountryTownTownGet(country, town, callback) {
      let postBody = null;
      // verify the required parameter 'country' is set
      if (country === undefined || country === null) {
        throw new Error("Missing the required parameter 'country' when calling xOpenBankingV22BranchesCountryCountryTownTownGet");
      }
      // verify the required parameter 'town' is set
      if (town === undefined || town === null) {
        throw new Error("Missing the required parameter 'town' when calling xOpenBankingV22BranchesCountryCountryTownTownGet");
      }

      let pathParams = {
        'country': country,
        'town': town
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/prs.openbanking.opendata.v2.2+json'];
      let returnType = BranchDefinitionMeta;
      return this.apiClient.callApi(
        '/x-open-banking/v2.2/branches/country/{country}/town/{town}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGet operation.
     * @callback module:api/BranchesApi~xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BranchDefinitionMeta} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This API will return the branch details for all branches within a specified radius (1 to 10 miles) of the specified latitude and longitude. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param {String} latitude Positive or negative decimal value in degrees. eg &quot;51.50551621597067&quot;
     * @param {String} longitude Positive or negative decimal value in degrees. eg &quot;-0.0180120225995&quot;
     * @param {Number} radius Number of miles (1 to 10) as an integer. Default = 1
     * @param {module:api/BranchesApi~xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BranchDefinitionMeta}
     */
    xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGet(latitude, longitude, radius, callback) {
      let postBody = null;
      // verify the required parameter 'latitude' is set
      if (latitude === undefined || latitude === null) {
        throw new Error("Missing the required parameter 'latitude' when calling xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGet");
      }
      // verify the required parameter 'longitude' is set
      if (longitude === undefined || longitude === null) {
        throw new Error("Missing the required parameter 'longitude' when calling xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGet");
      }
      // verify the required parameter 'radius' is set
      if (radius === undefined || radius === null) {
        throw new Error("Missing the required parameter 'radius' when calling xOpenBankingV22BranchesGeoLocationLatLatitudeLongLongitudeGet");
      }

      let pathParams = {
        'latitude': latitude,
        'longitude': longitude
      };
      let queryParams = {
        'radius': radius
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/prs.openbanking.opendata.v2.2+json'];
      let returnType = BranchDefinitionMeta;
      return this.apiClient.callApi(
        '/x-open-banking/v2.2/branches/geo-location/lat/{latitude}/long/{longitude}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the xOpenBankingV22BranchesPostcodePostcodeGet operation.
     * @callback module:api/BranchesApi~xOpenBankingV22BranchesPostcodePostcodeGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BranchDefinitionMeta} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This extended API will return the branch details for all branches within a 5 mile radius of the specified postcode. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param {String} postcode Letters and numerals only. No spaces or special characters. eg. &quot;SW1A1AA&quot;
     * @param {module:api/BranchesApi~xOpenBankingV22BranchesPostcodePostcodeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BranchDefinitionMeta}
     */
    xOpenBankingV22BranchesPostcodePostcodeGet(postcode, callback) {
      let postBody = null;
      // verify the required parameter 'postcode' is set
      if (postcode === undefined || postcode === null) {
        throw new Error("Missing the required parameter 'postcode' when calling xOpenBankingV22BranchesPostcodePostcodeGet");
      }

      let pathParams = {
        'postcode': postcode
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/prs.openbanking.opendata.v2.2+json'];
      let returnType = BranchDefinitionMeta;
      return this.apiClient.callApi(
        '/x-open-banking/v2.2/branches/postcode/{postcode}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the xOpenBankingV22BranchesSortcodeSortcodeGet operation.
     * @callback module:api/BranchesApi~xOpenBankingV22BranchesSortcodeSortcodeGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BranchDefinitionMeta} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This extended API will return the branch details for a branch specified by its sort code. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is only available for the United Kingdom.
     * @param {String} sortcode 6 digit number with no spaces or special characters. eg. &quot;400003&quot;
     * @param {module:api/BranchesApi~xOpenBankingV22BranchesSortcodeSortcodeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BranchDefinitionMeta}
     */
    xOpenBankingV22BranchesSortcodeSortcodeGet(sortcode, callback) {
      let postBody = null;
      // verify the required parameter 'sortcode' is set
      if (sortcode === undefined || sortcode === null) {
        throw new Error("Missing the required parameter 'sortcode' when calling xOpenBankingV22BranchesSortcodeSortcodeGet");
      }

      let pathParams = {
        'sortcode': sortcode
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/prs.openbanking.opendata.v2.2+json'];
      let returnType = BranchDefinitionMeta;
      return this.apiClient.callApi(
        '/x-open-banking/v2.2/branches/sortcode/{sortcode}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
