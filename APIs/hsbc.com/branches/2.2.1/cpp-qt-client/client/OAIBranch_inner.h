/**
 * Branch Locator API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBranch_inner.h
 *
 * Information that locates and identifies a specific branch of a financial institution.
 */

#ifndef OAIBranch_inner_H
#define OAIBranch_inner_H

#include <QJsonObject>

#include "OAIContactInfo_inner.h"
#include "OAIObject.h"
#include "OAIOtherAccessibility_inner.h"
#include "OAIOtherCustomerSegment_inner.h"
#include "OAIOtherServiceAndFacility_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContactInfo_inner;
class OAIOtherAccessibility_inner;
class OAIOtherCustomerSegment_inner;
class OAIOtherServiceAndFacility_inner;

class OAIBranch_inner : public OAIObject {
public:
    OAIBranch_inner();
    OAIBranch_inner(QString json);
    ~OAIBranch_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAccessibility() const;
    void setAccessibility(const QList<QString> &accessibility);
    bool is_accessibility_Set() const;
    bool is_accessibility_Valid() const;

    OAIObject getAvailability() const;
    void setAvailability(const OAIObject &availability);
    bool is_availability_Set() const;
    bool is_availability_Valid() const;

    QList<OAIContactInfo_inner> getContactInfo() const;
    void setContactInfo(const QList<OAIContactInfo_inner> &contact_info);
    bool is_contact_info_Set() const;
    bool is_contact_info_Valid() const;

    QList<QString> getCustomerSegment() const;
    void setCustomerSegment(const QList<QString> &customer_segment);
    bool is_customer_segment_Set() const;
    bool is_customer_segment_Valid() const;

    QString getIdentification() const;
    void setIdentification(const QString &identification);
    bool is_identification_Set() const;
    bool is_identification_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QList<OAIOtherAccessibility_inner> getOtherAccessibility() const;
    void setOtherAccessibility(const QList<OAIOtherAccessibility_inner> &other_accessibility);
    bool is_other_accessibility_Set() const;
    bool is_other_accessibility_Valid() const;

    QList<OAIOtherCustomerSegment_inner> getOtherCustomerSegment() const;
    void setOtherCustomerSegment(const QList<OAIOtherCustomerSegment_inner> &other_customer_segment);
    bool is_other_customer_segment_Set() const;
    bool is_other_customer_segment_Valid() const;

    QList<OAIOtherServiceAndFacility_inner> getOtherServiceAndFacility() const;
    void setOtherServiceAndFacility(const QList<OAIOtherServiceAndFacility_inner> &other_service_and_facility);
    bool is_other_service_and_facility_Set() const;
    bool is_other_service_and_facility_Valid() const;

    QString getPhoto() const;
    void setPhoto(const QString &photo);
    bool is_photo_Set() const;
    bool is_photo_Valid() const;

    OAIObject getPostalAddress() const;
    void setPostalAddress(const OAIObject &postal_address);
    bool is_postal_address_Set() const;
    bool is_postal_address_Valid() const;

    QString getSequenceNumber() const;
    void setSequenceNumber(const QString &sequence_number);
    bool is_sequence_number_Set() const;
    bool is_sequence_number_Valid() const;

    QList<QString> getServiceAndFacility() const;
    void setServiceAndFacility(const QList<QString> &service_and_facility);
    bool is_service_and_facility_Set() const;
    bool is_service_and_facility_Valid() const;

    QList<QString> getSortCode() const;
    void setSortCode(const QList<QString> &sort_code);
    bool is_sort_code_Set() const;
    bool is_sort_code_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_accessibility;
    bool m_accessibility_isSet;
    bool m_accessibility_isValid;

    OAIObject m_availability;
    bool m_availability_isSet;
    bool m_availability_isValid;

    QList<OAIContactInfo_inner> m_contact_info;
    bool m_contact_info_isSet;
    bool m_contact_info_isValid;

    QList<QString> m_customer_segment;
    bool m_customer_segment_isSet;
    bool m_customer_segment_isValid;

    QString m_identification;
    bool m_identification_isSet;
    bool m_identification_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QList<OAIOtherAccessibility_inner> m_other_accessibility;
    bool m_other_accessibility_isSet;
    bool m_other_accessibility_isValid;

    QList<OAIOtherCustomerSegment_inner> m_other_customer_segment;
    bool m_other_customer_segment_isSet;
    bool m_other_customer_segment_isValid;

    QList<OAIOtherServiceAndFacility_inner> m_other_service_and_facility;
    bool m_other_service_and_facility_isSet;
    bool m_other_service_and_facility_isValid;

    QString m_photo;
    bool m_photo_isSet;
    bool m_photo_isValid;

    OAIObject m_postal_address;
    bool m_postal_address_isSet;
    bool m_postal_address_isValid;

    QString m_sequence_number;
    bool m_sequence_number_isSet;
    bool m_sequence_number_isValid;

    QList<QString> m_service_and_facility;
    bool m_service_and_facility_isSet;
    bool m_service_and_facility_isValid;

    QList<QString> m_sort_code;
    bool m_sort_code_isSet;
    bool m_sort_code_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBranch_inner)

#endif // OAIBranch_inner_H
