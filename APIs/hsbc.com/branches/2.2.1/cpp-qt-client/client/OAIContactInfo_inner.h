/**
 * Branch Locator API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContactInfo_inner.h
 *
 * Communication device number or electronic address used for communication.
 */

#ifndef OAIContactInfo_inner_H
#define OAIContactInfo_inner_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContactInfo_inner : public OAIObject {
public:
    OAIContactInfo_inner();
    OAIContactInfo_inner(QString json);
    ~OAIContactInfo_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContactContent() const;
    void setContactContent(const QString &contact_content);
    bool is_contact_content_Set() const;
    bool is_contact_content_Valid() const;

    QString getContactDescription() const;
    void setContactDescription(const QString &contact_description);
    bool is_contact_description_Set() const;
    bool is_contact_description_Valid() const;

    QString getContactType() const;
    void setContactType(const QString &contact_type);
    bool is_contact_type_Set() const;
    bool is_contact_type_Valid() const;

    OAIObject getOtherContactType() const;
    void setOtherContactType(const OAIObject &other_contact_type);
    bool is_other_contact_type_Set() const;
    bool is_other_contact_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_contact_content;
    bool m_contact_content_isSet;
    bool m_contact_content_isValid;

    QString m_contact_description;
    bool m_contact_description_isSet;
    bool m_contact_description_isValid;

    QString m_contact_type;
    bool m_contact_type_isSet;
    bool m_contact_type_isValid;

    OAIObject m_other_contact_type;
    bool m_other_contact_type_isSet;
    bool m_other_contact_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContactInfo_inner)

#endif // OAIContactInfo_inner_H
