/**
 * Branch Locator API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBrand_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBrand_inner::OAIBrand_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBrand_inner::OAIBrand_inner() {
    this->initializeModel();
}

OAIBrand_inner::~OAIBrand_inner() {}

void OAIBrand_inner::initializeModel() {

    m_branch_isSet = false;
    m_branch_isValid = false;

    m_brand_name_isSet = false;
    m_brand_name_isValid = false;
}

void OAIBrand_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBrand_inner::fromJsonObject(QJsonObject json) {

    m_branch_isValid = ::OpenAPI::fromJsonValue(m_branch, json[QString("Branch")]);
    m_branch_isSet = !json[QString("Branch")].isNull() && m_branch_isValid;

    m_brand_name_isValid = ::OpenAPI::fromJsonValue(m_brand_name, json[QString("BrandName")]);
    m_brand_name_isSet = !json[QString("BrandName")].isNull() && m_brand_name_isValid;
}

QString OAIBrand_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBrand_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_branch.size() > 0) {
        obj.insert(QString("Branch"), ::OpenAPI::toJsonValue(m_branch));
    }
    if (m_brand_name_isSet) {
        obj.insert(QString("BrandName"), ::OpenAPI::toJsonValue(m_brand_name));
    }
    return obj;
}

QList<OAIBranch_inner> OAIBrand_inner::getBranch() const {
    return m_branch;
}
void OAIBrand_inner::setBranch(const QList<OAIBranch_inner> &branch) {
    m_branch = branch;
    m_branch_isSet = true;
}

bool OAIBrand_inner::is_branch_Set() const{
    return m_branch_isSet;
}

bool OAIBrand_inner::is_branch_Valid() const{
    return m_branch_isValid;
}

QString OAIBrand_inner::getBrandName() const {
    return m_brand_name;
}
void OAIBrand_inner::setBrandName(const QString &brand_name) {
    m_brand_name = brand_name;
    m_brand_name_isSet = true;
}

bool OAIBrand_inner::is_brand_name_Set() const{
    return m_brand_name_isSet;
}

bool OAIBrand_inner::is_brand_name_Valid() const{
    return m_brand_name_isValid;
}

bool OAIBrand_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_branch.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_brand_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBrand_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_branch_isValid && m_brand_name_isValid && true;
}

} // namespace OpenAPI
