# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RepaymentHolidayInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_holiday_length: float=None, max_holiday_period: str=None, notes: List[str]=None):
        """RepaymentHolidayInner - a model defined in OpenAPI

        :param max_holiday_length: The max_holiday_length of this RepaymentHolidayInner.
        :param max_holiday_period: The max_holiday_period of this RepaymentHolidayInner.
        :param notes: The notes of this RepaymentHolidayInner.
        """
        self.openapi_types = {
            'max_holiday_length': float,
            'max_holiday_period': str,
            'notes': List[str]
        }

        self.attribute_map = {
            'max_holiday_length': 'MaxHolidayLength',
            'max_holiday_period': 'MaxHolidayPeriod',
            'notes': 'Notes'
        }

        self._max_holiday_length = max_holiday_length
        self._max_holiday_period = max_holiday_period
        self._notes = notes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RepaymentHolidayInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RepaymentHoliday_inner of this RepaymentHolidayInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_holiday_length(self):
        """Gets the max_holiday_length of this RepaymentHolidayInner.

        The maximum length/duration of a Repayment Holiday

        :return: The max_holiday_length of this RepaymentHolidayInner.
        :rtype: float
        """
        return self._max_holiday_length

    @max_holiday_length.setter
    def max_holiday_length(self, max_holiday_length):
        """Sets the max_holiday_length of this RepaymentHolidayInner.

        The maximum length/duration of a Repayment Holiday

        :param max_holiday_length: The max_holiday_length of this RepaymentHolidayInner.
        :type max_holiday_length: float
        """

        self._max_holiday_length = max_holiday_length

    @property
    def max_holiday_period(self):
        """Gets the max_holiday_period of this RepaymentHolidayInner.

        The unit of period (days, weeks, months etc.) of the repayment holiday

        :return: The max_holiday_period of this RepaymentHolidayInner.
        :rtype: str
        """
        return self._max_holiday_period

    @max_holiday_period.setter
    def max_holiday_period(self, max_holiday_period):
        """Sets the max_holiday_period of this RepaymentHolidayInner.

        The unit of period (days, weeks, months etc.) of the repayment holiday

        :param max_holiday_period: The max_holiday_period of this RepaymentHolidayInner.
        :type max_holiday_period: str
        """
        allowed_values = ["Day", "Half Year", "Month", "Quarter", "Week", "Year"]  # noqa: E501
        if max_holiday_period not in allowed_values:
            raise ValueError(
                "Invalid value for `max_holiday_period` ({0}), must be one of {1}"
                .format(max_holiday_period, allowed_values)
            )

        self._max_holiday_period = max_holiday_period

    @property
    def notes(self):
        """Gets the notes of this RepaymentHolidayInner.

        Free text for adding details for repayment holiday

        :return: The notes of this RepaymentHolidayInner.
        :rtype: List[str]
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this RepaymentHolidayInner.

        Free text for adding details for repayment holiday

        :param notes: The notes of this RepaymentHolidayInner.
        :type notes: List[str]
        """

        self._notes = notes
