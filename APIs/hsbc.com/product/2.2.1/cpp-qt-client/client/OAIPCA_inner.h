/**
 * Product Finder API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPCA_inner.h
 *
 * PCA&#39; means a personal current account. That is an account marketed to individuals rather than businesses, which provides the facility to place funds, withdraw cash, hold deposits and to execute payment transaction to and from third parties but does not include any of the following types of accounts:  (a) an account in which money is held on deposit in a currency other than sterling;  (b) current account mortgage, ie a single account comprising both a personal current account and a mortgage, which is regulated and marketed principally as a mortgage;   (c) savings accounts (including instant access savings accounts);   (d) credit card accounts where funds are usually paid in for the sole purpose of repaying a credit card debt; and  (e) e-money accounts.
 */

#ifndef OAIPCA_inner_H
#define OAIPCA_inner_H

#include <QJsonObject>

#include "OAIPCAMarketingState_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPCAMarketingState_inner;

class OAIPCA_inner : public OAIObject {
public:
    OAIPCA_inner();
    OAIPCA_inner(QString json);
    ~OAIPCA_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIdentification() const;
    void setIdentification(const QString &identification);
    bool is_identification_Set() const;
    bool is_identification_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getNotes() const;
    void setNotes(const QList<QString> &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    bool isOnSaleIndicator() const;
    void setOnSaleIndicator(const bool &on_sale_indicator);
    bool is_on_sale_indicator_Set() const;
    bool is_on_sale_indicator_Valid() const;

    QList<OAIPCAMarketingState_inner> getPcaMarketingState() const;
    void setPcaMarketingState(const QList<OAIPCAMarketingState_inner> &pca_marketing_state);
    bool is_pca_marketing_state_Set() const;
    bool is_pca_marketing_state_Valid() const;

    QList<QString> getSegment() const;
    void setSegment(const QList<QString> &segment);
    bool is_segment_Set() const;
    bool is_segment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_identification;
    bool m_identification_isSet;
    bool m_identification_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    bool m_on_sale_indicator;
    bool m_on_sale_indicator_isSet;
    bool m_on_sale_indicator_isValid;

    QList<OAIPCAMarketingState_inner> m_pca_marketing_state;
    bool m_pca_marketing_state_isSet;
    bool m_pca_marketing_state_isValid;

    QList<QString> m_segment;
    bool m_segment_isSet;
    bool m_segment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPCA_inner)

#endif // OAIPCA_inner_H
