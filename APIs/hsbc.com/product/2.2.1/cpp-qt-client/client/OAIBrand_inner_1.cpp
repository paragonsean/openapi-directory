/**
 * Product Finder API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBrand_inner_1.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBrand_inner_1::OAIBrand_inner_1(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBrand_inner_1::OAIBrand_inner_1() {
    this->initializeModel();
}

OAIBrand_inner_1::~OAIBrand_inner_1() {}

void OAIBrand_inner_1::initializeModel() {

    m_brand_name_isSet = false;
    m_brand_name_isValid = false;

    m_ccc_isSet = false;
    m_ccc_isValid = false;
}

void OAIBrand_inner_1::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBrand_inner_1::fromJsonObject(QJsonObject json) {

    m_brand_name_isValid = ::OpenAPI::fromJsonValue(m_brand_name, json[QString("BrandName")]);
    m_brand_name_isSet = !json[QString("BrandName")].isNull() && m_brand_name_isValid;

    m_ccc_isValid = ::OpenAPI::fromJsonValue(m_ccc, json[QString("CCC")]);
    m_ccc_isSet = !json[QString("CCC")].isNull() && m_ccc_isValid;
}

QString OAIBrand_inner_1::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBrand_inner_1::asJsonObject() const {
    QJsonObject obj;
    if (m_brand_name_isSet) {
        obj.insert(QString("BrandName"), ::OpenAPI::toJsonValue(m_brand_name));
    }
    if (m_ccc.size() > 0) {
        obj.insert(QString("CCC"), ::OpenAPI::toJsonValue(m_ccc));
    }
    return obj;
}

QString OAIBrand_inner_1::getBrandName() const {
    return m_brand_name;
}
void OAIBrand_inner_1::setBrandName(const QString &brand_name) {
    m_brand_name = brand_name;
    m_brand_name_isSet = true;
}

bool OAIBrand_inner_1::is_brand_name_Set() const{
    return m_brand_name_isSet;
}

bool OAIBrand_inner_1::is_brand_name_Valid() const{
    return m_brand_name_isValid;
}

QList<OAICCC_inner> OAIBrand_inner_1::getCcc() const {
    return m_ccc;
}
void OAIBrand_inner_1::setCcc(const QList<OAICCC_inner> &ccc) {
    m_ccc = ccc;
    m_ccc_isSet = true;
}

bool OAIBrand_inner_1::is_ccc_Set() const{
    return m_ccc_isSet;
}

bool OAIBrand_inner_1::is_ccc_Valid() const{
    return m_ccc_isValid;
}

bool OAIBrand_inner_1::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_brand_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ccc.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBrand_inner_1::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_brand_name_isValid && m_ccc_isValid && true;
}

} // namespace OpenAPI
