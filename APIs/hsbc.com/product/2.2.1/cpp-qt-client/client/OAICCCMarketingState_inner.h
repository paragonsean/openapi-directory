/**
 * Product Finder API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICCCMarketingState_inner.h
 *
 * The marketing state (promotional or regular) of the CCC Product.
 */

#ifndef OAICCCMarketingState_inner_H
#define OAICCCMarketingState_inner_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDate>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICCCMarketingState_inner : public OAIObject {
public:
    OAICCCMarketingState_inner();
    OAICCCMarketingState_inner(QString json);
    ~OAICCCMarketingState_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getCoreProduct() const;
    void setCoreProduct(const OAIObject &core_product);
    bool is_core_product_Set() const;
    bool is_core_product_Valid() const;

    OAIObject getEligibility() const;
    void setEligibility(const OAIObject &eligibility);
    bool is_eligibility_Set() const;
    bool is_eligibility_Valid() const;

    OAIObject getFeaturesAndBenefits() const;
    void setFeaturesAndBenefits(const OAIObject &features_and_benefits);
    bool is_features_and_benefits_Set() const;
    bool is_features_and_benefits_Valid() const;

    QDate getFirstMarketedDate() const;
    void setFirstMarketedDate(const QDate &first_marketed_date);
    bool is_first_marketed_date_Set() const;
    bool is_first_marketed_date_Valid() const;

    QString getIdentification() const;
    void setIdentification(const QString &identification);
    bool is_identification_Set() const;
    bool is_identification_Valid() const;

    QDate getLastMarketedDate() const;
    void setLastMarketedDate(const QDate &last_marketed_date);
    bool is_last_marketed_date_Set() const;
    bool is_last_marketed_date_Valid() const;

    QString getMarketingState() const;
    void setMarketingState(const QString &marketing_state);
    bool is_marketing_state_Set() const;
    bool is_marketing_state_Valid() const;

    QList<QString> getNotes() const;
    void setNotes(const QList<QString> &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    OAIObject getOtherFeesCharges() const;
    void setOtherFeesCharges(const OAIObject &other_fees_charges);
    bool is_other_fees_charges_Set() const;
    bool is_other_fees_charges_Valid() const;

    QString getPredecessorId() const;
    void setPredecessorId(const QString &predecessor_id);
    bool is_predecessor_id_Set() const;
    bool is_predecessor_id_Valid() const;

    OAIObject getRepayment() const;
    void setRepayment(const OAIObject &repayment);
    bool is_repayment_Set() const;
    bool is_repayment_Valid() const;

    float getStateTenureLength() const;
    void setStateTenureLength(const float &state_tenure_length);
    bool is_state_tenure_length_Set() const;
    bool is_state_tenure_length_Valid() const;

    QString getStateTenurePeriod() const;
    void setStateTenurePeriod(const QString &state_tenure_period);
    bool is_state_tenure_period_Set() const;
    bool is_state_tenure_period_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_core_product;
    bool m_core_product_isSet;
    bool m_core_product_isValid;

    OAIObject m_eligibility;
    bool m_eligibility_isSet;
    bool m_eligibility_isValid;

    OAIObject m_features_and_benefits;
    bool m_features_and_benefits_isSet;
    bool m_features_and_benefits_isValid;

    QDate m_first_marketed_date;
    bool m_first_marketed_date_isSet;
    bool m_first_marketed_date_isValid;

    QString m_identification;
    bool m_identification_isSet;
    bool m_identification_isValid;

    QDate m_last_marketed_date;
    bool m_last_marketed_date_isSet;
    bool m_last_marketed_date_isValid;

    QString m_marketing_state;
    bool m_marketing_state_isSet;
    bool m_marketing_state_isValid;

    QList<QString> m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    OAIObject m_other_fees_charges;
    bool m_other_fees_charges_isSet;
    bool m_other_fees_charges_isValid;

    QString m_predecessor_id;
    bool m_predecessor_id_isSet;
    bool m_predecessor_id_isValid;

    OAIObject m_repayment;
    bool m_repayment_isSet;
    bool m_repayment_isValid;

    float m_state_tenure_length;
    bool m_state_tenure_length_isSet;
    bool m_state_tenure_length_isValid;

    QString m_state_tenure_period;
    bool m_state_tenure_period_isSet;
    bool m_state_tenure_period_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICCCMarketingState_inner)

#endif // OAICCCMarketingState_inner_H
