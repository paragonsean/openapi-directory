/**
 * Product Finder API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RepaymentInner from './RepaymentInner';

/**
 * The SMELoanMarketingStateInner model module.
 * @module model/SMELoanMarketingStateInner
 * @version 2.2.1
 */
class SMELoanMarketingStateInner {
    /**
     * Constructs a new <code>SMELoanMarketingStateInner</code>.
     * The marketing state (promotional or regular) of the SME Loan Product.
     * @alias module:model/SMELoanMarketingStateInner
     * @param coreProduct {Object} SME Loan core product details.
     * @param eligibility {Object} Eligibility details for this product i.e. the criteria that an business has to meet in order to be eligible for the SME Loan product.
     * @param featuresAndBenefits {Object} Feature And Benefits Details
     * @param identification {String} Unique and unambiguous identification of a  SME Loan Product Marketing State.
     * @param loanInterest {Object} Details about the interest that may be payable to the SME Loan
     * @param marketingState {module:model/SMELoanMarketingStateInner.MarketingStateEnum} Describes the marketing state (regular or promotional) of the SME Loan Product
     * @param repayment {Array.<module:model/RepaymentInner>} Repayment details of the Loan product
     */
    constructor(coreProduct, eligibility, featuresAndBenefits, identification, loanInterest, marketingState, repayment) { 
        
        SMELoanMarketingStateInner.initialize(this, coreProduct, eligibility, featuresAndBenefits, identification, loanInterest, marketingState, repayment);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, coreProduct, eligibility, featuresAndBenefits, identification, loanInterest, marketingState, repayment) { 
        obj['CoreProduct'] = coreProduct;
        obj['Eligibility'] = eligibility;
        obj['FeaturesAndBenefits'] = featuresAndBenefits;
        obj['Identification'] = identification;
        obj['LoanInterest'] = loanInterest;
        obj['MarketingState'] = marketingState;
        obj['Repayment'] = repayment;
    }

    /**
     * Constructs a <code>SMELoanMarketingStateInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SMELoanMarketingStateInner} obj Optional instance to populate.
     * @return {module:model/SMELoanMarketingStateInner} The populated <code>SMELoanMarketingStateInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SMELoanMarketingStateInner();

            if (data.hasOwnProperty('CoreProduct')) {
                obj['CoreProduct'] = ApiClient.convertToType(data['CoreProduct'], Object);
            }
            if (data.hasOwnProperty('Eligibility')) {
                obj['Eligibility'] = ApiClient.convertToType(data['Eligibility'], Object);
            }
            if (data.hasOwnProperty('FeaturesAndBenefits')) {
                obj['FeaturesAndBenefits'] = ApiClient.convertToType(data['FeaturesAndBenefits'], Object);
            }
            if (data.hasOwnProperty('FirstMarketedDate')) {
                obj['FirstMarketedDate'] = ApiClient.convertToType(data['FirstMarketedDate'], 'Date');
            }
            if (data.hasOwnProperty('Identification')) {
                obj['Identification'] = ApiClient.convertToType(data['Identification'], 'String');
            }
            if (data.hasOwnProperty('LastMarketedDate')) {
                obj['LastMarketedDate'] = ApiClient.convertToType(data['LastMarketedDate'], 'Date');
            }
            if (data.hasOwnProperty('LoanInterest')) {
                obj['LoanInterest'] = ApiClient.convertToType(data['LoanInterest'], Object);
            }
            if (data.hasOwnProperty('MarketingState')) {
                obj['MarketingState'] = ApiClient.convertToType(data['MarketingState'], 'String');
            }
            if (data.hasOwnProperty('Notes')) {
                obj['Notes'] = ApiClient.convertToType(data['Notes'], ['String']);
            }
            if (data.hasOwnProperty('OtherFeesCharges')) {
                obj['OtherFeesCharges'] = ApiClient.convertToType(data['OtherFeesCharges'], Object);
            }
            if (data.hasOwnProperty('PredecessorID')) {
                obj['PredecessorID'] = ApiClient.convertToType(data['PredecessorID'], 'String');
            }
            if (data.hasOwnProperty('Repayment')) {
                obj['Repayment'] = ApiClient.convertToType(data['Repayment'], [RepaymentInner]);
            }
            if (data.hasOwnProperty('StateTenureLength')) {
                obj['StateTenureLength'] = ApiClient.convertToType(data['StateTenureLength'], 'Number');
            }
            if (data.hasOwnProperty('StateTenurePeriod')) {
                obj['StateTenurePeriod'] = ApiClient.convertToType(data['StateTenurePeriod'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SMELoanMarketingStateInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SMELoanMarketingStateInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SMELoanMarketingStateInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Identification'] && !(typeof data['Identification'] === 'string' || data['Identification'] instanceof String)) {
            throw new Error("Expected the field `Identification` to be a primitive type in the JSON string but got " + data['Identification']);
        }
        // ensure the json data is a string
        if (data['MarketingState'] && !(typeof data['MarketingState'] === 'string' || data['MarketingState'] instanceof String)) {
            throw new Error("Expected the field `MarketingState` to be a primitive type in the JSON string but got " + data['MarketingState']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Notes'])) {
            throw new Error("Expected the field `Notes` to be an array in the JSON data but got " + data['Notes']);
        }
        // ensure the json data is a string
        if (data['PredecessorID'] && !(typeof data['PredecessorID'] === 'string' || data['PredecessorID'] instanceof String)) {
            throw new Error("Expected the field `PredecessorID` to be a primitive type in the JSON string but got " + data['PredecessorID']);
        }
        if (data['Repayment']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Repayment'])) {
                throw new Error("Expected the field `Repayment` to be an array in the JSON data but got " + data['Repayment']);
            }
            // validate the optional field `Repayment` (array)
            for (const item of data['Repayment']) {
                RepaymentInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['StateTenurePeriod'] && !(typeof data['StateTenurePeriod'] === 'string' || data['StateTenurePeriod'] instanceof String)) {
            throw new Error("Expected the field `StateTenurePeriod` to be a primitive type in the JSON string but got " + data['StateTenurePeriod']);
        }

        return true;
    }


}

SMELoanMarketingStateInner.RequiredProperties = ["CoreProduct", "Eligibility", "FeaturesAndBenefits", "Identification", "LoanInterest", "MarketingState", "Repayment"];

/**
 * SME Loan core product details.
 * @member {Object} CoreProduct
 */
SMELoanMarketingStateInner.prototype['CoreProduct'] = undefined;

/**
 * Eligibility details for this product i.e. the criteria that an business has to meet in order to be eligible for the SME Loan product.
 * @member {Object} Eligibility
 */
SMELoanMarketingStateInner.prototype['Eligibility'] = undefined;

/**
 * Feature And Benefits Details
 * @member {Object} FeaturesAndBenefits
 */
SMELoanMarketingStateInner.prototype['FeaturesAndBenefits'] = undefined;

/**
 * Marketing state start date
 * @member {Date} FirstMarketedDate
 */
SMELoanMarketingStateInner.prototype['FirstMarketedDate'] = undefined;

/**
 * Unique and unambiguous identification of a  SME Loan Product Marketing State.
 * @member {String} Identification
 */
SMELoanMarketingStateInner.prototype['Identification'] = undefined;

/**
 * Marketing state end date
 * @member {Date} LastMarketedDate
 */
SMELoanMarketingStateInner.prototype['LastMarketedDate'] = undefined;

/**
 * Details about the interest that may be payable to the SME Loan
 * @member {Object} LoanInterest
 */
SMELoanMarketingStateInner.prototype['LoanInterest'] = undefined;

/**
 * Describes the marketing state (regular or promotional) of the SME Loan Product
 * @member {module:model/SMELoanMarketingStateInner.MarketingStateEnum} MarketingState
 */
SMELoanMarketingStateInner.prototype['MarketingState'] = undefined;

/**
 * Free text for adding details for marketing state
 * @member {Array.<String>} Notes
 */
SMELoanMarketingStateInner.prototype['Notes'] = undefined;

/**
 * Contains details of fees and charges which are not associated with either loan interest or repayments
 * @member {Object} OtherFeesCharges
 */
SMELoanMarketingStateInner.prototype['OtherFeesCharges'] = undefined;

/**
 * Identifies the marketing state that precedes this marketing state
 * @member {String} PredecessorID
 */
SMELoanMarketingStateInner.prototype['PredecessorID'] = undefined;

/**
 * Repayment details of the Loan product
 * @member {Array.<module:model/RepaymentInner>} Repayment
 */
SMELoanMarketingStateInner.prototype['Repayment'] = undefined;

/**
 * The length/duration of a promotional state
 * @member {Number} StateTenureLength
 */
SMELoanMarketingStateInner.prototype['StateTenureLength'] = undefined;

/**
 * The unit of period (days, weeks, months etc.) of the promotional length
 * @member {module:model/SMELoanMarketingStateInner.StateTenurePeriodEnum} StateTenurePeriod
 */
SMELoanMarketingStateInner.prototype['StateTenurePeriod'] = undefined;





/**
 * Allowed values for the <code>MarketingState</code> property.
 * @enum {String}
 * @readonly
 */
SMELoanMarketingStateInner['MarketingStateEnum'] = {

    /**
     * value: "Promotional"
     * @const
     */
    "Promotional": "Promotional",

    /**
     * value: "Regular"
     * @const
     */
    "Regular": "Regular"
};


/**
 * Allowed values for the <code>StateTenurePeriod</code> property.
 * @enum {String}
 * @readonly
 */
SMELoanMarketingStateInner['StateTenurePeriodEnum'] = {

    /**
     * value: "Day"
     * @const
     */
    "Day": "Day",

    /**
     * value: "Half Year"
     * @const
     */
    "Half Year": "Half Year",

    /**
     * value: "Month"
     * @const
     */
    "Month": "Month",

    /**
     * value: "Quarter"
     * @const
     */
    "Quarter": "Quarter",

    /**
     * value: "Week"
     * @const
     */
    "Week": "Week",

    /**
     * value: "Year"
     * @const
     */
    "Year": "Year"
};



export default SMELoanMarketingStateInner;

