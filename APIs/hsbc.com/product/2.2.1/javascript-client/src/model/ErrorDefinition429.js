/**
 * Product Finder API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ErrorDefinition429 model module.
 * @module model/ErrorDefinition429
 * @version 2.2.1
 */
class ErrorDefinition429 {
    /**
     * Constructs a new <code>ErrorDefinition429</code>.
     * @alias module:model/ErrorDefinition429
     * @param description {module:model/ErrorDefinition429.DescriptionEnum} 
     * @param status {module:model/ErrorDefinition429.StatusEnum} 
     * @param title {module:model/ErrorDefinition429.TitleEnum} 
     */
    constructor(description, status, title) { 
        
        ErrorDefinition429.initialize(this, description, status, title);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, description, status, title) { 
        obj['description'] = description;
        obj['status'] = status;
        obj['title'] = title;
    }

    /**
     * Constructs a <code>ErrorDefinition429</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ErrorDefinition429} obj Optional instance to populate.
     * @return {module:model/ErrorDefinition429} The populated <code>ErrorDefinition429</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ErrorDefinition429();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ErrorDefinition429</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ErrorDefinition429</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ErrorDefinition429.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}

ErrorDefinition429.RequiredProperties = ["description", "status", "title"];

/**
 * @member {module:model/ErrorDefinition429.DescriptionEnum} description
 */
ErrorDefinition429.prototype['description'] = undefined;

/**
 * @member {module:model/ErrorDefinition429.StatusEnum} status
 */
ErrorDefinition429.prototype['status'] = undefined;

/**
 * @member {module:model/ErrorDefinition429.TitleEnum} title
 */
ErrorDefinition429.prototype['title'] = undefined;





/**
 * Allowed values for the <code>description</code> property.
 * @enum {String}
 * @readonly
 */
ErrorDefinition429['DescriptionEnum'] = {

    /**
     * value: "You have requested this resource too often. Slow down."
     * @const
     */
    "You have requested this resource too often. Slow down.": "You have requested this resource too often. Slow down."
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
ErrorDefinition429['StatusEnum'] = {

    /**
     * value: "429"
     * @const
     */
    "429": "429"
};


/**
 * Allowed values for the <code>title</code> property.
 * @enum {String}
 * @readonly
 */
ErrorDefinition429['TitleEnum'] = {

    /**
     * value: "Too many requests"
     * @const
     */
    "Too many requests": "Too many requests"
};



export default ErrorDefinition429;

