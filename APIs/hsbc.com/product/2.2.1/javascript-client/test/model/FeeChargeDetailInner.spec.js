/**
 * Product Finder API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProductFinderApi);
  }
}(this, function(expect, ProductFinderApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProductFinderApi.FeeChargeDetailInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FeeChargeDetailInner', function() {
    it('should create an instance of FeeChargeDetailInner', function() {
      // uncomment below and update the code to test FeeChargeDetailInner
      //var instance = new ProductFinderApi.FeeChargeDetailInner();
      //expect(instance).to.be.a(ProductFinderApi.FeeChargeDetailInner);
    });

    it('should have the property applicationFrequency (base name: "ApplicationFrequency")', function() {
      // uncomment below and update the code to test the property applicationFrequency
      //var instance = new ProductFinderApi.FeeChargeDetailInner();
      //expect(instance).to.be();
    });

    it('should have the property calculationFrequency (base name: "CalculationFrequency")', function() {
      // uncomment below and update the code to test the property calculationFrequency
      //var instance = new ProductFinderApi.FeeChargeDetailInner();
      //expect(instance).to.be();
    });

    it('should have the property feeAmount (base name: "FeeAmount")', function() {
      // uncomment below and update the code to test the property feeAmount
      //var instance = new ProductFinderApi.FeeChargeDetailInner();
      //expect(instance).to.be();
    });

    it('should have the property feeApplicableRange (base name: "FeeApplicableRange")', function() {
      // uncomment below and update the code to test the property feeApplicableRange
      //var instance = new ProductFinderApi.FeeChargeDetailInner();
      //expect(instance).to.be();
    });

    it('should have the property feeCategory (base name: "FeeCategory")', function() {
      // uncomment below and update the code to test the property feeCategory
      //var instance = new ProductFinderApi.FeeChargeDetailInner();
      //expect(instance).to.be();
    });

    it('should have the property feeRate (base name: "FeeRate")', function() {
      // uncomment below and update the code to test the property feeRate
      //var instance = new ProductFinderApi.FeeChargeDetailInner();
      //expect(instance).to.be();
    });

    it('should have the property feeRateType (base name: "FeeRateType")', function() {
      // uncomment below and update the code to test the property feeRateType
      //var instance = new ProductFinderApi.FeeChargeDetailInner();
      //expect(instance).to.be();
    });

    it('should have the property feeType (base name: "FeeType")', function() {
      // uncomment below and update the code to test the property feeType
      //var instance = new ProductFinderApi.FeeChargeDetailInner();
      //expect(instance).to.be();
    });

    it('should have the property includedInMonthlyChargeIndicator (base name: "IncludedInMonthlyChargeIndicator")', function() {
      // uncomment below and update the code to test the property includedInMonthlyChargeIndicator
      //var instance = new ProductFinderApi.FeeChargeDetailInner();
      //expect(instance).to.be();
    });

    it('should have the property negotiableIndicator (base name: "NegotiableIndicator")', function() {
      // uncomment below and update the code to test the property negotiableIndicator
      //var instance = new ProductFinderApi.FeeChargeDetailInner();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "Notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new ProductFinderApi.FeeChargeDetailInner();
      //expect(instance).to.be();
    });

    it('should have the property otherApplicationFrequency (base name: "OtherApplicationFrequency")', function() {
      // uncomment below and update the code to test the property otherApplicationFrequency
      //var instance = new ProductFinderApi.FeeChargeDetailInner();
      //expect(instance).to.be();
    });

    it('should have the property otherCalculationFrequency (base name: "OtherCalculationFrequency")', function() {
      // uncomment below and update the code to test the property otherCalculationFrequency
      //var instance = new ProductFinderApi.FeeChargeDetailInner();
      //expect(instance).to.be();
    });

    it('should have the property otherFeeCategory (base name: "OtherFeeCategory")', function() {
      // uncomment below and update the code to test the property otherFeeCategory
      //var instance = new ProductFinderApi.FeeChargeDetailInner();
      //expect(instance).to.be();
    });

    it('should have the property otherFeeRateType (base name: "OtherFeeRateType")', function() {
      // uncomment below and update the code to test the property otherFeeRateType
      //var instance = new ProductFinderApi.FeeChargeDetailInner();
      //expect(instance).to.be();
    });

    it('should have the property otherFeeType (base name: "OtherFeeType")', function() {
      // uncomment below and update the code to test the property otherFeeType
      //var instance = new ProductFinderApi.FeeChargeDetailInner();
      //expect(instance).to.be();
    });

  });

}));
