/**
 * Product Finder API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProductFinderApi);
  }
}(this, function(expect, ProductFinderApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProductFinderApi.BCAMarketingStateInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BCAMarketingStateInner', function() {
    it('should create an instance of BCAMarketingStateInner', function() {
      // uncomment below and update the code to test BCAMarketingStateInner
      //var instance = new ProductFinderApi.BCAMarketingStateInner();
      //expect(instance).to.be.a(ProductFinderApi.BCAMarketingStateInner);
    });

    it('should have the property coreProduct (base name: "CoreProduct")', function() {
      // uncomment below and update the code to test the property coreProduct
      //var instance = new ProductFinderApi.BCAMarketingStateInner();
      //expect(instance).to.be();
    });

    it('should have the property creditInterest (base name: "CreditInterest")', function() {
      // uncomment below and update the code to test the property creditInterest
      //var instance = new ProductFinderApi.BCAMarketingStateInner();
      //expect(instance).to.be();
    });

    it('should have the property eligibility (base name: "Eligibility")', function() {
      // uncomment below and update the code to test the property eligibility
      //var instance = new ProductFinderApi.BCAMarketingStateInner();
      //expect(instance).to.be();
    });

    it('should have the property featuresAndBenefits (base name: "FeaturesAndBenefits")', function() {
      // uncomment below and update the code to test the property featuresAndBenefits
      //var instance = new ProductFinderApi.BCAMarketingStateInner();
      //expect(instance).to.be();
    });

    it('should have the property firstMarketedDate (base name: "FirstMarketedDate")', function() {
      // uncomment below and update the code to test the property firstMarketedDate
      //var instance = new ProductFinderApi.BCAMarketingStateInner();
      //expect(instance).to.be();
    });

    it('should have the property identification (base name: "Identification")', function() {
      // uncomment below and update the code to test the property identification
      //var instance = new ProductFinderApi.BCAMarketingStateInner();
      //expect(instance).to.be();
    });

    it('should have the property lastMarketedDate (base name: "LastMarketedDate")', function() {
      // uncomment below and update the code to test the property lastMarketedDate
      //var instance = new ProductFinderApi.BCAMarketingStateInner();
      //expect(instance).to.be();
    });

    it('should have the property marketingState (base name: "MarketingState")', function() {
      // uncomment below and update the code to test the property marketingState
      //var instance = new ProductFinderApi.BCAMarketingStateInner();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "Notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new ProductFinderApi.BCAMarketingStateInner();
      //expect(instance).to.be();
    });

    it('should have the property otherFeesCharges (base name: "OtherFeesCharges")', function() {
      // uncomment below and update the code to test the property otherFeesCharges
      //var instance = new ProductFinderApi.BCAMarketingStateInner();
      //expect(instance).to.be();
    });

    it('should have the property overdraft (base name: "Overdraft")', function() {
      // uncomment below and update the code to test the property overdraft
      //var instance = new ProductFinderApi.BCAMarketingStateInner();
      //expect(instance).to.be();
    });

    it('should have the property predecessorID (base name: "PredecessorID")', function() {
      // uncomment below and update the code to test the property predecessorID
      //var instance = new ProductFinderApi.BCAMarketingStateInner();
      //expect(instance).to.be();
    });

    it('should have the property stateTenureLength (base name: "StateTenureLength")', function() {
      // uncomment below and update the code to test the property stateTenureLength
      //var instance = new ProductFinderApi.BCAMarketingStateInner();
      //expect(instance).to.be();
    });

    it('should have the property stateTenurePeriod (base name: "StateTenurePeriod")', function() {
      // uncomment below and update the code to test the property stateTenurePeriod
      //var instance = new ProductFinderApi.BCAMarketingStateInner();
      //expect(instance).to.be();
    });

  });

}));
