/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEmailEntity.h
 *
 * 
 */

#ifndef OAIEmailEntity_H
#define OAIEmailEntity_H

#include <QJsonObject>

#include "OAIRelation.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRelation;

class OAIEmailEntity : public OAIObject {
public:
    OAIEmailEntity();
    OAIEmailEntity(QString json);
    ~OAIEmailEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getBcc() const;
    void setBcc(const QList<QString> &bcc);
    bool is_bcc_Set() const;
    bool is_bcc_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QList<QString> getCc() const;
    void setCc(const QList<QString> &cc);
    bool is_cc_Set() const;
    bool is_cc_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDirection() const;
    void setDirection(const QString &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    QString getFrom() const;
    void setFrom(const QString &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIRelation getRelation() const;
    void setRelation(const OAIRelation &relation);
    bool is_relation_Set() const;
    bool is_relation_Valid() const;

    QDateTime getSentAt() const;
    void setSentAt(const QDateTime &sent_at);
    bool is_sent_at_Set() const;
    bool is_sent_at_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QList<QString> getTo() const;
    void setTo(const QList<QString> &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_bcc;
    bool m_bcc_isSet;
    bool m_bcc_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QList<QString> m_cc;
    bool m_cc_isSet;
    bool m_cc_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    QString m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIRelation m_relation;
    bool m_relation_isSet;
    bool m_relation_isValid;

    QDateTime m_sent_at;
    bool m_sent_at_isSet;
    bool m_sent_at_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QList<QString> m_to;
    bool m_to_isSet;
    bool m_to_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEmailEntity)

#endif // OAIEmailEntity_H
