/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOpportunityEntity.h
 *
 * 
 */

#ifndef OAIOpportunityEntity_H
#define OAIOpportunityEntity_H

#include <QJsonObject>

#include "OAICurrency.h"
#include "OAIRelation.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICurrency;
class OAIRelation;

class OAIOpportunityEntity : public OAIObject {
public:
    OAIOpportunityEntity();
    OAIOpportunityEntity(QString json);
    ~OAIOpportunityEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getAmount() const;
    void setAmount(const float &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAICurrency getCurrency() const;
    void setCurrency(const OAICurrency &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getEndedAt() const;
    void setEndedAt(const QDateTime &ended_at);
    bool is_ended_at_Set() const;
    bool is_ended_at_Valid() const;

    float getExpectedAmount() const;
    void setExpectedAmount(const float &expected_amount);
    bool is_expected_amount_Set() const;
    bool is_expected_amount_Valid() const;

    QDateTime getExpectedEndAt() const;
    void setExpectedEndAt(const QDateTime &expected_end_at);
    bool is_expected_end_at_Set() const;
    bool is_expected_end_at_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLeadSource() const;
    void setLeadSource(const QString &lead_source);
    bool is_lead_source_Set() const;
    bool is_lead_source_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNextStep() const;
    void setNextStep(const QString &next_step);
    bool is_next_step_Set() const;
    bool is_next_step_Valid() const;

    QString getPipelineWithStage() const;
    void setPipelineWithStage(const QString &pipeline_with_stage);
    bool is_pipeline_with_stage_Set() const;
    bool is_pipeline_with_stage_Valid() const;

    qint32 getProbability() const;
    void setProbability(const qint32 &probability);
    bool is_probability_Set() const;
    bool is_probability_Valid() const;

    OAIRelation getRelation() const;
    void setRelation(const OAIRelation &relation);
    bool is_relation_Set() const;
    bool is_relation_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAICurrency m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_ended_at;
    bool m_ended_at_isSet;
    bool m_ended_at_isValid;

    float m_expected_amount;
    bool m_expected_amount_isSet;
    bool m_expected_amount_isValid;

    QDateTime m_expected_end_at;
    bool m_expected_end_at_isSet;
    bool m_expected_end_at_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_lead_source;
    bool m_lead_source_isSet;
    bool m_lead_source_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_next_step;
    bool m_next_step_isSet;
    bool m_next_step_isValid;

    QString m_pipeline_with_stage;
    bool m_pipeline_with_stage_isSet;
    bool m_pipeline_with_stage_isValid;

    qint32 m_probability;
    bool m_probability_isSet;
    bool m_probability_isValid;

    OAIRelation m_relation;
    bool m_relation_isSet;
    bool m_relation_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOpportunityEntity)

#endif // OAIOpportunityEntity_H
