/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICasesEntity.h
 *
 * 
 */

#ifndef OAICasesEntity_H
#define OAICasesEntity_H

#include <QJsonObject>

#include "OAIRelation.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRelation;

class OAICasesEntity : public OAIObject {
public:
    OAICasesEntity();
    OAICasesEntity(QString json);
    ~OAICasesEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getEndedAt() const;
    void setEndedAt(const QDateTime &ended_at);
    bool is_ended_at_Set() const;
    bool is_ended_at_Valid() const;

    QDateTime getExpectedEndAt() const;
    void setExpectedEndAt(const QDateTime &expected_end_at);
    bool is_expected_end_at_Set() const;
    bool is_expected_end_at_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInternalComments() const;
    void setInternalComments(const QString &internal_comments);
    bool is_internal_comments_Set() const;
    bool is_internal_comments_Valid() const;

    bool isIsClosed() const;
    void setIsClosed(const bool &is_closed);
    bool is_is_closed_Set() const;
    bool is_is_closed_Valid() const;

    bool isIsEscalated() const;
    void setIsEscalated(const bool &is_escalated);
    bool is_is_escalated_Set() const;
    bool is_is_escalated_Valid() const;

    QString getNumber() const;
    void setNumber(const QString &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QString getOrigin() const;
    void setOrigin(const QString &origin);
    bool is_origin_Set() const;
    bool is_origin_Valid() const;

    QString getPipelineWithStage() const;
    void setPipelineWithStage(const QString &pipeline_with_stage);
    bool is_pipeline_with_stage_Set() const;
    bool is_pipeline_with_stage_Valid() const;

    QString getPriority() const;
    void setPriority(const QString &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    OAIRelation getRelation() const;
    void setRelation(const OAIRelation &relation);
    bool is_relation_Set() const;
    bool is_relation_Valid() const;

    QString getResolution() const;
    void setResolution(const QString &resolution);
    bool is_resolution_Set() const;
    bool is_resolution_Valid() const;

    QString getResolutionComments() const;
    void setResolutionComments(const QString &resolution_comments);
    bool is_resolution_comments_Set() const;
    bool is_resolution_comments_Valid() const;

    QString getSatisfaction() const;
    void setSatisfaction(const QString &satisfaction);
    bool is_satisfaction_Set() const;
    bool is_satisfaction_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_ended_at;
    bool m_ended_at_isSet;
    bool m_ended_at_isValid;

    QDateTime m_expected_end_at;
    bool m_expected_end_at_isSet;
    bool m_expected_end_at_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_internal_comments;
    bool m_internal_comments_isSet;
    bool m_internal_comments_isValid;

    bool m_is_closed;
    bool m_is_closed_isSet;
    bool m_is_closed_isValid;

    bool m_is_escalated;
    bool m_is_escalated_isSet;
    bool m_is_escalated_isValid;

    QString m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QString m_origin;
    bool m_origin_isSet;
    bool m_origin_isValid;

    QString m_pipeline_with_stage;
    bool m_pipeline_with_stage_isSet;
    bool m_pipeline_with_stage_isValid;

    QString m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    OAIRelation m_relation;
    bool m_relation_isSet;
    bool m_relation_isValid;

    QString m_resolution;
    bool m_resolution_isSet;
    bool m_resolution_isValid;

    QString m_resolution_comments;
    bool m_resolution_comments_isSet;
    bool m_resolution_comments_isValid;

    QString m_satisfaction;
    bool m_satisfaction_isSet;
    bool m_satisfaction_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICasesEntity)

#endif // OAICasesEntity_H
