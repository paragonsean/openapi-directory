/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFieldEntity.h
 *
 * 
 */

#ifndef OAIFieldEntity_H
#define OAIFieldEntity_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFieldEntity : public OAIObject {
public:
    OAIFieldEntity();
    OAIFieldEntity(QString json);
    ~OAIFieldEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArrayItem() const;
    void setArrayItem(const QString &array_item);
    bool is_array_item_Set() const;
    bool is_array_item_Valid() const;

    QList<QString> getEntity() const;
    void setEntity(const QList<QString> &entity);
    bool is_entity_Set() const;
    bool is_entity_Valid() const;

    QString getFormat() const;
    void setFormat(const QString &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsEnum() const;
    void setIsEnum(const bool &is_enum);
    bool is_is_enum_Set() const;
    bool is_is_enum_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    OAIObject getMethods() const;
    void setMethods(const OAIObject &methods);
    bool is_methods_Set() const;
    bool is_methods_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getRelation() const;
    void setRelation(const QList<QString> &relation);
    bool is_relation_Set() const;
    bool is_relation_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_array_item;
    bool m_array_item_isSet;
    bool m_array_item_isValid;

    QList<QString> m_entity;
    bool m_entity_isSet;
    bool m_entity_isValid;

    QString m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_enum;
    bool m_is_enum_isSet;
    bool m_is_enum_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    OAIObject m_methods;
    bool m_methods_isSet;
    bool m_methods_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_relation;
    bool m_relation_isSet;
    bool m_relation_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFieldEntity)

#endif // OAIFieldEntity_H
