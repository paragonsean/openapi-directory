/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICampaignEntity.h
 *
 * 
 */

#ifndef OAICampaignEntity_H
#define OAICampaignEntity_H

#include <QJsonObject>

#include "OAICurrency.h"
#include "OAIRelation.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICurrency;
class OAIRelation;

class OAICampaignEntity : public OAIObject {
public:
    OAICampaignEntity();
    OAICampaignEntity(QString json);
    ~OAICampaignEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getActualCost() const;
    void setActualCost(const float &actual_cost);
    bool is_actual_cost_Set() const;
    bool is_actual_cost_Valid() const;

    float getBudgetedCost() const;
    void setBudgetedCost(const float &budgeted_cost);
    bool is_budgeted_cost_Set() const;
    bool is_budgeted_cost_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAICurrency getCurrency() const;
    void setCurrency(const OAICurrency &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getEndedAt() const;
    void setEndedAt(const QDateTime &ended_at);
    bool is_ended_at_Set() const;
    bool is_ended_at_Valid() const;

    QDateTime getExpectedEndAt() const;
    void setExpectedEndAt(const QDateTime &expected_end_at);
    bool is_expected_end_at_Set() const;
    bool is_expected_end_at_Valid() const;

    float getExpectedResponse() const;
    void setExpectedResponse(const float &expected_response);
    bool is_expected_response_Set() const;
    bool is_expected_response_Valid() const;

    float getExpectedRevenue() const;
    void setExpectedRevenue(const float &expected_revenue);
    bool is_expected_revenue_Set() const;
    bool is_expected_revenue_Valid() const;

    QDateTime getExpectedStartAt() const;
    void setExpectedStartAt(const QDateTime &expected_start_at);
    bool is_expected_start_at_Set() const;
    bool is_expected_start_at_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getNumbersSent() const;
    void setNumbersSent(const qint32 &numbers_sent);
    bool is_numbers_sent_Set() const;
    bool is_numbers_sent_Valid() const;

    QString getObjective() const;
    void setObjective(const QString &objective);
    bool is_objective_Set() const;
    bool is_objective_Valid() const;

    OAIRelation getRelation() const;
    void setRelation(const OAIRelation &relation);
    bool is_relation_Set() const;
    bool is_relation_Valid() const;

    QDateTime getStartedAt() const;
    void setStartedAt(const QDateTime &started_at);
    bool is_started_at_Set() const;
    bool is_started_at_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_actual_cost;
    bool m_actual_cost_isSet;
    bool m_actual_cost_isValid;

    float m_budgeted_cost;
    bool m_budgeted_cost_isSet;
    bool m_budgeted_cost_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAICurrency m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_ended_at;
    bool m_ended_at_isSet;
    bool m_ended_at_isValid;

    QDateTime m_expected_end_at;
    bool m_expected_end_at_isSet;
    bool m_expected_end_at_isValid;

    float m_expected_response;
    bool m_expected_response_isSet;
    bool m_expected_response_isValid;

    float m_expected_revenue;
    bool m_expected_revenue_isSet;
    bool m_expected_revenue_isValid;

    QDateTime m_expected_start_at;
    bool m_expected_start_at_isSet;
    bool m_expected_start_at_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_numbers_sent;
    bool m_numbers_sent_isSet;
    bool m_numbers_sent_isValid;

    QString m_objective;
    bool m_objective_isSet;
    bool m_objective_isValid;

    OAIRelation m_relation;
    bool m_relation_isSet;
    bool m_relation_isValid;

    QDateTime m_started_at;
    bool m_started_at_isSet;
    bool m_started_at_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICampaignEntity)

#endif // OAICampaignEntity_H
