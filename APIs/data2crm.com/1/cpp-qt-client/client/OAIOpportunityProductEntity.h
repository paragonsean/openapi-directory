/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOpportunityProductEntity.h
 *
 * 
 */

#ifndef OAIOpportunityProductEntity_H
#define OAIOpportunityProductEntity_H

#include <QJsonObject>

#include "OAICurrency.h"
#include "OAIDiscount.h"
#include "OAIRelation.h"
#include "OAITax.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICurrency;
class OAIDiscount;
class OAIRelation;
class OAITax;

class OAIOpportunityProductEntity : public OAIObject {
public:
    OAIOpportunityProductEntity();
    OAIOpportunityProductEntity(QString json);
    ~OAIOpportunityProductEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAICurrency getCurrency() const;
    void setCurrency(const OAICurrency &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIDiscount> getDiscount() const;
    void setDiscount(const QList<OAIDiscount> &discount);
    bool is_discount_Set() const;
    bool is_discount_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    float getListPrice() const;
    void setListPrice(const float &list_price);
    bool is_list_price_Set() const;
    bool is_list_price_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNumber() const;
    void setNumber(const QString &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    float getQuantity() const;
    void setQuantity(const float &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    OAIRelation getRelation() const;
    void setRelation(const OAIRelation &relation);
    bool is_relation_Set() const;
    bool is_relation_Valid() const;

    float getSalesPrice() const;
    void setSalesPrice(const float &sales_price);
    bool is_sales_price_Set() const;
    bool is_sales_price_Valid() const;

    float getSubtotal() const;
    void setSubtotal(const float &subtotal);
    bool is_subtotal_Set() const;
    bool is_subtotal_Valid() const;

    QList<OAITax> getTax() const;
    void setTax(const QList<OAITax> &tax);
    bool is_tax_Set() const;
    bool is_tax_Valid() const;

    float getTotalPrice() const;
    void setTotalPrice(const float &total_price);
    bool is_total_price_Set() const;
    bool is_total_price_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAICurrency m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIDiscount> m_discount;
    bool m_discount_isSet;
    bool m_discount_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    float m_list_price;
    bool m_list_price_isSet;
    bool m_list_price_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    float m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    OAIRelation m_relation;
    bool m_relation_isSet;
    bool m_relation_isValid;

    float m_sales_price;
    bool m_sales_price_isSet;
    bool m_sales_price_isValid;

    float m_subtotal;
    bool m_subtotal_isSet;
    bool m_subtotal_isValid;

    QList<OAITax> m_tax;
    bool m_tax_isSet;
    bool m_tax_isValid;

    float m_total_price;
    bool m_total_price_isSet;
    bool m_total_price_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOpportunityProductEntity)

#endif // OAIOpportunityProductEntity_H
