/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProductEntity.h
 *
 * 
 */

#ifndef OAIProductEntity_H
#define OAIProductEntity_H

#include <QJsonObject>

#include "OAICost.h"
#include "OAIImage.h"
#include "OAIPrice.h"
#include "OAIRelation.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICost;
class OAIImage;
class OAIPrice;
class OAIRelation;

class OAIProductEntity : public OAIObject {
public:
    OAIProductEntity();
    OAIProductEntity(QString json);
    ~OAIProductEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getCategory() const;
    void setCategory(const QList<QString> &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QList<OAICost> getCost() const;
    void setCost(const QList<OAICost> &cost);
    bool is_cost_Set() const;
    bool is_cost_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIImage> getImage() const;
    void setImage(const QList<OAIImage> &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    bool isIsTaxable() const;
    void setIsTaxable(const bool &is_taxable);
    bool is_is_taxable_Set() const;
    bool is_is_taxable_Valid() const;

    QString getManufacturer() const;
    void setManufacturer(const QString &manufacturer);
    bool is_manufacturer_Set() const;
    bool is_manufacturer_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIPrice> getPrice() const;
    void setPrice(const QList<OAIPrice> &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    float getQuantityInDemand() const;
    void setQuantityInDemand(const float &quantity_in_demand);
    bool is_quantity_in_demand_Set() const;
    bool is_quantity_in_demand_Valid() const;

    float getQuantityInStock() const;
    void setQuantityInStock(const float &quantity_in_stock);
    bool is_quantity_in_stock_Set() const;
    bool is_quantity_in_stock_Valid() const;

    OAIRelation getRelation() const;
    void setRelation(const OAIRelation &relation);
    bool is_relation_Set() const;
    bool is_relation_Valid() const;

    float getReorderLevel() const;
    void setReorderLevel(const float &reorder_level);
    bool is_reorder_level_Set() const;
    bool is_reorder_level_Valid() const;

    QDateTime getSalesEndedAt() const;
    void setSalesEndedAt(const QDateTime &sales_ended_at);
    bool is_sales_ended_at_Set() const;
    bool is_sales_ended_at_Valid() const;

    QDateTime getSalesStartedAt() const;
    void setSalesStartedAt(const QDateTime &sales_started_at);
    bool is_sales_started_at_Set() const;
    bool is_sales_started_at_Valid() const;

    QDateTime getSupportEndedAt() const;
    void setSupportEndedAt(const QDateTime &support_ended_at);
    bool is_support_ended_at_Set() const;
    bool is_support_ended_at_Valid() const;

    QDateTime getSupportStartedAt() const;
    void setSupportStartedAt(const QDateTime &support_started_at);
    bool is_support_started_at_Set() const;
    bool is_support_started_at_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getVendor() const;
    void setVendor(const QString &vendor);
    bool is_vendor_Set() const;
    bool is_vendor_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QList<OAICost> m_cost;
    bool m_cost_isSet;
    bool m_cost_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIImage> m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    bool m_is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    bool m_is_taxable;
    bool m_is_taxable_isSet;
    bool m_is_taxable_isValid;

    QString m_manufacturer;
    bool m_manufacturer_isSet;
    bool m_manufacturer_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIPrice> m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    float m_quantity_in_demand;
    bool m_quantity_in_demand_isSet;
    bool m_quantity_in_demand_isValid;

    float m_quantity_in_stock;
    bool m_quantity_in_stock_isSet;
    bool m_quantity_in_stock_isValid;

    OAIRelation m_relation;
    bool m_relation_isSet;
    bool m_relation_isValid;

    float m_reorder_level;
    bool m_reorder_level_isSet;
    bool m_reorder_level_isValid;

    QDateTime m_sales_ended_at;
    bool m_sales_ended_at_isSet;
    bool m_sales_ended_at_isValid;

    QDateTime m_sales_started_at;
    bool m_sales_started_at_isSet;
    bool m_sales_started_at_isValid;

    QDateTime m_support_ended_at;
    bool m_support_ended_at_isSet;
    bool m_support_ended_at_isValid;

    QDateTime m_support_started_at;
    bool m_support_started_at_isSet;
    bool m_support_started_at_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_vendor;
    bool m_vendor_isSet;
    bool m_vendor_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProductEntity)

#endif // OAIProductEntity_H
