# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.call_entity_relation import CallEntityRelation
from openapi_server import util


class CallRelation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity: CallEntityRelation=None, type: str=None):
        """CallRelation - a model defined in OpenAPI

        :param entity: The entity of this CallRelation.
        :param type: The type of this CallRelation.
        """
        self.openapi_types = {
            'entity': CallEntityRelation,
            'type': str
        }

        self.attribute_map = {
            'entity': 'entity',
            'type': 'type'
        }

        self._entity = entity
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CallRelation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CallRelation of this CallRelation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity(self):
        """Gets the entity of this CallRelation.


        :return: The entity of this CallRelation.
        :rtype: CallEntityRelation
        """
        return self._entity

    @entity.setter
    def entity(self, entity):
        """Sets the entity of this CallRelation.


        :param entity: The entity of this CallRelation.
        :type entity: CallEntityRelation
        """

        self._entity = entity

    @property
    def type(self):
        """Gets the type of this CallRelation.

        Type

        :return: The type of this CallRelation.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CallRelation.

        Type

        :param type: The type of this CallRelation.
        :type type: str
        """

        self._type = type
