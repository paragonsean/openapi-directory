# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.price import Price
from openapi_server.models.relation import Relation
from openapi_server import util


class PriceBookItemEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, created_at: datetime=None, id: str=None, is_active: bool=None, name: str=None, price: List[Price]=None, relation: Relation=None, updated_at: datetime=None, use_standard_price: bool=None):
        """PriceBookItemEntity - a model defined in OpenAPI

        :param code: The code of this PriceBookItemEntity.
        :param created_at: The created_at of this PriceBookItemEntity.
        :param id: The id of this PriceBookItemEntity.
        :param is_active: The is_active of this PriceBookItemEntity.
        :param name: The name of this PriceBookItemEntity.
        :param price: The price of this PriceBookItemEntity.
        :param relation: The relation of this PriceBookItemEntity.
        :param updated_at: The updated_at of this PriceBookItemEntity.
        :param use_standard_price: The use_standard_price of this PriceBookItemEntity.
        """
        self.openapi_types = {
            'code': str,
            'created_at': datetime,
            'id': str,
            'is_active': bool,
            'name': str,
            'price': List[Price],
            'relation': Relation,
            'updated_at': datetime,
            'use_standard_price': bool
        }

        self.attribute_map = {
            'code': 'code',
            'created_at': 'created_at',
            'id': 'id',
            'is_active': 'is_active',
            'name': 'name',
            'price': 'price',
            'relation': 'relation',
            'updated_at': 'updated_at',
            'use_standard_price': 'use_standard_price'
        }

        self._code = code
        self._created_at = created_at
        self._id = id
        self._is_active = is_active
        self._name = name
        self._price = price
        self._relation = relation
        self._updated_at = updated_at
        self._use_standard_price = use_standard_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PriceBookItemEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PriceBookItemEntity of this PriceBookItemEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this PriceBookItemEntity.

        Code

        :return: The code of this PriceBookItemEntity.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this PriceBookItemEntity.

        Code

        :param code: The code of this PriceBookItemEntity.
        :type code: str
        """

        self._code = code

    @property
    def created_at(self):
        """Gets the created_at of this PriceBookItemEntity.

        Created At

        :return: The created_at of this PriceBookItemEntity.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this PriceBookItemEntity.

        Created At

        :param created_at: The created_at of this PriceBookItemEntity.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this PriceBookItemEntity.

        PriceBookItem Identifier

        :return: The id of this PriceBookItemEntity.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PriceBookItemEntity.

        PriceBookItem Identifier

        :param id: The id of this PriceBookItemEntity.
        :type id: str
        """

        self._id = id

    @property
    def is_active(self):
        """Gets the is_active of this PriceBookItemEntity.

        Is Active

        :return: The is_active of this PriceBookItemEntity.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this PriceBookItemEntity.

        Is Active

        :param is_active: The is_active of this PriceBookItemEntity.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def name(self):
        """Gets the name of this PriceBookItemEntity.

        Name

        :return: The name of this PriceBookItemEntity.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PriceBookItemEntity.

        Name

        :param name: The name of this PriceBookItemEntity.
        :type name: str
        """

        self._name = name

    @property
    def price(self):
        """Gets the price of this PriceBookItemEntity.

        Price

        :return: The price of this PriceBookItemEntity.
        :rtype: List[Price]
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this PriceBookItemEntity.

        Price

        :param price: The price of this PriceBookItemEntity.
        :type price: List[Price]
        """

        self._price = price

    @property
    def relation(self):
        """Gets the relation of this PriceBookItemEntity.


        :return: The relation of this PriceBookItemEntity.
        :rtype: Relation
        """
        return self._relation

    @relation.setter
    def relation(self, relation):
        """Sets the relation of this PriceBookItemEntity.


        :param relation: The relation of this PriceBookItemEntity.
        :type relation: Relation
        """

        self._relation = relation

    @property
    def updated_at(self):
        """Gets the updated_at of this PriceBookItemEntity.

        Updated At

        :return: The updated_at of this PriceBookItemEntity.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this PriceBookItemEntity.

        Updated At

        :param updated_at: The updated_at of this PriceBookItemEntity.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def use_standard_price(self):
        """Gets the use_standard_price of this PriceBookItemEntity.

        Is Standard

        :return: The use_standard_price of this PriceBookItemEntity.
        :rtype: bool
        """
        return self._use_standard_price

    @use_standard_price.setter
    def use_standard_price(self, use_standard_price):
        """Sets the use_standard_price of this PriceBookItemEntity.

        Is Standard

        :param use_standard_price: The use_standard_price of this PriceBookItemEntity.
        :type use_standard_price: bool
        """

        self._use_standard_price = use_standard_price
