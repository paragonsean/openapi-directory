# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server.models.email import Email
from openapi_server.models.messenger import Messenger
from openapi_server.models.phone import Phone
from openapi_server.models.relation import Relation
from openapi_server.models.website import Website
from openapi_server import util


class UserEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: List[Address]=None, created_at: datetime=None, department: str=None, description: str=None, email: List[Email]=None, first_name: str=None, id: str=None, is_admin: bool=None, is_associable: bool=None, last_name: str=None, messenger: List[Messenger]=None, middle_name: str=None, name_suffix: str=None, phone: List[Phone]=None, position: str=None, relation: Relation=None, salutation: str=None, status: str=None, updated_at: datetime=None, username: str=None, website: List[Website]=None):
        """UserEntity - a model defined in OpenAPI

        :param address: The address of this UserEntity.
        :param created_at: The created_at of this UserEntity.
        :param department: The department of this UserEntity.
        :param description: The description of this UserEntity.
        :param email: The email of this UserEntity.
        :param first_name: The first_name of this UserEntity.
        :param id: The id of this UserEntity.
        :param is_admin: The is_admin of this UserEntity.
        :param is_associable: The is_associable of this UserEntity.
        :param last_name: The last_name of this UserEntity.
        :param messenger: The messenger of this UserEntity.
        :param middle_name: The middle_name of this UserEntity.
        :param name_suffix: The name_suffix of this UserEntity.
        :param phone: The phone of this UserEntity.
        :param position: The position of this UserEntity.
        :param relation: The relation of this UserEntity.
        :param salutation: The salutation of this UserEntity.
        :param status: The status of this UserEntity.
        :param updated_at: The updated_at of this UserEntity.
        :param username: The username of this UserEntity.
        :param website: The website of this UserEntity.
        """
        self.openapi_types = {
            'address': List[Address],
            'created_at': datetime,
            'department': str,
            'description': str,
            'email': List[Email],
            'first_name': str,
            'id': str,
            'is_admin': bool,
            'is_associable': bool,
            'last_name': str,
            'messenger': List[Messenger],
            'middle_name': str,
            'name_suffix': str,
            'phone': List[Phone],
            'position': str,
            'relation': Relation,
            'salutation': str,
            'status': str,
            'updated_at': datetime,
            'username': str,
            'website': List[Website]
        }

        self.attribute_map = {
            'address': 'address',
            'created_at': 'created_at',
            'department': 'department',
            'description': 'description',
            'email': 'email',
            'first_name': 'first_name',
            'id': 'id',
            'is_admin': 'is_admin',
            'is_associable': 'is_associable',
            'last_name': 'last_name',
            'messenger': 'messenger',
            'middle_name': 'middle_name',
            'name_suffix': 'name_suffix',
            'phone': 'phone',
            'position': 'position',
            'relation': 'relation',
            'salutation': 'salutation',
            'status': 'status',
            'updated_at': 'updated_at',
            'username': 'username',
            'website': 'website'
        }

        self._address = address
        self._created_at = created_at
        self._department = department
        self._description = description
        self._email = email
        self._first_name = first_name
        self._id = id
        self._is_admin = is_admin
        self._is_associable = is_associable
        self._last_name = last_name
        self._messenger = messenger
        self._middle_name = middle_name
        self._name_suffix = name_suffix
        self._phone = phone
        self._position = position
        self._relation = relation
        self._salutation = salutation
        self._status = status
        self._updated_at = updated_at
        self._username = username
        self._website = website

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserEntity of this UserEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this UserEntity.

        Address

        :return: The address of this UserEntity.
        :rtype: List[Address]
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this UserEntity.

        Address

        :param address: The address of this UserEntity.
        :type address: List[Address]
        """

        self._address = address

    @property
    def created_at(self):
        """Gets the created_at of this UserEntity.

        Created At

        :return: The created_at of this UserEntity.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this UserEntity.

        Created At

        :param created_at: The created_at of this UserEntity.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def department(self):
        """Gets the department of this UserEntity.

        Department

        :return: The department of this UserEntity.
        :rtype: str
        """
        return self._department

    @department.setter
    def department(self, department):
        """Sets the department of this UserEntity.

        Department

        :param department: The department of this UserEntity.
        :type department: str
        """

        self._department = department

    @property
    def description(self):
        """Gets the description of this UserEntity.

        Description

        :return: The description of this UserEntity.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UserEntity.

        Description

        :param description: The description of this UserEntity.
        :type description: str
        """

        self._description = description

    @property
    def email(self):
        """Gets the email of this UserEntity.

        Email

        :return: The email of this UserEntity.
        :rtype: List[Email]
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this UserEntity.

        Email

        :param email: The email of this UserEntity.
        :type email: List[Email]
        """

        self._email = email

    @property
    def first_name(self):
        """Gets the first_name of this UserEntity.

        First Name

        :return: The first_name of this UserEntity.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this UserEntity.

        First Name

        :param first_name: The first_name of this UserEntity.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def id(self):
        """Gets the id of this UserEntity.

        User Identifier

        :return: The id of this UserEntity.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UserEntity.

        User Identifier

        :param id: The id of this UserEntity.
        :type id: str
        """

        self._id = id

    @property
    def is_admin(self):
        """Gets the is_admin of this UserEntity.

        Is admin

        :return: The is_admin of this UserEntity.
        :rtype: bool
        """
        return self._is_admin

    @is_admin.setter
    def is_admin(self, is_admin):
        """Sets the is_admin of this UserEntity.

        Is admin

        :param is_admin: The is_admin of this UserEntity.
        :type is_admin: bool
        """

        self._is_admin = is_admin

    @property
    def is_associable(self):
        """Gets the is_associable of this UserEntity.

        Is associable

        :return: The is_associable of this UserEntity.
        :rtype: bool
        """
        return self._is_associable

    @is_associable.setter
    def is_associable(self, is_associable):
        """Sets the is_associable of this UserEntity.

        Is associable

        :param is_associable: The is_associable of this UserEntity.
        :type is_associable: bool
        """

        self._is_associable = is_associable

    @property
    def last_name(self):
        """Gets the last_name of this UserEntity.

        Last Name

        :return: The last_name of this UserEntity.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this UserEntity.

        Last Name

        :param last_name: The last_name of this UserEntity.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def messenger(self):
        """Gets the messenger of this UserEntity.

        Messenger

        :return: The messenger of this UserEntity.
        :rtype: List[Messenger]
        """
        return self._messenger

    @messenger.setter
    def messenger(self, messenger):
        """Sets the messenger of this UserEntity.

        Messenger

        :param messenger: The messenger of this UserEntity.
        :type messenger: List[Messenger]
        """

        self._messenger = messenger

    @property
    def middle_name(self):
        """Gets the middle_name of this UserEntity.

        Middle Name

        :return: The middle_name of this UserEntity.
        :rtype: str
        """
        return self._middle_name

    @middle_name.setter
    def middle_name(self, middle_name):
        """Sets the middle_name of this UserEntity.

        Middle Name

        :param middle_name: The middle_name of this UserEntity.
        :type middle_name: str
        """

        self._middle_name = middle_name

    @property
    def name_suffix(self):
        """Gets the name_suffix of this UserEntity.

        Name Suffix

        :return: The name_suffix of this UserEntity.
        :rtype: str
        """
        return self._name_suffix

    @name_suffix.setter
    def name_suffix(self, name_suffix):
        """Sets the name_suffix of this UserEntity.

        Name Suffix

        :param name_suffix: The name_suffix of this UserEntity.
        :type name_suffix: str
        """

        self._name_suffix = name_suffix

    @property
    def phone(self):
        """Gets the phone of this UserEntity.

        Phone

        :return: The phone of this UserEntity.
        :rtype: List[Phone]
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this UserEntity.

        Phone

        :param phone: The phone of this UserEntity.
        :type phone: List[Phone]
        """

        self._phone = phone

    @property
    def position(self):
        """Gets the position of this UserEntity.

        Position

        :return: The position of this UserEntity.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this UserEntity.

        Position

        :param position: The position of this UserEntity.
        :type position: str
        """

        self._position = position

    @property
    def relation(self):
        """Gets the relation of this UserEntity.


        :return: The relation of this UserEntity.
        :rtype: Relation
        """
        return self._relation

    @relation.setter
    def relation(self, relation):
        """Sets the relation of this UserEntity.


        :param relation: The relation of this UserEntity.
        :type relation: Relation
        """

        self._relation = relation

    @property
    def salutation(self):
        """Gets the salutation of this UserEntity.

        Salutation

        :return: The salutation of this UserEntity.
        :rtype: str
        """
        return self._salutation

    @salutation.setter
    def salutation(self, salutation):
        """Sets the salutation of this UserEntity.

        Salutation

        :param salutation: The salutation of this UserEntity.
        :type salutation: str
        """

        self._salutation = salutation

    @property
    def status(self):
        """Gets the status of this UserEntity.

        Status

        :return: The status of this UserEntity.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UserEntity.

        Status

        :param status: The status of this UserEntity.
        :type status: str
        """

        self._status = status

    @property
    def updated_at(self):
        """Gets the updated_at of this UserEntity.

        Updated At

        :return: The updated_at of this UserEntity.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this UserEntity.

        Updated At

        :param updated_at: The updated_at of this UserEntity.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def username(self):
        """Gets the username of this UserEntity.

        Username

        :return: The username of this UserEntity.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this UserEntity.

        Username

        :param username: The username of this UserEntity.
        :type username: str
        """

        self._username = username

    @property
    def website(self):
        """Gets the website of this UserEntity.

        Website

        :return: The website of this UserEntity.
        :rtype: List[Website]
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this UserEntity.

        Website

        :param website: The website of this UserEntity.
        :type website: List[Website]
        """

        self._website = website
