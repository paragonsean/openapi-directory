# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.type import Type
from openapi_server import util


class RequestsLimit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_exceeded: bool=None, retry_after: datetime=None, type: List[Type]=None):
        """RequestsLimit - a model defined in OpenAPI

        :param is_exceeded: The is_exceeded of this RequestsLimit.
        :param retry_after: The retry_after of this RequestsLimit.
        :param type: The type of this RequestsLimit.
        """
        self.openapi_types = {
            'is_exceeded': bool,
            'retry_after': datetime,
            'type': List[Type]
        }

        self.attribute_map = {
            'is_exceeded': 'is_exceeded',
            'retry_after': 'retry_after',
            'type': 'type'
        }

        self._is_exceeded = is_exceeded
        self._retry_after = retry_after
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RequestsLimit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RequestsLimit of this RequestsLimit.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_exceeded(self):
        """Gets the is_exceeded of this RequestsLimit.

        Is Exceeded

        :return: The is_exceeded of this RequestsLimit.
        :rtype: bool
        """
        return self._is_exceeded

    @is_exceeded.setter
    def is_exceeded(self, is_exceeded):
        """Sets the is_exceeded of this RequestsLimit.

        Is Exceeded

        :param is_exceeded: The is_exceeded of this RequestsLimit.
        :type is_exceeded: bool
        """

        self._is_exceeded = is_exceeded

    @property
    def retry_after(self):
        """Gets the retry_after of this RequestsLimit.

        Retry After

        :return: The retry_after of this RequestsLimit.
        :rtype: datetime
        """
        return self._retry_after

    @retry_after.setter
    def retry_after(self, retry_after):
        """Sets the retry_after of this RequestsLimit.

        Retry After

        :param retry_after: The retry_after of this RequestsLimit.
        :type retry_after: datetime
        """

        self._retry_after = retry_after

    @property
    def type(self):
        """Gets the type of this RequestsLimit.

        Type

        :return: The type of this RequestsLimit.
        :rtype: List[Type]
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this RequestsLimit.

        Type

        :param type: The type of this RequestsLimit.
        :type type: List[Type]
        """

        self._type = type
