# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.relation import Relation
from openapi_server import util


class AttachmentEntityList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, description: str=None, id: str=None, link: str=None, mime_type: str=None, name: str=None, relation: Relation=None, size: int=None, title: str=None, updated_at: datetime=None):
        """AttachmentEntityList - a model defined in OpenAPI

        :param created_at: The created_at of this AttachmentEntityList.
        :param description: The description of this AttachmentEntityList.
        :param id: The id of this AttachmentEntityList.
        :param link: The link of this AttachmentEntityList.
        :param mime_type: The mime_type of this AttachmentEntityList.
        :param name: The name of this AttachmentEntityList.
        :param relation: The relation of this AttachmentEntityList.
        :param size: The size of this AttachmentEntityList.
        :param title: The title of this AttachmentEntityList.
        :param updated_at: The updated_at of this AttachmentEntityList.
        """
        self.openapi_types = {
            'created_at': datetime,
            'description': str,
            'id': str,
            'link': str,
            'mime_type': str,
            'name': str,
            'relation': Relation,
            'size': int,
            'title': str,
            'updated_at': datetime
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'description': 'description',
            'id': 'id',
            'link': 'link',
            'mime_type': 'mime_type',
            'name': 'name',
            'relation': 'relation',
            'size': 'size',
            'title': 'title',
            'updated_at': 'updated_at'
        }

        self._created_at = created_at
        self._description = description
        self._id = id
        self._link = link
        self._mime_type = mime_type
        self._name = name
        self._relation = relation
        self._size = size
        self._title = title
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AttachmentEntityList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AttachmentEntityList of this AttachmentEntityList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this AttachmentEntityList.

        Created At

        :return: The created_at of this AttachmentEntityList.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this AttachmentEntityList.

        Created At

        :param created_at: The created_at of this AttachmentEntityList.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def description(self):
        """Gets the description of this AttachmentEntityList.

        Description

        :return: The description of this AttachmentEntityList.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AttachmentEntityList.

        Description

        :param description: The description of this AttachmentEntityList.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this AttachmentEntityList.

        Attachment Identifier

        :return: The id of this AttachmentEntityList.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AttachmentEntityList.

        Attachment Identifier

        :param id: The id of this AttachmentEntityList.
        :type id: str
        """

        self._id = id

    @property
    def link(self):
        """Gets the link of this AttachmentEntityList.

        Link

        :return: The link of this AttachmentEntityList.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this AttachmentEntityList.

        Link

        :param link: The link of this AttachmentEntityList.
        :type link: str
        """

        self._link = link

    @property
    def mime_type(self):
        """Gets the mime_type of this AttachmentEntityList.

        Mime Type

        :return: The mime_type of this AttachmentEntityList.
        :rtype: str
        """
        return self._mime_type

    @mime_type.setter
    def mime_type(self, mime_type):
        """Sets the mime_type of this AttachmentEntityList.

        Mime Type

        :param mime_type: The mime_type of this AttachmentEntityList.
        :type mime_type: str
        """

        self._mime_type = mime_type

    @property
    def name(self):
        """Gets the name of this AttachmentEntityList.

        Name

        :return: The name of this AttachmentEntityList.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AttachmentEntityList.

        Name

        :param name: The name of this AttachmentEntityList.
        :type name: str
        """

        self._name = name

    @property
    def relation(self):
        """Gets the relation of this AttachmentEntityList.


        :return: The relation of this AttachmentEntityList.
        :rtype: Relation
        """
        return self._relation

    @relation.setter
    def relation(self, relation):
        """Sets the relation of this AttachmentEntityList.


        :param relation: The relation of this AttachmentEntityList.
        :type relation: Relation
        """

        self._relation = relation

    @property
    def size(self):
        """Gets the size of this AttachmentEntityList.

        Size (in bytes)

        :return: The size of this AttachmentEntityList.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this AttachmentEntityList.

        Size (in bytes)

        :param size: The size of this AttachmentEntityList.
        :type size: int
        """

        self._size = size

    @property
    def title(self):
        """Gets the title of this AttachmentEntityList.

        Title

        :return: The title of this AttachmentEntityList.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this AttachmentEntityList.

        Title

        :param title: The title of this AttachmentEntityList.
        :type title: str
        """

        self._title = title

    @property
    def updated_at(self):
        """Gets the updated_at of this AttachmentEntityList.

        Updated At

        :return: The updated_at of this AttachmentEntityList.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this AttachmentEntityList.

        Updated At

        :param updated_at: The updated_at of this AttachmentEntityList.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
