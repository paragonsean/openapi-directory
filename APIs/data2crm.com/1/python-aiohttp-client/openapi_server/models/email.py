# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Email(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, type: str=None):
        """Email - a model defined in OpenAPI

        :param address: The address of this Email.
        :param type: The type of this Email.
        """
        self.openapi_types = {
            'address': str,
            'type': str
        }

        self.attribute_map = {
            'address': 'address',
            'type': 'type'
        }

        self._address = address
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Email':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Email of this Email.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this Email.

        Address

        :return: The address of this Email.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this Email.

        Address

        :param address: The address of this Email.
        :type address: str
        """

        self._address = address

    @property
    def type(self):
        """Gets the type of this Email.

        Type

        :return: The type of this Email.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Email.

        Type

        :param type: The type of this Email.
        :type type: str
        """

        self._type = type
