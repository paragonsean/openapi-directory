# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.relation import Relation
from openapi_server import util


class FieldItemEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, description: str=None, entity: str=None, id: str=None, label: str=None, name: str=None, relation: Relation=None, updated_at: datetime=None):
        """FieldItemEntity - a model defined in OpenAPI

        :param created_at: The created_at of this FieldItemEntity.
        :param description: The description of this FieldItemEntity.
        :param entity: The entity of this FieldItemEntity.
        :param id: The id of this FieldItemEntity.
        :param label: The label of this FieldItemEntity.
        :param name: The name of this FieldItemEntity.
        :param relation: The relation of this FieldItemEntity.
        :param updated_at: The updated_at of this FieldItemEntity.
        """
        self.openapi_types = {
            'created_at': datetime,
            'description': str,
            'entity': str,
            'id': str,
            'label': str,
            'name': str,
            'relation': Relation,
            'updated_at': datetime
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'description': 'description',
            'entity': 'entity',
            'id': 'id',
            'label': 'label',
            'name': 'name',
            'relation': 'relation',
            'updated_at': 'updated_at'
        }

        self._created_at = created_at
        self._description = description
        self._entity = entity
        self._id = id
        self._label = label
        self._name = name
        self._relation = relation
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FieldItemEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FieldItemEntity of this FieldItemEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this FieldItemEntity.

        Created At

        :return: The created_at of this FieldItemEntity.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this FieldItemEntity.

        Created At

        :param created_at: The created_at of this FieldItemEntity.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def description(self):
        """Gets the description of this FieldItemEntity.

        Description

        :return: The description of this FieldItemEntity.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this FieldItemEntity.

        Description

        :param description: The description of this FieldItemEntity.
        :type description: str
        """

        self._description = description

    @property
    def entity(self):
        """Gets the entity of this FieldItemEntity.

        Entity

        :return: The entity of this FieldItemEntity.
        :rtype: str
        """
        return self._entity

    @entity.setter
    def entity(self, entity):
        """Sets the entity of this FieldItemEntity.

        Entity

        :param entity: The entity of this FieldItemEntity.
        :type entity: str
        """

        self._entity = entity

    @property
    def id(self):
        """Gets the id of this FieldItemEntity.

        Field Item Identifier

        :return: The id of this FieldItemEntity.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this FieldItemEntity.

        Field Item Identifier

        :param id: The id of this FieldItemEntity.
        :type id: str
        """

        self._id = id

    @property
    def label(self):
        """Gets the label of this FieldItemEntity.

        Label

        :return: The label of this FieldItemEntity.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this FieldItemEntity.

        Label

        :param label: The label of this FieldItemEntity.
        :type label: str
        """

        self._label = label

    @property
    def name(self):
        """Gets the name of this FieldItemEntity.

        Name

        :return: The name of this FieldItemEntity.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this FieldItemEntity.

        Name

        :param name: The name of this FieldItemEntity.
        :type name: str
        """

        self._name = name

    @property
    def relation(self):
        """Gets the relation of this FieldItemEntity.


        :return: The relation of this FieldItemEntity.
        :rtype: Relation
        """
        return self._relation

    @relation.setter
    def relation(self, relation):
        """Sets the relation of this FieldItemEntity.


        :param relation: The relation of this FieldItemEntity.
        :type relation: Relation
        """

        self._relation = relation

    @property
    def updated_at(self):
        """Gets the updated_at of this FieldItemEntity.

        Updated At

        :return: The updated_at of this FieldItemEntity.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this FieldItemEntity.

        Updated At

        :param updated_at: The updated_at of this FieldItemEntity.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
