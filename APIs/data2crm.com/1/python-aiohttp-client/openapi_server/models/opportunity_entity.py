# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server.models.relation import Relation
from openapi_server import util


class OpportunityEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: float=None, created_at: datetime=None, currency: Currency=None, description: str=None, ended_at: datetime=None, expected_amount: float=None, expected_end_at: datetime=None, id: str=None, lead_source: str=None, name: str=None, next_step: str=None, pipeline_with_stage: str=None, probability: int=None, relation: Relation=None, state: str=None, type: str=None, updated_at: datetime=None):
        """OpportunityEntity - a model defined in OpenAPI

        :param amount: The amount of this OpportunityEntity.
        :param created_at: The created_at of this OpportunityEntity.
        :param currency: The currency of this OpportunityEntity.
        :param description: The description of this OpportunityEntity.
        :param ended_at: The ended_at of this OpportunityEntity.
        :param expected_amount: The expected_amount of this OpportunityEntity.
        :param expected_end_at: The expected_end_at of this OpportunityEntity.
        :param id: The id of this OpportunityEntity.
        :param lead_source: The lead_source of this OpportunityEntity.
        :param name: The name of this OpportunityEntity.
        :param next_step: The next_step of this OpportunityEntity.
        :param pipeline_with_stage: The pipeline_with_stage of this OpportunityEntity.
        :param probability: The probability of this OpportunityEntity.
        :param relation: The relation of this OpportunityEntity.
        :param state: The state of this OpportunityEntity.
        :param type: The type of this OpportunityEntity.
        :param updated_at: The updated_at of this OpportunityEntity.
        """
        self.openapi_types = {
            'amount': float,
            'created_at': datetime,
            'currency': Currency,
            'description': str,
            'ended_at': datetime,
            'expected_amount': float,
            'expected_end_at': datetime,
            'id': str,
            'lead_source': str,
            'name': str,
            'next_step': str,
            'pipeline_with_stage': str,
            'probability': int,
            'relation': Relation,
            'state': str,
            'type': str,
            'updated_at': datetime
        }

        self.attribute_map = {
            'amount': 'amount',
            'created_at': 'created_at',
            'currency': 'currency',
            'description': 'description',
            'ended_at': 'ended_at',
            'expected_amount': 'expected_amount',
            'expected_end_at': 'expected_end_at',
            'id': 'id',
            'lead_source': 'lead_source',
            'name': 'name',
            'next_step': 'next_step',
            'pipeline_with_stage': 'pipeline_with_stage',
            'probability': 'probability',
            'relation': 'relation',
            'state': 'state',
            'type': 'type',
            'updated_at': 'updated_at'
        }

        self._amount = amount
        self._created_at = created_at
        self._currency = currency
        self._description = description
        self._ended_at = ended_at
        self._expected_amount = expected_amount
        self._expected_end_at = expected_end_at
        self._id = id
        self._lead_source = lead_source
        self._name = name
        self._next_step = next_step
        self._pipeline_with_stage = pipeline_with_stage
        self._probability = probability
        self._relation = relation
        self._state = state
        self._type = type
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OpportunityEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OpportunityEntity of this OpportunityEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this OpportunityEntity.

        Amount

        :return: The amount of this OpportunityEntity.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this OpportunityEntity.

        Amount

        :param amount: The amount of this OpportunityEntity.
        :type amount: float
        """

        self._amount = amount

    @property
    def created_at(self):
        """Gets the created_at of this OpportunityEntity.

        Created At

        :return: The created_at of this OpportunityEntity.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this OpportunityEntity.

        Created At

        :param created_at: The created_at of this OpportunityEntity.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def currency(self):
        """Gets the currency of this OpportunityEntity.


        :return: The currency of this OpportunityEntity.
        :rtype: Currency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this OpportunityEntity.


        :param currency: The currency of this OpportunityEntity.
        :type currency: Currency
        """

        self._currency = currency

    @property
    def description(self):
        """Gets the description of this OpportunityEntity.

        Description

        :return: The description of this OpportunityEntity.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this OpportunityEntity.

        Description

        :param description: The description of this OpportunityEntity.
        :type description: str
        """

        self._description = description

    @property
    def ended_at(self):
        """Gets the ended_at of this OpportunityEntity.

        Closed At

        :return: The ended_at of this OpportunityEntity.
        :rtype: datetime
        """
        return self._ended_at

    @ended_at.setter
    def ended_at(self, ended_at):
        """Sets the ended_at of this OpportunityEntity.

        Closed At

        :param ended_at: The ended_at of this OpportunityEntity.
        :type ended_at: datetime
        """

        self._ended_at = ended_at

    @property
    def expected_amount(self):
        """Gets the expected_amount of this OpportunityEntity.

        Expected Amount

        :return: The expected_amount of this OpportunityEntity.
        :rtype: float
        """
        return self._expected_amount

    @expected_amount.setter
    def expected_amount(self, expected_amount):
        """Sets the expected_amount of this OpportunityEntity.

        Expected Amount

        :param expected_amount: The expected_amount of this OpportunityEntity.
        :type expected_amount: float
        """

        self._expected_amount = expected_amount

    @property
    def expected_end_at(self):
        """Gets the expected_end_at of this OpportunityEntity.

        Expected End At

        :return: The expected_end_at of this OpportunityEntity.
        :rtype: datetime
        """
        return self._expected_end_at

    @expected_end_at.setter
    def expected_end_at(self, expected_end_at):
        """Sets the expected_end_at of this OpportunityEntity.

        Expected End At

        :param expected_end_at: The expected_end_at of this OpportunityEntity.
        :type expected_end_at: datetime
        """

        self._expected_end_at = expected_end_at

    @property
    def id(self):
        """Gets the id of this OpportunityEntity.

        Opportunity Identifier

        :return: The id of this OpportunityEntity.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OpportunityEntity.

        Opportunity Identifier

        :param id: The id of this OpportunityEntity.
        :type id: str
        """

        self._id = id

    @property
    def lead_source(self):
        """Gets the lead_source of this OpportunityEntity.

        Lead Source

        :return: The lead_source of this OpportunityEntity.
        :rtype: str
        """
        return self._lead_source

    @lead_source.setter
    def lead_source(self, lead_source):
        """Sets the lead_source of this OpportunityEntity.

        Lead Source

        :param lead_source: The lead_source of this OpportunityEntity.
        :type lead_source: str
        """

        self._lead_source = lead_source

    @property
    def name(self):
        """Gets the name of this OpportunityEntity.

        Name

        :return: The name of this OpportunityEntity.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this OpportunityEntity.

        Name

        :param name: The name of this OpportunityEntity.
        :type name: str
        """

        self._name = name

    @property
    def next_step(self):
        """Gets the next_step of this OpportunityEntity.

        Next Step

        :return: The next_step of this OpportunityEntity.
        :rtype: str
        """
        return self._next_step

    @next_step.setter
    def next_step(self, next_step):
        """Sets the next_step of this OpportunityEntity.

        Next Step

        :param next_step: The next_step of this OpportunityEntity.
        :type next_step: str
        """

        self._next_step = next_step

    @property
    def pipeline_with_stage(self):
        """Gets the pipeline_with_stage of this OpportunityEntity.

        Pipeline With Stage

        :return: The pipeline_with_stage of this OpportunityEntity.
        :rtype: str
        """
        return self._pipeline_with_stage

    @pipeline_with_stage.setter
    def pipeline_with_stage(self, pipeline_with_stage):
        """Sets the pipeline_with_stage of this OpportunityEntity.

        Pipeline With Stage

        :param pipeline_with_stage: The pipeline_with_stage of this OpportunityEntity.
        :type pipeline_with_stage: str
        """

        self._pipeline_with_stage = pipeline_with_stage

    @property
    def probability(self):
        """Gets the probability of this OpportunityEntity.

        Probability

        :return: The probability of this OpportunityEntity.
        :rtype: int
        """
        return self._probability

    @probability.setter
    def probability(self, probability):
        """Sets the probability of this OpportunityEntity.

        Probability

        :param probability: The probability of this OpportunityEntity.
        :type probability: int
        """

        self._probability = probability

    @property
    def relation(self):
        """Gets the relation of this OpportunityEntity.


        :return: The relation of this OpportunityEntity.
        :rtype: Relation
        """
        return self._relation

    @relation.setter
    def relation(self, relation):
        """Sets the relation of this OpportunityEntity.


        :param relation: The relation of this OpportunityEntity.
        :type relation: Relation
        """

        self._relation = relation

    @property
    def state(self):
        """Gets the state of this OpportunityEntity.

        State

        :return: The state of this OpportunityEntity.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this OpportunityEntity.

        State

        :param state: The state of this OpportunityEntity.
        :type state: str
        """

        self._state = state

    @property
    def type(self):
        """Gets the type of this OpportunityEntity.

        Type

        :return: The type of this OpportunityEntity.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OpportunityEntity.

        Type

        :param type: The type of this OpportunityEntity.
        :type type: str
        """

        self._type = type

    @property
    def updated_at(self):
        """Gets the updated_at of this OpportunityEntity.

        Updated At

        :return: The updated_at of this OpportunityEntity.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this OpportunityEntity.

        Updated At

        :param updated_at: The updated_at of this OpportunityEntity.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
