# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server.models.relation import Relation
from openapi_server import util


class PriceBookEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, currency: Currency=None, description: str=None, id: str=None, is_active: bool=None, is_standard: bool=None, name: str=None, relation: Relation=None, type: str=None, updated_at: datetime=None):
        """PriceBookEntity - a model defined in OpenAPI

        :param created_at: The created_at of this PriceBookEntity.
        :param currency: The currency of this PriceBookEntity.
        :param description: The description of this PriceBookEntity.
        :param id: The id of this PriceBookEntity.
        :param is_active: The is_active of this PriceBookEntity.
        :param is_standard: The is_standard of this PriceBookEntity.
        :param name: The name of this PriceBookEntity.
        :param relation: The relation of this PriceBookEntity.
        :param type: The type of this PriceBookEntity.
        :param updated_at: The updated_at of this PriceBookEntity.
        """
        self.openapi_types = {
            'created_at': datetime,
            'currency': Currency,
            'description': str,
            'id': str,
            'is_active': bool,
            'is_standard': bool,
            'name': str,
            'relation': Relation,
            'type': str,
            'updated_at': datetime
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'currency': 'currency',
            'description': 'description',
            'id': 'id',
            'is_active': 'is_active',
            'is_standard': 'is_standard',
            'name': 'name',
            'relation': 'relation',
            'type': 'type',
            'updated_at': 'updated_at'
        }

        self._created_at = created_at
        self._currency = currency
        self._description = description
        self._id = id
        self._is_active = is_active
        self._is_standard = is_standard
        self._name = name
        self._relation = relation
        self._type = type
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PriceBookEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PriceBookEntity of this PriceBookEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this PriceBookEntity.

        Created At

        :return: The created_at of this PriceBookEntity.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this PriceBookEntity.

        Created At

        :param created_at: The created_at of this PriceBookEntity.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def currency(self):
        """Gets the currency of this PriceBookEntity.


        :return: The currency of this PriceBookEntity.
        :rtype: Currency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this PriceBookEntity.


        :param currency: The currency of this PriceBookEntity.
        :type currency: Currency
        """

        self._currency = currency

    @property
    def description(self):
        """Gets the description of this PriceBookEntity.

        Description

        :return: The description of this PriceBookEntity.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PriceBookEntity.

        Description

        :param description: The description of this PriceBookEntity.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this PriceBookEntity.

        PriceBook Identifier

        :return: The id of this PriceBookEntity.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PriceBookEntity.

        PriceBook Identifier

        :param id: The id of this PriceBookEntity.
        :type id: str
        """

        self._id = id

    @property
    def is_active(self):
        """Gets the is_active of this PriceBookEntity.

        Is Active

        :return: The is_active of this PriceBookEntity.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this PriceBookEntity.

        Is Active

        :param is_active: The is_active of this PriceBookEntity.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def is_standard(self):
        """Gets the is_standard of this PriceBookEntity.

        Is Standard

        :return: The is_standard of this PriceBookEntity.
        :rtype: bool
        """
        return self._is_standard

    @is_standard.setter
    def is_standard(self, is_standard):
        """Sets the is_standard of this PriceBookEntity.

        Is Standard

        :param is_standard: The is_standard of this PriceBookEntity.
        :type is_standard: bool
        """

        self._is_standard = is_standard

    @property
    def name(self):
        """Gets the name of this PriceBookEntity.

        Name

        :return: The name of this PriceBookEntity.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PriceBookEntity.

        Name

        :param name: The name of this PriceBookEntity.
        :type name: str
        """

        self._name = name

    @property
    def relation(self):
        """Gets the relation of this PriceBookEntity.


        :return: The relation of this PriceBookEntity.
        :rtype: Relation
        """
        return self._relation

    @relation.setter
    def relation(self, relation):
        """Sets the relation of this PriceBookEntity.


        :param relation: The relation of this PriceBookEntity.
        :type relation: Relation
        """

        self._relation = relation

    @property
    def type(self):
        """Gets the type of this PriceBookEntity.

        Number

        :return: The type of this PriceBookEntity.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PriceBookEntity.

        Number

        :param type: The type of this PriceBookEntity.
        :type type: str
        """

        self._type = type

    @property
    def updated_at(self):
        """Gets the updated_at of this PriceBookEntity.

        Updated At

        :return: The updated_at of this PriceBookEntity.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this PriceBookEntity.

        Updated At

        :param updated_at: The updated_at of this PriceBookEntity.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
