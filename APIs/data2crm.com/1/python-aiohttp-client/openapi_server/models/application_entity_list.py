# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.company import Company
from openapi_server import util


class ApplicationEntityList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authorization: str=None, company: Company=None, created_at: datetime=None, description: str=None, key: str=None, last_used_at: datetime=None, type: str=None, updated_at: datetime=None, url: str=None, user_id: int=None, user_key: str=None):
        """ApplicationEntityList - a model defined in OpenAPI

        :param authorization: The authorization of this ApplicationEntityList.
        :param company: The company of this ApplicationEntityList.
        :param created_at: The created_at of this ApplicationEntityList.
        :param description: The description of this ApplicationEntityList.
        :param key: The key of this ApplicationEntityList.
        :param last_used_at: The last_used_at of this ApplicationEntityList.
        :param type: The type of this ApplicationEntityList.
        :param updated_at: The updated_at of this ApplicationEntityList.
        :param url: The url of this ApplicationEntityList.
        :param user_id: The user_id of this ApplicationEntityList.
        :param user_key: The user_key of this ApplicationEntityList.
        """
        self.openapi_types = {
            'authorization': str,
            'company': Company,
            'created_at': datetime,
            'description': str,
            'key': str,
            'last_used_at': datetime,
            'type': str,
            'updated_at': datetime,
            'url': str,
            'user_id': int,
            'user_key': str
        }

        self.attribute_map = {
            'authorization': 'authorization',
            'company': 'company',
            'created_at': 'created_at',
            'description': 'description',
            'key': 'key',
            'last_used_at': 'last_used_at',
            'type': 'type',
            'updated_at': 'updated_at',
            'url': 'url',
            'user_id': 'user_id',
            'user_key': 'user_key'
        }

        self._authorization = authorization
        self._company = company
        self._created_at = created_at
        self._description = description
        self._key = key
        self._last_used_at = last_used_at
        self._type = type
        self._updated_at = updated_at
        self._url = url
        self._user_id = user_id
        self._user_key = user_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationEntityList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationEntityList of this ApplicationEntityList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authorization(self):
        """Gets the authorization of this ApplicationEntityList.

        Application authorization

        :return: The authorization of this ApplicationEntityList.
        :rtype: str
        """
        return self._authorization

    @authorization.setter
    def authorization(self, authorization):
        """Sets the authorization of this ApplicationEntityList.

        Application authorization

        :param authorization: The authorization of this ApplicationEntityList.
        :type authorization: str
        """

        self._authorization = authorization

    @property
    def company(self):
        """Gets the company of this ApplicationEntityList.


        :return: The company of this ApplicationEntityList.
        :rtype: Company
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this ApplicationEntityList.


        :param company: The company of this ApplicationEntityList.
        :type company: Company
        """

        self._company = company

    @property
    def created_at(self):
        """Gets the created_at of this ApplicationEntityList.

        Created At

        :return: The created_at of this ApplicationEntityList.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ApplicationEntityList.

        Created At

        :param created_at: The created_at of this ApplicationEntityList.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def description(self):
        """Gets the description of this ApplicationEntityList.

        Application description

        :return: The description of this ApplicationEntityList.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ApplicationEntityList.

        Application description

        :param description: The description of this ApplicationEntityList.
        :type description: str
        """

        self._description = description

    @property
    def key(self):
        """Gets the key of this ApplicationEntityList.

        Application key

        :return: The key of this ApplicationEntityList.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this ApplicationEntityList.

        Application key

        :param key: The key of this ApplicationEntityList.
        :type key: str
        """

        self._key = key

    @property
    def last_used_at(self):
        """Gets the last_used_at of this ApplicationEntityList.

        Last Used At

        :return: The last_used_at of this ApplicationEntityList.
        :rtype: datetime
        """
        return self._last_used_at

    @last_used_at.setter
    def last_used_at(self, last_used_at):
        """Sets the last_used_at of this ApplicationEntityList.

        Last Used At

        :param last_used_at: The last_used_at of this ApplicationEntityList.
        :type last_used_at: datetime
        """

        self._last_used_at = last_used_at

    @property
    def type(self):
        """Gets the type of this ApplicationEntityList.

        Application platform type

        :return: The type of this ApplicationEntityList.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ApplicationEntityList.

        Application platform type

        :param type: The type of this ApplicationEntityList.
        :type type: str
        """
        allowed_values = ["Bitrix24", "MicrosoftDynamics", "Vtiger", "ZohoCRM", "Salesforce", "SalesforceSandbox", "Solve360", "Highrise", "Insightly", "HubSpot", "PipelineDeals", "SugarCRM", "SuiteCRM", "CapsuleCRM", "Pipedrive", "Infusionsoft", "CloseIO", "BaseCRM", "Act", "AgileCRM", "ProsperWorks", "FreshSales", "Odoo", "GSuite", "ActPremiumWeb", "Marketo", "AmoCRM"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def updated_at(self):
        """Gets the updated_at of this ApplicationEntityList.

        Updated At

        :return: The updated_at of this ApplicationEntityList.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this ApplicationEntityList.

        Updated At

        :param updated_at: The updated_at of this ApplicationEntityList.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def url(self):
        """Gets the url of this ApplicationEntityList.

        Application URL

        :return: The url of this ApplicationEntityList.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ApplicationEntityList.

        Application URL

        :param url: The url of this ApplicationEntityList.
        :type url: str
        """

        self._url = url

    @property
    def user_id(self):
        """Gets the user_id of this ApplicationEntityList.

        User ID

        :return: The user_id of this ApplicationEntityList.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ApplicationEntityList.

        User ID

        :param user_id: The user_id of this ApplicationEntityList.
        :type user_id: int
        """

        self._user_id = user_id

    @property
    def user_key(self):
        """Gets the user_key of this ApplicationEntityList.

        User Key

        :return: The user_key of this ApplicationEntityList.
        :rtype: str
        """
        return self._user_key

    @user_key.setter
    def user_key(self, user_key):
        """Sets the user_key of this ApplicationEntityList.

        User Key

        :param user_key: The user_key of this ApplicationEntityList.
        :type user_key: str
        """

        self._user_key = user_key
