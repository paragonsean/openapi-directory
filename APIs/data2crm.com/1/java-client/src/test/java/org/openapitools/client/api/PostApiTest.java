/*
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Aggregate;
import org.openapitools.client.model.BulkEntity;
import org.openapitools.client.model.BulkEntityRelation;
import org.openapitools.client.model.Count;
import java.time.OffsetDateTime;
import org.openapitools.client.model.PostDescribe;
import org.openapitools.client.model.PostEntity;
import org.openapitools.client.model.PostEntityRelation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PostApi
 */
@Disabled
public class PostApiTest {

    private final PostApi api = new PostApi();

    /**
     * POST for post
     *
     * Add post into the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createPostEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        PostEntity body = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        PostEntityRelation response = api.createPostEntity(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, body, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

    /**
     * POST bulk  for post
     *
     * Add post into the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createPostEntityBulkTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        BulkEntity body = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        BulkEntityRelation response = api.createPostEntityBulk(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, body, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

    /**
     * DELETE bulk  for post
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePostCollectionBulkTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        BulkEntity body = null;
        BulkEntity response = api.deletePostCollectionBulk(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, body);
        // TODO: test validations
    }

    /**
     * DELETE for post
     *
     * Delete post information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePostEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String postId = null;
        api.deletePostEntity(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, postId);
        // TODO: test validations
    }

    /**
     * AGGREGATE for post
     *
     * Returns aggregate for posts
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPostAggregateTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        String filter = null;
        String pipeline = null;
        Aggregate response = api.getPostAggregate(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, X_API2CRM_DESCRIBE_LIFETIME, filter, pipeline);
        // TODO: test validations
    }

    /**
     * GET for post
     *
     * Returns all posts from the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPostCollectionTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        Integer pageSize = null;
        Integer page = null;
        String filter = null;
        String expand = null;
        String fields = null;
        String sort = null;
        String unique = null;
        List<PostEntity> response = api.getPostCollection(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, X_API2CRM_DESCRIBE_LIFETIME, pageSize, page, filter, expand, fields, sort, unique);
        // TODO: test validations
    }

    /**
     * COUNT for post
     *
     * Count all posts from the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPostCountCollectionTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String filter = null;
        Count response = api.getPostCountCollection(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, filter);
        // TODO: test validations
    }

    /**
     * DESCRIBE for post
     *
     * Returns describe for posts
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPostDescribeTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        PostDescribe response = api.getPostDescribe(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

    /**
     * GET for post
     *
     * Return post information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPostEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String postId = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        String expand = null;
        String fields = null;
        PostEntity response = api.getPostEntity(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, postId, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, X_API2CRM_DESCRIBE_LIFETIME, expand, fields);
        // TODO: test validations
    }

    /**
     * PUT for post
     *
     * Update post information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePostEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String postId = null;
        PostEntity body = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        PostEntityRelation response = api.updatePostEntity(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, postId, body, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

    /**
     * PUT bulk  for post
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePostEntityBulkTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        BulkEntity body = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        BulkEntityRelation response = api.updatePostEntityBulk(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, body, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

}
