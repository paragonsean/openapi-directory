/*
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Aggregate;
import org.openapitools.client.model.BulkEntity;
import org.openapitools.client.model.BulkEntityRelation;
import org.openapitools.client.model.Count;
import java.time.OffsetDateTime;
import org.openapitools.client.model.QuoteDescribe;
import org.openapitools.client.model.QuoteEntity;
import org.openapitools.client.model.QuoteEntityRelation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for QuoteApi
 */
@Disabled
public class QuoteApiTest {

    private final QuoteApi api = new QuoteApi();

    /**
     * POST for quote
     *
     * Add quote into the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createQuoteEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        QuoteEntity body = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        QuoteEntityRelation response = api.createQuoteEntity(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, body, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

    /**
     * POST bulk  for quote
     *
     * Add quote into the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createQuoteEntityBulkTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        BulkEntity body = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        BulkEntityRelation response = api.createQuoteEntityBulk(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, body, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

    /**
     * DELETE bulk  for quote
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteQuoteCollectionBulkTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        BulkEntity body = null;
        BulkEntity response = api.deleteQuoteCollectionBulk(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, body);
        // TODO: test validations
    }

    /**
     * DELETE for quote
     *
     * Delete quote information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteQuoteEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String quoteId = null;
        api.deleteQuoteEntity(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, quoteId);
        // TODO: test validations
    }

    /**
     * AGGREGATE for quote
     *
     * Returns aggregate for quotes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQuoteAggregateTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        String filter = null;
        String pipeline = null;
        Aggregate response = api.getQuoteAggregate(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, X_API2CRM_DESCRIBE_LIFETIME, filter, pipeline);
        // TODO: test validations
    }

    /**
     * GET for quote
     *
     * Returns all quotes from the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQuoteCollectionTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        Integer pageSize = null;
        Integer page = null;
        String filter = null;
        String expand = null;
        String fields = null;
        String sort = null;
        String unique = null;
        List<QuoteEntity> response = api.getQuoteCollection(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, X_API2CRM_DESCRIBE_LIFETIME, pageSize, page, filter, expand, fields, sort, unique);
        // TODO: test validations
    }

    /**
     * COUNT for quote
     *
     * Count all quotes from the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQuoteCountCollectionTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String filter = null;
        Count response = api.getQuoteCountCollection(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, filter);
        // TODO: test validations
    }

    /**
     * DESCRIBE for quote
     *
     * Returns describe for quotes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQuoteDescribeTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        QuoteDescribe response = api.getQuoteDescribe(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

    /**
     * GET for quote
     *
     * Return quote information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQuoteEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String quoteId = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        String expand = null;
        String fields = null;
        QuoteEntity response = api.getQuoteEntity(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, quoteId, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, X_API2CRM_DESCRIBE_LIFETIME, expand, fields);
        // TODO: test validations
    }

    /**
     * PUT for quote
     *
     * Update quote information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateQuoteEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String quoteId = null;
        QuoteEntity body = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        QuoteEntityRelation response = api.updateQuoteEntity(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, quoteId, body, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

    /**
     * PUT bulk  for quote
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateQuoteEntityBulkTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        BulkEntity body = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        BulkEntityRelation response = api.updateQuoteEntityBulk(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, body, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

}
