/*
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Aggregate;
import org.openapitools.client.model.BulkEntity;
import org.openapitools.client.model.BulkEntityRelation;
import org.openapitools.client.model.Count;
import org.openapitools.client.model.EmailDescribe;
import org.openapitools.client.model.EmailEntity;
import org.openapitools.client.model.EmailEntityRelation;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EmailApi
 */
@Disabled
public class EmailApiTest {

    private final EmailApi api = new EmailApi();

    /**
     * POST for email
     *
     * Add email into the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createEmailEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        EmailEntity body = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        EmailEntityRelation response = api.createEmailEntity(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, body, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

    /**
     * POST bulk  for email
     *
     * Add email into the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createEmailEntityBulkTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        BulkEntity body = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        BulkEntityRelation response = api.createEmailEntityBulk(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, body, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

    /**
     * DELETE bulk  for email
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteEmailCollectionBulkTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        BulkEntity body = null;
        BulkEntity response = api.deleteEmailCollectionBulk(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, body);
        // TODO: test validations
    }

    /**
     * DELETE for email
     *
     * Delete email information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteEmailEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String emailId = null;
        api.deleteEmailEntity(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, emailId);
        // TODO: test validations
    }

    /**
     * AGGREGATE for email
     *
     * Returns aggregate for emails
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEmailAggregateTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        String filter = null;
        String pipeline = null;
        Aggregate response = api.getEmailAggregate(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, X_API2CRM_DESCRIBE_LIFETIME, filter, pipeline);
        // TODO: test validations
    }

    /**
     * GET for email
     *
     * Returns all emails from the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEmailCollectionTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        Integer pageSize = null;
        Integer page = null;
        String filter = null;
        String expand = null;
        String fields = null;
        String sort = null;
        String unique = null;
        List<EmailEntity> response = api.getEmailCollection(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, X_API2CRM_DESCRIBE_LIFETIME, pageSize, page, filter, expand, fields, sort, unique);
        // TODO: test validations
    }

    /**
     * COUNT for email
     *
     * Count all emails from the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEmailCountCollectionTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String filter = null;
        Count response = api.getEmailCountCollection(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, filter);
        // TODO: test validations
    }

    /**
     * DESCRIBE for email
     *
     * Returns describe for emails
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEmailDescribeTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        EmailDescribe response = api.getEmailDescribe(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

    /**
     * GET for email
     *
     * Return email information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEmailEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String emailId = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        String expand = null;
        String fields = null;
        EmailEntity response = api.getEmailEntity(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, emailId, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, X_API2CRM_DESCRIBE_LIFETIME, expand, fields);
        // TODO: test validations
    }

    /**
     * PUT for email
     *
     * Update email information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateEmailEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String emailId = null;
        EmailEntity body = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        EmailEntityRelation response = api.updateEmailEntity(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, emailId, body, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

    /**
     * PUT bulk  for email
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateEmailEntityBulkTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        BulkEntity body = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        BulkEntityRelation response = api.updateEmailEntityBulk(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, body, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

}
