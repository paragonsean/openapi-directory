/*
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Aggregate;
import org.openapitools.client.model.BulkEntity;
import org.openapitools.client.model.BulkEntityRelation;
import org.openapitools.client.model.Count;
import java.time.OffsetDateTime;
import org.openapitools.client.model.TagDescribe;
import org.openapitools.client.model.TagEntity;
import org.openapitools.client.model.TagEntityRelation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TagApi
 */
@Disabled
public class TagApiTest {

    private final TagApi api = new TagApi();

    /**
     * POST for tag
     *
     * Add tag into the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTagEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        TagEntity body = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        TagEntityRelation response = api.createTagEntity(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, body, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

    /**
     * POST bulk  for tag
     *
     * Add tag into the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTagEntityBulkTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        BulkEntity body = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        BulkEntityRelation response = api.createTagEntityBulk(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, body, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

    /**
     * DELETE bulk  for tag
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTagCollectionBulkTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        BulkEntity body = null;
        BulkEntity response = api.deleteTagCollectionBulk(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, body);
        // TODO: test validations
    }

    /**
     * DELETE for tag
     *
     * Delete tag information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTagEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String tagId = null;
        api.deleteTagEntity(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, tagId);
        // TODO: test validations
    }

    /**
     * AGGREGATE for tag
     *
     * Returns aggregate for tags
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTagAggregateTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        String filter = null;
        String pipeline = null;
        Aggregate response = api.getTagAggregate(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, X_API2CRM_DESCRIBE_LIFETIME, filter, pipeline);
        // TODO: test validations
    }

    /**
     * GET for tag
     *
     * Returns all tags from the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTagCollectionTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        Integer pageSize = null;
        Integer page = null;
        String filter = null;
        String expand = null;
        String fields = null;
        String sort = null;
        String unique = null;
        List<TagEntity> response = api.getTagCollection(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, X_API2CRM_DESCRIBE_LIFETIME, pageSize, page, filter, expand, fields, sort, unique);
        // TODO: test validations
    }

    /**
     * COUNT for tag
     *
     * Count all tags from the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTagCountCollectionTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String filter = null;
        Count response = api.getTagCountCollection(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, filter);
        // TODO: test validations
    }

    /**
     * DESCRIBE for tag
     *
     * Returns describe for tags
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTagDescribeTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        TagDescribe response = api.getTagDescribe(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

    /**
     * GET for tag
     *
     * Return tag information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTagEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String tagId = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DATA_ENABLE = null;
        String X_API2CRM_DATA_BUILD = null;
        String X_API2CRM_DATA_IS_FINAL = null;
        String X_API2CRM_DATA_STRATEGY = null;
        String X_API2CRM_DATA_COHERENT_ENTITIES = null;
        String X_API2CRM_DATA_ALWAYS_ACTUAL = null;
        OffsetDateTime X_API2CRM_DATA_ACTUAL_AT = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        String expand = null;
        String fields = null;
        TagEntity response = api.getTagEntity(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, tagId, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DATA_ENABLE, X_API2CRM_DATA_BUILD, X_API2CRM_DATA_IS_FINAL, X_API2CRM_DATA_STRATEGY, X_API2CRM_DATA_COHERENT_ENTITIES, X_API2CRM_DATA_ALWAYS_ACTUAL, X_API2CRM_DATA_ACTUAL_AT, X_API2CRM_DESCRIBE_LIFETIME, expand, fields);
        // TODO: test validations
    }

    /**
     * PUT for tag
     *
     * Update tag information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTagEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String tagId = null;
        TagEntity body = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        TagEntityRelation response = api.updateTagEntity(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, tagId, body, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

    /**
     * PUT bulk  for tag
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTagEntityBulkTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        BulkEntity body = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        BulkEntityRelation response = api.updateTagEntityBulk(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, body, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DESCRIBE_LIFETIME);
        // TODO: test validations
    }

}
