/*
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Count;
import org.openapitools.client.model.InternalUserEntity;
import org.openapitools.client.model.InternalUserEntityRelation;
import java.time.LocalDate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InternalUserApi
 */
@Disabled
public class InternalUserApiTest {

    private final InternalUserApi api = new InternalUserApi();

    /**
     * POST for internalUser
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createInternalUserEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        InternalUserEntity body = null;
        InternalUserEntityRelation response = api.createInternalUserEntity(X_API2CRM_USER_KEY, body);
        // TODO: test validations
    }

    /**
     * DELETE for internalUser
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteInternalUserEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String internalUserId = null;
        api.deleteInternalUserEntity(X_API2CRM_USER_KEY, internalUserId);
        // TODO: test validations
    }

    /**
     * GET for internalUser
     *
     * Returns all internal users from the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInternalUserCollectionTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        Integer pageSize = null;
        Integer page = null;
        String filter = null;
        String fields = null;
        String sort = null;
        LocalDate applicationRequestStart = null;
        LocalDate applicationRequestEnd = null;
        List<InternalUserEntity> response = api.getInternalUserCollection(X_API2CRM_USER_KEY, pageSize, page, filter, fields, sort, applicationRequestStart, applicationRequestEnd);
        // TODO: test validations
    }

    /**
     * COUNT for internalUser
     *
     * Count all internal users from the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInternalUserCountCollectionTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String filter = null;
        Count response = api.getInternalUserCountCollection(X_API2CRM_USER_KEY, filter);
        // TODO: test validations
    }

    /**
     * GET for internalUser
     *
     * Return internal user information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInternalUserEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String internalUserId = null;
        String fields = null;
        LocalDate applicationRequestStart = null;
        LocalDate applicationRequestEnd = null;
        InternalUserEntity response = api.getInternalUserEntity(X_API2CRM_USER_KEY, internalUserId, fields, applicationRequestStart, applicationRequestEnd);
        // TODO: test validations
    }

    /**
     * PUT for internalUser
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateInternalUserEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String internalUserId = null;
        InternalUserEntity body = null;
        InternalUserEntityRelation response = api.updateInternalUserEntity(X_API2CRM_USER_KEY, internalUserId, body);
        // TODO: test validations
    }

}
