/*
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Count;
import org.openapitools.client.model.EntityEntity;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EntityApi
 */
@Disabled
public class EntityApiTest {

    private final EntityApi api = new EntityApi();

    /**
     * GET for entity
     *
     * Returns all entities from the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEntityCollectionTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        Integer pageSize = null;
        Integer page = null;
        String filter = null;
        String fields = null;
        List<EntityEntity> response = api.getEntityCollection(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DESCRIBE_LIFETIME, pageSize, page, filter, fields);
        // TODO: test validations
    }

    /**
     * COUNT for entity
     *
     * Count all entities from the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEntityCountCollectionTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        Count response = api.getEntityCountCollection(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY);
        // TODO: test validations
    }

    /**
     * GET for entity
     *
     * Return entity information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEntityEntityTest() throws ApiException {
        String X_API2CRM_USER_KEY = null;
        String X_API2CRM_APPLICATION_KEY = null;
        String entityId = null;
        String X_API2CRM_NATIVE_ENABLE = null;
        String X_API2CRM_DESCRIBE_LIFETIME = null;
        String fields = null;
        EntityEntity response = api.getEntityEntity(X_API2CRM_USER_KEY, X_API2CRM_APPLICATION_KEY, entityId, X_API2CRM_NATIVE_ENABLE, X_API2CRM_DESCRIBE_LIFETIME, fields);
        // TODO: test validations
    }

}
