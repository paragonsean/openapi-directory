/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Data2CrmApi);
  }
}(this, function(expect, Data2CrmApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Data2CrmApi.CampaignApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CampaignApi', function() {
    describe('createCampaignEntity', function() {
      it('should call createCampaignEntity successfully', function(done) {
        //uncomment below and update the code to test createCampaignEntity
        //instance.createCampaignEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCampaignEntityBulk', function() {
      it('should call createCampaignEntityBulk successfully', function(done) {
        //uncomment below and update the code to test createCampaignEntityBulk
        //instance.createCampaignEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCampaignCollectionBulk', function() {
      it('should call deleteCampaignCollectionBulk successfully', function(done) {
        //uncomment below and update the code to test deleteCampaignCollectionBulk
        //instance.deleteCampaignCollectionBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCampaignEntity', function() {
      it('should call deleteCampaignEntity successfully', function(done) {
        //uncomment below and update the code to test deleteCampaignEntity
        //instance.deleteCampaignEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCampaignAggregate', function() {
      it('should call getCampaignAggregate successfully', function(done) {
        //uncomment below and update the code to test getCampaignAggregate
        //instance.getCampaignAggregate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCampaignCollection', function() {
      it('should call getCampaignCollection successfully', function(done) {
        //uncomment below and update the code to test getCampaignCollection
        //instance.getCampaignCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCampaignCountCollection', function() {
      it('should call getCampaignCountCollection successfully', function(done) {
        //uncomment below and update the code to test getCampaignCountCollection
        //instance.getCampaignCountCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCampaignDescribe', function() {
      it('should call getCampaignDescribe successfully', function(done) {
        //uncomment below and update the code to test getCampaignDescribe
        //instance.getCampaignDescribe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCampaignEntity', function() {
      it('should call getCampaignEntity successfully', function(done) {
        //uncomment below and update the code to test getCampaignEntity
        //instance.getCampaignEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCampaignEntity', function() {
      it('should call updateCampaignEntity successfully', function(done) {
        //uncomment below and update the code to test updateCampaignEntity
        //instance.updateCampaignEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCampaignEntityBulk', function() {
      it('should call updateCampaignEntityBulk successfully', function(done) {
        //uncomment below and update the code to test updateCampaignEntityBulk
        //instance.updateCampaignEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
