/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Data2CrmApi);
  }
}(this, function(expect, Data2CrmApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Data2CrmApi.AttachmentApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AttachmentApi', function() {
    describe('createAttachmentEntity', function() {
      it('should call createAttachmentEntity successfully', function(done) {
        //uncomment below and update the code to test createAttachmentEntity
        //instance.createAttachmentEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAttachmentEntityBulk', function() {
      it('should call createAttachmentEntityBulk successfully', function(done) {
        //uncomment below and update the code to test createAttachmentEntityBulk
        //instance.createAttachmentEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAttachmentCollectionBulk', function() {
      it('should call deleteAttachmentCollectionBulk successfully', function(done) {
        //uncomment below and update the code to test deleteAttachmentCollectionBulk
        //instance.deleteAttachmentCollectionBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAttachmentEntity', function() {
      it('should call deleteAttachmentEntity successfully', function(done) {
        //uncomment below and update the code to test deleteAttachmentEntity
        //instance.deleteAttachmentEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttachmentAggregate', function() {
      it('should call getAttachmentAggregate successfully', function(done) {
        //uncomment below and update the code to test getAttachmentAggregate
        //instance.getAttachmentAggregate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttachmentCollection', function() {
      it('should call getAttachmentCollection successfully', function(done) {
        //uncomment below and update the code to test getAttachmentCollection
        //instance.getAttachmentCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttachmentCountCollection', function() {
      it('should call getAttachmentCountCollection successfully', function(done) {
        //uncomment below and update the code to test getAttachmentCountCollection
        //instance.getAttachmentCountCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttachmentDescribe', function() {
      it('should call getAttachmentDescribe successfully', function(done) {
        //uncomment below and update the code to test getAttachmentDescribe
        //instance.getAttachmentDescribe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttachmentEntity', function() {
      it('should call getAttachmentEntity successfully', function(done) {
        //uncomment below and update the code to test getAttachmentEntity
        //instance.getAttachmentEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAttachmentEntity', function() {
      it('should call updateAttachmentEntity successfully', function(done) {
        //uncomment below and update the code to test updateAttachmentEntity
        //instance.updateAttachmentEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAttachmentEntityBulk', function() {
      it('should call updateAttachmentEntityBulk successfully', function(done) {
        //uncomment below and update the code to test updateAttachmentEntityBulk
        //instance.updateAttachmentEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
