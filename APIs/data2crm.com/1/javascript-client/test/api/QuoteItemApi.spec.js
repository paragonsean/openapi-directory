/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Data2CrmApi);
  }
}(this, function(expect, Data2CrmApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Data2CrmApi.QuoteItemApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('QuoteItemApi', function() {
    describe('createQuoteItemEntity', function() {
      it('should call createQuoteItemEntity successfully', function(done) {
        //uncomment below and update the code to test createQuoteItemEntity
        //instance.createQuoteItemEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createQuoteItemEntityBulk', function() {
      it('should call createQuoteItemEntityBulk successfully', function(done) {
        //uncomment below and update the code to test createQuoteItemEntityBulk
        //instance.createQuoteItemEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteQuoteItemCollectionBulk', function() {
      it('should call deleteQuoteItemCollectionBulk successfully', function(done) {
        //uncomment below and update the code to test deleteQuoteItemCollectionBulk
        //instance.deleteQuoteItemCollectionBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteQuoteItemEntity', function() {
      it('should call deleteQuoteItemEntity successfully', function(done) {
        //uncomment below and update the code to test deleteQuoteItemEntity
        //instance.deleteQuoteItemEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQuoteItemAggregate', function() {
      it('should call getQuoteItemAggregate successfully', function(done) {
        //uncomment below and update the code to test getQuoteItemAggregate
        //instance.getQuoteItemAggregate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQuoteItemCollection', function() {
      it('should call getQuoteItemCollection successfully', function(done) {
        //uncomment below and update the code to test getQuoteItemCollection
        //instance.getQuoteItemCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQuoteItemCountCollection', function() {
      it('should call getQuoteItemCountCollection successfully', function(done) {
        //uncomment below and update the code to test getQuoteItemCountCollection
        //instance.getQuoteItemCountCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQuoteItemDescribe', function() {
      it('should call getQuoteItemDescribe successfully', function(done) {
        //uncomment below and update the code to test getQuoteItemDescribe
        //instance.getQuoteItemDescribe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQuoteItemEntity', function() {
      it('should call getQuoteItemEntity successfully', function(done) {
        //uncomment below and update the code to test getQuoteItemEntity
        //instance.getQuoteItemEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateQuoteItemEntity', function() {
      it('should call updateQuoteItemEntity successfully', function(done) {
        //uncomment below and update the code to test updateQuoteItemEntity
        //instance.updateQuoteItemEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateQuoteItemEntityBulk', function() {
      it('should call updateQuoteItemEntityBulk successfully', function(done) {
        //uncomment below and update the code to test updateQuoteItemEntityBulk
        //instance.updateQuoteItemEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
