/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Data2CrmApi);
  }
}(this, function(expect, Data2CrmApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Data2CrmApi.EntityItemApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EntityItemApi', function() {
    describe('createEntityItemEntity', function() {
      it('should call createEntityItemEntity successfully', function(done) {
        //uncomment below and update the code to test createEntityItemEntity
        //instance.createEntityItemEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEntityItemEntityBulk', function() {
      it('should call createEntityItemEntityBulk successfully', function(done) {
        //uncomment below and update the code to test createEntityItemEntityBulk
        //instance.createEntityItemEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEntityItemCollectionBulk', function() {
      it('should call deleteEntityItemCollectionBulk successfully', function(done) {
        //uncomment below and update the code to test deleteEntityItemCollectionBulk
        //instance.deleteEntityItemCollectionBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEntityItemEntity', function() {
      it('should call deleteEntityItemEntity successfully', function(done) {
        //uncomment below and update the code to test deleteEntityItemEntity
        //instance.deleteEntityItemEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEntityItemAggregate', function() {
      it('should call getEntityItemAggregate successfully', function(done) {
        //uncomment below and update the code to test getEntityItemAggregate
        //instance.getEntityItemAggregate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEntityItemCollection', function() {
      it('should call getEntityItemCollection successfully', function(done) {
        //uncomment below and update the code to test getEntityItemCollection
        //instance.getEntityItemCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEntityItemCountCollection', function() {
      it('should call getEntityItemCountCollection successfully', function(done) {
        //uncomment below and update the code to test getEntityItemCountCollection
        //instance.getEntityItemCountCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEntityItemDescribe', function() {
      it('should call getEntityItemDescribe successfully', function(done) {
        //uncomment below and update the code to test getEntityItemDescribe
        //instance.getEntityItemDescribe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEntityItemEntity', function() {
      it('should call getEntityItemEntity successfully', function(done) {
        //uncomment below and update the code to test getEntityItemEntity
        //instance.getEntityItemEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateEntityItemEntity', function() {
      it('should call updateEntityItemEntity successfully', function(done) {
        //uncomment below and update the code to test updateEntityItemEntity
        //instance.updateEntityItemEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateEntityItemEntityBulk', function() {
      it('should call updateEntityItemEntityBulk successfully', function(done) {
        //uncomment below and update the code to test updateEntityItemEntityBulk
        //instance.updateEntityItemEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
