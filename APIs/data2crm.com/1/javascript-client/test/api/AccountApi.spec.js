/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Data2CrmApi);
  }
}(this, function(expect, Data2CrmApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Data2CrmApi.AccountApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccountApi', function() {
    describe('createAccountEntity', function() {
      it('should call createAccountEntity successfully', function(done) {
        //uncomment below and update the code to test createAccountEntity
        //instance.createAccountEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAccountEntityBulk', function() {
      it('should call createAccountEntityBulk successfully', function(done) {
        //uncomment below and update the code to test createAccountEntityBulk
        //instance.createAccountEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAccountCollectionBulk', function() {
      it('should call deleteAccountCollectionBulk successfully', function(done) {
        //uncomment below and update the code to test deleteAccountCollectionBulk
        //instance.deleteAccountCollectionBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAccountEntity', function() {
      it('should call deleteAccountEntity successfully', function(done) {
        //uncomment below and update the code to test deleteAccountEntity
        //instance.deleteAccountEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountAggregate', function() {
      it('should call getAccountAggregate successfully', function(done) {
        //uncomment below and update the code to test getAccountAggregate
        //instance.getAccountAggregate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountCollection', function() {
      it('should call getAccountCollection successfully', function(done) {
        //uncomment below and update the code to test getAccountCollection
        //instance.getAccountCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountCountCollection', function() {
      it('should call getAccountCountCollection successfully', function(done) {
        //uncomment below and update the code to test getAccountCountCollection
        //instance.getAccountCountCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountDescribe', function() {
      it('should call getAccountDescribe successfully', function(done) {
        //uncomment below and update the code to test getAccountDescribe
        //instance.getAccountDescribe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountEntity', function() {
      it('should call getAccountEntity successfully', function(done) {
        //uncomment below and update the code to test getAccountEntity
        //instance.getAccountEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAccountEntity', function() {
      it('should call updateAccountEntity successfully', function(done) {
        //uncomment below and update the code to test updateAccountEntity
        //instance.updateAccountEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAccountEntityBulk', function() {
      it('should call updateAccountEntityBulk successfully', function(done) {
        //uncomment below and update the code to test updateAccountEntityBulk
        //instance.updateAccountEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
