/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Data2CrmApi);
  }
}(this, function(expect, Data2CrmApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Data2CrmApi.PriceBookItemApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PriceBookItemApi', function() {
    describe('createPriceBookItemEntity', function() {
      it('should call createPriceBookItemEntity successfully', function(done) {
        //uncomment below and update the code to test createPriceBookItemEntity
        //instance.createPriceBookItemEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPriceBookItemEntityBulk', function() {
      it('should call createPriceBookItemEntityBulk successfully', function(done) {
        //uncomment below and update the code to test createPriceBookItemEntityBulk
        //instance.createPriceBookItemEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePriceBookItemCollectionBulk', function() {
      it('should call deletePriceBookItemCollectionBulk successfully', function(done) {
        //uncomment below and update the code to test deletePriceBookItemCollectionBulk
        //instance.deletePriceBookItemCollectionBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePriceBookItemEntity', function() {
      it('should call deletePriceBookItemEntity successfully', function(done) {
        //uncomment below and update the code to test deletePriceBookItemEntity
        //instance.deletePriceBookItemEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPriceBookItemAggregate', function() {
      it('should call getPriceBookItemAggregate successfully', function(done) {
        //uncomment below and update the code to test getPriceBookItemAggregate
        //instance.getPriceBookItemAggregate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPriceBookItemCollection', function() {
      it('should call getPriceBookItemCollection successfully', function(done) {
        //uncomment below and update the code to test getPriceBookItemCollection
        //instance.getPriceBookItemCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPriceBookItemCountCollection', function() {
      it('should call getPriceBookItemCountCollection successfully', function(done) {
        //uncomment below and update the code to test getPriceBookItemCountCollection
        //instance.getPriceBookItemCountCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPriceBookItemDescribe', function() {
      it('should call getPriceBookItemDescribe successfully', function(done) {
        //uncomment below and update the code to test getPriceBookItemDescribe
        //instance.getPriceBookItemDescribe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPriceBookItemEntity', function() {
      it('should call getPriceBookItemEntity successfully', function(done) {
        //uncomment below and update the code to test getPriceBookItemEntity
        //instance.getPriceBookItemEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePriceBookItemEntity', function() {
      it('should call updatePriceBookItemEntity successfully', function(done) {
        //uncomment below and update the code to test updatePriceBookItemEntity
        //instance.updatePriceBookItemEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePriceBookItemEntityBulk', function() {
      it('should call updatePriceBookItemEntityBulk successfully', function(done) {
        //uncomment below and update the code to test updatePriceBookItemEntityBulk
        //instance.updatePriceBookItemEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
