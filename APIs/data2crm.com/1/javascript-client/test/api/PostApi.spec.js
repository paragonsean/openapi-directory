/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Data2CrmApi);
  }
}(this, function(expect, Data2CrmApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Data2CrmApi.PostApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PostApi', function() {
    describe('createPostEntity', function() {
      it('should call createPostEntity successfully', function(done) {
        //uncomment below and update the code to test createPostEntity
        //instance.createPostEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPostEntityBulk', function() {
      it('should call createPostEntityBulk successfully', function(done) {
        //uncomment below and update the code to test createPostEntityBulk
        //instance.createPostEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePostCollectionBulk', function() {
      it('should call deletePostCollectionBulk successfully', function(done) {
        //uncomment below and update the code to test deletePostCollectionBulk
        //instance.deletePostCollectionBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePostEntity', function() {
      it('should call deletePostEntity successfully', function(done) {
        //uncomment below and update the code to test deletePostEntity
        //instance.deletePostEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPostAggregate', function() {
      it('should call getPostAggregate successfully', function(done) {
        //uncomment below and update the code to test getPostAggregate
        //instance.getPostAggregate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPostCollection', function() {
      it('should call getPostCollection successfully', function(done) {
        //uncomment below and update the code to test getPostCollection
        //instance.getPostCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPostCountCollection', function() {
      it('should call getPostCountCollection successfully', function(done) {
        //uncomment below and update the code to test getPostCountCollection
        //instance.getPostCountCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPostDescribe', function() {
      it('should call getPostDescribe successfully', function(done) {
        //uncomment below and update the code to test getPostDescribe
        //instance.getPostDescribe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPostEntity', function() {
      it('should call getPostEntity successfully', function(done) {
        //uncomment below and update the code to test getPostEntity
        //instance.getPostEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePostEntity', function() {
      it('should call updatePostEntity successfully', function(done) {
        //uncomment below and update the code to test updatePostEntity
        //instance.updatePostEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePostEntityBulk', function() {
      it('should call updatePostEntityBulk successfully', function(done) {
        //uncomment below and update the code to test updatePostEntityBulk
        //instance.updatePostEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
