/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Data2CrmApi);
  }
}(this, function(expect, Data2CrmApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Data2CrmApi.PriceBookApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PriceBookApi', function() {
    describe('createPriceBookEntity', function() {
      it('should call createPriceBookEntity successfully', function(done) {
        //uncomment below and update the code to test createPriceBookEntity
        //instance.createPriceBookEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPriceBookEntityBulk', function() {
      it('should call createPriceBookEntityBulk successfully', function(done) {
        //uncomment below and update the code to test createPriceBookEntityBulk
        //instance.createPriceBookEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePriceBookCollectionBulk', function() {
      it('should call deletePriceBookCollectionBulk successfully', function(done) {
        //uncomment below and update the code to test deletePriceBookCollectionBulk
        //instance.deletePriceBookCollectionBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePriceBookEntity', function() {
      it('should call deletePriceBookEntity successfully', function(done) {
        //uncomment below and update the code to test deletePriceBookEntity
        //instance.deletePriceBookEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPriceBookAggregate', function() {
      it('should call getPriceBookAggregate successfully', function(done) {
        //uncomment below and update the code to test getPriceBookAggregate
        //instance.getPriceBookAggregate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPriceBookCollection', function() {
      it('should call getPriceBookCollection successfully', function(done) {
        //uncomment below and update the code to test getPriceBookCollection
        //instance.getPriceBookCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPriceBookCountCollection', function() {
      it('should call getPriceBookCountCollection successfully', function(done) {
        //uncomment below and update the code to test getPriceBookCountCollection
        //instance.getPriceBookCountCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPriceBookDescribe', function() {
      it('should call getPriceBookDescribe successfully', function(done) {
        //uncomment below and update the code to test getPriceBookDescribe
        //instance.getPriceBookDescribe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPriceBookEntity', function() {
      it('should call getPriceBookEntity successfully', function(done) {
        //uncomment below and update the code to test getPriceBookEntity
        //instance.getPriceBookEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePriceBookEntity', function() {
      it('should call updatePriceBookEntity successfully', function(done) {
        //uncomment below and update the code to test updatePriceBookEntity
        //instance.updatePriceBookEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePriceBookEntityBulk', function() {
      it('should call updatePriceBookEntityBulk successfully', function(done) {
        //uncomment below and update the code to test updatePriceBookEntityBulk
        //instance.updatePriceBookEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
