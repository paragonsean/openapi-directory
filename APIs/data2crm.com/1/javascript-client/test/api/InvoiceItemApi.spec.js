/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Data2CrmApi);
  }
}(this, function(expect, Data2CrmApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Data2CrmApi.InvoiceItemApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InvoiceItemApi', function() {
    describe('createInvoiceItemEntity', function() {
      it('should call createInvoiceItemEntity successfully', function(done) {
        //uncomment below and update the code to test createInvoiceItemEntity
        //instance.createInvoiceItemEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createInvoiceItemEntityBulk', function() {
      it('should call createInvoiceItemEntityBulk successfully', function(done) {
        //uncomment below and update the code to test createInvoiceItemEntityBulk
        //instance.createInvoiceItemEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteInvoiceItemCollectionBulk', function() {
      it('should call deleteInvoiceItemCollectionBulk successfully', function(done) {
        //uncomment below and update the code to test deleteInvoiceItemCollectionBulk
        //instance.deleteInvoiceItemCollectionBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteInvoiceItemEntity', function() {
      it('should call deleteInvoiceItemEntity successfully', function(done) {
        //uncomment below and update the code to test deleteInvoiceItemEntity
        //instance.deleteInvoiceItemEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInvoiceItemAggregate', function() {
      it('should call getInvoiceItemAggregate successfully', function(done) {
        //uncomment below and update the code to test getInvoiceItemAggregate
        //instance.getInvoiceItemAggregate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInvoiceItemCollection', function() {
      it('should call getInvoiceItemCollection successfully', function(done) {
        //uncomment below and update the code to test getInvoiceItemCollection
        //instance.getInvoiceItemCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInvoiceItemCountCollection', function() {
      it('should call getInvoiceItemCountCollection successfully', function(done) {
        //uncomment below and update the code to test getInvoiceItemCountCollection
        //instance.getInvoiceItemCountCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInvoiceItemDescribe', function() {
      it('should call getInvoiceItemDescribe successfully', function(done) {
        //uncomment below and update the code to test getInvoiceItemDescribe
        //instance.getInvoiceItemDescribe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInvoiceItemEntity', function() {
      it('should call getInvoiceItemEntity successfully', function(done) {
        //uncomment below and update the code to test getInvoiceItemEntity
        //instance.getInvoiceItemEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateInvoiceItemEntity', function() {
      it('should call updateInvoiceItemEntity successfully', function(done) {
        //uncomment below and update the code to test updateInvoiceItemEntity
        //instance.updateInvoiceItemEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateInvoiceItemEntityBulk', function() {
      it('should call updateInvoiceItemEntityBulk successfully', function(done) {
        //uncomment below and update the code to test updateInvoiceItemEntityBulk
        //instance.updateInvoiceItemEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
