/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Data2CrmApi);
  }
}(this, function(expect, Data2CrmApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Data2CrmApi.InvoiceApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InvoiceApi', function() {
    describe('createInvoiceEntity', function() {
      it('should call createInvoiceEntity successfully', function(done) {
        //uncomment below and update the code to test createInvoiceEntity
        //instance.createInvoiceEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createInvoiceEntityBulk', function() {
      it('should call createInvoiceEntityBulk successfully', function(done) {
        //uncomment below and update the code to test createInvoiceEntityBulk
        //instance.createInvoiceEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteInvoiceCollectionBulk', function() {
      it('should call deleteInvoiceCollectionBulk successfully', function(done) {
        //uncomment below and update the code to test deleteInvoiceCollectionBulk
        //instance.deleteInvoiceCollectionBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteInvoiceEntity', function() {
      it('should call deleteInvoiceEntity successfully', function(done) {
        //uncomment below and update the code to test deleteInvoiceEntity
        //instance.deleteInvoiceEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInvoiceAggregate', function() {
      it('should call getInvoiceAggregate successfully', function(done) {
        //uncomment below and update the code to test getInvoiceAggregate
        //instance.getInvoiceAggregate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInvoiceCollection', function() {
      it('should call getInvoiceCollection successfully', function(done) {
        //uncomment below and update the code to test getInvoiceCollection
        //instance.getInvoiceCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInvoiceCountCollection', function() {
      it('should call getInvoiceCountCollection successfully', function(done) {
        //uncomment below and update the code to test getInvoiceCountCollection
        //instance.getInvoiceCountCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInvoiceDescribe', function() {
      it('should call getInvoiceDescribe successfully', function(done) {
        //uncomment below and update the code to test getInvoiceDescribe
        //instance.getInvoiceDescribe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInvoiceEntity', function() {
      it('should call getInvoiceEntity successfully', function(done) {
        //uncomment below and update the code to test getInvoiceEntity
        //instance.getInvoiceEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateInvoiceEntity', function() {
      it('should call updateInvoiceEntity successfully', function(done) {
        //uncomment below and update the code to test updateInvoiceEntity
        //instance.updateInvoiceEntity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateInvoiceEntityBulk', function() {
      it('should call updateInvoiceEntityBulk successfully', function(done) {
        //uncomment below and update the code to test updateInvoiceEntityBulk
        //instance.updateInvoiceEntityBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
