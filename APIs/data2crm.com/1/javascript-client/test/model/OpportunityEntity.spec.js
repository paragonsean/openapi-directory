/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Data2CrmApi);
  }
}(this, function(expect, Data2CrmApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Data2CrmApi.OpportunityEntity();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OpportunityEntity', function() {
    it('should create an instance of OpportunityEntity', function() {
      // uncomment below and update the code to test OpportunityEntity
      //var instance = new Data2CrmApi.OpportunityEntity();
      //expect(instance).to.be.a(Data2CrmApi.OpportunityEntity);
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instance = new Data2CrmApi.OpportunityEntity();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new Data2CrmApi.OpportunityEntity();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new Data2CrmApi.OpportunityEntity();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new Data2CrmApi.OpportunityEntity();
      //expect(instance).to.be();
    });

    it('should have the property endedAt (base name: "ended_at")', function() {
      // uncomment below and update the code to test the property endedAt
      //var instance = new Data2CrmApi.OpportunityEntity();
      //expect(instance).to.be();
    });

    it('should have the property expectedAmount (base name: "expected_amount")', function() {
      // uncomment below and update the code to test the property expectedAmount
      //var instance = new Data2CrmApi.OpportunityEntity();
      //expect(instance).to.be();
    });

    it('should have the property expectedEndAt (base name: "expected_end_at")', function() {
      // uncomment below and update the code to test the property expectedEndAt
      //var instance = new Data2CrmApi.OpportunityEntity();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new Data2CrmApi.OpportunityEntity();
      //expect(instance).to.be();
    });

    it('should have the property leadSource (base name: "lead_source")', function() {
      // uncomment below and update the code to test the property leadSource
      //var instance = new Data2CrmApi.OpportunityEntity();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new Data2CrmApi.OpportunityEntity();
      //expect(instance).to.be();
    });

    it('should have the property nextStep (base name: "next_step")', function() {
      // uncomment below and update the code to test the property nextStep
      //var instance = new Data2CrmApi.OpportunityEntity();
      //expect(instance).to.be();
    });

    it('should have the property pipelineWithStage (base name: "pipeline_with_stage")', function() {
      // uncomment below and update the code to test the property pipelineWithStage
      //var instance = new Data2CrmApi.OpportunityEntity();
      //expect(instance).to.be();
    });

    it('should have the property probability (base name: "probability")', function() {
      // uncomment below and update the code to test the property probability
      //var instance = new Data2CrmApi.OpportunityEntity();
      //expect(instance).to.be();
    });

    it('should have the property relation (base name: "relation")', function() {
      // uncomment below and update the code to test the property relation
      //var instance = new Data2CrmApi.OpportunityEntity();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new Data2CrmApi.OpportunityEntity();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new Data2CrmApi.OpportunityEntity();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new Data2CrmApi.OpportunityEntity();
      //expect(instance).to.be();
    });

  });

}));
