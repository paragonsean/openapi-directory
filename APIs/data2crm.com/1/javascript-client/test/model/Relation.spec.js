/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Data2CrmApi);
  }
}(this, function(expect, Data2CrmApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Data2CrmApi.Relation();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Relation', function() {
    it('should create an instance of Relation', function() {
      // uncomment below and update the code to test Relation
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be.a(Data2CrmApi.Relation);
    });

    it('should have the property account (base name: "account")', function() {
      // uncomment below and update the code to test the property account
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property attachment (base name: "attachment")', function() {
      // uncomment below and update the code to test the property attachment
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property call (base name: "call")', function() {
      // uncomment below and update the code to test the property call
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property campaign (base name: "campaign")', function() {
      // uncomment below and update the code to test the property campaign
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property _case (base name: "case")', function() {
      // uncomment below and update the code to test the property _case
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property comment (base name: "comment")', function() {
      // uncomment below and update the code to test the property comment
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property contact (base name: "contact")', function() {
      // uncomment below and update the code to test the property contact
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property event (base name: "event")', function() {
      // uncomment below and update the code to test the property event
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property invoice (base name: "invoice")', function() {
      // uncomment below and update the code to test the property invoice
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property invoiceItem (base name: "invoiceItem")', function() {
      // uncomment below and update the code to test the property invoiceItem
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property lead (base name: "lead")', function() {
      // uncomment below and update the code to test the property lead
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property meeting (base name: "meeting")', function() {
      // uncomment below and update the code to test the property meeting
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property note (base name: "note")', function() {
      // uncomment below and update the code to test the property note
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property opportunity (base name: "opportunity")', function() {
      // uncomment below and update the code to test the property opportunity
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property opportunityProduct (base name: "opportunityProduct")', function() {
      // uncomment below and update the code to test the property opportunityProduct
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property post (base name: "post")', function() {
      // uncomment below and update the code to test the property post
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property priceBook (base name: "priceBook")', function() {
      // uncomment below and update the code to test the property priceBook
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property priceBookItem (base name: "priceBookItem")', function() {
      // uncomment below and update the code to test the property priceBookItem
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property product (base name: "product")', function() {
      // uncomment below and update the code to test the property product
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property project (base name: "project")', function() {
      // uncomment below and update the code to test the property project
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property quote (base name: "quote")', function() {
      // uncomment below and update the code to test the property quote
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property quoteItem (base name: "quoteItem")', function() {
      // uncomment below and update the code to test the property quoteItem
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property tag (base name: "tag")', function() {
      // uncomment below and update the code to test the property tag
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property task (base name: "task")', function() {
      // uncomment below and update the code to test the property task
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property ticket (base name: "ticket")', function() {
      // uncomment below and update the code to test the property ticket
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

    it('should have the property user (base name: "user")', function() {
      // uncomment below and update the code to test the property user
      //var instance = new Data2CrmApi.Relation();
      //expect(instance).to.be();
    });

  });

}));
