/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Data2CrmApi);
  }
}(this, function(expect, Data2CrmApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Data2CrmApi.ProductEntity();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductEntity', function() {
    it('should create an instance of ProductEntity', function() {
      // uncomment below and update the code to test ProductEntity
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be.a(Data2CrmApi.ProductEntity);
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property code (base name: "code")', function() {
      // uncomment below and update the code to test the property code
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property cost (base name: "cost")', function() {
      // uncomment below and update the code to test the property cost
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property image (base name: "image")', function() {
      // uncomment below and update the code to test the property image
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property isActive (base name: "is_active")', function() {
      // uncomment below and update the code to test the property isActive
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property isTaxable (base name: "is_taxable")', function() {
      // uncomment below and update the code to test the property isTaxable
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property manufacturer (base name: "manufacturer")', function() {
      // uncomment below and update the code to test the property manufacturer
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property quantityInDemand (base name: "quantity_in_demand")', function() {
      // uncomment below and update the code to test the property quantityInDemand
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property quantityInStock (base name: "quantity_in_stock")', function() {
      // uncomment below and update the code to test the property quantityInStock
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property relation (base name: "relation")', function() {
      // uncomment below and update the code to test the property relation
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property reorderLevel (base name: "reorder_level")', function() {
      // uncomment below and update the code to test the property reorderLevel
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property salesEndedAt (base name: "sales_ended_at")', function() {
      // uncomment below and update the code to test the property salesEndedAt
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property salesStartedAt (base name: "sales_started_at")', function() {
      // uncomment below and update the code to test the property salesStartedAt
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property supportEndedAt (base name: "support_ended_at")', function() {
      // uncomment below and update the code to test the property supportEndedAt
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property supportStartedAt (base name: "support_started_at")', function() {
      // uncomment below and update the code to test the property supportStartedAt
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property unit (base name: "unit")', function() {
      // uncomment below and update the code to test the property unit
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

    it('should have the property vendor (base name: "vendor")', function() {
      // uncomment below and update the code to test the property vendor
      //var instance = new Data2CrmApi.ProductEntity();
      //expect(instance).to.be();
    });

  });

}));
