/**
 * Data2CRM.API
 * <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Count from '../model/Count';
import InternalUserEntity from '../model/InternalUserEntity';
import InternalUserEntityRelation from '../model/InternalUserEntityRelation';

/**
* InternalUser service.
* @module api/InternalUserApi
* @version 1
*/
export default class InternalUserApi {

    /**
    * Constructs a new InternalUserApi. 
    * @alias module:api/InternalUserApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createInternalUserEntity operation.
     * @callback module:api/InternalUserApi~createInternalUserEntityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InternalUserEntityRelation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST for internalUser
     * @param {String} xAPI2CRMUSERKEY User Key
     * @param {module:model/InternalUserEntity} body 
     * @param {module:api/InternalUserApi~createInternalUserEntityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InternalUserEntityRelation}
     */
    createInternalUserEntity(xAPI2CRMUSERKEY, body, callback) {
      let postBody = body;
      // verify the required parameter 'xAPI2CRMUSERKEY' is set
      if (xAPI2CRMUSERKEY === undefined || xAPI2CRMUSERKEY === null) {
        throw new Error("Missing the required parameter 'xAPI2CRMUSERKEY' when calling createInternalUserEntity");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createInternalUserEntity");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-API2CRM-USER-KEY': xAPI2CRMUSERKEY
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InternalUserEntityRelation;
      return this.apiClient.callApi(
        '/user', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteInternalUserEntity operation.
     * @callback module:api/InternalUserApi~deleteInternalUserEntityCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * DELETE for internalUser
     * @param {String} xAPI2CRMUSERKEY User Key
     * @param {String} internalUserId Internal User Key
     * @param {module:api/InternalUserApi~deleteInternalUserEntityCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteInternalUserEntity(xAPI2CRMUSERKEY, internalUserId, callback) {
      let postBody = null;
      // verify the required parameter 'xAPI2CRMUSERKEY' is set
      if (xAPI2CRMUSERKEY === undefined || xAPI2CRMUSERKEY === null) {
        throw new Error("Missing the required parameter 'xAPI2CRMUSERKEY' when calling deleteInternalUserEntity");
      }
      // verify the required parameter 'internalUserId' is set
      if (internalUserId === undefined || internalUserId === null) {
        throw new Error("Missing the required parameter 'internalUserId' when calling deleteInternalUserEntity");
      }

      let pathParams = {
        'internal_user_id': internalUserId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-API2CRM-USER-KEY': xAPI2CRMUSERKEY
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/user/{internal_user_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getInternalUserCollection operation.
     * @callback module:api/InternalUserApi~getInternalUserCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/InternalUserEntity>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET for internalUser
     * Returns all internal users from the system
     * @param {String} xAPI2CRMUSERKEY User Key
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] Amount of results (default: 25)
     * @param {Number} [page] Page to show (default: 1)
     * @param {String} [filter] Filter
     * @param {String} [fields] Comma-separated list of fields to include in the response
     * @param {String} [sort] Specifies ascending or descending sort on existing fields
     * @param {Date} [applicationRequestStart] All Application Requests from this date
     * @param {Date} [applicationRequestEnd] All Application Requests until this date
     * @param {module:api/InternalUserApi~getInternalUserCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/InternalUserEntity>}
     */
    getInternalUserCollection(xAPI2CRMUSERKEY, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xAPI2CRMUSERKEY' is set
      if (xAPI2CRMUSERKEY === undefined || xAPI2CRMUSERKEY === null) {
        throw new Error("Missing the required parameter 'xAPI2CRMUSERKEY' when calling getInternalUserCollection");
      }

      let pathParams = {
      };
      let queryParams = {
        'page_size': opts['pageSize'],
        'page': opts['page'],
        'filter': opts['filter'],
        'fields': opts['fields'],
        'sort': opts['sort'],
        'application_request_start': opts['applicationRequestStart'],
        'application_request_end': opts['applicationRequestEnd']
      };
      let headerParams = {
        'X-API2CRM-USER-KEY': xAPI2CRMUSERKEY
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [InternalUserEntity];
      return this.apiClient.callApi(
        '/user/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getInternalUserCountCollection operation.
     * @callback module:api/InternalUserApi~getInternalUserCountCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Count} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * COUNT for internalUser
     * Count all internal users from the system
     * @param {String} xAPI2CRMUSERKEY User Key
     * @param {Object} opts Optional parameters
     * @param {String} [filter] Filter
     * @param {module:api/InternalUserApi~getInternalUserCountCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Count}
     */
    getInternalUserCountCollection(xAPI2CRMUSERKEY, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xAPI2CRMUSERKEY' is set
      if (xAPI2CRMUSERKEY === undefined || xAPI2CRMUSERKEY === null) {
        throw new Error("Missing the required parameter 'xAPI2CRMUSERKEY' when calling getInternalUserCountCollection");
      }

      let pathParams = {
      };
      let queryParams = {
        'filter': opts['filter']
      };
      let headerParams = {
        'X-API2CRM-USER-KEY': xAPI2CRMUSERKEY
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Count;
      return this.apiClient.callApi(
        '/user/count', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getInternalUserEntity operation.
     * @callback module:api/InternalUserApi~getInternalUserEntityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InternalUserEntity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET for internalUser
     * Return internal user information
     * @param {String} xAPI2CRMUSERKEY User Key
     * @param {String} internalUserId Internal User Key
     * @param {Object} opts Optional parameters
     * @param {String} [fields] Comma-separated list of fields to include in the response
     * @param {Date} [applicationRequestStart] All Application Requests from this date
     * @param {Date} [applicationRequestEnd] All Application Requests until this date
     * @param {module:api/InternalUserApi~getInternalUserEntityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InternalUserEntity}
     */
    getInternalUserEntity(xAPI2CRMUSERKEY, internalUserId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xAPI2CRMUSERKEY' is set
      if (xAPI2CRMUSERKEY === undefined || xAPI2CRMUSERKEY === null) {
        throw new Error("Missing the required parameter 'xAPI2CRMUSERKEY' when calling getInternalUserEntity");
      }
      // verify the required parameter 'internalUserId' is set
      if (internalUserId === undefined || internalUserId === null) {
        throw new Error("Missing the required parameter 'internalUserId' when calling getInternalUserEntity");
      }

      let pathParams = {
        'internal_user_id': internalUserId
      };
      let queryParams = {
        'fields': opts['fields'],
        'application_request_start': opts['applicationRequestStart'],
        'application_request_end': opts['applicationRequestEnd']
      };
      let headerParams = {
        'X-API2CRM-USER-KEY': xAPI2CRMUSERKEY
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InternalUserEntity;
      return this.apiClient.callApi(
        '/user/{internal_user_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateInternalUserEntity operation.
     * @callback module:api/InternalUserApi~updateInternalUserEntityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InternalUserEntityRelation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * PUT for internalUser
     * @param {String} xAPI2CRMUSERKEY User Key
     * @param {String} internalUserId Internal User Key
     * @param {module:model/InternalUserEntity} body 
     * @param {module:api/InternalUserApi~updateInternalUserEntityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InternalUserEntityRelation}
     */
    updateInternalUserEntity(xAPI2CRMUSERKEY, internalUserId, body, callback) {
      let postBody = body;
      // verify the required parameter 'xAPI2CRMUSERKEY' is set
      if (xAPI2CRMUSERKEY === undefined || xAPI2CRMUSERKEY === null) {
        throw new Error("Missing the required parameter 'xAPI2CRMUSERKEY' when calling updateInternalUserEntity");
      }
      // verify the required parameter 'internalUserId' is set
      if (internalUserId === undefined || internalUserId === null) {
        throw new Error("Missing the required parameter 'internalUserId' when calling updateInternalUserEntity");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling updateInternalUserEntity");
      }

      let pathParams = {
        'internal_user_id': internalUserId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-API2CRM-USER-KEY': xAPI2CRMUSERKEY
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InternalUserEntityRelation;
      return this.apiClient.callApi(
        '/user/{internal_user_id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
