/**
 * Infermedica API
 * Empower your healthcare services with intelligent diagnostic insights of Infermedica API.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRiskFactor_Details.h
 *
 * 
 */

#ifndef OAIRiskFactor_Details_H
#define OAIRiskFactor_Details_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRiskFactor_Details : public OAIObject {
public:
    OAIRiskFactor_Details();
    OAIRiskFactor_Details(QString json);
    ~OAIRiskFactor_Details() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getCommonName() const;
    void setCommonName(const QString &common_name);
    bool is_common_name_Set() const;
    bool is_common_name_Valid() const;

    QMap<QString, OAIObject> getExtras() const;
    void setExtras(const QMap<QString, OAIObject> &extras);
    bool is_extras_Set() const;
    bool is_extras_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getImageSource() const;
    void setImageSource(const QString &image_source);
    bool is_image_source_Set() const;
    bool is_image_source_Valid() const;

    QString getImageUrl() const;
    void setImageUrl(const QString &image_url);
    bool is_image_url_Set() const;
    bool is_image_url_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getQuestion() const;
    void setQuestion(const QString &question);
    bool is_question_Set() const;
    bool is_question_Valid() const;

    QString getSexFilter() const;
    void setSexFilter(const QString &sex_filter);
    bool is_sex_filter_Set() const;
    bool is_sex_filter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_common_name;
    bool m_common_name_isSet;
    bool m_common_name_isValid;

    QMap<QString, OAIObject> m_extras;
    bool m_extras_isSet;
    bool m_extras_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_image_source;
    bool m_image_source_isSet;
    bool m_image_source_isValid;

    QString m_image_url;
    bool m_image_url_isSet;
    bool m_image_url_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_question;
    bool m_question_isSet;
    bool m_question_isValid;

    QString m_sex_filter;
    bool m_sex_filter_isSet;
    bool m_sex_filter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRiskFactor_Details)

#endif // OAIRiskFactor_Details_H
