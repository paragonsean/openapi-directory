/**
 * Infermedica API
 * Empower your healthcare services with intelligent diagnostic insights of Infermedica API.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIParseRequest.h
 *
 * 
 */

#ifndef OAIParseRequest_H
#define OAIParseRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIParseRequest : public OAIObject {
public:
    OAIParseRequest();
    OAIParseRequest(QString json);
    ~OAIParseRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getConceptTypes() const;
    void setConceptTypes(const QList<QString> &concept_types);
    bool is_concept_types_Set() const;
    bool is_concept_types_Valid() const;

    QList<QString> getContext() const;
    void setContext(const QList<QString> &context);
    bool is_context_Set() const;
    bool is_context_Valid() const;

    bool isCorrectSpelling() const;
    void setCorrectSpelling(const bool &correct_spelling);
    bool is_correct_spelling_Set() const;
    bool is_correct_spelling_Valid() const;

    bool isIncludeTokens() const;
    void setIncludeTokens(const bool &include_tokens);
    bool is_include_tokens_Set() const;
    bool is_include_tokens_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_concept_types;
    bool m_concept_types_isSet;
    bool m_concept_types_isValid;

    QList<QString> m_context;
    bool m_context_isSet;
    bool m_context_isValid;

    bool m_correct_spelling;
    bool m_correct_spelling_isSet;
    bool m_correct_spelling_isValid;

    bool m_include_tokens;
    bool m_include_tokens_isSet;
    bool m_include_tokens_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIParseRequest)

#endif // OAIParseRequest_H
