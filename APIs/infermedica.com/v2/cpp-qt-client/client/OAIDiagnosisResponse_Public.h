/**
 * Infermedica API
 * Empower your healthcare services with intelligent diagnostic insights of Infermedica API.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDiagnosisResponse_Public.h
 *
 * 
 */

#ifndef OAIDiagnosisResponse_Public_H
#define OAIDiagnosisResponse_Public_H

#include <QJsonObject>

#include "OAIConditionProbability_Public.h"
#include "OAIObject.h"
#include "OAIQuestion_Public.h"
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConditionProbability_Public;
class OAIQuestion_Public;

class OAIDiagnosisResponse_Public : public OAIObject {
public:
    OAIDiagnosisResponse_Public();
    OAIDiagnosisResponse_Public(QString json);
    ~OAIDiagnosisResponse_Public() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIConditionProbability_Public> getConditions() const;
    void setConditions(const QList<OAIConditionProbability_Public> &conditions);
    bool is_conditions_Set() const;
    bool is_conditions_Valid() const;

    QMap<QString, OAIObject> getExtras() const;
    void setExtras(const QMap<QString, OAIObject> &extras);
    bool is_extras_Set() const;
    bool is_extras_Valid() const;

    OAIQuestion_Public getQuestion() const;
    void setQuestion(const OAIQuestion_Public &question);
    bool is_question_Set() const;
    bool is_question_Valid() const;

    bool isShouldStop() const;
    void setShouldStop(const bool &should_stop);
    bool is_should_stop_Set() const;
    bool is_should_stop_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIConditionProbability_Public> m_conditions;
    bool m_conditions_isSet;
    bool m_conditions_isValid;

    QMap<QString, OAIObject> m_extras;
    bool m_extras_isSet;
    bool m_extras_isValid;

    OAIQuestion_Public m_question;
    bool m_question_isSet;
    bool m_question_isValid;

    bool m_should_stop;
    bool m_should_stop_isSet;
    bool m_should_stop_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDiagnosisResponse_Public)

#endif // OAIDiagnosisResponse_Public_H
