/**
 * Infermedica API
 * Empower your healthcare services with intelligent diagnostic insights of Infermedica API.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInfo_Public.h
 *
 * 
 */

#ifndef OAIInfo_Public_H
#define OAIInfo_Public_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInfo_Public : public OAIObject {
public:
    OAIInfo_Public();
    OAIInfo_Public(QString json);
    ~OAIInfo_Public() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiVersion() const;
    void setApiVersion(const QString &api_version);
    bool is_api_version_Set() const;
    bool is_api_version_Valid() const;

    qint32 getConditionsCount() const;
    void setConditionsCount(const qint32 &conditions_count);
    bool is_conditions_count_Set() const;
    bool is_conditions_count_Valid() const;

    qint32 getLabTestsCount() const;
    void setLabTestsCount(const qint32 &lab_tests_count);
    bool is_lab_tests_count_Set() const;
    bool is_lab_tests_count_Valid() const;

    qint32 getRiskFactorsCount() const;
    void setRiskFactorsCount(const qint32 &risk_factors_count);
    bool is_risk_factors_count_Set() const;
    bool is_risk_factors_count_Valid() const;

    qint32 getSymptomsCount() const;
    void setSymptomsCount(const qint32 &symptoms_count);
    bool is_symptoms_count_Set() const;
    bool is_symptoms_count_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_version;
    bool m_api_version_isSet;
    bool m_api_version_isValid;

    qint32 m_conditions_count;
    bool m_conditions_count_isSet;
    bool m_conditions_count_isValid;

    qint32 m_lab_tests_count;
    bool m_lab_tests_count_isSet;
    bool m_lab_tests_count_isValid;

    qint32 m_risk_factors_count;
    bool m_risk_factors_count_isSet;
    bool m_risk_factors_count_isValid;

    qint32 m_symptoms_count;
    bool m_symptoms_count_isSet;
    bool m_symptoms_count_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInfo_Public)

#endif // OAIInfo_Public_H
