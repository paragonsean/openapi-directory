/**
 * Infermedica API
 * Empower your healthcare services with intelligent diagnostic insights of Infermedica API.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISuggestRequest.h
 *
 * 
 */

#ifndef OAISuggestRequest_H
#define OAISuggestRequest_H

#include <QJsonObject>

#include "OAIEvidence.h"
#include "OAIObject.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEvidence;

class OAISuggestRequest : public OAIObject {
public:
    OAISuggestRequest();
    OAISuggestRequest(QString json);
    ~OAISuggestRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getAge() const;
    void setAge(const OAIObject &age);
    bool is_age_Set() const;
    bool is_age_Valid() const;

    QString getEvaluatedAt() const;
    void setEvaluatedAt(const QString &evaluated_at);
    bool is_evaluated_at_Set() const;
    bool is_evaluated_at_Valid() const;

    QList<OAIEvidence> getEvidence() const;
    void setEvidence(const QList<OAIEvidence> &evidence);
    bool is_evidence_Set() const;
    bool is_evidence_Valid() const;

    QMap<QString, OAIObject> getExtras() const;
    void setExtras(const QMap<QString, OAIObject> &extras);
    bool is_extras_Set() const;
    bool is_extras_Valid() const;

    QString getSex() const;
    void setSex(const QString &sex);
    bool is_sex_Set() const;
    bool is_sex_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_age;
    bool m_age_isSet;
    bool m_age_isValid;

    QString m_evaluated_at;
    bool m_evaluated_at_isSet;
    bool m_evaluated_at_isValid;

    QList<OAIEvidence> m_evidence;
    bool m_evidence_isSet;
    bool m_evidence_isValid;

    QMap<QString, OAIObject> m_extras;
    bool m_extras_isSet;
    bool m_extras_isValid;

    QString m_sex;
    bool m_sex_isSet;
    bool m_sex_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISuggestRequest)

#endif // OAISuggestRequest_H
