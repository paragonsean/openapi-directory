/**
 * Infermedica API
 * Empower your healthcare services with intelligent diagnostic insights of Infermedica API.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ExplanationRequest from '../model/ExplanationRequest';
import ExplanationResponse from '../model/ExplanationResponse';

/**
* Explain service.
* @module api/ExplainApi
* @version v2
*/
export default class ExplainApi {

    /**
    * Constructs a new ExplainApi. 
    * @alias module:api/ExplainApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the computeExplanation operation.
     * @callback module:api/ExplainApi~computeExplanationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExplanationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Query diagnostic engine for explanation
     * Explains which evidence impact probability of selected condition.
     * @param {module:model/ExplanationRequest} body 
     * @param {module:api/ExplainApi~computeExplanationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExplanationResponse}
     */
    computeExplanation(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling computeExplanation");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ExplanationResponse;
      return this.apiClient.callApi(
        '/explain', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
