/**
 * Infermedica API
 * Empower your healthcare services with intelligent diagnostic insights of Infermedica API.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ConceptItemModelPublic from '../model/ConceptItemModelPublic';

/**
* Concepts service.
* @module api/ConceptsApi
* @version v2
*/
export default class ConceptsApi {

    /**
    * Constructs a new ConceptsApi. 
    * @alias module:api/ConceptsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getConcept operation.
     * @callback module:api/ConceptsApi~getConceptCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConceptItemModelPublic} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id concept id
     * @param {module:api/ConceptsApi~getConceptCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConceptItemModelPublic}
     */
    getConcept(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getConcept");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ConceptItemModelPublic;
      return this.apiClient.callApi(
        '/concepts/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getConcepts operation.
     * @callback module:api/ConceptsApi~getConceptsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ConceptItemModelPublic>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [ids] ids
     * @param {String} [types] types
     * @param {module:api/ConceptsApi~getConceptsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ConceptItemModelPublic>}
     */
    getConcepts(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'ids': opts['ids'],
        'types': opts['types']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ConceptItemModelPublic];
      return this.apiClient.callApi(
        '/concepts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
