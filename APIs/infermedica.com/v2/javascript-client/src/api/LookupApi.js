/**
 * Infermedica API
 * Empower your healthcare services with intelligent diagnostic insights of Infermedica API.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import SearchResult from '../model/SearchResult';

/**
* Lookup service.
* @module api/LookupApi
* @version v2
*/
export default class LookupApi {

    /**
    * Constructs a new LookupApi. 
    * @alias module:api/LookupApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getMatchingObservation operation.
     * @callback module:api/LookupApi~getMatchingObservationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SearchResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find observation matching given phrase
     * Returns a single observation matching given phrase.
     * @param {String} phrase phrase to match
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [sex] sex filter
     * @param {Number} [ageValue] age value
     * @param {module:model/String} [ageUnit = 'year')] unit in which age value was provided
     * @param {module:api/LookupApi~getMatchingObservationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SearchResult}
     */
    getMatchingObservation(phrase, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'phrase' is set
      if (phrase === undefined || phrase === null) {
        throw new Error("Missing the required parameter 'phrase' when calling getMatchingObservation");
      }

      let pathParams = {
      };
      let queryParams = {
        'phrase': phrase,
        'sex': opts['sex'],
        'age.value': opts['ageValue'],
        'age.unit': opts['ageUnit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SearchResult;
      return this.apiClient.callApi(
        '/lookup', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
