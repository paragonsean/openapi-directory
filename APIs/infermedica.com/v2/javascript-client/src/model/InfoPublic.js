/**
 * Infermedica API
 * Empower your healthcare services with intelligent diagnostic insights of Infermedica API.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InfoPublic model module.
 * @module model/InfoPublic
 * @version v2
 */
class InfoPublic {
    /**
     * Constructs a new <code>InfoPublic</code>.
     * @alias module:model/InfoPublic
     * @param conditionsCount {Number} 
     * @param labTestsCount {Number} 
     * @param riskFactorsCount {Number} 
     * @param symptomsCount {Number} 
     * @param updatedAt {String} time of last model update in ISO 8601 format
     */
    constructor(conditionsCount, labTestsCount, riskFactorsCount, symptomsCount, updatedAt) { 
        
        InfoPublic.initialize(this, conditionsCount, labTestsCount, riskFactorsCount, symptomsCount, updatedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, conditionsCount, labTestsCount, riskFactorsCount, symptomsCount, updatedAt) { 
        obj['conditions_count'] = conditionsCount;
        obj['lab_tests_count'] = labTestsCount;
        obj['risk_factors_count'] = riskFactorsCount;
        obj['symptoms_count'] = symptomsCount;
        obj['updated_at'] = updatedAt;
    }

    /**
     * Constructs a <code>InfoPublic</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InfoPublic} obj Optional instance to populate.
     * @return {module:model/InfoPublic} The populated <code>InfoPublic</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InfoPublic();

            if (data.hasOwnProperty('api_version')) {
                obj['api_version'] = ApiClient.convertToType(data['api_version'], 'String');
            }
            if (data.hasOwnProperty('conditions_count')) {
                obj['conditions_count'] = ApiClient.convertToType(data['conditions_count'], 'Number');
            }
            if (data.hasOwnProperty('lab_tests_count')) {
                obj['lab_tests_count'] = ApiClient.convertToType(data['lab_tests_count'], 'Number');
            }
            if (data.hasOwnProperty('risk_factors_count')) {
                obj['risk_factors_count'] = ApiClient.convertToType(data['risk_factors_count'], 'Number');
            }
            if (data.hasOwnProperty('symptoms_count')) {
                obj['symptoms_count'] = ApiClient.convertToType(data['symptoms_count'], 'Number');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InfoPublic</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InfoPublic</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InfoPublic.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['api_version'] && !(typeof data['api_version'] === 'string' || data['api_version'] instanceof String)) {
            throw new Error("Expected the field `api_version` to be a primitive type in the JSON string but got " + data['api_version']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}

InfoPublic.RequiredProperties = ["conditions_count", "lab_tests_count", "risk_factors_count", "symptoms_count", "updated_at"];

/**
 * version of api release
 * @member {String} api_version
 */
InfoPublic.prototype['api_version'] = undefined;

/**
 * @member {Number} conditions_count
 */
InfoPublic.prototype['conditions_count'] = undefined;

/**
 * @member {Number} lab_tests_count
 */
InfoPublic.prototype['lab_tests_count'] = undefined;

/**
 * @member {Number} risk_factors_count
 */
InfoPublic.prototype['risk_factors_count'] = undefined;

/**
 * @member {Number} symptoms_count
 */
InfoPublic.prototype['symptoms_count'] = undefined;

/**
 * time of last model update in ISO 8601 format
 * @member {String} updated_at
 */
InfoPublic.prototype['updated_at'] = undefined;






export default InfoPublic;

