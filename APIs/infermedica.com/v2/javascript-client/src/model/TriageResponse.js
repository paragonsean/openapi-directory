/**
 * Infermedica API
 * Empower your healthcare services with intelligent diagnostic insights of Infermedica API.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SeriousObservation from './SeriousObservation';

/**
 * The TriageResponse model module.
 * @module model/TriageResponse
 * @version v2
 */
class TriageResponse {
    /**
     * Constructs a new <code>TriageResponse</code>.
     * @alias module:model/TriageResponse
     */
    constructor() { 
        
        TriageResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TriageResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TriageResponse} obj Optional instance to populate.
     * @return {module:model/TriageResponse} The populated <code>TriageResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TriageResponse();

            if (data.hasOwnProperty('root_cause')) {
                obj['root_cause'] = ApiClient.convertToType(data['root_cause'], 'String');
            }
            if (data.hasOwnProperty('serious')) {
                obj['serious'] = ApiClient.convertToType(data['serious'], [SeriousObservation]);
            }
            if (data.hasOwnProperty('teleconsultation_applicable')) {
                obj['teleconsultation_applicable'] = ApiClient.convertToType(data['teleconsultation_applicable'], 'Boolean');
            }
            if (data.hasOwnProperty('triage_level')) {
                obj['triage_level'] = ApiClient.convertToType(data['triage_level'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TriageResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TriageResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['root_cause'] && !(typeof data['root_cause'] === 'string' || data['root_cause'] instanceof String)) {
            throw new Error("Expected the field `root_cause` to be a primitive type in the JSON string but got " + data['root_cause']);
        }
        if (data['serious']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['serious'])) {
                throw new Error("Expected the field `serious` to be an array in the JSON data but got " + data['serious']);
            }
            // validate the optional field `serious` (array)
            for (const item of data['serious']) {
                SeriousObservation.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['triage_level'] && !(typeof data['triage_level'] === 'string' || data['triage_level'] instanceof String)) {
            throw new Error("Expected the field `triage_level` to be a primitive type in the JSON string but got " + data['triage_level']);
        }

        return true;
    }


}



/**
 * @member {module:model/TriageResponse.RootCauseEnum} root_cause
 */
TriageResponse.prototype['root_cause'] = undefined;

/**
 * @member {Array.<module:model/SeriousObservation>} serious
 */
TriageResponse.prototype['serious'] = undefined;

/**
 * @member {Boolean} teleconsultation_applicable
 */
TriageResponse.prototype['teleconsultation_applicable'] = undefined;

/**
 * @member {module:model/TriageResponse.TriageLevelEnum} triage_level
 */
TriageResponse.prototype['triage_level'] = undefined;





/**
 * Allowed values for the <code>root_cause</code> property.
 * @enum {String}
 * @readonly
 */
TriageResponse['RootCauseEnum'] = {

    /**
     * value: "r1"
     * @const
     */
    "r1": "r1",

    /**
     * value: "r2"
     * @const
     */
    "r2": "r2",

    /**
     * value: "r3"
     * @const
     */
    "r3": "r3",

    /**
     * value: "r4"
     * @const
     */
    "r4": "r4",

    /**
     * value: "r5"
     * @const
     */
    "r5": "r5",

    /**
     * value: "r6"
     * @const
     */
    "r6": "r6",

    /**
     * value: "r7"
     * @const
     */
    "r7": "r7",

    /**
     * value: "r8"
     * @const
     */
    "r8": "r8",

    /**
     * value: "r9"
     * @const
     */
    "r9": "r9",

    /**
     * value: "r10"
     * @const
     */
    "r10": "r10",

    /**
     * value: "r11"
     * @const
     */
    "r11": "r11",

    /**
     * value: "r12"
     * @const
     */
    "r12": "r12"
};


/**
 * Allowed values for the <code>triage_level</code> property.
 * @enum {String}
 * @readonly
 */
TriageResponse['TriageLevelEnum'] = {

    /**
     * value: "emergency_ambulance"
     * @const
     */
    "emergency_ambulance": "emergency_ambulance",

    /**
     * value: "emergency"
     * @const
     */
    "emergency": "emergency",

    /**
     * value: "consultation_24"
     * @const
     */
    "consultation_24": "consultation_24",

    /**
     * value: "consultation"
     * @const
     */
    "consultation": "consultation",

    /**
     * value: "self_care"
     * @const
     */
    "self_care": "self_care"
};



export default TriageResponse;

