/**
 * Infermedica API
 * Empower your healthcare services with intelligent diagnostic insights of Infermedica API.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConditionProbabilityPublic from './ConditionProbabilityPublic';
import QuestionPublic from './QuestionPublic';

/**
 * The DiagnosisResponsePublic model module.
 * @module model/DiagnosisResponsePublic
 * @version v2
 */
class DiagnosisResponsePublic {
    /**
     * Constructs a new <code>DiagnosisResponsePublic</code>.
     * @alias module:model/DiagnosisResponsePublic
     */
    constructor() { 
        
        DiagnosisResponsePublic.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DiagnosisResponsePublic</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiagnosisResponsePublic} obj Optional instance to populate.
     * @return {module:model/DiagnosisResponsePublic} The populated <code>DiagnosisResponsePublic</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiagnosisResponsePublic();

            if (data.hasOwnProperty('conditions')) {
                obj['conditions'] = ApiClient.convertToType(data['conditions'], [ConditionProbabilityPublic]);
            }
            if (data.hasOwnProperty('extras')) {
                obj['extras'] = ApiClient.convertToType(data['extras'], {'String': Object});
            }
            if (data.hasOwnProperty('question')) {
                obj['question'] = QuestionPublic.constructFromObject(data['question']);
            }
            if (data.hasOwnProperty('should_stop')) {
                obj['should_stop'] = ApiClient.convertToType(data['should_stop'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiagnosisResponsePublic</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiagnosisResponsePublic</code>.
     */
    static validateJSON(data) {
        if (data['conditions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['conditions'])) {
                throw new Error("Expected the field `conditions` to be an array in the JSON data but got " + data['conditions']);
            }
            // validate the optional field `conditions` (array)
            for (const item of data['conditions']) {
                ConditionProbabilityPublic.validateJSON(item);
            };
        }
        // validate the optional field `question`
        if (data['question']) { // data not null
          QuestionPublic.validateJSON(data['question']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/ConditionProbabilityPublic>} conditions
 */
DiagnosisResponsePublic.prototype['conditions'] = undefined;

/**
 * @member {Object.<String, Object>} extras
 */
DiagnosisResponsePublic.prototype['extras'] = undefined;

/**
 * @member {module:model/QuestionPublic} question
 */
DiagnosisResponsePublic.prototype['question'] = undefined;

/**
 * @member {Boolean} should_stop
 */
DiagnosisResponsePublic.prototype['should_stop'] = undefined;






export default DiagnosisResponsePublic;

