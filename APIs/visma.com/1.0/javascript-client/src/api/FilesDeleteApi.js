/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ExceptionModel from '../model/ExceptionModel';

/**
* FilesDelete service.
* @module api/FilesDeleteApi
* @version 1.0
*/
export default class FilesDeleteApi {

    /**
    * Constructs a new FilesDeleteApi. 
    * @alias module:api/FilesDeleteApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the keywordsDeleteFileKeyword operation.
     * @callback module:api/FilesDeleteApi~keywordsDeleteFileKeywordCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a keyword from the file
     * Returns: No Content (204) if succeeded. Not found (404) if the keyword or the link can't be found.
     * @param {String} fileGuid 
     * @param {String} guid 
     * @param {module:api/FilesDeleteApi~keywordsDeleteFileKeywordCallback} callback The callback function, accepting three arguments: error, data, response
     */
    keywordsDeleteFileKeyword(fileGuid, guid, callback) {
      let postBody = null;
      // verify the required parameter 'fileGuid' is set
      if (fileGuid === undefined || fileGuid === null) {
        throw new Error("Missing the required parameter 'fileGuid' when calling keywordsDeleteFileKeyword");
      }
      // verify the required parameter 'guid' is set
      if (guid === undefined || guid === null) {
        throw new Error("Missing the required parameter 'guid' when calling keywordsDeleteFileKeyword");
      }

      let pathParams = {
        'fileGuid': fileGuid,
        'guid': guid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ClientIdAuth', 'OAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/files/{fileGuid}/keywords/{guid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
