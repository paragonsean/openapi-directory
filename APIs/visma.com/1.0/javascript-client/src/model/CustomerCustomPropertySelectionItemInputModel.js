/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SimpleInputModel from './SimpleInputModel';

/**
 * The CustomerCustomPropertySelectionItemInputModel model module.
 * @module model/CustomerCustomPropertySelectionItemInputModel
 * @version 1.0
 */
class CustomerCustomPropertySelectionItemInputModel {
    /**
     * Constructs a new <code>CustomerCustomPropertySelectionItemInputModel</code>.
     * @alias module:model/CustomerCustomPropertySelectionItemInputModel
     * @param customerCustomProperty {module:model/SimpleInputModel} 
     */
    constructor(customerCustomProperty) { 
        
        CustomerCustomPropertySelectionItemInputModel.initialize(this, customerCustomProperty);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, customerCustomProperty) { 
        obj['customerCustomProperty'] = customerCustomProperty;
        obj['isActive'] = true;
    }

    /**
     * Constructs a <code>CustomerCustomPropertySelectionItemInputModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomerCustomPropertySelectionItemInputModel} obj Optional instance to populate.
     * @return {module:model/CustomerCustomPropertySelectionItemInputModel} The populated <code>CustomerCustomPropertySelectionItemInputModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerCustomPropertySelectionItemInputModel();

            if (data.hasOwnProperty('customerCustomProperty')) {
                obj['customerCustomProperty'] = SimpleInputModel.constructFromObject(data['customerCustomProperty']);
            }
            if (data.hasOwnProperty('isActive')) {
                obj['isActive'] = ApiClient.convertToType(data['isActive'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('sortOrder')) {
                obj['sortOrder'] = ApiClient.convertToType(data['sortOrder'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomerCustomPropertySelectionItemInputModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomerCustomPropertySelectionItemInputModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CustomerCustomPropertySelectionItemInputModel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `customerCustomProperty`
        if (data['customerCustomProperty']) { // data not null
          SimpleInputModel.validateJSON(data['customerCustomProperty']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

CustomerCustomPropertySelectionItemInputModel.RequiredProperties = ["customerCustomProperty"];

/**
 * @member {module:model/SimpleInputModel} customerCustomProperty
 */
CustomerCustomPropertySelectionItemInputModel.prototype['customerCustomProperty'] = undefined;

/**
 * @member {Boolean} isActive
 * @default true
 */
CustomerCustomPropertySelectionItemInputModel.prototype['isActive'] = true;

/**
 * @member {String} name
 */
CustomerCustomPropertySelectionItemInputModel.prototype['name'] = undefined;

/**
 * @member {Number} sortOrder
 */
CustomerCustomPropertySelectionItemInputModel.prototype['sortOrder'] = undefined;






export default CustomerCustomPropertySelectionItemInputModel;

