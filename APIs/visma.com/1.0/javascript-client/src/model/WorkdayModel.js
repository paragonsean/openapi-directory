/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WorkdayModel model module.
 * @module model/WorkdayModel
 * @version 1.0
 */
class WorkdayModel {
    /**
     * Constructs a new <code>WorkdayModel</code>.
     * @alias module:model/WorkdayModel
     */
    constructor() { 
        
        WorkdayModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkdayModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkdayModel} obj Optional instance to populate.
     * @return {module:model/WorkdayModel} The populated <code>WorkdayModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkdayModel();

            if (data.hasOwnProperty('absenceHours')) {
                obj['absenceHours'] = ApiClient.convertToType(data['absenceHours'], 'Number');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('enteredHours')) {
                obj['enteredHours'] = ApiClient.convertToType(data['enteredHours'], 'Number');
            }
            if (data.hasOwnProperty('enteredTimeEntries')) {
                obj['enteredTimeEntries'] = ApiClient.convertToType(data['enteredTimeEntries'], 'Number');
            }
            if (data.hasOwnProperty('expectedHours')) {
                obj['expectedHours'] = ApiClient.convertToType(data['expectedHours'], 'Number');
            }
            if (data.hasOwnProperty('flextimeLimitPerDay')) {
                obj['flextimeLimitPerDay'] = ApiClient.convertToType(data['flextimeLimitPerDay'], 'Number');
            }
            if (data.hasOwnProperty('holidayName')) {
                obj['holidayName'] = ApiClient.convertToType(data['holidayName'], 'String');
            }
            if (data.hasOwnProperty('incompleteTimingMinutes')) {
                obj['incompleteTimingMinutes'] = ApiClient.convertToType(data['incompleteTimingMinutes'], 'Number');
            }
            if (data.hasOwnProperty('isCompleted')) {
                obj['isCompleted'] = ApiClient.convertToType(data['isCompleted'], 'Boolean');
            }
            if (data.hasOwnProperty('isHoliday')) {
                obj['isHoliday'] = ApiClient.convertToType(data['isHoliday'], 'Boolean');
            }
            if (data.hasOwnProperty('isOvertimeAllowed')) {
                obj['isOvertimeAllowed'] = ApiClient.convertToType(data['isOvertimeAllowed'], 'Boolean');
            }
            if (data.hasOwnProperty('isReadOnly')) {
                obj['isReadOnly'] = ApiClient.convertToType(data['isReadOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('userGuid')) {
                obj['userGuid'] = ApiClient.convertToType(data['userGuid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkdayModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkdayModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['holidayName'] && !(typeof data['holidayName'] === 'string' || data['holidayName'] instanceof String)) {
            throw new Error("Expected the field `holidayName` to be a primitive type in the JSON string but got " + data['holidayName']);
        }
        // ensure the json data is a string
        if (data['userGuid'] && !(typeof data['userGuid'] === 'string' || data['userGuid'] instanceof String)) {
            throw new Error("Expected the field `userGuid` to be a primitive type in the JSON string but got " + data['userGuid']);
        }

        return true;
    }


}



/**
 * @member {Number} absenceHours
 */
WorkdayModel.prototype['absenceHours'] = undefined;

/**
 * @member {Date} date
 */
WorkdayModel.prototype['date'] = undefined;

/**
 * @member {Number} enteredHours
 */
WorkdayModel.prototype['enteredHours'] = undefined;

/**
 * @member {Number} enteredTimeEntries
 */
WorkdayModel.prototype['enteredTimeEntries'] = undefined;

/**
 * @member {Number} expectedHours
 */
WorkdayModel.prototype['expectedHours'] = undefined;

/**
 * @member {Number} flextimeLimitPerDay
 */
WorkdayModel.prototype['flextimeLimitPerDay'] = undefined;

/**
 * @member {String} holidayName
 */
WorkdayModel.prototype['holidayName'] = undefined;

/**
 * @member {Number} incompleteTimingMinutes
 */
WorkdayModel.prototype['incompleteTimingMinutes'] = undefined;

/**
 * @member {Boolean} isCompleted
 */
WorkdayModel.prototype['isCompleted'] = undefined;

/**
 * @member {Boolean} isHoliday
 */
WorkdayModel.prototype['isHoliday'] = undefined;

/**
 * @member {Boolean} isOvertimeAllowed
 */
WorkdayModel.prototype['isOvertimeAllowed'] = undefined;

/**
 * @member {Boolean} isReadOnly
 */
WorkdayModel.prototype['isReadOnly'] = undefined;

/**
 * @member {String} userGuid
 */
WorkdayModel.prototype['userGuid'] = undefined;






export default WorkdayModel;

