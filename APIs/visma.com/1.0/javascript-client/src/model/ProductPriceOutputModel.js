/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductPriceModel from './ProductPriceModel';
import ProductPriceProductOutputSubModel from './ProductPriceProductOutputSubModel';

/**
 * The ProductPriceOutputModel model module.
 * @module model/ProductPriceOutputModel
 * @version 1.0
 */
class ProductPriceOutputModel {
    /**
     * Constructs a new <code>ProductPriceOutputModel</code>.
     * @alias module:model/ProductPriceOutputModel
     */
    constructor() { 
        
        ProductPriceOutputModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductPriceOutputModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductPriceOutputModel} obj Optional instance to populate.
     * @return {module:model/ProductPriceOutputModel} The populated <code>ProductPriceOutputModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductPriceOutputModel();

            if (data.hasOwnProperty('isAvailable')) {
                obj['isAvailable'] = ApiClient.convertToType(data['isAvailable'], 'Boolean');
            }
            if (data.hasOwnProperty('isVolumePriced')) {
                obj['isVolumePriced'] = ApiClient.convertToType(data['isVolumePriced'], 'Boolean');
            }
            if (data.hasOwnProperty('prices')) {
                obj['prices'] = ApiClient.convertToType(data['prices'], [ProductPriceModel]);
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = ProductPriceProductOutputSubModel.constructFromObject(data['product']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductPriceOutputModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductPriceOutputModel</code>.
     */
    static validateJSON(data) {
        if (data['prices']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['prices'])) {
                throw new Error("Expected the field `prices` to be an array in the JSON data but got " + data['prices']);
            }
            // validate the optional field `prices` (array)
            for (const item of data['prices']) {
                ProductPriceModel.validateJSON(item);
            };
        }
        // validate the optional field `product`
        if (data['product']) { // data not null
          ProductPriceProductOutputSubModel.validateJSON(data['product']);
        }

        return true;
    }


}



/**
 * @member {Boolean} isAvailable
 */
ProductPriceOutputModel.prototype['isAvailable'] = undefined;

/**
 * @member {Boolean} isVolumePriced
 */
ProductPriceOutputModel.prototype['isVolumePriced'] = undefined;

/**
 * @member {Array.<module:model/ProductPriceModel>} prices
 */
ProductPriceOutputModel.prototype['prices'] = undefined;

/**
 * @member {module:model/ProductPriceProductOutputSubModel} product
 */
ProductPriceOutputModel.prototype['product'] = undefined;






export default ProductPriceOutputModel;

