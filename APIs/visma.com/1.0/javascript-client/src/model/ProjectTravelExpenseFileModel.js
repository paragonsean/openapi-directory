/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FileCategory from './FileCategory';
import TravelReimbursementAttachmentSource from './TravelReimbursementAttachmentSource';
import UserWithFirstNameLastNameAndPhotoFileModel from './UserWithFirstNameLastNameAndPhotoFileModel';

/**
 * The ProjectTravelExpenseFileModel model module.
 * @module model/ProjectTravelExpenseFileModel
 * @version 1.0
 */
class ProjectTravelExpenseFileModel {
    /**
     * Constructs a new <code>ProjectTravelExpenseFileModel</code>.
     * @alias module:model/ProjectTravelExpenseFileModel
     * @param name {String} 
     */
    constructor(name) { 
        
        ProjectTravelExpenseFileModel.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>ProjectTravelExpenseFileModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectTravelExpenseFileModel} obj Optional instance to populate.
     * @return {module:model/ProjectTravelExpenseFileModel} The populated <code>ProjectTravelExpenseFileModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectTravelExpenseFileModel();

            if (data.hasOwnProperty('category')) {
                obj['category'] = FileCategory.constructFromObject(data['category']);
            }
            if (data.hasOwnProperty('contentType')) {
                obj['contentType'] = ApiClient.convertToType(data['contentType'], 'String');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = UserWithFirstNameLastNameAndPhotoFileModel.constructFromObject(data['createdBy']);
            }
            if (data.hasOwnProperty('createdDateTime')) {
                obj['createdDateTime'] = ApiClient.convertToType(data['createdDateTime'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('fileGuid')) {
                obj['fileGuid'] = ApiClient.convertToType(data['fileGuid'], 'String');
            }
            if (data.hasOwnProperty('guid')) {
                obj['guid'] = ApiClient.convertToType(data['guid'], 'String');
            }
            if (data.hasOwnProperty('isInternal')) {
                obj['isInternal'] = ApiClient.convertToType(data['isInternal'], 'Boolean');
            }
            if (data.hasOwnProperty('lastUpdatedBy')) {
                obj['lastUpdatedBy'] = UserWithFirstNameLastNameAndPhotoFileModel.constructFromObject(data['lastUpdatedBy']);
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = TravelReimbursementAttachmentSource.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('travelExpenseGuid')) {
                obj['travelExpenseGuid'] = ApiClient.convertToType(data['travelExpenseGuid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProjectTravelExpenseFileModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProjectTravelExpenseFileModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProjectTravelExpenseFileModel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['contentType'] && !(typeof data['contentType'] === 'string' || data['contentType'] instanceof String)) {
            throw new Error("Expected the field `contentType` to be a primitive type in the JSON string but got " + data['contentType']);
        }
        // validate the optional field `createdBy`
        if (data['createdBy']) { // data not null
          UserWithFirstNameLastNameAndPhotoFileModel.validateJSON(data['createdBy']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['fileGuid'] && !(typeof data['fileGuid'] === 'string' || data['fileGuid'] instanceof String)) {
            throw new Error("Expected the field `fileGuid` to be a primitive type in the JSON string but got " + data['fileGuid']);
        }
        // ensure the json data is a string
        if (data['guid'] && !(typeof data['guid'] === 'string' || data['guid'] instanceof String)) {
            throw new Error("Expected the field `guid` to be a primitive type in the JSON string but got " + data['guid']);
        }
        // validate the optional field `lastUpdatedBy`
        if (data['lastUpdatedBy']) { // data not null
          UserWithFirstNameLastNameAndPhotoFileModel.validateJSON(data['lastUpdatedBy']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['travelExpenseGuid'] && !(typeof data['travelExpenseGuid'] === 'string' || data['travelExpenseGuid'] instanceof String)) {
            throw new Error("Expected the field `travelExpenseGuid` to be a primitive type in the JSON string but got " + data['travelExpenseGuid']);
        }

        return true;
    }


}

ProjectTravelExpenseFileModel.RequiredProperties = ["name"];

/**
 * @member {module:model/FileCategory} category
 */
ProjectTravelExpenseFileModel.prototype['category'] = undefined;

/**
 * @member {String} contentType
 */
ProjectTravelExpenseFileModel.prototype['contentType'] = undefined;

/**
 * @member {module:model/UserWithFirstNameLastNameAndPhotoFileModel} createdBy
 */
ProjectTravelExpenseFileModel.prototype['createdBy'] = undefined;

/**
 * @member {Date} createdDateTime
 */
ProjectTravelExpenseFileModel.prototype['createdDateTime'] = undefined;

/**
 * @member {String} description
 */
ProjectTravelExpenseFileModel.prototype['description'] = undefined;

/**
 * @member {String} fileGuid
 */
ProjectTravelExpenseFileModel.prototype['fileGuid'] = undefined;

/**
 * @member {String} guid
 */
ProjectTravelExpenseFileModel.prototype['guid'] = undefined;

/**
 * @member {Boolean} isInternal
 */
ProjectTravelExpenseFileModel.prototype['isInternal'] = undefined;

/**
 * @member {module:model/UserWithFirstNameLastNameAndPhotoFileModel} lastUpdatedBy
 */
ProjectTravelExpenseFileModel.prototype['lastUpdatedBy'] = undefined;

/**
 * @member {Date} lastUpdatedDateTime
 */
ProjectTravelExpenseFileModel.prototype['lastUpdatedDateTime'] = undefined;

/**
 * @member {String} name
 */
ProjectTravelExpenseFileModel.prototype['name'] = undefined;

/**
 * @member {Number} size
 */
ProjectTravelExpenseFileModel.prototype['size'] = undefined;

/**
 * @member {module:model/TravelReimbursementAttachmentSource} source
 */
ProjectTravelExpenseFileModel.prototype['source'] = undefined;

/**
 * @member {String} travelExpenseGuid
 */
ProjectTravelExpenseFileModel.prototype['travelExpenseGuid'] = undefined;






export default ProjectTravelExpenseFileModel;

