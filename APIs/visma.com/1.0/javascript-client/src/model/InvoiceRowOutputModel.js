/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InvoiceRowAccountingSubModel from './InvoiceRowAccountingSubModel';
import InvoiceRowCategory from './InvoiceRowCategory';
import InvoiceRowType from './InvoiceRowType';
import MoneyOutputModel from './MoneyOutputModel';
import UserWithFirstNameLastNameAndPhotoFileModel from './UserWithFirstNameLastNameAndPhotoFileModel';

/**
 * The InvoiceRowOutputModel model module.
 * @module model/InvoiceRowOutputModel
 * @version 1.0
 */
class InvoiceRowOutputModel {
    /**
     * Constructs a new <code>InvoiceRowOutputModel</code>.
     * @alias module:model/InvoiceRowOutputModel
     */
    constructor() { 
        
        InvoiceRowOutputModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InvoiceRowOutputModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvoiceRowOutputModel} obj Optional instance to populate.
     * @return {module:model/InvoiceRowOutputModel} The populated <code>InvoiceRowOutputModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvoiceRowOutputModel();

            if (data.hasOwnProperty('category')) {
                obj['category'] = InvoiceRowCategory.constructFromObject(data['category']);
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], ['String']);
            }
            if (data.hasOwnProperty('costCenter')) {
                obj['costCenter'] = InvoiceRowAccountingSubModel.constructFromObject(data['costCenter']);
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = UserWithFirstNameLastNameAndPhotoFileModel.constructFromObject(data['createdBy']);
            }
            if (data.hasOwnProperty('createdDateTime')) {
                obj['createdDateTime'] = ApiClient.convertToType(data['createdDateTime'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('flatRateGuid')) {
                obj['flatRateGuid'] = ApiClient.convertToType(data['flatRateGuid'], 'String');
            }
            if (data.hasOwnProperty('guid')) {
                obj['guid'] = ApiClient.convertToType(data['guid'], 'String');
            }
            if (data.hasOwnProperty('hasInvoiceComment')) {
                obj['hasInvoiceComment'] = ApiClient.convertToType(data['hasInvoiceComment'], 'Boolean');
            }
            if (data.hasOwnProperty('invoiceGuid')) {
                obj['invoiceGuid'] = ApiClient.convertToType(data['invoiceGuid'], 'String');
            }
            if (data.hasOwnProperty('lastUpdatedBy')) {
                obj['lastUpdatedBy'] = UserWithFirstNameLastNameAndPhotoFileModel.constructFromObject(data['lastUpdatedBy']);
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('measurementUnit')) {
                obj['measurementUnit'] = ApiClient.convertToType(data['measurementUnit'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('recurringSalesAccount')) {
                obj['recurringSalesAccount'] = InvoiceRowAccountingSubModel.constructFromObject(data['recurringSalesAccount']);
            }
            if (data.hasOwnProperty('rowType')) {
                obj['rowType'] = InvoiceRowType.constructFromObject(data['rowType']);
            }
            if (data.hasOwnProperty('salesAccount')) {
                obj['salesAccount'] = InvoiceRowAccountingSubModel.constructFromObject(data['salesAccount']);
            }
            if (data.hasOwnProperty('salesReceivableAccount')) {
                obj['salesReceivableAccount'] = InvoiceRowAccountingSubModel.constructFromObject(data['salesReceivableAccount']);
            }
            if (data.hasOwnProperty('sortOrder')) {
                obj['sortOrder'] = ApiClient.convertToType(data['sortOrder'], 'Number');
            }
            if (data.hasOwnProperty('unitPrice')) {
                obj['unitPrice'] = MoneyOutputModel.constructFromObject(data['unitPrice']);
            }
            if (data.hasOwnProperty('vatAccount')) {
                obj['vatAccount'] = InvoiceRowAccountingSubModel.constructFromObject(data['vatAccount']);
            }
            if (data.hasOwnProperty('vatRate')) {
                obj['vatRate'] = ApiClient.convertToType(data['vatRate'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvoiceRowOutputModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvoiceRowOutputModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['code'])) {
            throw new Error("Expected the field `code` to be an array in the JSON data but got " + data['code']);
        }
        // validate the optional field `costCenter`
        if (data['costCenter']) { // data not null
          InvoiceRowAccountingSubModel.validateJSON(data['costCenter']);
        }
        // validate the optional field `createdBy`
        if (data['createdBy']) { // data not null
          UserWithFirstNameLastNameAndPhotoFileModel.validateJSON(data['createdBy']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['flatRateGuid'] && !(typeof data['flatRateGuid'] === 'string' || data['flatRateGuid'] instanceof String)) {
            throw new Error("Expected the field `flatRateGuid` to be a primitive type in the JSON string but got " + data['flatRateGuid']);
        }
        // ensure the json data is a string
        if (data['guid'] && !(typeof data['guid'] === 'string' || data['guid'] instanceof String)) {
            throw new Error("Expected the field `guid` to be a primitive type in the JSON string but got " + data['guid']);
        }
        // ensure the json data is a string
        if (data['invoiceGuid'] && !(typeof data['invoiceGuid'] === 'string' || data['invoiceGuid'] instanceof String)) {
            throw new Error("Expected the field `invoiceGuid` to be a primitive type in the JSON string but got " + data['invoiceGuid']);
        }
        // validate the optional field `lastUpdatedBy`
        if (data['lastUpdatedBy']) { // data not null
          UserWithFirstNameLastNameAndPhotoFileModel.validateJSON(data['lastUpdatedBy']);
        }
        // ensure the json data is a string
        if (data['measurementUnit'] && !(typeof data['measurementUnit'] === 'string' || data['measurementUnit'] instanceof String)) {
            throw new Error("Expected the field `measurementUnit` to be a primitive type in the JSON string but got " + data['measurementUnit']);
        }
        // validate the optional field `recurringSalesAccount`
        if (data['recurringSalesAccount']) { // data not null
          InvoiceRowAccountingSubModel.validateJSON(data['recurringSalesAccount']);
        }
        // validate the optional field `salesAccount`
        if (data['salesAccount']) { // data not null
          InvoiceRowAccountingSubModel.validateJSON(data['salesAccount']);
        }
        // validate the optional field `salesReceivableAccount`
        if (data['salesReceivableAccount']) { // data not null
          InvoiceRowAccountingSubModel.validateJSON(data['salesReceivableAccount']);
        }
        // validate the optional field `unitPrice`
        if (data['unitPrice']) { // data not null
          MoneyOutputModel.validateJSON(data['unitPrice']);
        }
        // validate the optional field `vatAccount`
        if (data['vatAccount']) { // data not null
          InvoiceRowAccountingSubModel.validateJSON(data['vatAccount']);
        }

        return true;
    }


}



/**
 * @member {module:model/InvoiceRowCategory} category
 */
InvoiceRowOutputModel.prototype['category'] = undefined;

/**
 * @member {Array.<String>} code
 */
InvoiceRowOutputModel.prototype['code'] = undefined;

/**
 * @member {module:model/InvoiceRowAccountingSubModel} costCenter
 */
InvoiceRowOutputModel.prototype['costCenter'] = undefined;

/**
 * @member {module:model/UserWithFirstNameLastNameAndPhotoFileModel} createdBy
 */
InvoiceRowOutputModel.prototype['createdBy'] = undefined;

/**
 * @member {Date} createdDateTime
 */
InvoiceRowOutputModel.prototype['createdDateTime'] = undefined;

/**
 * @member {String} description
 */
InvoiceRowOutputModel.prototype['description'] = undefined;

/**
 * @member {String} flatRateGuid
 */
InvoiceRowOutputModel.prototype['flatRateGuid'] = undefined;

/**
 * @member {String} guid
 */
InvoiceRowOutputModel.prototype['guid'] = undefined;

/**
 * @member {Boolean} hasInvoiceComment
 */
InvoiceRowOutputModel.prototype['hasInvoiceComment'] = undefined;

/**
 * @member {String} invoiceGuid
 */
InvoiceRowOutputModel.prototype['invoiceGuid'] = undefined;

/**
 * @member {module:model/UserWithFirstNameLastNameAndPhotoFileModel} lastUpdatedBy
 */
InvoiceRowOutputModel.prototype['lastUpdatedBy'] = undefined;

/**
 * @member {Date} lastUpdatedDateTime
 */
InvoiceRowOutputModel.prototype['lastUpdatedDateTime'] = undefined;

/**
 * @member {String} measurementUnit
 */
InvoiceRowOutputModel.prototype['measurementUnit'] = undefined;

/**
 * @member {Number} quantity
 */
InvoiceRowOutputModel.prototype['quantity'] = undefined;

/**
 * @member {module:model/InvoiceRowAccountingSubModel} recurringSalesAccount
 */
InvoiceRowOutputModel.prototype['recurringSalesAccount'] = undefined;

/**
 * @member {module:model/InvoiceRowType} rowType
 */
InvoiceRowOutputModel.prototype['rowType'] = undefined;

/**
 * @member {module:model/InvoiceRowAccountingSubModel} salesAccount
 */
InvoiceRowOutputModel.prototype['salesAccount'] = undefined;

/**
 * @member {module:model/InvoiceRowAccountingSubModel} salesReceivableAccount
 */
InvoiceRowOutputModel.prototype['salesReceivableAccount'] = undefined;

/**
 * @member {Number} sortOrder
 */
InvoiceRowOutputModel.prototype['sortOrder'] = undefined;

/**
 * @member {module:model/MoneyOutputModel} unitPrice
 */
InvoiceRowOutputModel.prototype['unitPrice'] = undefined;

/**
 * @member {module:model/InvoiceRowAccountingSubModel} vatAccount
 */
InvoiceRowOutputModel.prototype['vatAccount'] = undefined;

/**
 * @member {Number} vatRate
 */
InvoiceRowOutputModel.prototype['vatRate'] = undefined;






export default InvoiceRowOutputModel;

