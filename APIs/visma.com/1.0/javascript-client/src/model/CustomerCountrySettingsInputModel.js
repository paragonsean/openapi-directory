/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SimpleInputModel from './SimpleInputModel';
import SimpleInputRequiredModel from './SimpleInputRequiredModel';

/**
 * The CustomerCountrySettingsInputModel model module.
 * @module model/CustomerCountrySettingsInputModel
 * @version 1.0
 */
class CustomerCountrySettingsInputModel {
    /**
     * Constructs a new <code>CustomerCountrySettingsInputModel</code>.
     * @alias module:model/CustomerCountrySettingsInputModel
     * @param country {module:model/SimpleInputRequiredModel} 
     * @param customer {module:model/SimpleInputRequiredModel} 
     */
    constructor(country, customer) { 
        
        CustomerCountrySettingsInputModel.initialize(this, country, customer);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, country, customer) { 
        obj['country'] = country;
        obj['customer'] = customer;
    }

    /**
     * Constructs a <code>CustomerCountrySettingsInputModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomerCountrySettingsInputModel} obj Optional instance to populate.
     * @return {module:model/CustomerCountrySettingsInputModel} The populated <code>CustomerCountrySettingsInputModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerCountrySettingsInputModel();

            if (data.hasOwnProperty('country')) {
                obj['country'] = SimpleInputRequiredModel.constructFromObject(data['country']);
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = SimpleInputRequiredModel.constructFromObject(data['customer']);
            }
            if (data.hasOwnProperty('isTaxFree')) {
                obj['isTaxFree'] = ApiClient.convertToType(data['isTaxFree'], 'Boolean');
            }
            if (data.hasOwnProperty('taxFreeDescription')) {
                obj['taxFreeDescription'] = ApiClient.convertToType(data['taxFreeDescription'], 'String');
            }
            if (data.hasOwnProperty('valueAddedTax')) {
                obj['valueAddedTax'] = SimpleInputModel.constructFromObject(data['valueAddedTax']);
            }
            if (data.hasOwnProperty('zeroVatCategoryCodeEn16931')) {
                obj['zeroVatCategoryCodeEn16931'] = ApiClient.convertToType(data['zeroVatCategoryCodeEn16931'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomerCountrySettingsInputModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomerCountrySettingsInputModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CustomerCountrySettingsInputModel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `country`
        if (data['country']) { // data not null
          SimpleInputRequiredModel.validateJSON(data['country']);
        }
        // validate the optional field `customer`
        if (data['customer']) { // data not null
          SimpleInputRequiredModel.validateJSON(data['customer']);
        }
        // ensure the json data is a string
        if (data['taxFreeDescription'] && !(typeof data['taxFreeDescription'] === 'string' || data['taxFreeDescription'] instanceof String)) {
            throw new Error("Expected the field `taxFreeDescription` to be a primitive type in the JSON string but got " + data['taxFreeDescription']);
        }
        // validate the optional field `valueAddedTax`
        if (data['valueAddedTax']) { // data not null
          SimpleInputModel.validateJSON(data['valueAddedTax']);
        }
        // ensure the json data is a string
        if (data['zeroVatCategoryCodeEn16931'] && !(typeof data['zeroVatCategoryCodeEn16931'] === 'string' || data['zeroVatCategoryCodeEn16931'] instanceof String)) {
            throw new Error("Expected the field `zeroVatCategoryCodeEn16931` to be a primitive type in the JSON string but got " + data['zeroVatCategoryCodeEn16931']);
        }

        return true;
    }


}

CustomerCountrySettingsInputModel.RequiredProperties = ["country", "customer"];

/**
 * @member {module:model/SimpleInputRequiredModel} country
 */
CustomerCountrySettingsInputModel.prototype['country'] = undefined;

/**
 * @member {module:model/SimpleInputRequiredModel} customer
 */
CustomerCountrySettingsInputModel.prototype['customer'] = undefined;

/**
 * @member {Boolean} isTaxFree
 */
CustomerCountrySettingsInputModel.prototype['isTaxFree'] = undefined;

/**
 * @member {String} taxFreeDescription
 */
CustomerCountrySettingsInputModel.prototype['taxFreeDescription'] = undefined;

/**
 * @member {module:model/SimpleInputModel} valueAddedTax
 */
CustomerCountrySettingsInputModel.prototype['valueAddedTax'] = undefined;

/**
 * @member {String} zeroVatCategoryCodeEn16931
 */
CustomerCountrySettingsInputModel.prototype['zeroVatCategoryCodeEn16931'] = undefined;






export default CustomerCountrySettingsInputModel;

