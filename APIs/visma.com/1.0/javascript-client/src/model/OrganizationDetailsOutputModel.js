/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CompanyModel from './CompanyModel';
import CurrencyBaseModel from './CurrencyBaseModel';
import ModelWithName from './ModelWithName';
import OrganizationDetailsCountrySubModel from './OrganizationDetailsCountrySubModel';
import OrganizationDetailsFormattingSubModel from './OrganizationDetailsFormattingSubModel';
import OrganizationDetailsLanguageSubModel from './OrganizationDetailsLanguageSubModel';
import UserWithNameAndPhotoFileModel from './UserWithNameAndPhotoFileModel';

/**
 * The OrganizationDetailsOutputModel model module.
 * @module model/OrganizationDetailsOutputModel
 * @version 1.0
 */
class OrganizationDetailsOutputModel {
    /**
     * Constructs a new <code>OrganizationDetailsOutputModel</code>.
     * @alias module:model/OrganizationDetailsOutputModel
     */
    constructor() { 
        
        OrganizationDetailsOutputModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrganizationDetailsOutputModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrganizationDetailsOutputModel} obj Optional instance to populate.
     * @return {module:model/OrganizationDetailsOutputModel} The populated <code>OrganizationDetailsOutputModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrganizationDetailsOutputModel();

            if (data.hasOwnProperty('activeAddons')) {
                obj['activeAddons'] = ApiClient.convertToType(data['activeAddons'], ['String']);
            }
            if (data.hasOwnProperty('activeCompanies')) {
                obj['activeCompanies'] = ApiClient.convertToType(data['activeCompanies'], [CompanyModel]);
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = OrganizationDetailsCountrySubModel.constructFromObject(data['country']);
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = CurrencyBaseModel.constructFromObject(data['currency']);
            }
            if (data.hasOwnProperty('eInvoiceAddress')) {
                obj['eInvoiceAddress'] = ApiClient.convertToType(data['eInvoiceAddress'], 'String');
            }
            if (data.hasOwnProperty('eInvoiceOperatorCode')) {
                obj['eInvoiceOperatorCode'] = ApiClient.convertToType(data['eInvoiceOperatorCode'], 'String');
            }
            if (data.hasOwnProperty('fax')) {
                obj['fax'] = ApiClient.convertToType(data['fax'], 'String');
            }
            if (data.hasOwnProperty('formatting')) {
                obj['formatting'] = OrganizationDetailsFormattingSubModel.constructFromObject(data['formatting']);
            }
            if (data.hasOwnProperty('guid')) {
                obj['guid'] = ApiClient.convertToType(data['guid'], 'String');
            }
            if (data.hasOwnProperty('isVatRegistered')) {
                obj['isVatRegistered'] = ApiClient.convertToType(data['isVatRegistered'], 'Boolean');
            }
            if (data.hasOwnProperty('kvkNumber')) {
                obj['kvkNumber'] = ApiClient.convertToType(data['kvkNumber'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = OrganizationDetailsLanguageSubModel.constructFromObject(data['language']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('odpCompany')) {
                obj['odpCompany'] = ApiClient.convertToType(data['odpCompany'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('postalCode')) {
                obj['postalCode'] = ApiClient.convertToType(data['postalCode'], 'String');
            }
            if (data.hasOwnProperty('registeredOffice')) {
                obj['registeredOffice'] = ApiClient.convertToType(data['registeredOffice'], 'String');
            }
            if (data.hasOwnProperty('termsOfServiceApprover')) {
                obj['termsOfServiceApprover'] = UserWithNameAndPhotoFileModel.constructFromObject(data['termsOfServiceApprover']);
            }
            if (data.hasOwnProperty('timezone')) {
                obj['timezone'] = ModelWithName.constructFromObject(data['timezone']);
            }
            if (data.hasOwnProperty('vatNumber')) {
                obj['vatNumber'] = ApiClient.convertToType(data['vatNumber'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrganizationDetailsOutputModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrganizationDetailsOutputModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['activeAddons'])) {
            throw new Error("Expected the field `activeAddons` to be an array in the JSON data but got " + data['activeAddons']);
        }
        if (data['activeCompanies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['activeCompanies'])) {
                throw new Error("Expected the field `activeCompanies` to be an array in the JSON data but got " + data['activeCompanies']);
            }
            // validate the optional field `activeCompanies` (array)
            for (const item of data['activeCompanies']) {
                CompanyModel.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // validate the optional field `country`
        if (data['country']) { // data not null
          OrganizationDetailsCountrySubModel.validateJSON(data['country']);
        }
        // validate the optional field `currency`
        if (data['currency']) { // data not null
          CurrencyBaseModel.validateJSON(data['currency']);
        }
        // ensure the json data is a string
        if (data['eInvoiceAddress'] && !(typeof data['eInvoiceAddress'] === 'string' || data['eInvoiceAddress'] instanceof String)) {
            throw new Error("Expected the field `eInvoiceAddress` to be a primitive type in the JSON string but got " + data['eInvoiceAddress']);
        }
        // ensure the json data is a string
        if (data['eInvoiceOperatorCode'] && !(typeof data['eInvoiceOperatorCode'] === 'string' || data['eInvoiceOperatorCode'] instanceof String)) {
            throw new Error("Expected the field `eInvoiceOperatorCode` to be a primitive type in the JSON string but got " + data['eInvoiceOperatorCode']);
        }
        // ensure the json data is a string
        if (data['fax'] && !(typeof data['fax'] === 'string' || data['fax'] instanceof String)) {
            throw new Error("Expected the field `fax` to be a primitive type in the JSON string but got " + data['fax']);
        }
        // validate the optional field `formatting`
        if (data['formatting']) { // data not null
          OrganizationDetailsFormattingSubModel.validateJSON(data['formatting']);
        }
        // ensure the json data is a string
        if (data['guid'] && !(typeof data['guid'] === 'string' || data['guid'] instanceof String)) {
            throw new Error("Expected the field `guid` to be a primitive type in the JSON string but got " + data['guid']);
        }
        // ensure the json data is a string
        if (data['kvkNumber'] && !(typeof data['kvkNumber'] === 'string' || data['kvkNumber'] instanceof String)) {
            throw new Error("Expected the field `kvkNumber` to be a primitive type in the JSON string but got " + data['kvkNumber']);
        }
        // validate the optional field `language`
        if (data['language']) { // data not null
          OrganizationDetailsLanguageSubModel.validateJSON(data['language']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['odpCompany'] && !(typeof data['odpCompany'] === 'string' || data['odpCompany'] instanceof String)) {
            throw new Error("Expected the field `odpCompany` to be a primitive type in the JSON string but got " + data['odpCompany']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }
        // ensure the json data is a string
        if (data['postalCode'] && !(typeof data['postalCode'] === 'string' || data['postalCode'] instanceof String)) {
            throw new Error("Expected the field `postalCode` to be a primitive type in the JSON string but got " + data['postalCode']);
        }
        // ensure the json data is a string
        if (data['registeredOffice'] && !(typeof data['registeredOffice'] === 'string' || data['registeredOffice'] instanceof String)) {
            throw new Error("Expected the field `registeredOffice` to be a primitive type in the JSON string but got " + data['registeredOffice']);
        }
        // validate the optional field `termsOfServiceApprover`
        if (data['termsOfServiceApprover']) { // data not null
          UserWithNameAndPhotoFileModel.validateJSON(data['termsOfServiceApprover']);
        }
        // validate the optional field `timezone`
        if (data['timezone']) { // data not null
          ModelWithName.validateJSON(data['timezone']);
        }
        // ensure the json data is a string
        if (data['vatNumber'] && !(typeof data['vatNumber'] === 'string' || data['vatNumber'] instanceof String)) {
            throw new Error("Expected the field `vatNumber` to be a primitive type in the JSON string but got " + data['vatNumber']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} activeAddons
 */
OrganizationDetailsOutputModel.prototype['activeAddons'] = undefined;

/**
 * @member {Array.<module:model/CompanyModel>} activeCompanies
 */
OrganizationDetailsOutputModel.prototype['activeCompanies'] = undefined;

/**
 * @member {String} address
 */
OrganizationDetailsOutputModel.prototype['address'] = undefined;

/**
 * @member {String} city
 */
OrganizationDetailsOutputModel.prototype['city'] = undefined;

/**
 * @member {module:model/OrganizationDetailsCountrySubModel} country
 */
OrganizationDetailsOutputModel.prototype['country'] = undefined;

/**
 * @member {module:model/CurrencyBaseModel} currency
 */
OrganizationDetailsOutputModel.prototype['currency'] = undefined;

/**
 * @member {String} eInvoiceAddress
 */
OrganizationDetailsOutputModel.prototype['eInvoiceAddress'] = undefined;

/**
 * @member {String} eInvoiceOperatorCode
 */
OrganizationDetailsOutputModel.prototype['eInvoiceOperatorCode'] = undefined;

/**
 * @member {String} fax
 */
OrganizationDetailsOutputModel.prototype['fax'] = undefined;

/**
 * @member {module:model/OrganizationDetailsFormattingSubModel} formatting
 */
OrganizationDetailsOutputModel.prototype['formatting'] = undefined;

/**
 * @member {String} guid
 */
OrganizationDetailsOutputModel.prototype['guid'] = undefined;

/**
 * @member {Boolean} isVatRegistered
 */
OrganizationDetailsOutputModel.prototype['isVatRegistered'] = undefined;

/**
 * @member {String} kvkNumber
 */
OrganizationDetailsOutputModel.prototype['kvkNumber'] = undefined;

/**
 * @member {module:model/OrganizationDetailsLanguageSubModel} language
 */
OrganizationDetailsOutputModel.prototype['language'] = undefined;

/**
 * @member {String} name
 */
OrganizationDetailsOutputModel.prototype['name'] = undefined;

/**
 * @member {String} odpCompany
 */
OrganizationDetailsOutputModel.prototype['odpCompany'] = undefined;

/**
 * @member {String} phone
 */
OrganizationDetailsOutputModel.prototype['phone'] = undefined;

/**
 * @member {String} postalCode
 */
OrganizationDetailsOutputModel.prototype['postalCode'] = undefined;

/**
 * @member {String} registeredOffice
 */
OrganizationDetailsOutputModel.prototype['registeredOffice'] = undefined;

/**
 * @member {module:model/UserWithNameAndPhotoFileModel} termsOfServiceApprover
 */
OrganizationDetailsOutputModel.prototype['termsOfServiceApprover'] = undefined;

/**
 * @member {module:model/ModelWithName} timezone
 */
OrganizationDetailsOutputModel.prototype['timezone'] = undefined;

/**
 * @member {String} vatNumber
 */
OrganizationDetailsOutputModel.prototype['vatNumber'] = undefined;






export default OrganizationDetailsOutputModel;

