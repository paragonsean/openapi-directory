/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RecurrenceFrequency from './RecurrenceFrequency';
import RecurrencePattern from './RecurrencePattern';
import RecurrenceRange from './RecurrenceRange';

/**
 * The ActivityRecurrenceModel model module.
 * @module model/ActivityRecurrenceModel
 * @version 1.0
 */
class ActivityRecurrenceModel {
    /**
     * Constructs a new <code>ActivityRecurrenceModel</code>.
     * @alias module:model/ActivityRecurrenceModel
     * @param frequency {module:model/RecurrenceFrequency} 
     */
    constructor(frequency) { 
        
        ActivityRecurrenceModel.initialize(this, frequency);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, frequency) { 
        obj['frequency'] = frequency;
    }

    /**
     * Constructs a <code>ActivityRecurrenceModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActivityRecurrenceModel} obj Optional instance to populate.
     * @return {module:model/ActivityRecurrenceModel} The populated <code>ActivityRecurrenceModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActivityRecurrenceModel();

            if (data.hasOwnProperty('exceptions')) {
                obj['exceptions'] = ApiClient.convertToType(data['exceptions'], ['Date']);
            }
            if (data.hasOwnProperty('frequency')) {
                obj['frequency'] = RecurrenceFrequency.constructFromObject(data['frequency']);
            }
            if (data.hasOwnProperty('lastOccurrenceDateTime')) {
                obj['lastOccurrenceDateTime'] = ApiClient.convertToType(data['lastOccurrenceDateTime'], 'Date');
            }
            if (data.hasOwnProperty('pattern')) {
                obj['pattern'] = RecurrencePattern.constructFromObject(data['pattern']);
            }
            if (data.hasOwnProperty('range')) {
                obj['range'] = RecurrenceRange.constructFromObject(data['range']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActivityRecurrenceModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActivityRecurrenceModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ActivityRecurrenceModel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['exceptions'])) {
            throw new Error("Expected the field `exceptions` to be an array in the JSON data but got " + data['exceptions']);
        }
        // validate the optional field `pattern`
        if (data['pattern']) { // data not null
          RecurrencePattern.validateJSON(data['pattern']);
        }
        // validate the optional field `range`
        if (data['range']) { // data not null
          RecurrenceRange.validateJSON(data['range']);
        }

        return true;
    }


}

ActivityRecurrenceModel.RequiredProperties = ["frequency"];

/**
 * @member {Array.<Date>} exceptions
 */
ActivityRecurrenceModel.prototype['exceptions'] = undefined;

/**
 * @member {module:model/RecurrenceFrequency} frequency
 */
ActivityRecurrenceModel.prototype['frequency'] = undefined;

/**
 * @member {Date} lastOccurrenceDateTime
 */
ActivityRecurrenceModel.prototype['lastOccurrenceDateTime'] = undefined;

/**
 * @member {module:model/RecurrencePattern} pattern
 */
ActivityRecurrenceModel.prototype['pattern'] = undefined;

/**
 * @member {module:model/RecurrenceRange} range
 */
ActivityRecurrenceModel.prototype['range'] = undefined;






export default ActivityRecurrenceModel;

