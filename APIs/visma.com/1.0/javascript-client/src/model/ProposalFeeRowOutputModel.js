/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelBase from './ModelBase';
import MoneyOutputModel from './MoneyOutputModel';

/**
 * The ProposalFeeRowOutputModel model module.
 * @module model/ProposalFeeRowOutputModel
 * @version 1.0
 */
class ProposalFeeRowOutputModel {
    /**
     * Constructs a new <code>ProposalFeeRowOutputModel</code>.
     * @alias module:model/ProposalFeeRowOutputModel
     */
    constructor() { 
        
        ProposalFeeRowOutputModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProposalFeeRowOutputModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProposalFeeRowOutputModel} obj Optional instance to populate.
     * @return {module:model/ProposalFeeRowOutputModel} The populated <code>ProposalFeeRowOutputModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProposalFeeRowOutputModel();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('guid')) {
                obj['guid'] = ApiClient.convertToType(data['guid'], 'String');
            }
            if (data.hasOwnProperty('isShownOnProposal')) {
                obj['isShownOnProposal'] = ApiClient.convertToType(data['isShownOnProposal'], 'Boolean');
            }
            if (data.hasOwnProperty('measurementUnit')) {
                obj['measurementUnit'] = ApiClient.convertToType(data['measurementUnit'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = ModelBase.constructFromObject(data['product']);
            }
            if (data.hasOwnProperty('projectFee')) {
                obj['projectFee'] = ModelBase.constructFromObject(data['projectFee']);
            }
            if (data.hasOwnProperty('proposal')) {
                obj['proposal'] = ModelBase.constructFromObject(data['proposal']);
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('sortOrder')) {
                obj['sortOrder'] = ApiClient.convertToType(data['sortOrder'], 'Number');
            }
            if (data.hasOwnProperty('subtotal')) {
                obj['subtotal'] = ModelBase.constructFromObject(data['subtotal']);
            }
            if (data.hasOwnProperty('unitCost')) {
                obj['unitCost'] = MoneyOutputModel.constructFromObject(data['unitCost']);
            }
            if (data.hasOwnProperty('unitPrice')) {
                obj['unitPrice'] = MoneyOutputModel.constructFromObject(data['unitPrice']);
            }
            if (data.hasOwnProperty('vatRate')) {
                obj['vatRate'] = ApiClient.convertToType(data['vatRate'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProposalFeeRowOutputModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProposalFeeRowOutputModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['guid'] && !(typeof data['guid'] === 'string' || data['guid'] instanceof String)) {
            throw new Error("Expected the field `guid` to be a primitive type in the JSON string but got " + data['guid']);
        }
        // ensure the json data is a string
        if (data['measurementUnit'] && !(typeof data['measurementUnit'] === 'string' || data['measurementUnit'] instanceof String)) {
            throw new Error("Expected the field `measurementUnit` to be a primitive type in the JSON string but got " + data['measurementUnit']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `product`
        if (data['product']) { // data not null
          ModelBase.validateJSON(data['product']);
        }
        // validate the optional field `projectFee`
        if (data['projectFee']) { // data not null
          ModelBase.validateJSON(data['projectFee']);
        }
        // validate the optional field `proposal`
        if (data['proposal']) { // data not null
          ModelBase.validateJSON(data['proposal']);
        }
        // validate the optional field `subtotal`
        if (data['subtotal']) { // data not null
          ModelBase.validateJSON(data['subtotal']);
        }
        // validate the optional field `unitCost`
        if (data['unitCost']) { // data not null
          MoneyOutputModel.validateJSON(data['unitCost']);
        }
        // validate the optional field `unitPrice`
        if (data['unitPrice']) { // data not null
          MoneyOutputModel.validateJSON(data['unitPrice']);
        }

        return true;
    }


}



/**
 * @member {String} description
 */
ProposalFeeRowOutputModel.prototype['description'] = undefined;

/**
 * @member {String} guid
 */
ProposalFeeRowOutputModel.prototype['guid'] = undefined;

/**
 * @member {Boolean} isShownOnProposal
 */
ProposalFeeRowOutputModel.prototype['isShownOnProposal'] = undefined;

/**
 * @member {String} measurementUnit
 */
ProposalFeeRowOutputModel.prototype['measurementUnit'] = undefined;

/**
 * @member {String} name
 */
ProposalFeeRowOutputModel.prototype['name'] = undefined;

/**
 * @member {module:model/ModelBase} product
 */
ProposalFeeRowOutputModel.prototype['product'] = undefined;

/**
 * @member {module:model/ModelBase} projectFee
 */
ProposalFeeRowOutputModel.prototype['projectFee'] = undefined;

/**
 * @member {module:model/ModelBase} proposal
 */
ProposalFeeRowOutputModel.prototype['proposal'] = undefined;

/**
 * @member {Number} quantity
 */
ProposalFeeRowOutputModel.prototype['quantity'] = undefined;

/**
 * @member {Number} sortOrder
 */
ProposalFeeRowOutputModel.prototype['sortOrder'] = undefined;

/**
 * @member {module:model/ModelBase} subtotal
 */
ProposalFeeRowOutputModel.prototype['subtotal'] = undefined;

/**
 * @member {module:model/MoneyOutputModel} unitCost
 */
ProposalFeeRowOutputModel.prototype['unitCost'] = undefined;

/**
 * @member {module:model/MoneyOutputModel} unitPrice
 */
ProposalFeeRowOutputModel.prototype['unitPrice'] = undefined;

/**
 * @member {Number} vatRate
 */
ProposalFeeRowOutputModel.prototype['vatRate'] = undefined;






export default ProposalFeeRowOutputModel;

