/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class GetUsersPurpose.
* @enum {}
* @readonly
*/
export default class GetUsersPurpose {
    
        /**
         * value: "AbsenceOwner"
         * @const
         */
        "AbsenceOwner" = "AbsenceOwner";

    
        /**
         * value: "AccountOwner"
         * @const
         */
        "AccountOwner" = "AccountOwner";

    
        /**
         * value: "ActivityOwner"
         * @const
         */
        "ActivityOwner" = "ActivityOwner";

    
        /**
         * value: "ActivityParticipant"
         * @const
         */
        "ActivityParticipant" = "ActivityParticipant";

    
        /**
         * value: "BillingContact"
         * @const
         */
        "BillingContact" = "BillingContact";

    
        /**
         * value: "ProjectManager"
         * @const
         */
        "ProjectManager" = "ProjectManager";

    
        /**
         * value: "SalesPerson"
         * @const
         */
        "SalesPerson" = "SalesPerson";

    
        /**
         * value: "SuperiorUser"
         * @const
         */
        "SuperiorUser" = "SuperiorUser";

    
        /**
         * value: "TermsOfServiceApprover"
         * @const
         */
        "TermsOfServiceApprover" = "TermsOfServiceApprover";

    

    /**
    * Returns a <code>GetUsersPurpose</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/GetUsersPurpose} The enum <code>GetUsersPurpose</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

