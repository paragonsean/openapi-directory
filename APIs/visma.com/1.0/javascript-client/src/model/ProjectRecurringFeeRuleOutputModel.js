/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelWithName from './ModelWithName';
import MoneyOutputModel from './MoneyOutputModel';
import ProductType from './ProductType';
import ProjectCostCenterSubModel from './ProjectCostCenterSubModel';
import ProjectFeeCustomerSubModel from './ProjectFeeCustomerSubModel';
import ProjectFeeProductSubModel from './ProjectFeeProductSubModel';
import ProjectFeeProjectSubModel from './ProjectFeeProjectSubModel';
import ProjectSalesAccountSubModel from './ProjectSalesAccountSubModel';
import RecurrenceEndTypes from './RecurrenceEndTypes';
import UserSubModel from './UserSubModel';
import UserWithFirstNameLastNameAndPhotoFileModel from './UserWithFirstNameLastNameAndPhotoFileModel';

/**
 * The ProjectRecurringFeeRuleOutputModel model module.
 * @module model/ProjectRecurringFeeRuleOutputModel
 * @version 1.0
 */
class ProjectRecurringFeeRuleOutputModel {
    /**
     * Constructs a new <code>ProjectRecurringFeeRuleOutputModel</code>.
     * @alias module:model/ProjectRecurringFeeRuleOutputModel
     */
    constructor() { 
        
        ProjectRecurringFeeRuleOutputModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['isActive'] = true;
    }

    /**
     * Constructs a <code>ProjectRecurringFeeRuleOutputModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectRecurringFeeRuleOutputModel} obj Optional instance to populate.
     * @return {module:model/ProjectRecurringFeeRuleOutputModel} The populated <code>ProjectRecurringFeeRuleOutputModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectRecurringFeeRuleOutputModel();

            if (data.hasOwnProperty('costCenter')) {
                obj['costCenter'] = ProjectCostCenterSubModel.constructFromObject(data['costCenter']);
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = UserWithFirstNameLastNameAndPhotoFileModel.constructFromObject(data['createdBy']);
            }
            if (data.hasOwnProperty('createdDateTime')) {
                obj['createdDateTime'] = ApiClient.convertToType(data['createdDateTime'], 'Date');
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = ProjectFeeCustomerSubModel.constructFromObject(data['customer']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayPeriodStartDate')) {
                obj['displayPeriodStartDate'] = ApiClient.convertToType(data['displayPeriodStartDate'], 'Date');
            }
            if (data.hasOwnProperty('frequency')) {
                obj['frequency'] = ApiClient.convertToType(data['frequency'], 'Number');
            }
            if (data.hasOwnProperty('generatedTimes')) {
                obj['generatedTimes'] = ApiClient.convertToType(data['generatedTimes'], 'Number');
            }
            if (data.hasOwnProperty('guid')) {
                obj['guid'] = ApiClient.convertToType(data['guid'], 'String');
            }
            if (data.hasOwnProperty('hasVolumePricing')) {
                obj['hasVolumePricing'] = ApiClient.convertToType(data['hasVolumePricing'], 'Boolean');
            }
            if (data.hasOwnProperty('isActive')) {
                obj['isActive'] = ApiClient.convertToType(data['isActive'], 'Boolean');
            }
            if (data.hasOwnProperty('lastUpdatedBy')) {
                obj['lastUpdatedBy'] = UserWithFirstNameLastNameAndPhotoFileModel.constructFromObject(data['lastUpdatedBy']);
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('measurementUnit')) {
                obj['measurementUnit'] = ApiClient.convertToType(data['measurementUnit'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('phase')) {
                obj['phase'] = ModelWithName.constructFromObject(data['phase']);
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = ProjectFeeProductSubModel.constructFromObject(data['product']);
            }
            if (data.hasOwnProperty('productType')) {
                obj['productType'] = ProductType.constructFromObject(data['productType']);
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = ProjectFeeProjectSubModel.constructFromObject(data['project']);
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('recurrenceEndDate')) {
                obj['recurrenceEndDate'] = ApiClient.convertToType(data['recurrenceEndDate'], 'Date');
            }
            if (data.hasOwnProperty('recurrenceEndType')) {
                obj['recurrenceEndType'] = RecurrenceEndTypes.constructFromObject(data['recurrenceEndType']);
            }
            if (data.hasOwnProperty('recurrenceStartDate')) {
                obj['recurrenceStartDate'] = ApiClient.convertToType(data['recurrenceStartDate'], 'Date');
            }
            if (data.hasOwnProperty('recurrenceTimes')) {
                obj['recurrenceTimes'] = ApiClient.convertToType(data['recurrenceTimes'], 'Number');
            }
            if (data.hasOwnProperty('recurringSalesAccount')) {
                obj['recurringSalesAccount'] = ProjectSalesAccountSubModel.constructFromObject(data['recurringSalesAccount']);
            }
            if (data.hasOwnProperty('salesAccount')) {
                obj['salesAccount'] = ProjectSalesAccountSubModel.constructFromObject(data['salesAccount']);
            }
            if (data.hasOwnProperty('unitCost')) {
                obj['unitCost'] = MoneyOutputModel.constructFromObject(data['unitCost']);
            }
            if (data.hasOwnProperty('unitPrice')) {
                obj['unitPrice'] = MoneyOutputModel.constructFromObject(data['unitPrice']);
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = UserSubModel.constructFromObject(data['user']);
            }
            if (data.hasOwnProperty('vatRate')) {
                obj['vatRate'] = ApiClient.convertToType(data['vatRate'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProjectRecurringFeeRuleOutputModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProjectRecurringFeeRuleOutputModel</code>.
     */
    static validateJSON(data) {
        // validate the optional field `costCenter`
        if (data['costCenter']) { // data not null
          ProjectCostCenterSubModel.validateJSON(data['costCenter']);
        }
        // validate the optional field `createdBy`
        if (data['createdBy']) { // data not null
          UserWithFirstNameLastNameAndPhotoFileModel.validateJSON(data['createdBy']);
        }
        // validate the optional field `customer`
        if (data['customer']) { // data not null
          ProjectFeeCustomerSubModel.validateJSON(data['customer']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['guid'] && !(typeof data['guid'] === 'string' || data['guid'] instanceof String)) {
            throw new Error("Expected the field `guid` to be a primitive type in the JSON string but got " + data['guid']);
        }
        // validate the optional field `lastUpdatedBy`
        if (data['lastUpdatedBy']) { // data not null
          UserWithFirstNameLastNameAndPhotoFileModel.validateJSON(data['lastUpdatedBy']);
        }
        // ensure the json data is a string
        if (data['measurementUnit'] && !(typeof data['measurementUnit'] === 'string' || data['measurementUnit'] instanceof String)) {
            throw new Error("Expected the field `measurementUnit` to be a primitive type in the JSON string but got " + data['measurementUnit']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `phase`
        if (data['phase']) { // data not null
          ModelWithName.validateJSON(data['phase']);
        }
        // validate the optional field `product`
        if (data['product']) { // data not null
          ProjectFeeProductSubModel.validateJSON(data['product']);
        }
        // validate the optional field `project`
        if (data['project']) { // data not null
          ProjectFeeProjectSubModel.validateJSON(data['project']);
        }
        // validate the optional field `recurringSalesAccount`
        if (data['recurringSalesAccount']) { // data not null
          ProjectSalesAccountSubModel.validateJSON(data['recurringSalesAccount']);
        }
        // validate the optional field `salesAccount`
        if (data['salesAccount']) { // data not null
          ProjectSalesAccountSubModel.validateJSON(data['salesAccount']);
        }
        // validate the optional field `unitCost`
        if (data['unitCost']) { // data not null
          MoneyOutputModel.validateJSON(data['unitCost']);
        }
        // validate the optional field `unitPrice`
        if (data['unitPrice']) { // data not null
          MoneyOutputModel.validateJSON(data['unitPrice']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          UserSubModel.validateJSON(data['user']);
        }

        return true;
    }


}



/**
 * @member {module:model/ProjectCostCenterSubModel} costCenter
 */
ProjectRecurringFeeRuleOutputModel.prototype['costCenter'] = undefined;

/**
 * @member {module:model/UserWithFirstNameLastNameAndPhotoFileModel} createdBy
 */
ProjectRecurringFeeRuleOutputModel.prototype['createdBy'] = undefined;

/**
 * @member {Date} createdDateTime
 */
ProjectRecurringFeeRuleOutputModel.prototype['createdDateTime'] = undefined;

/**
 * @member {module:model/ProjectFeeCustomerSubModel} customer
 */
ProjectRecurringFeeRuleOutputModel.prototype['customer'] = undefined;

/**
 * @member {String} description
 */
ProjectRecurringFeeRuleOutputModel.prototype['description'] = undefined;

/**
 * @member {Date} displayPeriodStartDate
 */
ProjectRecurringFeeRuleOutputModel.prototype['displayPeriodStartDate'] = undefined;

/**
 * @member {Number} frequency
 */
ProjectRecurringFeeRuleOutputModel.prototype['frequency'] = undefined;

/**
 * @member {Number} generatedTimes
 */
ProjectRecurringFeeRuleOutputModel.prototype['generatedTimes'] = undefined;

/**
 * @member {String} guid
 */
ProjectRecurringFeeRuleOutputModel.prototype['guid'] = undefined;

/**
 * @member {Boolean} hasVolumePricing
 */
ProjectRecurringFeeRuleOutputModel.prototype['hasVolumePricing'] = undefined;

/**
 * @member {Boolean} isActive
 * @default true
 */
ProjectRecurringFeeRuleOutputModel.prototype['isActive'] = true;

/**
 * @member {module:model/UserWithFirstNameLastNameAndPhotoFileModel} lastUpdatedBy
 */
ProjectRecurringFeeRuleOutputModel.prototype['lastUpdatedBy'] = undefined;

/**
 * @member {Date} lastUpdatedDateTime
 */
ProjectRecurringFeeRuleOutputModel.prototype['lastUpdatedDateTime'] = undefined;

/**
 * @member {String} measurementUnit
 */
ProjectRecurringFeeRuleOutputModel.prototype['measurementUnit'] = undefined;

/**
 * @member {String} name
 */
ProjectRecurringFeeRuleOutputModel.prototype['name'] = undefined;

/**
 * @member {module:model/ModelWithName} phase
 */
ProjectRecurringFeeRuleOutputModel.prototype['phase'] = undefined;

/**
 * @member {module:model/ProjectFeeProductSubModel} product
 */
ProjectRecurringFeeRuleOutputModel.prototype['product'] = undefined;

/**
 * @member {module:model/ProductType} productType
 */
ProjectRecurringFeeRuleOutputModel.prototype['productType'] = undefined;

/**
 * @member {module:model/ProjectFeeProjectSubModel} project
 */
ProjectRecurringFeeRuleOutputModel.prototype['project'] = undefined;

/**
 * @member {Number} quantity
 */
ProjectRecurringFeeRuleOutputModel.prototype['quantity'] = undefined;

/**
 * @member {Date} recurrenceEndDate
 */
ProjectRecurringFeeRuleOutputModel.prototype['recurrenceEndDate'] = undefined;

/**
 * @member {module:model/RecurrenceEndTypes} recurrenceEndType
 */
ProjectRecurringFeeRuleOutputModel.prototype['recurrenceEndType'] = undefined;

/**
 * @member {Date} recurrenceStartDate
 */
ProjectRecurringFeeRuleOutputModel.prototype['recurrenceStartDate'] = undefined;

/**
 * @member {Number} recurrenceTimes
 */
ProjectRecurringFeeRuleOutputModel.prototype['recurrenceTimes'] = undefined;

/**
 * @member {module:model/ProjectSalesAccountSubModel} recurringSalesAccount
 */
ProjectRecurringFeeRuleOutputModel.prototype['recurringSalesAccount'] = undefined;

/**
 * @member {module:model/ProjectSalesAccountSubModel} salesAccount
 */
ProjectRecurringFeeRuleOutputModel.prototype['salesAccount'] = undefined;

/**
 * @member {module:model/MoneyOutputModel} unitCost
 */
ProjectRecurringFeeRuleOutputModel.prototype['unitCost'] = undefined;

/**
 * @member {module:model/MoneyOutputModel} unitPrice
 */
ProjectRecurringFeeRuleOutputModel.prototype['unitPrice'] = undefined;

/**
 * @member {module:model/UserSubModel} user
 */
ProjectRecurringFeeRuleOutputModel.prototype['user'] = undefined;

/**
 * @member {Number} vatRate
 */
ProjectRecurringFeeRuleOutputModel.prototype['vatRate'] = undefined;






export default ProjectRecurringFeeRuleOutputModel;

