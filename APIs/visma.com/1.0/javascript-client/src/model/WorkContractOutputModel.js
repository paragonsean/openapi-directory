/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelWithName from './ModelWithName';
import MoneyOutputModel from './MoneyOutputModel';
import UserWithFirstNameLastNameAndPhotoFileModel from './UserWithFirstNameLastNameAndPhotoFileModel';
import UserWithPhotoFileModelAndRequiredGuid from './UserWithPhotoFileModelAndRequiredGuid';
import Workweek from './Workweek';

/**
 * The WorkContractOutputModel model module.
 * @module model/WorkContractOutputModel
 * @version 1.0
 */
class WorkContractOutputModel {
    /**
     * Constructs a new <code>WorkContractOutputModel</code>.
     * @alias module:model/WorkContractOutputModel
     * @param startDate {Date} 
     * @param title {String} 
     */
    constructor(startDate, title) { 
        
        WorkContractOutputModel.initialize(this, startDate, title);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, startDate, title) { 
        obj['isFlextimeActive'] = true;
        obj['startDate'] = startDate;
        obj['title'] = title;
    }

    /**
     * Constructs a <code>WorkContractOutputModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkContractOutputModel} obj Optional instance to populate.
     * @return {module:model/WorkContractOutputModel} The populated <code>WorkContractOutputModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkContractOutputModel();

            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = UserWithFirstNameLastNameAndPhotoFileModel.constructFromObject(data['createdBy']);
            }
            if (data.hasOwnProperty('createdDateTime')) {
                obj['createdDateTime'] = ApiClient.convertToType(data['createdDateTime'], 'Date');
            }
            if (data.hasOwnProperty('dailyHours')) {
                obj['dailyHours'] = ApiClient.convertToType(data['dailyHours'], 'Number');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('flextimeLimitPerDay')) {
                obj['flextimeLimitPerDay'] = ApiClient.convertToType(data['flextimeLimitPerDay'], 'Number');
            }
            if (data.hasOwnProperty('guid')) {
                obj['guid'] = ApiClient.convertToType(data['guid'], 'String');
            }
            if (data.hasOwnProperty('hourCost')) {
                obj['hourCost'] = MoneyOutputModel.constructFromObject(data['hourCost']);
            }
            if (data.hasOwnProperty('isFlextimeActive')) {
                obj['isFlextimeActive'] = ApiClient.convertToType(data['isFlextimeActive'], 'Boolean');
            }
            if (data.hasOwnProperty('isOvertimeAllowed')) {
                obj['isOvertimeAllowed'] = ApiClient.convertToType(data['isOvertimeAllowed'], 'Boolean');
            }
            if (data.hasOwnProperty('lastUpdatedBy')) {
                obj['lastUpdatedBy'] = UserWithFirstNameLastNameAndPhotoFileModel.constructFromObject(data['lastUpdatedBy']);
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ModelWithName.constructFromObject(data['role']);
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = UserWithPhotoFileModelAndRequiredGuid.constructFromObject(data['user']);
            }
            if (data.hasOwnProperty('workWeek')) {
                obj['workWeek'] = ApiClient.convertToType(data['workWeek'], [Workweek]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkContractOutputModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkContractOutputModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WorkContractOutputModel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `createdBy`
        if (data['createdBy']) { // data not null
          UserWithFirstNameLastNameAndPhotoFileModel.validateJSON(data['createdBy']);
        }
        // ensure the json data is a string
        if (data['guid'] && !(typeof data['guid'] === 'string' || data['guid'] instanceof String)) {
            throw new Error("Expected the field `guid` to be a primitive type in the JSON string but got " + data['guid']);
        }
        // validate the optional field `hourCost`
        if (data['hourCost']) { // data not null
          MoneyOutputModel.validateJSON(data['hourCost']);
        }
        // validate the optional field `lastUpdatedBy`
        if (data['lastUpdatedBy']) { // data not null
          UserWithFirstNameLastNameAndPhotoFileModel.validateJSON(data['lastUpdatedBy']);
        }
        // validate the optional field `role`
        if (data['role']) { // data not null
          ModelWithName.validateJSON(data['role']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          UserWithPhotoFileModelAndRequiredGuid.validateJSON(data['user']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['workWeek'])) {
            throw new Error("Expected the field `workWeek` to be an array in the JSON data but got " + data['workWeek']);
        }

        return true;
    }


}

WorkContractOutputModel.RequiredProperties = ["startDate", "title"];

/**
 * @member {module:model/UserWithFirstNameLastNameAndPhotoFileModel} createdBy
 */
WorkContractOutputModel.prototype['createdBy'] = undefined;

/**
 * @member {Date} createdDateTime
 */
WorkContractOutputModel.prototype['createdDateTime'] = undefined;

/**
 * @member {Number} dailyHours
 */
WorkContractOutputModel.prototype['dailyHours'] = undefined;

/**
 * @member {Date} endDate
 */
WorkContractOutputModel.prototype['endDate'] = undefined;

/**
 * @member {Number} flextimeLimitPerDay
 */
WorkContractOutputModel.prototype['flextimeLimitPerDay'] = undefined;

/**
 * @member {String} guid
 */
WorkContractOutputModel.prototype['guid'] = undefined;

/**
 * @member {module:model/MoneyOutputModel} hourCost
 */
WorkContractOutputModel.prototype['hourCost'] = undefined;

/**
 * @member {Boolean} isFlextimeActive
 * @default true
 */
WorkContractOutputModel.prototype['isFlextimeActive'] = true;

/**
 * @member {Boolean} isOvertimeAllowed
 */
WorkContractOutputModel.prototype['isOvertimeAllowed'] = undefined;

/**
 * @member {module:model/UserWithFirstNameLastNameAndPhotoFileModel} lastUpdatedBy
 */
WorkContractOutputModel.prototype['lastUpdatedBy'] = undefined;

/**
 * @member {Date} lastUpdatedDateTime
 */
WorkContractOutputModel.prototype['lastUpdatedDateTime'] = undefined;

/**
 * @member {module:model/ModelWithName} role
 */
WorkContractOutputModel.prototype['role'] = undefined;

/**
 * @member {Date} startDate
 */
WorkContractOutputModel.prototype['startDate'] = undefined;

/**
 * @member {String} title
 */
WorkContractOutputModel.prototype['title'] = undefined;

/**
 * @member {module:model/UserWithPhotoFileModelAndRequiredGuid} user
 */
WorkContractOutputModel.prototype['user'] = undefined;

/**
 * @member {Array.<module:model/Workweek>} workWeek
 */
WorkContractOutputModel.prototype['workWeek'] = undefined;






export default WorkContractOutputModel;

