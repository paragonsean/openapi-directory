/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BankAccountFormat from './BankAccountFormat';
import ModelWithName from './ModelWithName';
import UserWithFirstNameLastNameAndPhotoFileModel from './UserWithFirstNameLastNameAndPhotoFileModel';

/**
 * The BankAccountOutputModel model module.
 * @module model/BankAccountOutputModel
 * @version 1.0
 */
class BankAccountOutputModel {
    /**
     * Constructs a new <code>BankAccountOutputModel</code>.
     * @alias module:model/BankAccountOutputModel
     * @param accountNumber {String} 
     * @param bankName {String} 
     */
    constructor(accountNumber, bankName) { 
        
        BankAccountOutputModel.initialize(this, accountNumber, bankName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountNumber, bankName) { 
        obj['accountNumber'] = accountNumber;
        obj['bankName'] = bankName;
        obj['isActive'] = true;
    }

    /**
     * Constructs a <code>BankAccountOutputModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BankAccountOutputModel} obj Optional instance to populate.
     * @return {module:model/BankAccountOutputModel} The populated <code>BankAccountOutputModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BankAccountOutputModel();

            if (data.hasOwnProperty('accountNumber')) {
                obj['accountNumber'] = ApiClient.convertToType(data['accountNumber'], 'String');
            }
            if (data.hasOwnProperty('accountNumberFormat')) {
                obj['accountNumberFormat'] = BankAccountFormat.constructFromObject(data['accountNumberFormat']);
            }
            if (data.hasOwnProperty('bankName')) {
                obj['bankName'] = ApiClient.convertToType(data['bankName'], 'String');
            }
            if (data.hasOwnProperty('bic')) {
                obj['bic'] = ApiClient.convertToType(data['bic'], 'String');
            }
            if (data.hasOwnProperty('businessUnit')) {
                obj['businessUnit'] = ModelWithName.constructFromObject(data['businessUnit']);
            }
            if (data.hasOwnProperty('company')) {
                obj['company'] = ModelWithName.constructFromObject(data['company']);
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = UserWithFirstNameLastNameAndPhotoFileModel.constructFromObject(data['createdBy']);
            }
            if (data.hasOwnProperty('createdDateTime')) {
                obj['createdDateTime'] = ApiClient.convertToType(data['createdDateTime'], 'Date');
            }
            if (data.hasOwnProperty('guid')) {
                obj['guid'] = ApiClient.convertToType(data['guid'], 'String');
            }
            if (data.hasOwnProperty('isActive')) {
                obj['isActive'] = ApiClient.convertToType(data['isActive'], 'Boolean');
            }
            if (data.hasOwnProperty('lastUpdatedBy')) {
                obj['lastUpdatedBy'] = UserWithFirstNameLastNameAndPhotoFileModel.constructFromObject(data['lastUpdatedBy']);
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BankAccountOutputModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BankAccountOutputModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BankAccountOutputModel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['accountNumber'] && !(typeof data['accountNumber'] === 'string' || data['accountNumber'] instanceof String)) {
            throw new Error("Expected the field `accountNumber` to be a primitive type in the JSON string but got " + data['accountNumber']);
        }
        // ensure the json data is a string
        if (data['bankName'] && !(typeof data['bankName'] === 'string' || data['bankName'] instanceof String)) {
            throw new Error("Expected the field `bankName` to be a primitive type in the JSON string but got " + data['bankName']);
        }
        // ensure the json data is a string
        if (data['bic'] && !(typeof data['bic'] === 'string' || data['bic'] instanceof String)) {
            throw new Error("Expected the field `bic` to be a primitive type in the JSON string but got " + data['bic']);
        }
        // validate the optional field `businessUnit`
        if (data['businessUnit']) { // data not null
          ModelWithName.validateJSON(data['businessUnit']);
        }
        // validate the optional field `company`
        if (data['company']) { // data not null
          ModelWithName.validateJSON(data['company']);
        }
        // validate the optional field `createdBy`
        if (data['createdBy']) { // data not null
          UserWithFirstNameLastNameAndPhotoFileModel.validateJSON(data['createdBy']);
        }
        // ensure the json data is a string
        if (data['guid'] && !(typeof data['guid'] === 'string' || data['guid'] instanceof String)) {
            throw new Error("Expected the field `guid` to be a primitive type in the JSON string but got " + data['guid']);
        }
        // validate the optional field `lastUpdatedBy`
        if (data['lastUpdatedBy']) { // data not null
          UserWithFirstNameLastNameAndPhotoFileModel.validateJSON(data['lastUpdatedBy']);
        }

        return true;
    }


}

BankAccountOutputModel.RequiredProperties = ["accountNumber", "bankName"];

/**
 * @member {String} accountNumber
 */
BankAccountOutputModel.prototype['accountNumber'] = undefined;

/**
 * @member {module:model/BankAccountFormat} accountNumberFormat
 */
BankAccountOutputModel.prototype['accountNumberFormat'] = undefined;

/**
 * @member {String} bankName
 */
BankAccountOutputModel.prototype['bankName'] = undefined;

/**
 * @member {String} bic
 */
BankAccountOutputModel.prototype['bic'] = undefined;

/**
 * @member {module:model/ModelWithName} businessUnit
 */
BankAccountOutputModel.prototype['businessUnit'] = undefined;

/**
 * @member {module:model/ModelWithName} company
 */
BankAccountOutputModel.prototype['company'] = undefined;

/**
 * @member {module:model/UserWithFirstNameLastNameAndPhotoFileModel} createdBy
 */
BankAccountOutputModel.prototype['createdBy'] = undefined;

/**
 * @member {Date} createdDateTime
 */
BankAccountOutputModel.prototype['createdDateTime'] = undefined;

/**
 * @member {String} guid
 */
BankAccountOutputModel.prototype['guid'] = undefined;

/**
 * @member {Boolean} isActive
 * @default true
 */
BankAccountOutputModel.prototype['isActive'] = true;

/**
 * @member {module:model/UserWithFirstNameLastNameAndPhotoFileModel} lastUpdatedBy
 */
BankAccountOutputModel.prototype['lastUpdatedBy'] = undefined;

/**
 * @member {Date} lastUpdatedDateTime
 */
BankAccountOutputModel.prototype['lastUpdatedDateTime'] = undefined;






export default BankAccountOutputModel;

