/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BillingScheduleType from './BillingScheduleType';
import FlatrateProjectSubModel from './FlatrateProjectSubModel';
import ModelBaseWithRequiredGuid from './ModelBaseWithRequiredGuid';
import MoneyOutputModel from './MoneyOutputModel';

/**
 * The FlatRateOutputModel model module.
 * @module model/FlatRateOutputModel
 * @version 1.0
 */
class FlatRateOutputModel {
    /**
     * Constructs a new <code>FlatRateOutputModel</code>.
     * @alias module:model/FlatRateOutputModel
     */
    constructor() { 
        
        FlatRateOutputModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['billAdditionalHours'] = true;
        obj['includesHours'] = 0;
    }

    /**
     * Constructs a <code>FlatRateOutputModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FlatRateOutputModel} obj Optional instance to populate.
     * @return {module:model/FlatRateOutputModel} The populated <code>FlatRateOutputModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FlatRateOutputModel();

            if (data.hasOwnProperty('billAdditionalHours')) {
                obj['billAdditionalHours'] = ApiClient.convertToType(data['billAdditionalHours'], 'Boolean');
            }
            if (data.hasOwnProperty('billingSchedule')) {
                obj['billingSchedule'] = BillingScheduleType.constructFromObject(data['billingSchedule']);
            }
            if (data.hasOwnProperty('guid')) {
                obj['guid'] = ApiClient.convertToType(data['guid'], 'String');
            }
            if (data.hasOwnProperty('includesHours')) {
                obj['includesHours'] = ApiClient.convertToType(data['includesHours'], 'Number');
            }
            if (data.hasOwnProperty('invoiceGuid')) {
                obj['invoiceGuid'] = ApiClient.convertToType(data['invoiceGuid'], 'String');
            }
            if (data.hasOwnProperty('phase')) {
                obj['phase'] = ModelBaseWithRequiredGuid.constructFromObject(data['phase']);
            }
            if (data.hasOwnProperty('plannedBillingDate')) {
                obj['plannedBillingDate'] = ApiClient.convertToType(data['plannedBillingDate'], 'Date');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = MoneyOutputModel.constructFromObject(data['price']);
            }
            if (data.hasOwnProperty('pricePerAdditionalHour')) {
                obj['pricePerAdditionalHour'] = MoneyOutputModel.constructFromObject(data['pricePerAdditionalHour']);
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = FlatrateProjectSubModel.constructFromObject(data['project']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FlatRateOutputModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FlatRateOutputModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['guid'] && !(typeof data['guid'] === 'string' || data['guid'] instanceof String)) {
            throw new Error("Expected the field `guid` to be a primitive type in the JSON string but got " + data['guid']);
        }
        // ensure the json data is a string
        if (data['invoiceGuid'] && !(typeof data['invoiceGuid'] === 'string' || data['invoiceGuid'] instanceof String)) {
            throw new Error("Expected the field `invoiceGuid` to be a primitive type in the JSON string but got " + data['invoiceGuid']);
        }
        // validate the optional field `phase`
        if (data['phase']) { // data not null
          ModelBaseWithRequiredGuid.validateJSON(data['phase']);
        }
        // validate the optional field `price`
        if (data['price']) { // data not null
          MoneyOutputModel.validateJSON(data['price']);
        }
        // validate the optional field `pricePerAdditionalHour`
        if (data['pricePerAdditionalHour']) { // data not null
          MoneyOutputModel.validateJSON(data['pricePerAdditionalHour']);
        }
        // validate the optional field `project`
        if (data['project']) { // data not null
          FlatrateProjectSubModel.validateJSON(data['project']);
        }

        return true;
    }


}



/**
 * @member {Boolean} billAdditionalHours
 * @default true
 */
FlatRateOutputModel.prototype['billAdditionalHours'] = true;

/**
 * @member {module:model/BillingScheduleType} billingSchedule
 */
FlatRateOutputModel.prototype['billingSchedule'] = undefined;

/**
 * @member {String} guid
 */
FlatRateOutputModel.prototype['guid'] = undefined;

/**
 * @member {Number} includesHours
 * @default 0
 */
FlatRateOutputModel.prototype['includesHours'] = 0;

/**
 * @member {String} invoiceGuid
 */
FlatRateOutputModel.prototype['invoiceGuid'] = undefined;

/**
 * @member {module:model/ModelBaseWithRequiredGuid} phase
 */
FlatRateOutputModel.prototype['phase'] = undefined;

/**
 * @member {Date} plannedBillingDate
 */
FlatRateOutputModel.prototype['plannedBillingDate'] = undefined;

/**
 * @member {module:model/MoneyOutputModel} price
 */
FlatRateOutputModel.prototype['price'] = undefined;

/**
 * @member {module:model/MoneyOutputModel} pricePerAdditionalHour
 */
FlatRateOutputModel.prototype['pricePerAdditionalHour'] = undefined;

/**
 * @member {module:model/FlatrateProjectSubModel} project
 */
FlatRateOutputModel.prototype['project'] = undefined;






export default FlatRateOutputModel;

