/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CustomerContactPersonSubModel from './CustomerContactPersonSubModel';
import FormattingCultureSubModel from './FormattingCultureSubModel';
import FreeTextModel2 from './FreeTextModel2';
import ModelWithName from './ModelWithName';
import MoneyOutputModel from './MoneyOutputModel';
import ProposalBillingAddressSubModel from './ProposalBillingAddressSubModel';
import ProposalCustomerSubModel from './ProposalCustomerSubModel';
import ProposalLanguageSubModel from './ProposalLanguageSubModel';
import ProposalProjectSubModel from './ProposalProjectSubModel';
import UserWithFirstNameLastNameAndPhotoFileModel from './UserWithFirstNameLastNameAndPhotoFileModel';

/**
 * The ProposalOutputModel model module.
 * @module model/ProposalOutputModel
 * @version 1.0
 */
class ProposalOutputModel {
    /**
     * Constructs a new <code>ProposalOutputModel</code>.
     * @alias module:model/ProposalOutputModel
     */
    constructor() { 
        
        ProposalOutputModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProposalOutputModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProposalOutputModel} obj Optional instance to populate.
     * @return {module:model/ProposalOutputModel} The populated <code>ProposalOutputModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProposalOutputModel();

            if (data.hasOwnProperty('billingAddress')) {
                obj['billingAddress'] = ProposalBillingAddressSubModel.constructFromObject(data['billingAddress']);
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = UserWithFirstNameLastNameAndPhotoFileModel.constructFromObject(data['createdBy']);
            }
            if (data.hasOwnProperty('createdDateTime')) {
                obj['createdDateTime'] = ApiClient.convertToType(data['createdDateTime'], 'Date');
            }
            if (data.hasOwnProperty('culture')) {
                obj['culture'] = FormattingCultureSubModel.constructFromObject(data['culture']);
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = ProposalCustomerSubModel.constructFromObject(data['customer']);
            }
            if (data.hasOwnProperty('customerContactPerson')) {
                obj['customerContactPerson'] = CustomerContactPersonSubModel.constructFromObject(data['customerContactPerson']);
            }
            if (data.hasOwnProperty('freeText1')) {
                obj['freeText1'] = FreeTextModel2.constructFromObject(data['freeText1']);
            }
            if (data.hasOwnProperty('freeText2')) {
                obj['freeText2'] = FreeTextModel2.constructFromObject(data['freeText2']);
            }
            if (data.hasOwnProperty('guid')) {
                obj['guid'] = ApiClient.convertToType(data['guid'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ProposalLanguageSubModel.constructFromObject(data['language']);
            }
            if (data.hasOwnProperty('lastUpdatedBy')) {
                obj['lastUpdatedBy'] = UserWithFirstNameLastNameAndPhotoFileModel.constructFromObject(data['lastUpdatedBy']);
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'String');
            }
            if (data.hasOwnProperty('pricelist')) {
                obj['pricelist'] = ModelWithName.constructFromObject(data['pricelist']);
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = ProposalProjectSubModel.constructFromObject(data['project']);
            }
            if (data.hasOwnProperty('proposalDate')) {
                obj['proposalDate'] = ApiClient.convertToType(data['proposalDate'], 'Date');
            }
            if (data.hasOwnProperty('proposalStatus')) {
                obj['proposalStatus'] = ModelWithName.constructFromObject(data['proposalStatus']);
            }
            if (data.hasOwnProperty('totalExcludingVat')) {
                obj['totalExcludingVat'] = MoneyOutputModel.constructFromObject(data['totalExcludingVat']);
            }
            if (data.hasOwnProperty('totalIncludingVat')) {
                obj['totalIncludingVat'] = MoneyOutputModel.constructFromObject(data['totalIncludingVat']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProposalOutputModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProposalOutputModel</code>.
     */
    static validateJSON(data) {
        // validate the optional field `billingAddress`
        if (data['billingAddress']) { // data not null
          ProposalBillingAddressSubModel.validateJSON(data['billingAddress']);
        }
        // validate the optional field `createdBy`
        if (data['createdBy']) { // data not null
          UserWithFirstNameLastNameAndPhotoFileModel.validateJSON(data['createdBy']);
        }
        // validate the optional field `culture`
        if (data['culture']) { // data not null
          FormattingCultureSubModel.validateJSON(data['culture']);
        }
        // validate the optional field `customer`
        if (data['customer']) { // data not null
          ProposalCustomerSubModel.validateJSON(data['customer']);
        }
        // validate the optional field `customerContactPerson`
        if (data['customerContactPerson']) { // data not null
          CustomerContactPersonSubModel.validateJSON(data['customerContactPerson']);
        }
        // validate the optional field `freeText1`
        if (data['freeText1']) { // data not null
          FreeTextModel2.validateJSON(data['freeText1']);
        }
        // validate the optional field `freeText2`
        if (data['freeText2']) { // data not null
          FreeTextModel2.validateJSON(data['freeText2']);
        }
        // ensure the json data is a string
        if (data['guid'] && !(typeof data['guid'] === 'string' || data['guid'] instanceof String)) {
            throw new Error("Expected the field `guid` to be a primitive type in the JSON string but got " + data['guid']);
        }
        // validate the optional field `language`
        if (data['language']) { // data not null
          ProposalLanguageSubModel.validateJSON(data['language']);
        }
        // validate the optional field `lastUpdatedBy`
        if (data['lastUpdatedBy']) { // data not null
          UserWithFirstNameLastNameAndPhotoFileModel.validateJSON(data['lastUpdatedBy']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['number'] && !(typeof data['number'] === 'string' || data['number'] instanceof String)) {
            throw new Error("Expected the field `number` to be a primitive type in the JSON string but got " + data['number']);
        }
        // validate the optional field `pricelist`
        if (data['pricelist']) { // data not null
          ModelWithName.validateJSON(data['pricelist']);
        }
        // validate the optional field `project`
        if (data['project']) { // data not null
          ProposalProjectSubModel.validateJSON(data['project']);
        }
        // validate the optional field `proposalStatus`
        if (data['proposalStatus']) { // data not null
          ModelWithName.validateJSON(data['proposalStatus']);
        }
        // validate the optional field `totalExcludingVat`
        if (data['totalExcludingVat']) { // data not null
          MoneyOutputModel.validateJSON(data['totalExcludingVat']);
        }
        // validate the optional field `totalIncludingVat`
        if (data['totalIncludingVat']) { // data not null
          MoneyOutputModel.validateJSON(data['totalIncludingVat']);
        }

        return true;
    }


}



/**
 * @member {module:model/ProposalBillingAddressSubModel} billingAddress
 */
ProposalOutputModel.prototype['billingAddress'] = undefined;

/**
 * @member {module:model/UserWithFirstNameLastNameAndPhotoFileModel} createdBy
 */
ProposalOutputModel.prototype['createdBy'] = undefined;

/**
 * @member {Date} createdDateTime
 */
ProposalOutputModel.prototype['createdDateTime'] = undefined;

/**
 * @member {module:model/FormattingCultureSubModel} culture
 */
ProposalOutputModel.prototype['culture'] = undefined;

/**
 * @member {module:model/ProposalCustomerSubModel} customer
 */
ProposalOutputModel.prototype['customer'] = undefined;

/**
 * @member {module:model/CustomerContactPersonSubModel} customerContactPerson
 */
ProposalOutputModel.prototype['customerContactPerson'] = undefined;

/**
 * @member {module:model/FreeTextModel2} freeText1
 */
ProposalOutputModel.prototype['freeText1'] = undefined;

/**
 * @member {module:model/FreeTextModel2} freeText2
 */
ProposalOutputModel.prototype['freeText2'] = undefined;

/**
 * @member {String} guid
 */
ProposalOutputModel.prototype['guid'] = undefined;

/**
 * @member {module:model/ProposalLanguageSubModel} language
 */
ProposalOutputModel.prototype['language'] = undefined;

/**
 * @member {module:model/UserWithFirstNameLastNameAndPhotoFileModel} lastUpdatedBy
 */
ProposalOutputModel.prototype['lastUpdatedBy'] = undefined;

/**
 * @member {Date} lastUpdatedDateTime
 */
ProposalOutputModel.prototype['lastUpdatedDateTime'] = undefined;

/**
 * @member {String} name
 */
ProposalOutputModel.prototype['name'] = undefined;

/**
 * @member {String} number
 */
ProposalOutputModel.prototype['number'] = undefined;

/**
 * @member {module:model/ModelWithName} pricelist
 */
ProposalOutputModel.prototype['pricelist'] = undefined;

/**
 * @member {module:model/ProposalProjectSubModel} project
 */
ProposalOutputModel.prototype['project'] = undefined;

/**
 * @member {Date} proposalDate
 */
ProposalOutputModel.prototype['proposalDate'] = undefined;

/**
 * @member {module:model/ModelWithName} proposalStatus
 */
ProposalOutputModel.prototype['proposalStatus'] = undefined;

/**
 * @member {module:model/MoneyOutputModel} totalExcludingVat
 */
ProposalOutputModel.prototype['totalExcludingVat'] = undefined;

/**
 * @member {module:model/MoneyOutputModel} totalIncludingVat
 */
ProposalOutputModel.prototype['totalIncludingVat'] = undefined;






export default ProposalOutputModel;

