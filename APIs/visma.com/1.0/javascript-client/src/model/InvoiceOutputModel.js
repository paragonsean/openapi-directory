/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CurrencySubModel from './CurrencySubModel';
import FormattingCultureSubModel2 from './FormattingCultureSubModel2';
import FreeTextModel2 from './FreeTextModel2';
import InvoiceCustomerSubModel from './InvoiceCustomerSubModel';
import InvoiceLanguageSubModel from './InvoiceLanguageSubModel';
import InvoiceProjectSubModel from './InvoiceProjectSubModel';
import InvoiceReceiverAddressSubModel from './InvoiceReceiverAddressSubModel';
import InvoiceSenderAddressSubModel from './InvoiceSenderAddressSubModel';
import InvoiceStatusSubModel from './InvoiceStatusSubModel';
import ModelWithName from './ModelWithName';
import MoneyOutputModel from './MoneyOutputModel';
import RelatedInvoiceSubModel from './RelatedInvoiceSubModel';
import UserWithFirstNameLastNameAndPhotoFileModel from './UserWithFirstNameLastNameAndPhotoFileModel';

/**
 * The InvoiceOutputModel model module.
 * @module model/InvoiceOutputModel
 * @version 1.0
 */
class InvoiceOutputModel {
    /**
     * Constructs a new <code>InvoiceOutputModel</code>.
     * @alias module:model/InvoiceOutputModel
     */
    constructor() { 
        
        InvoiceOutputModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InvoiceOutputModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvoiceOutputModel} obj Optional instance to populate.
     * @return {module:model/InvoiceOutputModel} The populated <code>InvoiceOutputModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvoiceOutputModel();

            if (data.hasOwnProperty('billingCustomer')) {
                obj['billingCustomer'] = InvoiceCustomerSubModel.constructFromObject(data['billingCustomer']);
            }
            if (data.hasOwnProperty('canBeDeleted')) {
                obj['canBeDeleted'] = ApiClient.convertToType(data['canBeDeleted'], 'Boolean');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = UserWithFirstNameLastNameAndPhotoFileModel.constructFromObject(data['createdBy']);
            }
            if (data.hasOwnProperty('createdDateTime')) {
                obj['createdDateTime'] = ApiClient.convertToType(data['createdDateTime'], 'Date');
            }
            if (data.hasOwnProperty('creditNoteInvoice')) {
                obj['creditNoteInvoice'] = RelatedInvoiceSubModel.constructFromObject(data['creditNoteInvoice']);
            }
            if (data.hasOwnProperty('culture')) {
                obj['culture'] = FormattingCultureSubModel2.constructFromObject(data['culture']);
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = CurrencySubModel.constructFromObject(data['currency']);
            }
            if (data.hasOwnProperty('currencyRate')) {
                obj['currencyRate'] = ApiClient.convertToType(data['currencyRate'], 'Number');
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = InvoiceCustomerSubModel.constructFromObject(data['customer']);
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('dueDate')) {
                obj['dueDate'] = ApiClient.convertToType(data['dueDate'], 'Date');
            }
            if (data.hasOwnProperty('entryDate')) {
                obj['entryDate'] = ApiClient.convertToType(data['entryDate'], 'Date');
            }
            if (data.hasOwnProperty('flatRatesTotalExcludingTax')) {
                obj['flatRatesTotalExcludingTax'] = MoneyOutputModel.constructFromObject(data['flatRatesTotalExcludingTax']);
            }
            if (data.hasOwnProperty('freeText1')) {
                obj['freeText1'] = FreeTextModel2.constructFromObject(data['freeText1']);
            }
            if (data.hasOwnProperty('freeText2')) {
                obj['freeText2'] = FreeTextModel2.constructFromObject(data['freeText2']);
            }
            if (data.hasOwnProperty('guid')) {
                obj['guid'] = ApiClient.convertToType(data['guid'], 'String');
            }
            if (data.hasOwnProperty('invoiceNumberBusinessUnitGuid')) {
                obj['invoiceNumberBusinessUnitGuid'] = ApiClient.convertToType(data['invoiceNumberBusinessUnitGuid'], 'String');
            }
            if (data.hasOwnProperty('invoiceTemplate')) {
                obj['invoiceTemplate'] = ModelWithName.constructFromObject(data['invoiceTemplate']);
            }
            if (data.hasOwnProperty('isCreditNote')) {
                obj['isCreditNote'] = ApiClient.convertToType(data['isCreditNote'], 'Boolean');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = InvoiceLanguageSubModel.constructFromObject(data['language']);
            }
            if (data.hasOwnProperty('lastUpdatedBy')) {
                obj['lastUpdatedBy'] = UserWithFirstNameLastNameAndPhotoFileModel.constructFromObject(data['lastUpdatedBy']);
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'Number');
            }
            if (data.hasOwnProperty('orderNumber')) {
                obj['orderNumber'] = ApiClient.convertToType(data['orderNumber'], 'String');
            }
            if (data.hasOwnProperty('ourReference')) {
                obj['ourReference'] = ApiClient.convertToType(data['ourReference'], 'String');
            }
            if (data.hasOwnProperty('overdueInterest')) {
                obj['overdueInterest'] = ApiClient.convertToType(data['overdueInterest'], 'Number');
            }
            if (data.hasOwnProperty('paymentDate')) {
                obj['paymentDate'] = ApiClient.convertToType(data['paymentDate'], 'Date');
            }
            if (data.hasOwnProperty('paymentTerm')) {
                obj['paymentTerm'] = ApiClient.convertToType(data['paymentTerm'], 'Number');
            }
            if (data.hasOwnProperty('projectFeesTotalExcludingTax')) {
                obj['projectFeesTotalExcludingTax'] = MoneyOutputModel.constructFromObject(data['projectFeesTotalExcludingTax']);
            }
            if (data.hasOwnProperty('projectTravelExpensesTotalExcludingTax')) {
                obj['projectTravelExpensesTotalExcludingTax'] = MoneyOutputModel.constructFromObject(data['projectTravelExpensesTotalExcludingTax']);
            }
            if (data.hasOwnProperty('projects')) {
                obj['projects'] = ApiClient.convertToType(data['projects'], [InvoiceProjectSubModel]);
            }
            if (data.hasOwnProperty('receiverAddress')) {
                obj['receiverAddress'] = InvoiceReceiverAddressSubModel.constructFromObject(data['receiverAddress']);
            }
            if (data.hasOwnProperty('receiverContactEmail')) {
                obj['receiverContactEmail'] = ApiClient.convertToType(data['receiverContactEmail'], 'String');
            }
            if (data.hasOwnProperty('receiverContactGuid')) {
                obj['receiverContactGuid'] = ApiClient.convertToType(data['receiverContactGuid'], 'String');
            }
            if (data.hasOwnProperty('receiverContactName')) {
                obj['receiverContactName'] = ApiClient.convertToType(data['receiverContactName'], 'String');
            }
            if (data.hasOwnProperty('receiverCustomerName')) {
                obj['receiverCustomerName'] = ApiClient.convertToType(data['receiverCustomerName'], 'String');
            }
            if (data.hasOwnProperty('receiverKvkNumber')) {
                obj['receiverKvkNumber'] = ApiClient.convertToType(data['receiverKvkNumber'], 'String');
            }
            if (data.hasOwnProperty('receiverVatNumber')) {
                obj['receiverVatNumber'] = ApiClient.convertToType(data['receiverVatNumber'], 'String');
            }
            if (data.hasOwnProperty('referenceNumber')) {
                obj['referenceNumber'] = ApiClient.convertToType(data['referenceNumber'], 'String');
            }
            if (data.hasOwnProperty('reimburseInvoice')) {
                obj['reimburseInvoice'] = RelatedInvoiceSubModel.constructFromObject(data['reimburseInvoice']);
            }
            if (data.hasOwnProperty('senderAddress')) {
                obj['senderAddress'] = InvoiceSenderAddressSubModel.constructFromObject(data['senderAddress']);
            }
            if (data.hasOwnProperty('senderContactGuid')) {
                obj['senderContactGuid'] = ApiClient.convertToType(data['senderContactGuid'], 'String');
            }
            if (data.hasOwnProperty('senderContactName')) {
                obj['senderContactName'] = ApiClient.convertToType(data['senderContactName'], 'String');
            }
            if (data.hasOwnProperty('senderKvkNumber')) {
                obj['senderKvkNumber'] = ApiClient.convertToType(data['senderKvkNumber'], 'String');
            }
            if (data.hasOwnProperty('senderName')) {
                obj['senderName'] = ApiClient.convertToType(data['senderName'], 'String');
            }
            if (data.hasOwnProperty('senderVatNumber')) {
                obj['senderVatNumber'] = ApiClient.convertToType(data['senderVatNumber'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = InvoiceStatusSubModel.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('totalExcludingTax')) {
                obj['totalExcludingTax'] = MoneyOutputModel.constructFromObject(data['totalExcludingTax']);
            }
            if (data.hasOwnProperty('totalIncludingTax')) {
                obj['totalIncludingTax'] = MoneyOutputModel.constructFromObject(data['totalIncludingTax']);
            }
            if (data.hasOwnProperty('totalTax')) {
                obj['totalTax'] = MoneyOutputModel.constructFromObject(data['totalTax']);
            }
            if (data.hasOwnProperty('workHourValueAddedTax')) {
                obj['workHourValueAddedTax'] = ApiClient.convertToType(data['workHourValueAddedTax'], 'Number');
            }
            if (data.hasOwnProperty('workHoursQuantity')) {
                obj['workHoursQuantity'] = ApiClient.convertToType(data['workHoursQuantity'], 'Number');
            }
            if (data.hasOwnProperty('workHoursTotalExcludingTax')) {
                obj['workHoursTotalExcludingTax'] = MoneyOutputModel.constructFromObject(data['workHoursTotalExcludingTax']);
            }
            if (data.hasOwnProperty('yourReference')) {
                obj['yourReference'] = ApiClient.convertToType(data['yourReference'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvoiceOutputModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvoiceOutputModel</code>.
     */
    static validateJSON(data) {
        // validate the optional field `billingCustomer`
        if (data['billingCustomer']) { // data not null
          InvoiceCustomerSubModel.validateJSON(data['billingCustomer']);
        }
        // validate the optional field `createdBy`
        if (data['createdBy']) { // data not null
          UserWithFirstNameLastNameAndPhotoFileModel.validateJSON(data['createdBy']);
        }
        // validate the optional field `creditNoteInvoice`
        if (data['creditNoteInvoice']) { // data not null
          RelatedInvoiceSubModel.validateJSON(data['creditNoteInvoice']);
        }
        // validate the optional field `culture`
        if (data['culture']) { // data not null
          FormattingCultureSubModel2.validateJSON(data['culture']);
        }
        // validate the optional field `currency`
        if (data['currency']) { // data not null
          CurrencySubModel.validateJSON(data['currency']);
        }
        // validate the optional field `customer`
        if (data['customer']) { // data not null
          InvoiceCustomerSubModel.validateJSON(data['customer']);
        }
        // validate the optional field `flatRatesTotalExcludingTax`
        if (data['flatRatesTotalExcludingTax']) { // data not null
          MoneyOutputModel.validateJSON(data['flatRatesTotalExcludingTax']);
        }
        // validate the optional field `freeText1`
        if (data['freeText1']) { // data not null
          FreeTextModel2.validateJSON(data['freeText1']);
        }
        // validate the optional field `freeText2`
        if (data['freeText2']) { // data not null
          FreeTextModel2.validateJSON(data['freeText2']);
        }
        // ensure the json data is a string
        if (data['guid'] && !(typeof data['guid'] === 'string' || data['guid'] instanceof String)) {
            throw new Error("Expected the field `guid` to be a primitive type in the JSON string but got " + data['guid']);
        }
        // ensure the json data is a string
        if (data['invoiceNumberBusinessUnitGuid'] && !(typeof data['invoiceNumberBusinessUnitGuid'] === 'string' || data['invoiceNumberBusinessUnitGuid'] instanceof String)) {
            throw new Error("Expected the field `invoiceNumberBusinessUnitGuid` to be a primitive type in the JSON string but got " + data['invoiceNumberBusinessUnitGuid']);
        }
        // validate the optional field `invoiceTemplate`
        if (data['invoiceTemplate']) { // data not null
          ModelWithName.validateJSON(data['invoiceTemplate']);
        }
        // validate the optional field `language`
        if (data['language']) { // data not null
          InvoiceLanguageSubModel.validateJSON(data['language']);
        }
        // validate the optional field `lastUpdatedBy`
        if (data['lastUpdatedBy']) { // data not null
          UserWithFirstNameLastNameAndPhotoFileModel.validateJSON(data['lastUpdatedBy']);
        }
        // ensure the json data is a string
        if (data['notes'] && !(typeof data['notes'] === 'string' || data['notes'] instanceof String)) {
            throw new Error("Expected the field `notes` to be a primitive type in the JSON string but got " + data['notes']);
        }
        // ensure the json data is a string
        if (data['orderNumber'] && !(typeof data['orderNumber'] === 'string' || data['orderNumber'] instanceof String)) {
            throw new Error("Expected the field `orderNumber` to be a primitive type in the JSON string but got " + data['orderNumber']);
        }
        // ensure the json data is a string
        if (data['ourReference'] && !(typeof data['ourReference'] === 'string' || data['ourReference'] instanceof String)) {
            throw new Error("Expected the field `ourReference` to be a primitive type in the JSON string but got " + data['ourReference']);
        }
        // validate the optional field `projectFeesTotalExcludingTax`
        if (data['projectFeesTotalExcludingTax']) { // data not null
          MoneyOutputModel.validateJSON(data['projectFeesTotalExcludingTax']);
        }
        // validate the optional field `projectTravelExpensesTotalExcludingTax`
        if (data['projectTravelExpensesTotalExcludingTax']) { // data not null
          MoneyOutputModel.validateJSON(data['projectTravelExpensesTotalExcludingTax']);
        }
        if (data['projects']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['projects'])) {
                throw new Error("Expected the field `projects` to be an array in the JSON data but got " + data['projects']);
            }
            // validate the optional field `projects` (array)
            for (const item of data['projects']) {
                InvoiceProjectSubModel.validateJSON(item);
            };
        }
        // validate the optional field `receiverAddress`
        if (data['receiverAddress']) { // data not null
          InvoiceReceiverAddressSubModel.validateJSON(data['receiverAddress']);
        }
        // ensure the json data is a string
        if (data['receiverContactEmail'] && !(typeof data['receiverContactEmail'] === 'string' || data['receiverContactEmail'] instanceof String)) {
            throw new Error("Expected the field `receiverContactEmail` to be a primitive type in the JSON string but got " + data['receiverContactEmail']);
        }
        // ensure the json data is a string
        if (data['receiverContactGuid'] && !(typeof data['receiverContactGuid'] === 'string' || data['receiverContactGuid'] instanceof String)) {
            throw new Error("Expected the field `receiverContactGuid` to be a primitive type in the JSON string but got " + data['receiverContactGuid']);
        }
        // ensure the json data is a string
        if (data['receiverContactName'] && !(typeof data['receiverContactName'] === 'string' || data['receiverContactName'] instanceof String)) {
            throw new Error("Expected the field `receiverContactName` to be a primitive type in the JSON string but got " + data['receiverContactName']);
        }
        // ensure the json data is a string
        if (data['receiverCustomerName'] && !(typeof data['receiverCustomerName'] === 'string' || data['receiverCustomerName'] instanceof String)) {
            throw new Error("Expected the field `receiverCustomerName` to be a primitive type in the JSON string but got " + data['receiverCustomerName']);
        }
        // ensure the json data is a string
        if (data['receiverKvkNumber'] && !(typeof data['receiverKvkNumber'] === 'string' || data['receiverKvkNumber'] instanceof String)) {
            throw new Error("Expected the field `receiverKvkNumber` to be a primitive type in the JSON string but got " + data['receiverKvkNumber']);
        }
        // ensure the json data is a string
        if (data['receiverVatNumber'] && !(typeof data['receiverVatNumber'] === 'string' || data['receiverVatNumber'] instanceof String)) {
            throw new Error("Expected the field `receiverVatNumber` to be a primitive type in the JSON string but got " + data['receiverVatNumber']);
        }
        // ensure the json data is a string
        if (data['referenceNumber'] && !(typeof data['referenceNumber'] === 'string' || data['referenceNumber'] instanceof String)) {
            throw new Error("Expected the field `referenceNumber` to be a primitive type in the JSON string but got " + data['referenceNumber']);
        }
        // validate the optional field `reimburseInvoice`
        if (data['reimburseInvoice']) { // data not null
          RelatedInvoiceSubModel.validateJSON(data['reimburseInvoice']);
        }
        // validate the optional field `senderAddress`
        if (data['senderAddress']) { // data not null
          InvoiceSenderAddressSubModel.validateJSON(data['senderAddress']);
        }
        // ensure the json data is a string
        if (data['senderContactGuid'] && !(typeof data['senderContactGuid'] === 'string' || data['senderContactGuid'] instanceof String)) {
            throw new Error("Expected the field `senderContactGuid` to be a primitive type in the JSON string but got " + data['senderContactGuid']);
        }
        // ensure the json data is a string
        if (data['senderContactName'] && !(typeof data['senderContactName'] === 'string' || data['senderContactName'] instanceof String)) {
            throw new Error("Expected the field `senderContactName` to be a primitive type in the JSON string but got " + data['senderContactName']);
        }
        // ensure the json data is a string
        if (data['senderKvkNumber'] && !(typeof data['senderKvkNumber'] === 'string' || data['senderKvkNumber'] instanceof String)) {
            throw new Error("Expected the field `senderKvkNumber` to be a primitive type in the JSON string but got " + data['senderKvkNumber']);
        }
        // ensure the json data is a string
        if (data['senderName'] && !(typeof data['senderName'] === 'string' || data['senderName'] instanceof String)) {
            throw new Error("Expected the field `senderName` to be a primitive type in the JSON string but got " + data['senderName']);
        }
        // ensure the json data is a string
        if (data['senderVatNumber'] && !(typeof data['senderVatNumber'] === 'string' || data['senderVatNumber'] instanceof String)) {
            throw new Error("Expected the field `senderVatNumber` to be a primitive type in the JSON string but got " + data['senderVatNumber']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          InvoiceStatusSubModel.validateJSON(data['status']);
        }
        // validate the optional field `totalExcludingTax`
        if (data['totalExcludingTax']) { // data not null
          MoneyOutputModel.validateJSON(data['totalExcludingTax']);
        }
        // validate the optional field `totalIncludingTax`
        if (data['totalIncludingTax']) { // data not null
          MoneyOutputModel.validateJSON(data['totalIncludingTax']);
        }
        // validate the optional field `totalTax`
        if (data['totalTax']) { // data not null
          MoneyOutputModel.validateJSON(data['totalTax']);
        }
        // validate the optional field `workHoursTotalExcludingTax`
        if (data['workHoursTotalExcludingTax']) { // data not null
          MoneyOutputModel.validateJSON(data['workHoursTotalExcludingTax']);
        }
        // ensure the json data is a string
        if (data['yourReference'] && !(typeof data['yourReference'] === 'string' || data['yourReference'] instanceof String)) {
            throw new Error("Expected the field `yourReference` to be a primitive type in the JSON string but got " + data['yourReference']);
        }

        return true;
    }


}



/**
 * @member {module:model/InvoiceCustomerSubModel} billingCustomer
 */
InvoiceOutputModel.prototype['billingCustomer'] = undefined;

/**
 * @member {Boolean} canBeDeleted
 */
InvoiceOutputModel.prototype['canBeDeleted'] = undefined;

/**
 * @member {module:model/UserWithFirstNameLastNameAndPhotoFileModel} createdBy
 */
InvoiceOutputModel.prototype['createdBy'] = undefined;

/**
 * @member {Date} createdDateTime
 */
InvoiceOutputModel.prototype['createdDateTime'] = undefined;

/**
 * @member {module:model/RelatedInvoiceSubModel} creditNoteInvoice
 */
InvoiceOutputModel.prototype['creditNoteInvoice'] = undefined;

/**
 * @member {module:model/FormattingCultureSubModel2} culture
 */
InvoiceOutputModel.prototype['culture'] = undefined;

/**
 * @member {module:model/CurrencySubModel} currency
 */
InvoiceOutputModel.prototype['currency'] = undefined;

/**
 * @member {Number} currencyRate
 */
InvoiceOutputModel.prototype['currencyRate'] = undefined;

/**
 * @member {module:model/InvoiceCustomerSubModel} customer
 */
InvoiceOutputModel.prototype['customer'] = undefined;

/**
 * @member {Date} date
 */
InvoiceOutputModel.prototype['date'] = undefined;

/**
 * @member {Date} dueDate
 */
InvoiceOutputModel.prototype['dueDate'] = undefined;

/**
 * @member {Date} entryDate
 */
InvoiceOutputModel.prototype['entryDate'] = undefined;

/**
 * @member {module:model/MoneyOutputModel} flatRatesTotalExcludingTax
 */
InvoiceOutputModel.prototype['flatRatesTotalExcludingTax'] = undefined;

/**
 * @member {module:model/FreeTextModel2} freeText1
 */
InvoiceOutputModel.prototype['freeText1'] = undefined;

/**
 * @member {module:model/FreeTextModel2} freeText2
 */
InvoiceOutputModel.prototype['freeText2'] = undefined;

/**
 * @member {String} guid
 */
InvoiceOutputModel.prototype['guid'] = undefined;

/**
 * @member {String} invoiceNumberBusinessUnitGuid
 */
InvoiceOutputModel.prototype['invoiceNumberBusinessUnitGuid'] = undefined;

/**
 * @member {module:model/ModelWithName} invoiceTemplate
 */
InvoiceOutputModel.prototype['invoiceTemplate'] = undefined;

/**
 * @member {Boolean} isCreditNote
 */
InvoiceOutputModel.prototype['isCreditNote'] = undefined;

/**
 * @member {module:model/InvoiceLanguageSubModel} language
 */
InvoiceOutputModel.prototype['language'] = undefined;

/**
 * @member {module:model/UserWithFirstNameLastNameAndPhotoFileModel} lastUpdatedBy
 */
InvoiceOutputModel.prototype['lastUpdatedBy'] = undefined;

/**
 * @member {Date} lastUpdatedDateTime
 */
InvoiceOutputModel.prototype['lastUpdatedDateTime'] = undefined;

/**
 * @member {String} notes
 */
InvoiceOutputModel.prototype['notes'] = undefined;

/**
 * @member {Number} number
 */
InvoiceOutputModel.prototype['number'] = undefined;

/**
 * @member {String} orderNumber
 */
InvoiceOutputModel.prototype['orderNumber'] = undefined;

/**
 * @member {String} ourReference
 */
InvoiceOutputModel.prototype['ourReference'] = undefined;

/**
 * @member {Number} overdueInterest
 */
InvoiceOutputModel.prototype['overdueInterest'] = undefined;

/**
 * @member {Date} paymentDate
 */
InvoiceOutputModel.prototype['paymentDate'] = undefined;

/**
 * @member {Number} paymentTerm
 */
InvoiceOutputModel.prototype['paymentTerm'] = undefined;

/**
 * @member {module:model/MoneyOutputModel} projectFeesTotalExcludingTax
 */
InvoiceOutputModel.prototype['projectFeesTotalExcludingTax'] = undefined;

/**
 * @member {module:model/MoneyOutputModel} projectTravelExpensesTotalExcludingTax
 */
InvoiceOutputModel.prototype['projectTravelExpensesTotalExcludingTax'] = undefined;

/**
 * @member {Array.<module:model/InvoiceProjectSubModel>} projects
 */
InvoiceOutputModel.prototype['projects'] = undefined;

/**
 * @member {module:model/InvoiceReceiverAddressSubModel} receiverAddress
 */
InvoiceOutputModel.prototype['receiverAddress'] = undefined;

/**
 * @member {String} receiverContactEmail
 */
InvoiceOutputModel.prototype['receiverContactEmail'] = undefined;

/**
 * @member {String} receiverContactGuid
 */
InvoiceOutputModel.prototype['receiverContactGuid'] = undefined;

/**
 * @member {String} receiverContactName
 */
InvoiceOutputModel.prototype['receiverContactName'] = undefined;

/**
 * @member {String} receiverCustomerName
 */
InvoiceOutputModel.prototype['receiverCustomerName'] = undefined;

/**
 * @member {String} receiverKvkNumber
 */
InvoiceOutputModel.prototype['receiverKvkNumber'] = undefined;

/**
 * @member {String} receiverVatNumber
 */
InvoiceOutputModel.prototype['receiverVatNumber'] = undefined;

/**
 * @member {String} referenceNumber
 */
InvoiceOutputModel.prototype['referenceNumber'] = undefined;

/**
 * @member {module:model/RelatedInvoiceSubModel} reimburseInvoice
 */
InvoiceOutputModel.prototype['reimburseInvoice'] = undefined;

/**
 * @member {module:model/InvoiceSenderAddressSubModel} senderAddress
 */
InvoiceOutputModel.prototype['senderAddress'] = undefined;

/**
 * @member {String} senderContactGuid
 */
InvoiceOutputModel.prototype['senderContactGuid'] = undefined;

/**
 * @member {String} senderContactName
 */
InvoiceOutputModel.prototype['senderContactName'] = undefined;

/**
 * @member {String} senderKvkNumber
 */
InvoiceOutputModel.prototype['senderKvkNumber'] = undefined;

/**
 * @member {String} senderName
 */
InvoiceOutputModel.prototype['senderName'] = undefined;

/**
 * @member {String} senderVatNumber
 */
InvoiceOutputModel.prototype['senderVatNumber'] = undefined;

/**
 * @member {module:model/InvoiceStatusSubModel} status
 */
InvoiceOutputModel.prototype['status'] = undefined;

/**
 * @member {module:model/MoneyOutputModel} totalExcludingTax
 */
InvoiceOutputModel.prototype['totalExcludingTax'] = undefined;

/**
 * @member {module:model/MoneyOutputModel} totalIncludingTax
 */
InvoiceOutputModel.prototype['totalIncludingTax'] = undefined;

/**
 * @member {module:model/MoneyOutputModel} totalTax
 */
InvoiceOutputModel.prototype['totalTax'] = undefined;

/**
 * @member {Number} workHourValueAddedTax
 */
InvoiceOutputModel.prototype['workHourValueAddedTax'] = undefined;

/**
 * @member {Number} workHoursQuantity
 */
InvoiceOutputModel.prototype['workHoursQuantity'] = undefined;

/**
 * @member {module:model/MoneyOutputModel} workHoursTotalExcludingTax
 */
InvoiceOutputModel.prototype['workHoursTotalExcludingTax'] = undefined;

/**
 * @member {String} yourReference
 */
InvoiceOutputModel.prototype['yourReference'] = undefined;






export default InvoiceOutputModel;

