/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CurrencyBaseModel from './CurrencyBaseModel';
import ModelBaseWithRequiredGuid from './ModelBaseWithRequiredGuid';
import ModelWithName from './ModelWithName';
import PhaseProjectSubModel from './PhaseProjectSubModel';
import PhaseStatusOutputModel from './PhaseStatusOutputModel';
import UserWithFirstNameLastNameAndPhotoFileModel from './UserWithFirstNameLastNameAndPhotoFileModel';

/**
 * The PhaseOutputModel model module.
 * @module model/PhaseOutputModel
 * @version 1.0
 */
class PhaseOutputModel {
    /**
     * Constructs a new <code>PhaseOutputModel</code>.
     * @alias module:model/PhaseOutputModel
     * @param name {String} 
     */
    constructor(name) { 
        
        PhaseOutputModel.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['isCompleted'] = false;
        obj['isLocked'] = false;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>PhaseOutputModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PhaseOutputModel} obj Optional instance to populate.
     * @return {module:model/PhaseOutputModel} The populated <code>PhaseOutputModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PhaseOutputModel();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = UserWithFirstNameLastNameAndPhotoFileModel.constructFromObject(data['createdBy']);
            }
            if (data.hasOwnProperty('createdDateTime')) {
                obj['createdDateTime'] = ApiClient.convertToType(data['createdDateTime'], 'Date');
            }
            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = CurrencyBaseModel.constructFromObject(data['currencyCode']);
            }
            if (data.hasOwnProperty('deadline')) {
                obj['deadline'] = ApiClient.convertToType(data['deadline'], 'Date');
            }
            if (data.hasOwnProperty('defaultWorkType')) {
                obj['defaultWorkType'] = ModelWithName.constructFromObject(data['defaultWorkType']);
            }
            if (data.hasOwnProperty('guid')) {
                obj['guid'] = ApiClient.convertToType(data['guid'], 'String');
            }
            if (data.hasOwnProperty('isCompleted')) {
                obj['isCompleted'] = ApiClient.convertToType(data['isCompleted'], 'Boolean');
            }
            if (data.hasOwnProperty('isLocked')) {
                obj['isLocked'] = ApiClient.convertToType(data['isLocked'], 'Boolean');
            }
            if (data.hasOwnProperty('lastUpdatedBy')) {
                obj['lastUpdatedBy'] = UserWithFirstNameLastNameAndPhotoFileModel.constructFromObject(data['lastUpdatedBy']);
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('originalDeadline')) {
                obj['originalDeadline'] = ApiClient.convertToType(data['originalDeadline'], 'Date');
            }
            if (data.hasOwnProperty('originalStartDate')) {
                obj['originalStartDate'] = ApiClient.convertToType(data['originalStartDate'], 'Date');
            }
            if (data.hasOwnProperty('originalWorkHoursEstimate')) {
                obj['originalWorkHoursEstimate'] = ApiClient.convertToType(data['originalWorkHoursEstimate'], 'Number');
            }
            if (data.hasOwnProperty('parentPhase')) {
                obj['parentPhase'] = ModelBaseWithRequiredGuid.constructFromObject(data['parentPhase']);
            }
            if (data.hasOwnProperty('phaseStatus')) {
                obj['phaseStatus'] = PhaseStatusOutputModel.constructFromObject(data['phaseStatus']);
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = PhaseProjectSubModel.constructFromObject(data['project']);
            }
            if (data.hasOwnProperty('sortOrder')) {
                obj['sortOrder'] = ApiClient.convertToType(data['sortOrder'], 'Number');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('workHoursEstimate')) {
                obj['workHoursEstimate'] = ApiClient.convertToType(data['workHoursEstimate'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PhaseOutputModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PhaseOutputModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PhaseOutputModel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // validate the optional field `createdBy`
        if (data['createdBy']) { // data not null
          UserWithFirstNameLastNameAndPhotoFileModel.validateJSON(data['createdBy']);
        }
        // validate the optional field `currencyCode`
        if (data['currencyCode']) { // data not null
          CurrencyBaseModel.validateJSON(data['currencyCode']);
        }
        // validate the optional field `defaultWorkType`
        if (data['defaultWorkType']) { // data not null
          ModelWithName.validateJSON(data['defaultWorkType']);
        }
        // ensure the json data is a string
        if (data['guid'] && !(typeof data['guid'] === 'string' || data['guid'] instanceof String)) {
            throw new Error("Expected the field `guid` to be a primitive type in the JSON string but got " + data['guid']);
        }
        // validate the optional field `lastUpdatedBy`
        if (data['lastUpdatedBy']) { // data not null
          UserWithFirstNameLastNameAndPhotoFileModel.validateJSON(data['lastUpdatedBy']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `parentPhase`
        if (data['parentPhase']) { // data not null
          ModelBaseWithRequiredGuid.validateJSON(data['parentPhase']);
        }
        // validate the optional field `phaseStatus`
        if (data['phaseStatus']) { // data not null
          PhaseStatusOutputModel.validateJSON(data['phaseStatus']);
        }
        // validate the optional field `project`
        if (data['project']) { // data not null
          PhaseProjectSubModel.validateJSON(data['project']);
        }

        return true;
    }


}

PhaseOutputModel.RequiredProperties = ["name"];

/**
 * @member {String} code
 */
PhaseOutputModel.prototype['code'] = undefined;

/**
 * @member {module:model/UserWithFirstNameLastNameAndPhotoFileModel} createdBy
 */
PhaseOutputModel.prototype['createdBy'] = undefined;

/**
 * @member {Date} createdDateTime
 */
PhaseOutputModel.prototype['createdDateTime'] = undefined;

/**
 * @member {module:model/CurrencyBaseModel} currencyCode
 */
PhaseOutputModel.prototype['currencyCode'] = undefined;

/**
 * @member {Date} deadline
 */
PhaseOutputModel.prototype['deadline'] = undefined;

/**
 * @member {module:model/ModelWithName} defaultWorkType
 */
PhaseOutputModel.prototype['defaultWorkType'] = undefined;

/**
 * @member {String} guid
 */
PhaseOutputModel.prototype['guid'] = undefined;

/**
 * @member {Boolean} isCompleted
 * @default false
 */
PhaseOutputModel.prototype['isCompleted'] = false;

/**
 * @member {Boolean} isLocked
 * @default false
 */
PhaseOutputModel.prototype['isLocked'] = false;

/**
 * @member {module:model/UserWithFirstNameLastNameAndPhotoFileModel} lastUpdatedBy
 */
PhaseOutputModel.prototype['lastUpdatedBy'] = undefined;

/**
 * @member {Date} lastUpdatedDateTime
 */
PhaseOutputModel.prototype['lastUpdatedDateTime'] = undefined;

/**
 * @member {String} name
 */
PhaseOutputModel.prototype['name'] = undefined;

/**
 * @member {Date} originalDeadline
 */
PhaseOutputModel.prototype['originalDeadline'] = undefined;

/**
 * @member {Date} originalStartDate
 */
PhaseOutputModel.prototype['originalStartDate'] = undefined;

/**
 * @member {Number} originalWorkHoursEstimate
 */
PhaseOutputModel.prototype['originalWorkHoursEstimate'] = undefined;

/**
 * @member {module:model/ModelBaseWithRequiredGuid} parentPhase
 */
PhaseOutputModel.prototype['parentPhase'] = undefined;

/**
 * @member {module:model/PhaseStatusOutputModel} phaseStatus
 */
PhaseOutputModel.prototype['phaseStatus'] = undefined;

/**
 * @member {module:model/PhaseProjectSubModel} project
 */
PhaseOutputModel.prototype['project'] = undefined;

/**
 * @member {Number} sortOrder
 */
PhaseOutputModel.prototype['sortOrder'] = undefined;

/**
 * @member {Date} startDate
 */
PhaseOutputModel.prototype['startDate'] = undefined;

/**
 * @member {Number} workHoursEstimate
 */
PhaseOutputModel.prototype['workHoursEstimate'] = undefined;






export default PhaseOutputModel;

