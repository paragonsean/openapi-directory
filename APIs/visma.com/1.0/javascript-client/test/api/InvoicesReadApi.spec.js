/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SeveraPublicRestApiDocumentation);
  }
}(this, function(expect, SeveraPublicRestApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SeveraPublicRestApiDocumentation.InvoicesReadApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InvoicesReadApi', function() {
    describe('finvoicesGetFinvoiceByInvoiceGuid', function() {
      it('should call finvoicesGetFinvoiceByInvoiceGuid successfully', function(done) {
        //uncomment below and update the code to test finvoicesGetFinvoiceByInvoiceGuid
        //instance.finvoicesGetFinvoiceByInvoiceGuid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('finvoicesGetFinvoicesByInvoiceStatus', function() {
      it('should call finvoicesGetFinvoicesByInvoiceStatus successfully', function(done) {
        //uncomment below and update the code to test finvoicesGetFinvoicesByInvoiceStatus
        //instance.finvoicesGetFinvoicesByInvoiceStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('invoiceRowsGetInvoiceRow', function() {
      it('should call invoiceRowsGetInvoiceRow successfully', function(done) {
        //uncomment below and update the code to test invoiceRowsGetInvoiceRow
        //instance.invoiceRowsGetInvoiceRow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('invoiceRowsGetInvoiceRows', function() {
      it('should call invoiceRowsGetInvoiceRows successfully', function(done) {
        //uncomment below and update the code to test invoiceRowsGetInvoiceRows
        //instance.invoiceRowsGetInvoiceRows(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('invoiceRowsGetInvoiceRowsForInvoice', function() {
      it('should call invoiceRowsGetInvoiceRowsForInvoice successfully', function(done) {
        //uncomment below and update the code to test invoiceRowsGetInvoiceRowsForInvoice
        //instance.invoiceRowsGetInvoiceRowsForInvoice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('invoiceSettingsGetInvoiceSettings', function() {
      it('should call invoiceSettingsGetInvoiceSettings successfully', function(done) {
        //uncomment below and update the code to test invoiceSettingsGetInvoiceSettings
        //instance.invoiceSettingsGetInvoiceSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('invoicesGetInvoice', function() {
      it('should call invoicesGetInvoice successfully', function(done) {
        //uncomment below and update the code to test invoicesGetInvoice
        //instance.invoicesGetInvoice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('invoicesGetInvoices', function() {
      it('should call invoicesGetInvoices successfully', function(done) {
        //uncomment below and update the code to test invoicesGetInvoices
        //instance.invoicesGetInvoices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectFeesGetInvoiceProjectFees', function() {
      it('should call projectFeesGetInvoiceProjectFees successfully', function(done) {
        //uncomment below and update the code to test projectFeesGetInvoiceProjectFees
        //instance.projectFeesGetInvoiceProjectFees(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectFeesGetInvoiceRowProjectFees', function() {
      it('should call projectFeesGetInvoiceRowProjectFees successfully', function(done) {
        //uncomment below and update the code to test projectFeesGetInvoiceRowProjectFees
        //instance.projectFeesGetInvoiceRowProjectFees(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectFeesGetUninvoicedProjectFeesForInvoice', function() {
      it('should call projectFeesGetUninvoicedProjectFeesForInvoice successfully', function(done) {
        //uncomment below and update the code to test projectFeesGetUninvoicedProjectFeesForInvoice
        //instance.projectFeesGetUninvoicedProjectFeesForInvoice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectInvoiceSettingsGetProjectInvoiceSetting', function() {
      it('should call projectInvoiceSettingsGetProjectInvoiceSetting successfully', function(done) {
        //uncomment below and update the code to test projectInvoiceSettingsGetProjectInvoiceSetting
        //instance.projectInvoiceSettingsGetProjectInvoiceSetting(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectInvoiceSettingsGetProjectInvoiceSettings', function() {
      it('should call projectInvoiceSettingsGetProjectInvoiceSettings successfully', function(done) {
        //uncomment below and update the code to test projectInvoiceSettingsGetProjectInvoiceSettings
        //instance.projectInvoiceSettingsGetProjectInvoiceSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectTravelExpensesGetInvoiceProjectTravelExpenses', function() {
      it('should call projectTravelExpensesGetInvoiceProjectTravelExpenses successfully', function(done) {
        //uncomment below and update the code to test projectTravelExpensesGetInvoiceProjectTravelExpenses
        //instance.projectTravelExpensesGetInvoiceProjectTravelExpenses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectTravelExpensesGetInvoiceRowProjectTravelExpenses', function() {
      it('should call projectTravelExpensesGetInvoiceRowProjectTravelExpenses successfully', function(done) {
        //uncomment below and update the code to test projectTravelExpensesGetInvoiceRowProjectTravelExpenses
        //instance.projectTravelExpensesGetInvoiceRowProjectTravelExpenses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectTravelExpensesGetUninvoicedProjectTravelExpensesForInvoice', function() {
      it('should call projectTravelExpensesGetUninvoicedProjectTravelExpensesForInvoice successfully', function(done) {
        //uncomment below and update the code to test projectTravelExpensesGetUninvoicedProjectTravelExpensesForInvoice
        //instance.projectTravelExpensesGetUninvoicedProjectTravelExpensesForInvoice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reimbursedProjectFeesGetInvoiceReimbursedProjectFees', function() {
      it('should call reimbursedProjectFeesGetInvoiceReimbursedProjectFees successfully', function(done) {
        //uncomment below and update the code to test reimbursedProjectFeesGetInvoiceReimbursedProjectFees
        //instance.reimbursedProjectFeesGetInvoiceReimbursedProjectFees(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reimbursedProjectFeesGetInvoiceRowReimbursedProjectFees', function() {
      it('should call reimbursedProjectFeesGetInvoiceRowReimbursedProjectFees successfully', function(done) {
        //uncomment below and update the code to test reimbursedProjectFeesGetInvoiceRowReimbursedProjectFees
        //instance.reimbursedProjectFeesGetInvoiceRowReimbursedProjectFees(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reimbursedProjectTravelExpensesGetInvoiceProjectTravelExpenses', function() {
      it('should call reimbursedProjectTravelExpensesGetInvoiceProjectTravelExpenses successfully', function(done) {
        //uncomment below and update the code to test reimbursedProjectTravelExpensesGetInvoiceProjectTravelExpenses
        //instance.reimbursedProjectTravelExpensesGetInvoiceProjectTravelExpenses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reimbursedProjectTravelExpensesGetInvoiceRowProjectTravelExpenses', function() {
      it('should call reimbursedProjectTravelExpensesGetInvoiceRowProjectTravelExpenses successfully', function(done) {
        //uncomment below and update the code to test reimbursedProjectTravelExpensesGetInvoiceRowProjectTravelExpenses
        //instance.reimbursedProjectTravelExpensesGetInvoiceRowProjectTravelExpenses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reimbursedWorkHoursGetInvoiceReimbursedWorkHours', function() {
      it('should call reimbursedWorkHoursGetInvoiceReimbursedWorkHours successfully', function(done) {
        //uncomment below and update the code to test reimbursedWorkHoursGetInvoiceReimbursedWorkHours
        //instance.reimbursedWorkHoursGetInvoiceReimbursedWorkHours(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reimbursedWorkHoursGetInvoiceRowReimbursedWorkHours', function() {
      it('should call reimbursedWorkHoursGetInvoiceRowReimbursedWorkHours successfully', function(done) {
        //uncomment below and update the code to test reimbursedWorkHoursGetInvoiceRowReimbursedWorkHours
        //instance.reimbursedWorkHoursGetInvoiceRowReimbursedWorkHours(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workHoursGetInvoiceRowWorkHours', function() {
      it('should call workHoursGetInvoiceRowWorkHours successfully', function(done) {
        //uncomment below and update the code to test workHoursGetInvoiceRowWorkHours
        //instance.workHoursGetInvoiceRowWorkHours(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workHoursGetInvoiceWorkHours', function() {
      it('should call workHoursGetInvoiceWorkHours successfully', function(done) {
        //uncomment below and update the code to test workHoursGetInvoiceWorkHours
        //instance.workHoursGetInvoiceWorkHours(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workHoursGetUninvoicedWorkHoursForInvoice', function() {
      it('should call workHoursGetUninvoicedWorkHoursForInvoice successfully', function(done) {
        //uncomment below and update the code to test workHoursGetUninvoicedWorkHoursForInvoice
        //instance.workHoursGetUninvoicedWorkHoursForInvoice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
