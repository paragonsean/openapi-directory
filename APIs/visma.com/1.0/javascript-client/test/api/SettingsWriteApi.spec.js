/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SeveraPublicRestApiDocumentation);
  }
}(this, function(expect, SeveraPublicRestApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SeveraPublicRestApiDocumentation.SettingsWriteApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SettingsWriteApi', function() {
    describe('activityTypesPatchActivityType', function() {
      it('should call activityTypesPatchActivityType successfully', function(done) {
        //uncomment below and update the code to test activityTypesPatchActivityType
        //instance.activityTypesPatchActivityType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('activityTypesPostActivityType', function() {
      it('should call activityTypesPostActivityType successfully', function(done) {
        //uncomment below and update the code to test activityTypesPostActivityType
        //instance.activityTypesPostActivityType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('businessUnitsPatchBusinessUnit', function() {
      it('should call businessUnitsPatchBusinessUnit successfully', function(done) {
        //uncomment below and update the code to test businessUnitsPatchBusinessUnit
        //instance.businessUnitsPatchBusinessUnit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('communicationTypesPatchCommunicationType', function() {
      it('should call communicationTypesPatchCommunicationType successfully', function(done) {
        //uncomment below and update the code to test communicationTypesPatchCommunicationType
        //instance.communicationTypesPatchCommunicationType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('communicationTypesPostCommunicationType', function() {
      it('should call communicationTypesPostCommunicationType successfully', function(done) {
        //uncomment below and update the code to test communicationTypesPostCommunicationType
        //instance.communicationTypesPostCommunicationType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('contactRolesPatchContactRole', function() {
      it('should call contactRolesPatchContactRole successfully', function(done) {
        //uncomment below and update the code to test contactRolesPatchContactRole
        //instance.contactRolesPatchContactRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('contactRolesPostContactRole', function() {
      it('should call contactRolesPostContactRole successfully', function(done) {
        //uncomment below and update the code to test contactRolesPostContactRole
        //instance.contactRolesPostContactRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('costAccountsPatchCostAccount', function() {
      it('should call costAccountsPatchCostAccount successfully', function(done) {
        //uncomment below and update the code to test costAccountsPatchCostAccount
        //instance.costAccountsPatchCostAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('costAccountsPostCostAccount', function() {
      it('should call costAccountsPostCostAccount successfully', function(done) {
        //uncomment below and update the code to test costAccountsPostCostAccount
        //instance.costAccountsPostCostAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('costCentersPatchCostCenter', function() {
      it('should call costCentersPatchCostCenter successfully', function(done) {
        //uncomment below and update the code to test costCentersPatchCostCenter
        //instance.costCentersPatchCostCenter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('costCentersPostCostCenter', function() {
      it('should call costCentersPostCostCenter successfully', function(done) {
        //uncomment below and update the code to test costCentersPostCostCenter
        //instance.costCentersPostCostCenter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('currenciesPatchCurrency', function() {
      it('should call currenciesPatchCurrency successfully', function(done) {
        //uncomment below and update the code to test currenciesPatchCurrency
        //instance.currenciesPatchCurrency(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerCustomPropertiesPatchCustomerCustomProperty', function() {
      it('should call customerCustomPropertiesPatchCustomerCustomProperty successfully', function(done) {
        //uncomment below and update the code to test customerCustomPropertiesPatchCustomerCustomProperty
        //instance.customerCustomPropertiesPatchCustomerCustomProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerCustomPropertiesPostCustomerCustomProperty', function() {
      it('should call customerCustomPropertiesPostCustomerCustomProperty successfully', function(done) {
        //uncomment below and update the code to test customerCustomPropertiesPostCustomerCustomProperty
        //instance.customerCustomPropertiesPostCustomerCustomProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerCustomPropertySelectionItemsPatchCustomerCustomPropertySelectionItem', function() {
      it('should call customerCustomPropertySelectionItemsPatchCustomerCustomPropertySelectionItem successfully', function(done) {
        //uncomment below and update the code to test customerCustomPropertySelectionItemsPatchCustomerCustomPropertySelectionItem
        //instance.customerCustomPropertySelectionItemsPatchCustomerCustomPropertySelectionItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerCustomPropertySelectionItemsPostCustomerCustomPropertySelectionItem', function() {
      it('should call customerCustomPropertySelectionItemsPostCustomerCustomPropertySelectionItem successfully', function(done) {
        //uncomment below and update the code to test customerCustomPropertySelectionItemsPostCustomerCustomPropertySelectionItem
        //instance.customerCustomPropertySelectionItemsPostCustomerCustomPropertySelectionItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('industriesPatchIndustry', function() {
      it('should call industriesPatchIndustry successfully', function(done) {
        //uncomment below and update the code to test industriesPatchIndustry
        //instance.industriesPatchIndustry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('industriesPostIndustry', function() {
      it('should call industriesPostIndustry successfully', function(done) {
        //uncomment below and update the code to test industriesPostIndustry
        //instance.industriesPostIndustry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('invoiceStatusesPatchInvoiceStatus', function() {
      it('should call invoiceStatusesPatchInvoiceStatus successfully', function(done) {
        //uncomment below and update the code to test invoiceStatusesPatchInvoiceStatus
        //instance.invoiceStatusesPatchInvoiceStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('invoiceStatusesPostInvoiceStatus', function() {
      it('should call invoiceStatusesPostInvoiceStatus successfully', function(done) {
        //uncomment below and update the code to test invoiceStatusesPostInvoiceStatus
        //instance.invoiceStatusesPostInvoiceStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('keywordsPatchKeyword', function() {
      it('should call keywordsPatchKeyword successfully', function(done) {
        //uncomment below and update the code to test keywordsPatchKeyword
        //instance.keywordsPatchKeyword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('keywordsPostKeyword', function() {
      it('should call keywordsPostKeyword successfully', function(done) {
        //uncomment below and update the code to test keywordsPostKeyword
        //instance.keywordsPostKeyword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('leadSourcesPatchLeadSource', function() {
      it('should call leadSourcesPatchLeadSource successfully', function(done) {
        //uncomment below and update the code to test leadSourcesPatchLeadSource
        //instance.leadSourcesPatchLeadSource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('leadSourcesPostLeadSource', function() {
      it('should call leadSourcesPostLeadSource successfully', function(done) {
        //uncomment below and update the code to test leadSourcesPostLeadSource
        //instance.leadSourcesPostLeadSource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('marketSegmentsPatchMarketSegment', function() {
      it('should call marketSegmentsPatchMarketSegment successfully', function(done) {
        //uncomment below and update the code to test marketSegmentsPatchMarketSegment
        //instance.marketSegmentsPatchMarketSegment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('marketSegmentsPostMarketSegment', function() {
      it('should call marketSegmentsPostMarketSegment successfully', function(done) {
        //uncomment below and update the code to test marketSegmentsPostMarketSegment
        //instance.marketSegmentsPostMarketSegment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('overtimesPatchOvertime', function() {
      it('should call overtimesPatchOvertime successfully', function(done) {
        //uncomment below and update the code to test overtimesPatchOvertime
        //instance.overtimesPatchOvertime(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('overtimesPostOvertime', function() {
      it('should call overtimesPostOvertime successfully', function(done) {
        //uncomment below and update the code to test overtimesPostOvertime
        //instance.overtimesPostOvertime(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('phaseStatusTypesPatchPhaseStatusType', function() {
      it('should call phaseStatusTypesPatchPhaseStatusType successfully', function(done) {
        //uncomment below and update the code to test phaseStatusTypesPatchPhaseStatusType
        //instance.phaseStatusTypesPatchPhaseStatusType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('phaseStatusTypesPostPhaseStatusType', function() {
      it('should call phaseStatusTypesPostPhaseStatusType successfully', function(done) {
        //uncomment below and update the code to test phaseStatusTypesPostPhaseStatusType
        //instance.phaseStatusTypesPostPhaseStatusType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productCategoriesPatchProductCategory', function() {
      it('should call productCategoriesPatchProductCategory successfully', function(done) {
        //uncomment below and update the code to test productCategoriesPatchProductCategory
        //instance.productCategoriesPatchProductCategory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productCategoriesPostProductCategory', function() {
      it('should call productCategoriesPostProductCategory successfully', function(done) {
        //uncomment below and update the code to test productCategoriesPostProductCategory
        //instance.productCategoriesPostProductCategory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productCountrySettingsPatchProductCountrySettings', function() {
      it('should call productCountrySettingsPatchProductCountrySettings successfully', function(done) {
        //uncomment below and update the code to test productCountrySettingsPatchProductCountrySettings
        //instance.productCountrySettingsPatchProductCountrySettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productCountrySettingsPostProductCountrySettings', function() {
      it('should call productCountrySettingsPostProductCountrySettings successfully', function(done) {
        //uncomment below and update the code to test productCountrySettingsPostProductCountrySettings
        //instance.productCountrySettingsPostProductCountrySettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productsPatchProduct', function() {
      it('should call productsPatchProduct successfully', function(done) {
        //uncomment below and update the code to test productsPatchProduct
        //instance.productsPatchProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productsPostProduct', function() {
      it('should call productsPostProduct successfully', function(done) {
        //uncomment below and update the code to test productsPostProduct
        //instance.productsPostProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectBillingCustomersPatchProjectBillingCustomer', function() {
      it('should call projectBillingCustomersPatchProjectBillingCustomer successfully', function(done) {
        //uncomment below and update the code to test projectBillingCustomersPatchProjectBillingCustomer
        //instance.projectBillingCustomersPatchProjectBillingCustomer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectBillingCustomersPostProjectBillingCustomer', function() {
      it('should call projectBillingCustomersPostProjectBillingCustomer successfully', function(done) {
        //uncomment below and update the code to test projectBillingCustomersPostProjectBillingCustomer
        //instance.projectBillingCustomersPostProjectBillingCustomer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectCustomPropertiesPatchProjectCustomProperty', function() {
      it('should call projectCustomPropertiesPatchProjectCustomProperty successfully', function(done) {
        //uncomment below and update the code to test projectCustomPropertiesPatchProjectCustomProperty
        //instance.projectCustomPropertiesPatchProjectCustomProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectCustomPropertiesPostProjectCustomProperty', function() {
      it('should call projectCustomPropertiesPostProjectCustomProperty successfully', function(done) {
        //uncomment below and update the code to test projectCustomPropertiesPostProjectCustomProperty
        //instance.projectCustomPropertiesPostProjectCustomProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectCustomPropertySelectionItemsPatchProjectCustomPropertySelectionItem', function() {
      it('should call projectCustomPropertySelectionItemsPatchProjectCustomPropertySelectionItem successfully', function(done) {
        //uncomment below and update the code to test projectCustomPropertySelectionItemsPatchProjectCustomPropertySelectionItem
        //instance.projectCustomPropertySelectionItemsPatchProjectCustomPropertySelectionItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectCustomPropertySelectionItemsPostProjectCustomPropertySelectionItem', function() {
      it('should call projectCustomPropertySelectionItemsPostProjectCustomPropertySelectionItem successfully', function(done) {
        //uncomment below and update the code to test projectCustomPropertySelectionItemsPostProjectCustomPropertySelectionItem
        //instance.projectCustomPropertySelectionItemsPostProjectCustomPropertySelectionItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectMemberCostExceptionsPatch', function() {
      it('should call projectMemberCostExceptionsPatch successfully', function(done) {
        //uncomment below and update the code to test projectMemberCostExceptionsPatch
        //instance.projectMemberCostExceptionsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectMemberCostExceptionsPost', function() {
      it('should call projectMemberCostExceptionsPost successfully', function(done) {
        //uncomment below and update the code to test projectMemberCostExceptionsPost
        //instance.projectMemberCostExceptionsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectStatusTypesPatchProjectStatusType', function() {
      it('should call projectStatusTypesPatchProjectStatusType successfully', function(done) {
        //uncomment below and update the code to test projectStatusTypesPatchProjectStatusType
        //instance.projectStatusTypesPatchProjectStatusType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectStatusTypesPostProjectStatusType', function() {
      it('should call projectStatusTypesPostProjectStatusType successfully', function(done) {
        //uncomment below and update the code to test projectStatusTypesPostProjectStatusType
        //instance.projectStatusTypesPostProjectStatusType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectTaskStatusesPatchProjectTaskStatus', function() {
      it('should call projectTaskStatusesPatchProjectTaskStatus successfully', function(done) {
        //uncomment below and update the code to test projectTaskStatusesPatchProjectTaskStatus
        //instance.projectTaskStatusesPatchProjectTaskStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectTaskStatusesPostProjectTaskStatus', function() {
      it('should call projectTaskStatusesPostProjectTaskStatus successfully', function(done) {
        //uncomment below and update the code to test projectTaskStatusesPostProjectTaskStatus
        //instance.projectTaskStatusesPostProjectTaskStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('proposalStatusesPatchProposalStatus', function() {
      it('should call proposalStatusesPatchProposalStatus successfully', function(done) {
        //uncomment below and update the code to test proposalStatusesPatchProposalStatus
        //instance.proposalStatusesPatchProposalStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('proposalStatusesPostProposalStatus', function() {
      it('should call proposalStatusesPostProposalStatus successfully', function(done) {
        //uncomment below and update the code to test proposalStatusesPostProposalStatus
        //instance.proposalStatusesPostProposalStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rolesPatchRole', function() {
      it('should call rolesPatchRole successfully', function(done) {
        //uncomment below and update the code to test rolesPatchRole
        //instance.rolesPatchRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rolesPostRole', function() {
      it('should call rolesPostRole successfully', function(done) {
        //uncomment below and update the code to test rolesPostRole
        //instance.rolesPostRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('salesAccountsPatchSalesAccount', function() {
      it('should call salesAccountsPatchSalesAccount successfully', function(done) {
        //uncomment below and update the code to test salesAccountsPatchSalesAccount
        //instance.salesAccountsPatchSalesAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('salesAccountsPostSalesAccount', function() {
      it('should call salesAccountsPostSalesAccount successfully', function(done) {
        //uncomment below and update the code to test salesAccountsPostSalesAccount
        //instance.salesAccountsPostSalesAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('salesStatusTypesPatchSalesStatusType', function() {
      it('should call salesStatusTypesPatchSalesStatusType successfully', function(done) {
        //uncomment below and update the code to test salesStatusTypesPatchSalesStatusType
        //instance.salesStatusTypesPatchSalesStatusType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('salesStatusTypesPostSalesStatusType', function() {
      it('should call salesStatusTypesPostSalesStatusType successfully', function(done) {
        //uncomment below and update the code to test salesStatusTypesPostSalesStatusType
        //instance.salesStatusTypesPostSalesStatusType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('timeEntryTypesPatchTimeEntryType', function() {
      it('should call timeEntryTypesPatchTimeEntryType successfully', function(done) {
        //uncomment below and update the code to test timeEntryTypesPatchTimeEntryType
        //instance.timeEntryTypesPatchTimeEntryType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('timeEntryTypesPostTimeEntryType', function() {
      it('should call timeEntryTypesPostTimeEntryType successfully', function(done) {
        //uncomment below and update the code to test timeEntryTypesPostTimeEntryType
        //instance.timeEntryTypesPostTimeEntryType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('travelExpenseTypeCountrySettingsPatchTravelExpenseTypeCountrySettings', function() {
      it('should call travelExpenseTypeCountrySettingsPatchTravelExpenseTypeCountrySettings successfully', function(done) {
        //uncomment below and update the code to test travelExpenseTypeCountrySettingsPatchTravelExpenseTypeCountrySettings
        //instance.travelExpenseTypeCountrySettingsPatchTravelExpenseTypeCountrySettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('travelExpenseTypeCountrySettingsPostTravelExpenseTypeCountrySettings', function() {
      it('should call travelExpenseTypeCountrySettingsPostTravelExpenseTypeCountrySettings successfully', function(done) {
        //uncomment below and update the code to test travelExpenseTypeCountrySettingsPostTravelExpenseTypeCountrySettings
        //instance.travelExpenseTypeCountrySettingsPostTravelExpenseTypeCountrySettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('travelExpenseTypesPatchTravelExpenseType', function() {
      it('should call travelExpenseTypesPatchTravelExpenseType successfully', function(done) {
        //uncomment below and update the code to test travelExpenseTypesPatchTravelExpenseType
        //instance.travelExpenseTypesPatchTravelExpenseType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('travelExpenseTypesPostTravelExpenseType', function() {
      it('should call travelExpenseTypesPostTravelExpenseType successfully', function(done) {
        //uncomment below and update the code to test travelExpenseTypesPostTravelExpenseType
        //instance.travelExpenseTypesPostTravelExpenseType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('travelReimbursementStatusPatchTravelReimbursementStatus', function() {
      it('should call travelReimbursementStatusPatchTravelReimbursementStatus successfully', function(done) {
        //uncomment below and update the code to test travelReimbursementStatusPatchTravelReimbursementStatus
        //instance.travelReimbursementStatusPatchTravelReimbursementStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('travelReimbursementStatusPostTravelReimbursementStatus', function() {
      it('should call travelReimbursementStatusPostTravelReimbursementStatus successfully', function(done) {
        //uncomment below and update the code to test travelReimbursementStatusPostTravelReimbursementStatus
        //instance.travelReimbursementStatusPostTravelReimbursementStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCustomPropertiesPatchUserCustomProperty', function() {
      it('should call userCustomPropertiesPatchUserCustomProperty successfully', function(done) {
        //uncomment below and update the code to test userCustomPropertiesPatchUserCustomProperty
        //instance.userCustomPropertiesPatchUserCustomProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCustomPropertiesPostUserCustomProperty', function() {
      it('should call userCustomPropertiesPostUserCustomProperty successfully', function(done) {
        //uncomment below and update the code to test userCustomPropertiesPostUserCustomProperty
        //instance.userCustomPropertiesPostUserCustomProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCustomPropertySelectionItemsPatchUserCustomPropertySelectionItem', function() {
      it('should call userCustomPropertySelectionItemsPatchUserCustomPropertySelectionItem successfully', function(done) {
        //uncomment below and update the code to test userCustomPropertySelectionItemsPatchUserCustomPropertySelectionItem
        //instance.userCustomPropertySelectionItemsPatchUserCustomPropertySelectionItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCustomPropertySelectionItemsPostUserCustomPropertySelectionItem', function() {
      it('should call userCustomPropertySelectionItemsPostUserCustomPropertySelectionItem successfully', function(done) {
        //uncomment below and update the code to test userCustomPropertySelectionItemsPostUserCustomPropertySelectionItem
        //instance.userCustomPropertySelectionItemsPostUserCustomPropertySelectionItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vatRatesPatchVatRate', function() {
      it('should call vatRatesPatchVatRate successfully', function(done) {
        //uncomment below and update the code to test vatRatesPatchVatRate
        //instance.vatRatesPatchVatRate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vatRatesPostVatRate', function() {
      it('should call vatRatesPostVatRate successfully', function(done) {
        //uncomment below and update the code to test vatRatesPostVatRate
        //instance.vatRatesPostVatRate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workContractsPatchWorkContract', function() {
      it('should call workContractsPatchWorkContract successfully', function(done) {
        //uncomment below and update the code to test workContractsPatchWorkContract
        //instance.workContractsPatchWorkContract(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workContractsPostWorkContract', function() {
      it('should call workContractsPostWorkContract successfully', function(done) {
        //uncomment below and update the code to test workContractsPostWorkContract
        //instance.workContractsPostWorkContract(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workTypesPatchWorkType', function() {
      it('should call workTypesPatchWorkType successfully', function(done) {
        //uncomment below and update the code to test workTypesPatchWorkType
        //instance.workTypesPatchWorkType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workTypesPostWorkType', function() {
      it('should call workTypesPostWorkType successfully', function(done) {
        //uncomment below and update the code to test workTypesPostWorkType
        //instance.workTypesPostWorkType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
