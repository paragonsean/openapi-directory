/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SeveraPublicRestApiDocumentation);
  }
}(this, function(expect, SeveraPublicRestApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SeveraPublicRestApiDocumentation.SettingsDeleteApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SettingsDeleteApi', function() {
    describe('activityTypesDeleteActivityType', function() {
      it('should call activityTypesDeleteActivityType successfully', function(done) {
        //uncomment below and update the code to test activityTypesDeleteActivityType
        //instance.activityTypesDeleteActivityType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('communicationTypesDeleteCommunicationType', function() {
      it('should call communicationTypesDeleteCommunicationType successfully', function(done) {
        //uncomment below and update the code to test communicationTypesDeleteCommunicationType
        //instance.communicationTypesDeleteCommunicationType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('contactRolesDeleteContactRole', function() {
      it('should call contactRolesDeleteContactRole successfully', function(done) {
        //uncomment below and update the code to test contactRolesDeleteContactRole
        //instance.contactRolesDeleteContactRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('costAccountsDeleteCostAccount', function() {
      it('should call costAccountsDeleteCostAccount successfully', function(done) {
        //uncomment below and update the code to test costAccountsDeleteCostAccount
        //instance.costAccountsDeleteCostAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('costCentersDeleteCostCenter', function() {
      it('should call costCentersDeleteCostCenter successfully', function(done) {
        //uncomment below and update the code to test costCentersDeleteCostCenter
        //instance.costCentersDeleteCostCenter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerCustomPropertiesDeleteCustomerCustomProperty', function() {
      it('should call customerCustomPropertiesDeleteCustomerCustomProperty successfully', function(done) {
        //uncomment below and update the code to test customerCustomPropertiesDeleteCustomerCustomProperty
        //instance.customerCustomPropertiesDeleteCustomerCustomProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerCustomPropertySelectionItemsDeleteCustomerCustomPropertySelectionItem', function() {
      it('should call customerCustomPropertySelectionItemsDeleteCustomerCustomPropertySelectionItem successfully', function(done) {
        //uncomment below and update the code to test customerCustomPropertySelectionItemsDeleteCustomerCustomPropertySelectionItem
        //instance.customerCustomPropertySelectionItemsDeleteCustomerCustomPropertySelectionItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('industriesDeleteIndustry', function() {
      it('should call industriesDeleteIndustry successfully', function(done) {
        //uncomment below and update the code to test industriesDeleteIndustry
        //instance.industriesDeleteIndustry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('invoiceStatusesDeleteInvoiceStatus', function() {
      it('should call invoiceStatusesDeleteInvoiceStatus successfully', function(done) {
        //uncomment below and update the code to test invoiceStatusesDeleteInvoiceStatus
        //instance.invoiceStatusesDeleteInvoiceStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('keywordsDeleteKeyword', function() {
      it('should call keywordsDeleteKeyword successfully', function(done) {
        //uncomment below and update the code to test keywordsDeleteKeyword
        //instance.keywordsDeleteKeyword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('leadSourcesDeleteLeadSource', function() {
      it('should call leadSourcesDeleteLeadSource successfully', function(done) {
        //uncomment below and update the code to test leadSourcesDeleteLeadSource
        //instance.leadSourcesDeleteLeadSource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('marketSegmentsDeleteMarketSegment', function() {
      it('should call marketSegmentsDeleteMarketSegment successfully', function(done) {
        //uncomment below and update the code to test marketSegmentsDeleteMarketSegment
        //instance.marketSegmentsDeleteMarketSegment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('overtimesDeleteOvertime', function() {
      it('should call overtimesDeleteOvertime successfully', function(done) {
        //uncomment below and update the code to test overtimesDeleteOvertime
        //instance.overtimesDeleteOvertime(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('phaseStatusTypesDeletePhaseStatusType', function() {
      it('should call phaseStatusTypesDeletePhaseStatusType successfully', function(done) {
        //uncomment below and update the code to test phaseStatusTypesDeletePhaseStatusType
        //instance.phaseStatusTypesDeletePhaseStatusType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productCategoriesDeleteProductCategory', function() {
      it('should call productCategoriesDeleteProductCategory successfully', function(done) {
        //uncomment below and update the code to test productCategoriesDeleteProductCategory
        //instance.productCategoriesDeleteProductCategory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productCountrySettingsDeleteProductCountrySetting', function() {
      it('should call productCountrySettingsDeleteProductCountrySetting successfully', function(done) {
        //uncomment below and update the code to test productCountrySettingsDeleteProductCountrySetting
        //instance.productCountrySettingsDeleteProductCountrySetting(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productsDeleteProduct', function() {
      it('should call productsDeleteProduct successfully', function(done) {
        //uncomment below and update the code to test productsDeleteProduct
        //instance.productsDeleteProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectBillingCustomersDeleteProjectBillingCustomer', function() {
      it('should call projectBillingCustomersDeleteProjectBillingCustomer successfully', function(done) {
        //uncomment below and update the code to test projectBillingCustomersDeleteProjectBillingCustomer
        //instance.projectBillingCustomersDeleteProjectBillingCustomer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectCustomPropertiesDeleteProjectCustomProperty', function() {
      it('should call projectCustomPropertiesDeleteProjectCustomProperty successfully', function(done) {
        //uncomment below and update the code to test projectCustomPropertiesDeleteProjectCustomProperty
        //instance.projectCustomPropertiesDeleteProjectCustomProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectCustomPropertySelectionItemsDeleteProjectCustomPropertySelectionItem', function() {
      it('should call projectCustomPropertySelectionItemsDeleteProjectCustomPropertySelectionItem successfully', function(done) {
        //uncomment below and update the code to test projectCustomPropertySelectionItemsDeleteProjectCustomPropertySelectionItem
        //instance.projectCustomPropertySelectionItemsDeleteProjectCustomPropertySelectionItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectMemberCostExceptionsDelete', function() {
      it('should call projectMemberCostExceptionsDelete successfully', function(done) {
        //uncomment below and update the code to test projectMemberCostExceptionsDelete
        //instance.projectMemberCostExceptionsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectStatusTypesDeleteProjectStatusType', function() {
      it('should call projectStatusTypesDeleteProjectStatusType successfully', function(done) {
        //uncomment below and update the code to test projectStatusTypesDeleteProjectStatusType
        //instance.projectStatusTypesDeleteProjectStatusType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectTaskStatusesDeleteProjectTaskStatus', function() {
      it('should call projectTaskStatusesDeleteProjectTaskStatus successfully', function(done) {
        //uncomment below and update the code to test projectTaskStatusesDeleteProjectTaskStatus
        //instance.projectTaskStatusesDeleteProjectTaskStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('proposalStatusesDeleteProposalStatus', function() {
      it('should call proposalStatusesDeleteProposalStatus successfully', function(done) {
        //uncomment below and update the code to test proposalStatusesDeleteProposalStatus
        //instance.proposalStatusesDeleteProposalStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rolesDeleteRole', function() {
      it('should call rolesDeleteRole successfully', function(done) {
        //uncomment below and update the code to test rolesDeleteRole
        //instance.rolesDeleteRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('salesAccountsDeleteSalesAccount', function() {
      it('should call salesAccountsDeleteSalesAccount successfully', function(done) {
        //uncomment below and update the code to test salesAccountsDeleteSalesAccount
        //instance.salesAccountsDeleteSalesAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('salesStatusTypesDeleteSalesStatusType', function() {
      it('should call salesStatusTypesDeleteSalesStatusType successfully', function(done) {
        //uncomment below and update the code to test salesStatusTypesDeleteSalesStatusType
        //instance.salesStatusTypesDeleteSalesStatusType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('timeEntryTypesDeleteTimeEntryType', function() {
      it('should call timeEntryTypesDeleteTimeEntryType successfully', function(done) {
        //uncomment below and update the code to test timeEntryTypesDeleteTimeEntryType
        //instance.timeEntryTypesDeleteTimeEntryType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('travelExpenseTypeCountrySettingsDeleteTravelExpenseTypeCountrySetting', function() {
      it('should call travelExpenseTypeCountrySettingsDeleteTravelExpenseTypeCountrySetting successfully', function(done) {
        //uncomment below and update the code to test travelExpenseTypeCountrySettingsDeleteTravelExpenseTypeCountrySetting
        //instance.travelExpenseTypeCountrySettingsDeleteTravelExpenseTypeCountrySetting(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('travelExpenseTypesDeleteTravelExpenseType', function() {
      it('should call travelExpenseTypesDeleteTravelExpenseType successfully', function(done) {
        //uncomment below and update the code to test travelExpenseTypesDeleteTravelExpenseType
        //instance.travelExpenseTypesDeleteTravelExpenseType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('travelReimbursementStatusDeleteTravelReimbursementStatus', function() {
      it('should call travelReimbursementStatusDeleteTravelReimbursementStatus successfully', function(done) {
        //uncomment below and update the code to test travelReimbursementStatusDeleteTravelReimbursementStatus
        //instance.travelReimbursementStatusDeleteTravelReimbursementStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCustomPropertiesDeleteUserCustomProperty', function() {
      it('should call userCustomPropertiesDeleteUserCustomProperty successfully', function(done) {
        //uncomment below and update the code to test userCustomPropertiesDeleteUserCustomProperty
        //instance.userCustomPropertiesDeleteUserCustomProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCustomPropertySelectionItemsDeleteUserCustomPropertySelectionItem', function() {
      it('should call userCustomPropertySelectionItemsDeleteUserCustomPropertySelectionItem successfully', function(done) {
        //uncomment below and update the code to test userCustomPropertySelectionItemsDeleteUserCustomPropertySelectionItem
        //instance.userCustomPropertySelectionItemsDeleteUserCustomPropertySelectionItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vatRatesDeleteVatRate', function() {
      it('should call vatRatesDeleteVatRate successfully', function(done) {
        //uncomment below and update the code to test vatRatesDeleteVatRate
        //instance.vatRatesDeleteVatRate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workContractsDeleteWorkContract', function() {
      it('should call workContractsDeleteWorkContract successfully', function(done) {
        //uncomment below and update the code to test workContractsDeleteWorkContract
        //instance.workContractsDeleteWorkContract(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workTypesDeleteWorkType', function() {
      it('should call workTypesDeleteWorkType successfully', function(done) {
        //uncomment below and update the code to test workTypesDeleteWorkType
        //instance.workTypesDeleteWorkType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
