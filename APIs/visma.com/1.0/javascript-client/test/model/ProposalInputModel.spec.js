/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SeveraPublicRestApiDocumentation);
  }
}(this, function(expect, SeveraPublicRestApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SeveraPublicRestApiDocumentation.ProposalInputModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProposalInputModel', function() {
    it('should create an instance of ProposalInputModel', function() {
      // uncomment below and update the code to test ProposalInputModel
      //var instance = new SeveraPublicRestApiDocumentation.ProposalInputModel();
      //expect(instance).to.be.a(SeveraPublicRestApiDocumentation.ProposalInputModel);
    });

    it('should have the property billingAddress (base name: "billingAddress")', function() {
      // uncomment below and update the code to test the property billingAddress
      //var instance = new SeveraPublicRestApiDocumentation.ProposalInputModel();
      //expect(instance).to.be();
    });

    it('should have the property culture (base name: "culture")', function() {
      // uncomment below and update the code to test the property culture
      //var instance = new SeveraPublicRestApiDocumentation.ProposalInputModel();
      //expect(instance).to.be();
    });

    it('should have the property customerContactPerson (base name: "customerContactPerson")', function() {
      // uncomment below and update the code to test the property customerContactPerson
      //var instance = new SeveraPublicRestApiDocumentation.ProposalInputModel();
      //expect(instance).to.be();
    });

    it('should have the property freeText1 (base name: "freeText1")', function() {
      // uncomment below and update the code to test the property freeText1
      //var instance = new SeveraPublicRestApiDocumentation.ProposalInputModel();
      //expect(instance).to.be();
    });

    it('should have the property freeText2 (base name: "freeText2")', function() {
      // uncomment below and update the code to test the property freeText2
      //var instance = new SeveraPublicRestApiDocumentation.ProposalInputModel();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new SeveraPublicRestApiDocumentation.ProposalInputModel();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SeveraPublicRestApiDocumentation.ProposalInputModel();
      //expect(instance).to.be();
    });

    it('should have the property project (base name: "project")', function() {
      // uncomment below and update the code to test the property project
      //var instance = new SeveraPublicRestApiDocumentation.ProposalInputModel();
      //expect(instance).to.be();
    });

    it('should have the property proposalDate (base name: "proposalDate")', function() {
      // uncomment below and update the code to test the property proposalDate
      //var instance = new SeveraPublicRestApiDocumentation.ProposalInputModel();
      //expect(instance).to.be();
    });

    it('should have the property proposalStatus (base name: "proposalStatus")', function() {
      // uncomment below and update the code to test the property proposalStatus
      //var instance = new SeveraPublicRestApiDocumentation.ProposalInputModel();
      //expect(instance).to.be();
    });

  });

}));
