/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SeveraPublicRestApiDocumentation);
  }
}(this, function(expect, SeveraPublicRestApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SeveraPublicRestApiDocumentation.UserInputModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserInputModel', function() {
    it('should create an instance of UserInputModel', function() {
      // uncomment below and update the code to test UserInputModel
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be.a(SeveraPublicRestApiDocumentation.UserInputModel);
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property bankAccountNumber (base name: "bankAccountNumber")', function() {
      // uncomment below and update the code to test the property bankAccountNumber
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property birthDate (base name: "birthDate")', function() {
      // uncomment below and update the code to test the property birthDate
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property businessUnit (base name: "businessUnit")', function() {
      // uncomment below and update the code to test the property businessUnit
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property code (base name: "code")', function() {
      // uncomment below and update the code to test the property code
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property countryRegion (base name: "countryRegion")', function() {
      // uncomment below and update the code to test the property countryRegion
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property createDefaultWorkContract (base name: "createDefaultWorkContract")', function() {
      // uncomment below and update the code to test the property createDefaultWorkContract
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property culture (base name: "culture")', function() {
      // uncomment below and update the code to test the property culture
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property defaultActivityType (base name: "defaultActivityType")', function() {
      // uncomment below and update the code to test the property defaultActivityType
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "firstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property isActive (base name: "isActive")', function() {
      // uncomment below and update the code to test the property isActive
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "lastName")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property permissionProfile (base name: "permissionProfile")', function() {
      // uncomment below and update the code to test the property permissionProfile
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property postalCode (base name: "postalCode")', function() {
      // uncomment below and update the code to test the property postalCode
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property salutation (base name: "salutation")', function() {
      // uncomment below and update the code to test the property salutation
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property satisfaction (base name: "satisfaction")', function() {
      // uncomment below and update the code to test the property satisfaction
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property socialSecurityNumber (base name: "socialSecurityNumber")', function() {
      // uncomment below and update the code to test the property socialSecurityNumber
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property superiorUser (base name: "superiorUser")', function() {
      // uncomment below and update the code to test the property superiorUser
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property timezone (base name: "timezone")', function() {
      // uncomment below and update the code to test the property timezone
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property userType (base name: "userType")', function() {
      // uncomment below and update the code to test the property userType
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

    it('should have the property workType (base name: "workType")', function() {
      // uncomment below and update the code to test the property workType
      //var instance = new SeveraPublicRestApiDocumentation.UserInputModel();
      //expect(instance).to.be();
    });

  });

}));
