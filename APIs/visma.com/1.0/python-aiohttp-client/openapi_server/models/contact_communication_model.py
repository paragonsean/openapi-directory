# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.communication_type_sub_model import CommunicationTypeSubModel
from openapi_server.models.model_base_with_required_guid import ModelBaseWithRequiredGuid
from openapi_server.models.user_with_first_name_last_name_and_photo_file_model import UserWithFirstNameLastNameAndPhotoFileModel
from openapi_server import util


class ContactCommunicationModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, communication_type: CommunicationTypeSubModel=None, contact: ModelBaseWithRequiredGuid=None, created_by: UserWithFirstNameLastNameAndPhotoFileModel=None, created_date_time: datetime=None, guid: str=None, is_forbidden_to_use: bool=True, last_updated_by: UserWithFirstNameLastNameAndPhotoFileModel=None, last_updated_date_time: datetime=None, value: str=None):
        """ContactCommunicationModel - a model defined in OpenAPI

        :param communication_type: The communication_type of this ContactCommunicationModel.
        :param contact: The contact of this ContactCommunicationModel.
        :param created_by: The created_by of this ContactCommunicationModel.
        :param created_date_time: The created_date_time of this ContactCommunicationModel.
        :param guid: The guid of this ContactCommunicationModel.
        :param is_forbidden_to_use: The is_forbidden_to_use of this ContactCommunicationModel.
        :param last_updated_by: The last_updated_by of this ContactCommunicationModel.
        :param last_updated_date_time: The last_updated_date_time of this ContactCommunicationModel.
        :param value: The value of this ContactCommunicationModel.
        """
        self.openapi_types = {
            'communication_type': CommunicationTypeSubModel,
            'contact': ModelBaseWithRequiredGuid,
            'created_by': UserWithFirstNameLastNameAndPhotoFileModel,
            'created_date_time': datetime,
            'guid': str,
            'is_forbidden_to_use': bool,
            'last_updated_by': UserWithFirstNameLastNameAndPhotoFileModel,
            'last_updated_date_time': datetime,
            'value': str
        }

        self.attribute_map = {
            'communication_type': 'communicationType',
            'contact': 'contact',
            'created_by': 'createdBy',
            'created_date_time': 'createdDateTime',
            'guid': 'guid',
            'is_forbidden_to_use': 'isForbiddenToUse',
            'last_updated_by': 'lastUpdatedBy',
            'last_updated_date_time': 'lastUpdatedDateTime',
            'value': 'value'
        }

        self._communication_type = communication_type
        self._contact = contact
        self._created_by = created_by
        self._created_date_time = created_date_time
        self._guid = guid
        self._is_forbidden_to_use = is_forbidden_to_use
        self._last_updated_by = last_updated_by
        self._last_updated_date_time = last_updated_date_time
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactCommunicationModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContactCommunicationModel of this ContactCommunicationModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def communication_type(self):
        """Gets the communication_type of this ContactCommunicationModel.


        :return: The communication_type of this ContactCommunicationModel.
        :rtype: CommunicationTypeSubModel
        """
        return self._communication_type

    @communication_type.setter
    def communication_type(self, communication_type):
        """Sets the communication_type of this ContactCommunicationModel.


        :param communication_type: The communication_type of this ContactCommunicationModel.
        :type communication_type: CommunicationTypeSubModel
        """
        if communication_type is None:
            raise ValueError("Invalid value for `communication_type`, must not be `None`")

        self._communication_type = communication_type

    @property
    def contact(self):
        """Gets the contact of this ContactCommunicationModel.


        :return: The contact of this ContactCommunicationModel.
        :rtype: ModelBaseWithRequiredGuid
        """
        return self._contact

    @contact.setter
    def contact(self, contact):
        """Sets the contact of this ContactCommunicationModel.


        :param contact: The contact of this ContactCommunicationModel.
        :type contact: ModelBaseWithRequiredGuid
        """
        if contact is None:
            raise ValueError("Invalid value for `contact`, must not be `None`")

        self._contact = contact

    @property
    def created_by(self):
        """Gets the created_by of this ContactCommunicationModel.


        :return: The created_by of this ContactCommunicationModel.
        :rtype: UserWithFirstNameLastNameAndPhotoFileModel
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this ContactCommunicationModel.


        :param created_by: The created_by of this ContactCommunicationModel.
        :type created_by: UserWithFirstNameLastNameAndPhotoFileModel
        """

        self._created_by = created_by

    @property
    def created_date_time(self):
        """Gets the created_date_time of this ContactCommunicationModel.


        :return: The created_date_time of this ContactCommunicationModel.
        :rtype: datetime
        """
        return self._created_date_time

    @created_date_time.setter
    def created_date_time(self, created_date_time):
        """Sets the created_date_time of this ContactCommunicationModel.


        :param created_date_time: The created_date_time of this ContactCommunicationModel.
        :type created_date_time: datetime
        """

        self._created_date_time = created_date_time

    @property
    def guid(self):
        """Gets the guid of this ContactCommunicationModel.


        :return: The guid of this ContactCommunicationModel.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this ContactCommunicationModel.


        :param guid: The guid of this ContactCommunicationModel.
        :type guid: str
        """

        self._guid = guid

    @property
    def is_forbidden_to_use(self):
        """Gets the is_forbidden_to_use of this ContactCommunicationModel.


        :return: The is_forbidden_to_use of this ContactCommunicationModel.
        :rtype: bool
        """
        return self._is_forbidden_to_use

    @is_forbidden_to_use.setter
    def is_forbidden_to_use(self, is_forbidden_to_use):
        """Sets the is_forbidden_to_use of this ContactCommunicationModel.


        :param is_forbidden_to_use: The is_forbidden_to_use of this ContactCommunicationModel.
        :type is_forbidden_to_use: bool
        """

        self._is_forbidden_to_use = is_forbidden_to_use

    @property
    def last_updated_by(self):
        """Gets the last_updated_by of this ContactCommunicationModel.


        :return: The last_updated_by of this ContactCommunicationModel.
        :rtype: UserWithFirstNameLastNameAndPhotoFileModel
        """
        return self._last_updated_by

    @last_updated_by.setter
    def last_updated_by(self, last_updated_by):
        """Sets the last_updated_by of this ContactCommunicationModel.


        :param last_updated_by: The last_updated_by of this ContactCommunicationModel.
        :type last_updated_by: UserWithFirstNameLastNameAndPhotoFileModel
        """

        self._last_updated_by = last_updated_by

    @property
    def last_updated_date_time(self):
        """Gets the last_updated_date_time of this ContactCommunicationModel.


        :return: The last_updated_date_time of this ContactCommunicationModel.
        :rtype: datetime
        """
        return self._last_updated_date_time

    @last_updated_date_time.setter
    def last_updated_date_time(self, last_updated_date_time):
        """Sets the last_updated_date_time of this ContactCommunicationModel.


        :param last_updated_date_time: The last_updated_date_time of this ContactCommunicationModel.
        :type last_updated_date_time: datetime
        """

        self._last_updated_date_time = last_updated_date_time

    @property
    def value(self):
        """Gets the value of this ContactCommunicationModel.


        :return: The value of this ContactCommunicationModel.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ContactCommunicationModel.


        :param value: The value of this ContactCommunicationModel.
        :type value: str
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")
        if value is not None and len(value) < 1:
            raise ValueError("Invalid value for `value`, length must be greater than or equal to `1`")

        self._value = value
