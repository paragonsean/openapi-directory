# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DailyModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, every_weekday: bool=None, interval: int=None):
        """DailyModel - a model defined in OpenAPI

        :param every_weekday: The every_weekday of this DailyModel.
        :param interval: The interval of this DailyModel.
        """
        self.openapi_types = {
            'every_weekday': bool,
            'interval': int
        }

        self.attribute_map = {
            'every_weekday': 'everyWeekday',
            'interval': 'interval'
        }

        self._every_weekday = every_weekday
        self._interval = interval

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DailyModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DailyModel of this DailyModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def every_weekday(self):
        """Gets the every_weekday of this DailyModel.


        :return: The every_weekday of this DailyModel.
        :rtype: bool
        """
        return self._every_weekday

    @every_weekday.setter
    def every_weekday(self, every_weekday):
        """Sets the every_weekday of this DailyModel.


        :param every_weekday: The every_weekday of this DailyModel.
        :type every_weekday: bool
        """

        self._every_weekday = every_weekday

    @property
    def interval(self):
        """Gets the interval of this DailyModel.


        :return: The interval of this DailyModel.
        :rtype: int
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this DailyModel.


        :param interval: The interval of this DailyModel.
        :type interval: int
        """

        self._interval = interval
