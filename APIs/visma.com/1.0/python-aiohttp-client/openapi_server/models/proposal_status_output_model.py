# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProposalStatusOutputModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, guid: str=None, is_active: bool=None, is_default: bool=None, is_lost: bool=None, is_won: bool=None, name: str=None, sort_order: int=None):
        """ProposalStatusOutputModel - a model defined in OpenAPI

        :param guid: The guid of this ProposalStatusOutputModel.
        :param is_active: The is_active of this ProposalStatusOutputModel.
        :param is_default: The is_default of this ProposalStatusOutputModel.
        :param is_lost: The is_lost of this ProposalStatusOutputModel.
        :param is_won: The is_won of this ProposalStatusOutputModel.
        :param name: The name of this ProposalStatusOutputModel.
        :param sort_order: The sort_order of this ProposalStatusOutputModel.
        """
        self.openapi_types = {
            'guid': str,
            'is_active': bool,
            'is_default': bool,
            'is_lost': bool,
            'is_won': bool,
            'name': str,
            'sort_order': int
        }

        self.attribute_map = {
            'guid': 'guid',
            'is_active': 'isActive',
            'is_default': 'isDefault',
            'is_lost': 'isLost',
            'is_won': 'isWon',
            'name': 'name',
            'sort_order': 'sortOrder'
        }

        self._guid = guid
        self._is_active = is_active
        self._is_default = is_default
        self._is_lost = is_lost
        self._is_won = is_won
        self._name = name
        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProposalStatusOutputModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProposalStatusOutputModel of this ProposalStatusOutputModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def guid(self):
        """Gets the guid of this ProposalStatusOutputModel.


        :return: The guid of this ProposalStatusOutputModel.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this ProposalStatusOutputModel.


        :param guid: The guid of this ProposalStatusOutputModel.
        :type guid: str
        """

        self._guid = guid

    @property
    def is_active(self):
        """Gets the is_active of this ProposalStatusOutputModel.


        :return: The is_active of this ProposalStatusOutputModel.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this ProposalStatusOutputModel.


        :param is_active: The is_active of this ProposalStatusOutputModel.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def is_default(self):
        """Gets the is_default of this ProposalStatusOutputModel.


        :return: The is_default of this ProposalStatusOutputModel.
        :rtype: bool
        """
        return self._is_default

    @is_default.setter
    def is_default(self, is_default):
        """Sets the is_default of this ProposalStatusOutputModel.


        :param is_default: The is_default of this ProposalStatusOutputModel.
        :type is_default: bool
        """

        self._is_default = is_default

    @property
    def is_lost(self):
        """Gets the is_lost of this ProposalStatusOutputModel.


        :return: The is_lost of this ProposalStatusOutputModel.
        :rtype: bool
        """
        return self._is_lost

    @is_lost.setter
    def is_lost(self, is_lost):
        """Sets the is_lost of this ProposalStatusOutputModel.


        :param is_lost: The is_lost of this ProposalStatusOutputModel.
        :type is_lost: bool
        """

        self._is_lost = is_lost

    @property
    def is_won(self):
        """Gets the is_won of this ProposalStatusOutputModel.


        :return: The is_won of this ProposalStatusOutputModel.
        :rtype: bool
        """
        return self._is_won

    @is_won.setter
    def is_won(self, is_won):
        """Sets the is_won of this ProposalStatusOutputModel.


        :param is_won: The is_won of this ProposalStatusOutputModel.
        :type is_won: bool
        """

        self._is_won = is_won

    @property
    def name(self):
        """Gets the name of this ProposalStatusOutputModel.


        :return: The name of this ProposalStatusOutputModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProposalStatusOutputModel.


        :param name: The name of this ProposalStatusOutputModel.
        :type name: str
        """

        self._name = name

    @property
    def sort_order(self):
        """Gets the sort_order of this ProposalStatusOutputModel.


        :return: The sort_order of this ProposalStatusOutputModel.
        :rtype: int
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this ProposalStatusOutputModel.


        :param sort_order: The sort_order of this ProposalStatusOutputModel.
        :type sort_order: int
        """

        self._sort_order = sort_order
