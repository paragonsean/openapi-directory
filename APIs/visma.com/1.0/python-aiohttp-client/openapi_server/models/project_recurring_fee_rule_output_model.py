# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_with_name import ModelWithName
from openapi_server.models.money_output_model import MoneyOutputModel
from openapi_server.models.product_type import ProductType
from openapi_server.models.project_cost_center_sub_model import ProjectCostCenterSubModel
from openapi_server.models.project_fee_customer_sub_model import ProjectFeeCustomerSubModel
from openapi_server.models.project_fee_product_sub_model import ProjectFeeProductSubModel
from openapi_server.models.project_fee_project_sub_model import ProjectFeeProjectSubModel
from openapi_server.models.project_sales_account_sub_model import ProjectSalesAccountSubModel
from openapi_server.models.recurrence_end_types import RecurrenceEndTypes
from openapi_server.models.user_sub_model import UserSubModel
from openapi_server.models.user_with_first_name_last_name_and_photo_file_model import UserWithFirstNameLastNameAndPhotoFileModel
from openapi_server import util


class ProjectRecurringFeeRuleOutputModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cost_center: ProjectCostCenterSubModel=None, created_by: UserWithFirstNameLastNameAndPhotoFileModel=None, created_date_time: datetime=None, customer: ProjectFeeCustomerSubModel=None, description: str=None, display_period_start_date: date=None, frequency: int=None, generated_times: int=None, guid: str=None, has_volume_pricing: bool=None, is_active: bool=True, last_updated_by: UserWithFirstNameLastNameAndPhotoFileModel=None, last_updated_date_time: datetime=None, measurement_unit: str=None, name: str=None, phase: ModelWithName=None, product: ProjectFeeProductSubModel=None, product_type: ProductType=None, project: ProjectFeeProjectSubModel=None, quantity: float=None, recurrence_end_date: date=None, recurrence_end_type: RecurrenceEndTypes=None, recurrence_start_date: date=None, recurrence_times: int=None, recurring_sales_account: ProjectSalesAccountSubModel=None, sales_account: ProjectSalesAccountSubModel=None, unit_cost: MoneyOutputModel=None, unit_price: MoneyOutputModel=None, user: UserSubModel=None, vat_rate: float=None):
        """ProjectRecurringFeeRuleOutputModel - a model defined in OpenAPI

        :param cost_center: The cost_center of this ProjectRecurringFeeRuleOutputModel.
        :param created_by: The created_by of this ProjectRecurringFeeRuleOutputModel.
        :param created_date_time: The created_date_time of this ProjectRecurringFeeRuleOutputModel.
        :param customer: The customer of this ProjectRecurringFeeRuleOutputModel.
        :param description: The description of this ProjectRecurringFeeRuleOutputModel.
        :param display_period_start_date: The display_period_start_date of this ProjectRecurringFeeRuleOutputModel.
        :param frequency: The frequency of this ProjectRecurringFeeRuleOutputModel.
        :param generated_times: The generated_times of this ProjectRecurringFeeRuleOutputModel.
        :param guid: The guid of this ProjectRecurringFeeRuleOutputModel.
        :param has_volume_pricing: The has_volume_pricing of this ProjectRecurringFeeRuleOutputModel.
        :param is_active: The is_active of this ProjectRecurringFeeRuleOutputModel.
        :param last_updated_by: The last_updated_by of this ProjectRecurringFeeRuleOutputModel.
        :param last_updated_date_time: The last_updated_date_time of this ProjectRecurringFeeRuleOutputModel.
        :param measurement_unit: The measurement_unit of this ProjectRecurringFeeRuleOutputModel.
        :param name: The name of this ProjectRecurringFeeRuleOutputModel.
        :param phase: The phase of this ProjectRecurringFeeRuleOutputModel.
        :param product: The product of this ProjectRecurringFeeRuleOutputModel.
        :param product_type: The product_type of this ProjectRecurringFeeRuleOutputModel.
        :param project: The project of this ProjectRecurringFeeRuleOutputModel.
        :param quantity: The quantity of this ProjectRecurringFeeRuleOutputModel.
        :param recurrence_end_date: The recurrence_end_date of this ProjectRecurringFeeRuleOutputModel.
        :param recurrence_end_type: The recurrence_end_type of this ProjectRecurringFeeRuleOutputModel.
        :param recurrence_start_date: The recurrence_start_date of this ProjectRecurringFeeRuleOutputModel.
        :param recurrence_times: The recurrence_times of this ProjectRecurringFeeRuleOutputModel.
        :param recurring_sales_account: The recurring_sales_account of this ProjectRecurringFeeRuleOutputModel.
        :param sales_account: The sales_account of this ProjectRecurringFeeRuleOutputModel.
        :param unit_cost: The unit_cost of this ProjectRecurringFeeRuleOutputModel.
        :param unit_price: The unit_price of this ProjectRecurringFeeRuleOutputModel.
        :param user: The user of this ProjectRecurringFeeRuleOutputModel.
        :param vat_rate: The vat_rate of this ProjectRecurringFeeRuleOutputModel.
        """
        self.openapi_types = {
            'cost_center': ProjectCostCenterSubModel,
            'created_by': UserWithFirstNameLastNameAndPhotoFileModel,
            'created_date_time': datetime,
            'customer': ProjectFeeCustomerSubModel,
            'description': str,
            'display_period_start_date': date,
            'frequency': int,
            'generated_times': int,
            'guid': str,
            'has_volume_pricing': bool,
            'is_active': bool,
            'last_updated_by': UserWithFirstNameLastNameAndPhotoFileModel,
            'last_updated_date_time': datetime,
            'measurement_unit': str,
            'name': str,
            'phase': ModelWithName,
            'product': ProjectFeeProductSubModel,
            'product_type': ProductType,
            'project': ProjectFeeProjectSubModel,
            'quantity': float,
            'recurrence_end_date': date,
            'recurrence_end_type': RecurrenceEndTypes,
            'recurrence_start_date': date,
            'recurrence_times': int,
            'recurring_sales_account': ProjectSalesAccountSubModel,
            'sales_account': ProjectSalesAccountSubModel,
            'unit_cost': MoneyOutputModel,
            'unit_price': MoneyOutputModel,
            'user': UserSubModel,
            'vat_rate': float
        }

        self.attribute_map = {
            'cost_center': 'costCenter',
            'created_by': 'createdBy',
            'created_date_time': 'createdDateTime',
            'customer': 'customer',
            'description': 'description',
            'display_period_start_date': 'displayPeriodStartDate',
            'frequency': 'frequency',
            'generated_times': 'generatedTimes',
            'guid': 'guid',
            'has_volume_pricing': 'hasVolumePricing',
            'is_active': 'isActive',
            'last_updated_by': 'lastUpdatedBy',
            'last_updated_date_time': 'lastUpdatedDateTime',
            'measurement_unit': 'measurementUnit',
            'name': 'name',
            'phase': 'phase',
            'product': 'product',
            'product_type': 'productType',
            'project': 'project',
            'quantity': 'quantity',
            'recurrence_end_date': 'recurrenceEndDate',
            'recurrence_end_type': 'recurrenceEndType',
            'recurrence_start_date': 'recurrenceStartDate',
            'recurrence_times': 'recurrenceTimes',
            'recurring_sales_account': 'recurringSalesAccount',
            'sales_account': 'salesAccount',
            'unit_cost': 'unitCost',
            'unit_price': 'unitPrice',
            'user': 'user',
            'vat_rate': 'vatRate'
        }

        self._cost_center = cost_center
        self._created_by = created_by
        self._created_date_time = created_date_time
        self._customer = customer
        self._description = description
        self._display_period_start_date = display_period_start_date
        self._frequency = frequency
        self._generated_times = generated_times
        self._guid = guid
        self._has_volume_pricing = has_volume_pricing
        self._is_active = is_active
        self._last_updated_by = last_updated_by
        self._last_updated_date_time = last_updated_date_time
        self._measurement_unit = measurement_unit
        self._name = name
        self._phase = phase
        self._product = product
        self._product_type = product_type
        self._project = project
        self._quantity = quantity
        self._recurrence_end_date = recurrence_end_date
        self._recurrence_end_type = recurrence_end_type
        self._recurrence_start_date = recurrence_start_date
        self._recurrence_times = recurrence_times
        self._recurring_sales_account = recurring_sales_account
        self._sales_account = sales_account
        self._unit_cost = unit_cost
        self._unit_price = unit_price
        self._user = user
        self._vat_rate = vat_rate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectRecurringFeeRuleOutputModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectRecurringFeeRuleOutputModel of this ProjectRecurringFeeRuleOutputModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cost_center(self):
        """Gets the cost_center of this ProjectRecurringFeeRuleOutputModel.


        :return: The cost_center of this ProjectRecurringFeeRuleOutputModel.
        :rtype: ProjectCostCenterSubModel
        """
        return self._cost_center

    @cost_center.setter
    def cost_center(self, cost_center):
        """Sets the cost_center of this ProjectRecurringFeeRuleOutputModel.


        :param cost_center: The cost_center of this ProjectRecurringFeeRuleOutputModel.
        :type cost_center: ProjectCostCenterSubModel
        """

        self._cost_center = cost_center

    @property
    def created_by(self):
        """Gets the created_by of this ProjectRecurringFeeRuleOutputModel.


        :return: The created_by of this ProjectRecurringFeeRuleOutputModel.
        :rtype: UserWithFirstNameLastNameAndPhotoFileModel
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this ProjectRecurringFeeRuleOutputModel.


        :param created_by: The created_by of this ProjectRecurringFeeRuleOutputModel.
        :type created_by: UserWithFirstNameLastNameAndPhotoFileModel
        """

        self._created_by = created_by

    @property
    def created_date_time(self):
        """Gets the created_date_time of this ProjectRecurringFeeRuleOutputModel.


        :return: The created_date_time of this ProjectRecurringFeeRuleOutputModel.
        :rtype: datetime
        """
        return self._created_date_time

    @created_date_time.setter
    def created_date_time(self, created_date_time):
        """Sets the created_date_time of this ProjectRecurringFeeRuleOutputModel.


        :param created_date_time: The created_date_time of this ProjectRecurringFeeRuleOutputModel.
        :type created_date_time: datetime
        """

        self._created_date_time = created_date_time

    @property
    def customer(self):
        """Gets the customer of this ProjectRecurringFeeRuleOutputModel.


        :return: The customer of this ProjectRecurringFeeRuleOutputModel.
        :rtype: ProjectFeeCustomerSubModel
        """
        return self._customer

    @customer.setter
    def customer(self, customer):
        """Sets the customer of this ProjectRecurringFeeRuleOutputModel.


        :param customer: The customer of this ProjectRecurringFeeRuleOutputModel.
        :type customer: ProjectFeeCustomerSubModel
        """

        self._customer = customer

    @property
    def description(self):
        """Gets the description of this ProjectRecurringFeeRuleOutputModel.


        :return: The description of this ProjectRecurringFeeRuleOutputModel.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ProjectRecurringFeeRuleOutputModel.


        :param description: The description of this ProjectRecurringFeeRuleOutputModel.
        :type description: str
        """

        self._description = description

    @property
    def display_period_start_date(self):
        """Gets the display_period_start_date of this ProjectRecurringFeeRuleOutputModel.


        :return: The display_period_start_date of this ProjectRecurringFeeRuleOutputModel.
        :rtype: date
        """
        return self._display_period_start_date

    @display_period_start_date.setter
    def display_period_start_date(self, display_period_start_date):
        """Sets the display_period_start_date of this ProjectRecurringFeeRuleOutputModel.


        :param display_period_start_date: The display_period_start_date of this ProjectRecurringFeeRuleOutputModel.
        :type display_period_start_date: date
        """

        self._display_period_start_date = display_period_start_date

    @property
    def frequency(self):
        """Gets the frequency of this ProjectRecurringFeeRuleOutputModel.


        :return: The frequency of this ProjectRecurringFeeRuleOutputModel.
        :rtype: int
        """
        return self._frequency

    @frequency.setter
    def frequency(self, frequency):
        """Sets the frequency of this ProjectRecurringFeeRuleOutputModel.


        :param frequency: The frequency of this ProjectRecurringFeeRuleOutputModel.
        :type frequency: int
        """

        self._frequency = frequency

    @property
    def generated_times(self):
        """Gets the generated_times of this ProjectRecurringFeeRuleOutputModel.


        :return: The generated_times of this ProjectRecurringFeeRuleOutputModel.
        :rtype: int
        """
        return self._generated_times

    @generated_times.setter
    def generated_times(self, generated_times):
        """Sets the generated_times of this ProjectRecurringFeeRuleOutputModel.


        :param generated_times: The generated_times of this ProjectRecurringFeeRuleOutputModel.
        :type generated_times: int
        """

        self._generated_times = generated_times

    @property
    def guid(self):
        """Gets the guid of this ProjectRecurringFeeRuleOutputModel.


        :return: The guid of this ProjectRecurringFeeRuleOutputModel.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this ProjectRecurringFeeRuleOutputModel.


        :param guid: The guid of this ProjectRecurringFeeRuleOutputModel.
        :type guid: str
        """

        self._guid = guid

    @property
    def has_volume_pricing(self):
        """Gets the has_volume_pricing of this ProjectRecurringFeeRuleOutputModel.


        :return: The has_volume_pricing of this ProjectRecurringFeeRuleOutputModel.
        :rtype: bool
        """
        return self._has_volume_pricing

    @has_volume_pricing.setter
    def has_volume_pricing(self, has_volume_pricing):
        """Sets the has_volume_pricing of this ProjectRecurringFeeRuleOutputModel.


        :param has_volume_pricing: The has_volume_pricing of this ProjectRecurringFeeRuleOutputModel.
        :type has_volume_pricing: bool
        """

        self._has_volume_pricing = has_volume_pricing

    @property
    def is_active(self):
        """Gets the is_active of this ProjectRecurringFeeRuleOutputModel.


        :return: The is_active of this ProjectRecurringFeeRuleOutputModel.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this ProjectRecurringFeeRuleOutputModel.


        :param is_active: The is_active of this ProjectRecurringFeeRuleOutputModel.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def last_updated_by(self):
        """Gets the last_updated_by of this ProjectRecurringFeeRuleOutputModel.


        :return: The last_updated_by of this ProjectRecurringFeeRuleOutputModel.
        :rtype: UserWithFirstNameLastNameAndPhotoFileModel
        """
        return self._last_updated_by

    @last_updated_by.setter
    def last_updated_by(self, last_updated_by):
        """Sets the last_updated_by of this ProjectRecurringFeeRuleOutputModel.


        :param last_updated_by: The last_updated_by of this ProjectRecurringFeeRuleOutputModel.
        :type last_updated_by: UserWithFirstNameLastNameAndPhotoFileModel
        """

        self._last_updated_by = last_updated_by

    @property
    def last_updated_date_time(self):
        """Gets the last_updated_date_time of this ProjectRecurringFeeRuleOutputModel.


        :return: The last_updated_date_time of this ProjectRecurringFeeRuleOutputModel.
        :rtype: datetime
        """
        return self._last_updated_date_time

    @last_updated_date_time.setter
    def last_updated_date_time(self, last_updated_date_time):
        """Sets the last_updated_date_time of this ProjectRecurringFeeRuleOutputModel.


        :param last_updated_date_time: The last_updated_date_time of this ProjectRecurringFeeRuleOutputModel.
        :type last_updated_date_time: datetime
        """

        self._last_updated_date_time = last_updated_date_time

    @property
    def measurement_unit(self):
        """Gets the measurement_unit of this ProjectRecurringFeeRuleOutputModel.


        :return: The measurement_unit of this ProjectRecurringFeeRuleOutputModel.
        :rtype: str
        """
        return self._measurement_unit

    @measurement_unit.setter
    def measurement_unit(self, measurement_unit):
        """Sets the measurement_unit of this ProjectRecurringFeeRuleOutputModel.


        :param measurement_unit: The measurement_unit of this ProjectRecurringFeeRuleOutputModel.
        :type measurement_unit: str
        """

        self._measurement_unit = measurement_unit

    @property
    def name(self):
        """Gets the name of this ProjectRecurringFeeRuleOutputModel.


        :return: The name of this ProjectRecurringFeeRuleOutputModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProjectRecurringFeeRuleOutputModel.


        :param name: The name of this ProjectRecurringFeeRuleOutputModel.
        :type name: str
        """

        self._name = name

    @property
    def phase(self):
        """Gets the phase of this ProjectRecurringFeeRuleOutputModel.


        :return: The phase of this ProjectRecurringFeeRuleOutputModel.
        :rtype: ModelWithName
        """
        return self._phase

    @phase.setter
    def phase(self, phase):
        """Sets the phase of this ProjectRecurringFeeRuleOutputModel.


        :param phase: The phase of this ProjectRecurringFeeRuleOutputModel.
        :type phase: ModelWithName
        """

        self._phase = phase

    @property
    def product(self):
        """Gets the product of this ProjectRecurringFeeRuleOutputModel.


        :return: The product of this ProjectRecurringFeeRuleOutputModel.
        :rtype: ProjectFeeProductSubModel
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this ProjectRecurringFeeRuleOutputModel.


        :param product: The product of this ProjectRecurringFeeRuleOutputModel.
        :type product: ProjectFeeProductSubModel
        """

        self._product = product

    @property
    def product_type(self):
        """Gets the product_type of this ProjectRecurringFeeRuleOutputModel.


        :return: The product_type of this ProjectRecurringFeeRuleOutputModel.
        :rtype: ProductType
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """Sets the product_type of this ProjectRecurringFeeRuleOutputModel.


        :param product_type: The product_type of this ProjectRecurringFeeRuleOutputModel.
        :type product_type: ProductType
        """

        self._product_type = product_type

    @property
    def project(self):
        """Gets the project of this ProjectRecurringFeeRuleOutputModel.


        :return: The project of this ProjectRecurringFeeRuleOutputModel.
        :rtype: ProjectFeeProjectSubModel
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this ProjectRecurringFeeRuleOutputModel.


        :param project: The project of this ProjectRecurringFeeRuleOutputModel.
        :type project: ProjectFeeProjectSubModel
        """

        self._project = project

    @property
    def quantity(self):
        """Gets the quantity of this ProjectRecurringFeeRuleOutputModel.


        :return: The quantity of this ProjectRecurringFeeRuleOutputModel.
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this ProjectRecurringFeeRuleOutputModel.


        :param quantity: The quantity of this ProjectRecurringFeeRuleOutputModel.
        :type quantity: float
        """

        self._quantity = quantity

    @property
    def recurrence_end_date(self):
        """Gets the recurrence_end_date of this ProjectRecurringFeeRuleOutputModel.


        :return: The recurrence_end_date of this ProjectRecurringFeeRuleOutputModel.
        :rtype: date
        """
        return self._recurrence_end_date

    @recurrence_end_date.setter
    def recurrence_end_date(self, recurrence_end_date):
        """Sets the recurrence_end_date of this ProjectRecurringFeeRuleOutputModel.


        :param recurrence_end_date: The recurrence_end_date of this ProjectRecurringFeeRuleOutputModel.
        :type recurrence_end_date: date
        """

        self._recurrence_end_date = recurrence_end_date

    @property
    def recurrence_end_type(self):
        """Gets the recurrence_end_type of this ProjectRecurringFeeRuleOutputModel.


        :return: The recurrence_end_type of this ProjectRecurringFeeRuleOutputModel.
        :rtype: RecurrenceEndTypes
        """
        return self._recurrence_end_type

    @recurrence_end_type.setter
    def recurrence_end_type(self, recurrence_end_type):
        """Sets the recurrence_end_type of this ProjectRecurringFeeRuleOutputModel.


        :param recurrence_end_type: The recurrence_end_type of this ProjectRecurringFeeRuleOutputModel.
        :type recurrence_end_type: RecurrenceEndTypes
        """

        self._recurrence_end_type = recurrence_end_type

    @property
    def recurrence_start_date(self):
        """Gets the recurrence_start_date of this ProjectRecurringFeeRuleOutputModel.


        :return: The recurrence_start_date of this ProjectRecurringFeeRuleOutputModel.
        :rtype: date
        """
        return self._recurrence_start_date

    @recurrence_start_date.setter
    def recurrence_start_date(self, recurrence_start_date):
        """Sets the recurrence_start_date of this ProjectRecurringFeeRuleOutputModel.


        :param recurrence_start_date: The recurrence_start_date of this ProjectRecurringFeeRuleOutputModel.
        :type recurrence_start_date: date
        """

        self._recurrence_start_date = recurrence_start_date

    @property
    def recurrence_times(self):
        """Gets the recurrence_times of this ProjectRecurringFeeRuleOutputModel.


        :return: The recurrence_times of this ProjectRecurringFeeRuleOutputModel.
        :rtype: int
        """
        return self._recurrence_times

    @recurrence_times.setter
    def recurrence_times(self, recurrence_times):
        """Sets the recurrence_times of this ProjectRecurringFeeRuleOutputModel.


        :param recurrence_times: The recurrence_times of this ProjectRecurringFeeRuleOutputModel.
        :type recurrence_times: int
        """

        self._recurrence_times = recurrence_times

    @property
    def recurring_sales_account(self):
        """Gets the recurring_sales_account of this ProjectRecurringFeeRuleOutputModel.


        :return: The recurring_sales_account of this ProjectRecurringFeeRuleOutputModel.
        :rtype: ProjectSalesAccountSubModel
        """
        return self._recurring_sales_account

    @recurring_sales_account.setter
    def recurring_sales_account(self, recurring_sales_account):
        """Sets the recurring_sales_account of this ProjectRecurringFeeRuleOutputModel.


        :param recurring_sales_account: The recurring_sales_account of this ProjectRecurringFeeRuleOutputModel.
        :type recurring_sales_account: ProjectSalesAccountSubModel
        """

        self._recurring_sales_account = recurring_sales_account

    @property
    def sales_account(self):
        """Gets the sales_account of this ProjectRecurringFeeRuleOutputModel.


        :return: The sales_account of this ProjectRecurringFeeRuleOutputModel.
        :rtype: ProjectSalesAccountSubModel
        """
        return self._sales_account

    @sales_account.setter
    def sales_account(self, sales_account):
        """Sets the sales_account of this ProjectRecurringFeeRuleOutputModel.


        :param sales_account: The sales_account of this ProjectRecurringFeeRuleOutputModel.
        :type sales_account: ProjectSalesAccountSubModel
        """

        self._sales_account = sales_account

    @property
    def unit_cost(self):
        """Gets the unit_cost of this ProjectRecurringFeeRuleOutputModel.


        :return: The unit_cost of this ProjectRecurringFeeRuleOutputModel.
        :rtype: MoneyOutputModel
        """
        return self._unit_cost

    @unit_cost.setter
    def unit_cost(self, unit_cost):
        """Sets the unit_cost of this ProjectRecurringFeeRuleOutputModel.


        :param unit_cost: The unit_cost of this ProjectRecurringFeeRuleOutputModel.
        :type unit_cost: MoneyOutputModel
        """

        self._unit_cost = unit_cost

    @property
    def unit_price(self):
        """Gets the unit_price of this ProjectRecurringFeeRuleOutputModel.


        :return: The unit_price of this ProjectRecurringFeeRuleOutputModel.
        :rtype: MoneyOutputModel
        """
        return self._unit_price

    @unit_price.setter
    def unit_price(self, unit_price):
        """Sets the unit_price of this ProjectRecurringFeeRuleOutputModel.


        :param unit_price: The unit_price of this ProjectRecurringFeeRuleOutputModel.
        :type unit_price: MoneyOutputModel
        """

        self._unit_price = unit_price

    @property
    def user(self):
        """Gets the user of this ProjectRecurringFeeRuleOutputModel.


        :return: The user of this ProjectRecurringFeeRuleOutputModel.
        :rtype: UserSubModel
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this ProjectRecurringFeeRuleOutputModel.


        :param user: The user of this ProjectRecurringFeeRuleOutputModel.
        :type user: UserSubModel
        """

        self._user = user

    @property
    def vat_rate(self):
        """Gets the vat_rate of this ProjectRecurringFeeRuleOutputModel.


        :return: The vat_rate of this ProjectRecurringFeeRuleOutputModel.
        :rtype: float
        """
        return self._vat_rate

    @vat_rate.setter
    def vat_rate(self, vat_rate):
        """Sets the vat_rate of this ProjectRecurringFeeRuleOutputModel.


        :param vat_rate: The vat_rate of this ProjectRecurringFeeRuleOutputModel.
        :type vat_rate: float
        """

        self._vat_rate = vat_rate
