# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActivityPhase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, guid: str=None, is_locked: bool=None, name: str=None, project_guid: str=None, project_name: str=None, project_number: int=None, project_owner_guid: str=None):
        """ActivityPhase - a model defined in OpenAPI

        :param guid: The guid of this ActivityPhase.
        :param is_locked: The is_locked of this ActivityPhase.
        :param name: The name of this ActivityPhase.
        :param project_guid: The project_guid of this ActivityPhase.
        :param project_name: The project_name of this ActivityPhase.
        :param project_number: The project_number of this ActivityPhase.
        :param project_owner_guid: The project_owner_guid of this ActivityPhase.
        """
        self.openapi_types = {
            'guid': str,
            'is_locked': bool,
            'name': str,
            'project_guid': str,
            'project_name': str,
            'project_number': int,
            'project_owner_guid': str
        }

        self.attribute_map = {
            'guid': 'guid',
            'is_locked': 'isLocked',
            'name': 'name',
            'project_guid': 'projectGuid',
            'project_name': 'projectName',
            'project_number': 'projectNumber',
            'project_owner_guid': 'projectOwnerGuid'
        }

        self._guid = guid
        self._is_locked = is_locked
        self._name = name
        self._project_guid = project_guid
        self._project_name = project_name
        self._project_number = project_number
        self._project_owner_guid = project_owner_guid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityPhase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivityPhase of this ActivityPhase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def guid(self):
        """Gets the guid of this ActivityPhase.


        :return: The guid of this ActivityPhase.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this ActivityPhase.


        :param guid: The guid of this ActivityPhase.
        :type guid: str
        """

        self._guid = guid

    @property
    def is_locked(self):
        """Gets the is_locked of this ActivityPhase.


        :return: The is_locked of this ActivityPhase.
        :rtype: bool
        """
        return self._is_locked

    @is_locked.setter
    def is_locked(self, is_locked):
        """Sets the is_locked of this ActivityPhase.


        :param is_locked: The is_locked of this ActivityPhase.
        :type is_locked: bool
        """

        self._is_locked = is_locked

    @property
    def name(self):
        """Gets the name of this ActivityPhase.


        :return: The name of this ActivityPhase.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ActivityPhase.


        :param name: The name of this ActivityPhase.
        :type name: str
        """

        self._name = name

    @property
    def project_guid(self):
        """Gets the project_guid of this ActivityPhase.


        :return: The project_guid of this ActivityPhase.
        :rtype: str
        """
        return self._project_guid

    @project_guid.setter
    def project_guid(self, project_guid):
        """Sets the project_guid of this ActivityPhase.


        :param project_guid: The project_guid of this ActivityPhase.
        :type project_guid: str
        """

        self._project_guid = project_guid

    @property
    def project_name(self):
        """Gets the project_name of this ActivityPhase.


        :return: The project_name of this ActivityPhase.
        :rtype: str
        """
        return self._project_name

    @project_name.setter
    def project_name(self, project_name):
        """Sets the project_name of this ActivityPhase.


        :param project_name: The project_name of this ActivityPhase.
        :type project_name: str
        """

        self._project_name = project_name

    @property
    def project_number(self):
        """Gets the project_number of this ActivityPhase.


        :return: The project_number of this ActivityPhase.
        :rtype: int
        """
        return self._project_number

    @project_number.setter
    def project_number(self, project_number):
        """Sets the project_number of this ActivityPhase.


        :param project_number: The project_number of this ActivityPhase.
        :type project_number: int
        """

        self._project_number = project_number

    @property
    def project_owner_guid(self):
        """Gets the project_owner_guid of this ActivityPhase.


        :return: The project_owner_guid of this ActivityPhase.
        :rtype: str
        """
        return self._project_owner_guid

    @project_owner_guid.setter
    def project_owner_guid(self, project_owner_guid):
        """Sets the project_owner_guid of this ActivityPhase.


        :param project_owner_guid: The project_owner_guid of this ActivityPhase.
        :type project_owner_guid: str
        """

        self._project_owner_guid = project_owner_guid
