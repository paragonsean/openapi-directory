# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_with_name import ModelWithName
from openapi_server.models.product_type import ProductType
from openapi_server import util


class ProductPriceProductOutputSubModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, guid: str=None, name: str=None, product_category: ModelWithName=None, product_code: str=None, product_type: ProductType=None):
        """ProductPriceProductOutputSubModel - a model defined in OpenAPI

        :param guid: The guid of this ProductPriceProductOutputSubModel.
        :param name: The name of this ProductPriceProductOutputSubModel.
        :param product_category: The product_category of this ProductPriceProductOutputSubModel.
        :param product_code: The product_code of this ProductPriceProductOutputSubModel.
        :param product_type: The product_type of this ProductPriceProductOutputSubModel.
        """
        self.openapi_types = {
            'guid': str,
            'name': str,
            'product_category': ModelWithName,
            'product_code': str,
            'product_type': ProductType
        }

        self.attribute_map = {
            'guid': 'guid',
            'name': 'name',
            'product_category': 'productCategory',
            'product_code': 'productCode',
            'product_type': 'productType'
        }

        self._guid = guid
        self._name = name
        self._product_category = product_category
        self._product_code = product_code
        self._product_type = product_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductPriceProductOutputSubModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductPriceProductOutputSubModel of this ProductPriceProductOutputSubModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def guid(self):
        """Gets the guid of this ProductPriceProductOutputSubModel.


        :return: The guid of this ProductPriceProductOutputSubModel.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this ProductPriceProductOutputSubModel.


        :param guid: The guid of this ProductPriceProductOutputSubModel.
        :type guid: str
        """

        self._guid = guid

    @property
    def name(self):
        """Gets the name of this ProductPriceProductOutputSubModel.


        :return: The name of this ProductPriceProductOutputSubModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProductPriceProductOutputSubModel.


        :param name: The name of this ProductPriceProductOutputSubModel.
        :type name: str
        """

        self._name = name

    @property
    def product_category(self):
        """Gets the product_category of this ProductPriceProductOutputSubModel.


        :return: The product_category of this ProductPriceProductOutputSubModel.
        :rtype: ModelWithName
        """
        return self._product_category

    @product_category.setter
    def product_category(self, product_category):
        """Sets the product_category of this ProductPriceProductOutputSubModel.


        :param product_category: The product_category of this ProductPriceProductOutputSubModel.
        :type product_category: ModelWithName
        """

        self._product_category = product_category

    @property
    def product_code(self):
        """Gets the product_code of this ProductPriceProductOutputSubModel.


        :return: The product_code of this ProductPriceProductOutputSubModel.
        :rtype: str
        """
        return self._product_code

    @product_code.setter
    def product_code(self, product_code):
        """Sets the product_code of this ProductPriceProductOutputSubModel.


        :param product_code: The product_code of this ProductPriceProductOutputSubModel.
        :type product_code: str
        """

        self._product_code = product_code

    @property
    def product_type(self):
        """Gets the product_type of this ProductPriceProductOutputSubModel.


        :return: The product_type of this ProductPriceProductOutputSubModel.
        :rtype: ProductType
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """Sets the product_type of this ProductPriceProductOutputSubModel.


        :param product_type: The product_type of this ProductPriceProductOutputSubModel.
        :type product_type: ProductType
        """

        self._product_type = product_type
