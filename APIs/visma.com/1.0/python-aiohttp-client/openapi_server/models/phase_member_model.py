# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_with_first_name_last_name_and_photo_file_model import UserWithFirstNameLastNameAndPhotoFileModel
from openapi_server import util


class PhaseMemberModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_by: UserWithFirstNameLastNameAndPhotoFileModel=None, created_date_time: datetime=None, current_workcontract_title: str=None, guid: str=None, is_active: bool=True, last_updated_by: UserWithFirstNameLastNameAndPhotoFileModel=None, last_updated_date_time: datetime=None, phase_guid: str=None, user: UserWithFirstNameLastNameAndPhotoFileModel=None, work_hours: float=None, work_hours_including_child_phases: float=None):
        """PhaseMemberModel - a model defined in OpenAPI

        :param created_by: The created_by of this PhaseMemberModel.
        :param created_date_time: The created_date_time of this PhaseMemberModel.
        :param current_workcontract_title: The current_workcontract_title of this PhaseMemberModel.
        :param guid: The guid of this PhaseMemberModel.
        :param is_active: The is_active of this PhaseMemberModel.
        :param last_updated_by: The last_updated_by of this PhaseMemberModel.
        :param last_updated_date_time: The last_updated_date_time of this PhaseMemberModel.
        :param phase_guid: The phase_guid of this PhaseMemberModel.
        :param user: The user of this PhaseMemberModel.
        :param work_hours: The work_hours of this PhaseMemberModel.
        :param work_hours_including_child_phases: The work_hours_including_child_phases of this PhaseMemberModel.
        """
        self.openapi_types = {
            'created_by': UserWithFirstNameLastNameAndPhotoFileModel,
            'created_date_time': datetime,
            'current_workcontract_title': str,
            'guid': str,
            'is_active': bool,
            'last_updated_by': UserWithFirstNameLastNameAndPhotoFileModel,
            'last_updated_date_time': datetime,
            'phase_guid': str,
            'user': UserWithFirstNameLastNameAndPhotoFileModel,
            'work_hours': float,
            'work_hours_including_child_phases': float
        }

        self.attribute_map = {
            'created_by': 'createdBy',
            'created_date_time': 'createdDateTime',
            'current_workcontract_title': 'currentWorkcontractTitle',
            'guid': 'guid',
            'is_active': 'isActive',
            'last_updated_by': 'lastUpdatedBy',
            'last_updated_date_time': 'lastUpdatedDateTime',
            'phase_guid': 'phaseGuid',
            'user': 'user',
            'work_hours': 'workHours',
            'work_hours_including_child_phases': 'workHoursIncludingChildPhases'
        }

        self._created_by = created_by
        self._created_date_time = created_date_time
        self._current_workcontract_title = current_workcontract_title
        self._guid = guid
        self._is_active = is_active
        self._last_updated_by = last_updated_by
        self._last_updated_date_time = last_updated_date_time
        self._phase_guid = phase_guid
        self._user = user
        self._work_hours = work_hours
        self._work_hours_including_child_phases = work_hours_including_child_phases

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PhaseMemberModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PhaseMemberModel of this PhaseMemberModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_by(self):
        """Gets the created_by of this PhaseMemberModel.


        :return: The created_by of this PhaseMemberModel.
        :rtype: UserWithFirstNameLastNameAndPhotoFileModel
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this PhaseMemberModel.


        :param created_by: The created_by of this PhaseMemberModel.
        :type created_by: UserWithFirstNameLastNameAndPhotoFileModel
        """

        self._created_by = created_by

    @property
    def created_date_time(self):
        """Gets the created_date_time of this PhaseMemberModel.


        :return: The created_date_time of this PhaseMemberModel.
        :rtype: datetime
        """
        return self._created_date_time

    @created_date_time.setter
    def created_date_time(self, created_date_time):
        """Sets the created_date_time of this PhaseMemberModel.


        :param created_date_time: The created_date_time of this PhaseMemberModel.
        :type created_date_time: datetime
        """

        self._created_date_time = created_date_time

    @property
    def current_workcontract_title(self):
        """Gets the current_workcontract_title of this PhaseMemberModel.


        :return: The current_workcontract_title of this PhaseMemberModel.
        :rtype: str
        """
        return self._current_workcontract_title

    @current_workcontract_title.setter
    def current_workcontract_title(self, current_workcontract_title):
        """Sets the current_workcontract_title of this PhaseMemberModel.


        :param current_workcontract_title: The current_workcontract_title of this PhaseMemberModel.
        :type current_workcontract_title: str
        """

        self._current_workcontract_title = current_workcontract_title

    @property
    def guid(self):
        """Gets the guid of this PhaseMemberModel.


        :return: The guid of this PhaseMemberModel.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this PhaseMemberModel.


        :param guid: The guid of this PhaseMemberModel.
        :type guid: str
        """

        self._guid = guid

    @property
    def is_active(self):
        """Gets the is_active of this PhaseMemberModel.


        :return: The is_active of this PhaseMemberModel.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this PhaseMemberModel.


        :param is_active: The is_active of this PhaseMemberModel.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def last_updated_by(self):
        """Gets the last_updated_by of this PhaseMemberModel.


        :return: The last_updated_by of this PhaseMemberModel.
        :rtype: UserWithFirstNameLastNameAndPhotoFileModel
        """
        return self._last_updated_by

    @last_updated_by.setter
    def last_updated_by(self, last_updated_by):
        """Sets the last_updated_by of this PhaseMemberModel.


        :param last_updated_by: The last_updated_by of this PhaseMemberModel.
        :type last_updated_by: UserWithFirstNameLastNameAndPhotoFileModel
        """

        self._last_updated_by = last_updated_by

    @property
    def last_updated_date_time(self):
        """Gets the last_updated_date_time of this PhaseMemberModel.


        :return: The last_updated_date_time of this PhaseMemberModel.
        :rtype: datetime
        """
        return self._last_updated_date_time

    @last_updated_date_time.setter
    def last_updated_date_time(self, last_updated_date_time):
        """Sets the last_updated_date_time of this PhaseMemberModel.


        :param last_updated_date_time: The last_updated_date_time of this PhaseMemberModel.
        :type last_updated_date_time: datetime
        """

        self._last_updated_date_time = last_updated_date_time

    @property
    def phase_guid(self):
        """Gets the phase_guid of this PhaseMemberModel.


        :return: The phase_guid of this PhaseMemberModel.
        :rtype: str
        """
        return self._phase_guid

    @phase_guid.setter
    def phase_guid(self, phase_guid):
        """Sets the phase_guid of this PhaseMemberModel.


        :param phase_guid: The phase_guid of this PhaseMemberModel.
        :type phase_guid: str
        """
        if phase_guid is None:
            raise ValueError("Invalid value for `phase_guid`, must not be `None`")
        if phase_guid is not None and len(phase_guid) < 1:
            raise ValueError("Invalid value for `phase_guid`, length must be greater than or equal to `1`")

        self._phase_guid = phase_guid

    @property
    def user(self):
        """Gets the user of this PhaseMemberModel.


        :return: The user of this PhaseMemberModel.
        :rtype: UserWithFirstNameLastNameAndPhotoFileModel
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this PhaseMemberModel.


        :param user: The user of this PhaseMemberModel.
        :type user: UserWithFirstNameLastNameAndPhotoFileModel
        """

        self._user = user

    @property
    def work_hours(self):
        """Gets the work_hours of this PhaseMemberModel.


        :return: The work_hours of this PhaseMemberModel.
        :rtype: float
        """
        return self._work_hours

    @work_hours.setter
    def work_hours(self, work_hours):
        """Sets the work_hours of this PhaseMemberModel.


        :param work_hours: The work_hours of this PhaseMemberModel.
        :type work_hours: float
        """

        self._work_hours = work_hours

    @property
    def work_hours_including_child_phases(self):
        """Gets the work_hours_including_child_phases of this PhaseMemberModel.


        :return: The work_hours_including_child_phases of this PhaseMemberModel.
        :rtype: float
        """
        return self._work_hours_including_child_phases

    @work_hours_including_child_phases.setter
    def work_hours_including_child_phases(self, work_hours_including_child_phases):
        """Sets the work_hours_including_child_phases of this PhaseMemberModel.


        :param work_hours_including_child_phases: The work_hours_including_child_phases of this PhaseMemberModel.
        :type work_hours_including_child_phases: float
        """

        self._work_hours_including_child_phases = work_hours_including_child_phases
