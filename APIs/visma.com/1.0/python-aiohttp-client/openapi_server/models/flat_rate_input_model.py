# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.billing_schedule_type import BillingScheduleType
from openapi_server.models.money_input_model_with_nullable_amount import MoneyInputModelWithNullableAmount
from openapi_server.models.simple_input_required_model import SimpleInputRequiredModel
from openapi_server import util


class FlatRateInputModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bill_additional_hours: bool=True, billing_schedule: BillingScheduleType=None, includes_hours: float=0, phase: SimpleInputRequiredModel=None, planned_billing_date: date=None, price: MoneyInputModelWithNullableAmount=None, price_per_additional_hour: MoneyInputModelWithNullableAmount=None):
        """FlatRateInputModel - a model defined in OpenAPI

        :param bill_additional_hours: The bill_additional_hours of this FlatRateInputModel.
        :param billing_schedule: The billing_schedule of this FlatRateInputModel.
        :param includes_hours: The includes_hours of this FlatRateInputModel.
        :param phase: The phase of this FlatRateInputModel.
        :param planned_billing_date: The planned_billing_date of this FlatRateInputModel.
        :param price: The price of this FlatRateInputModel.
        :param price_per_additional_hour: The price_per_additional_hour of this FlatRateInputModel.
        """
        self.openapi_types = {
            'bill_additional_hours': bool,
            'billing_schedule': BillingScheduleType,
            'includes_hours': float,
            'phase': SimpleInputRequiredModel,
            'planned_billing_date': date,
            'price': MoneyInputModelWithNullableAmount,
            'price_per_additional_hour': MoneyInputModelWithNullableAmount
        }

        self.attribute_map = {
            'bill_additional_hours': 'billAdditionalHours',
            'billing_schedule': 'billingSchedule',
            'includes_hours': 'includesHours',
            'phase': 'phase',
            'planned_billing_date': 'plannedBillingDate',
            'price': 'price',
            'price_per_additional_hour': 'pricePerAdditionalHour'
        }

        self._bill_additional_hours = bill_additional_hours
        self._billing_schedule = billing_schedule
        self._includes_hours = includes_hours
        self._phase = phase
        self._planned_billing_date = planned_billing_date
        self._price = price
        self._price_per_additional_hour = price_per_additional_hour

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlatRateInputModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FlatRateInputModel of this FlatRateInputModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bill_additional_hours(self):
        """Gets the bill_additional_hours of this FlatRateInputModel.


        :return: The bill_additional_hours of this FlatRateInputModel.
        :rtype: bool
        """
        return self._bill_additional_hours

    @bill_additional_hours.setter
    def bill_additional_hours(self, bill_additional_hours):
        """Sets the bill_additional_hours of this FlatRateInputModel.


        :param bill_additional_hours: The bill_additional_hours of this FlatRateInputModel.
        :type bill_additional_hours: bool
        """

        self._bill_additional_hours = bill_additional_hours

    @property
    def billing_schedule(self):
        """Gets the billing_schedule of this FlatRateInputModel.


        :return: The billing_schedule of this FlatRateInputModel.
        :rtype: BillingScheduleType
        """
        return self._billing_schedule

    @billing_schedule.setter
    def billing_schedule(self, billing_schedule):
        """Sets the billing_schedule of this FlatRateInputModel.


        :param billing_schedule: The billing_schedule of this FlatRateInputModel.
        :type billing_schedule: BillingScheduleType
        """
        if billing_schedule is None:
            raise ValueError("Invalid value for `billing_schedule`, must not be `None`")

        self._billing_schedule = billing_schedule

    @property
    def includes_hours(self):
        """Gets the includes_hours of this FlatRateInputModel.


        :return: The includes_hours of this FlatRateInputModel.
        :rtype: float
        """
        return self._includes_hours

    @includes_hours.setter
    def includes_hours(self, includes_hours):
        """Sets the includes_hours of this FlatRateInputModel.


        :param includes_hours: The includes_hours of this FlatRateInputModel.
        :type includes_hours: float
        """

        self._includes_hours = includes_hours

    @property
    def phase(self):
        """Gets the phase of this FlatRateInputModel.


        :return: The phase of this FlatRateInputModel.
        :rtype: SimpleInputRequiredModel
        """
        return self._phase

    @phase.setter
    def phase(self, phase):
        """Sets the phase of this FlatRateInputModel.


        :param phase: The phase of this FlatRateInputModel.
        :type phase: SimpleInputRequiredModel
        """
        if phase is None:
            raise ValueError("Invalid value for `phase`, must not be `None`")

        self._phase = phase

    @property
    def planned_billing_date(self):
        """Gets the planned_billing_date of this FlatRateInputModel.


        :return: The planned_billing_date of this FlatRateInputModel.
        :rtype: date
        """
        return self._planned_billing_date

    @planned_billing_date.setter
    def planned_billing_date(self, planned_billing_date):
        """Sets the planned_billing_date of this FlatRateInputModel.


        :param planned_billing_date: The planned_billing_date of this FlatRateInputModel.
        :type planned_billing_date: date
        """

        self._planned_billing_date = planned_billing_date

    @property
    def price(self):
        """Gets the price of this FlatRateInputModel.


        :return: The price of this FlatRateInputModel.
        :rtype: MoneyInputModelWithNullableAmount
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this FlatRateInputModel.


        :param price: The price of this FlatRateInputModel.
        :type price: MoneyInputModelWithNullableAmount
        """

        self._price = price

    @property
    def price_per_additional_hour(self):
        """Gets the price_per_additional_hour of this FlatRateInputModel.


        :return: The price_per_additional_hour of this FlatRateInputModel.
        :rtype: MoneyInputModelWithNullableAmount
        """
        return self._price_per_additional_hour

    @price_per_additional_hour.setter
    def price_per_additional_hour(self, price_per_additional_hour):
        """Sets the price_per_additional_hour of this FlatRateInputModel.


        :param price_per_additional_hour: The price_per_additional_hour of this FlatRateInputModel.
        :type price_per_additional_hour: MoneyInputModelWithNullableAmount
        """

        self._price_per_additional_hour = price_per_additional_hour
