# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.billing_address_model import BillingAddressModel
from openapi_server.models.billing_customer_model import BillingCustomerModel
from openapi_server.models.model_base_with_required_guid import ModelBaseWithRequiredGuid
from openapi_server.models.model_with_name import ModelWithName
from openapi_server.models.user_with_first_name_last_name_and_photo_file_model import UserWithFirstNameLastNameAndPhotoFileModel
from openapi_server import util


class ProjectBillingCustomerModel2(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_address: BillingAddressModel=None, billing_contact: ModelWithName=None, billing_customer: BillingCustomerModel=None, can_be_deleted: bool=None, created_by: UserWithFirstNameLastNameAndPhotoFileModel=None, created_date_time: datetime=None, guid: str=None, is_default: bool=None, last_updated_by: UserWithFirstNameLastNameAndPhotoFileModel=None, last_updated_date_time: datetime=None, project: ModelBaseWithRequiredGuid=None):
        """ProjectBillingCustomerModel2 - a model defined in OpenAPI

        :param billing_address: The billing_address of this ProjectBillingCustomerModel2.
        :param billing_contact: The billing_contact of this ProjectBillingCustomerModel2.
        :param billing_customer: The billing_customer of this ProjectBillingCustomerModel2.
        :param can_be_deleted: The can_be_deleted of this ProjectBillingCustomerModel2.
        :param created_by: The created_by of this ProjectBillingCustomerModel2.
        :param created_date_time: The created_date_time of this ProjectBillingCustomerModel2.
        :param guid: The guid of this ProjectBillingCustomerModel2.
        :param is_default: The is_default of this ProjectBillingCustomerModel2.
        :param last_updated_by: The last_updated_by of this ProjectBillingCustomerModel2.
        :param last_updated_date_time: The last_updated_date_time of this ProjectBillingCustomerModel2.
        :param project: The project of this ProjectBillingCustomerModel2.
        """
        self.openapi_types = {
            'billing_address': BillingAddressModel,
            'billing_contact': ModelWithName,
            'billing_customer': BillingCustomerModel,
            'can_be_deleted': bool,
            'created_by': UserWithFirstNameLastNameAndPhotoFileModel,
            'created_date_time': datetime,
            'guid': str,
            'is_default': bool,
            'last_updated_by': UserWithFirstNameLastNameAndPhotoFileModel,
            'last_updated_date_time': datetime,
            'project': ModelBaseWithRequiredGuid
        }

        self.attribute_map = {
            'billing_address': 'billingAddress',
            'billing_contact': 'billingContact',
            'billing_customer': 'billingCustomer',
            'can_be_deleted': 'canBeDeleted',
            'created_by': 'createdBy',
            'created_date_time': 'createdDateTime',
            'guid': 'guid',
            'is_default': 'isDefault',
            'last_updated_by': 'lastUpdatedBy',
            'last_updated_date_time': 'lastUpdatedDateTime',
            'project': 'project'
        }

        self._billing_address = billing_address
        self._billing_contact = billing_contact
        self._billing_customer = billing_customer
        self._can_be_deleted = can_be_deleted
        self._created_by = created_by
        self._created_date_time = created_date_time
        self._guid = guid
        self._is_default = is_default
        self._last_updated_by = last_updated_by
        self._last_updated_date_time = last_updated_date_time
        self._project = project

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectBillingCustomerModel2':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectBillingCustomerModel2 of this ProjectBillingCustomerModel2.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_address(self):
        """Gets the billing_address of this ProjectBillingCustomerModel2.


        :return: The billing_address of this ProjectBillingCustomerModel2.
        :rtype: BillingAddressModel
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this ProjectBillingCustomerModel2.


        :param billing_address: The billing_address of this ProjectBillingCustomerModel2.
        :type billing_address: BillingAddressModel
        """

        self._billing_address = billing_address

    @property
    def billing_contact(self):
        """Gets the billing_contact of this ProjectBillingCustomerModel2.


        :return: The billing_contact of this ProjectBillingCustomerModel2.
        :rtype: ModelWithName
        """
        return self._billing_contact

    @billing_contact.setter
    def billing_contact(self, billing_contact):
        """Sets the billing_contact of this ProjectBillingCustomerModel2.


        :param billing_contact: The billing_contact of this ProjectBillingCustomerModel2.
        :type billing_contact: ModelWithName
        """

        self._billing_contact = billing_contact

    @property
    def billing_customer(self):
        """Gets the billing_customer of this ProjectBillingCustomerModel2.


        :return: The billing_customer of this ProjectBillingCustomerModel2.
        :rtype: BillingCustomerModel
        """
        return self._billing_customer

    @billing_customer.setter
    def billing_customer(self, billing_customer):
        """Sets the billing_customer of this ProjectBillingCustomerModel2.


        :param billing_customer: The billing_customer of this ProjectBillingCustomerModel2.
        :type billing_customer: BillingCustomerModel
        """
        if billing_customer is None:
            raise ValueError("Invalid value for `billing_customer`, must not be `None`")

        self._billing_customer = billing_customer

    @property
    def can_be_deleted(self):
        """Gets the can_be_deleted of this ProjectBillingCustomerModel2.


        :return: The can_be_deleted of this ProjectBillingCustomerModel2.
        :rtype: bool
        """
        return self._can_be_deleted

    @can_be_deleted.setter
    def can_be_deleted(self, can_be_deleted):
        """Sets the can_be_deleted of this ProjectBillingCustomerModel2.


        :param can_be_deleted: The can_be_deleted of this ProjectBillingCustomerModel2.
        :type can_be_deleted: bool
        """

        self._can_be_deleted = can_be_deleted

    @property
    def created_by(self):
        """Gets the created_by of this ProjectBillingCustomerModel2.


        :return: The created_by of this ProjectBillingCustomerModel2.
        :rtype: UserWithFirstNameLastNameAndPhotoFileModel
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this ProjectBillingCustomerModel2.


        :param created_by: The created_by of this ProjectBillingCustomerModel2.
        :type created_by: UserWithFirstNameLastNameAndPhotoFileModel
        """

        self._created_by = created_by

    @property
    def created_date_time(self):
        """Gets the created_date_time of this ProjectBillingCustomerModel2.


        :return: The created_date_time of this ProjectBillingCustomerModel2.
        :rtype: datetime
        """
        return self._created_date_time

    @created_date_time.setter
    def created_date_time(self, created_date_time):
        """Sets the created_date_time of this ProjectBillingCustomerModel2.


        :param created_date_time: The created_date_time of this ProjectBillingCustomerModel2.
        :type created_date_time: datetime
        """

        self._created_date_time = created_date_time

    @property
    def guid(self):
        """Gets the guid of this ProjectBillingCustomerModel2.


        :return: The guid of this ProjectBillingCustomerModel2.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this ProjectBillingCustomerModel2.


        :param guid: The guid of this ProjectBillingCustomerModel2.
        :type guid: str
        """

        self._guid = guid

    @property
    def is_default(self):
        """Gets the is_default of this ProjectBillingCustomerModel2.


        :return: The is_default of this ProjectBillingCustomerModel2.
        :rtype: bool
        """
        return self._is_default

    @is_default.setter
    def is_default(self, is_default):
        """Sets the is_default of this ProjectBillingCustomerModel2.


        :param is_default: The is_default of this ProjectBillingCustomerModel2.
        :type is_default: bool
        """

        self._is_default = is_default

    @property
    def last_updated_by(self):
        """Gets the last_updated_by of this ProjectBillingCustomerModel2.


        :return: The last_updated_by of this ProjectBillingCustomerModel2.
        :rtype: UserWithFirstNameLastNameAndPhotoFileModel
        """
        return self._last_updated_by

    @last_updated_by.setter
    def last_updated_by(self, last_updated_by):
        """Sets the last_updated_by of this ProjectBillingCustomerModel2.


        :param last_updated_by: The last_updated_by of this ProjectBillingCustomerModel2.
        :type last_updated_by: UserWithFirstNameLastNameAndPhotoFileModel
        """

        self._last_updated_by = last_updated_by

    @property
    def last_updated_date_time(self):
        """Gets the last_updated_date_time of this ProjectBillingCustomerModel2.


        :return: The last_updated_date_time of this ProjectBillingCustomerModel2.
        :rtype: datetime
        """
        return self._last_updated_date_time

    @last_updated_date_time.setter
    def last_updated_date_time(self, last_updated_date_time):
        """Sets the last_updated_date_time of this ProjectBillingCustomerModel2.


        :param last_updated_date_time: The last_updated_date_time of this ProjectBillingCustomerModel2.
        :type last_updated_date_time: datetime
        """

        self._last_updated_date_time = last_updated_date_time

    @property
    def project(self):
        """Gets the project of this ProjectBillingCustomerModel2.


        :return: The project of this ProjectBillingCustomerModel2.
        :rtype: ModelBaseWithRequiredGuid
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this ProjectBillingCustomerModel2.


        :param project: The project of this ProjectBillingCustomerModel2.
        :type project: ModelBaseWithRequiredGuid
        """
        if project is None:
            raise ValueError("Invalid value for `project`, must not be `None`")

        self._project = project
