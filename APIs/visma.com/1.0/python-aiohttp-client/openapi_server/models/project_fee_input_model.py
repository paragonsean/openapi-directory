# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.money_input_model_with_nullable_amount import MoneyInputModelWithNullableAmount
from openapi_server.models.product_type import ProductType
from openapi_server.models.project_fee_billing_schedule_type import ProjectFeeBillingScheduleType
from openapi_server.models.simple_input_model import SimpleInputModel
from openapi_server.models.simple_input_required_model import SimpleInputRequiredModel
from openapi_server import util


class ProjectFeeInputModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_dependency_phase: SimpleInputModel=None, billing_schedule: ProjectFeeBillingScheduleType=None, cost_center: SimpleInputModel=None, description: str=None, display_period_start_date: date=None, event_date: date=None, has_volume_pricing: bool=None, invoice: SimpleInputModel=None, invoice_quantity: float=None, invoice_row_comment: str=None, invoice_row_description: str=None, is_billable: bool=None, measurement_unit: str=None, name: str=None, phase: SimpleInputModel=None, planned_billing_date: date=None, product: SimpleInputModel=None, product_type: ProductType=None, project: SimpleInputRequiredModel=None, quantity: float=None, sales_account: SimpleInputModel=None, unit_cost: MoneyInputModelWithNullableAmount=None, unit_price: MoneyInputModelWithNullableAmount=None, user: SimpleInputModel=None, vat_rate: float=None):
        """ProjectFeeInputModel - a model defined in OpenAPI

        :param billing_dependency_phase: The billing_dependency_phase of this ProjectFeeInputModel.
        :param billing_schedule: The billing_schedule of this ProjectFeeInputModel.
        :param cost_center: The cost_center of this ProjectFeeInputModel.
        :param description: The description of this ProjectFeeInputModel.
        :param display_period_start_date: The display_period_start_date of this ProjectFeeInputModel.
        :param event_date: The event_date of this ProjectFeeInputModel.
        :param has_volume_pricing: The has_volume_pricing of this ProjectFeeInputModel.
        :param invoice: The invoice of this ProjectFeeInputModel.
        :param invoice_quantity: The invoice_quantity of this ProjectFeeInputModel.
        :param invoice_row_comment: The invoice_row_comment of this ProjectFeeInputModel.
        :param invoice_row_description: The invoice_row_description of this ProjectFeeInputModel.
        :param is_billable: The is_billable of this ProjectFeeInputModel.
        :param measurement_unit: The measurement_unit of this ProjectFeeInputModel.
        :param name: The name of this ProjectFeeInputModel.
        :param phase: The phase of this ProjectFeeInputModel.
        :param planned_billing_date: The planned_billing_date of this ProjectFeeInputModel.
        :param product: The product of this ProjectFeeInputModel.
        :param product_type: The product_type of this ProjectFeeInputModel.
        :param project: The project of this ProjectFeeInputModel.
        :param quantity: The quantity of this ProjectFeeInputModel.
        :param sales_account: The sales_account of this ProjectFeeInputModel.
        :param unit_cost: The unit_cost of this ProjectFeeInputModel.
        :param unit_price: The unit_price of this ProjectFeeInputModel.
        :param user: The user of this ProjectFeeInputModel.
        :param vat_rate: The vat_rate of this ProjectFeeInputModel.
        """
        self.openapi_types = {
            'billing_dependency_phase': SimpleInputModel,
            'billing_schedule': ProjectFeeBillingScheduleType,
            'cost_center': SimpleInputModel,
            'description': str,
            'display_period_start_date': date,
            'event_date': date,
            'has_volume_pricing': bool,
            'invoice': SimpleInputModel,
            'invoice_quantity': float,
            'invoice_row_comment': str,
            'invoice_row_description': str,
            'is_billable': bool,
            'measurement_unit': str,
            'name': str,
            'phase': SimpleInputModel,
            'planned_billing_date': date,
            'product': SimpleInputModel,
            'product_type': ProductType,
            'project': SimpleInputRequiredModel,
            'quantity': float,
            'sales_account': SimpleInputModel,
            'unit_cost': MoneyInputModelWithNullableAmount,
            'unit_price': MoneyInputModelWithNullableAmount,
            'user': SimpleInputModel,
            'vat_rate': float
        }

        self.attribute_map = {
            'billing_dependency_phase': 'billingDependencyPhase',
            'billing_schedule': 'billingSchedule',
            'cost_center': 'costCenter',
            'description': 'description',
            'display_period_start_date': 'displayPeriodStartDate',
            'event_date': 'eventDate',
            'has_volume_pricing': 'hasVolumePricing',
            'invoice': 'invoice',
            'invoice_quantity': 'invoiceQuantity',
            'invoice_row_comment': 'invoiceRowComment',
            'invoice_row_description': 'invoiceRowDescription',
            'is_billable': 'isBillable',
            'measurement_unit': 'measurementUnit',
            'name': 'name',
            'phase': 'phase',
            'planned_billing_date': 'plannedBillingDate',
            'product': 'product',
            'product_type': 'productType',
            'project': 'project',
            'quantity': 'quantity',
            'sales_account': 'salesAccount',
            'unit_cost': 'unitCost',
            'unit_price': 'unitPrice',
            'user': 'user',
            'vat_rate': 'vatRate'
        }

        self._billing_dependency_phase = billing_dependency_phase
        self._billing_schedule = billing_schedule
        self._cost_center = cost_center
        self._description = description
        self._display_period_start_date = display_period_start_date
        self._event_date = event_date
        self._has_volume_pricing = has_volume_pricing
        self._invoice = invoice
        self._invoice_quantity = invoice_quantity
        self._invoice_row_comment = invoice_row_comment
        self._invoice_row_description = invoice_row_description
        self._is_billable = is_billable
        self._measurement_unit = measurement_unit
        self._name = name
        self._phase = phase
        self._planned_billing_date = planned_billing_date
        self._product = product
        self._product_type = product_type
        self._project = project
        self._quantity = quantity
        self._sales_account = sales_account
        self._unit_cost = unit_cost
        self._unit_price = unit_price
        self._user = user
        self._vat_rate = vat_rate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectFeeInputModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectFeeInputModel of this ProjectFeeInputModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_dependency_phase(self):
        """Gets the billing_dependency_phase of this ProjectFeeInputModel.


        :return: The billing_dependency_phase of this ProjectFeeInputModel.
        :rtype: SimpleInputModel
        """
        return self._billing_dependency_phase

    @billing_dependency_phase.setter
    def billing_dependency_phase(self, billing_dependency_phase):
        """Sets the billing_dependency_phase of this ProjectFeeInputModel.


        :param billing_dependency_phase: The billing_dependency_phase of this ProjectFeeInputModel.
        :type billing_dependency_phase: SimpleInputModel
        """

        self._billing_dependency_phase = billing_dependency_phase

    @property
    def billing_schedule(self):
        """Gets the billing_schedule of this ProjectFeeInputModel.


        :return: The billing_schedule of this ProjectFeeInputModel.
        :rtype: ProjectFeeBillingScheduleType
        """
        return self._billing_schedule

    @billing_schedule.setter
    def billing_schedule(self, billing_schedule):
        """Sets the billing_schedule of this ProjectFeeInputModel.


        :param billing_schedule: The billing_schedule of this ProjectFeeInputModel.
        :type billing_schedule: ProjectFeeBillingScheduleType
        """

        self._billing_schedule = billing_schedule

    @property
    def cost_center(self):
        """Gets the cost_center of this ProjectFeeInputModel.


        :return: The cost_center of this ProjectFeeInputModel.
        :rtype: SimpleInputModel
        """
        return self._cost_center

    @cost_center.setter
    def cost_center(self, cost_center):
        """Sets the cost_center of this ProjectFeeInputModel.


        :param cost_center: The cost_center of this ProjectFeeInputModel.
        :type cost_center: SimpleInputModel
        """

        self._cost_center = cost_center

    @property
    def description(self):
        """Gets the description of this ProjectFeeInputModel.


        :return: The description of this ProjectFeeInputModel.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ProjectFeeInputModel.


        :param description: The description of this ProjectFeeInputModel.
        :type description: str
        """

        self._description = description

    @property
    def display_period_start_date(self):
        """Gets the display_period_start_date of this ProjectFeeInputModel.


        :return: The display_period_start_date of this ProjectFeeInputModel.
        :rtype: date
        """
        return self._display_period_start_date

    @display_period_start_date.setter
    def display_period_start_date(self, display_period_start_date):
        """Sets the display_period_start_date of this ProjectFeeInputModel.


        :param display_period_start_date: The display_period_start_date of this ProjectFeeInputModel.
        :type display_period_start_date: date
        """

        self._display_period_start_date = display_period_start_date

    @property
    def event_date(self):
        """Gets the event_date of this ProjectFeeInputModel.


        :return: The event_date of this ProjectFeeInputModel.
        :rtype: date
        """
        return self._event_date

    @event_date.setter
    def event_date(self, event_date):
        """Sets the event_date of this ProjectFeeInputModel.


        :param event_date: The event_date of this ProjectFeeInputModel.
        :type event_date: date
        """

        self._event_date = event_date

    @property
    def has_volume_pricing(self):
        """Gets the has_volume_pricing of this ProjectFeeInputModel.


        :return: The has_volume_pricing of this ProjectFeeInputModel.
        :rtype: bool
        """
        return self._has_volume_pricing

    @has_volume_pricing.setter
    def has_volume_pricing(self, has_volume_pricing):
        """Sets the has_volume_pricing of this ProjectFeeInputModel.


        :param has_volume_pricing: The has_volume_pricing of this ProjectFeeInputModel.
        :type has_volume_pricing: bool
        """

        self._has_volume_pricing = has_volume_pricing

    @property
    def invoice(self):
        """Gets the invoice of this ProjectFeeInputModel.


        :return: The invoice of this ProjectFeeInputModel.
        :rtype: SimpleInputModel
        """
        return self._invoice

    @invoice.setter
    def invoice(self, invoice):
        """Sets the invoice of this ProjectFeeInputModel.


        :param invoice: The invoice of this ProjectFeeInputModel.
        :type invoice: SimpleInputModel
        """

        self._invoice = invoice

    @property
    def invoice_quantity(self):
        """Gets the invoice_quantity of this ProjectFeeInputModel.


        :return: The invoice_quantity of this ProjectFeeInputModel.
        :rtype: float
        """
        return self._invoice_quantity

    @invoice_quantity.setter
    def invoice_quantity(self, invoice_quantity):
        """Sets the invoice_quantity of this ProjectFeeInputModel.


        :param invoice_quantity: The invoice_quantity of this ProjectFeeInputModel.
        :type invoice_quantity: float
        """

        self._invoice_quantity = invoice_quantity

    @property
    def invoice_row_comment(self):
        """Gets the invoice_row_comment of this ProjectFeeInputModel.


        :return: The invoice_row_comment of this ProjectFeeInputModel.
        :rtype: str
        """
        return self._invoice_row_comment

    @invoice_row_comment.setter
    def invoice_row_comment(self, invoice_row_comment):
        """Sets the invoice_row_comment of this ProjectFeeInputModel.


        :param invoice_row_comment: The invoice_row_comment of this ProjectFeeInputModel.
        :type invoice_row_comment: str
        """

        self._invoice_row_comment = invoice_row_comment

    @property
    def invoice_row_description(self):
        """Gets the invoice_row_description of this ProjectFeeInputModel.


        :return: The invoice_row_description of this ProjectFeeInputModel.
        :rtype: str
        """
        return self._invoice_row_description

    @invoice_row_description.setter
    def invoice_row_description(self, invoice_row_description):
        """Sets the invoice_row_description of this ProjectFeeInputModel.


        :param invoice_row_description: The invoice_row_description of this ProjectFeeInputModel.
        :type invoice_row_description: str
        """

        self._invoice_row_description = invoice_row_description

    @property
    def is_billable(self):
        """Gets the is_billable of this ProjectFeeInputModel.


        :return: The is_billable of this ProjectFeeInputModel.
        :rtype: bool
        """
        return self._is_billable

    @is_billable.setter
    def is_billable(self, is_billable):
        """Sets the is_billable of this ProjectFeeInputModel.


        :param is_billable: The is_billable of this ProjectFeeInputModel.
        :type is_billable: bool
        """

        self._is_billable = is_billable

    @property
    def measurement_unit(self):
        """Gets the measurement_unit of this ProjectFeeInputModel.


        :return: The measurement_unit of this ProjectFeeInputModel.
        :rtype: str
        """
        return self._measurement_unit

    @measurement_unit.setter
    def measurement_unit(self, measurement_unit):
        """Sets the measurement_unit of this ProjectFeeInputModel.


        :param measurement_unit: The measurement_unit of this ProjectFeeInputModel.
        :type measurement_unit: str
        """

        self._measurement_unit = measurement_unit

    @property
    def name(self):
        """Gets the name of this ProjectFeeInputModel.


        :return: The name of this ProjectFeeInputModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProjectFeeInputModel.


        :param name: The name of this ProjectFeeInputModel.
        :type name: str
        """

        self._name = name

    @property
    def phase(self):
        """Gets the phase of this ProjectFeeInputModel.


        :return: The phase of this ProjectFeeInputModel.
        :rtype: SimpleInputModel
        """
        return self._phase

    @phase.setter
    def phase(self, phase):
        """Sets the phase of this ProjectFeeInputModel.


        :param phase: The phase of this ProjectFeeInputModel.
        :type phase: SimpleInputModel
        """

        self._phase = phase

    @property
    def planned_billing_date(self):
        """Gets the planned_billing_date of this ProjectFeeInputModel.


        :return: The planned_billing_date of this ProjectFeeInputModel.
        :rtype: date
        """
        return self._planned_billing_date

    @planned_billing_date.setter
    def planned_billing_date(self, planned_billing_date):
        """Sets the planned_billing_date of this ProjectFeeInputModel.


        :param planned_billing_date: The planned_billing_date of this ProjectFeeInputModel.
        :type planned_billing_date: date
        """

        self._planned_billing_date = planned_billing_date

    @property
    def product(self):
        """Gets the product of this ProjectFeeInputModel.


        :return: The product of this ProjectFeeInputModel.
        :rtype: SimpleInputModel
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this ProjectFeeInputModel.


        :param product: The product of this ProjectFeeInputModel.
        :type product: SimpleInputModel
        """

        self._product = product

    @property
    def product_type(self):
        """Gets the product_type of this ProjectFeeInputModel.


        :return: The product_type of this ProjectFeeInputModel.
        :rtype: ProductType
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """Sets the product_type of this ProjectFeeInputModel.


        :param product_type: The product_type of this ProjectFeeInputModel.
        :type product_type: ProductType
        """

        self._product_type = product_type

    @property
    def project(self):
        """Gets the project of this ProjectFeeInputModel.


        :return: The project of this ProjectFeeInputModel.
        :rtype: SimpleInputRequiredModel
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this ProjectFeeInputModel.


        :param project: The project of this ProjectFeeInputModel.
        :type project: SimpleInputRequiredModel
        """
        if project is None:
            raise ValueError("Invalid value for `project`, must not be `None`")

        self._project = project

    @property
    def quantity(self):
        """Gets the quantity of this ProjectFeeInputModel.


        :return: The quantity of this ProjectFeeInputModel.
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this ProjectFeeInputModel.


        :param quantity: The quantity of this ProjectFeeInputModel.
        :type quantity: float
        """

        self._quantity = quantity

    @property
    def sales_account(self):
        """Gets the sales_account of this ProjectFeeInputModel.


        :return: The sales_account of this ProjectFeeInputModel.
        :rtype: SimpleInputModel
        """
        return self._sales_account

    @sales_account.setter
    def sales_account(self, sales_account):
        """Sets the sales_account of this ProjectFeeInputModel.


        :param sales_account: The sales_account of this ProjectFeeInputModel.
        :type sales_account: SimpleInputModel
        """

        self._sales_account = sales_account

    @property
    def unit_cost(self):
        """Gets the unit_cost of this ProjectFeeInputModel.


        :return: The unit_cost of this ProjectFeeInputModel.
        :rtype: MoneyInputModelWithNullableAmount
        """
        return self._unit_cost

    @unit_cost.setter
    def unit_cost(self, unit_cost):
        """Sets the unit_cost of this ProjectFeeInputModel.


        :param unit_cost: The unit_cost of this ProjectFeeInputModel.
        :type unit_cost: MoneyInputModelWithNullableAmount
        """

        self._unit_cost = unit_cost

    @property
    def unit_price(self):
        """Gets the unit_price of this ProjectFeeInputModel.


        :return: The unit_price of this ProjectFeeInputModel.
        :rtype: MoneyInputModelWithNullableAmount
        """
        return self._unit_price

    @unit_price.setter
    def unit_price(self, unit_price):
        """Sets the unit_price of this ProjectFeeInputModel.


        :param unit_price: The unit_price of this ProjectFeeInputModel.
        :type unit_price: MoneyInputModelWithNullableAmount
        """

        self._unit_price = unit_price

    @property
    def user(self):
        """Gets the user of this ProjectFeeInputModel.


        :return: The user of this ProjectFeeInputModel.
        :rtype: SimpleInputModel
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this ProjectFeeInputModel.


        :param user: The user of this ProjectFeeInputModel.
        :type user: SimpleInputModel
        """

        self._user = user

    @property
    def vat_rate(self):
        """Gets the vat_rate of this ProjectFeeInputModel.


        :return: The vat_rate of this ProjectFeeInputModel.
        :rtype: float
        """
        return self._vat_rate

    @vat_rate.setter
    def vat_rate(self, vat_rate):
        """Sets the vat_rate of this ProjectFeeInputModel.


        :param vat_rate: The vat_rate of this ProjectFeeInputModel.
        :type vat_rate: float
        """

        self._vat_rate = vat_rate
