# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_invoice_project_model import CreateInvoiceProjectModel
from openapi_server import util


class CreateInvoiceModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_customer_guid: str=None, _date: date=None, group_projects: bool=None, invoice_status_guid: str=None, projects: List[CreateInvoiceProjectModel]=None):
        """CreateInvoiceModel - a model defined in OpenAPI

        :param billing_customer_guid: The billing_customer_guid of this CreateInvoiceModel.
        :param _date: The _date of this CreateInvoiceModel.
        :param group_projects: The group_projects of this CreateInvoiceModel.
        :param invoice_status_guid: The invoice_status_guid of this CreateInvoiceModel.
        :param projects: The projects of this CreateInvoiceModel.
        """
        self.openapi_types = {
            'billing_customer_guid': str,
            '_date': date,
            'group_projects': bool,
            'invoice_status_guid': str,
            'projects': List[CreateInvoiceProjectModel]
        }

        self.attribute_map = {
            'billing_customer_guid': 'billingCustomerGuid',
            '_date': 'date',
            'group_projects': 'groupProjects',
            'invoice_status_guid': 'invoiceStatusGuid',
            'projects': 'projects'
        }

        self._billing_customer_guid = billing_customer_guid
        self.__date = _date
        self._group_projects = group_projects
        self._invoice_status_guid = invoice_status_guid
        self._projects = projects

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateInvoiceModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateInvoiceModel of this CreateInvoiceModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_customer_guid(self):
        """Gets the billing_customer_guid of this CreateInvoiceModel.


        :return: The billing_customer_guid of this CreateInvoiceModel.
        :rtype: str
        """
        return self._billing_customer_guid

    @billing_customer_guid.setter
    def billing_customer_guid(self, billing_customer_guid):
        """Sets the billing_customer_guid of this CreateInvoiceModel.


        :param billing_customer_guid: The billing_customer_guid of this CreateInvoiceModel.
        :type billing_customer_guid: str
        """

        self._billing_customer_guid = billing_customer_guid

    @property
    def _date(self):
        """Gets the _date of this CreateInvoiceModel.


        :return: The _date of this CreateInvoiceModel.
        :rtype: date
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this CreateInvoiceModel.


        :param _date: The _date of this CreateInvoiceModel.
        :type _date: date
        """

        self.__date = _date

    @property
    def group_projects(self):
        """Gets the group_projects of this CreateInvoiceModel.


        :return: The group_projects of this CreateInvoiceModel.
        :rtype: bool
        """
        return self._group_projects

    @group_projects.setter
    def group_projects(self, group_projects):
        """Sets the group_projects of this CreateInvoiceModel.


        :param group_projects: The group_projects of this CreateInvoiceModel.
        :type group_projects: bool
        """

        self._group_projects = group_projects

    @property
    def invoice_status_guid(self):
        """Gets the invoice_status_guid of this CreateInvoiceModel.


        :return: The invoice_status_guid of this CreateInvoiceModel.
        :rtype: str
        """
        return self._invoice_status_guid

    @invoice_status_guid.setter
    def invoice_status_guid(self, invoice_status_guid):
        """Sets the invoice_status_guid of this CreateInvoiceModel.


        :param invoice_status_guid: The invoice_status_guid of this CreateInvoiceModel.
        :type invoice_status_guid: str
        """

        self._invoice_status_guid = invoice_status_guid

    @property
    def projects(self):
        """Gets the projects of this CreateInvoiceModel.


        :return: The projects of this CreateInvoiceModel.
        :rtype: List[CreateInvoiceProjectModel]
        """
        return self._projects

    @projects.setter
    def projects(self, projects):
        """Sets the projects of this CreateInvoiceModel.


        :param projects: The projects of this CreateInvoiceModel.
        :type projects: List[CreateInvoiceProjectModel]
        """
        if projects is None:
            raise ValueError("Invalid value for `projects`, must not be `None`")

        self._projects = projects
