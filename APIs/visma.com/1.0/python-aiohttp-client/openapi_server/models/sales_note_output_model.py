# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_base import ModelBase
from openapi_server import util


class SalesNoteOutputModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_by: ModelBase=None, created_date_time: datetime=None, customer: ModelBase=None, guid: str=None, is_deleted: bool=None, last_updated_by: ModelBase=None, last_updated_date_time: datetime=None, note: str=None, project: ModelBase=None, user: ModelBase=None):
        """SalesNoteOutputModel - a model defined in OpenAPI

        :param created_by: The created_by of this SalesNoteOutputModel.
        :param created_date_time: The created_date_time of this SalesNoteOutputModel.
        :param customer: The customer of this SalesNoteOutputModel.
        :param guid: The guid of this SalesNoteOutputModel.
        :param is_deleted: The is_deleted of this SalesNoteOutputModel.
        :param last_updated_by: The last_updated_by of this SalesNoteOutputModel.
        :param last_updated_date_time: The last_updated_date_time of this SalesNoteOutputModel.
        :param note: The note of this SalesNoteOutputModel.
        :param project: The project of this SalesNoteOutputModel.
        :param user: The user of this SalesNoteOutputModel.
        """
        self.openapi_types = {
            'created_by': ModelBase,
            'created_date_time': datetime,
            'customer': ModelBase,
            'guid': str,
            'is_deleted': bool,
            'last_updated_by': ModelBase,
            'last_updated_date_time': datetime,
            'note': str,
            'project': ModelBase,
            'user': ModelBase
        }

        self.attribute_map = {
            'created_by': 'createdBy',
            'created_date_time': 'createdDateTime',
            'customer': 'customer',
            'guid': 'guid',
            'is_deleted': 'isDeleted',
            'last_updated_by': 'lastUpdatedBy',
            'last_updated_date_time': 'lastUpdatedDateTime',
            'note': 'note',
            'project': 'project',
            'user': 'user'
        }

        self._created_by = created_by
        self._created_date_time = created_date_time
        self._customer = customer
        self._guid = guid
        self._is_deleted = is_deleted
        self._last_updated_by = last_updated_by
        self._last_updated_date_time = last_updated_date_time
        self._note = note
        self._project = project
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SalesNoteOutputModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SalesNoteOutputModel of this SalesNoteOutputModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_by(self):
        """Gets the created_by of this SalesNoteOutputModel.


        :return: The created_by of this SalesNoteOutputModel.
        :rtype: ModelBase
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this SalesNoteOutputModel.


        :param created_by: The created_by of this SalesNoteOutputModel.
        :type created_by: ModelBase
        """

        self._created_by = created_by

    @property
    def created_date_time(self):
        """Gets the created_date_time of this SalesNoteOutputModel.


        :return: The created_date_time of this SalesNoteOutputModel.
        :rtype: datetime
        """
        return self._created_date_time

    @created_date_time.setter
    def created_date_time(self, created_date_time):
        """Sets the created_date_time of this SalesNoteOutputModel.


        :param created_date_time: The created_date_time of this SalesNoteOutputModel.
        :type created_date_time: datetime
        """

        self._created_date_time = created_date_time

    @property
    def customer(self):
        """Gets the customer of this SalesNoteOutputModel.


        :return: The customer of this SalesNoteOutputModel.
        :rtype: ModelBase
        """
        return self._customer

    @customer.setter
    def customer(self, customer):
        """Sets the customer of this SalesNoteOutputModel.


        :param customer: The customer of this SalesNoteOutputModel.
        :type customer: ModelBase
        """

        self._customer = customer

    @property
    def guid(self):
        """Gets the guid of this SalesNoteOutputModel.


        :return: The guid of this SalesNoteOutputModel.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this SalesNoteOutputModel.


        :param guid: The guid of this SalesNoteOutputModel.
        :type guid: str
        """

        self._guid = guid

    @property
    def is_deleted(self):
        """Gets the is_deleted of this SalesNoteOutputModel.


        :return: The is_deleted of this SalesNoteOutputModel.
        :rtype: bool
        """
        return self._is_deleted

    @is_deleted.setter
    def is_deleted(self, is_deleted):
        """Sets the is_deleted of this SalesNoteOutputModel.


        :param is_deleted: The is_deleted of this SalesNoteOutputModel.
        :type is_deleted: bool
        """

        self._is_deleted = is_deleted

    @property
    def last_updated_by(self):
        """Gets the last_updated_by of this SalesNoteOutputModel.


        :return: The last_updated_by of this SalesNoteOutputModel.
        :rtype: ModelBase
        """
        return self._last_updated_by

    @last_updated_by.setter
    def last_updated_by(self, last_updated_by):
        """Sets the last_updated_by of this SalesNoteOutputModel.


        :param last_updated_by: The last_updated_by of this SalesNoteOutputModel.
        :type last_updated_by: ModelBase
        """

        self._last_updated_by = last_updated_by

    @property
    def last_updated_date_time(self):
        """Gets the last_updated_date_time of this SalesNoteOutputModel.


        :return: The last_updated_date_time of this SalesNoteOutputModel.
        :rtype: datetime
        """
        return self._last_updated_date_time

    @last_updated_date_time.setter
    def last_updated_date_time(self, last_updated_date_time):
        """Sets the last_updated_date_time of this SalesNoteOutputModel.


        :param last_updated_date_time: The last_updated_date_time of this SalesNoteOutputModel.
        :type last_updated_date_time: datetime
        """

        self._last_updated_date_time = last_updated_date_time

    @property
    def note(self):
        """Gets the note of this SalesNoteOutputModel.


        :return: The note of this SalesNoteOutputModel.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this SalesNoteOutputModel.


        :param note: The note of this SalesNoteOutputModel.
        :type note: str
        """

        self._note = note

    @property
    def project(self):
        """Gets the project of this SalesNoteOutputModel.


        :return: The project of this SalesNoteOutputModel.
        :rtype: ModelBase
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this SalesNoteOutputModel.


        :param project: The project of this SalesNoteOutputModel.
        :type project: ModelBase
        """

        self._project = project

    @property
    def user(self):
        """Gets the user of this SalesNoteOutputModel.


        :return: The user of this SalesNoteOutputModel.
        :rtype: ModelBase
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this SalesNoteOutputModel.


        :param user: The user of this SalesNoteOutputModel.
        :type user: ModelBase
        """

        self._user = user
