# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectPricelistSubModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, guid: str=None, is_custom: bool=None, is_volume_pricing: bool=None, name: str=None):
        """ProjectPricelistSubModel - a model defined in OpenAPI

        :param guid: The guid of this ProjectPricelistSubModel.
        :param is_custom: The is_custom of this ProjectPricelistSubModel.
        :param is_volume_pricing: The is_volume_pricing of this ProjectPricelistSubModel.
        :param name: The name of this ProjectPricelistSubModel.
        """
        self.openapi_types = {
            'guid': str,
            'is_custom': bool,
            'is_volume_pricing': bool,
            'name': str
        }

        self.attribute_map = {
            'guid': 'guid',
            'is_custom': 'isCustom',
            'is_volume_pricing': 'isVolumePricing',
            'name': 'name'
        }

        self._guid = guid
        self._is_custom = is_custom
        self._is_volume_pricing = is_volume_pricing
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectPricelistSubModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectPricelistSubModel of this ProjectPricelistSubModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def guid(self):
        """Gets the guid of this ProjectPricelistSubModel.


        :return: The guid of this ProjectPricelistSubModel.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this ProjectPricelistSubModel.


        :param guid: The guid of this ProjectPricelistSubModel.
        :type guid: str
        """

        self._guid = guid

    @property
    def is_custom(self):
        """Gets the is_custom of this ProjectPricelistSubModel.


        :return: The is_custom of this ProjectPricelistSubModel.
        :rtype: bool
        """
        return self._is_custom

    @is_custom.setter
    def is_custom(self, is_custom):
        """Sets the is_custom of this ProjectPricelistSubModel.


        :param is_custom: The is_custom of this ProjectPricelistSubModel.
        :type is_custom: bool
        """

        self._is_custom = is_custom

    @property
    def is_volume_pricing(self):
        """Gets the is_volume_pricing of this ProjectPricelistSubModel.


        :return: The is_volume_pricing of this ProjectPricelistSubModel.
        :rtype: bool
        """
        return self._is_volume_pricing

    @is_volume_pricing.setter
    def is_volume_pricing(self, is_volume_pricing):
        """Sets the is_volume_pricing of this ProjectPricelistSubModel.


        :param is_volume_pricing: The is_volume_pricing of this ProjectPricelistSubModel.
        :type is_volume_pricing: bool
        """

        self._is_volume_pricing = is_volume_pricing

    @property
    def name(self):
        """Gets the name of this ProjectPricelistSubModel.


        :return: The name of this ProjectPricelistSubModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProjectPricelistSubModel.


        :param name: The name of this ProjectPricelistSubModel.
        :type name: str
        """

        self._name = name
