# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.company_country import CompanyCountry
from openapi_server import util


class CompanyModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country: CompanyCountry=None, currency_code: str=None, currency_guid: str=None, currency_rate: float=None, currency_symbol: str=None, guid: str=None, name: str=None, root_business_unit_guid: str=None):
        """CompanyModel - a model defined in OpenAPI

        :param country: The country of this CompanyModel.
        :param currency_code: The currency_code of this CompanyModel.
        :param currency_guid: The currency_guid of this CompanyModel.
        :param currency_rate: The currency_rate of this CompanyModel.
        :param currency_symbol: The currency_symbol of this CompanyModel.
        :param guid: The guid of this CompanyModel.
        :param name: The name of this CompanyModel.
        :param root_business_unit_guid: The root_business_unit_guid of this CompanyModel.
        """
        self.openapi_types = {
            'country': CompanyCountry,
            'currency_code': str,
            'currency_guid': str,
            'currency_rate': float,
            'currency_symbol': str,
            'guid': str,
            'name': str,
            'root_business_unit_guid': str
        }

        self.attribute_map = {
            'country': 'country',
            'currency_code': 'currencyCode',
            'currency_guid': 'currencyGuid',
            'currency_rate': 'currencyRate',
            'currency_symbol': 'currencySymbol',
            'guid': 'guid',
            'name': 'name',
            'root_business_unit_guid': 'rootBusinessUnitGuid'
        }

        self._country = country
        self._currency_code = currency_code
        self._currency_guid = currency_guid
        self._currency_rate = currency_rate
        self._currency_symbol = currency_symbol
        self._guid = guid
        self._name = name
        self._root_business_unit_guid = root_business_unit_guid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompanyModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompanyModel of this CompanyModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self):
        """Gets the country of this CompanyModel.


        :return: The country of this CompanyModel.
        :rtype: CompanyCountry
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this CompanyModel.


        :param country: The country of this CompanyModel.
        :type country: CompanyCountry
        """

        self._country = country

    @property
    def currency_code(self):
        """Gets the currency_code of this CompanyModel.


        :return: The currency_code of this CompanyModel.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this CompanyModel.


        :param currency_code: The currency_code of this CompanyModel.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def currency_guid(self):
        """Gets the currency_guid of this CompanyModel.


        :return: The currency_guid of this CompanyModel.
        :rtype: str
        """
        return self._currency_guid

    @currency_guid.setter
    def currency_guid(self, currency_guid):
        """Sets the currency_guid of this CompanyModel.


        :param currency_guid: The currency_guid of this CompanyModel.
        :type currency_guid: str
        """

        self._currency_guid = currency_guid

    @property
    def currency_rate(self):
        """Gets the currency_rate of this CompanyModel.


        :return: The currency_rate of this CompanyModel.
        :rtype: float
        """
        return self._currency_rate

    @currency_rate.setter
    def currency_rate(self, currency_rate):
        """Sets the currency_rate of this CompanyModel.


        :param currency_rate: The currency_rate of this CompanyModel.
        :type currency_rate: float
        """

        self._currency_rate = currency_rate

    @property
    def currency_symbol(self):
        """Gets the currency_symbol of this CompanyModel.


        :return: The currency_symbol of this CompanyModel.
        :rtype: str
        """
        return self._currency_symbol

    @currency_symbol.setter
    def currency_symbol(self, currency_symbol):
        """Sets the currency_symbol of this CompanyModel.


        :param currency_symbol: The currency_symbol of this CompanyModel.
        :type currency_symbol: str
        """

        self._currency_symbol = currency_symbol

    @property
    def guid(self):
        """Gets the guid of this CompanyModel.


        :return: The guid of this CompanyModel.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this CompanyModel.


        :param guid: The guid of this CompanyModel.
        :type guid: str
        """

        self._guid = guid

    @property
    def name(self):
        """Gets the name of this CompanyModel.


        :return: The name of this CompanyModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CompanyModel.


        :param name: The name of this CompanyModel.
        :type name: str
        """

        self._name = name

    @property
    def root_business_unit_guid(self):
        """Gets the root_business_unit_guid of this CompanyModel.


        :return: The root_business_unit_guid of this CompanyModel.
        :rtype: str
        """
        return self._root_business_unit_guid

    @root_business_unit_guid.setter
    def root_business_unit_guid(self, root_business_unit_guid):
        """Sets the root_business_unit_guid of this CompanyModel.


        :param root_business_unit_guid: The root_business_unit_guid of this CompanyModel.
        :type root_business_unit_guid: str
        """

        self._root_business_unit_guid = root_business_unit_guid
