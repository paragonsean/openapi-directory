# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.simple_input_model import SimpleInputModel
from openapi_server import util


class CustomerCustomPropertySelectionItemInputModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customer_custom_property: SimpleInputModel=None, is_active: bool=True, name: str=None, sort_order: int=None):
        """CustomerCustomPropertySelectionItemInputModel - a model defined in OpenAPI

        :param customer_custom_property: The customer_custom_property of this CustomerCustomPropertySelectionItemInputModel.
        :param is_active: The is_active of this CustomerCustomPropertySelectionItemInputModel.
        :param name: The name of this CustomerCustomPropertySelectionItemInputModel.
        :param sort_order: The sort_order of this CustomerCustomPropertySelectionItemInputModel.
        """
        self.openapi_types = {
            'customer_custom_property': SimpleInputModel,
            'is_active': bool,
            'name': str,
            'sort_order': int
        }

        self.attribute_map = {
            'customer_custom_property': 'customerCustomProperty',
            'is_active': 'isActive',
            'name': 'name',
            'sort_order': 'sortOrder'
        }

        self._customer_custom_property = customer_custom_property
        self._is_active = is_active
        self._name = name
        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomerCustomPropertySelectionItemInputModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomerCustomPropertySelectionItemInputModel of this CustomerCustomPropertySelectionItemInputModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_custom_property(self):
        """Gets the customer_custom_property of this CustomerCustomPropertySelectionItemInputModel.


        :return: The customer_custom_property of this CustomerCustomPropertySelectionItemInputModel.
        :rtype: SimpleInputModel
        """
        return self._customer_custom_property

    @customer_custom_property.setter
    def customer_custom_property(self, customer_custom_property):
        """Sets the customer_custom_property of this CustomerCustomPropertySelectionItemInputModel.


        :param customer_custom_property: The customer_custom_property of this CustomerCustomPropertySelectionItemInputModel.
        :type customer_custom_property: SimpleInputModel
        """
        if customer_custom_property is None:
            raise ValueError("Invalid value for `customer_custom_property`, must not be `None`")

        self._customer_custom_property = customer_custom_property

    @property
    def is_active(self):
        """Gets the is_active of this CustomerCustomPropertySelectionItemInputModel.


        :return: The is_active of this CustomerCustomPropertySelectionItemInputModel.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this CustomerCustomPropertySelectionItemInputModel.


        :param is_active: The is_active of this CustomerCustomPropertySelectionItemInputModel.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def name(self):
        """Gets the name of this CustomerCustomPropertySelectionItemInputModel.


        :return: The name of this CustomerCustomPropertySelectionItemInputModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CustomerCustomPropertySelectionItemInputModel.


        :param name: The name of this CustomerCustomPropertySelectionItemInputModel.
        :type name: str
        """

        self._name = name

    @property
    def sort_order(self):
        """Gets the sort_order of this CustomerCustomPropertySelectionItemInputModel.


        :return: The sort_order of this CustomerCustomPropertySelectionItemInputModel.
        :rtype: int
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this CustomerCustomPropertySelectionItemInputModel.


        :param sort_order: The sort_order of this CustomerCustomPropertySelectionItemInputModel.
        :type sort_order: int
        """

        self._sort_order = sort_order
