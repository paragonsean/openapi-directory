# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PhaseMembersFromBusinessUnitUsersModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, business_unit_guid: str=None, phase_guid: str=None):
        """PhaseMembersFromBusinessUnitUsersModel - a model defined in OpenAPI

        :param business_unit_guid: The business_unit_guid of this PhaseMembersFromBusinessUnitUsersModel.
        :param phase_guid: The phase_guid of this PhaseMembersFromBusinessUnitUsersModel.
        """
        self.openapi_types = {
            'business_unit_guid': str,
            'phase_guid': str
        }

        self.attribute_map = {
            'business_unit_guid': 'businessUnitGuid',
            'phase_guid': 'phaseGuid'
        }

        self._business_unit_guid = business_unit_guid
        self._phase_guid = phase_guid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PhaseMembersFromBusinessUnitUsersModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PhaseMembersFromBusinessUnitUsersModel of this PhaseMembersFromBusinessUnitUsersModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def business_unit_guid(self):
        """Gets the business_unit_guid of this PhaseMembersFromBusinessUnitUsersModel.


        :return: The business_unit_guid of this PhaseMembersFromBusinessUnitUsersModel.
        :rtype: str
        """
        return self._business_unit_guid

    @business_unit_guid.setter
    def business_unit_guid(self, business_unit_guid):
        """Sets the business_unit_guid of this PhaseMembersFromBusinessUnitUsersModel.


        :param business_unit_guid: The business_unit_guid of this PhaseMembersFromBusinessUnitUsersModel.
        :type business_unit_guid: str
        """
        if business_unit_guid is None:
            raise ValueError("Invalid value for `business_unit_guid`, must not be `None`")
        if business_unit_guid is not None and len(business_unit_guid) < 1:
            raise ValueError("Invalid value for `business_unit_guid`, length must be greater than or equal to `1`")

        self._business_unit_guid = business_unit_guid

    @property
    def phase_guid(self):
        """Gets the phase_guid of this PhaseMembersFromBusinessUnitUsersModel.


        :return: The phase_guid of this PhaseMembersFromBusinessUnitUsersModel.
        :rtype: str
        """
        return self._phase_guid

    @phase_guid.setter
    def phase_guid(self, phase_guid):
        """Sets the phase_guid of this PhaseMembersFromBusinessUnitUsersModel.


        :param phase_guid: The phase_guid of this PhaseMembersFromBusinessUnitUsersModel.
        :type phase_guid: str
        """
        if phase_guid is None:
            raise ValueError("Invalid value for `phase_guid`, must not be `None`")
        if phase_guid is not None and len(phase_guid) < 1:
            raise ValueError("Invalid value for `phase_guid`, length must be greater than or equal to `1`")

        self._phase_guid = phase_guid
