# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_base_read_only import ModelBaseReadOnly
from openapi_server import util


class DeletedWorkHourModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_by: ModelBaseReadOnly=None, created_date_time: datetime=None, customer: ModelBaseReadOnly=None, deleted_date_time: datetime=None, end_time: datetime=None, event_date: date=None, guid: str=None, last_updated_by: ModelBaseReadOnly=None, last_updated_date_time: datetime=None, phase: ModelBaseReadOnly=None, planned_invoice_quantity: float=None, project: ModelBaseReadOnly=None, quantity: float=None, start_time: datetime=None, user: ModelBaseReadOnly=None, work_type: ModelBaseReadOnly=None):
        """DeletedWorkHourModel - a model defined in OpenAPI

        :param created_by: The created_by of this DeletedWorkHourModel.
        :param created_date_time: The created_date_time of this DeletedWorkHourModel.
        :param customer: The customer of this DeletedWorkHourModel.
        :param deleted_date_time: The deleted_date_time of this DeletedWorkHourModel.
        :param end_time: The end_time of this DeletedWorkHourModel.
        :param event_date: The event_date of this DeletedWorkHourModel.
        :param guid: The guid of this DeletedWorkHourModel.
        :param last_updated_by: The last_updated_by of this DeletedWorkHourModel.
        :param last_updated_date_time: The last_updated_date_time of this DeletedWorkHourModel.
        :param phase: The phase of this DeletedWorkHourModel.
        :param planned_invoice_quantity: The planned_invoice_quantity of this DeletedWorkHourModel.
        :param project: The project of this DeletedWorkHourModel.
        :param quantity: The quantity of this DeletedWorkHourModel.
        :param start_time: The start_time of this DeletedWorkHourModel.
        :param user: The user of this DeletedWorkHourModel.
        :param work_type: The work_type of this DeletedWorkHourModel.
        """
        self.openapi_types = {
            'created_by': ModelBaseReadOnly,
            'created_date_time': datetime,
            'customer': ModelBaseReadOnly,
            'deleted_date_time': datetime,
            'end_time': datetime,
            'event_date': date,
            'guid': str,
            'last_updated_by': ModelBaseReadOnly,
            'last_updated_date_time': datetime,
            'phase': ModelBaseReadOnly,
            'planned_invoice_quantity': float,
            'project': ModelBaseReadOnly,
            'quantity': float,
            'start_time': datetime,
            'user': ModelBaseReadOnly,
            'work_type': ModelBaseReadOnly
        }

        self.attribute_map = {
            'created_by': 'createdBy',
            'created_date_time': 'createdDateTime',
            'customer': 'customer',
            'deleted_date_time': 'deletedDateTime',
            'end_time': 'endTime',
            'event_date': 'eventDate',
            'guid': 'guid',
            'last_updated_by': 'lastUpdatedBy',
            'last_updated_date_time': 'lastUpdatedDateTime',
            'phase': 'phase',
            'planned_invoice_quantity': 'plannedInvoiceQuantity',
            'project': 'project',
            'quantity': 'quantity',
            'start_time': 'startTime',
            'user': 'user',
            'work_type': 'workType'
        }

        self._created_by = created_by
        self._created_date_time = created_date_time
        self._customer = customer
        self._deleted_date_time = deleted_date_time
        self._end_time = end_time
        self._event_date = event_date
        self._guid = guid
        self._last_updated_by = last_updated_by
        self._last_updated_date_time = last_updated_date_time
        self._phase = phase
        self._planned_invoice_quantity = planned_invoice_quantity
        self._project = project
        self._quantity = quantity
        self._start_time = start_time
        self._user = user
        self._work_type = work_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeletedWorkHourModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeletedWorkHourModel of this DeletedWorkHourModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_by(self):
        """Gets the created_by of this DeletedWorkHourModel.


        :return: The created_by of this DeletedWorkHourModel.
        :rtype: ModelBaseReadOnly
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this DeletedWorkHourModel.


        :param created_by: The created_by of this DeletedWorkHourModel.
        :type created_by: ModelBaseReadOnly
        """

        self._created_by = created_by

    @property
    def created_date_time(self):
        """Gets the created_date_time of this DeletedWorkHourModel.


        :return: The created_date_time of this DeletedWorkHourModel.
        :rtype: datetime
        """
        return self._created_date_time

    @created_date_time.setter
    def created_date_time(self, created_date_time):
        """Sets the created_date_time of this DeletedWorkHourModel.


        :param created_date_time: The created_date_time of this DeletedWorkHourModel.
        :type created_date_time: datetime
        """

        self._created_date_time = created_date_time

    @property
    def customer(self):
        """Gets the customer of this DeletedWorkHourModel.


        :return: The customer of this DeletedWorkHourModel.
        :rtype: ModelBaseReadOnly
        """
        return self._customer

    @customer.setter
    def customer(self, customer):
        """Sets the customer of this DeletedWorkHourModel.


        :param customer: The customer of this DeletedWorkHourModel.
        :type customer: ModelBaseReadOnly
        """

        self._customer = customer

    @property
    def deleted_date_time(self):
        """Gets the deleted_date_time of this DeletedWorkHourModel.


        :return: The deleted_date_time of this DeletedWorkHourModel.
        :rtype: datetime
        """
        return self._deleted_date_time

    @deleted_date_time.setter
    def deleted_date_time(self, deleted_date_time):
        """Sets the deleted_date_time of this DeletedWorkHourModel.


        :param deleted_date_time: The deleted_date_time of this DeletedWorkHourModel.
        :type deleted_date_time: datetime
        """

        self._deleted_date_time = deleted_date_time

    @property
    def end_time(self):
        """Gets the end_time of this DeletedWorkHourModel.


        :return: The end_time of this DeletedWorkHourModel.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this DeletedWorkHourModel.


        :param end_time: The end_time of this DeletedWorkHourModel.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def event_date(self):
        """Gets the event_date of this DeletedWorkHourModel.


        :return: The event_date of this DeletedWorkHourModel.
        :rtype: date
        """
        return self._event_date

    @event_date.setter
    def event_date(self, event_date):
        """Sets the event_date of this DeletedWorkHourModel.


        :param event_date: The event_date of this DeletedWorkHourModel.
        :type event_date: date
        """

        self._event_date = event_date

    @property
    def guid(self):
        """Gets the guid of this DeletedWorkHourModel.


        :return: The guid of this DeletedWorkHourModel.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this DeletedWorkHourModel.


        :param guid: The guid of this DeletedWorkHourModel.
        :type guid: str
        """

        self._guid = guid

    @property
    def last_updated_by(self):
        """Gets the last_updated_by of this DeletedWorkHourModel.


        :return: The last_updated_by of this DeletedWorkHourModel.
        :rtype: ModelBaseReadOnly
        """
        return self._last_updated_by

    @last_updated_by.setter
    def last_updated_by(self, last_updated_by):
        """Sets the last_updated_by of this DeletedWorkHourModel.


        :param last_updated_by: The last_updated_by of this DeletedWorkHourModel.
        :type last_updated_by: ModelBaseReadOnly
        """

        self._last_updated_by = last_updated_by

    @property
    def last_updated_date_time(self):
        """Gets the last_updated_date_time of this DeletedWorkHourModel.


        :return: The last_updated_date_time of this DeletedWorkHourModel.
        :rtype: datetime
        """
        return self._last_updated_date_time

    @last_updated_date_time.setter
    def last_updated_date_time(self, last_updated_date_time):
        """Sets the last_updated_date_time of this DeletedWorkHourModel.


        :param last_updated_date_time: The last_updated_date_time of this DeletedWorkHourModel.
        :type last_updated_date_time: datetime
        """

        self._last_updated_date_time = last_updated_date_time

    @property
    def phase(self):
        """Gets the phase of this DeletedWorkHourModel.


        :return: The phase of this DeletedWorkHourModel.
        :rtype: ModelBaseReadOnly
        """
        return self._phase

    @phase.setter
    def phase(self, phase):
        """Sets the phase of this DeletedWorkHourModel.


        :param phase: The phase of this DeletedWorkHourModel.
        :type phase: ModelBaseReadOnly
        """

        self._phase = phase

    @property
    def planned_invoice_quantity(self):
        """Gets the planned_invoice_quantity of this DeletedWorkHourModel.


        :return: The planned_invoice_quantity of this DeletedWorkHourModel.
        :rtype: float
        """
        return self._planned_invoice_quantity

    @planned_invoice_quantity.setter
    def planned_invoice_quantity(self, planned_invoice_quantity):
        """Sets the planned_invoice_quantity of this DeletedWorkHourModel.


        :param planned_invoice_quantity: The planned_invoice_quantity of this DeletedWorkHourModel.
        :type planned_invoice_quantity: float
        """

        self._planned_invoice_quantity = planned_invoice_quantity

    @property
    def project(self):
        """Gets the project of this DeletedWorkHourModel.


        :return: The project of this DeletedWorkHourModel.
        :rtype: ModelBaseReadOnly
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this DeletedWorkHourModel.


        :param project: The project of this DeletedWorkHourModel.
        :type project: ModelBaseReadOnly
        """

        self._project = project

    @property
    def quantity(self):
        """Gets the quantity of this DeletedWorkHourModel.


        :return: The quantity of this DeletedWorkHourModel.
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this DeletedWorkHourModel.


        :param quantity: The quantity of this DeletedWorkHourModel.
        :type quantity: float
        """

        self._quantity = quantity

    @property
    def start_time(self):
        """Gets the start_time of this DeletedWorkHourModel.


        :return: The start_time of this DeletedWorkHourModel.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this DeletedWorkHourModel.


        :param start_time: The start_time of this DeletedWorkHourModel.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def user(self):
        """Gets the user of this DeletedWorkHourModel.


        :return: The user of this DeletedWorkHourModel.
        :rtype: ModelBaseReadOnly
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this DeletedWorkHourModel.


        :param user: The user of this DeletedWorkHourModel.
        :type user: ModelBaseReadOnly
        """

        self._user = user

    @property
    def work_type(self):
        """Gets the work_type of this DeletedWorkHourModel.


        :return: The work_type of this DeletedWorkHourModel.
        :rtype: ModelBaseReadOnly
        """
        return self._work_type

    @work_type.setter
    def work_type(self, work_type):
        """Sets the work_type of this DeletedWorkHourModel.


        :param work_type: The work_type of this DeletedWorkHourModel.
        :type work_type: ModelBaseReadOnly
        """

        self._work_type = work_type
