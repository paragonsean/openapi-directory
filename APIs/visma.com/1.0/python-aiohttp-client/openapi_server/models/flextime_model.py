# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FlextimeModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, month_flextime_balance: float=None, total_flextime_balance: float=None):
        """FlextimeModel - a model defined in OpenAPI

        :param month_flextime_balance: The month_flextime_balance of this FlextimeModel.
        :param total_flextime_balance: The total_flextime_balance of this FlextimeModel.
        """
        self.openapi_types = {
            'month_flextime_balance': float,
            'total_flextime_balance': float
        }

        self.attribute_map = {
            'month_flextime_balance': 'monthFlextimeBalance',
            'total_flextime_balance': 'totalFlextimeBalance'
        }

        self._month_flextime_balance = month_flextime_balance
        self._total_flextime_balance = total_flextime_balance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlextimeModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FlextimeModel of this FlextimeModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def month_flextime_balance(self):
        """Gets the month_flextime_balance of this FlextimeModel.


        :return: The month_flextime_balance of this FlextimeModel.
        :rtype: float
        """
        return self._month_flextime_balance

    @month_flextime_balance.setter
    def month_flextime_balance(self, month_flextime_balance):
        """Sets the month_flextime_balance of this FlextimeModel.


        :param month_flextime_balance: The month_flextime_balance of this FlextimeModel.
        :type month_flextime_balance: float
        """

        self._month_flextime_balance = month_flextime_balance

    @property
    def total_flextime_balance(self):
        """Gets the total_flextime_balance of this FlextimeModel.


        :return: The total_flextime_balance of this FlextimeModel.
        :rtype: float
        """
        return self._total_flextime_balance

    @total_flextime_balance.setter
    def total_flextime_balance(self, total_flextime_balance):
        """Sets the total_flextime_balance of this FlextimeModel.


        :param total_flextime_balance: The total_flextime_balance of this FlextimeModel.
        :type total_flextime_balance: float
        """

        self._total_flextime_balance = total_flextime_balance
