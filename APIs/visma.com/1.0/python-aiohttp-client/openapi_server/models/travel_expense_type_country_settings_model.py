# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_base_with_required_guid import ModelBaseWithRequiredGuid
from openapi_server.models.user_with_first_name_last_name_and_photo_file_model import UserWithFirstNameLastNameAndPhotoFileModel
from openapi_server import util


class TravelExpenseTypeCountrySettingsModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country: ModelBaseWithRequiredGuid=None, created_by: UserWithFirstNameLastNameAndPhotoFileModel=None, created_date_time: datetime=None, guid: str=None, last_updated_by: UserWithFirstNameLastNameAndPhotoFileModel=None, last_updated_date_time: datetime=None, product: ModelBaseWithRequiredGuid=None, purchase_vat_rate: float=None, vat_rate: float=None):
        """TravelExpenseTypeCountrySettingsModel - a model defined in OpenAPI

        :param country: The country of this TravelExpenseTypeCountrySettingsModel.
        :param created_by: The created_by of this TravelExpenseTypeCountrySettingsModel.
        :param created_date_time: The created_date_time of this TravelExpenseTypeCountrySettingsModel.
        :param guid: The guid of this TravelExpenseTypeCountrySettingsModel.
        :param last_updated_by: The last_updated_by of this TravelExpenseTypeCountrySettingsModel.
        :param last_updated_date_time: The last_updated_date_time of this TravelExpenseTypeCountrySettingsModel.
        :param product: The product of this TravelExpenseTypeCountrySettingsModel.
        :param purchase_vat_rate: The purchase_vat_rate of this TravelExpenseTypeCountrySettingsModel.
        :param vat_rate: The vat_rate of this TravelExpenseTypeCountrySettingsModel.
        """
        self.openapi_types = {
            'country': ModelBaseWithRequiredGuid,
            'created_by': UserWithFirstNameLastNameAndPhotoFileModel,
            'created_date_time': datetime,
            'guid': str,
            'last_updated_by': UserWithFirstNameLastNameAndPhotoFileModel,
            'last_updated_date_time': datetime,
            'product': ModelBaseWithRequiredGuid,
            'purchase_vat_rate': float,
            'vat_rate': float
        }

        self.attribute_map = {
            'country': 'country',
            'created_by': 'createdBy',
            'created_date_time': 'createdDateTime',
            'guid': 'guid',
            'last_updated_by': 'lastUpdatedBy',
            'last_updated_date_time': 'lastUpdatedDateTime',
            'product': 'product',
            'purchase_vat_rate': 'purchaseVatRate',
            'vat_rate': 'vatRate'
        }

        self._country = country
        self._created_by = created_by
        self._created_date_time = created_date_time
        self._guid = guid
        self._last_updated_by = last_updated_by
        self._last_updated_date_time = last_updated_date_time
        self._product = product
        self._purchase_vat_rate = purchase_vat_rate
        self._vat_rate = vat_rate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TravelExpenseTypeCountrySettingsModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TravelExpenseTypeCountrySettingsModel of this TravelExpenseTypeCountrySettingsModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self):
        """Gets the country of this TravelExpenseTypeCountrySettingsModel.


        :return: The country of this TravelExpenseTypeCountrySettingsModel.
        :rtype: ModelBaseWithRequiredGuid
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this TravelExpenseTypeCountrySettingsModel.


        :param country: The country of this TravelExpenseTypeCountrySettingsModel.
        :type country: ModelBaseWithRequiredGuid
        """
        if country is None:
            raise ValueError("Invalid value for `country`, must not be `None`")

        self._country = country

    @property
    def created_by(self):
        """Gets the created_by of this TravelExpenseTypeCountrySettingsModel.


        :return: The created_by of this TravelExpenseTypeCountrySettingsModel.
        :rtype: UserWithFirstNameLastNameAndPhotoFileModel
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this TravelExpenseTypeCountrySettingsModel.


        :param created_by: The created_by of this TravelExpenseTypeCountrySettingsModel.
        :type created_by: UserWithFirstNameLastNameAndPhotoFileModel
        """

        self._created_by = created_by

    @property
    def created_date_time(self):
        """Gets the created_date_time of this TravelExpenseTypeCountrySettingsModel.


        :return: The created_date_time of this TravelExpenseTypeCountrySettingsModel.
        :rtype: datetime
        """
        return self._created_date_time

    @created_date_time.setter
    def created_date_time(self, created_date_time):
        """Sets the created_date_time of this TravelExpenseTypeCountrySettingsModel.


        :param created_date_time: The created_date_time of this TravelExpenseTypeCountrySettingsModel.
        :type created_date_time: datetime
        """

        self._created_date_time = created_date_time

    @property
    def guid(self):
        """Gets the guid of this TravelExpenseTypeCountrySettingsModel.


        :return: The guid of this TravelExpenseTypeCountrySettingsModel.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this TravelExpenseTypeCountrySettingsModel.


        :param guid: The guid of this TravelExpenseTypeCountrySettingsModel.
        :type guid: str
        """

        self._guid = guid

    @property
    def last_updated_by(self):
        """Gets the last_updated_by of this TravelExpenseTypeCountrySettingsModel.


        :return: The last_updated_by of this TravelExpenseTypeCountrySettingsModel.
        :rtype: UserWithFirstNameLastNameAndPhotoFileModel
        """
        return self._last_updated_by

    @last_updated_by.setter
    def last_updated_by(self, last_updated_by):
        """Sets the last_updated_by of this TravelExpenseTypeCountrySettingsModel.


        :param last_updated_by: The last_updated_by of this TravelExpenseTypeCountrySettingsModel.
        :type last_updated_by: UserWithFirstNameLastNameAndPhotoFileModel
        """

        self._last_updated_by = last_updated_by

    @property
    def last_updated_date_time(self):
        """Gets the last_updated_date_time of this TravelExpenseTypeCountrySettingsModel.


        :return: The last_updated_date_time of this TravelExpenseTypeCountrySettingsModel.
        :rtype: datetime
        """
        return self._last_updated_date_time

    @last_updated_date_time.setter
    def last_updated_date_time(self, last_updated_date_time):
        """Sets the last_updated_date_time of this TravelExpenseTypeCountrySettingsModel.


        :param last_updated_date_time: The last_updated_date_time of this TravelExpenseTypeCountrySettingsModel.
        :type last_updated_date_time: datetime
        """

        self._last_updated_date_time = last_updated_date_time

    @property
    def product(self):
        """Gets the product of this TravelExpenseTypeCountrySettingsModel.


        :return: The product of this TravelExpenseTypeCountrySettingsModel.
        :rtype: ModelBaseWithRequiredGuid
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this TravelExpenseTypeCountrySettingsModel.


        :param product: The product of this TravelExpenseTypeCountrySettingsModel.
        :type product: ModelBaseWithRequiredGuid
        """
        if product is None:
            raise ValueError("Invalid value for `product`, must not be `None`")

        self._product = product

    @property
    def purchase_vat_rate(self):
        """Gets the purchase_vat_rate of this TravelExpenseTypeCountrySettingsModel.


        :return: The purchase_vat_rate of this TravelExpenseTypeCountrySettingsModel.
        :rtype: float
        """
        return self._purchase_vat_rate

    @purchase_vat_rate.setter
    def purchase_vat_rate(self, purchase_vat_rate):
        """Sets the purchase_vat_rate of this TravelExpenseTypeCountrySettingsModel.


        :param purchase_vat_rate: The purchase_vat_rate of this TravelExpenseTypeCountrySettingsModel.
        :type purchase_vat_rate: float
        """

        self._purchase_vat_rate = purchase_vat_rate

    @property
    def vat_rate(self):
        """Gets the vat_rate of this TravelExpenseTypeCountrySettingsModel.


        :return: The vat_rate of this TravelExpenseTypeCountrySettingsModel.
        :rtype: float
        """
        return self._vat_rate

    @vat_rate.setter
    def vat_rate(self, vat_rate):
        """Sets the vat_rate of this TravelExpenseTypeCountrySettingsModel.


        :param vat_rate: The vat_rate of this TravelExpenseTypeCountrySettingsModel.
        :type vat_rate: float
        """

        self._vat_rate = vat_rate
