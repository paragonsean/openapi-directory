# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bank_account_format import BankAccountFormat
from openapi_server.models.model_with_name import ModelWithName
from openapi_server.models.user_with_first_name_last_name_and_photo_file_model import UserWithFirstNameLastNameAndPhotoFileModel
from openapi_server import util


class BankAccountOutputModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_number: str=None, account_number_format: BankAccountFormat=None, bank_name: str=None, bic: str=None, business_unit: ModelWithName=None, company: ModelWithName=None, created_by: UserWithFirstNameLastNameAndPhotoFileModel=None, created_date_time: datetime=None, guid: str=None, is_active: bool=True, last_updated_by: UserWithFirstNameLastNameAndPhotoFileModel=None, last_updated_date_time: datetime=None):
        """BankAccountOutputModel - a model defined in OpenAPI

        :param account_number: The account_number of this BankAccountOutputModel.
        :param account_number_format: The account_number_format of this BankAccountOutputModel.
        :param bank_name: The bank_name of this BankAccountOutputModel.
        :param bic: The bic of this BankAccountOutputModel.
        :param business_unit: The business_unit of this BankAccountOutputModel.
        :param company: The company of this BankAccountOutputModel.
        :param created_by: The created_by of this BankAccountOutputModel.
        :param created_date_time: The created_date_time of this BankAccountOutputModel.
        :param guid: The guid of this BankAccountOutputModel.
        :param is_active: The is_active of this BankAccountOutputModel.
        :param last_updated_by: The last_updated_by of this BankAccountOutputModel.
        :param last_updated_date_time: The last_updated_date_time of this BankAccountOutputModel.
        """
        self.openapi_types = {
            'account_number': str,
            'account_number_format': BankAccountFormat,
            'bank_name': str,
            'bic': str,
            'business_unit': ModelWithName,
            'company': ModelWithName,
            'created_by': UserWithFirstNameLastNameAndPhotoFileModel,
            'created_date_time': datetime,
            'guid': str,
            'is_active': bool,
            'last_updated_by': UserWithFirstNameLastNameAndPhotoFileModel,
            'last_updated_date_time': datetime
        }

        self.attribute_map = {
            'account_number': 'accountNumber',
            'account_number_format': 'accountNumberFormat',
            'bank_name': 'bankName',
            'bic': 'bic',
            'business_unit': 'businessUnit',
            'company': 'company',
            'created_by': 'createdBy',
            'created_date_time': 'createdDateTime',
            'guid': 'guid',
            'is_active': 'isActive',
            'last_updated_by': 'lastUpdatedBy',
            'last_updated_date_time': 'lastUpdatedDateTime'
        }

        self._account_number = account_number
        self._account_number_format = account_number_format
        self._bank_name = bank_name
        self._bic = bic
        self._business_unit = business_unit
        self._company = company
        self._created_by = created_by
        self._created_date_time = created_date_time
        self._guid = guid
        self._is_active = is_active
        self._last_updated_by = last_updated_by
        self._last_updated_date_time = last_updated_date_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BankAccountOutputModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BankAccountOutputModel of this BankAccountOutputModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_number(self):
        """Gets the account_number of this BankAccountOutputModel.


        :return: The account_number of this BankAccountOutputModel.
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number):
        """Sets the account_number of this BankAccountOutputModel.


        :param account_number: The account_number of this BankAccountOutputModel.
        :type account_number: str
        """
        if account_number is None:
            raise ValueError("Invalid value for `account_number`, must not be `None`")
        if account_number is not None and len(account_number) < 1:
            raise ValueError("Invalid value for `account_number`, length must be greater than or equal to `1`")

        self._account_number = account_number

    @property
    def account_number_format(self):
        """Gets the account_number_format of this BankAccountOutputModel.


        :return: The account_number_format of this BankAccountOutputModel.
        :rtype: BankAccountFormat
        """
        return self._account_number_format

    @account_number_format.setter
    def account_number_format(self, account_number_format):
        """Sets the account_number_format of this BankAccountOutputModel.


        :param account_number_format: The account_number_format of this BankAccountOutputModel.
        :type account_number_format: BankAccountFormat
        """

        self._account_number_format = account_number_format

    @property
    def bank_name(self):
        """Gets the bank_name of this BankAccountOutputModel.


        :return: The bank_name of this BankAccountOutputModel.
        :rtype: str
        """
        return self._bank_name

    @bank_name.setter
    def bank_name(self, bank_name):
        """Sets the bank_name of this BankAccountOutputModel.


        :param bank_name: The bank_name of this BankAccountOutputModel.
        :type bank_name: str
        """
        if bank_name is None:
            raise ValueError("Invalid value for `bank_name`, must not be `None`")
        if bank_name is not None and len(bank_name) < 1:
            raise ValueError("Invalid value for `bank_name`, length must be greater than or equal to `1`")

        self._bank_name = bank_name

    @property
    def bic(self):
        """Gets the bic of this BankAccountOutputModel.


        :return: The bic of this BankAccountOutputModel.
        :rtype: str
        """
        return self._bic

    @bic.setter
    def bic(self, bic):
        """Sets the bic of this BankAccountOutputModel.


        :param bic: The bic of this BankAccountOutputModel.
        :type bic: str
        """

        self._bic = bic

    @property
    def business_unit(self):
        """Gets the business_unit of this BankAccountOutputModel.


        :return: The business_unit of this BankAccountOutputModel.
        :rtype: ModelWithName
        """
        return self._business_unit

    @business_unit.setter
    def business_unit(self, business_unit):
        """Sets the business_unit of this BankAccountOutputModel.


        :param business_unit: The business_unit of this BankAccountOutputModel.
        :type business_unit: ModelWithName
        """

        self._business_unit = business_unit

    @property
    def company(self):
        """Gets the company of this BankAccountOutputModel.


        :return: The company of this BankAccountOutputModel.
        :rtype: ModelWithName
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this BankAccountOutputModel.


        :param company: The company of this BankAccountOutputModel.
        :type company: ModelWithName
        """

        self._company = company

    @property
    def created_by(self):
        """Gets the created_by of this BankAccountOutputModel.


        :return: The created_by of this BankAccountOutputModel.
        :rtype: UserWithFirstNameLastNameAndPhotoFileModel
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this BankAccountOutputModel.


        :param created_by: The created_by of this BankAccountOutputModel.
        :type created_by: UserWithFirstNameLastNameAndPhotoFileModel
        """

        self._created_by = created_by

    @property
    def created_date_time(self):
        """Gets the created_date_time of this BankAccountOutputModel.


        :return: The created_date_time of this BankAccountOutputModel.
        :rtype: datetime
        """
        return self._created_date_time

    @created_date_time.setter
    def created_date_time(self, created_date_time):
        """Sets the created_date_time of this BankAccountOutputModel.


        :param created_date_time: The created_date_time of this BankAccountOutputModel.
        :type created_date_time: datetime
        """

        self._created_date_time = created_date_time

    @property
    def guid(self):
        """Gets the guid of this BankAccountOutputModel.


        :return: The guid of this BankAccountOutputModel.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this BankAccountOutputModel.


        :param guid: The guid of this BankAccountOutputModel.
        :type guid: str
        """

        self._guid = guid

    @property
    def is_active(self):
        """Gets the is_active of this BankAccountOutputModel.


        :return: The is_active of this BankAccountOutputModel.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this BankAccountOutputModel.


        :param is_active: The is_active of this BankAccountOutputModel.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def last_updated_by(self):
        """Gets the last_updated_by of this BankAccountOutputModel.


        :return: The last_updated_by of this BankAccountOutputModel.
        :rtype: UserWithFirstNameLastNameAndPhotoFileModel
        """
        return self._last_updated_by

    @last_updated_by.setter
    def last_updated_by(self, last_updated_by):
        """Sets the last_updated_by of this BankAccountOutputModel.


        :param last_updated_by: The last_updated_by of this BankAccountOutputModel.
        :type last_updated_by: UserWithFirstNameLastNameAndPhotoFileModel
        """

        self._last_updated_by = last_updated_by

    @property
    def last_updated_date_time(self):
        """Gets the last_updated_date_time of this BankAccountOutputModel.


        :return: The last_updated_date_time of this BankAccountOutputModel.
        :rtype: datetime
        """
        return self._last_updated_date_time

    @last_updated_date_time.setter
    def last_updated_date_time(self, last_updated_date_time):
        """Sets the last_updated_date_time of this BankAccountOutputModel.


        :param last_updated_date_time: The last_updated_date_time of this BankAccountOutputModel.
        :type last_updated_date_time: datetime
        """

        self._last_updated_date_time = last_updated_date_time
