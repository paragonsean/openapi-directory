# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency_base_model import CurrencyBaseModel
from openapi_server.models.model_base_with_required_guid import ModelBaseWithRequiredGuid
from openapi_server.models.model_with_name import ModelWithName
from openapi_server.models.phase_project_sub_model import PhaseProjectSubModel
from openapi_server.models.phase_status_output_model import PhaseStatusOutputModel
from openapi_server.models.user_with_first_name_last_name_and_photo_file_model import UserWithFirstNameLastNameAndPhotoFileModel
from openapi_server import util


class PhaseOutputModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, created_by: UserWithFirstNameLastNameAndPhotoFileModel=None, created_date_time: datetime=None, currency_code: CurrencyBaseModel=None, deadline: date=None, default_work_type: ModelWithName=None, guid: str=None, is_completed: bool=False, is_locked: bool=False, last_updated_by: UserWithFirstNameLastNameAndPhotoFileModel=None, last_updated_date_time: datetime=None, name: str=None, original_deadline: date=None, original_start_date: date=None, original_work_hours_estimate: float=None, parent_phase: ModelBaseWithRequiredGuid=None, phase_status: PhaseStatusOutputModel=None, project: PhaseProjectSubModel=None, sort_order: int=None, start_date: date=None, work_hours_estimate: float=None):
        """PhaseOutputModel - a model defined in OpenAPI

        :param code: The code of this PhaseOutputModel.
        :param created_by: The created_by of this PhaseOutputModel.
        :param created_date_time: The created_date_time of this PhaseOutputModel.
        :param currency_code: The currency_code of this PhaseOutputModel.
        :param deadline: The deadline of this PhaseOutputModel.
        :param default_work_type: The default_work_type of this PhaseOutputModel.
        :param guid: The guid of this PhaseOutputModel.
        :param is_completed: The is_completed of this PhaseOutputModel.
        :param is_locked: The is_locked of this PhaseOutputModel.
        :param last_updated_by: The last_updated_by of this PhaseOutputModel.
        :param last_updated_date_time: The last_updated_date_time of this PhaseOutputModel.
        :param name: The name of this PhaseOutputModel.
        :param original_deadline: The original_deadline of this PhaseOutputModel.
        :param original_start_date: The original_start_date of this PhaseOutputModel.
        :param original_work_hours_estimate: The original_work_hours_estimate of this PhaseOutputModel.
        :param parent_phase: The parent_phase of this PhaseOutputModel.
        :param phase_status: The phase_status of this PhaseOutputModel.
        :param project: The project of this PhaseOutputModel.
        :param sort_order: The sort_order of this PhaseOutputModel.
        :param start_date: The start_date of this PhaseOutputModel.
        :param work_hours_estimate: The work_hours_estimate of this PhaseOutputModel.
        """
        self.openapi_types = {
            'code': str,
            'created_by': UserWithFirstNameLastNameAndPhotoFileModel,
            'created_date_time': datetime,
            'currency_code': CurrencyBaseModel,
            'deadline': date,
            'default_work_type': ModelWithName,
            'guid': str,
            'is_completed': bool,
            'is_locked': bool,
            'last_updated_by': UserWithFirstNameLastNameAndPhotoFileModel,
            'last_updated_date_time': datetime,
            'name': str,
            'original_deadline': date,
            'original_start_date': date,
            'original_work_hours_estimate': float,
            'parent_phase': ModelBaseWithRequiredGuid,
            'phase_status': PhaseStatusOutputModel,
            'project': PhaseProjectSubModel,
            'sort_order': int,
            'start_date': date,
            'work_hours_estimate': float
        }

        self.attribute_map = {
            'code': 'code',
            'created_by': 'createdBy',
            'created_date_time': 'createdDateTime',
            'currency_code': 'currencyCode',
            'deadline': 'deadline',
            'default_work_type': 'defaultWorkType',
            'guid': 'guid',
            'is_completed': 'isCompleted',
            'is_locked': 'isLocked',
            'last_updated_by': 'lastUpdatedBy',
            'last_updated_date_time': 'lastUpdatedDateTime',
            'name': 'name',
            'original_deadline': 'originalDeadline',
            'original_start_date': 'originalStartDate',
            'original_work_hours_estimate': 'originalWorkHoursEstimate',
            'parent_phase': 'parentPhase',
            'phase_status': 'phaseStatus',
            'project': 'project',
            'sort_order': 'sortOrder',
            'start_date': 'startDate',
            'work_hours_estimate': 'workHoursEstimate'
        }

        self._code = code
        self._created_by = created_by
        self._created_date_time = created_date_time
        self._currency_code = currency_code
        self._deadline = deadline
        self._default_work_type = default_work_type
        self._guid = guid
        self._is_completed = is_completed
        self._is_locked = is_locked
        self._last_updated_by = last_updated_by
        self._last_updated_date_time = last_updated_date_time
        self._name = name
        self._original_deadline = original_deadline
        self._original_start_date = original_start_date
        self._original_work_hours_estimate = original_work_hours_estimate
        self._parent_phase = parent_phase
        self._phase_status = phase_status
        self._project = project
        self._sort_order = sort_order
        self._start_date = start_date
        self._work_hours_estimate = work_hours_estimate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PhaseOutputModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PhaseOutputModel of this PhaseOutputModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this PhaseOutputModel.


        :return: The code of this PhaseOutputModel.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this PhaseOutputModel.


        :param code: The code of this PhaseOutputModel.
        :type code: str
        """

        self._code = code

    @property
    def created_by(self):
        """Gets the created_by of this PhaseOutputModel.


        :return: The created_by of this PhaseOutputModel.
        :rtype: UserWithFirstNameLastNameAndPhotoFileModel
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this PhaseOutputModel.


        :param created_by: The created_by of this PhaseOutputModel.
        :type created_by: UserWithFirstNameLastNameAndPhotoFileModel
        """

        self._created_by = created_by

    @property
    def created_date_time(self):
        """Gets the created_date_time of this PhaseOutputModel.


        :return: The created_date_time of this PhaseOutputModel.
        :rtype: datetime
        """
        return self._created_date_time

    @created_date_time.setter
    def created_date_time(self, created_date_time):
        """Sets the created_date_time of this PhaseOutputModel.


        :param created_date_time: The created_date_time of this PhaseOutputModel.
        :type created_date_time: datetime
        """

        self._created_date_time = created_date_time

    @property
    def currency_code(self):
        """Gets the currency_code of this PhaseOutputModel.


        :return: The currency_code of this PhaseOutputModel.
        :rtype: CurrencyBaseModel
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this PhaseOutputModel.


        :param currency_code: The currency_code of this PhaseOutputModel.
        :type currency_code: CurrencyBaseModel
        """

        self._currency_code = currency_code

    @property
    def deadline(self):
        """Gets the deadline of this PhaseOutputModel.


        :return: The deadline of this PhaseOutputModel.
        :rtype: date
        """
        return self._deadline

    @deadline.setter
    def deadline(self, deadline):
        """Sets the deadline of this PhaseOutputModel.


        :param deadline: The deadline of this PhaseOutputModel.
        :type deadline: date
        """

        self._deadline = deadline

    @property
    def default_work_type(self):
        """Gets the default_work_type of this PhaseOutputModel.


        :return: The default_work_type of this PhaseOutputModel.
        :rtype: ModelWithName
        """
        return self._default_work_type

    @default_work_type.setter
    def default_work_type(self, default_work_type):
        """Sets the default_work_type of this PhaseOutputModel.


        :param default_work_type: The default_work_type of this PhaseOutputModel.
        :type default_work_type: ModelWithName
        """

        self._default_work_type = default_work_type

    @property
    def guid(self):
        """Gets the guid of this PhaseOutputModel.


        :return: The guid of this PhaseOutputModel.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this PhaseOutputModel.


        :param guid: The guid of this PhaseOutputModel.
        :type guid: str
        """

        self._guid = guid

    @property
    def is_completed(self):
        """Gets the is_completed of this PhaseOutputModel.


        :return: The is_completed of this PhaseOutputModel.
        :rtype: bool
        """
        return self._is_completed

    @is_completed.setter
    def is_completed(self, is_completed):
        """Sets the is_completed of this PhaseOutputModel.


        :param is_completed: The is_completed of this PhaseOutputModel.
        :type is_completed: bool
        """

        self._is_completed = is_completed

    @property
    def is_locked(self):
        """Gets the is_locked of this PhaseOutputModel.


        :return: The is_locked of this PhaseOutputModel.
        :rtype: bool
        """
        return self._is_locked

    @is_locked.setter
    def is_locked(self, is_locked):
        """Sets the is_locked of this PhaseOutputModel.


        :param is_locked: The is_locked of this PhaseOutputModel.
        :type is_locked: bool
        """

        self._is_locked = is_locked

    @property
    def last_updated_by(self):
        """Gets the last_updated_by of this PhaseOutputModel.


        :return: The last_updated_by of this PhaseOutputModel.
        :rtype: UserWithFirstNameLastNameAndPhotoFileModel
        """
        return self._last_updated_by

    @last_updated_by.setter
    def last_updated_by(self, last_updated_by):
        """Sets the last_updated_by of this PhaseOutputModel.


        :param last_updated_by: The last_updated_by of this PhaseOutputModel.
        :type last_updated_by: UserWithFirstNameLastNameAndPhotoFileModel
        """

        self._last_updated_by = last_updated_by

    @property
    def last_updated_date_time(self):
        """Gets the last_updated_date_time of this PhaseOutputModel.


        :return: The last_updated_date_time of this PhaseOutputModel.
        :rtype: datetime
        """
        return self._last_updated_date_time

    @last_updated_date_time.setter
    def last_updated_date_time(self, last_updated_date_time):
        """Sets the last_updated_date_time of this PhaseOutputModel.


        :param last_updated_date_time: The last_updated_date_time of this PhaseOutputModel.
        :type last_updated_date_time: datetime
        """

        self._last_updated_date_time = last_updated_date_time

    @property
    def name(self):
        """Gets the name of this PhaseOutputModel.


        :return: The name of this PhaseOutputModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PhaseOutputModel.


        :param name: The name of this PhaseOutputModel.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")
        if name is not None and len(name) < 1:
            raise ValueError("Invalid value for `name`, length must be greater than or equal to `1`")

        self._name = name

    @property
    def original_deadline(self):
        """Gets the original_deadline of this PhaseOutputModel.


        :return: The original_deadline of this PhaseOutputModel.
        :rtype: date
        """
        return self._original_deadline

    @original_deadline.setter
    def original_deadline(self, original_deadline):
        """Sets the original_deadline of this PhaseOutputModel.


        :param original_deadline: The original_deadline of this PhaseOutputModel.
        :type original_deadline: date
        """

        self._original_deadline = original_deadline

    @property
    def original_start_date(self):
        """Gets the original_start_date of this PhaseOutputModel.


        :return: The original_start_date of this PhaseOutputModel.
        :rtype: date
        """
        return self._original_start_date

    @original_start_date.setter
    def original_start_date(self, original_start_date):
        """Sets the original_start_date of this PhaseOutputModel.


        :param original_start_date: The original_start_date of this PhaseOutputModel.
        :type original_start_date: date
        """

        self._original_start_date = original_start_date

    @property
    def original_work_hours_estimate(self):
        """Gets the original_work_hours_estimate of this PhaseOutputModel.


        :return: The original_work_hours_estimate of this PhaseOutputModel.
        :rtype: float
        """
        return self._original_work_hours_estimate

    @original_work_hours_estimate.setter
    def original_work_hours_estimate(self, original_work_hours_estimate):
        """Sets the original_work_hours_estimate of this PhaseOutputModel.


        :param original_work_hours_estimate: The original_work_hours_estimate of this PhaseOutputModel.
        :type original_work_hours_estimate: float
        """

        self._original_work_hours_estimate = original_work_hours_estimate

    @property
    def parent_phase(self):
        """Gets the parent_phase of this PhaseOutputModel.


        :return: The parent_phase of this PhaseOutputModel.
        :rtype: ModelBaseWithRequiredGuid
        """
        return self._parent_phase

    @parent_phase.setter
    def parent_phase(self, parent_phase):
        """Sets the parent_phase of this PhaseOutputModel.


        :param parent_phase: The parent_phase of this PhaseOutputModel.
        :type parent_phase: ModelBaseWithRequiredGuid
        """

        self._parent_phase = parent_phase

    @property
    def phase_status(self):
        """Gets the phase_status of this PhaseOutputModel.


        :return: The phase_status of this PhaseOutputModel.
        :rtype: PhaseStatusOutputModel
        """
        return self._phase_status

    @phase_status.setter
    def phase_status(self, phase_status):
        """Sets the phase_status of this PhaseOutputModel.


        :param phase_status: The phase_status of this PhaseOutputModel.
        :type phase_status: PhaseStatusOutputModel
        """

        self._phase_status = phase_status

    @property
    def project(self):
        """Gets the project of this PhaseOutputModel.


        :return: The project of this PhaseOutputModel.
        :rtype: PhaseProjectSubModel
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this PhaseOutputModel.


        :param project: The project of this PhaseOutputModel.
        :type project: PhaseProjectSubModel
        """

        self._project = project

    @property
    def sort_order(self):
        """Gets the sort_order of this PhaseOutputModel.


        :return: The sort_order of this PhaseOutputModel.
        :rtype: int
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this PhaseOutputModel.


        :param sort_order: The sort_order of this PhaseOutputModel.
        :type sort_order: int
        """

        self._sort_order = sort_order

    @property
    def start_date(self):
        """Gets the start_date of this PhaseOutputModel.


        :return: The start_date of this PhaseOutputModel.
        :rtype: date
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this PhaseOutputModel.


        :param start_date: The start_date of this PhaseOutputModel.
        :type start_date: date
        """

        self._start_date = start_date

    @property
    def work_hours_estimate(self):
        """Gets the work_hours_estimate of this PhaseOutputModel.


        :return: The work_hours_estimate of this PhaseOutputModel.
        :rtype: float
        """
        return self._work_hours_estimate

    @work_hours_estimate.setter
    def work_hours_estimate(self, work_hours_estimate):
        """Sets the work_hours_estimate of this PhaseOutputModel.


        :param work_hours_estimate: The work_hours_estimate of this PhaseOutputModel.
        :type work_hours_estimate: float
        """

        self._work_hours_estimate = work_hours_estimate
