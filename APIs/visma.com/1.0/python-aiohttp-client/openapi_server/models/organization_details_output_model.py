# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.company_model import CompanyModel
from openapi_server.models.currency_base_model import CurrencyBaseModel
from openapi_server.models.model_with_name import ModelWithName
from openapi_server.models.organization_details_country_sub_model import OrganizationDetailsCountrySubModel
from openapi_server.models.organization_details_formatting_sub_model import OrganizationDetailsFormattingSubModel
from openapi_server.models.organization_details_language_sub_model import OrganizationDetailsLanguageSubModel
from openapi_server.models.user_with_name_and_photo_file_model import UserWithNameAndPhotoFileModel
from openapi_server import util


class OrganizationDetailsOutputModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_addons: List[str]=None, active_companies: List[CompanyModel]=None, address: str=None, city: str=None, country: OrganizationDetailsCountrySubModel=None, currency: CurrencyBaseModel=None, e_invoice_address: str=None, e_invoice_operator_code: str=None, fax: str=None, formatting: OrganizationDetailsFormattingSubModel=None, guid: str=None, is_vat_registered: bool=None, kvk_number: str=None, language: OrganizationDetailsLanguageSubModel=None, name: str=None, odp_company: str=None, phone: str=None, postal_code: str=None, registered_office: str=None, terms_of_service_approver: UserWithNameAndPhotoFileModel=None, timezone: ModelWithName=None, vat_number: str=None):
        """OrganizationDetailsOutputModel - a model defined in OpenAPI

        :param active_addons: The active_addons of this OrganizationDetailsOutputModel.
        :param active_companies: The active_companies of this OrganizationDetailsOutputModel.
        :param address: The address of this OrganizationDetailsOutputModel.
        :param city: The city of this OrganizationDetailsOutputModel.
        :param country: The country of this OrganizationDetailsOutputModel.
        :param currency: The currency of this OrganizationDetailsOutputModel.
        :param e_invoice_address: The e_invoice_address of this OrganizationDetailsOutputModel.
        :param e_invoice_operator_code: The e_invoice_operator_code of this OrganizationDetailsOutputModel.
        :param fax: The fax of this OrganizationDetailsOutputModel.
        :param formatting: The formatting of this OrganizationDetailsOutputModel.
        :param guid: The guid of this OrganizationDetailsOutputModel.
        :param is_vat_registered: The is_vat_registered of this OrganizationDetailsOutputModel.
        :param kvk_number: The kvk_number of this OrganizationDetailsOutputModel.
        :param language: The language of this OrganizationDetailsOutputModel.
        :param name: The name of this OrganizationDetailsOutputModel.
        :param odp_company: The odp_company of this OrganizationDetailsOutputModel.
        :param phone: The phone of this OrganizationDetailsOutputModel.
        :param postal_code: The postal_code of this OrganizationDetailsOutputModel.
        :param registered_office: The registered_office of this OrganizationDetailsOutputModel.
        :param terms_of_service_approver: The terms_of_service_approver of this OrganizationDetailsOutputModel.
        :param timezone: The timezone of this OrganizationDetailsOutputModel.
        :param vat_number: The vat_number of this OrganizationDetailsOutputModel.
        """
        self.openapi_types = {
            'active_addons': List[str],
            'active_companies': List[CompanyModel],
            'address': str,
            'city': str,
            'country': OrganizationDetailsCountrySubModel,
            'currency': CurrencyBaseModel,
            'e_invoice_address': str,
            'e_invoice_operator_code': str,
            'fax': str,
            'formatting': OrganizationDetailsFormattingSubModel,
            'guid': str,
            'is_vat_registered': bool,
            'kvk_number': str,
            'language': OrganizationDetailsLanguageSubModel,
            'name': str,
            'odp_company': str,
            'phone': str,
            'postal_code': str,
            'registered_office': str,
            'terms_of_service_approver': UserWithNameAndPhotoFileModel,
            'timezone': ModelWithName,
            'vat_number': str
        }

        self.attribute_map = {
            'active_addons': 'activeAddons',
            'active_companies': 'activeCompanies',
            'address': 'address',
            'city': 'city',
            'country': 'country',
            'currency': 'currency',
            'e_invoice_address': 'eInvoiceAddress',
            'e_invoice_operator_code': 'eInvoiceOperatorCode',
            'fax': 'fax',
            'formatting': 'formatting',
            'guid': 'guid',
            'is_vat_registered': 'isVatRegistered',
            'kvk_number': 'kvkNumber',
            'language': 'language',
            'name': 'name',
            'odp_company': 'odpCompany',
            'phone': 'phone',
            'postal_code': 'postalCode',
            'registered_office': 'registeredOffice',
            'terms_of_service_approver': 'termsOfServiceApprover',
            'timezone': 'timezone',
            'vat_number': 'vatNumber'
        }

        self._active_addons = active_addons
        self._active_companies = active_companies
        self._address = address
        self._city = city
        self._country = country
        self._currency = currency
        self._e_invoice_address = e_invoice_address
        self._e_invoice_operator_code = e_invoice_operator_code
        self._fax = fax
        self._formatting = formatting
        self._guid = guid
        self._is_vat_registered = is_vat_registered
        self._kvk_number = kvk_number
        self._language = language
        self._name = name
        self._odp_company = odp_company
        self._phone = phone
        self._postal_code = postal_code
        self._registered_office = registered_office
        self._terms_of_service_approver = terms_of_service_approver
        self._timezone = timezone
        self._vat_number = vat_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrganizationDetailsOutputModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrganizationDetailsOutputModel of this OrganizationDetailsOutputModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_addons(self):
        """Gets the active_addons of this OrganizationDetailsOutputModel.


        :return: The active_addons of this OrganizationDetailsOutputModel.
        :rtype: List[str]
        """
        return self._active_addons

    @active_addons.setter
    def active_addons(self, active_addons):
        """Sets the active_addons of this OrganizationDetailsOutputModel.


        :param active_addons: The active_addons of this OrganizationDetailsOutputModel.
        :type active_addons: List[str]
        """

        self._active_addons = active_addons

    @property
    def active_companies(self):
        """Gets the active_companies of this OrganizationDetailsOutputModel.


        :return: The active_companies of this OrganizationDetailsOutputModel.
        :rtype: List[CompanyModel]
        """
        return self._active_companies

    @active_companies.setter
    def active_companies(self, active_companies):
        """Sets the active_companies of this OrganizationDetailsOutputModel.


        :param active_companies: The active_companies of this OrganizationDetailsOutputModel.
        :type active_companies: List[CompanyModel]
        """

        self._active_companies = active_companies

    @property
    def address(self):
        """Gets the address of this OrganizationDetailsOutputModel.


        :return: The address of this OrganizationDetailsOutputModel.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this OrganizationDetailsOutputModel.


        :param address: The address of this OrganizationDetailsOutputModel.
        :type address: str
        """

        self._address = address

    @property
    def city(self):
        """Gets the city of this OrganizationDetailsOutputModel.


        :return: The city of this OrganizationDetailsOutputModel.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this OrganizationDetailsOutputModel.


        :param city: The city of this OrganizationDetailsOutputModel.
        :type city: str
        """

        self._city = city

    @property
    def country(self):
        """Gets the country of this OrganizationDetailsOutputModel.


        :return: The country of this OrganizationDetailsOutputModel.
        :rtype: OrganizationDetailsCountrySubModel
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this OrganizationDetailsOutputModel.


        :param country: The country of this OrganizationDetailsOutputModel.
        :type country: OrganizationDetailsCountrySubModel
        """

        self._country = country

    @property
    def currency(self):
        """Gets the currency of this OrganizationDetailsOutputModel.


        :return: The currency of this OrganizationDetailsOutputModel.
        :rtype: CurrencyBaseModel
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this OrganizationDetailsOutputModel.


        :param currency: The currency of this OrganizationDetailsOutputModel.
        :type currency: CurrencyBaseModel
        """

        self._currency = currency

    @property
    def e_invoice_address(self):
        """Gets the e_invoice_address of this OrganizationDetailsOutputModel.


        :return: The e_invoice_address of this OrganizationDetailsOutputModel.
        :rtype: str
        """
        return self._e_invoice_address

    @e_invoice_address.setter
    def e_invoice_address(self, e_invoice_address):
        """Sets the e_invoice_address of this OrganizationDetailsOutputModel.


        :param e_invoice_address: The e_invoice_address of this OrganizationDetailsOutputModel.
        :type e_invoice_address: str
        """

        self._e_invoice_address = e_invoice_address

    @property
    def e_invoice_operator_code(self):
        """Gets the e_invoice_operator_code of this OrganizationDetailsOutputModel.


        :return: The e_invoice_operator_code of this OrganizationDetailsOutputModel.
        :rtype: str
        """
        return self._e_invoice_operator_code

    @e_invoice_operator_code.setter
    def e_invoice_operator_code(self, e_invoice_operator_code):
        """Sets the e_invoice_operator_code of this OrganizationDetailsOutputModel.


        :param e_invoice_operator_code: The e_invoice_operator_code of this OrganizationDetailsOutputModel.
        :type e_invoice_operator_code: str
        """

        self._e_invoice_operator_code = e_invoice_operator_code

    @property
    def fax(self):
        """Gets the fax of this OrganizationDetailsOutputModel.


        :return: The fax of this OrganizationDetailsOutputModel.
        :rtype: str
        """
        return self._fax

    @fax.setter
    def fax(self, fax):
        """Sets the fax of this OrganizationDetailsOutputModel.


        :param fax: The fax of this OrganizationDetailsOutputModel.
        :type fax: str
        """

        self._fax = fax

    @property
    def formatting(self):
        """Gets the formatting of this OrganizationDetailsOutputModel.


        :return: The formatting of this OrganizationDetailsOutputModel.
        :rtype: OrganizationDetailsFormattingSubModel
        """
        return self._formatting

    @formatting.setter
    def formatting(self, formatting):
        """Sets the formatting of this OrganizationDetailsOutputModel.


        :param formatting: The formatting of this OrganizationDetailsOutputModel.
        :type formatting: OrganizationDetailsFormattingSubModel
        """

        self._formatting = formatting

    @property
    def guid(self):
        """Gets the guid of this OrganizationDetailsOutputModel.


        :return: The guid of this OrganizationDetailsOutputModel.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this OrganizationDetailsOutputModel.


        :param guid: The guid of this OrganizationDetailsOutputModel.
        :type guid: str
        """

        self._guid = guid

    @property
    def is_vat_registered(self):
        """Gets the is_vat_registered of this OrganizationDetailsOutputModel.


        :return: The is_vat_registered of this OrganizationDetailsOutputModel.
        :rtype: bool
        """
        return self._is_vat_registered

    @is_vat_registered.setter
    def is_vat_registered(self, is_vat_registered):
        """Sets the is_vat_registered of this OrganizationDetailsOutputModel.


        :param is_vat_registered: The is_vat_registered of this OrganizationDetailsOutputModel.
        :type is_vat_registered: bool
        """

        self._is_vat_registered = is_vat_registered

    @property
    def kvk_number(self):
        """Gets the kvk_number of this OrganizationDetailsOutputModel.


        :return: The kvk_number of this OrganizationDetailsOutputModel.
        :rtype: str
        """
        return self._kvk_number

    @kvk_number.setter
    def kvk_number(self, kvk_number):
        """Sets the kvk_number of this OrganizationDetailsOutputModel.


        :param kvk_number: The kvk_number of this OrganizationDetailsOutputModel.
        :type kvk_number: str
        """
        if kvk_number is not None and len(kvk_number) > 25:
            raise ValueError("Invalid value for `kvk_number`, length must be less than or equal to `25`")
        if kvk_number is not None and len(kvk_number) < 0:
            raise ValueError("Invalid value for `kvk_number`, length must be greater than or equal to `0`")

        self._kvk_number = kvk_number

    @property
    def language(self):
        """Gets the language of this OrganizationDetailsOutputModel.


        :return: The language of this OrganizationDetailsOutputModel.
        :rtype: OrganizationDetailsLanguageSubModel
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this OrganizationDetailsOutputModel.


        :param language: The language of this OrganizationDetailsOutputModel.
        :type language: OrganizationDetailsLanguageSubModel
        """

        self._language = language

    @property
    def name(self):
        """Gets the name of this OrganizationDetailsOutputModel.


        :return: The name of this OrganizationDetailsOutputModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this OrganizationDetailsOutputModel.


        :param name: The name of this OrganizationDetailsOutputModel.
        :type name: str
        """

        self._name = name

    @property
    def odp_company(self):
        """Gets the odp_company of this OrganizationDetailsOutputModel.


        :return: The odp_company of this OrganizationDetailsOutputModel.
        :rtype: str
        """
        return self._odp_company

    @odp_company.setter
    def odp_company(self, odp_company):
        """Sets the odp_company of this OrganizationDetailsOutputModel.


        :param odp_company: The odp_company of this OrganizationDetailsOutputModel.
        :type odp_company: str
        """

        self._odp_company = odp_company

    @property
    def phone(self):
        """Gets the phone of this OrganizationDetailsOutputModel.


        :return: The phone of this OrganizationDetailsOutputModel.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this OrganizationDetailsOutputModel.


        :param phone: The phone of this OrganizationDetailsOutputModel.
        :type phone: str
        """

        self._phone = phone

    @property
    def postal_code(self):
        """Gets the postal_code of this OrganizationDetailsOutputModel.


        :return: The postal_code of this OrganizationDetailsOutputModel.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this OrganizationDetailsOutputModel.


        :param postal_code: The postal_code of this OrganizationDetailsOutputModel.
        :type postal_code: str
        """

        self._postal_code = postal_code

    @property
    def registered_office(self):
        """Gets the registered_office of this OrganizationDetailsOutputModel.


        :return: The registered_office of this OrganizationDetailsOutputModel.
        :rtype: str
        """
        return self._registered_office

    @registered_office.setter
    def registered_office(self, registered_office):
        """Sets the registered_office of this OrganizationDetailsOutputModel.


        :param registered_office: The registered_office of this OrganizationDetailsOutputModel.
        :type registered_office: str
        """

        self._registered_office = registered_office

    @property
    def terms_of_service_approver(self):
        """Gets the terms_of_service_approver of this OrganizationDetailsOutputModel.


        :return: The terms_of_service_approver of this OrganizationDetailsOutputModel.
        :rtype: UserWithNameAndPhotoFileModel
        """
        return self._terms_of_service_approver

    @terms_of_service_approver.setter
    def terms_of_service_approver(self, terms_of_service_approver):
        """Sets the terms_of_service_approver of this OrganizationDetailsOutputModel.


        :param terms_of_service_approver: The terms_of_service_approver of this OrganizationDetailsOutputModel.
        :type terms_of_service_approver: UserWithNameAndPhotoFileModel
        """

        self._terms_of_service_approver = terms_of_service_approver

    @property
    def timezone(self):
        """Gets the timezone of this OrganizationDetailsOutputModel.


        :return: The timezone of this OrganizationDetailsOutputModel.
        :rtype: ModelWithName
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this OrganizationDetailsOutputModel.


        :param timezone: The timezone of this OrganizationDetailsOutputModel.
        :type timezone: ModelWithName
        """

        self._timezone = timezone

    @property
    def vat_number(self):
        """Gets the vat_number of this OrganizationDetailsOutputModel.


        :return: The vat_number of this OrganizationDetailsOutputModel.
        :rtype: str
        """
        return self._vat_number

    @vat_number.setter
    def vat_number(self, vat_number):
        """Sets the vat_number of this OrganizationDetailsOutputModel.


        :param vat_number: The vat_number of this OrganizationDetailsOutputModel.
        :type vat_number: str
        """

        self._vat_number = vat_number
