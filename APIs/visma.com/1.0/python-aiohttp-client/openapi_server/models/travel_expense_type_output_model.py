# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.expenses_class import ExpensesClass
from openapi_server.models.model_with_name import ModelWithName
from openapi_server.models.money_output_model import MoneyOutputModel
from openapi_server.models.product_sales_account_sub_model2 import ProductSalesAccountSubModel2
from openapi_server.models.travel_expense_cost_account_sub_model import TravelExpenseCostAccountSubModel
from openapi_server.models.user_with_first_name_last_name_and_photo_file_model import UserWithFirstNameLastNameAndPhotoFileModel
from openapi_server import util


class TravelExpenseTypeOutputModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, cost_account: TravelExpenseCostAccountSubModel=None, created_by: UserWithFirstNameLastNameAndPhotoFileModel=None, created_date_time: datetime=None, expense_class: ExpensesClass=None, guid: str=None, include_time: bool=None, is_active: bool=True, is_daily_allowance: bool=None, is_mileage: bool=None, last_updated_by: UserWithFirstNameLastNameAndPhotoFileModel=None, last_updated_date_time: datetime=None, measurement_unit: str=None, name: str=None, product_category: ModelWithName=None, purchase_vat_rate: float=None, sales_account: ProductSalesAccountSubModel2=None, unit_cost: MoneyOutputModel=None, vat_rate: float=None):
        """TravelExpenseTypeOutputModel - a model defined in OpenAPI

        :param code: The code of this TravelExpenseTypeOutputModel.
        :param cost_account: The cost_account of this TravelExpenseTypeOutputModel.
        :param created_by: The created_by of this TravelExpenseTypeOutputModel.
        :param created_date_time: The created_date_time of this TravelExpenseTypeOutputModel.
        :param expense_class: The expense_class of this TravelExpenseTypeOutputModel.
        :param guid: The guid of this TravelExpenseTypeOutputModel.
        :param include_time: The include_time of this TravelExpenseTypeOutputModel.
        :param is_active: The is_active of this TravelExpenseTypeOutputModel.
        :param is_daily_allowance: The is_daily_allowance of this TravelExpenseTypeOutputModel.
        :param is_mileage: The is_mileage of this TravelExpenseTypeOutputModel.
        :param last_updated_by: The last_updated_by of this TravelExpenseTypeOutputModel.
        :param last_updated_date_time: The last_updated_date_time of this TravelExpenseTypeOutputModel.
        :param measurement_unit: The measurement_unit of this TravelExpenseTypeOutputModel.
        :param name: The name of this TravelExpenseTypeOutputModel.
        :param product_category: The product_category of this TravelExpenseTypeOutputModel.
        :param purchase_vat_rate: The purchase_vat_rate of this TravelExpenseTypeOutputModel.
        :param sales_account: The sales_account of this TravelExpenseTypeOutputModel.
        :param unit_cost: The unit_cost of this TravelExpenseTypeOutputModel.
        :param vat_rate: The vat_rate of this TravelExpenseTypeOutputModel.
        """
        self.openapi_types = {
            'code': str,
            'cost_account': TravelExpenseCostAccountSubModel,
            'created_by': UserWithFirstNameLastNameAndPhotoFileModel,
            'created_date_time': datetime,
            'expense_class': ExpensesClass,
            'guid': str,
            'include_time': bool,
            'is_active': bool,
            'is_daily_allowance': bool,
            'is_mileage': bool,
            'last_updated_by': UserWithFirstNameLastNameAndPhotoFileModel,
            'last_updated_date_time': datetime,
            'measurement_unit': str,
            'name': str,
            'product_category': ModelWithName,
            'purchase_vat_rate': float,
            'sales_account': ProductSalesAccountSubModel2,
            'unit_cost': MoneyOutputModel,
            'vat_rate': float
        }

        self.attribute_map = {
            'code': 'code',
            'cost_account': 'costAccount',
            'created_by': 'createdBy',
            'created_date_time': 'createdDateTime',
            'expense_class': 'expenseClass',
            'guid': 'guid',
            'include_time': 'includeTime',
            'is_active': 'isActive',
            'is_daily_allowance': 'isDailyAllowance',
            'is_mileage': 'isMileage',
            'last_updated_by': 'lastUpdatedBy',
            'last_updated_date_time': 'lastUpdatedDateTime',
            'measurement_unit': 'measurementUnit',
            'name': 'name',
            'product_category': 'productCategory',
            'purchase_vat_rate': 'purchaseVatRate',
            'sales_account': 'salesAccount',
            'unit_cost': 'unitCost',
            'vat_rate': 'vatRate'
        }

        self._code = code
        self._cost_account = cost_account
        self._created_by = created_by
        self._created_date_time = created_date_time
        self._expense_class = expense_class
        self._guid = guid
        self._include_time = include_time
        self._is_active = is_active
        self._is_daily_allowance = is_daily_allowance
        self._is_mileage = is_mileage
        self._last_updated_by = last_updated_by
        self._last_updated_date_time = last_updated_date_time
        self._measurement_unit = measurement_unit
        self._name = name
        self._product_category = product_category
        self._purchase_vat_rate = purchase_vat_rate
        self._sales_account = sales_account
        self._unit_cost = unit_cost
        self._vat_rate = vat_rate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TravelExpenseTypeOutputModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TravelExpenseTypeOutputModel of this TravelExpenseTypeOutputModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this TravelExpenseTypeOutputModel.


        :return: The code of this TravelExpenseTypeOutputModel.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this TravelExpenseTypeOutputModel.


        :param code: The code of this TravelExpenseTypeOutputModel.
        :type code: str
        """

        self._code = code

    @property
    def cost_account(self):
        """Gets the cost_account of this TravelExpenseTypeOutputModel.


        :return: The cost_account of this TravelExpenseTypeOutputModel.
        :rtype: TravelExpenseCostAccountSubModel
        """
        return self._cost_account

    @cost_account.setter
    def cost_account(self, cost_account):
        """Sets the cost_account of this TravelExpenseTypeOutputModel.


        :param cost_account: The cost_account of this TravelExpenseTypeOutputModel.
        :type cost_account: TravelExpenseCostAccountSubModel
        """

        self._cost_account = cost_account

    @property
    def created_by(self):
        """Gets the created_by of this TravelExpenseTypeOutputModel.


        :return: The created_by of this TravelExpenseTypeOutputModel.
        :rtype: UserWithFirstNameLastNameAndPhotoFileModel
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this TravelExpenseTypeOutputModel.


        :param created_by: The created_by of this TravelExpenseTypeOutputModel.
        :type created_by: UserWithFirstNameLastNameAndPhotoFileModel
        """

        self._created_by = created_by

    @property
    def created_date_time(self):
        """Gets the created_date_time of this TravelExpenseTypeOutputModel.


        :return: The created_date_time of this TravelExpenseTypeOutputModel.
        :rtype: datetime
        """
        return self._created_date_time

    @created_date_time.setter
    def created_date_time(self, created_date_time):
        """Sets the created_date_time of this TravelExpenseTypeOutputModel.


        :param created_date_time: The created_date_time of this TravelExpenseTypeOutputModel.
        :type created_date_time: datetime
        """

        self._created_date_time = created_date_time

    @property
    def expense_class(self):
        """Gets the expense_class of this TravelExpenseTypeOutputModel.


        :return: The expense_class of this TravelExpenseTypeOutputModel.
        :rtype: ExpensesClass
        """
        return self._expense_class

    @expense_class.setter
    def expense_class(self, expense_class):
        """Sets the expense_class of this TravelExpenseTypeOutputModel.


        :param expense_class: The expense_class of this TravelExpenseTypeOutputModel.
        :type expense_class: ExpensesClass
        """

        self._expense_class = expense_class

    @property
    def guid(self):
        """Gets the guid of this TravelExpenseTypeOutputModel.


        :return: The guid of this TravelExpenseTypeOutputModel.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this TravelExpenseTypeOutputModel.


        :param guid: The guid of this TravelExpenseTypeOutputModel.
        :type guid: str
        """

        self._guid = guid

    @property
    def include_time(self):
        """Gets the include_time of this TravelExpenseTypeOutputModel.


        :return: The include_time of this TravelExpenseTypeOutputModel.
        :rtype: bool
        """
        return self._include_time

    @include_time.setter
    def include_time(self, include_time):
        """Sets the include_time of this TravelExpenseTypeOutputModel.


        :param include_time: The include_time of this TravelExpenseTypeOutputModel.
        :type include_time: bool
        """

        self._include_time = include_time

    @property
    def is_active(self):
        """Gets the is_active of this TravelExpenseTypeOutputModel.


        :return: The is_active of this TravelExpenseTypeOutputModel.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this TravelExpenseTypeOutputModel.


        :param is_active: The is_active of this TravelExpenseTypeOutputModel.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def is_daily_allowance(self):
        """Gets the is_daily_allowance of this TravelExpenseTypeOutputModel.


        :return: The is_daily_allowance of this TravelExpenseTypeOutputModel.
        :rtype: bool
        """
        return self._is_daily_allowance

    @is_daily_allowance.setter
    def is_daily_allowance(self, is_daily_allowance):
        """Sets the is_daily_allowance of this TravelExpenseTypeOutputModel.


        :param is_daily_allowance: The is_daily_allowance of this TravelExpenseTypeOutputModel.
        :type is_daily_allowance: bool
        """

        self._is_daily_allowance = is_daily_allowance

    @property
    def is_mileage(self):
        """Gets the is_mileage of this TravelExpenseTypeOutputModel.


        :return: The is_mileage of this TravelExpenseTypeOutputModel.
        :rtype: bool
        """
        return self._is_mileage

    @is_mileage.setter
    def is_mileage(self, is_mileage):
        """Sets the is_mileage of this TravelExpenseTypeOutputModel.


        :param is_mileage: The is_mileage of this TravelExpenseTypeOutputModel.
        :type is_mileage: bool
        """

        self._is_mileage = is_mileage

    @property
    def last_updated_by(self):
        """Gets the last_updated_by of this TravelExpenseTypeOutputModel.


        :return: The last_updated_by of this TravelExpenseTypeOutputModel.
        :rtype: UserWithFirstNameLastNameAndPhotoFileModel
        """
        return self._last_updated_by

    @last_updated_by.setter
    def last_updated_by(self, last_updated_by):
        """Sets the last_updated_by of this TravelExpenseTypeOutputModel.


        :param last_updated_by: The last_updated_by of this TravelExpenseTypeOutputModel.
        :type last_updated_by: UserWithFirstNameLastNameAndPhotoFileModel
        """

        self._last_updated_by = last_updated_by

    @property
    def last_updated_date_time(self):
        """Gets the last_updated_date_time of this TravelExpenseTypeOutputModel.


        :return: The last_updated_date_time of this TravelExpenseTypeOutputModel.
        :rtype: datetime
        """
        return self._last_updated_date_time

    @last_updated_date_time.setter
    def last_updated_date_time(self, last_updated_date_time):
        """Sets the last_updated_date_time of this TravelExpenseTypeOutputModel.


        :param last_updated_date_time: The last_updated_date_time of this TravelExpenseTypeOutputModel.
        :type last_updated_date_time: datetime
        """

        self._last_updated_date_time = last_updated_date_time

    @property
    def measurement_unit(self):
        """Gets the measurement_unit of this TravelExpenseTypeOutputModel.


        :return: The measurement_unit of this TravelExpenseTypeOutputModel.
        :rtype: str
        """
        return self._measurement_unit

    @measurement_unit.setter
    def measurement_unit(self, measurement_unit):
        """Sets the measurement_unit of this TravelExpenseTypeOutputModel.


        :param measurement_unit: The measurement_unit of this TravelExpenseTypeOutputModel.
        :type measurement_unit: str
        """

        self._measurement_unit = measurement_unit

    @property
    def name(self):
        """Gets the name of this TravelExpenseTypeOutputModel.


        :return: The name of this TravelExpenseTypeOutputModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TravelExpenseTypeOutputModel.


        :param name: The name of this TravelExpenseTypeOutputModel.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")
        if name is not None and len(name) < 1:
            raise ValueError("Invalid value for `name`, length must be greater than or equal to `1`")

        self._name = name

    @property
    def product_category(self):
        """Gets the product_category of this TravelExpenseTypeOutputModel.


        :return: The product_category of this TravelExpenseTypeOutputModel.
        :rtype: ModelWithName
        """
        return self._product_category

    @product_category.setter
    def product_category(self, product_category):
        """Sets the product_category of this TravelExpenseTypeOutputModel.


        :param product_category: The product_category of this TravelExpenseTypeOutputModel.
        :type product_category: ModelWithName
        """

        self._product_category = product_category

    @property
    def purchase_vat_rate(self):
        """Gets the purchase_vat_rate of this TravelExpenseTypeOutputModel.


        :return: The purchase_vat_rate of this TravelExpenseTypeOutputModel.
        :rtype: float
        """
        return self._purchase_vat_rate

    @purchase_vat_rate.setter
    def purchase_vat_rate(self, purchase_vat_rate):
        """Sets the purchase_vat_rate of this TravelExpenseTypeOutputModel.


        :param purchase_vat_rate: The purchase_vat_rate of this TravelExpenseTypeOutputModel.
        :type purchase_vat_rate: float
        """

        self._purchase_vat_rate = purchase_vat_rate

    @property
    def sales_account(self):
        """Gets the sales_account of this TravelExpenseTypeOutputModel.


        :return: The sales_account of this TravelExpenseTypeOutputModel.
        :rtype: ProductSalesAccountSubModel2
        """
        return self._sales_account

    @sales_account.setter
    def sales_account(self, sales_account):
        """Sets the sales_account of this TravelExpenseTypeOutputModel.


        :param sales_account: The sales_account of this TravelExpenseTypeOutputModel.
        :type sales_account: ProductSalesAccountSubModel2
        """

        self._sales_account = sales_account

    @property
    def unit_cost(self):
        """Gets the unit_cost of this TravelExpenseTypeOutputModel.


        :return: The unit_cost of this TravelExpenseTypeOutputModel.
        :rtype: MoneyOutputModel
        """
        return self._unit_cost

    @unit_cost.setter
    def unit_cost(self, unit_cost):
        """Sets the unit_cost of this TravelExpenseTypeOutputModel.


        :param unit_cost: The unit_cost of this TravelExpenseTypeOutputModel.
        :type unit_cost: MoneyOutputModel
        """

        self._unit_cost = unit_cost

    @property
    def vat_rate(self):
        """Gets the vat_rate of this TravelExpenseTypeOutputModel.


        :return: The vat_rate of this TravelExpenseTypeOutputModel.
        :rtype: float
        """
        return self._vat_rate

    @vat_rate.setter
    def vat_rate(self, vat_rate):
        """Sets the vat_rate of this TravelExpenseTypeOutputModel.


        :param vat_rate: The vat_rate of this TravelExpenseTypeOutputModel.
        :type vat_rate: float
        """

        self._vat_rate = vat_rate
