/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActivityOwnerModel.h
 *
 * 
 */

#ifndef OAIActivityOwnerModel_H
#define OAIActivityOwnerModel_H

#include <QJsonObject>

#include "OAIActivityOwnerKeyword.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIActivityOwnerKeyword;

class OAIActivityOwnerModel : public OAIObject {
public:
    OAIActivityOwnerModel();
    OAIActivityOwnerModel(QString json);
    ~OAIActivityOwnerModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QString getGuid() const;
    void setGuid(const QString &guid);
    bool is_guid_Set() const;
    bool is_guid_Valid() const;

    QList<OAIActivityOwnerKeyword> getKeywords() const;
    void setKeywords(const QList<OAIActivityOwnerKeyword> &keywords);
    bool is_keywords_Set() const;
    bool is_keywords_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QString m_guid;
    bool m_guid_isSet;
    bool m_guid_isValid;

    QList<OAIActivityOwnerKeyword> m_keywords;
    bool m_keywords_isSet;
    bool m_keywords_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActivityOwnerModel)

#endif // OAIActivityOwnerModel_H
