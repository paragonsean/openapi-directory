/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductPriceModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductPriceModel::OAIProductPriceModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductPriceModel::OAIProductPriceModel() {
    this->initializeModel();
}

OAIProductPriceModel::~OAIProductPriceModel() {}

void OAIProductPriceModel::initializeModel() {

    m_guid_isSet = false;
    m_guid_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_price_source_isSet = false;
    m_price_source_isValid = false;

    m_pricelist_version_guid_isSet = false;
    m_pricelist_version_guid_isValid = false;

    m_project_guid_isSet = false;
    m_project_guid_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;
}

void OAIProductPriceModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductPriceModel::fromJsonObject(QJsonObject json) {

    m_guid_isValid = ::OpenAPI::fromJsonValue(m_guid, json[QString("guid")]);
    m_guid_isSet = !json[QString("guid")].isNull() && m_guid_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_price_source_isValid = ::OpenAPI::fromJsonValue(m_price_source, json[QString("priceSource")]);
    m_price_source_isSet = !json[QString("priceSource")].isNull() && m_price_source_isValid;

    m_pricelist_version_guid_isValid = ::OpenAPI::fromJsonValue(m_pricelist_version_guid, json[QString("pricelistVersionGuid")]);
    m_pricelist_version_guid_isSet = !json[QString("pricelistVersionGuid")].isNull() && m_pricelist_version_guid_isValid;

    m_project_guid_isValid = ::OpenAPI::fromJsonValue(m_project_guid, json[QString("projectGuid")]);
    m_project_guid_isSet = !json[QString("projectGuid")].isNull() && m_project_guid_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;
}

QString OAIProductPriceModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductPriceModel::asJsonObject() const {
    QJsonObject obj;
    if (m_guid_isSet) {
        obj.insert(QString("guid"), ::OpenAPI::toJsonValue(m_guid));
    }
    if (m_price.isSet()) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_price_source.isSet()) {
        obj.insert(QString("priceSource"), ::OpenAPI::toJsonValue(m_price_source));
    }
    if (m_pricelist_version_guid_isSet) {
        obj.insert(QString("pricelistVersionGuid"), ::OpenAPI::toJsonValue(m_pricelist_version_guid));
    }
    if (m_project_guid_isSet) {
        obj.insert(QString("projectGuid"), ::OpenAPI::toJsonValue(m_project_guid));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    return obj;
}

QString OAIProductPriceModel::getGuid() const {
    return m_guid;
}
void OAIProductPriceModel::setGuid(const QString &guid) {
    m_guid = guid;
    m_guid_isSet = true;
}

bool OAIProductPriceModel::is_guid_Set() const{
    return m_guid_isSet;
}

bool OAIProductPriceModel::is_guid_Valid() const{
    return m_guid_isValid;
}

OAIMoneyOutputModel OAIProductPriceModel::getPrice() const {
    return m_price;
}
void OAIProductPriceModel::setPrice(const OAIMoneyOutputModel &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIProductPriceModel::is_price_Set() const{
    return m_price_isSet;
}

bool OAIProductPriceModel::is_price_Valid() const{
    return m_price_isValid;
}

OAIPriceSource OAIProductPriceModel::getPriceSource() const {
    return m_price_source;
}
void OAIProductPriceModel::setPriceSource(const OAIPriceSource &price_source) {
    m_price_source = price_source;
    m_price_source_isSet = true;
}

bool OAIProductPriceModel::is_price_source_Set() const{
    return m_price_source_isSet;
}

bool OAIProductPriceModel::is_price_source_Valid() const{
    return m_price_source_isValid;
}

QString OAIProductPriceModel::getPricelistVersionGuid() const {
    return m_pricelist_version_guid;
}
void OAIProductPriceModel::setPricelistVersionGuid(const QString &pricelist_version_guid) {
    m_pricelist_version_guid = pricelist_version_guid;
    m_pricelist_version_guid_isSet = true;
}

bool OAIProductPriceModel::is_pricelist_version_guid_Set() const{
    return m_pricelist_version_guid_isSet;
}

bool OAIProductPriceModel::is_pricelist_version_guid_Valid() const{
    return m_pricelist_version_guid_isValid;
}

QString OAIProductPriceModel::getProjectGuid() const {
    return m_project_guid;
}
void OAIProductPriceModel::setProjectGuid(const QString &project_guid) {
    m_project_guid = project_guid;
    m_project_guid_isSet = true;
}

bool OAIProductPriceModel::is_project_guid_Set() const{
    return m_project_guid_isSet;
}

bool OAIProductPriceModel::is_project_guid_Valid() const{
    return m_project_guid_isValid;
}

double OAIProductPriceModel::getQuantity() const {
    return m_quantity;
}
void OAIProductPriceModel::setQuantity(const double &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIProductPriceModel::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIProductPriceModel::is_quantity_Valid() const{
    return m_quantity_isValid;
}

bool OAIProductPriceModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_guid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pricelist_version_guid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_guid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductPriceModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
