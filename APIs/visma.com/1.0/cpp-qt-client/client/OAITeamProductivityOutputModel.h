/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITeamProductivityOutputModel.h
 *
 * 
 */

#ifndef OAITeamProductivityOutputModel_H
#define OAITeamProductivityOutputModel_H

#include <QJsonObject>

#include "OAIMoneyOutputModel.h"
#include "OAIUserWithNameAndPhotoFileModel.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMoneyOutputModel;
class OAIUserWithNameAndPhotoFileModel;

class OAITeamProductivityOutputModel : public OAIObject {
public:
    OAITeamProductivityOutputModel();
    OAITeamProductivityOutputModel(QString json);
    ~OAITeamProductivityOutputModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMoneyOutputModel getAdjustedShareOfBilling() const;
    void setAdjustedShareOfBilling(const OAIMoneyOutputModel &adjusted_share_of_billing);
    bool is_adjusted_share_of_billing_Set() const;
    bool is_adjusted_share_of_billing_Valid() const;

    double getAdjustedShareOfBillingPercentage() const;
    void setAdjustedShareOfBillingPercentage(const double &adjusted_share_of_billing_percentage);
    bool is_adjusted_share_of_billing_percentage_Set() const;
    bool is_adjusted_share_of_billing_percentage_Valid() const;

    double getBillableHoursPercentage() const;
    void setBillableHoursPercentage(const double &billable_hours_percentage);
    bool is_billable_hours_percentage_Set() const;
    bool is_billable_hours_percentage_Valid() const;

    OAIMoneyOutputModel getCalculatedShareOfBilling() const;
    void setCalculatedShareOfBilling(const OAIMoneyOutputModel &calculated_share_of_billing);
    bool is_calculated_share_of_billing_Set() const;
    bool is_calculated_share_of_billing_Valid() const;

    double getCalculatedShareOfBillingPercentage() const;
    void setCalculatedShareOfBillingPercentage(const double &calculated_share_of_billing_percentage);
    bool is_calculated_share_of_billing_percentage_Set() const;
    bool is_calculated_share_of_billing_percentage_Valid() const;

    QString getGuid() const;
    void setGuid(const QString &guid);
    bool is_guid_Set() const;
    bool is_guid_Valid() const;

    QString getProjectGuid() const;
    void setProjectGuid(const QString &project_guid);
    bool is_project_guid_Set() const;
    bool is_project_guid_Valid() const;

    OAIUserWithNameAndPhotoFileModel getUser() const;
    void setUser(const OAIUserWithNameAndPhotoFileModel &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    double getWorkHours() const;
    void setWorkHours(const double &work_hours);
    bool is_work_hours_Set() const;
    bool is_work_hours_Valid() const;

    double getWorkHoursBillable() const;
    void setWorkHoursBillable(const double &work_hours_billable);
    bool is_work_hours_billable_Set() const;
    bool is_work_hours_billable_Valid() const;

    OAIMoneyOutputModel getWorkHoursCost() const;
    void setWorkHoursCost(const OAIMoneyOutputModel &work_hours_cost);
    bool is_work_hours_cost_Set() const;
    bool is_work_hours_cost_Valid() const;

    OAIMoneyOutputModel getWorkHoursValue() const;
    void setWorkHoursValue(const OAIMoneyOutputModel &work_hours_value);
    bool is_work_hours_value_Set() const;
    bool is_work_hours_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMoneyOutputModel m_adjusted_share_of_billing;
    bool m_adjusted_share_of_billing_isSet;
    bool m_adjusted_share_of_billing_isValid;

    double m_adjusted_share_of_billing_percentage;
    bool m_adjusted_share_of_billing_percentage_isSet;
    bool m_adjusted_share_of_billing_percentage_isValid;

    double m_billable_hours_percentage;
    bool m_billable_hours_percentage_isSet;
    bool m_billable_hours_percentage_isValid;

    OAIMoneyOutputModel m_calculated_share_of_billing;
    bool m_calculated_share_of_billing_isSet;
    bool m_calculated_share_of_billing_isValid;

    double m_calculated_share_of_billing_percentage;
    bool m_calculated_share_of_billing_percentage_isSet;
    bool m_calculated_share_of_billing_percentage_isValid;

    QString m_guid;
    bool m_guid_isSet;
    bool m_guid_isValid;

    QString m_project_guid;
    bool m_project_guid_isSet;
    bool m_project_guid_isValid;

    OAIUserWithNameAndPhotoFileModel m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    double m_work_hours;
    bool m_work_hours_isSet;
    bool m_work_hours_isValid;

    double m_work_hours_billable;
    bool m_work_hours_billable_isSet;
    bool m_work_hours_billable_isValid;

    OAIMoneyOutputModel m_work_hours_cost;
    bool m_work_hours_cost_isSet;
    bool m_work_hours_cost_isValid;

    OAIMoneyOutputModel m_work_hours_value;
    bool m_work_hours_value_isSet;
    bool m_work_hours_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITeamProductivityOutputModel)

#endif // OAITeamProductivityOutputModel_H
