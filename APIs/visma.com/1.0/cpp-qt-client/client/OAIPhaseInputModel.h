/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPhaseInputModel.h
 *
 * 
 */

#ifndef OAIPhaseInputModel_H
#define OAIPhaseInputModel_H

#include <QJsonObject>

#include "OAIModelBaseWithRequiredGuid.h"
#include "OAIModelWithName.h"
#include "OAIPhaseStatusInputModel.h"
#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIModelWithName;
class OAIModelBaseWithRequiredGuid;
class OAIPhaseStatusInputModel;

class OAIPhaseInputModel : public OAIObject {
public:
    OAIPhaseInputModel();
    OAIPhaseInputModel(QString json);
    ~OAIPhaseInputModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QDate getDeadline() const;
    void setDeadline(const QDate &deadline);
    bool is_deadline_Set() const;
    bool is_deadline_Valid() const;

    OAIModelWithName getDefaultWorkType() const;
    void setDefaultWorkType(const OAIModelWithName &default_work_type);
    bool is_default_work_type_Set() const;
    bool is_default_work_type_Valid() const;

    bool isIsClosed() const;
    void setIsClosed(const bool &is_closed);
    bool is_is_closed_Set() const;
    bool is_is_closed_Valid() const;

    bool isIsCompleted() const;
    void setIsCompleted(const bool &is_completed);
    bool is_is_completed_Set() const;
    bool is_is_completed_Valid() const;

    bool isIsLocked() const;
    void setIsLocked(const bool &is_locked);
    bool is_is_locked_Set() const;
    bool is_is_locked_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QDate getOriginalDeadline() const;
    void setOriginalDeadline(const QDate &original_deadline);
    bool is_original_deadline_Set() const;
    bool is_original_deadline_Valid() const;

    QDate getOriginalStartDate() const;
    void setOriginalStartDate(const QDate &original_start_date);
    bool is_original_start_date_Set() const;
    bool is_original_start_date_Valid() const;

    double getOriginalWorkHoursEstimate() const;
    void setOriginalWorkHoursEstimate(const double &original_work_hours_estimate);
    bool is_original_work_hours_estimate_Set() const;
    bool is_original_work_hours_estimate_Valid() const;

    OAIModelBaseWithRequiredGuid getParentPhase() const;
    void setParentPhase(const OAIModelBaseWithRequiredGuid &parent_phase);
    bool is_parent_phase_Set() const;
    bool is_parent_phase_Valid() const;

    OAIPhaseStatusInputModel getPhaseStatus() const;
    void setPhaseStatus(const OAIPhaseStatusInputModel &phase_status);
    bool is_phase_status_Set() const;
    bool is_phase_status_Valid() const;

    OAIModelBaseWithRequiredGuid getProject() const;
    void setProject(const OAIModelBaseWithRequiredGuid &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    qint32 getSortOrder() const;
    void setSortOrder(const qint32 &sort_order);
    bool is_sort_order_Set() const;
    bool is_sort_order_Valid() const;

    QDate getStartDate() const;
    void setStartDate(const QDate &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    double getWorkHoursEstimate() const;
    void setWorkHoursEstimate(const double &work_hours_estimate);
    bool is_work_hours_estimate_Set() const;
    bool is_work_hours_estimate_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QDate m_deadline;
    bool m_deadline_isSet;
    bool m_deadline_isValid;

    OAIModelWithName m_default_work_type;
    bool m_default_work_type_isSet;
    bool m_default_work_type_isValid;

    bool m_is_closed;
    bool m_is_closed_isSet;
    bool m_is_closed_isValid;

    bool m_is_completed;
    bool m_is_completed_isSet;
    bool m_is_completed_isValid;

    bool m_is_locked;
    bool m_is_locked_isSet;
    bool m_is_locked_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QDate m_original_deadline;
    bool m_original_deadline_isSet;
    bool m_original_deadline_isValid;

    QDate m_original_start_date;
    bool m_original_start_date_isSet;
    bool m_original_start_date_isValid;

    double m_original_work_hours_estimate;
    bool m_original_work_hours_estimate_isSet;
    bool m_original_work_hours_estimate_isValid;

    OAIModelBaseWithRequiredGuid m_parent_phase;
    bool m_parent_phase_isSet;
    bool m_parent_phase_isValid;

    OAIPhaseStatusInputModel m_phase_status;
    bool m_phase_status_isSet;
    bool m_phase_status_isValid;

    OAIModelBaseWithRequiredGuid m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    qint32 m_sort_order;
    bool m_sort_order_isSet;
    bool m_sort_order_isValid;

    QDate m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    double m_work_hours_estimate;
    bool m_work_hours_estimate_isSet;
    bool m_work_hours_estimate_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPhaseInputModel)

#endif // OAIPhaseInputModel_H
