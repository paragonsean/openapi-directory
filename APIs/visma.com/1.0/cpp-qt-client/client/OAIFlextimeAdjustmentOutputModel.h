/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFlextimeAdjustmentOutputModel.h
 *
 * 
 */

#ifndef OAIFlextimeAdjustmentOutputModel_H
#define OAIFlextimeAdjustmentOutputModel_H

#include <QJsonObject>

#include "OAIUserWithFirstNameLastNameAndPhotoFileModel.h"
#include "OAIUserWithFirstNameLastNamePhotoFileModelAndRequiredGuid.h"
#include <QDate>
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserWithFirstNameLastNameAndPhotoFileModel;
class OAIUserWithFirstNameLastNamePhotoFileModelAndRequiredGuid;

class OAIFlextimeAdjustmentOutputModel : public OAIObject {
public:
    OAIFlextimeAdjustmentOutputModel();
    OAIFlextimeAdjustmentOutputModel(QString json);
    ~OAIFlextimeAdjustmentOutputModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDate getAdjustmentDate() const;
    void setAdjustmentDate(const QDate &adjustment_date);
    bool is_adjustment_date_Set() const;
    bool is_adjustment_date_Valid() const;

    double getAmount() const;
    void setAmount(const double &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    OAIUserWithFirstNameLastNameAndPhotoFileModel getCreatedBy() const;
    void setCreatedBy(const OAIUserWithFirstNameLastNameAndPhotoFileModel &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QDateTime getCreatedDateTime() const;
    void setCreatedDateTime(const QDateTime &created_date_time);
    bool is_created_date_time_Set() const;
    bool is_created_date_time_Valid() const;

    QString getGuid() const;
    void setGuid(const QString &guid);
    bool is_guid_Set() const;
    bool is_guid_Valid() const;

    OAIUserWithFirstNameLastNameAndPhotoFileModel getLastUpdatedBy() const;
    void setLastUpdatedBy(const OAIUserWithFirstNameLastNameAndPhotoFileModel &last_updated_by);
    bool is_last_updated_by_Set() const;
    bool is_last_updated_by_Valid() const;

    QDateTime getLastUpdatedDateTime() const;
    void setLastUpdatedDateTime(const QDateTime &last_updated_date_time);
    bool is_last_updated_date_time_Set() const;
    bool is_last_updated_date_time_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    OAIUserWithFirstNameLastNamePhotoFileModelAndRequiredGuid getUser() const;
    void setUser(const OAIUserWithFirstNameLastNamePhotoFileModelAndRequiredGuid &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDate m_adjustment_date;
    bool m_adjustment_date_isSet;
    bool m_adjustment_date_isValid;

    double m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    OAIUserWithFirstNameLastNameAndPhotoFileModel m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QDateTime m_created_date_time;
    bool m_created_date_time_isSet;
    bool m_created_date_time_isValid;

    QString m_guid;
    bool m_guid_isSet;
    bool m_guid_isValid;

    OAIUserWithFirstNameLastNameAndPhotoFileModel m_last_updated_by;
    bool m_last_updated_by_isSet;
    bool m_last_updated_by_isValid;

    QDateTime m_last_updated_date_time;
    bool m_last_updated_date_time_isSet;
    bool m_last_updated_date_time_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    OAIUserWithFirstNameLastNamePhotoFileModelAndRequiredGuid m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFlextimeAdjustmentOutputModel)

#endif // OAIFlextimeAdjustmentOutputModel_H
