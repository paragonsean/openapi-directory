/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProposalOutputModel.h
 *
 * 
 */

#ifndef OAIProposalOutputModel_H
#define OAIProposalOutputModel_H

#include <QJsonObject>

#include "OAICustomerContactPersonSubModel.h"
#include "OAIFormattingCultureSubModel.h"
#include "OAIFreeTextModel2.h"
#include "OAIModelWithName.h"
#include "OAIMoneyOutputModel.h"
#include "OAIProposalBillingAddressSubModel.h"
#include "OAIProposalCustomerSubModel.h"
#include "OAIProposalLanguageSubModel.h"
#include "OAIProposalProjectSubModel.h"
#include "OAIUserWithFirstNameLastNameAndPhotoFileModel.h"
#include <QDate>
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProposalBillingAddressSubModel;
class OAIUserWithFirstNameLastNameAndPhotoFileModel;
class OAIFormattingCultureSubModel;
class OAIProposalCustomerSubModel;
class OAICustomerContactPersonSubModel;
class OAIFreeTextModel2;
class OAIProposalLanguageSubModel;
class OAIModelWithName;
class OAIProposalProjectSubModel;
class OAIMoneyOutputModel;

class OAIProposalOutputModel : public OAIObject {
public:
    OAIProposalOutputModel();
    OAIProposalOutputModel(QString json);
    ~OAIProposalOutputModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIProposalBillingAddressSubModel getBillingAddress() const;
    void setBillingAddress(const OAIProposalBillingAddressSubModel &billing_address);
    bool is_billing_address_Set() const;
    bool is_billing_address_Valid() const;

    OAIUserWithFirstNameLastNameAndPhotoFileModel getCreatedBy() const;
    void setCreatedBy(const OAIUserWithFirstNameLastNameAndPhotoFileModel &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QDateTime getCreatedDateTime() const;
    void setCreatedDateTime(const QDateTime &created_date_time);
    bool is_created_date_time_Set() const;
    bool is_created_date_time_Valid() const;

    OAIFormattingCultureSubModel getCulture() const;
    void setCulture(const OAIFormattingCultureSubModel &culture);
    bool is_culture_Set() const;
    bool is_culture_Valid() const;

    OAIProposalCustomerSubModel getCustomer() const;
    void setCustomer(const OAIProposalCustomerSubModel &customer);
    bool is_customer_Set() const;
    bool is_customer_Valid() const;

    OAICustomerContactPersonSubModel getCustomerContactPerson() const;
    void setCustomerContactPerson(const OAICustomerContactPersonSubModel &customer_contact_person);
    bool is_customer_contact_person_Set() const;
    bool is_customer_contact_person_Valid() const;

    OAIFreeTextModel2 getFreeText1() const;
    void setFreeText1(const OAIFreeTextModel2 &free_text1);
    bool is_free_text1_Set() const;
    bool is_free_text1_Valid() const;

    OAIFreeTextModel2 getFreeText2() const;
    void setFreeText2(const OAIFreeTextModel2 &free_text2);
    bool is_free_text2_Set() const;
    bool is_free_text2_Valid() const;

    QString getGuid() const;
    void setGuid(const QString &guid);
    bool is_guid_Set() const;
    bool is_guid_Valid() const;

    OAIProposalLanguageSubModel getLanguage() const;
    void setLanguage(const OAIProposalLanguageSubModel &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    OAIUserWithFirstNameLastNameAndPhotoFileModel getLastUpdatedBy() const;
    void setLastUpdatedBy(const OAIUserWithFirstNameLastNameAndPhotoFileModel &last_updated_by);
    bool is_last_updated_by_Set() const;
    bool is_last_updated_by_Valid() const;

    QDateTime getLastUpdatedDateTime() const;
    void setLastUpdatedDateTime(const QDateTime &last_updated_date_time);
    bool is_last_updated_date_time_Set() const;
    bool is_last_updated_date_time_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNumber() const;
    void setNumber(const QString &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    OAIModelWithName getPricelist() const;
    void setPricelist(const OAIModelWithName &pricelist);
    bool is_pricelist_Set() const;
    bool is_pricelist_Valid() const;

    OAIProposalProjectSubModel getProject() const;
    void setProject(const OAIProposalProjectSubModel &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    QDate getProposalDate() const;
    void setProposalDate(const QDate &proposal_date);
    bool is_proposal_date_Set() const;
    bool is_proposal_date_Valid() const;

    OAIModelWithName getProposalStatus() const;
    void setProposalStatus(const OAIModelWithName &proposal_status);
    bool is_proposal_status_Set() const;
    bool is_proposal_status_Valid() const;

    OAIMoneyOutputModel getTotalExcludingVat() const;
    void setTotalExcludingVat(const OAIMoneyOutputModel &total_excluding_vat);
    bool is_total_excluding_vat_Set() const;
    bool is_total_excluding_vat_Valid() const;

    OAIMoneyOutputModel getTotalIncludingVat() const;
    void setTotalIncludingVat(const OAIMoneyOutputModel &total_including_vat);
    bool is_total_including_vat_Set() const;
    bool is_total_including_vat_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIProposalBillingAddressSubModel m_billing_address;
    bool m_billing_address_isSet;
    bool m_billing_address_isValid;

    OAIUserWithFirstNameLastNameAndPhotoFileModel m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QDateTime m_created_date_time;
    bool m_created_date_time_isSet;
    bool m_created_date_time_isValid;

    OAIFormattingCultureSubModel m_culture;
    bool m_culture_isSet;
    bool m_culture_isValid;

    OAIProposalCustomerSubModel m_customer;
    bool m_customer_isSet;
    bool m_customer_isValid;

    OAICustomerContactPersonSubModel m_customer_contact_person;
    bool m_customer_contact_person_isSet;
    bool m_customer_contact_person_isValid;

    OAIFreeTextModel2 m_free_text1;
    bool m_free_text1_isSet;
    bool m_free_text1_isValid;

    OAIFreeTextModel2 m_free_text2;
    bool m_free_text2_isSet;
    bool m_free_text2_isValid;

    QString m_guid;
    bool m_guid_isSet;
    bool m_guid_isValid;

    OAIProposalLanguageSubModel m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    OAIUserWithFirstNameLastNameAndPhotoFileModel m_last_updated_by;
    bool m_last_updated_by_isSet;
    bool m_last_updated_by_isValid;

    QDateTime m_last_updated_date_time;
    bool m_last_updated_date_time_isSet;
    bool m_last_updated_date_time_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    OAIModelWithName m_pricelist;
    bool m_pricelist_isSet;
    bool m_pricelist_isValid;

    OAIProposalProjectSubModel m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    QDate m_proposal_date;
    bool m_proposal_date_isSet;
    bool m_proposal_date_isValid;

    OAIModelWithName m_proposal_status;
    bool m_proposal_status_isSet;
    bool m_proposal_status_isValid;

    OAIMoneyOutputModel m_total_excluding_vat;
    bool m_total_excluding_vat_isSet;
    bool m_total_excluding_vat_isValid;

    OAIMoneyOutputModel m_total_including_vat;
    bool m_total_including_vat_isSet;
    bool m_total_including_vat_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProposalOutputModel)

#endif // OAIProposalOutputModel_H
