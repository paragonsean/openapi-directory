/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActivityRecurrenceModel.h
 *
 * 
 */

#ifndef OAIActivityRecurrenceModel_H
#define OAIActivityRecurrenceModel_H

#include <QJsonObject>

#include "OAIRecurrenceFrequency.h"
#include "OAIRecurrencePattern.h"
#include "OAIRecurrenceRange.h"
#include <QDateTime>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRecurrencePattern;
class OAIRecurrenceRange;

class OAIActivityRecurrenceModel : public OAIObject {
public:
    OAIActivityRecurrenceModel();
    OAIActivityRecurrenceModel(QString json);
    ~OAIActivityRecurrenceModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QDateTime> getExceptions() const;
    void setExceptions(const QList<QDateTime> &exceptions);
    bool is_exceptions_Set() const;
    bool is_exceptions_Valid() const;

    OAIRecurrenceFrequency getFrequency() const;
    void setFrequency(const OAIRecurrenceFrequency &frequency);
    bool is_frequency_Set() const;
    bool is_frequency_Valid() const;

    QDateTime getLastOccurrenceDateTime() const;
    void setLastOccurrenceDateTime(const QDateTime &last_occurrence_date_time);
    bool is_last_occurrence_date_time_Set() const;
    bool is_last_occurrence_date_time_Valid() const;

    OAIRecurrencePattern getPattern() const;
    void setPattern(const OAIRecurrencePattern &pattern);
    bool is_pattern_Set() const;
    bool is_pattern_Valid() const;

    OAIRecurrenceRange getRange() const;
    void setRange(const OAIRecurrenceRange &range);
    bool is_range_Set() const;
    bool is_range_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QDateTime> m_exceptions;
    bool m_exceptions_isSet;
    bool m_exceptions_isValid;

    OAIRecurrenceFrequency m_frequency;
    bool m_frequency_isSet;
    bool m_frequency_isValid;

    QDateTime m_last_occurrence_date_time;
    bool m_last_occurrence_date_time_isSet;
    bool m_last_occurrence_date_time_isValid;

    OAIRecurrencePattern m_pattern;
    bool m_pattern_isSet;
    bool m_pattern_isValid;

    OAIRecurrenceRange m_range;
    bool m_range_isSet;
    bool m_range_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActivityRecurrenceModel)

#endif // OAIActivityRecurrenceModel_H
