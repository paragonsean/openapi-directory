/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProposalSubtotalOutputModel.h
 *
 * 
 */

#ifndef OAIProposalSubtotalOutputModel_H
#define OAIProposalSubtotalOutputModel_H

#include <QJsonObject>

#include "OAIModelBase.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIModelBase;

class OAIProposalSubtotalOutputModel : public OAIObject {
public:
    OAIProposalSubtotalOutputModel();
    OAIProposalSubtotalOutputModel(QString json);
    ~OAIProposalSubtotalOutputModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getGuid() const;
    void setGuid(const QString &guid);
    bool is_guid_Set() const;
    bool is_guid_Valid() const;

    bool isIsShownOnProposal() const;
    void setIsShownOnProposal(const bool &is_shown_on_proposal);
    bool is_is_shown_on_proposal_Set() const;
    bool is_is_shown_on_proposal_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIModelBase getPhase() const;
    void setPhase(const OAIModelBase &phase);
    bool is_phase_Set() const;
    bool is_phase_Valid() const;

    OAIModelBase getProjectFee() const;
    void setProjectFee(const OAIModelBase &project_fee);
    bool is_project_fee_Set() const;
    bool is_project_fee_Valid() const;

    OAIModelBase getProposal() const;
    void setProposal(const OAIModelBase &proposal);
    bool is_proposal_Set() const;
    bool is_proposal_Valid() const;

    qint32 getSortOrder() const;
    void setSortOrder(const qint32 &sort_order);
    bool is_sort_order_Set() const;
    bool is_sort_order_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_guid;
    bool m_guid_isSet;
    bool m_guid_isValid;

    bool m_is_shown_on_proposal;
    bool m_is_shown_on_proposal_isSet;
    bool m_is_shown_on_proposal_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIModelBase m_phase;
    bool m_phase_isSet;
    bool m_phase_isValid;

    OAIModelBase m_project_fee;
    bool m_project_fee_isSet;
    bool m_project_fee_isValid;

    OAIModelBase m_proposal;
    bool m_proposal_isSet;
    bool m_proposal_isValid;

    qint32 m_sort_order;
    bool m_sort_order_isSet;
    bool m_sort_order_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProposalSubtotalOutputModel)

#endif // OAIProposalSubtotalOutputModel_H
