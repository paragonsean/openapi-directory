/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActivityModel.h
 *
 * 
 */

#ifndef OAIActivityModel_H
#define OAIActivityModel_H

#include <QJsonObject>

#include "OAIActivityActivityType.h"
#include "OAIActivityCustomer.h"
#include "OAIActivityOwnerModel.h"
#include "OAIActivityPhase.h"
#include "OAIActivityRecurrenceModel.h"
#include "OAIModelWithName.h"
#include "OAIRecurrenceType.h"
#include "OAIUserWithFirstNameLastNameAndPhotoFileModel.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIActivityActivityType;
class OAIUserWithFirstNameLastNameAndPhotoFileModel;
class OAIActivityCustomer;
class OAIActivityOwnerModel;
class OAIActivityPhase;
class OAIModelWithName;
class OAIActivityRecurrenceModel;

class OAIActivityModel : public OAIObject {
public:
    OAIActivityModel();
    OAIActivityModel(QString json);
    ~OAIActivityModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIActivityActivityType getActivityType() const;
    void setActivityType(const OAIActivityActivityType &activity_type);
    bool is_activity_type_Set() const;
    bool is_activity_type_Valid() const;

    OAIUserWithFirstNameLastNameAndPhotoFileModel getCreatedBy() const;
    void setCreatedBy(const OAIUserWithFirstNameLastNameAndPhotoFileModel &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QDateTime getCreatedDateTime() const;
    void setCreatedDateTime(const QDateTime &created_date_time);
    bool is_created_date_time_Set() const;
    bool is_created_date_time_Valid() const;

    OAIActivityCustomer getCustomer() const;
    void setCustomer(const OAIActivityCustomer &customer);
    bool is_customer_Set() const;
    bool is_customer_Valid() const;

    QDateTime getEndDateTime() const;
    void setEndDateTime(const QDateTime &end_date_time);
    bool is_end_date_time_Set() const;
    bool is_end_date_time_Valid() const;

    QString getGuid() const;
    void setGuid(const QString &guid);
    bool is_guid_Set() const;
    bool is_guid_Valid() const;

    bool isHasDuration() const;
    void setHasDuration(const bool &has_duration);
    bool is_has_duration_Set() const;
    bool is_has_duration_Valid() const;

    bool isHasHours() const;
    void setHasHours(const bool &has_hours);
    bool is_has_hours_Set() const;
    bool is_has_hours_Valid() const;

    bool isIsAllDay() const;
    void setIsAllDay(const bool &is_all_day);
    bool is_is_all_day_Set() const;
    bool is_is_all_day_Valid() const;

    bool isIsClosed() const;
    void setIsClosed(const bool &is_closed);
    bool is_is_closed_Set() const;
    bool is_is_closed_Valid() const;

    bool isIsUnassigned() const;
    void setIsUnassigned(const bool &is_unassigned);
    bool is_is_unassigned_Set() const;
    bool is_is_unassigned_Valid() const;

    OAIUserWithFirstNameLastNameAndPhotoFileModel getLastUpdatedBy() const;
    void setLastUpdatedBy(const OAIUserWithFirstNameLastNameAndPhotoFileModel &last_updated_by);
    bool is_last_updated_by_Set() const;
    bool is_last_updated_by_Valid() const;

    QDateTime getLastUpdatedDateTime() const;
    void setLastUpdatedDateTime(const QDateTime &last_updated_date_time);
    bool is_last_updated_date_time_Set() const;
    bool is_last_updated_date_time_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    OAIActivityOwnerModel getOwnerUser() const;
    void setOwnerUser(const OAIActivityOwnerModel &owner_user);
    bool is_owner_user_Set() const;
    bool is_owner_user_Valid() const;

    OAIActivityPhase getPhase() const;
    void setPhase(const OAIActivityPhase &phase);
    bool is_phase_Set() const;
    bool is_phase_Valid() const;

    OAIModelWithName getProjectTaskStatus() const;
    void setProjectTaskStatus(const OAIModelWithName &project_task_status);
    bool is_project_task_status_Set() const;
    bool is_project_task_status_Valid() const;

    OAIActivityRecurrenceModel getRecurrence() const;
    void setRecurrence(const OAIActivityRecurrenceModel &recurrence);
    bool is_recurrence_Set() const;
    bool is_recurrence_Valid() const;

    QString getRecurrenceParentActivityGuid() const;
    void setRecurrenceParentActivityGuid(const QString &recurrence_parent_activity_guid);
    bool is_recurrence_parent_activity_guid_Set() const;
    bool is_recurrence_parent_activity_guid_Valid() const;

    QString getRecurrenceRule() const;
    void setRecurrenceRule(const QString &recurrence_rule);
    bool is_recurrence_rule_Set() const;
    bool is_recurrence_rule_Valid() const;

    OAIRecurrenceType getRecurrenceType() const;
    void setRecurrenceType(const OAIRecurrenceType &recurrence_type);
    bool is_recurrence_type_Set() const;
    bool is_recurrence_type_Valid() const;

    QDateTime getStartDateTime() const;
    void setStartDateTime(const QDateTime &start_date_time);
    bool is_start_date_time_Set() const;
    bool is_start_date_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIActivityActivityType m_activity_type;
    bool m_activity_type_isSet;
    bool m_activity_type_isValid;

    OAIUserWithFirstNameLastNameAndPhotoFileModel m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QDateTime m_created_date_time;
    bool m_created_date_time_isSet;
    bool m_created_date_time_isValid;

    OAIActivityCustomer m_customer;
    bool m_customer_isSet;
    bool m_customer_isValid;

    QDateTime m_end_date_time;
    bool m_end_date_time_isSet;
    bool m_end_date_time_isValid;

    QString m_guid;
    bool m_guid_isSet;
    bool m_guid_isValid;

    bool m_has_duration;
    bool m_has_duration_isSet;
    bool m_has_duration_isValid;

    bool m_has_hours;
    bool m_has_hours_isSet;
    bool m_has_hours_isValid;

    bool m_is_all_day;
    bool m_is_all_day_isSet;
    bool m_is_all_day_isValid;

    bool m_is_closed;
    bool m_is_closed_isSet;
    bool m_is_closed_isValid;

    bool m_is_unassigned;
    bool m_is_unassigned_isSet;
    bool m_is_unassigned_isValid;

    OAIUserWithFirstNameLastNameAndPhotoFileModel m_last_updated_by;
    bool m_last_updated_by_isSet;
    bool m_last_updated_by_isValid;

    QDateTime m_last_updated_date_time;
    bool m_last_updated_date_time_isSet;
    bool m_last_updated_date_time_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    OAIActivityOwnerModel m_owner_user;
    bool m_owner_user_isSet;
    bool m_owner_user_isValid;

    OAIActivityPhase m_phase;
    bool m_phase_isSet;
    bool m_phase_isValid;

    OAIModelWithName m_project_task_status;
    bool m_project_task_status_isSet;
    bool m_project_task_status_isValid;

    OAIActivityRecurrenceModel m_recurrence;
    bool m_recurrence_isSet;
    bool m_recurrence_isValid;

    QString m_recurrence_parent_activity_guid;
    bool m_recurrence_parent_activity_guid_isSet;
    bool m_recurrence_parent_activity_guid_isValid;

    QString m_recurrence_rule;
    bool m_recurrence_rule_isSet;
    bool m_recurrence_rule_isValid;

    OAIRecurrenceType m_recurrence_type;
    bool m_recurrence_type_isSet;
    bool m_recurrence_type_isValid;

    QDateTime m_start_date_time;
    bool m_start_date_time_isSet;
    bool m_start_date_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActivityModel)

#endif // OAIActivityModel_H
