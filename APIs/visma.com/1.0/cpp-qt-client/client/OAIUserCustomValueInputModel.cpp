/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserCustomValueInputModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserCustomValueInputModel::OAIUserCustomValueInputModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserCustomValueInputModel::OAIUserCustomValueInputModel() {
    this->initializeModel();
}

OAIUserCustomValueInputModel::~OAIUserCustomValueInputModel() {}

void OAIUserCustomValueInputModel::initializeModel() {

    m_custom_property_isSet = false;
    m_custom_property_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIUserCustomValueInputModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserCustomValueInputModel::fromJsonObject(QJsonObject json) {

    m_custom_property_isValid = ::OpenAPI::fromJsonValue(m_custom_property, json[QString("customProperty")]);
    m_custom_property_isSet = !json[QString("customProperty")].isNull() && m_custom_property_isValid;

    m_user_isValid = ::OpenAPI::fromJsonValue(m_user, json[QString("user")]);
    m_user_isSet = !json[QString("user")].isNull() && m_user_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIUserCustomValueInputModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserCustomValueInputModel::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_property.isSet()) {
        obj.insert(QString("customProperty"), ::OpenAPI::toJsonValue(m_custom_property));
    }
    if (m_user.isSet()) {
        obj.insert(QString("user"), ::OpenAPI::toJsonValue(m_user));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

OAISimpleInputRequiredModel OAIUserCustomValueInputModel::getCustomProperty() const {
    return m_custom_property;
}
void OAIUserCustomValueInputModel::setCustomProperty(const OAISimpleInputRequiredModel &custom_property) {
    m_custom_property = custom_property;
    m_custom_property_isSet = true;
}

bool OAIUserCustomValueInputModel::is_custom_property_Set() const{
    return m_custom_property_isSet;
}

bool OAIUserCustomValueInputModel::is_custom_property_Valid() const{
    return m_custom_property_isValid;
}

OAISimpleInputRequiredModel OAIUserCustomValueInputModel::getUser() const {
    return m_user;
}
void OAIUserCustomValueInputModel::setUser(const OAISimpleInputRequiredModel &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAIUserCustomValueInputModel::is_user_Set() const{
    return m_user_isSet;
}

bool OAIUserCustomValueInputModel::is_user_Valid() const{
    return m_user_isValid;
}

QString OAIUserCustomValueInputModel::getValue() const {
    return m_value;
}
void OAIUserCustomValueInputModel::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIUserCustomValueInputModel::is_value_Set() const{
    return m_value_isSet;
}

bool OAIUserCustomValueInputModel::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIUserCustomValueInputModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_property.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserCustomValueInputModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_custom_property_isValid && m_user_isValid && true;
}

} // namespace OpenAPI
