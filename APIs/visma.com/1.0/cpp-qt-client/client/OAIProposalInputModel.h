/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProposalInputModel.h
 *
 * 
 */

#ifndef OAIProposalInputModel_H
#define OAIProposalInputModel_H

#include <QJsonObject>

#include "OAIFreeTextInputModel.h"
#include "OAISimpleInputModel.h"
#include "OAISimpleInputRequiredModel.h"
#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISimpleInputModel;
class OAIFreeTextInputModel;
class OAISimpleInputRequiredModel;

class OAIProposalInputModel : public OAIObject {
public:
    OAIProposalInputModel();
    OAIProposalInputModel(QString json);
    ~OAIProposalInputModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISimpleInputModel getBillingAddress() const;
    void setBillingAddress(const OAISimpleInputModel &billing_address);
    bool is_billing_address_Set() const;
    bool is_billing_address_Valid() const;

    OAISimpleInputModel getCulture() const;
    void setCulture(const OAISimpleInputModel &culture);
    bool is_culture_Set() const;
    bool is_culture_Valid() const;

    OAISimpleInputModel getCustomerContactPerson() const;
    void setCustomerContactPerson(const OAISimpleInputModel &customer_contact_person);
    bool is_customer_contact_person_Set() const;
    bool is_customer_contact_person_Valid() const;

    OAIFreeTextInputModel getFreeText1() const;
    void setFreeText1(const OAIFreeTextInputModel &free_text1);
    bool is_free_text1_Set() const;
    bool is_free_text1_Valid() const;

    OAIFreeTextInputModel getFreeText2() const;
    void setFreeText2(const OAIFreeTextInputModel &free_text2);
    bool is_free_text2_Set() const;
    bool is_free_text2_Valid() const;

    OAISimpleInputModel getLanguage() const;
    void setLanguage(const OAISimpleInputModel &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAISimpleInputRequiredModel getProject() const;
    void setProject(const OAISimpleInputRequiredModel &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    QDate getProposalDate() const;
    void setProposalDate(const QDate &proposal_date);
    bool is_proposal_date_Set() const;
    bool is_proposal_date_Valid() const;

    OAISimpleInputModel getProposalStatus() const;
    void setProposalStatus(const OAISimpleInputModel &proposal_status);
    bool is_proposal_status_Set() const;
    bool is_proposal_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISimpleInputModel m_billing_address;
    bool m_billing_address_isSet;
    bool m_billing_address_isValid;

    OAISimpleInputModel m_culture;
    bool m_culture_isSet;
    bool m_culture_isValid;

    OAISimpleInputModel m_customer_contact_person;
    bool m_customer_contact_person_isSet;
    bool m_customer_contact_person_isValid;

    OAIFreeTextInputModel m_free_text1;
    bool m_free_text1_isSet;
    bool m_free_text1_isValid;

    OAIFreeTextInputModel m_free_text2;
    bool m_free_text2_isSet;
    bool m_free_text2_isValid;

    OAISimpleInputModel m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAISimpleInputRequiredModel m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    QDate m_proposal_date;
    bool m_proposal_date_isSet;
    bool m_proposal_date_isValid;

    OAISimpleInputModel m_proposal_status;
    bool m_proposal_status_isSet;
    bool m_proposal_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProposalInputModel)

#endif // OAIProposalInputModel_H
