/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrganizationSettingsModel.h
 *
 * 
 */

#ifndef OAIOrganizationSettingsModel_H
#define OAIOrganizationSettingsModel_H

#include <QJsonObject>

#include "OAIEntryFormat.h"
#include "OAIFreeTextModel.h"
#include "OAIProjectNameDisplayFormatOptions.h"
#include "OAIProjectNameDisplayOptions.h"
#include "OAIQuickSearchOptions.h"
#include "OAIReferenceNumberDisplay.h"
#include "OAITotalRoundingType.h"
#include "OAIUserWithFirstNameLastNameModel.h"
#include "OAIWorkHourApprovalMode.h"
#include "OAIWorkweek.h"
#include <QDate>
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFreeTextModel;
class OAIUserWithFirstNameLastNameModel;

class OAIOrganizationSettingsModel : public OAIObject {
public:
    OAIOrganizationSettingsModel();
    OAIOrganizationSettingsModel(QString json);
    ~OAIOrganizationSettingsModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITotalRoundingType getCurrencyRoundingType() const;
    void setCurrencyRoundingType(const OAITotalRoundingType &currency_rounding_type);
    bool is_currency_rounding_type_Set() const;
    bool is_currency_rounding_type_Valid() const;

    OAIFreeTextModel getDefaultFooterColumn1() const;
    void setDefaultFooterColumn1(const OAIFreeTextModel &default_footer_column1);
    bool is_default_footer_column1_Set() const;
    bool is_default_footer_column1_Valid() const;

    OAIFreeTextModel getDefaultFooterColumn2() const;
    void setDefaultFooterColumn2(const OAIFreeTextModel &default_footer_column2);
    bool is_default_footer_column2_Set() const;
    bool is_default_footer_column2_Valid() const;

    OAIFreeTextModel getDefaultFooterColumn3() const;
    void setDefaultFooterColumn3(const OAIFreeTextModel &default_footer_column3);
    bool is_default_footer_column3_Set() const;
    bool is_default_footer_column3_Valid() const;

    bool isDisplayProjectNumber() const;
    void setDisplayProjectNumber(const bool &display_project_number);
    bool is_display_project_number_Set() const;
    bool is_display_project_number_Valid() const;

    QDate getFlextimeCalculationStartDate() const;
    void setFlextimeCalculationStartDate(const QDate &flextime_calculation_start_date);
    bool is_flextime_calculation_start_date_Set() const;
    bool is_flextime_calculation_start_date_Valid() const;

    bool isIsAddingNewKeywordsFromProjectAllowed() const;
    void setIsAddingNewKeywordsFromProjectAllowed(const bool &is_adding_new_keywords_from_project_allowed);
    bool is_is_adding_new_keywords_from_project_allowed_Set() const;
    bool is_is_adding_new_keywords_from_project_allowed_Valid() const;

    bool isIsCustomerSearchAllowed() const;
    void setIsCustomerSearchAllowed(const bool &is_customer_search_allowed);
    bool is_is_customer_search_allowed_Set() const;
    bool is_is_customer_search_allowed_Valid() const;

    bool isIsEnteringHourPlannedInvoiceQuantityAllowed() const;
    void setIsEnteringHourPlannedInvoiceQuantityAllowed(const bool &is_entering_hour_planned_invoice_quantity_allowed);
    bool is_is_entering_hour_planned_invoice_quantity_allowed_Set() const;
    bool is_is_entering_hour_planned_invoice_quantity_allowed_Valid() const;

    bool isIsIdenticalPhaseCodesAllowed() const;
    void setIsIdenticalPhaseCodesAllowed(const bool &is_identical_phase_codes_allowed);
    bool is_is_identical_phase_codes_allowed_Set() const;
    bool is_is_identical_phase_codes_allowed_Valid() const;

    bool isIsTravelExpenseImmediatelyInvoiceable() const;
    void setIsTravelExpenseImmediatelyInvoiceable(const bool &is_travel_expense_immediately_invoiceable);
    bool is_is_travel_expense_immediately_invoiceable_Set() const;
    bool is_is_travel_expense_immediately_invoiceable_Valid() const;

    bool isIsWorkHourDescriptionMandatory() const;
    void setIsWorkHourDescriptionMandatory(const bool &is_work_hour_description_mandatory);
    bool is_is_work_hour_description_mandatory_Set() const;
    bool is_is_work_hour_description_mandatory_Valid() const;

    qint64 getLastCustomerNumber() const;
    void setLastCustomerNumber(const qint64 &last_customer_number);
    bool is_last_customer_number_Set() const;
    bool is_last_customer_number_Valid() const;

    QDateTime getLastFlextimeCalculationEndTime() const;
    void setLastFlextimeCalculationEndTime(const QDateTime &last_flextime_calculation_end_time);
    bool is_last_flextime_calculation_end_time_Set() const;
    bool is_last_flextime_calculation_end_time_Valid() const;

    OAIUserWithFirstNameLastNameModel getLastFlextimeCalculationUser() const;
    void setLastFlextimeCalculationUser(const OAIUserWithFirstNameLastNameModel &last_flextime_calculation_user);
    bool is_last_flextime_calculation_user_Set() const;
    bool is_last_flextime_calculation_user_Valid() const;

    qint64 getLastInvoiceNumber() const;
    void setLastInvoiceNumber(const qint64 &last_invoice_number);
    bool is_last_invoice_number_Set() const;
    bool is_last_invoice_number_Valid() const;

    qint64 getLastProjectNumber() const;
    void setLastProjectNumber(const qint64 &last_project_number);
    bool is_last_project_number_Set() const;
    bool is_last_project_number_Valid() const;

    qint64 getLastPurchaseOrderNumber() const;
    void setLastPurchaseOrderNumber(const qint64 &last_purchase_order_number);
    bool is_last_purchase_order_number_Set() const;
    bool is_last_purchase_order_number_Valid() const;

    qint64 getLastTravelReimbursementNumber() const;
    void setLastTravelReimbursementNumber(const qint64 &last_travel_reimbursement_number);
    bool is_last_travel_reimbursement_number_Set() const;
    bool is_last_travel_reimbursement_number_Valid() const;

    double getMaxFlextimeBalanceLimit() const;
    void setMaxFlextimeBalanceLimit(const double &max_flextime_balance_limit);
    bool is_max_flextime_balance_limit_Set() const;
    bool is_max_flextime_balance_limit_Valid() const;

    double getMinFlextimeBalanceLimit() const;
    void setMinFlextimeBalanceLimit(const double &min_flextime_balance_limit);
    bool is_min_flextime_balance_limit_Set() const;
    bool is_min_flextime_balance_limit_Valid() const;

    qint64 getNextCustomerNumber() const;
    void setNextCustomerNumber(const qint64 &next_customer_number);
    bool is_next_customer_number_Set() const;
    bool is_next_customer_number_Valid() const;

    qint32 getNextInvoiceNumber() const;
    void setNextInvoiceNumber(const qint32 &next_invoice_number);
    bool is_next_invoice_number_Set() const;
    bool is_next_invoice_number_Valid() const;

    qint64 getNextProjectNumber() const;
    void setNextProjectNumber(const qint64 &next_project_number);
    bool is_next_project_number_Set() const;
    bool is_next_project_number_Valid() const;

    qint32 getNextPurchaseOrderNumber() const;
    void setNextPurchaseOrderNumber(const qint32 &next_purchase_order_number);
    bool is_next_purchase_order_number_Set() const;
    bool is_next_purchase_order_number_Valid() const;

    qint32 getNextTravelReimbursementNumber() const;
    void setNextTravelReimbursementNumber(const qint32 &next_travel_reimbursement_number);
    bool is_next_travel_reimbursement_number_Set() const;
    bool is_next_travel_reimbursement_number_Valid() const;

    double getOverdueInterest() const;
    void setOverdueInterest(const double &overdue_interest);
    bool is_overdue_interest_Set() const;
    bool is_overdue_interest_Valid() const;

    OAIReferenceNumberDisplay getPaymentReferenceNumberDisplaySetting() const;
    void setPaymentReferenceNumberDisplaySetting(const OAIReferenceNumberDisplay &payment_reference_number_display_setting);
    bool is_payment_reference_number_display_setting_Set() const;
    bool is_payment_reference_number_display_setting_Valid() const;

    qint32 getPaymentTerm() const;
    void setPaymentTerm(const qint32 &payment_term);
    bool is_payment_term_Set() const;
    bool is_payment_term_Valid() const;

    OAIProjectNameDisplayFormatOptions getProjectNameDisplayFormatSetting() const;
    void setProjectNameDisplayFormatSetting(const OAIProjectNameDisplayFormatOptions &project_name_display_format_setting);
    bool is_project_name_display_format_setting_Set() const;
    bool is_project_name_display_format_setting_Valid() const;

    OAIProjectNameDisplayOptions getProjectNameDisplaySetting() const;
    void setProjectNameDisplaySetting(const OAIProjectNameDisplayOptions &project_name_display_setting);
    bool is_project_name_display_setting_Set() const;
    bool is_project_name_display_setting_Valid() const;

    QString getPurchaseOrderNumberPrefix() const;
    void setPurchaseOrderNumberPrefix(const QString &purchase_order_number_prefix);
    bool is_purchase_order_number_prefix_Set() const;
    bool is_purchase_order_number_prefix_Valid() const;

    OAIQuickSearchOptions getQuickSearchSetting() const;
    void setQuickSearchSetting(const OAIQuickSearchOptions &quick_search_setting);
    bool is_quick_search_setting_Set() const;
    bool is_quick_search_setting_Valid() const;

    bool isSetCreditNoteInvoiceNumber() const;
    void setSetCreditNoteInvoiceNumber(const bool &set_credit_note_invoice_number);
    bool is_set_credit_note_invoice_number_Set() const;
    bool is_set_credit_note_invoice_number_Valid() const;

    QDate getTravelEntryClosingDate() const;
    void setTravelEntryClosingDate(const QDate &travel_entry_closing_date);
    bool is_travel_entry_closing_date_Set() const;
    bool is_travel_entry_closing_date_Valid() const;

    QDate getTravelExpenseReimbursementStartDate() const;
    void setTravelExpenseReimbursementStartDate(const QDate &travel_expense_reimbursement_start_date);
    bool is_travel_expense_reimbursement_start_date_Set() const;
    bool is_travel_expense_reimbursement_start_date_Valid() const;

    QString getTravelReimbursementInstructions() const;
    void setTravelReimbursementInstructions(const QString &travel_reimbursement_instructions);
    bool is_travel_reimbursement_instructions_Set() const;
    bool is_travel_reimbursement_instructions_Valid() const;

    bool isUniqueIdentifierForProductsAndWorktypes() const;
    void setUniqueIdentifierForProductsAndWorktypes(const bool &unique_identifier_for_products_and_worktypes);
    bool is_unique_identifier_for_products_and_worktypes_Set() const;
    bool is_unique_identifier_for_products_and_worktypes_Valid() const;

    OAIWorkHourApprovalMode getWorkHourApprovalMode() const;
    void setWorkHourApprovalMode(const OAIWorkHourApprovalMode &work_hour_approval_mode);
    bool is_work_hour_approval_mode_Set() const;
    bool is_work_hour_approval_mode_Valid() const;

    OAIEntryFormat getWorkHourEntryFormat() const;
    void setWorkHourEntryFormat(const OAIEntryFormat &work_hour_entry_format);
    bool is_work_hour_entry_format_Set() const;
    bool is_work_hour_entry_format_Valid() const;

    QList<OAIWorkweek> getWorkWeek() const;
    void setWorkWeek(const QList<OAIWorkweek> &work_week);
    bool is_work_week_Set() const;
    bool is_work_week_Valid() const;

    QDate getWorktimeEntryClosingDate() const;
    void setWorktimeEntryClosingDate(const QDate &worktime_entry_closing_date);
    bool is_worktime_entry_closing_date_Set() const;
    bool is_worktime_entry_closing_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITotalRoundingType m_currency_rounding_type;
    bool m_currency_rounding_type_isSet;
    bool m_currency_rounding_type_isValid;

    OAIFreeTextModel m_default_footer_column1;
    bool m_default_footer_column1_isSet;
    bool m_default_footer_column1_isValid;

    OAIFreeTextModel m_default_footer_column2;
    bool m_default_footer_column2_isSet;
    bool m_default_footer_column2_isValid;

    OAIFreeTextModel m_default_footer_column3;
    bool m_default_footer_column3_isSet;
    bool m_default_footer_column3_isValid;

    bool m_display_project_number;
    bool m_display_project_number_isSet;
    bool m_display_project_number_isValid;

    QDate m_flextime_calculation_start_date;
    bool m_flextime_calculation_start_date_isSet;
    bool m_flextime_calculation_start_date_isValid;

    bool m_is_adding_new_keywords_from_project_allowed;
    bool m_is_adding_new_keywords_from_project_allowed_isSet;
    bool m_is_adding_new_keywords_from_project_allowed_isValid;

    bool m_is_customer_search_allowed;
    bool m_is_customer_search_allowed_isSet;
    bool m_is_customer_search_allowed_isValid;

    bool m_is_entering_hour_planned_invoice_quantity_allowed;
    bool m_is_entering_hour_planned_invoice_quantity_allowed_isSet;
    bool m_is_entering_hour_planned_invoice_quantity_allowed_isValid;

    bool m_is_identical_phase_codes_allowed;
    bool m_is_identical_phase_codes_allowed_isSet;
    bool m_is_identical_phase_codes_allowed_isValid;

    bool m_is_travel_expense_immediately_invoiceable;
    bool m_is_travel_expense_immediately_invoiceable_isSet;
    bool m_is_travel_expense_immediately_invoiceable_isValid;

    bool m_is_work_hour_description_mandatory;
    bool m_is_work_hour_description_mandatory_isSet;
    bool m_is_work_hour_description_mandatory_isValid;

    qint64 m_last_customer_number;
    bool m_last_customer_number_isSet;
    bool m_last_customer_number_isValid;

    QDateTime m_last_flextime_calculation_end_time;
    bool m_last_flextime_calculation_end_time_isSet;
    bool m_last_flextime_calculation_end_time_isValid;

    OAIUserWithFirstNameLastNameModel m_last_flextime_calculation_user;
    bool m_last_flextime_calculation_user_isSet;
    bool m_last_flextime_calculation_user_isValid;

    qint64 m_last_invoice_number;
    bool m_last_invoice_number_isSet;
    bool m_last_invoice_number_isValid;

    qint64 m_last_project_number;
    bool m_last_project_number_isSet;
    bool m_last_project_number_isValid;

    qint64 m_last_purchase_order_number;
    bool m_last_purchase_order_number_isSet;
    bool m_last_purchase_order_number_isValid;

    qint64 m_last_travel_reimbursement_number;
    bool m_last_travel_reimbursement_number_isSet;
    bool m_last_travel_reimbursement_number_isValid;

    double m_max_flextime_balance_limit;
    bool m_max_flextime_balance_limit_isSet;
    bool m_max_flextime_balance_limit_isValid;

    double m_min_flextime_balance_limit;
    bool m_min_flextime_balance_limit_isSet;
    bool m_min_flextime_balance_limit_isValid;

    qint64 m_next_customer_number;
    bool m_next_customer_number_isSet;
    bool m_next_customer_number_isValid;

    qint32 m_next_invoice_number;
    bool m_next_invoice_number_isSet;
    bool m_next_invoice_number_isValid;

    qint64 m_next_project_number;
    bool m_next_project_number_isSet;
    bool m_next_project_number_isValid;

    qint32 m_next_purchase_order_number;
    bool m_next_purchase_order_number_isSet;
    bool m_next_purchase_order_number_isValid;

    qint32 m_next_travel_reimbursement_number;
    bool m_next_travel_reimbursement_number_isSet;
    bool m_next_travel_reimbursement_number_isValid;

    double m_overdue_interest;
    bool m_overdue_interest_isSet;
    bool m_overdue_interest_isValid;

    OAIReferenceNumberDisplay m_payment_reference_number_display_setting;
    bool m_payment_reference_number_display_setting_isSet;
    bool m_payment_reference_number_display_setting_isValid;

    qint32 m_payment_term;
    bool m_payment_term_isSet;
    bool m_payment_term_isValid;

    OAIProjectNameDisplayFormatOptions m_project_name_display_format_setting;
    bool m_project_name_display_format_setting_isSet;
    bool m_project_name_display_format_setting_isValid;

    OAIProjectNameDisplayOptions m_project_name_display_setting;
    bool m_project_name_display_setting_isSet;
    bool m_project_name_display_setting_isValid;

    QString m_purchase_order_number_prefix;
    bool m_purchase_order_number_prefix_isSet;
    bool m_purchase_order_number_prefix_isValid;

    OAIQuickSearchOptions m_quick_search_setting;
    bool m_quick_search_setting_isSet;
    bool m_quick_search_setting_isValid;

    bool m_set_credit_note_invoice_number;
    bool m_set_credit_note_invoice_number_isSet;
    bool m_set_credit_note_invoice_number_isValid;

    QDate m_travel_entry_closing_date;
    bool m_travel_entry_closing_date_isSet;
    bool m_travel_entry_closing_date_isValid;

    QDate m_travel_expense_reimbursement_start_date;
    bool m_travel_expense_reimbursement_start_date_isSet;
    bool m_travel_expense_reimbursement_start_date_isValid;

    QString m_travel_reimbursement_instructions;
    bool m_travel_reimbursement_instructions_isSet;
    bool m_travel_reimbursement_instructions_isValid;

    bool m_unique_identifier_for_products_and_worktypes;
    bool m_unique_identifier_for_products_and_worktypes_isSet;
    bool m_unique_identifier_for_products_and_worktypes_isValid;

    OAIWorkHourApprovalMode m_work_hour_approval_mode;
    bool m_work_hour_approval_mode_isSet;
    bool m_work_hour_approval_mode_isValid;

    OAIEntryFormat m_work_hour_entry_format;
    bool m_work_hour_entry_format_isSet;
    bool m_work_hour_entry_format_isValid;

    QList<OAIWorkweek> m_work_week;
    bool m_work_week_isSet;
    bool m_work_week_isValid;

    QDate m_worktime_entry_closing_date;
    bool m_worktime_entry_closing_date_isSet;
    bool m_worktime_entry_closing_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrganizationSettingsModel)

#endif // OAIOrganizationSettingsModel_H
