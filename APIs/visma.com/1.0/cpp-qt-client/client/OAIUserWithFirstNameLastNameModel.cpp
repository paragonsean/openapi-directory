/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserWithFirstNameLastNameModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserWithFirstNameLastNameModel::OAIUserWithFirstNameLastNameModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserWithFirstNameLastNameModel::OAIUserWithFirstNameLastNameModel() {
    this->initializeModel();
}

OAIUserWithFirstNameLastNameModel::~OAIUserWithFirstNameLastNameModel() {}

void OAIUserWithFirstNameLastNameModel::initializeModel() {

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_guid_isSet = false;
    m_guid_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;
}

void OAIUserWithFirstNameLastNameModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserWithFirstNameLastNameModel::fromJsonObject(QJsonObject json) {

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_guid_isValid = ::OpenAPI::fromJsonValue(m_guid, json[QString("guid")]);
    m_guid_isSet = !json[QString("guid")].isNull() && m_guid_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;
}

QString OAIUserWithFirstNameLastNameModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserWithFirstNameLastNameModel::asJsonObject() const {
    QJsonObject obj;
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_guid_isSet) {
        obj.insert(QString("guid"), ::OpenAPI::toJsonValue(m_guid));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    return obj;
}

QString OAIUserWithFirstNameLastNameModel::getFirstName() const {
    return m_first_name;
}
void OAIUserWithFirstNameLastNameModel::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIUserWithFirstNameLastNameModel::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIUserWithFirstNameLastNameModel::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIUserWithFirstNameLastNameModel::getGuid() const {
    return m_guid;
}
void OAIUserWithFirstNameLastNameModel::setGuid(const QString &guid) {
    m_guid = guid;
    m_guid_isSet = true;
}

bool OAIUserWithFirstNameLastNameModel::is_guid_Set() const{
    return m_guid_isSet;
}

bool OAIUserWithFirstNameLastNameModel::is_guid_Valid() const{
    return m_guid_isValid;
}

QString OAIUserWithFirstNameLastNameModel::getLastName() const {
    return m_last_name;
}
void OAIUserWithFirstNameLastNameModel::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIUserWithFirstNameLastNameModel::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIUserWithFirstNameLastNameModel::is_last_name_Valid() const{
    return m_last_name_isValid;
}

bool OAIUserWithFirstNameLastNameModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_guid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserWithFirstNameLastNameModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_guid_isValid && true;
}

} // namespace OpenAPI
