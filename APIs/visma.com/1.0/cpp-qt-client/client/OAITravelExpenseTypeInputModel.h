/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITravelExpenseTypeInputModel.h
 *
 * 
 */

#ifndef OAITravelExpenseTypeInputModel_H
#define OAITravelExpenseTypeInputModel_H

#include <QJsonObject>

#include "OAIExpensesClass.h"
#include "OAIMoneyInputModelWithNullableAmount.h"
#include "OAISimpleInputModel.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISimpleInputModel;
class OAIMoneyInputModelWithNullableAmount;

class OAITravelExpenseTypeInputModel : public OAIObject {
public:
    OAITravelExpenseTypeInputModel();
    OAITravelExpenseTypeInputModel(QString json);
    ~OAITravelExpenseTypeInputModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    OAISimpleInputModel getCostAccount() const;
    void setCostAccount(const OAISimpleInputModel &cost_account);
    bool is_cost_account_Set() const;
    bool is_cost_account_Valid() const;

    OAIExpensesClass getExpenseClass() const;
    void setExpenseClass(const OAIExpensesClass &expense_class);
    bool is_expense_class_Set() const;
    bool is_expense_class_Valid() const;

    bool isIncludeTime() const;
    void setIncludeTime(const bool &include_time);
    bool is_include_time_Set() const;
    bool is_include_time_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    QString getMeasurementUnit() const;
    void setMeasurementUnit(const QString &measurement_unit);
    bool is_measurement_unit_Set() const;
    bool is_measurement_unit_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAISimpleInputModel getProductCategory() const;
    void setProductCategory(const OAISimpleInputModel &product_category);
    bool is_product_category_Set() const;
    bool is_product_category_Valid() const;

    double getPurchaseVatRate() const;
    void setPurchaseVatRate(const double &purchase_vat_rate);
    bool is_purchase_vat_rate_Set() const;
    bool is_purchase_vat_rate_Valid() const;

    OAISimpleInputModel getSalesAccount() const;
    void setSalesAccount(const OAISimpleInputModel &sales_account);
    bool is_sales_account_Set() const;
    bool is_sales_account_Valid() const;

    OAIMoneyInputModelWithNullableAmount getUnitCost() const;
    void setUnitCost(const OAIMoneyInputModelWithNullableAmount &unit_cost);
    bool is_unit_cost_Set() const;
    bool is_unit_cost_Valid() const;

    double getVatRate() const;
    void setVatRate(const double &vat_rate);
    bool is_vat_rate_Set() const;
    bool is_vat_rate_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    OAISimpleInputModel m_cost_account;
    bool m_cost_account_isSet;
    bool m_cost_account_isValid;

    OAIExpensesClass m_expense_class;
    bool m_expense_class_isSet;
    bool m_expense_class_isValid;

    bool m_include_time;
    bool m_include_time_isSet;
    bool m_include_time_isValid;

    bool m_is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    QString m_measurement_unit;
    bool m_measurement_unit_isSet;
    bool m_measurement_unit_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAISimpleInputModel m_product_category;
    bool m_product_category_isSet;
    bool m_product_category_isValid;

    double m_purchase_vat_rate;
    bool m_purchase_vat_rate_isSet;
    bool m_purchase_vat_rate_isValid;

    OAISimpleInputModel m_sales_account;
    bool m_sales_account_isSet;
    bool m_sales_account_isValid;

    OAIMoneyInputModelWithNullableAmount m_unit_cost;
    bool m_unit_cost_isSet;
    bool m_unit_cost_isValid;

    double m_vat_rate;
    bool m_vat_rate_isSet;
    bool m_vat_rate_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITravelExpenseTypeInputModel)

#endif // OAITravelExpenseTypeInputModel_H
