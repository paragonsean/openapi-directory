/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateInvoiceModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateInvoiceModel::OAICreateInvoiceModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateInvoiceModel::OAICreateInvoiceModel() {
    this->initializeModel();
}

OAICreateInvoiceModel::~OAICreateInvoiceModel() {}

void OAICreateInvoiceModel::initializeModel() {

    m_billing_customer_guid_isSet = false;
    m_billing_customer_guid_isValid = false;

    m_date_isSet = false;
    m_date_isValid = false;

    m_group_projects_isSet = false;
    m_group_projects_isValid = false;

    m_invoice_status_guid_isSet = false;
    m_invoice_status_guid_isValid = false;

    m_projects_isSet = false;
    m_projects_isValid = false;
}

void OAICreateInvoiceModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateInvoiceModel::fromJsonObject(QJsonObject json) {

    m_billing_customer_guid_isValid = ::OpenAPI::fromJsonValue(m_billing_customer_guid, json[QString("billingCustomerGuid")]);
    m_billing_customer_guid_isSet = !json[QString("billingCustomerGuid")].isNull() && m_billing_customer_guid_isValid;

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_group_projects_isValid = ::OpenAPI::fromJsonValue(m_group_projects, json[QString("groupProjects")]);
    m_group_projects_isSet = !json[QString("groupProjects")].isNull() && m_group_projects_isValid;

    m_invoice_status_guid_isValid = ::OpenAPI::fromJsonValue(m_invoice_status_guid, json[QString("invoiceStatusGuid")]);
    m_invoice_status_guid_isSet = !json[QString("invoiceStatusGuid")].isNull() && m_invoice_status_guid_isValid;

    m_projects_isValid = ::OpenAPI::fromJsonValue(m_projects, json[QString("projects")]);
    m_projects_isSet = !json[QString("projects")].isNull() && m_projects_isValid;
}

QString OAICreateInvoiceModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateInvoiceModel::asJsonObject() const {
    QJsonObject obj;
    if (m_billing_customer_guid_isSet) {
        obj.insert(QString("billingCustomerGuid"), ::OpenAPI::toJsonValue(m_billing_customer_guid));
    }
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_group_projects_isSet) {
        obj.insert(QString("groupProjects"), ::OpenAPI::toJsonValue(m_group_projects));
    }
    if (m_invoice_status_guid_isSet) {
        obj.insert(QString("invoiceStatusGuid"), ::OpenAPI::toJsonValue(m_invoice_status_guid));
    }
    if (m_projects.size() > 0) {
        obj.insert(QString("projects"), ::OpenAPI::toJsonValue(m_projects));
    }
    return obj;
}

QString OAICreateInvoiceModel::getBillingCustomerGuid() const {
    return m_billing_customer_guid;
}
void OAICreateInvoiceModel::setBillingCustomerGuid(const QString &billing_customer_guid) {
    m_billing_customer_guid = billing_customer_guid;
    m_billing_customer_guid_isSet = true;
}

bool OAICreateInvoiceModel::is_billing_customer_guid_Set() const{
    return m_billing_customer_guid_isSet;
}

bool OAICreateInvoiceModel::is_billing_customer_guid_Valid() const{
    return m_billing_customer_guid_isValid;
}

QDate OAICreateInvoiceModel::getDate() const {
    return m_date;
}
void OAICreateInvoiceModel::setDate(const QDate &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAICreateInvoiceModel::is_date_Set() const{
    return m_date_isSet;
}

bool OAICreateInvoiceModel::is_date_Valid() const{
    return m_date_isValid;
}

bool OAICreateInvoiceModel::isGroupProjects() const {
    return m_group_projects;
}
void OAICreateInvoiceModel::setGroupProjects(const bool &group_projects) {
    m_group_projects = group_projects;
    m_group_projects_isSet = true;
}

bool OAICreateInvoiceModel::is_group_projects_Set() const{
    return m_group_projects_isSet;
}

bool OAICreateInvoiceModel::is_group_projects_Valid() const{
    return m_group_projects_isValid;
}

QString OAICreateInvoiceModel::getInvoiceStatusGuid() const {
    return m_invoice_status_guid;
}
void OAICreateInvoiceModel::setInvoiceStatusGuid(const QString &invoice_status_guid) {
    m_invoice_status_guid = invoice_status_guid;
    m_invoice_status_guid_isSet = true;
}

bool OAICreateInvoiceModel::is_invoice_status_guid_Set() const{
    return m_invoice_status_guid_isSet;
}

bool OAICreateInvoiceModel::is_invoice_status_guid_Valid() const{
    return m_invoice_status_guid_isValid;
}

QList<OAICreateInvoiceProjectModel> OAICreateInvoiceModel::getProjects() const {
    return m_projects;
}
void OAICreateInvoiceModel::setProjects(const QList<OAICreateInvoiceProjectModel> &projects) {
    m_projects = projects;
    m_projects_isSet = true;
}

bool OAICreateInvoiceModel::is_projects_Set() const{
    return m_projects_isSet;
}

bool OAICreateInvoiceModel::is_projects_Valid() const{
    return m_projects_isValid;
}

bool OAICreateInvoiceModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_billing_customer_guid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_projects_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_status_guid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_projects.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateInvoiceModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_projects_isValid && true;
}

} // namespace OpenAPI
