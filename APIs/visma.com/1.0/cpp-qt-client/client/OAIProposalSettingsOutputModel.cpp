/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProposalSettingsOutputModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProposalSettingsOutputModel::OAIProposalSettingsOutputModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProposalSettingsOutputModel::OAIProposalSettingsOutputModel() {
    this->initializeModel();
}

OAIProposalSettingsOutputModel::~OAIProposalSettingsOutputModel() {}

void OAIProposalSettingsOutputModel::initializeModel() {

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_created_date_time_isSet = false;
    m_created_date_time_isValid = false;

    m_guid_isSet = false;
    m_guid_isValid = false;

    m_is_tax_free_isSet = false;
    m_is_tax_free_isValid = false;

    m_last_updated_by_isSet = false;
    m_last_updated_by_isValid = false;

    m_last_updated_date_time_isSet = false;
    m_last_updated_date_time_isValid = false;

    m_print_total_in_pdf_isSet = false;
    m_print_total_in_pdf_isValid = false;

    m_show_billing_contact_isSet = false;
    m_show_billing_contact_isValid = false;

    m_show_billing_details_isSet = false;
    m_show_billing_details_isValid = false;

    m_show_gantt_chart_isSet = false;
    m_show_gantt_chart_isValid = false;

    m_show_order_number_isSet = false;
    m_show_order_number_isValid = false;

    m_show_our_reference_isSet = false;
    m_show_our_reference_isValid = false;

    m_show_payment_terms_isSet = false;
    m_show_payment_terms_isValid = false;

    m_show_project_members_isSet = false;
    m_show_project_members_isValid = false;

    m_show_project_plan_isSet = false;
    m_show_project_plan_isValid = false;

    m_show_quantity_isSet = false;
    m_show_quantity_isValid = false;

    m_show_total_price_isSet = false;
    m_show_total_price_isValid = false;

    m_show_treeview_isSet = false;
    m_show_treeview_isValid = false;

    m_show_unit_isSet = false;
    m_show_unit_isValid = false;

    m_show_unit_price_isSet = false;
    m_show_unit_price_isValid = false;

    m_show_your_reference_isSet = false;
    m_show_your_reference_isValid = false;

    m_style_isSet = false;
    m_style_isValid = false;
}

void OAIProposalSettingsOutputModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProposalSettingsOutputModel::fromJsonObject(QJsonObject json) {

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("createdBy")]);
    m_created_by_isSet = !json[QString("createdBy")].isNull() && m_created_by_isValid;

    m_created_date_time_isValid = ::OpenAPI::fromJsonValue(m_created_date_time, json[QString("createdDateTime")]);
    m_created_date_time_isSet = !json[QString("createdDateTime")].isNull() && m_created_date_time_isValid;

    m_guid_isValid = ::OpenAPI::fromJsonValue(m_guid, json[QString("guid")]);
    m_guid_isSet = !json[QString("guid")].isNull() && m_guid_isValid;

    m_is_tax_free_isValid = ::OpenAPI::fromJsonValue(m_is_tax_free, json[QString("isTaxFree")]);
    m_is_tax_free_isSet = !json[QString("isTaxFree")].isNull() && m_is_tax_free_isValid;

    m_last_updated_by_isValid = ::OpenAPI::fromJsonValue(m_last_updated_by, json[QString("lastUpdatedBy")]);
    m_last_updated_by_isSet = !json[QString("lastUpdatedBy")].isNull() && m_last_updated_by_isValid;

    m_last_updated_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_updated_date_time, json[QString("lastUpdatedDateTime")]);
    m_last_updated_date_time_isSet = !json[QString("lastUpdatedDateTime")].isNull() && m_last_updated_date_time_isValid;

    m_print_total_in_pdf_isValid = ::OpenAPI::fromJsonValue(m_print_total_in_pdf, json[QString("printTotalInPdf")]);
    m_print_total_in_pdf_isSet = !json[QString("printTotalInPdf")].isNull() && m_print_total_in_pdf_isValid;

    m_show_billing_contact_isValid = ::OpenAPI::fromJsonValue(m_show_billing_contact, json[QString("showBillingContact")]);
    m_show_billing_contact_isSet = !json[QString("showBillingContact")].isNull() && m_show_billing_contact_isValid;

    m_show_billing_details_isValid = ::OpenAPI::fromJsonValue(m_show_billing_details, json[QString("showBillingDetails")]);
    m_show_billing_details_isSet = !json[QString("showBillingDetails")].isNull() && m_show_billing_details_isValid;

    m_show_gantt_chart_isValid = ::OpenAPI::fromJsonValue(m_show_gantt_chart, json[QString("showGanttChart")]);
    m_show_gantt_chart_isSet = !json[QString("showGanttChart")].isNull() && m_show_gantt_chart_isValid;

    m_show_order_number_isValid = ::OpenAPI::fromJsonValue(m_show_order_number, json[QString("showOrderNumber")]);
    m_show_order_number_isSet = !json[QString("showOrderNumber")].isNull() && m_show_order_number_isValid;

    m_show_our_reference_isValid = ::OpenAPI::fromJsonValue(m_show_our_reference, json[QString("showOurReference")]);
    m_show_our_reference_isSet = !json[QString("showOurReference")].isNull() && m_show_our_reference_isValid;

    m_show_payment_terms_isValid = ::OpenAPI::fromJsonValue(m_show_payment_terms, json[QString("showPaymentTerms")]);
    m_show_payment_terms_isSet = !json[QString("showPaymentTerms")].isNull() && m_show_payment_terms_isValid;

    m_show_project_members_isValid = ::OpenAPI::fromJsonValue(m_show_project_members, json[QString("showProjectMembers")]);
    m_show_project_members_isSet = !json[QString("showProjectMembers")].isNull() && m_show_project_members_isValid;

    m_show_project_plan_isValid = ::OpenAPI::fromJsonValue(m_show_project_plan, json[QString("showProjectPlan")]);
    m_show_project_plan_isSet = !json[QString("showProjectPlan")].isNull() && m_show_project_plan_isValid;

    m_show_quantity_isValid = ::OpenAPI::fromJsonValue(m_show_quantity, json[QString("showQuantity")]);
    m_show_quantity_isSet = !json[QString("showQuantity")].isNull() && m_show_quantity_isValid;

    m_show_total_price_isValid = ::OpenAPI::fromJsonValue(m_show_total_price, json[QString("showTotalPrice")]);
    m_show_total_price_isSet = !json[QString("showTotalPrice")].isNull() && m_show_total_price_isValid;

    m_show_treeview_isValid = ::OpenAPI::fromJsonValue(m_show_treeview, json[QString("showTreeview")]);
    m_show_treeview_isSet = !json[QString("showTreeview")].isNull() && m_show_treeview_isValid;

    m_show_unit_isValid = ::OpenAPI::fromJsonValue(m_show_unit, json[QString("showUnit")]);
    m_show_unit_isSet = !json[QString("showUnit")].isNull() && m_show_unit_isValid;

    m_show_unit_price_isValid = ::OpenAPI::fromJsonValue(m_show_unit_price, json[QString("showUnitPrice")]);
    m_show_unit_price_isSet = !json[QString("showUnitPrice")].isNull() && m_show_unit_price_isValid;

    m_show_your_reference_isValid = ::OpenAPI::fromJsonValue(m_show_your_reference, json[QString("showYourReference")]);
    m_show_your_reference_isSet = !json[QString("showYourReference")].isNull() && m_show_your_reference_isValid;

    m_style_isValid = ::OpenAPI::fromJsonValue(m_style, json[QString("style")]);
    m_style_isSet = !json[QString("style")].isNull() && m_style_isValid;
}

QString OAIProposalSettingsOutputModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProposalSettingsOutputModel::asJsonObject() const {
    QJsonObject obj;
    if (m_created_by.isSet()) {
        obj.insert(QString("createdBy"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_created_date_time_isSet) {
        obj.insert(QString("createdDateTime"), ::OpenAPI::toJsonValue(m_created_date_time));
    }
    if (m_guid_isSet) {
        obj.insert(QString("guid"), ::OpenAPI::toJsonValue(m_guid));
    }
    if (m_is_tax_free_isSet) {
        obj.insert(QString("isTaxFree"), ::OpenAPI::toJsonValue(m_is_tax_free));
    }
    if (m_last_updated_by.isSet()) {
        obj.insert(QString("lastUpdatedBy"), ::OpenAPI::toJsonValue(m_last_updated_by));
    }
    if (m_last_updated_date_time_isSet) {
        obj.insert(QString("lastUpdatedDateTime"), ::OpenAPI::toJsonValue(m_last_updated_date_time));
    }
    if (m_print_total_in_pdf.isSet()) {
        obj.insert(QString("printTotalInPdf"), ::OpenAPI::toJsonValue(m_print_total_in_pdf));
    }
    if (m_show_billing_contact_isSet) {
        obj.insert(QString("showBillingContact"), ::OpenAPI::toJsonValue(m_show_billing_contact));
    }
    if (m_show_billing_details_isSet) {
        obj.insert(QString("showBillingDetails"), ::OpenAPI::toJsonValue(m_show_billing_details));
    }
    if (m_show_gantt_chart_isSet) {
        obj.insert(QString("showGanttChart"), ::OpenAPI::toJsonValue(m_show_gantt_chart));
    }
    if (m_show_order_number_isSet) {
        obj.insert(QString("showOrderNumber"), ::OpenAPI::toJsonValue(m_show_order_number));
    }
    if (m_show_our_reference_isSet) {
        obj.insert(QString("showOurReference"), ::OpenAPI::toJsonValue(m_show_our_reference));
    }
    if (m_show_payment_terms_isSet) {
        obj.insert(QString("showPaymentTerms"), ::OpenAPI::toJsonValue(m_show_payment_terms));
    }
    if (m_show_project_members_isSet) {
        obj.insert(QString("showProjectMembers"), ::OpenAPI::toJsonValue(m_show_project_members));
    }
    if (m_show_project_plan_isSet) {
        obj.insert(QString("showProjectPlan"), ::OpenAPI::toJsonValue(m_show_project_plan));
    }
    if (m_show_quantity_isSet) {
        obj.insert(QString("showQuantity"), ::OpenAPI::toJsonValue(m_show_quantity));
    }
    if (m_show_total_price_isSet) {
        obj.insert(QString("showTotalPrice"), ::OpenAPI::toJsonValue(m_show_total_price));
    }
    if (m_show_treeview_isSet) {
        obj.insert(QString("showTreeview"), ::OpenAPI::toJsonValue(m_show_treeview));
    }
    if (m_show_unit_isSet) {
        obj.insert(QString("showUnit"), ::OpenAPI::toJsonValue(m_show_unit));
    }
    if (m_show_unit_price_isSet) {
        obj.insert(QString("showUnitPrice"), ::OpenAPI::toJsonValue(m_show_unit_price));
    }
    if (m_show_your_reference_isSet) {
        obj.insert(QString("showYourReference"), ::OpenAPI::toJsonValue(m_show_your_reference));
    }
    if (m_style.isSet()) {
        obj.insert(QString("style"), ::OpenAPI::toJsonValue(m_style));
    }
    return obj;
}

OAIUserWithFirstNameLastNameAndPhotoFileModel OAIProposalSettingsOutputModel::getCreatedBy() const {
    return m_created_by;
}
void OAIProposalSettingsOutputModel::setCreatedBy(const OAIUserWithFirstNameLastNameAndPhotoFileModel &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIProposalSettingsOutputModel::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QDateTime OAIProposalSettingsOutputModel::getCreatedDateTime() const {
    return m_created_date_time;
}
void OAIProposalSettingsOutputModel::setCreatedDateTime(const QDateTime &created_date_time) {
    m_created_date_time = created_date_time;
    m_created_date_time_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_created_date_time_Set() const{
    return m_created_date_time_isSet;
}

bool OAIProposalSettingsOutputModel::is_created_date_time_Valid() const{
    return m_created_date_time_isValid;
}

QString OAIProposalSettingsOutputModel::getGuid() const {
    return m_guid;
}
void OAIProposalSettingsOutputModel::setGuid(const QString &guid) {
    m_guid = guid;
    m_guid_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_guid_Set() const{
    return m_guid_isSet;
}

bool OAIProposalSettingsOutputModel::is_guid_Valid() const{
    return m_guid_isValid;
}

bool OAIProposalSettingsOutputModel::isIsTaxFree() const {
    return m_is_tax_free;
}
void OAIProposalSettingsOutputModel::setIsTaxFree(const bool &is_tax_free) {
    m_is_tax_free = is_tax_free;
    m_is_tax_free_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_is_tax_free_Set() const{
    return m_is_tax_free_isSet;
}

bool OAIProposalSettingsOutputModel::is_is_tax_free_Valid() const{
    return m_is_tax_free_isValid;
}

OAIUserWithFirstNameLastNameAndPhotoFileModel OAIProposalSettingsOutputModel::getLastUpdatedBy() const {
    return m_last_updated_by;
}
void OAIProposalSettingsOutputModel::setLastUpdatedBy(const OAIUserWithFirstNameLastNameAndPhotoFileModel &last_updated_by) {
    m_last_updated_by = last_updated_by;
    m_last_updated_by_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_last_updated_by_Set() const{
    return m_last_updated_by_isSet;
}

bool OAIProposalSettingsOutputModel::is_last_updated_by_Valid() const{
    return m_last_updated_by_isValid;
}

QDateTime OAIProposalSettingsOutputModel::getLastUpdatedDateTime() const {
    return m_last_updated_date_time;
}
void OAIProposalSettingsOutputModel::setLastUpdatedDateTime(const QDateTime &last_updated_date_time) {
    m_last_updated_date_time = last_updated_date_time;
    m_last_updated_date_time_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_last_updated_date_time_Set() const{
    return m_last_updated_date_time_isSet;
}

bool OAIProposalSettingsOutputModel::is_last_updated_date_time_Valid() const{
    return m_last_updated_date_time_isValid;
}

OAIPrintToPdf OAIProposalSettingsOutputModel::getPrintTotalInPdf() const {
    return m_print_total_in_pdf;
}
void OAIProposalSettingsOutputModel::setPrintTotalInPdf(const OAIPrintToPdf &print_total_in_pdf) {
    m_print_total_in_pdf = print_total_in_pdf;
    m_print_total_in_pdf_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_print_total_in_pdf_Set() const{
    return m_print_total_in_pdf_isSet;
}

bool OAIProposalSettingsOutputModel::is_print_total_in_pdf_Valid() const{
    return m_print_total_in_pdf_isValid;
}

bool OAIProposalSettingsOutputModel::isShowBillingContact() const {
    return m_show_billing_contact;
}
void OAIProposalSettingsOutputModel::setShowBillingContact(const bool &show_billing_contact) {
    m_show_billing_contact = show_billing_contact;
    m_show_billing_contact_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_show_billing_contact_Set() const{
    return m_show_billing_contact_isSet;
}

bool OAIProposalSettingsOutputModel::is_show_billing_contact_Valid() const{
    return m_show_billing_contact_isValid;
}

bool OAIProposalSettingsOutputModel::isShowBillingDetails() const {
    return m_show_billing_details;
}
void OAIProposalSettingsOutputModel::setShowBillingDetails(const bool &show_billing_details) {
    m_show_billing_details = show_billing_details;
    m_show_billing_details_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_show_billing_details_Set() const{
    return m_show_billing_details_isSet;
}

bool OAIProposalSettingsOutputModel::is_show_billing_details_Valid() const{
    return m_show_billing_details_isValid;
}

bool OAIProposalSettingsOutputModel::isShowGanttChart() const {
    return m_show_gantt_chart;
}
void OAIProposalSettingsOutputModel::setShowGanttChart(const bool &show_gantt_chart) {
    m_show_gantt_chart = show_gantt_chart;
    m_show_gantt_chart_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_show_gantt_chart_Set() const{
    return m_show_gantt_chart_isSet;
}

bool OAIProposalSettingsOutputModel::is_show_gantt_chart_Valid() const{
    return m_show_gantt_chart_isValid;
}

bool OAIProposalSettingsOutputModel::isShowOrderNumber() const {
    return m_show_order_number;
}
void OAIProposalSettingsOutputModel::setShowOrderNumber(const bool &show_order_number) {
    m_show_order_number = show_order_number;
    m_show_order_number_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_show_order_number_Set() const{
    return m_show_order_number_isSet;
}

bool OAIProposalSettingsOutputModel::is_show_order_number_Valid() const{
    return m_show_order_number_isValid;
}

bool OAIProposalSettingsOutputModel::isShowOurReference() const {
    return m_show_our_reference;
}
void OAIProposalSettingsOutputModel::setShowOurReference(const bool &show_our_reference) {
    m_show_our_reference = show_our_reference;
    m_show_our_reference_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_show_our_reference_Set() const{
    return m_show_our_reference_isSet;
}

bool OAIProposalSettingsOutputModel::is_show_our_reference_Valid() const{
    return m_show_our_reference_isValid;
}

bool OAIProposalSettingsOutputModel::isShowPaymentTerms() const {
    return m_show_payment_terms;
}
void OAIProposalSettingsOutputModel::setShowPaymentTerms(const bool &show_payment_terms) {
    m_show_payment_terms = show_payment_terms;
    m_show_payment_terms_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_show_payment_terms_Set() const{
    return m_show_payment_terms_isSet;
}

bool OAIProposalSettingsOutputModel::is_show_payment_terms_Valid() const{
    return m_show_payment_terms_isValid;
}

bool OAIProposalSettingsOutputModel::isShowProjectMembers() const {
    return m_show_project_members;
}
void OAIProposalSettingsOutputModel::setShowProjectMembers(const bool &show_project_members) {
    m_show_project_members = show_project_members;
    m_show_project_members_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_show_project_members_Set() const{
    return m_show_project_members_isSet;
}

bool OAIProposalSettingsOutputModel::is_show_project_members_Valid() const{
    return m_show_project_members_isValid;
}

bool OAIProposalSettingsOutputModel::isShowProjectPlan() const {
    return m_show_project_plan;
}
void OAIProposalSettingsOutputModel::setShowProjectPlan(const bool &show_project_plan) {
    m_show_project_plan = show_project_plan;
    m_show_project_plan_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_show_project_plan_Set() const{
    return m_show_project_plan_isSet;
}

bool OAIProposalSettingsOutputModel::is_show_project_plan_Valid() const{
    return m_show_project_plan_isValid;
}

bool OAIProposalSettingsOutputModel::isShowQuantity() const {
    return m_show_quantity;
}
void OAIProposalSettingsOutputModel::setShowQuantity(const bool &show_quantity) {
    m_show_quantity = show_quantity;
    m_show_quantity_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_show_quantity_Set() const{
    return m_show_quantity_isSet;
}

bool OAIProposalSettingsOutputModel::is_show_quantity_Valid() const{
    return m_show_quantity_isValid;
}

bool OAIProposalSettingsOutputModel::isShowTotalPrice() const {
    return m_show_total_price;
}
void OAIProposalSettingsOutputModel::setShowTotalPrice(const bool &show_total_price) {
    m_show_total_price = show_total_price;
    m_show_total_price_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_show_total_price_Set() const{
    return m_show_total_price_isSet;
}

bool OAIProposalSettingsOutputModel::is_show_total_price_Valid() const{
    return m_show_total_price_isValid;
}

bool OAIProposalSettingsOutputModel::isShowTreeview() const {
    return m_show_treeview;
}
void OAIProposalSettingsOutputModel::setShowTreeview(const bool &show_treeview) {
    m_show_treeview = show_treeview;
    m_show_treeview_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_show_treeview_Set() const{
    return m_show_treeview_isSet;
}

bool OAIProposalSettingsOutputModel::is_show_treeview_Valid() const{
    return m_show_treeview_isValid;
}

bool OAIProposalSettingsOutputModel::isShowUnit() const {
    return m_show_unit;
}
void OAIProposalSettingsOutputModel::setShowUnit(const bool &show_unit) {
    m_show_unit = show_unit;
    m_show_unit_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_show_unit_Set() const{
    return m_show_unit_isSet;
}

bool OAIProposalSettingsOutputModel::is_show_unit_Valid() const{
    return m_show_unit_isValid;
}

bool OAIProposalSettingsOutputModel::isShowUnitPrice() const {
    return m_show_unit_price;
}
void OAIProposalSettingsOutputModel::setShowUnitPrice(const bool &show_unit_price) {
    m_show_unit_price = show_unit_price;
    m_show_unit_price_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_show_unit_price_Set() const{
    return m_show_unit_price_isSet;
}

bool OAIProposalSettingsOutputModel::is_show_unit_price_Valid() const{
    return m_show_unit_price_isValid;
}

bool OAIProposalSettingsOutputModel::isShowYourReference() const {
    return m_show_your_reference;
}
void OAIProposalSettingsOutputModel::setShowYourReference(const bool &show_your_reference) {
    m_show_your_reference = show_your_reference;
    m_show_your_reference_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_show_your_reference_Set() const{
    return m_show_your_reference_isSet;
}

bool OAIProposalSettingsOutputModel::is_show_your_reference_Valid() const{
    return m_show_your_reference_isValid;
}

OAIInvoiceSkin OAIProposalSettingsOutputModel::getStyle() const {
    return m_style;
}
void OAIProposalSettingsOutputModel::setStyle(const OAIInvoiceSkin &style) {
    m_style = style;
    m_style_isSet = true;
}

bool OAIProposalSettingsOutputModel::is_style_Set() const{
    return m_style_isSet;
}

bool OAIProposalSettingsOutputModel::is_style_Valid() const{
    return m_style_isValid;
}

bool OAIProposalSettingsOutputModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_guid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_tax_free_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_print_total_in_pdf.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_billing_contact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_billing_details_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_gantt_chart_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_order_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_our_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_payment_terms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_project_members_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_project_plan_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_total_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_treeview_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_unit_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_your_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_style.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProposalSettingsOutputModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
