/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoiceOutputModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoiceOutputModel::OAIInvoiceOutputModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoiceOutputModel::OAIInvoiceOutputModel() {
    this->initializeModel();
}

OAIInvoiceOutputModel::~OAIInvoiceOutputModel() {}

void OAIInvoiceOutputModel::initializeModel() {

    m_billing_customer_isSet = false;
    m_billing_customer_isValid = false;

    m_can_be_deleted_isSet = false;
    m_can_be_deleted_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_created_date_time_isSet = false;
    m_created_date_time_isValid = false;

    m_credit_note_invoice_isSet = false;
    m_credit_note_invoice_isValid = false;

    m_culture_isSet = false;
    m_culture_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_currency_rate_isSet = false;
    m_currency_rate_isValid = false;

    m_customer_isSet = false;
    m_customer_isValid = false;

    m_date_isSet = false;
    m_date_isValid = false;

    m_due_date_isSet = false;
    m_due_date_isValid = false;

    m_entry_date_isSet = false;
    m_entry_date_isValid = false;

    m_flat_rates_total_excluding_tax_isSet = false;
    m_flat_rates_total_excluding_tax_isValid = false;

    m_free_text1_isSet = false;
    m_free_text1_isValid = false;

    m_free_text2_isSet = false;
    m_free_text2_isValid = false;

    m_guid_isSet = false;
    m_guid_isValid = false;

    m_invoice_number_business_unit_guid_isSet = false;
    m_invoice_number_business_unit_guid_isValid = false;

    m_invoice_template_isSet = false;
    m_invoice_template_isValid = false;

    m_is_credit_note_isSet = false;
    m_is_credit_note_isValid = false;

    m_language_isSet = false;
    m_language_isValid = false;

    m_last_updated_by_isSet = false;
    m_last_updated_by_isValid = false;

    m_last_updated_date_time_isSet = false;
    m_last_updated_date_time_isValid = false;

    m_notes_isSet = false;
    m_notes_isValid = false;

    m_number_isSet = false;
    m_number_isValid = false;

    m_order_number_isSet = false;
    m_order_number_isValid = false;

    m_our_reference_isSet = false;
    m_our_reference_isValid = false;

    m_overdue_interest_isSet = false;
    m_overdue_interest_isValid = false;

    m_payment_date_isSet = false;
    m_payment_date_isValid = false;

    m_payment_term_isSet = false;
    m_payment_term_isValid = false;

    m_project_fees_total_excluding_tax_isSet = false;
    m_project_fees_total_excluding_tax_isValid = false;

    m_project_travel_expenses_total_excluding_tax_isSet = false;
    m_project_travel_expenses_total_excluding_tax_isValid = false;

    m_projects_isSet = false;
    m_projects_isValid = false;

    m_receiver_address_isSet = false;
    m_receiver_address_isValid = false;

    m_receiver_contact_email_isSet = false;
    m_receiver_contact_email_isValid = false;

    m_receiver_contact_guid_isSet = false;
    m_receiver_contact_guid_isValid = false;

    m_receiver_contact_name_isSet = false;
    m_receiver_contact_name_isValid = false;

    m_receiver_customer_name_isSet = false;
    m_receiver_customer_name_isValid = false;

    m_receiver_kvk_number_isSet = false;
    m_receiver_kvk_number_isValid = false;

    m_receiver_vat_number_isSet = false;
    m_receiver_vat_number_isValid = false;

    m_reference_number_isSet = false;
    m_reference_number_isValid = false;

    m_reimburse_invoice_isSet = false;
    m_reimburse_invoice_isValid = false;

    m_sender_address_isSet = false;
    m_sender_address_isValid = false;

    m_sender_contact_guid_isSet = false;
    m_sender_contact_guid_isValid = false;

    m_sender_contact_name_isSet = false;
    m_sender_contact_name_isValid = false;

    m_sender_kvk_number_isSet = false;
    m_sender_kvk_number_isValid = false;

    m_sender_name_isSet = false;
    m_sender_name_isValid = false;

    m_sender_vat_number_isSet = false;
    m_sender_vat_number_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_total_excluding_tax_isSet = false;
    m_total_excluding_tax_isValid = false;

    m_total_including_tax_isSet = false;
    m_total_including_tax_isValid = false;

    m_total_tax_isSet = false;
    m_total_tax_isValid = false;

    m_work_hour_value_added_tax_isSet = false;
    m_work_hour_value_added_tax_isValid = false;

    m_work_hours_quantity_isSet = false;
    m_work_hours_quantity_isValid = false;

    m_work_hours_total_excluding_tax_isSet = false;
    m_work_hours_total_excluding_tax_isValid = false;

    m_your_reference_isSet = false;
    m_your_reference_isValid = false;
}

void OAIInvoiceOutputModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoiceOutputModel::fromJsonObject(QJsonObject json) {

    m_billing_customer_isValid = ::OpenAPI::fromJsonValue(m_billing_customer, json[QString("billingCustomer")]);
    m_billing_customer_isSet = !json[QString("billingCustomer")].isNull() && m_billing_customer_isValid;

    m_can_be_deleted_isValid = ::OpenAPI::fromJsonValue(m_can_be_deleted, json[QString("canBeDeleted")]);
    m_can_be_deleted_isSet = !json[QString("canBeDeleted")].isNull() && m_can_be_deleted_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("createdBy")]);
    m_created_by_isSet = !json[QString("createdBy")].isNull() && m_created_by_isValid;

    m_created_date_time_isValid = ::OpenAPI::fromJsonValue(m_created_date_time, json[QString("createdDateTime")]);
    m_created_date_time_isSet = !json[QString("createdDateTime")].isNull() && m_created_date_time_isValid;

    m_credit_note_invoice_isValid = ::OpenAPI::fromJsonValue(m_credit_note_invoice, json[QString("creditNoteInvoice")]);
    m_credit_note_invoice_isSet = !json[QString("creditNoteInvoice")].isNull() && m_credit_note_invoice_isValid;

    m_culture_isValid = ::OpenAPI::fromJsonValue(m_culture, json[QString("culture")]);
    m_culture_isSet = !json[QString("culture")].isNull() && m_culture_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_currency_rate_isValid = ::OpenAPI::fromJsonValue(m_currency_rate, json[QString("currencyRate")]);
    m_currency_rate_isSet = !json[QString("currencyRate")].isNull() && m_currency_rate_isValid;

    m_customer_isValid = ::OpenAPI::fromJsonValue(m_customer, json[QString("customer")]);
    m_customer_isSet = !json[QString("customer")].isNull() && m_customer_isValid;

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_due_date_isValid = ::OpenAPI::fromJsonValue(m_due_date, json[QString("dueDate")]);
    m_due_date_isSet = !json[QString("dueDate")].isNull() && m_due_date_isValid;

    m_entry_date_isValid = ::OpenAPI::fromJsonValue(m_entry_date, json[QString("entryDate")]);
    m_entry_date_isSet = !json[QString("entryDate")].isNull() && m_entry_date_isValid;

    m_flat_rates_total_excluding_tax_isValid = ::OpenAPI::fromJsonValue(m_flat_rates_total_excluding_tax, json[QString("flatRatesTotalExcludingTax")]);
    m_flat_rates_total_excluding_tax_isSet = !json[QString("flatRatesTotalExcludingTax")].isNull() && m_flat_rates_total_excluding_tax_isValid;

    m_free_text1_isValid = ::OpenAPI::fromJsonValue(m_free_text1, json[QString("freeText1")]);
    m_free_text1_isSet = !json[QString("freeText1")].isNull() && m_free_text1_isValid;

    m_free_text2_isValid = ::OpenAPI::fromJsonValue(m_free_text2, json[QString("freeText2")]);
    m_free_text2_isSet = !json[QString("freeText2")].isNull() && m_free_text2_isValid;

    m_guid_isValid = ::OpenAPI::fromJsonValue(m_guid, json[QString("guid")]);
    m_guid_isSet = !json[QString("guid")].isNull() && m_guid_isValid;

    m_invoice_number_business_unit_guid_isValid = ::OpenAPI::fromJsonValue(m_invoice_number_business_unit_guid, json[QString("invoiceNumberBusinessUnitGuid")]);
    m_invoice_number_business_unit_guid_isSet = !json[QString("invoiceNumberBusinessUnitGuid")].isNull() && m_invoice_number_business_unit_guid_isValid;

    m_invoice_template_isValid = ::OpenAPI::fromJsonValue(m_invoice_template, json[QString("invoiceTemplate")]);
    m_invoice_template_isSet = !json[QString("invoiceTemplate")].isNull() && m_invoice_template_isValid;

    m_is_credit_note_isValid = ::OpenAPI::fromJsonValue(m_is_credit_note, json[QString("isCreditNote")]);
    m_is_credit_note_isSet = !json[QString("isCreditNote")].isNull() && m_is_credit_note_isValid;

    m_language_isValid = ::OpenAPI::fromJsonValue(m_language, json[QString("language")]);
    m_language_isSet = !json[QString("language")].isNull() && m_language_isValid;

    m_last_updated_by_isValid = ::OpenAPI::fromJsonValue(m_last_updated_by, json[QString("lastUpdatedBy")]);
    m_last_updated_by_isSet = !json[QString("lastUpdatedBy")].isNull() && m_last_updated_by_isValid;

    m_last_updated_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_updated_date_time, json[QString("lastUpdatedDateTime")]);
    m_last_updated_date_time_isSet = !json[QString("lastUpdatedDateTime")].isNull() && m_last_updated_date_time_isValid;

    m_notes_isValid = ::OpenAPI::fromJsonValue(m_notes, json[QString("notes")]);
    m_notes_isSet = !json[QString("notes")].isNull() && m_notes_isValid;

    m_number_isValid = ::OpenAPI::fromJsonValue(m_number, json[QString("number")]);
    m_number_isSet = !json[QString("number")].isNull() && m_number_isValid;

    m_order_number_isValid = ::OpenAPI::fromJsonValue(m_order_number, json[QString("orderNumber")]);
    m_order_number_isSet = !json[QString("orderNumber")].isNull() && m_order_number_isValid;

    m_our_reference_isValid = ::OpenAPI::fromJsonValue(m_our_reference, json[QString("ourReference")]);
    m_our_reference_isSet = !json[QString("ourReference")].isNull() && m_our_reference_isValid;

    m_overdue_interest_isValid = ::OpenAPI::fromJsonValue(m_overdue_interest, json[QString("overdueInterest")]);
    m_overdue_interest_isSet = !json[QString("overdueInterest")].isNull() && m_overdue_interest_isValid;

    m_payment_date_isValid = ::OpenAPI::fromJsonValue(m_payment_date, json[QString("paymentDate")]);
    m_payment_date_isSet = !json[QString("paymentDate")].isNull() && m_payment_date_isValid;

    m_payment_term_isValid = ::OpenAPI::fromJsonValue(m_payment_term, json[QString("paymentTerm")]);
    m_payment_term_isSet = !json[QString("paymentTerm")].isNull() && m_payment_term_isValid;

    m_project_fees_total_excluding_tax_isValid = ::OpenAPI::fromJsonValue(m_project_fees_total_excluding_tax, json[QString("projectFeesTotalExcludingTax")]);
    m_project_fees_total_excluding_tax_isSet = !json[QString("projectFeesTotalExcludingTax")].isNull() && m_project_fees_total_excluding_tax_isValid;

    m_project_travel_expenses_total_excluding_tax_isValid = ::OpenAPI::fromJsonValue(m_project_travel_expenses_total_excluding_tax, json[QString("projectTravelExpensesTotalExcludingTax")]);
    m_project_travel_expenses_total_excluding_tax_isSet = !json[QString("projectTravelExpensesTotalExcludingTax")].isNull() && m_project_travel_expenses_total_excluding_tax_isValid;

    m_projects_isValid = ::OpenAPI::fromJsonValue(m_projects, json[QString("projects")]);
    m_projects_isSet = !json[QString("projects")].isNull() && m_projects_isValid;

    m_receiver_address_isValid = ::OpenAPI::fromJsonValue(m_receiver_address, json[QString("receiverAddress")]);
    m_receiver_address_isSet = !json[QString("receiverAddress")].isNull() && m_receiver_address_isValid;

    m_receiver_contact_email_isValid = ::OpenAPI::fromJsonValue(m_receiver_contact_email, json[QString("receiverContactEmail")]);
    m_receiver_contact_email_isSet = !json[QString("receiverContactEmail")].isNull() && m_receiver_contact_email_isValid;

    m_receiver_contact_guid_isValid = ::OpenAPI::fromJsonValue(m_receiver_contact_guid, json[QString("receiverContactGuid")]);
    m_receiver_contact_guid_isSet = !json[QString("receiverContactGuid")].isNull() && m_receiver_contact_guid_isValid;

    m_receiver_contact_name_isValid = ::OpenAPI::fromJsonValue(m_receiver_contact_name, json[QString("receiverContactName")]);
    m_receiver_contact_name_isSet = !json[QString("receiverContactName")].isNull() && m_receiver_contact_name_isValid;

    m_receiver_customer_name_isValid = ::OpenAPI::fromJsonValue(m_receiver_customer_name, json[QString("receiverCustomerName")]);
    m_receiver_customer_name_isSet = !json[QString("receiverCustomerName")].isNull() && m_receiver_customer_name_isValid;

    m_receiver_kvk_number_isValid = ::OpenAPI::fromJsonValue(m_receiver_kvk_number, json[QString("receiverKvkNumber")]);
    m_receiver_kvk_number_isSet = !json[QString("receiverKvkNumber")].isNull() && m_receiver_kvk_number_isValid;

    m_receiver_vat_number_isValid = ::OpenAPI::fromJsonValue(m_receiver_vat_number, json[QString("receiverVatNumber")]);
    m_receiver_vat_number_isSet = !json[QString("receiverVatNumber")].isNull() && m_receiver_vat_number_isValid;

    m_reference_number_isValid = ::OpenAPI::fromJsonValue(m_reference_number, json[QString("referenceNumber")]);
    m_reference_number_isSet = !json[QString("referenceNumber")].isNull() && m_reference_number_isValid;

    m_reimburse_invoice_isValid = ::OpenAPI::fromJsonValue(m_reimburse_invoice, json[QString("reimburseInvoice")]);
    m_reimburse_invoice_isSet = !json[QString("reimburseInvoice")].isNull() && m_reimburse_invoice_isValid;

    m_sender_address_isValid = ::OpenAPI::fromJsonValue(m_sender_address, json[QString("senderAddress")]);
    m_sender_address_isSet = !json[QString("senderAddress")].isNull() && m_sender_address_isValid;

    m_sender_contact_guid_isValid = ::OpenAPI::fromJsonValue(m_sender_contact_guid, json[QString("senderContactGuid")]);
    m_sender_contact_guid_isSet = !json[QString("senderContactGuid")].isNull() && m_sender_contact_guid_isValid;

    m_sender_contact_name_isValid = ::OpenAPI::fromJsonValue(m_sender_contact_name, json[QString("senderContactName")]);
    m_sender_contact_name_isSet = !json[QString("senderContactName")].isNull() && m_sender_contact_name_isValid;

    m_sender_kvk_number_isValid = ::OpenAPI::fromJsonValue(m_sender_kvk_number, json[QString("senderKvkNumber")]);
    m_sender_kvk_number_isSet = !json[QString("senderKvkNumber")].isNull() && m_sender_kvk_number_isValid;

    m_sender_name_isValid = ::OpenAPI::fromJsonValue(m_sender_name, json[QString("senderName")]);
    m_sender_name_isSet = !json[QString("senderName")].isNull() && m_sender_name_isValid;

    m_sender_vat_number_isValid = ::OpenAPI::fromJsonValue(m_sender_vat_number, json[QString("senderVatNumber")]);
    m_sender_vat_number_isSet = !json[QString("senderVatNumber")].isNull() && m_sender_vat_number_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_total_excluding_tax_isValid = ::OpenAPI::fromJsonValue(m_total_excluding_tax, json[QString("totalExcludingTax")]);
    m_total_excluding_tax_isSet = !json[QString("totalExcludingTax")].isNull() && m_total_excluding_tax_isValid;

    m_total_including_tax_isValid = ::OpenAPI::fromJsonValue(m_total_including_tax, json[QString("totalIncludingTax")]);
    m_total_including_tax_isSet = !json[QString("totalIncludingTax")].isNull() && m_total_including_tax_isValid;

    m_total_tax_isValid = ::OpenAPI::fromJsonValue(m_total_tax, json[QString("totalTax")]);
    m_total_tax_isSet = !json[QString("totalTax")].isNull() && m_total_tax_isValid;

    m_work_hour_value_added_tax_isValid = ::OpenAPI::fromJsonValue(m_work_hour_value_added_tax, json[QString("workHourValueAddedTax")]);
    m_work_hour_value_added_tax_isSet = !json[QString("workHourValueAddedTax")].isNull() && m_work_hour_value_added_tax_isValid;

    m_work_hours_quantity_isValid = ::OpenAPI::fromJsonValue(m_work_hours_quantity, json[QString("workHoursQuantity")]);
    m_work_hours_quantity_isSet = !json[QString("workHoursQuantity")].isNull() && m_work_hours_quantity_isValid;

    m_work_hours_total_excluding_tax_isValid = ::OpenAPI::fromJsonValue(m_work_hours_total_excluding_tax, json[QString("workHoursTotalExcludingTax")]);
    m_work_hours_total_excluding_tax_isSet = !json[QString("workHoursTotalExcludingTax")].isNull() && m_work_hours_total_excluding_tax_isValid;

    m_your_reference_isValid = ::OpenAPI::fromJsonValue(m_your_reference, json[QString("yourReference")]);
    m_your_reference_isSet = !json[QString("yourReference")].isNull() && m_your_reference_isValid;
}

QString OAIInvoiceOutputModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoiceOutputModel::asJsonObject() const {
    QJsonObject obj;
    if (m_billing_customer.isSet()) {
        obj.insert(QString("billingCustomer"), ::OpenAPI::toJsonValue(m_billing_customer));
    }
    if (m_can_be_deleted_isSet) {
        obj.insert(QString("canBeDeleted"), ::OpenAPI::toJsonValue(m_can_be_deleted));
    }
    if (m_created_by.isSet()) {
        obj.insert(QString("createdBy"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_created_date_time_isSet) {
        obj.insert(QString("createdDateTime"), ::OpenAPI::toJsonValue(m_created_date_time));
    }
    if (m_credit_note_invoice.isSet()) {
        obj.insert(QString("creditNoteInvoice"), ::OpenAPI::toJsonValue(m_credit_note_invoice));
    }
    if (m_culture.isSet()) {
        obj.insert(QString("culture"), ::OpenAPI::toJsonValue(m_culture));
    }
    if (m_currency.isSet()) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_currency_rate_isSet) {
        obj.insert(QString("currencyRate"), ::OpenAPI::toJsonValue(m_currency_rate));
    }
    if (m_customer.isSet()) {
        obj.insert(QString("customer"), ::OpenAPI::toJsonValue(m_customer));
    }
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_due_date_isSet) {
        obj.insert(QString("dueDate"), ::OpenAPI::toJsonValue(m_due_date));
    }
    if (m_entry_date_isSet) {
        obj.insert(QString("entryDate"), ::OpenAPI::toJsonValue(m_entry_date));
    }
    if (m_flat_rates_total_excluding_tax.isSet()) {
        obj.insert(QString("flatRatesTotalExcludingTax"), ::OpenAPI::toJsonValue(m_flat_rates_total_excluding_tax));
    }
    if (m_free_text1.isSet()) {
        obj.insert(QString("freeText1"), ::OpenAPI::toJsonValue(m_free_text1));
    }
    if (m_free_text2.isSet()) {
        obj.insert(QString("freeText2"), ::OpenAPI::toJsonValue(m_free_text2));
    }
    if (m_guid_isSet) {
        obj.insert(QString("guid"), ::OpenAPI::toJsonValue(m_guid));
    }
    if (m_invoice_number_business_unit_guid_isSet) {
        obj.insert(QString("invoiceNumberBusinessUnitGuid"), ::OpenAPI::toJsonValue(m_invoice_number_business_unit_guid));
    }
    if (m_invoice_template.isSet()) {
        obj.insert(QString("invoiceTemplate"), ::OpenAPI::toJsonValue(m_invoice_template));
    }
    if (m_is_credit_note_isSet) {
        obj.insert(QString("isCreditNote"), ::OpenAPI::toJsonValue(m_is_credit_note));
    }
    if (m_language.isSet()) {
        obj.insert(QString("language"), ::OpenAPI::toJsonValue(m_language));
    }
    if (m_last_updated_by.isSet()) {
        obj.insert(QString("lastUpdatedBy"), ::OpenAPI::toJsonValue(m_last_updated_by));
    }
    if (m_last_updated_date_time_isSet) {
        obj.insert(QString("lastUpdatedDateTime"), ::OpenAPI::toJsonValue(m_last_updated_date_time));
    }
    if (m_notes_isSet) {
        obj.insert(QString("notes"), ::OpenAPI::toJsonValue(m_notes));
    }
    if (m_number_isSet) {
        obj.insert(QString("number"), ::OpenAPI::toJsonValue(m_number));
    }
    if (m_order_number_isSet) {
        obj.insert(QString("orderNumber"), ::OpenAPI::toJsonValue(m_order_number));
    }
    if (m_our_reference_isSet) {
        obj.insert(QString("ourReference"), ::OpenAPI::toJsonValue(m_our_reference));
    }
    if (m_overdue_interest_isSet) {
        obj.insert(QString("overdueInterest"), ::OpenAPI::toJsonValue(m_overdue_interest));
    }
    if (m_payment_date_isSet) {
        obj.insert(QString("paymentDate"), ::OpenAPI::toJsonValue(m_payment_date));
    }
    if (m_payment_term_isSet) {
        obj.insert(QString("paymentTerm"), ::OpenAPI::toJsonValue(m_payment_term));
    }
    if (m_project_fees_total_excluding_tax.isSet()) {
        obj.insert(QString("projectFeesTotalExcludingTax"), ::OpenAPI::toJsonValue(m_project_fees_total_excluding_tax));
    }
    if (m_project_travel_expenses_total_excluding_tax.isSet()) {
        obj.insert(QString("projectTravelExpensesTotalExcludingTax"), ::OpenAPI::toJsonValue(m_project_travel_expenses_total_excluding_tax));
    }
    if (m_projects.size() > 0) {
        obj.insert(QString("projects"), ::OpenAPI::toJsonValue(m_projects));
    }
    if (m_receiver_address.isSet()) {
        obj.insert(QString("receiverAddress"), ::OpenAPI::toJsonValue(m_receiver_address));
    }
    if (m_receiver_contact_email_isSet) {
        obj.insert(QString("receiverContactEmail"), ::OpenAPI::toJsonValue(m_receiver_contact_email));
    }
    if (m_receiver_contact_guid_isSet) {
        obj.insert(QString("receiverContactGuid"), ::OpenAPI::toJsonValue(m_receiver_contact_guid));
    }
    if (m_receiver_contact_name_isSet) {
        obj.insert(QString("receiverContactName"), ::OpenAPI::toJsonValue(m_receiver_contact_name));
    }
    if (m_receiver_customer_name_isSet) {
        obj.insert(QString("receiverCustomerName"), ::OpenAPI::toJsonValue(m_receiver_customer_name));
    }
    if (m_receiver_kvk_number_isSet) {
        obj.insert(QString("receiverKvkNumber"), ::OpenAPI::toJsonValue(m_receiver_kvk_number));
    }
    if (m_receiver_vat_number_isSet) {
        obj.insert(QString("receiverVatNumber"), ::OpenAPI::toJsonValue(m_receiver_vat_number));
    }
    if (m_reference_number_isSet) {
        obj.insert(QString("referenceNumber"), ::OpenAPI::toJsonValue(m_reference_number));
    }
    if (m_reimburse_invoice.isSet()) {
        obj.insert(QString("reimburseInvoice"), ::OpenAPI::toJsonValue(m_reimburse_invoice));
    }
    if (m_sender_address.isSet()) {
        obj.insert(QString("senderAddress"), ::OpenAPI::toJsonValue(m_sender_address));
    }
    if (m_sender_contact_guid_isSet) {
        obj.insert(QString("senderContactGuid"), ::OpenAPI::toJsonValue(m_sender_contact_guid));
    }
    if (m_sender_contact_name_isSet) {
        obj.insert(QString("senderContactName"), ::OpenAPI::toJsonValue(m_sender_contact_name));
    }
    if (m_sender_kvk_number_isSet) {
        obj.insert(QString("senderKvkNumber"), ::OpenAPI::toJsonValue(m_sender_kvk_number));
    }
    if (m_sender_name_isSet) {
        obj.insert(QString("senderName"), ::OpenAPI::toJsonValue(m_sender_name));
    }
    if (m_sender_vat_number_isSet) {
        obj.insert(QString("senderVatNumber"), ::OpenAPI::toJsonValue(m_sender_vat_number));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_total_excluding_tax.isSet()) {
        obj.insert(QString("totalExcludingTax"), ::OpenAPI::toJsonValue(m_total_excluding_tax));
    }
    if (m_total_including_tax.isSet()) {
        obj.insert(QString("totalIncludingTax"), ::OpenAPI::toJsonValue(m_total_including_tax));
    }
    if (m_total_tax.isSet()) {
        obj.insert(QString("totalTax"), ::OpenAPI::toJsonValue(m_total_tax));
    }
    if (m_work_hour_value_added_tax_isSet) {
        obj.insert(QString("workHourValueAddedTax"), ::OpenAPI::toJsonValue(m_work_hour_value_added_tax));
    }
    if (m_work_hours_quantity_isSet) {
        obj.insert(QString("workHoursQuantity"), ::OpenAPI::toJsonValue(m_work_hours_quantity));
    }
    if (m_work_hours_total_excluding_tax.isSet()) {
        obj.insert(QString("workHoursTotalExcludingTax"), ::OpenAPI::toJsonValue(m_work_hours_total_excluding_tax));
    }
    if (m_your_reference_isSet) {
        obj.insert(QString("yourReference"), ::OpenAPI::toJsonValue(m_your_reference));
    }
    return obj;
}

OAIInvoiceCustomerSubModel OAIInvoiceOutputModel::getBillingCustomer() const {
    return m_billing_customer;
}
void OAIInvoiceOutputModel::setBillingCustomer(const OAIInvoiceCustomerSubModel &billing_customer) {
    m_billing_customer = billing_customer;
    m_billing_customer_isSet = true;
}

bool OAIInvoiceOutputModel::is_billing_customer_Set() const{
    return m_billing_customer_isSet;
}

bool OAIInvoiceOutputModel::is_billing_customer_Valid() const{
    return m_billing_customer_isValid;
}

bool OAIInvoiceOutputModel::isCanBeDeleted() const {
    return m_can_be_deleted;
}
void OAIInvoiceOutputModel::setCanBeDeleted(const bool &can_be_deleted) {
    m_can_be_deleted = can_be_deleted;
    m_can_be_deleted_isSet = true;
}

bool OAIInvoiceOutputModel::is_can_be_deleted_Set() const{
    return m_can_be_deleted_isSet;
}

bool OAIInvoiceOutputModel::is_can_be_deleted_Valid() const{
    return m_can_be_deleted_isValid;
}

OAIUserWithFirstNameLastNameAndPhotoFileModel OAIInvoiceOutputModel::getCreatedBy() const {
    return m_created_by;
}
void OAIInvoiceOutputModel::setCreatedBy(const OAIUserWithFirstNameLastNameAndPhotoFileModel &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIInvoiceOutputModel::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIInvoiceOutputModel::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QDateTime OAIInvoiceOutputModel::getCreatedDateTime() const {
    return m_created_date_time;
}
void OAIInvoiceOutputModel::setCreatedDateTime(const QDateTime &created_date_time) {
    m_created_date_time = created_date_time;
    m_created_date_time_isSet = true;
}

bool OAIInvoiceOutputModel::is_created_date_time_Set() const{
    return m_created_date_time_isSet;
}

bool OAIInvoiceOutputModel::is_created_date_time_Valid() const{
    return m_created_date_time_isValid;
}

OAIRelatedInvoiceSubModel OAIInvoiceOutputModel::getCreditNoteInvoice() const {
    return m_credit_note_invoice;
}
void OAIInvoiceOutputModel::setCreditNoteInvoice(const OAIRelatedInvoiceSubModel &credit_note_invoice) {
    m_credit_note_invoice = credit_note_invoice;
    m_credit_note_invoice_isSet = true;
}

bool OAIInvoiceOutputModel::is_credit_note_invoice_Set() const{
    return m_credit_note_invoice_isSet;
}

bool OAIInvoiceOutputModel::is_credit_note_invoice_Valid() const{
    return m_credit_note_invoice_isValid;
}

OAIFormattingCultureSubModel2 OAIInvoiceOutputModel::getCulture() const {
    return m_culture;
}
void OAIInvoiceOutputModel::setCulture(const OAIFormattingCultureSubModel2 &culture) {
    m_culture = culture;
    m_culture_isSet = true;
}

bool OAIInvoiceOutputModel::is_culture_Set() const{
    return m_culture_isSet;
}

bool OAIInvoiceOutputModel::is_culture_Valid() const{
    return m_culture_isValid;
}

OAICurrencySubModel OAIInvoiceOutputModel::getCurrency() const {
    return m_currency;
}
void OAIInvoiceOutputModel::setCurrency(const OAICurrencySubModel &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIInvoiceOutputModel::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIInvoiceOutputModel::is_currency_Valid() const{
    return m_currency_isValid;
}

double OAIInvoiceOutputModel::getCurrencyRate() const {
    return m_currency_rate;
}
void OAIInvoiceOutputModel::setCurrencyRate(const double &currency_rate) {
    m_currency_rate = currency_rate;
    m_currency_rate_isSet = true;
}

bool OAIInvoiceOutputModel::is_currency_rate_Set() const{
    return m_currency_rate_isSet;
}

bool OAIInvoiceOutputModel::is_currency_rate_Valid() const{
    return m_currency_rate_isValid;
}

OAIInvoiceCustomerSubModel OAIInvoiceOutputModel::getCustomer() const {
    return m_customer;
}
void OAIInvoiceOutputModel::setCustomer(const OAIInvoiceCustomerSubModel &customer) {
    m_customer = customer;
    m_customer_isSet = true;
}

bool OAIInvoiceOutputModel::is_customer_Set() const{
    return m_customer_isSet;
}

bool OAIInvoiceOutputModel::is_customer_Valid() const{
    return m_customer_isValid;
}

QDate OAIInvoiceOutputModel::getDate() const {
    return m_date;
}
void OAIInvoiceOutputModel::setDate(const QDate &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIInvoiceOutputModel::is_date_Set() const{
    return m_date_isSet;
}

bool OAIInvoiceOutputModel::is_date_Valid() const{
    return m_date_isValid;
}

QDate OAIInvoiceOutputModel::getDueDate() const {
    return m_due_date;
}
void OAIInvoiceOutputModel::setDueDate(const QDate &due_date) {
    m_due_date = due_date;
    m_due_date_isSet = true;
}

bool OAIInvoiceOutputModel::is_due_date_Set() const{
    return m_due_date_isSet;
}

bool OAIInvoiceOutputModel::is_due_date_Valid() const{
    return m_due_date_isValid;
}

QDate OAIInvoiceOutputModel::getEntryDate() const {
    return m_entry_date;
}
void OAIInvoiceOutputModel::setEntryDate(const QDate &entry_date) {
    m_entry_date = entry_date;
    m_entry_date_isSet = true;
}

bool OAIInvoiceOutputModel::is_entry_date_Set() const{
    return m_entry_date_isSet;
}

bool OAIInvoiceOutputModel::is_entry_date_Valid() const{
    return m_entry_date_isValid;
}

OAIMoneyOutputModel OAIInvoiceOutputModel::getFlatRatesTotalExcludingTax() const {
    return m_flat_rates_total_excluding_tax;
}
void OAIInvoiceOutputModel::setFlatRatesTotalExcludingTax(const OAIMoneyOutputModel &flat_rates_total_excluding_tax) {
    m_flat_rates_total_excluding_tax = flat_rates_total_excluding_tax;
    m_flat_rates_total_excluding_tax_isSet = true;
}

bool OAIInvoiceOutputModel::is_flat_rates_total_excluding_tax_Set() const{
    return m_flat_rates_total_excluding_tax_isSet;
}

bool OAIInvoiceOutputModel::is_flat_rates_total_excluding_tax_Valid() const{
    return m_flat_rates_total_excluding_tax_isValid;
}

OAIFreeTextModel2 OAIInvoiceOutputModel::getFreeText1() const {
    return m_free_text1;
}
void OAIInvoiceOutputModel::setFreeText1(const OAIFreeTextModel2 &free_text1) {
    m_free_text1 = free_text1;
    m_free_text1_isSet = true;
}

bool OAIInvoiceOutputModel::is_free_text1_Set() const{
    return m_free_text1_isSet;
}

bool OAIInvoiceOutputModel::is_free_text1_Valid() const{
    return m_free_text1_isValid;
}

OAIFreeTextModel2 OAIInvoiceOutputModel::getFreeText2() const {
    return m_free_text2;
}
void OAIInvoiceOutputModel::setFreeText2(const OAIFreeTextModel2 &free_text2) {
    m_free_text2 = free_text2;
    m_free_text2_isSet = true;
}

bool OAIInvoiceOutputModel::is_free_text2_Set() const{
    return m_free_text2_isSet;
}

bool OAIInvoiceOutputModel::is_free_text2_Valid() const{
    return m_free_text2_isValid;
}

QString OAIInvoiceOutputModel::getGuid() const {
    return m_guid;
}
void OAIInvoiceOutputModel::setGuid(const QString &guid) {
    m_guid = guid;
    m_guid_isSet = true;
}

bool OAIInvoiceOutputModel::is_guid_Set() const{
    return m_guid_isSet;
}

bool OAIInvoiceOutputModel::is_guid_Valid() const{
    return m_guid_isValid;
}

QString OAIInvoiceOutputModel::getInvoiceNumberBusinessUnitGuid() const {
    return m_invoice_number_business_unit_guid;
}
void OAIInvoiceOutputModel::setInvoiceNumberBusinessUnitGuid(const QString &invoice_number_business_unit_guid) {
    m_invoice_number_business_unit_guid = invoice_number_business_unit_guid;
    m_invoice_number_business_unit_guid_isSet = true;
}

bool OAIInvoiceOutputModel::is_invoice_number_business_unit_guid_Set() const{
    return m_invoice_number_business_unit_guid_isSet;
}

bool OAIInvoiceOutputModel::is_invoice_number_business_unit_guid_Valid() const{
    return m_invoice_number_business_unit_guid_isValid;
}

OAIModelWithName OAIInvoiceOutputModel::getInvoiceTemplate() const {
    return m_invoice_template;
}
void OAIInvoiceOutputModel::setInvoiceTemplate(const OAIModelWithName &invoice_template) {
    m_invoice_template = invoice_template;
    m_invoice_template_isSet = true;
}

bool OAIInvoiceOutputModel::is_invoice_template_Set() const{
    return m_invoice_template_isSet;
}

bool OAIInvoiceOutputModel::is_invoice_template_Valid() const{
    return m_invoice_template_isValid;
}

bool OAIInvoiceOutputModel::isIsCreditNote() const {
    return m_is_credit_note;
}
void OAIInvoiceOutputModel::setIsCreditNote(const bool &is_credit_note) {
    m_is_credit_note = is_credit_note;
    m_is_credit_note_isSet = true;
}

bool OAIInvoiceOutputModel::is_is_credit_note_Set() const{
    return m_is_credit_note_isSet;
}

bool OAIInvoiceOutputModel::is_is_credit_note_Valid() const{
    return m_is_credit_note_isValid;
}

OAIInvoiceLanguageSubModel OAIInvoiceOutputModel::getLanguage() const {
    return m_language;
}
void OAIInvoiceOutputModel::setLanguage(const OAIInvoiceLanguageSubModel &language) {
    m_language = language;
    m_language_isSet = true;
}

bool OAIInvoiceOutputModel::is_language_Set() const{
    return m_language_isSet;
}

bool OAIInvoiceOutputModel::is_language_Valid() const{
    return m_language_isValid;
}

OAIUserWithFirstNameLastNameAndPhotoFileModel OAIInvoiceOutputModel::getLastUpdatedBy() const {
    return m_last_updated_by;
}
void OAIInvoiceOutputModel::setLastUpdatedBy(const OAIUserWithFirstNameLastNameAndPhotoFileModel &last_updated_by) {
    m_last_updated_by = last_updated_by;
    m_last_updated_by_isSet = true;
}

bool OAIInvoiceOutputModel::is_last_updated_by_Set() const{
    return m_last_updated_by_isSet;
}

bool OAIInvoiceOutputModel::is_last_updated_by_Valid() const{
    return m_last_updated_by_isValid;
}

QDateTime OAIInvoiceOutputModel::getLastUpdatedDateTime() const {
    return m_last_updated_date_time;
}
void OAIInvoiceOutputModel::setLastUpdatedDateTime(const QDateTime &last_updated_date_time) {
    m_last_updated_date_time = last_updated_date_time;
    m_last_updated_date_time_isSet = true;
}

bool OAIInvoiceOutputModel::is_last_updated_date_time_Set() const{
    return m_last_updated_date_time_isSet;
}

bool OAIInvoiceOutputModel::is_last_updated_date_time_Valid() const{
    return m_last_updated_date_time_isValid;
}

QString OAIInvoiceOutputModel::getNotes() const {
    return m_notes;
}
void OAIInvoiceOutputModel::setNotes(const QString &notes) {
    m_notes = notes;
    m_notes_isSet = true;
}

bool OAIInvoiceOutputModel::is_notes_Set() const{
    return m_notes_isSet;
}

bool OAIInvoiceOutputModel::is_notes_Valid() const{
    return m_notes_isValid;
}

qint32 OAIInvoiceOutputModel::getNumber() const {
    return m_number;
}
void OAIInvoiceOutputModel::setNumber(const qint32 &number) {
    m_number = number;
    m_number_isSet = true;
}

bool OAIInvoiceOutputModel::is_number_Set() const{
    return m_number_isSet;
}

bool OAIInvoiceOutputModel::is_number_Valid() const{
    return m_number_isValid;
}

QString OAIInvoiceOutputModel::getOrderNumber() const {
    return m_order_number;
}
void OAIInvoiceOutputModel::setOrderNumber(const QString &order_number) {
    m_order_number = order_number;
    m_order_number_isSet = true;
}

bool OAIInvoiceOutputModel::is_order_number_Set() const{
    return m_order_number_isSet;
}

bool OAIInvoiceOutputModel::is_order_number_Valid() const{
    return m_order_number_isValid;
}

QString OAIInvoiceOutputModel::getOurReference() const {
    return m_our_reference;
}
void OAIInvoiceOutputModel::setOurReference(const QString &our_reference) {
    m_our_reference = our_reference;
    m_our_reference_isSet = true;
}

bool OAIInvoiceOutputModel::is_our_reference_Set() const{
    return m_our_reference_isSet;
}

bool OAIInvoiceOutputModel::is_our_reference_Valid() const{
    return m_our_reference_isValid;
}

double OAIInvoiceOutputModel::getOverdueInterest() const {
    return m_overdue_interest;
}
void OAIInvoiceOutputModel::setOverdueInterest(const double &overdue_interest) {
    m_overdue_interest = overdue_interest;
    m_overdue_interest_isSet = true;
}

bool OAIInvoiceOutputModel::is_overdue_interest_Set() const{
    return m_overdue_interest_isSet;
}

bool OAIInvoiceOutputModel::is_overdue_interest_Valid() const{
    return m_overdue_interest_isValid;
}

QDate OAIInvoiceOutputModel::getPaymentDate() const {
    return m_payment_date;
}
void OAIInvoiceOutputModel::setPaymentDate(const QDate &payment_date) {
    m_payment_date = payment_date;
    m_payment_date_isSet = true;
}

bool OAIInvoiceOutputModel::is_payment_date_Set() const{
    return m_payment_date_isSet;
}

bool OAIInvoiceOutputModel::is_payment_date_Valid() const{
    return m_payment_date_isValid;
}

qint32 OAIInvoiceOutputModel::getPaymentTerm() const {
    return m_payment_term;
}
void OAIInvoiceOutputModel::setPaymentTerm(const qint32 &payment_term) {
    m_payment_term = payment_term;
    m_payment_term_isSet = true;
}

bool OAIInvoiceOutputModel::is_payment_term_Set() const{
    return m_payment_term_isSet;
}

bool OAIInvoiceOutputModel::is_payment_term_Valid() const{
    return m_payment_term_isValid;
}

OAIMoneyOutputModel OAIInvoiceOutputModel::getProjectFeesTotalExcludingTax() const {
    return m_project_fees_total_excluding_tax;
}
void OAIInvoiceOutputModel::setProjectFeesTotalExcludingTax(const OAIMoneyOutputModel &project_fees_total_excluding_tax) {
    m_project_fees_total_excluding_tax = project_fees_total_excluding_tax;
    m_project_fees_total_excluding_tax_isSet = true;
}

bool OAIInvoiceOutputModel::is_project_fees_total_excluding_tax_Set() const{
    return m_project_fees_total_excluding_tax_isSet;
}

bool OAIInvoiceOutputModel::is_project_fees_total_excluding_tax_Valid() const{
    return m_project_fees_total_excluding_tax_isValid;
}

OAIMoneyOutputModel OAIInvoiceOutputModel::getProjectTravelExpensesTotalExcludingTax() const {
    return m_project_travel_expenses_total_excluding_tax;
}
void OAIInvoiceOutputModel::setProjectTravelExpensesTotalExcludingTax(const OAIMoneyOutputModel &project_travel_expenses_total_excluding_tax) {
    m_project_travel_expenses_total_excluding_tax = project_travel_expenses_total_excluding_tax;
    m_project_travel_expenses_total_excluding_tax_isSet = true;
}

bool OAIInvoiceOutputModel::is_project_travel_expenses_total_excluding_tax_Set() const{
    return m_project_travel_expenses_total_excluding_tax_isSet;
}

bool OAIInvoiceOutputModel::is_project_travel_expenses_total_excluding_tax_Valid() const{
    return m_project_travel_expenses_total_excluding_tax_isValid;
}

QList<OAIInvoiceProjectSubModel> OAIInvoiceOutputModel::getProjects() const {
    return m_projects;
}
void OAIInvoiceOutputModel::setProjects(const QList<OAIInvoiceProjectSubModel> &projects) {
    m_projects = projects;
    m_projects_isSet = true;
}

bool OAIInvoiceOutputModel::is_projects_Set() const{
    return m_projects_isSet;
}

bool OAIInvoiceOutputModel::is_projects_Valid() const{
    return m_projects_isValid;
}

OAIInvoiceReceiverAddressSubModel OAIInvoiceOutputModel::getReceiverAddress() const {
    return m_receiver_address;
}
void OAIInvoiceOutputModel::setReceiverAddress(const OAIInvoiceReceiverAddressSubModel &receiver_address) {
    m_receiver_address = receiver_address;
    m_receiver_address_isSet = true;
}

bool OAIInvoiceOutputModel::is_receiver_address_Set() const{
    return m_receiver_address_isSet;
}

bool OAIInvoiceOutputModel::is_receiver_address_Valid() const{
    return m_receiver_address_isValid;
}

QString OAIInvoiceOutputModel::getReceiverContactEmail() const {
    return m_receiver_contact_email;
}
void OAIInvoiceOutputModel::setReceiverContactEmail(const QString &receiver_contact_email) {
    m_receiver_contact_email = receiver_contact_email;
    m_receiver_contact_email_isSet = true;
}

bool OAIInvoiceOutputModel::is_receiver_contact_email_Set() const{
    return m_receiver_contact_email_isSet;
}

bool OAIInvoiceOutputModel::is_receiver_contact_email_Valid() const{
    return m_receiver_contact_email_isValid;
}

QString OAIInvoiceOutputModel::getReceiverContactGuid() const {
    return m_receiver_contact_guid;
}
void OAIInvoiceOutputModel::setReceiverContactGuid(const QString &receiver_contact_guid) {
    m_receiver_contact_guid = receiver_contact_guid;
    m_receiver_contact_guid_isSet = true;
}

bool OAIInvoiceOutputModel::is_receiver_contact_guid_Set() const{
    return m_receiver_contact_guid_isSet;
}

bool OAIInvoiceOutputModel::is_receiver_contact_guid_Valid() const{
    return m_receiver_contact_guid_isValid;
}

QString OAIInvoiceOutputModel::getReceiverContactName() const {
    return m_receiver_contact_name;
}
void OAIInvoiceOutputModel::setReceiverContactName(const QString &receiver_contact_name) {
    m_receiver_contact_name = receiver_contact_name;
    m_receiver_contact_name_isSet = true;
}

bool OAIInvoiceOutputModel::is_receiver_contact_name_Set() const{
    return m_receiver_contact_name_isSet;
}

bool OAIInvoiceOutputModel::is_receiver_contact_name_Valid() const{
    return m_receiver_contact_name_isValid;
}

QString OAIInvoiceOutputModel::getReceiverCustomerName() const {
    return m_receiver_customer_name;
}
void OAIInvoiceOutputModel::setReceiverCustomerName(const QString &receiver_customer_name) {
    m_receiver_customer_name = receiver_customer_name;
    m_receiver_customer_name_isSet = true;
}

bool OAIInvoiceOutputModel::is_receiver_customer_name_Set() const{
    return m_receiver_customer_name_isSet;
}

bool OAIInvoiceOutputModel::is_receiver_customer_name_Valid() const{
    return m_receiver_customer_name_isValid;
}

QString OAIInvoiceOutputModel::getReceiverKvkNumber() const {
    return m_receiver_kvk_number;
}
void OAIInvoiceOutputModel::setReceiverKvkNumber(const QString &receiver_kvk_number) {
    m_receiver_kvk_number = receiver_kvk_number;
    m_receiver_kvk_number_isSet = true;
}

bool OAIInvoiceOutputModel::is_receiver_kvk_number_Set() const{
    return m_receiver_kvk_number_isSet;
}

bool OAIInvoiceOutputModel::is_receiver_kvk_number_Valid() const{
    return m_receiver_kvk_number_isValid;
}

QString OAIInvoiceOutputModel::getReceiverVatNumber() const {
    return m_receiver_vat_number;
}
void OAIInvoiceOutputModel::setReceiverVatNumber(const QString &receiver_vat_number) {
    m_receiver_vat_number = receiver_vat_number;
    m_receiver_vat_number_isSet = true;
}

bool OAIInvoiceOutputModel::is_receiver_vat_number_Set() const{
    return m_receiver_vat_number_isSet;
}

bool OAIInvoiceOutputModel::is_receiver_vat_number_Valid() const{
    return m_receiver_vat_number_isValid;
}

QString OAIInvoiceOutputModel::getReferenceNumber() const {
    return m_reference_number;
}
void OAIInvoiceOutputModel::setReferenceNumber(const QString &reference_number) {
    m_reference_number = reference_number;
    m_reference_number_isSet = true;
}

bool OAIInvoiceOutputModel::is_reference_number_Set() const{
    return m_reference_number_isSet;
}

bool OAIInvoiceOutputModel::is_reference_number_Valid() const{
    return m_reference_number_isValid;
}

OAIRelatedInvoiceSubModel OAIInvoiceOutputModel::getReimburseInvoice() const {
    return m_reimburse_invoice;
}
void OAIInvoiceOutputModel::setReimburseInvoice(const OAIRelatedInvoiceSubModel &reimburse_invoice) {
    m_reimburse_invoice = reimburse_invoice;
    m_reimburse_invoice_isSet = true;
}

bool OAIInvoiceOutputModel::is_reimburse_invoice_Set() const{
    return m_reimburse_invoice_isSet;
}

bool OAIInvoiceOutputModel::is_reimburse_invoice_Valid() const{
    return m_reimburse_invoice_isValid;
}

OAIInvoiceSenderAddressSubModel OAIInvoiceOutputModel::getSenderAddress() const {
    return m_sender_address;
}
void OAIInvoiceOutputModel::setSenderAddress(const OAIInvoiceSenderAddressSubModel &sender_address) {
    m_sender_address = sender_address;
    m_sender_address_isSet = true;
}

bool OAIInvoiceOutputModel::is_sender_address_Set() const{
    return m_sender_address_isSet;
}

bool OAIInvoiceOutputModel::is_sender_address_Valid() const{
    return m_sender_address_isValid;
}

QString OAIInvoiceOutputModel::getSenderContactGuid() const {
    return m_sender_contact_guid;
}
void OAIInvoiceOutputModel::setSenderContactGuid(const QString &sender_contact_guid) {
    m_sender_contact_guid = sender_contact_guid;
    m_sender_contact_guid_isSet = true;
}

bool OAIInvoiceOutputModel::is_sender_contact_guid_Set() const{
    return m_sender_contact_guid_isSet;
}

bool OAIInvoiceOutputModel::is_sender_contact_guid_Valid() const{
    return m_sender_contact_guid_isValid;
}

QString OAIInvoiceOutputModel::getSenderContactName() const {
    return m_sender_contact_name;
}
void OAIInvoiceOutputModel::setSenderContactName(const QString &sender_contact_name) {
    m_sender_contact_name = sender_contact_name;
    m_sender_contact_name_isSet = true;
}

bool OAIInvoiceOutputModel::is_sender_contact_name_Set() const{
    return m_sender_contact_name_isSet;
}

bool OAIInvoiceOutputModel::is_sender_contact_name_Valid() const{
    return m_sender_contact_name_isValid;
}

QString OAIInvoiceOutputModel::getSenderKvkNumber() const {
    return m_sender_kvk_number;
}
void OAIInvoiceOutputModel::setSenderKvkNumber(const QString &sender_kvk_number) {
    m_sender_kvk_number = sender_kvk_number;
    m_sender_kvk_number_isSet = true;
}

bool OAIInvoiceOutputModel::is_sender_kvk_number_Set() const{
    return m_sender_kvk_number_isSet;
}

bool OAIInvoiceOutputModel::is_sender_kvk_number_Valid() const{
    return m_sender_kvk_number_isValid;
}

QString OAIInvoiceOutputModel::getSenderName() const {
    return m_sender_name;
}
void OAIInvoiceOutputModel::setSenderName(const QString &sender_name) {
    m_sender_name = sender_name;
    m_sender_name_isSet = true;
}

bool OAIInvoiceOutputModel::is_sender_name_Set() const{
    return m_sender_name_isSet;
}

bool OAIInvoiceOutputModel::is_sender_name_Valid() const{
    return m_sender_name_isValid;
}

QString OAIInvoiceOutputModel::getSenderVatNumber() const {
    return m_sender_vat_number;
}
void OAIInvoiceOutputModel::setSenderVatNumber(const QString &sender_vat_number) {
    m_sender_vat_number = sender_vat_number;
    m_sender_vat_number_isSet = true;
}

bool OAIInvoiceOutputModel::is_sender_vat_number_Set() const{
    return m_sender_vat_number_isSet;
}

bool OAIInvoiceOutputModel::is_sender_vat_number_Valid() const{
    return m_sender_vat_number_isValid;
}

OAIInvoiceStatusSubModel OAIInvoiceOutputModel::getStatus() const {
    return m_status;
}
void OAIInvoiceOutputModel::setStatus(const OAIInvoiceStatusSubModel &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIInvoiceOutputModel::is_status_Set() const{
    return m_status_isSet;
}

bool OAIInvoiceOutputModel::is_status_Valid() const{
    return m_status_isValid;
}

OAIMoneyOutputModel OAIInvoiceOutputModel::getTotalExcludingTax() const {
    return m_total_excluding_tax;
}
void OAIInvoiceOutputModel::setTotalExcludingTax(const OAIMoneyOutputModel &total_excluding_tax) {
    m_total_excluding_tax = total_excluding_tax;
    m_total_excluding_tax_isSet = true;
}

bool OAIInvoiceOutputModel::is_total_excluding_tax_Set() const{
    return m_total_excluding_tax_isSet;
}

bool OAIInvoiceOutputModel::is_total_excluding_tax_Valid() const{
    return m_total_excluding_tax_isValid;
}

OAIMoneyOutputModel OAIInvoiceOutputModel::getTotalIncludingTax() const {
    return m_total_including_tax;
}
void OAIInvoiceOutputModel::setTotalIncludingTax(const OAIMoneyOutputModel &total_including_tax) {
    m_total_including_tax = total_including_tax;
    m_total_including_tax_isSet = true;
}

bool OAIInvoiceOutputModel::is_total_including_tax_Set() const{
    return m_total_including_tax_isSet;
}

bool OAIInvoiceOutputModel::is_total_including_tax_Valid() const{
    return m_total_including_tax_isValid;
}

OAIMoneyOutputModel OAIInvoiceOutputModel::getTotalTax() const {
    return m_total_tax;
}
void OAIInvoiceOutputModel::setTotalTax(const OAIMoneyOutputModel &total_tax) {
    m_total_tax = total_tax;
    m_total_tax_isSet = true;
}

bool OAIInvoiceOutputModel::is_total_tax_Set() const{
    return m_total_tax_isSet;
}

bool OAIInvoiceOutputModel::is_total_tax_Valid() const{
    return m_total_tax_isValid;
}

double OAIInvoiceOutputModel::getWorkHourValueAddedTax() const {
    return m_work_hour_value_added_tax;
}
void OAIInvoiceOutputModel::setWorkHourValueAddedTax(const double &work_hour_value_added_tax) {
    m_work_hour_value_added_tax = work_hour_value_added_tax;
    m_work_hour_value_added_tax_isSet = true;
}

bool OAIInvoiceOutputModel::is_work_hour_value_added_tax_Set() const{
    return m_work_hour_value_added_tax_isSet;
}

bool OAIInvoiceOutputModel::is_work_hour_value_added_tax_Valid() const{
    return m_work_hour_value_added_tax_isValid;
}

double OAIInvoiceOutputModel::getWorkHoursQuantity() const {
    return m_work_hours_quantity;
}
void OAIInvoiceOutputModel::setWorkHoursQuantity(const double &work_hours_quantity) {
    m_work_hours_quantity = work_hours_quantity;
    m_work_hours_quantity_isSet = true;
}

bool OAIInvoiceOutputModel::is_work_hours_quantity_Set() const{
    return m_work_hours_quantity_isSet;
}

bool OAIInvoiceOutputModel::is_work_hours_quantity_Valid() const{
    return m_work_hours_quantity_isValid;
}

OAIMoneyOutputModel OAIInvoiceOutputModel::getWorkHoursTotalExcludingTax() const {
    return m_work_hours_total_excluding_tax;
}
void OAIInvoiceOutputModel::setWorkHoursTotalExcludingTax(const OAIMoneyOutputModel &work_hours_total_excluding_tax) {
    m_work_hours_total_excluding_tax = work_hours_total_excluding_tax;
    m_work_hours_total_excluding_tax_isSet = true;
}

bool OAIInvoiceOutputModel::is_work_hours_total_excluding_tax_Set() const{
    return m_work_hours_total_excluding_tax_isSet;
}

bool OAIInvoiceOutputModel::is_work_hours_total_excluding_tax_Valid() const{
    return m_work_hours_total_excluding_tax_isValid;
}

QString OAIInvoiceOutputModel::getYourReference() const {
    return m_your_reference;
}
void OAIInvoiceOutputModel::setYourReference(const QString &your_reference) {
    m_your_reference = your_reference;
    m_your_reference_isSet = true;
}

bool OAIInvoiceOutputModel::is_your_reference_Set() const{
    return m_your_reference_isSet;
}

bool OAIInvoiceOutputModel::is_your_reference_Valid() const{
    return m_your_reference_isValid;
}

bool OAIInvoiceOutputModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_billing_customer.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_be_deleted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_credit_note_invoice.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_culture.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_due_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entry_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_flat_rates_total_excluding_tax.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_free_text1.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_free_text2.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_guid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_number_business_unit_guid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_template.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_credit_note_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_our_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_overdue_interest_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_term_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_fees_total_excluding_tax.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_travel_expenses_total_excluding_tax.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_projects.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_contact_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_contact_guid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_contact_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_customer_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_kvk_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_vat_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reimburse_invoice.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sender_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sender_contact_guid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sender_contact_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sender_kvk_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sender_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sender_vat_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_excluding_tax.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_including_tax.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_tax.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_work_hour_value_added_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_work_hours_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_work_hours_total_excluding_tax.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_your_reference_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoiceOutputModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
