/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeletedProjectTravelExpenseModel.h
 *
 * 
 */

#ifndef OAIDeletedProjectTravelExpenseModel_H
#define OAIDeletedProjectTravelExpenseModel_H

#include <QJsonObject>

#include "OAIModelBaseReadOnly.h"
#include <QDate>
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIModelBaseReadOnly;

class OAIDeletedProjectTravelExpenseModel : public OAIObject {
public:
    OAIDeletedProjectTravelExpenseModel();
    OAIDeletedProjectTravelExpenseModel(QString json);
    ~OAIDeletedProjectTravelExpenseModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIModelBaseReadOnly getCreatedBy() const;
    void setCreatedBy(const OAIModelBaseReadOnly &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QDateTime getCreatedDateTime() const;
    void setCreatedDateTime(const QDateTime &created_date_time);
    bool is_created_date_time_Set() const;
    bool is_created_date_time_Valid() const;

    OAIModelBaseReadOnly getCustomer() const;
    void setCustomer(const OAIModelBaseReadOnly &customer);
    bool is_customer_Set() const;
    bool is_customer_Valid() const;

    QDateTime getDeletedDateTime() const;
    void setDeletedDateTime(const QDateTime &deleted_date_time);
    bool is_deleted_date_time_Set() const;
    bool is_deleted_date_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDate getEventDate() const;
    void setEventDate(const QDate &event_date);
    bool is_event_date_Set() const;
    bool is_event_date_Valid() const;

    QString getGuid() const;
    void setGuid(const QString &guid);
    bool is_guid_Set() const;
    bool is_guid_Valid() const;

    OAIModelBaseReadOnly getLastUpdatedBy() const;
    void setLastUpdatedBy(const OAIModelBaseReadOnly &last_updated_by);
    bool is_last_updated_by_Set() const;
    bool is_last_updated_by_Valid() const;

    QDateTime getLastUpdatedDateTime() const;
    void setLastUpdatedDateTime(const QDateTime &last_updated_date_time);
    bool is_last_updated_date_time_Set() const;
    bool is_last_updated_date_time_Valid() const;

    QString getMeasurementUnit() const;
    void setMeasurementUnit(const QString &measurement_unit);
    bool is_measurement_unit_Set() const;
    bool is_measurement_unit_Valid() const;

    OAIModelBaseReadOnly getPhase() const;
    void setPhase(const OAIModelBaseReadOnly &phase);
    bool is_phase_Set() const;
    bool is_phase_Valid() const;

    OAIModelBaseReadOnly getProject() const;
    void setProject(const OAIModelBaseReadOnly &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    double getQuantity() const;
    void setQuantity(const double &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QDateTime getTravelEndTime() const;
    void setTravelEndTime(const QDateTime &travel_end_time);
    bool is_travel_end_time_Set() const;
    bool is_travel_end_time_Valid() const;

    OAIModelBaseReadOnly getTravelExpense() const;
    void setTravelExpense(const OAIModelBaseReadOnly &travel_expense);
    bool is_travel_expense_Set() const;
    bool is_travel_expense_Valid() const;

    QDateTime getTravelStartTime() const;
    void setTravelStartTime(const QDateTime &travel_start_time);
    bool is_travel_start_time_Set() const;
    bool is_travel_start_time_Valid() const;

    OAIModelBaseReadOnly getUser() const;
    void setUser(const OAIModelBaseReadOnly &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIModelBaseReadOnly m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QDateTime m_created_date_time;
    bool m_created_date_time_isSet;
    bool m_created_date_time_isValid;

    OAIModelBaseReadOnly m_customer;
    bool m_customer_isSet;
    bool m_customer_isValid;

    QDateTime m_deleted_date_time;
    bool m_deleted_date_time_isSet;
    bool m_deleted_date_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDate m_event_date;
    bool m_event_date_isSet;
    bool m_event_date_isValid;

    QString m_guid;
    bool m_guid_isSet;
    bool m_guid_isValid;

    OAIModelBaseReadOnly m_last_updated_by;
    bool m_last_updated_by_isSet;
    bool m_last_updated_by_isValid;

    QDateTime m_last_updated_date_time;
    bool m_last_updated_date_time_isSet;
    bool m_last_updated_date_time_isValid;

    QString m_measurement_unit;
    bool m_measurement_unit_isSet;
    bool m_measurement_unit_isValid;

    OAIModelBaseReadOnly m_phase;
    bool m_phase_isSet;
    bool m_phase_isValid;

    OAIModelBaseReadOnly m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    double m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QDateTime m_travel_end_time;
    bool m_travel_end_time_isSet;
    bool m_travel_end_time_isValid;

    OAIModelBaseReadOnly m_travel_expense;
    bool m_travel_expense_isSet;
    bool m_travel_expense_isValid;

    QDateTime m_travel_start_time;
    bool m_travel_start_time_isSet;
    bool m_travel_start_time_isValid;

    OAIModelBaseReadOnly m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeletedProjectTravelExpenseModel)

#endif // OAIDeletedProjectTravelExpenseModel_H
