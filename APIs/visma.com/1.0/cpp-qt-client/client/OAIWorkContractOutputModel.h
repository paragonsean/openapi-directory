/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkContractOutputModel.h
 *
 * 
 */

#ifndef OAIWorkContractOutputModel_H
#define OAIWorkContractOutputModel_H

#include <QJsonObject>

#include "OAIModelWithName.h"
#include "OAIMoneyOutputModel.h"
#include "OAIUserWithFirstNameLastNameAndPhotoFileModel.h"
#include "OAIUserWithPhotoFileModelAndRequiredGuid.h"
#include "OAIWorkweek.h"
#include <QDate>
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserWithFirstNameLastNameAndPhotoFileModel;
class OAIMoneyOutputModel;
class OAIModelWithName;
class OAIUserWithPhotoFileModelAndRequiredGuid;

class OAIWorkContractOutputModel : public OAIObject {
public:
    OAIWorkContractOutputModel();
    OAIWorkContractOutputModel(QString json);
    ~OAIWorkContractOutputModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUserWithFirstNameLastNameAndPhotoFileModel getCreatedBy() const;
    void setCreatedBy(const OAIUserWithFirstNameLastNameAndPhotoFileModel &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QDateTime getCreatedDateTime() const;
    void setCreatedDateTime(const QDateTime &created_date_time);
    bool is_created_date_time_Set() const;
    bool is_created_date_time_Valid() const;

    double getDailyHours() const;
    void setDailyHours(const double &daily_hours);
    bool is_daily_hours_Set() const;
    bool is_daily_hours_Valid() const;

    QDate getEndDate() const;
    void setEndDate(const QDate &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    double getFlextimeLimitPerDay() const;
    void setFlextimeLimitPerDay(const double &flextime_limit_per_day);
    bool is_flextime_limit_per_day_Set() const;
    bool is_flextime_limit_per_day_Valid() const;

    QString getGuid() const;
    void setGuid(const QString &guid);
    bool is_guid_Set() const;
    bool is_guid_Valid() const;

    OAIMoneyOutputModel getHourCost() const;
    void setHourCost(const OAIMoneyOutputModel &hour_cost);
    bool is_hour_cost_Set() const;
    bool is_hour_cost_Valid() const;

    bool isIsFlextimeActive() const;
    void setIsFlextimeActive(const bool &is_flextime_active);
    bool is_is_flextime_active_Set() const;
    bool is_is_flextime_active_Valid() const;

    bool isIsOvertimeAllowed() const;
    void setIsOvertimeAllowed(const bool &is_overtime_allowed);
    bool is_is_overtime_allowed_Set() const;
    bool is_is_overtime_allowed_Valid() const;

    OAIUserWithFirstNameLastNameAndPhotoFileModel getLastUpdatedBy() const;
    void setLastUpdatedBy(const OAIUserWithFirstNameLastNameAndPhotoFileModel &last_updated_by);
    bool is_last_updated_by_Set() const;
    bool is_last_updated_by_Valid() const;

    QDateTime getLastUpdatedDateTime() const;
    void setLastUpdatedDateTime(const QDateTime &last_updated_date_time);
    bool is_last_updated_date_time_Set() const;
    bool is_last_updated_date_time_Valid() const;

    OAIModelWithName getRole() const;
    void setRole(const OAIModelWithName &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    QDate getStartDate() const;
    void setStartDate(const QDate &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    OAIUserWithPhotoFileModelAndRequiredGuid getUser() const;
    void setUser(const OAIUserWithPhotoFileModelAndRequiredGuid &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    QList<OAIWorkweek> getWorkWeek() const;
    void setWorkWeek(const QList<OAIWorkweek> &work_week);
    bool is_work_week_Set() const;
    bool is_work_week_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUserWithFirstNameLastNameAndPhotoFileModel m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QDateTime m_created_date_time;
    bool m_created_date_time_isSet;
    bool m_created_date_time_isValid;

    double m_daily_hours;
    bool m_daily_hours_isSet;
    bool m_daily_hours_isValid;

    QDate m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    double m_flextime_limit_per_day;
    bool m_flextime_limit_per_day_isSet;
    bool m_flextime_limit_per_day_isValid;

    QString m_guid;
    bool m_guid_isSet;
    bool m_guid_isValid;

    OAIMoneyOutputModel m_hour_cost;
    bool m_hour_cost_isSet;
    bool m_hour_cost_isValid;

    bool m_is_flextime_active;
    bool m_is_flextime_active_isSet;
    bool m_is_flextime_active_isValid;

    bool m_is_overtime_allowed;
    bool m_is_overtime_allowed_isSet;
    bool m_is_overtime_allowed_isValid;

    OAIUserWithFirstNameLastNameAndPhotoFileModel m_last_updated_by;
    bool m_last_updated_by_isSet;
    bool m_last_updated_by_isValid;

    QDateTime m_last_updated_date_time;
    bool m_last_updated_date_time_isSet;
    bool m_last_updated_date_time_isValid;

    OAIModelWithName m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    QDate m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    OAIUserWithPhotoFileModelAndRequiredGuid m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    QList<OAIWorkweek> m_work_week;
    bool m_work_week_isSet;
    bool m_work_week_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkContractOutputModel)

#endif // OAIWorkContractOutputModel_H
