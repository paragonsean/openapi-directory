/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFileCategory.h
 *
 * 
 */

#ifndef OAIFileCategory_H
#define OAIFileCategory_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFileCategory : public OAIEnum {
public:
    OAIFileCategory();
    OAIFileCategory(QString json);
    ~OAIFileCategory() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIFileCategory {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        MISC, 
        APPLICATION, 
        PROJECTS, 
        PROPOSAL, 
        PROJECTFEES, 
        INVOICE, 
        USERS, 
        PROJECTTRAVELEXPENSE, 
        CUSTOMER
    };
    OAIFileCategory::eOAIFileCategory getValue() const;
    void setValue(const OAIFileCategory::eOAIFileCategory& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIFileCategory m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFileCategory)

#endif // OAIFileCategory_H
