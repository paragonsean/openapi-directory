/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrganizationSettingsModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrganizationSettingsModel::OAIOrganizationSettingsModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrganizationSettingsModel::OAIOrganizationSettingsModel() {
    this->initializeModel();
}

OAIOrganizationSettingsModel::~OAIOrganizationSettingsModel() {}

void OAIOrganizationSettingsModel::initializeModel() {

    m_currency_rounding_type_isSet = false;
    m_currency_rounding_type_isValid = false;

    m_default_footer_column1_isSet = false;
    m_default_footer_column1_isValid = false;

    m_default_footer_column2_isSet = false;
    m_default_footer_column2_isValid = false;

    m_default_footer_column3_isSet = false;
    m_default_footer_column3_isValid = false;

    m_display_project_number_isSet = false;
    m_display_project_number_isValid = false;

    m_flextime_calculation_start_date_isSet = false;
    m_flextime_calculation_start_date_isValid = false;

    m_is_adding_new_keywords_from_project_allowed_isSet = false;
    m_is_adding_new_keywords_from_project_allowed_isValid = false;

    m_is_customer_search_allowed_isSet = false;
    m_is_customer_search_allowed_isValid = false;

    m_is_entering_hour_planned_invoice_quantity_allowed_isSet = false;
    m_is_entering_hour_planned_invoice_quantity_allowed_isValid = false;

    m_is_identical_phase_codes_allowed_isSet = false;
    m_is_identical_phase_codes_allowed_isValid = false;

    m_is_travel_expense_immediately_invoiceable_isSet = false;
    m_is_travel_expense_immediately_invoiceable_isValid = false;

    m_is_work_hour_description_mandatory_isSet = false;
    m_is_work_hour_description_mandatory_isValid = false;

    m_last_customer_number_isSet = false;
    m_last_customer_number_isValid = false;

    m_last_flextime_calculation_end_time_isSet = false;
    m_last_flextime_calculation_end_time_isValid = false;

    m_last_flextime_calculation_user_isSet = false;
    m_last_flextime_calculation_user_isValid = false;

    m_last_invoice_number_isSet = false;
    m_last_invoice_number_isValid = false;

    m_last_project_number_isSet = false;
    m_last_project_number_isValid = false;

    m_last_purchase_order_number_isSet = false;
    m_last_purchase_order_number_isValid = false;

    m_last_travel_reimbursement_number_isSet = false;
    m_last_travel_reimbursement_number_isValid = false;

    m_max_flextime_balance_limit_isSet = false;
    m_max_flextime_balance_limit_isValid = false;

    m_min_flextime_balance_limit_isSet = false;
    m_min_flextime_balance_limit_isValid = false;

    m_next_customer_number_isSet = false;
    m_next_customer_number_isValid = false;

    m_next_invoice_number_isSet = false;
    m_next_invoice_number_isValid = false;

    m_next_project_number_isSet = false;
    m_next_project_number_isValid = false;

    m_next_purchase_order_number_isSet = false;
    m_next_purchase_order_number_isValid = false;

    m_next_travel_reimbursement_number_isSet = false;
    m_next_travel_reimbursement_number_isValid = false;

    m_overdue_interest_isSet = false;
    m_overdue_interest_isValid = false;

    m_payment_reference_number_display_setting_isSet = false;
    m_payment_reference_number_display_setting_isValid = false;

    m_payment_term_isSet = false;
    m_payment_term_isValid = false;

    m_project_name_display_format_setting_isSet = false;
    m_project_name_display_format_setting_isValid = false;

    m_project_name_display_setting_isSet = false;
    m_project_name_display_setting_isValid = false;

    m_purchase_order_number_prefix_isSet = false;
    m_purchase_order_number_prefix_isValid = false;

    m_quick_search_setting_isSet = false;
    m_quick_search_setting_isValid = false;

    m_set_credit_note_invoice_number_isSet = false;
    m_set_credit_note_invoice_number_isValid = false;

    m_travel_entry_closing_date_isSet = false;
    m_travel_entry_closing_date_isValid = false;

    m_travel_expense_reimbursement_start_date_isSet = false;
    m_travel_expense_reimbursement_start_date_isValid = false;

    m_travel_reimbursement_instructions_isSet = false;
    m_travel_reimbursement_instructions_isValid = false;

    m_unique_identifier_for_products_and_worktypes_isSet = false;
    m_unique_identifier_for_products_and_worktypes_isValid = false;

    m_work_hour_approval_mode_isSet = false;
    m_work_hour_approval_mode_isValid = false;

    m_work_hour_entry_format_isSet = false;
    m_work_hour_entry_format_isValid = false;

    m_work_week_isSet = false;
    m_work_week_isValid = false;

    m_worktime_entry_closing_date_isSet = false;
    m_worktime_entry_closing_date_isValid = false;
}

void OAIOrganizationSettingsModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrganizationSettingsModel::fromJsonObject(QJsonObject json) {

    m_currency_rounding_type_isValid = ::OpenAPI::fromJsonValue(m_currency_rounding_type, json[QString("currencyRoundingType")]);
    m_currency_rounding_type_isSet = !json[QString("currencyRoundingType")].isNull() && m_currency_rounding_type_isValid;

    m_default_footer_column1_isValid = ::OpenAPI::fromJsonValue(m_default_footer_column1, json[QString("defaultFooterColumn1")]);
    m_default_footer_column1_isSet = !json[QString("defaultFooterColumn1")].isNull() && m_default_footer_column1_isValid;

    m_default_footer_column2_isValid = ::OpenAPI::fromJsonValue(m_default_footer_column2, json[QString("defaultFooterColumn2")]);
    m_default_footer_column2_isSet = !json[QString("defaultFooterColumn2")].isNull() && m_default_footer_column2_isValid;

    m_default_footer_column3_isValid = ::OpenAPI::fromJsonValue(m_default_footer_column3, json[QString("defaultFooterColumn3")]);
    m_default_footer_column3_isSet = !json[QString("defaultFooterColumn3")].isNull() && m_default_footer_column3_isValid;

    m_display_project_number_isValid = ::OpenAPI::fromJsonValue(m_display_project_number, json[QString("displayProjectNumber")]);
    m_display_project_number_isSet = !json[QString("displayProjectNumber")].isNull() && m_display_project_number_isValid;

    m_flextime_calculation_start_date_isValid = ::OpenAPI::fromJsonValue(m_flextime_calculation_start_date, json[QString("flextimeCalculationStartDate")]);
    m_flextime_calculation_start_date_isSet = !json[QString("flextimeCalculationStartDate")].isNull() && m_flextime_calculation_start_date_isValid;

    m_is_adding_new_keywords_from_project_allowed_isValid = ::OpenAPI::fromJsonValue(m_is_adding_new_keywords_from_project_allowed, json[QString("isAddingNewKeywordsFromProjectAllowed")]);
    m_is_adding_new_keywords_from_project_allowed_isSet = !json[QString("isAddingNewKeywordsFromProjectAllowed")].isNull() && m_is_adding_new_keywords_from_project_allowed_isValid;

    m_is_customer_search_allowed_isValid = ::OpenAPI::fromJsonValue(m_is_customer_search_allowed, json[QString("isCustomerSearchAllowed")]);
    m_is_customer_search_allowed_isSet = !json[QString("isCustomerSearchAllowed")].isNull() && m_is_customer_search_allowed_isValid;

    m_is_entering_hour_planned_invoice_quantity_allowed_isValid = ::OpenAPI::fromJsonValue(m_is_entering_hour_planned_invoice_quantity_allowed, json[QString("isEnteringHourPlannedInvoiceQuantityAllowed")]);
    m_is_entering_hour_planned_invoice_quantity_allowed_isSet = !json[QString("isEnteringHourPlannedInvoiceQuantityAllowed")].isNull() && m_is_entering_hour_planned_invoice_quantity_allowed_isValid;

    m_is_identical_phase_codes_allowed_isValid = ::OpenAPI::fromJsonValue(m_is_identical_phase_codes_allowed, json[QString("isIdenticalPhaseCodesAllowed")]);
    m_is_identical_phase_codes_allowed_isSet = !json[QString("isIdenticalPhaseCodesAllowed")].isNull() && m_is_identical_phase_codes_allowed_isValid;

    m_is_travel_expense_immediately_invoiceable_isValid = ::OpenAPI::fromJsonValue(m_is_travel_expense_immediately_invoiceable, json[QString("isTravelExpenseImmediatelyInvoiceable")]);
    m_is_travel_expense_immediately_invoiceable_isSet = !json[QString("isTravelExpenseImmediatelyInvoiceable")].isNull() && m_is_travel_expense_immediately_invoiceable_isValid;

    m_is_work_hour_description_mandatory_isValid = ::OpenAPI::fromJsonValue(m_is_work_hour_description_mandatory, json[QString("isWorkHourDescriptionMandatory")]);
    m_is_work_hour_description_mandatory_isSet = !json[QString("isWorkHourDescriptionMandatory")].isNull() && m_is_work_hour_description_mandatory_isValid;

    m_last_customer_number_isValid = ::OpenAPI::fromJsonValue(m_last_customer_number, json[QString("lastCustomerNumber")]);
    m_last_customer_number_isSet = !json[QString("lastCustomerNumber")].isNull() && m_last_customer_number_isValid;

    m_last_flextime_calculation_end_time_isValid = ::OpenAPI::fromJsonValue(m_last_flextime_calculation_end_time, json[QString("lastFlextimeCalculationEndTime")]);
    m_last_flextime_calculation_end_time_isSet = !json[QString("lastFlextimeCalculationEndTime")].isNull() && m_last_flextime_calculation_end_time_isValid;

    m_last_flextime_calculation_user_isValid = ::OpenAPI::fromJsonValue(m_last_flextime_calculation_user, json[QString("lastFlextimeCalculationUser")]);
    m_last_flextime_calculation_user_isSet = !json[QString("lastFlextimeCalculationUser")].isNull() && m_last_flextime_calculation_user_isValid;

    m_last_invoice_number_isValid = ::OpenAPI::fromJsonValue(m_last_invoice_number, json[QString("lastInvoiceNumber")]);
    m_last_invoice_number_isSet = !json[QString("lastInvoiceNumber")].isNull() && m_last_invoice_number_isValid;

    m_last_project_number_isValid = ::OpenAPI::fromJsonValue(m_last_project_number, json[QString("lastProjectNumber")]);
    m_last_project_number_isSet = !json[QString("lastProjectNumber")].isNull() && m_last_project_number_isValid;

    m_last_purchase_order_number_isValid = ::OpenAPI::fromJsonValue(m_last_purchase_order_number, json[QString("lastPurchaseOrderNumber")]);
    m_last_purchase_order_number_isSet = !json[QString("lastPurchaseOrderNumber")].isNull() && m_last_purchase_order_number_isValid;

    m_last_travel_reimbursement_number_isValid = ::OpenAPI::fromJsonValue(m_last_travel_reimbursement_number, json[QString("lastTravelReimbursementNumber")]);
    m_last_travel_reimbursement_number_isSet = !json[QString("lastTravelReimbursementNumber")].isNull() && m_last_travel_reimbursement_number_isValid;

    m_max_flextime_balance_limit_isValid = ::OpenAPI::fromJsonValue(m_max_flextime_balance_limit, json[QString("maxFlextimeBalanceLimit")]);
    m_max_flextime_balance_limit_isSet = !json[QString("maxFlextimeBalanceLimit")].isNull() && m_max_flextime_balance_limit_isValid;

    m_min_flextime_balance_limit_isValid = ::OpenAPI::fromJsonValue(m_min_flextime_balance_limit, json[QString("minFlextimeBalanceLimit")]);
    m_min_flextime_balance_limit_isSet = !json[QString("minFlextimeBalanceLimit")].isNull() && m_min_flextime_balance_limit_isValid;

    m_next_customer_number_isValid = ::OpenAPI::fromJsonValue(m_next_customer_number, json[QString("nextCustomerNumber")]);
    m_next_customer_number_isSet = !json[QString("nextCustomerNumber")].isNull() && m_next_customer_number_isValid;

    m_next_invoice_number_isValid = ::OpenAPI::fromJsonValue(m_next_invoice_number, json[QString("nextInvoiceNumber")]);
    m_next_invoice_number_isSet = !json[QString("nextInvoiceNumber")].isNull() && m_next_invoice_number_isValid;

    m_next_project_number_isValid = ::OpenAPI::fromJsonValue(m_next_project_number, json[QString("nextProjectNumber")]);
    m_next_project_number_isSet = !json[QString("nextProjectNumber")].isNull() && m_next_project_number_isValid;

    m_next_purchase_order_number_isValid = ::OpenAPI::fromJsonValue(m_next_purchase_order_number, json[QString("nextPurchaseOrderNumber")]);
    m_next_purchase_order_number_isSet = !json[QString("nextPurchaseOrderNumber")].isNull() && m_next_purchase_order_number_isValid;

    m_next_travel_reimbursement_number_isValid = ::OpenAPI::fromJsonValue(m_next_travel_reimbursement_number, json[QString("nextTravelReimbursementNumber")]);
    m_next_travel_reimbursement_number_isSet = !json[QString("nextTravelReimbursementNumber")].isNull() && m_next_travel_reimbursement_number_isValid;

    m_overdue_interest_isValid = ::OpenAPI::fromJsonValue(m_overdue_interest, json[QString("overdueInterest")]);
    m_overdue_interest_isSet = !json[QString("overdueInterest")].isNull() && m_overdue_interest_isValid;

    m_payment_reference_number_display_setting_isValid = ::OpenAPI::fromJsonValue(m_payment_reference_number_display_setting, json[QString("paymentReferenceNumberDisplaySetting")]);
    m_payment_reference_number_display_setting_isSet = !json[QString("paymentReferenceNumberDisplaySetting")].isNull() && m_payment_reference_number_display_setting_isValid;

    m_payment_term_isValid = ::OpenAPI::fromJsonValue(m_payment_term, json[QString("paymentTerm")]);
    m_payment_term_isSet = !json[QString("paymentTerm")].isNull() && m_payment_term_isValid;

    m_project_name_display_format_setting_isValid = ::OpenAPI::fromJsonValue(m_project_name_display_format_setting, json[QString("projectNameDisplayFormatSetting")]);
    m_project_name_display_format_setting_isSet = !json[QString("projectNameDisplayFormatSetting")].isNull() && m_project_name_display_format_setting_isValid;

    m_project_name_display_setting_isValid = ::OpenAPI::fromJsonValue(m_project_name_display_setting, json[QString("projectNameDisplaySetting")]);
    m_project_name_display_setting_isSet = !json[QString("projectNameDisplaySetting")].isNull() && m_project_name_display_setting_isValid;

    m_purchase_order_number_prefix_isValid = ::OpenAPI::fromJsonValue(m_purchase_order_number_prefix, json[QString("purchaseOrderNumberPrefix")]);
    m_purchase_order_number_prefix_isSet = !json[QString("purchaseOrderNumberPrefix")].isNull() && m_purchase_order_number_prefix_isValid;

    m_quick_search_setting_isValid = ::OpenAPI::fromJsonValue(m_quick_search_setting, json[QString("quickSearchSetting")]);
    m_quick_search_setting_isSet = !json[QString("quickSearchSetting")].isNull() && m_quick_search_setting_isValid;

    m_set_credit_note_invoice_number_isValid = ::OpenAPI::fromJsonValue(m_set_credit_note_invoice_number, json[QString("setCreditNoteInvoiceNumber")]);
    m_set_credit_note_invoice_number_isSet = !json[QString("setCreditNoteInvoiceNumber")].isNull() && m_set_credit_note_invoice_number_isValid;

    m_travel_entry_closing_date_isValid = ::OpenAPI::fromJsonValue(m_travel_entry_closing_date, json[QString("travelEntryClosingDate")]);
    m_travel_entry_closing_date_isSet = !json[QString("travelEntryClosingDate")].isNull() && m_travel_entry_closing_date_isValid;

    m_travel_expense_reimbursement_start_date_isValid = ::OpenAPI::fromJsonValue(m_travel_expense_reimbursement_start_date, json[QString("travelExpenseReimbursementStartDate")]);
    m_travel_expense_reimbursement_start_date_isSet = !json[QString("travelExpenseReimbursementStartDate")].isNull() && m_travel_expense_reimbursement_start_date_isValid;

    m_travel_reimbursement_instructions_isValid = ::OpenAPI::fromJsonValue(m_travel_reimbursement_instructions, json[QString("travelReimbursementInstructions")]);
    m_travel_reimbursement_instructions_isSet = !json[QString("travelReimbursementInstructions")].isNull() && m_travel_reimbursement_instructions_isValid;

    m_unique_identifier_for_products_and_worktypes_isValid = ::OpenAPI::fromJsonValue(m_unique_identifier_for_products_and_worktypes, json[QString("uniqueIdentifierForProductsAndWorktypes")]);
    m_unique_identifier_for_products_and_worktypes_isSet = !json[QString("uniqueIdentifierForProductsAndWorktypes")].isNull() && m_unique_identifier_for_products_and_worktypes_isValid;

    m_work_hour_approval_mode_isValid = ::OpenAPI::fromJsonValue(m_work_hour_approval_mode, json[QString("workHourApprovalMode")]);
    m_work_hour_approval_mode_isSet = !json[QString("workHourApprovalMode")].isNull() && m_work_hour_approval_mode_isValid;

    m_work_hour_entry_format_isValid = ::OpenAPI::fromJsonValue(m_work_hour_entry_format, json[QString("workHourEntryFormat")]);
    m_work_hour_entry_format_isSet = !json[QString("workHourEntryFormat")].isNull() && m_work_hour_entry_format_isValid;

    m_work_week_isValid = ::OpenAPI::fromJsonValue(m_work_week, json[QString("workWeek")]);
    m_work_week_isSet = !json[QString("workWeek")].isNull() && m_work_week_isValid;

    m_worktime_entry_closing_date_isValid = ::OpenAPI::fromJsonValue(m_worktime_entry_closing_date, json[QString("worktimeEntryClosingDate")]);
    m_worktime_entry_closing_date_isSet = !json[QString("worktimeEntryClosingDate")].isNull() && m_worktime_entry_closing_date_isValid;
}

QString OAIOrganizationSettingsModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrganizationSettingsModel::asJsonObject() const {
    QJsonObject obj;
    if (m_currency_rounding_type.isSet()) {
        obj.insert(QString("currencyRoundingType"), ::OpenAPI::toJsonValue(m_currency_rounding_type));
    }
    if (m_default_footer_column1.isSet()) {
        obj.insert(QString("defaultFooterColumn1"), ::OpenAPI::toJsonValue(m_default_footer_column1));
    }
    if (m_default_footer_column2.isSet()) {
        obj.insert(QString("defaultFooterColumn2"), ::OpenAPI::toJsonValue(m_default_footer_column2));
    }
    if (m_default_footer_column3.isSet()) {
        obj.insert(QString("defaultFooterColumn3"), ::OpenAPI::toJsonValue(m_default_footer_column3));
    }
    if (m_display_project_number_isSet) {
        obj.insert(QString("displayProjectNumber"), ::OpenAPI::toJsonValue(m_display_project_number));
    }
    if (m_flextime_calculation_start_date_isSet) {
        obj.insert(QString("flextimeCalculationStartDate"), ::OpenAPI::toJsonValue(m_flextime_calculation_start_date));
    }
    if (m_is_adding_new_keywords_from_project_allowed_isSet) {
        obj.insert(QString("isAddingNewKeywordsFromProjectAllowed"), ::OpenAPI::toJsonValue(m_is_adding_new_keywords_from_project_allowed));
    }
    if (m_is_customer_search_allowed_isSet) {
        obj.insert(QString("isCustomerSearchAllowed"), ::OpenAPI::toJsonValue(m_is_customer_search_allowed));
    }
    if (m_is_entering_hour_planned_invoice_quantity_allowed_isSet) {
        obj.insert(QString("isEnteringHourPlannedInvoiceQuantityAllowed"), ::OpenAPI::toJsonValue(m_is_entering_hour_planned_invoice_quantity_allowed));
    }
    if (m_is_identical_phase_codes_allowed_isSet) {
        obj.insert(QString("isIdenticalPhaseCodesAllowed"), ::OpenAPI::toJsonValue(m_is_identical_phase_codes_allowed));
    }
    if (m_is_travel_expense_immediately_invoiceable_isSet) {
        obj.insert(QString("isTravelExpenseImmediatelyInvoiceable"), ::OpenAPI::toJsonValue(m_is_travel_expense_immediately_invoiceable));
    }
    if (m_is_work_hour_description_mandatory_isSet) {
        obj.insert(QString("isWorkHourDescriptionMandatory"), ::OpenAPI::toJsonValue(m_is_work_hour_description_mandatory));
    }
    if (m_last_customer_number_isSet) {
        obj.insert(QString("lastCustomerNumber"), ::OpenAPI::toJsonValue(m_last_customer_number));
    }
    if (m_last_flextime_calculation_end_time_isSet) {
        obj.insert(QString("lastFlextimeCalculationEndTime"), ::OpenAPI::toJsonValue(m_last_flextime_calculation_end_time));
    }
    if (m_last_flextime_calculation_user.isSet()) {
        obj.insert(QString("lastFlextimeCalculationUser"), ::OpenAPI::toJsonValue(m_last_flextime_calculation_user));
    }
    if (m_last_invoice_number_isSet) {
        obj.insert(QString("lastInvoiceNumber"), ::OpenAPI::toJsonValue(m_last_invoice_number));
    }
    if (m_last_project_number_isSet) {
        obj.insert(QString("lastProjectNumber"), ::OpenAPI::toJsonValue(m_last_project_number));
    }
    if (m_last_purchase_order_number_isSet) {
        obj.insert(QString("lastPurchaseOrderNumber"), ::OpenAPI::toJsonValue(m_last_purchase_order_number));
    }
    if (m_last_travel_reimbursement_number_isSet) {
        obj.insert(QString("lastTravelReimbursementNumber"), ::OpenAPI::toJsonValue(m_last_travel_reimbursement_number));
    }
    if (m_max_flextime_balance_limit_isSet) {
        obj.insert(QString("maxFlextimeBalanceLimit"), ::OpenAPI::toJsonValue(m_max_flextime_balance_limit));
    }
    if (m_min_flextime_balance_limit_isSet) {
        obj.insert(QString("minFlextimeBalanceLimit"), ::OpenAPI::toJsonValue(m_min_flextime_balance_limit));
    }
    if (m_next_customer_number_isSet) {
        obj.insert(QString("nextCustomerNumber"), ::OpenAPI::toJsonValue(m_next_customer_number));
    }
    if (m_next_invoice_number_isSet) {
        obj.insert(QString("nextInvoiceNumber"), ::OpenAPI::toJsonValue(m_next_invoice_number));
    }
    if (m_next_project_number_isSet) {
        obj.insert(QString("nextProjectNumber"), ::OpenAPI::toJsonValue(m_next_project_number));
    }
    if (m_next_purchase_order_number_isSet) {
        obj.insert(QString("nextPurchaseOrderNumber"), ::OpenAPI::toJsonValue(m_next_purchase_order_number));
    }
    if (m_next_travel_reimbursement_number_isSet) {
        obj.insert(QString("nextTravelReimbursementNumber"), ::OpenAPI::toJsonValue(m_next_travel_reimbursement_number));
    }
    if (m_overdue_interest_isSet) {
        obj.insert(QString("overdueInterest"), ::OpenAPI::toJsonValue(m_overdue_interest));
    }
    if (m_payment_reference_number_display_setting.isSet()) {
        obj.insert(QString("paymentReferenceNumberDisplaySetting"), ::OpenAPI::toJsonValue(m_payment_reference_number_display_setting));
    }
    if (m_payment_term_isSet) {
        obj.insert(QString("paymentTerm"), ::OpenAPI::toJsonValue(m_payment_term));
    }
    if (m_project_name_display_format_setting.isSet()) {
        obj.insert(QString("projectNameDisplayFormatSetting"), ::OpenAPI::toJsonValue(m_project_name_display_format_setting));
    }
    if (m_project_name_display_setting.isSet()) {
        obj.insert(QString("projectNameDisplaySetting"), ::OpenAPI::toJsonValue(m_project_name_display_setting));
    }
    if (m_purchase_order_number_prefix_isSet) {
        obj.insert(QString("purchaseOrderNumberPrefix"), ::OpenAPI::toJsonValue(m_purchase_order_number_prefix));
    }
    if (m_quick_search_setting.isSet()) {
        obj.insert(QString("quickSearchSetting"), ::OpenAPI::toJsonValue(m_quick_search_setting));
    }
    if (m_set_credit_note_invoice_number_isSet) {
        obj.insert(QString("setCreditNoteInvoiceNumber"), ::OpenAPI::toJsonValue(m_set_credit_note_invoice_number));
    }
    if (m_travel_entry_closing_date_isSet) {
        obj.insert(QString("travelEntryClosingDate"), ::OpenAPI::toJsonValue(m_travel_entry_closing_date));
    }
    if (m_travel_expense_reimbursement_start_date_isSet) {
        obj.insert(QString("travelExpenseReimbursementStartDate"), ::OpenAPI::toJsonValue(m_travel_expense_reimbursement_start_date));
    }
    if (m_travel_reimbursement_instructions_isSet) {
        obj.insert(QString("travelReimbursementInstructions"), ::OpenAPI::toJsonValue(m_travel_reimbursement_instructions));
    }
    if (m_unique_identifier_for_products_and_worktypes_isSet) {
        obj.insert(QString("uniqueIdentifierForProductsAndWorktypes"), ::OpenAPI::toJsonValue(m_unique_identifier_for_products_and_worktypes));
    }
    if (m_work_hour_approval_mode.isSet()) {
        obj.insert(QString("workHourApprovalMode"), ::OpenAPI::toJsonValue(m_work_hour_approval_mode));
    }
    if (m_work_hour_entry_format.isSet()) {
        obj.insert(QString("workHourEntryFormat"), ::OpenAPI::toJsonValue(m_work_hour_entry_format));
    }
    if (m_work_week.size() > 0) {
        obj.insert(QString("workWeek"), ::OpenAPI::toJsonValue(m_work_week));
    }
    if (m_worktime_entry_closing_date_isSet) {
        obj.insert(QString("worktimeEntryClosingDate"), ::OpenAPI::toJsonValue(m_worktime_entry_closing_date));
    }
    return obj;
}

OAITotalRoundingType OAIOrganizationSettingsModel::getCurrencyRoundingType() const {
    return m_currency_rounding_type;
}
void OAIOrganizationSettingsModel::setCurrencyRoundingType(const OAITotalRoundingType &currency_rounding_type) {
    m_currency_rounding_type = currency_rounding_type;
    m_currency_rounding_type_isSet = true;
}

bool OAIOrganizationSettingsModel::is_currency_rounding_type_Set() const{
    return m_currency_rounding_type_isSet;
}

bool OAIOrganizationSettingsModel::is_currency_rounding_type_Valid() const{
    return m_currency_rounding_type_isValid;
}

OAIFreeTextModel OAIOrganizationSettingsModel::getDefaultFooterColumn1() const {
    return m_default_footer_column1;
}
void OAIOrganizationSettingsModel::setDefaultFooterColumn1(const OAIFreeTextModel &default_footer_column1) {
    m_default_footer_column1 = default_footer_column1;
    m_default_footer_column1_isSet = true;
}

bool OAIOrganizationSettingsModel::is_default_footer_column1_Set() const{
    return m_default_footer_column1_isSet;
}

bool OAIOrganizationSettingsModel::is_default_footer_column1_Valid() const{
    return m_default_footer_column1_isValid;
}

OAIFreeTextModel OAIOrganizationSettingsModel::getDefaultFooterColumn2() const {
    return m_default_footer_column2;
}
void OAIOrganizationSettingsModel::setDefaultFooterColumn2(const OAIFreeTextModel &default_footer_column2) {
    m_default_footer_column2 = default_footer_column2;
    m_default_footer_column2_isSet = true;
}

bool OAIOrganizationSettingsModel::is_default_footer_column2_Set() const{
    return m_default_footer_column2_isSet;
}

bool OAIOrganizationSettingsModel::is_default_footer_column2_Valid() const{
    return m_default_footer_column2_isValid;
}

OAIFreeTextModel OAIOrganizationSettingsModel::getDefaultFooterColumn3() const {
    return m_default_footer_column3;
}
void OAIOrganizationSettingsModel::setDefaultFooterColumn3(const OAIFreeTextModel &default_footer_column3) {
    m_default_footer_column3 = default_footer_column3;
    m_default_footer_column3_isSet = true;
}

bool OAIOrganizationSettingsModel::is_default_footer_column3_Set() const{
    return m_default_footer_column3_isSet;
}

bool OAIOrganizationSettingsModel::is_default_footer_column3_Valid() const{
    return m_default_footer_column3_isValid;
}

bool OAIOrganizationSettingsModel::isDisplayProjectNumber() const {
    return m_display_project_number;
}
void OAIOrganizationSettingsModel::setDisplayProjectNumber(const bool &display_project_number) {
    m_display_project_number = display_project_number;
    m_display_project_number_isSet = true;
}

bool OAIOrganizationSettingsModel::is_display_project_number_Set() const{
    return m_display_project_number_isSet;
}

bool OAIOrganizationSettingsModel::is_display_project_number_Valid() const{
    return m_display_project_number_isValid;
}

QDate OAIOrganizationSettingsModel::getFlextimeCalculationStartDate() const {
    return m_flextime_calculation_start_date;
}
void OAIOrganizationSettingsModel::setFlextimeCalculationStartDate(const QDate &flextime_calculation_start_date) {
    m_flextime_calculation_start_date = flextime_calculation_start_date;
    m_flextime_calculation_start_date_isSet = true;
}

bool OAIOrganizationSettingsModel::is_flextime_calculation_start_date_Set() const{
    return m_flextime_calculation_start_date_isSet;
}

bool OAIOrganizationSettingsModel::is_flextime_calculation_start_date_Valid() const{
    return m_flextime_calculation_start_date_isValid;
}

bool OAIOrganizationSettingsModel::isIsAddingNewKeywordsFromProjectAllowed() const {
    return m_is_adding_new_keywords_from_project_allowed;
}
void OAIOrganizationSettingsModel::setIsAddingNewKeywordsFromProjectAllowed(const bool &is_adding_new_keywords_from_project_allowed) {
    m_is_adding_new_keywords_from_project_allowed = is_adding_new_keywords_from_project_allowed;
    m_is_adding_new_keywords_from_project_allowed_isSet = true;
}

bool OAIOrganizationSettingsModel::is_is_adding_new_keywords_from_project_allowed_Set() const{
    return m_is_adding_new_keywords_from_project_allowed_isSet;
}

bool OAIOrganizationSettingsModel::is_is_adding_new_keywords_from_project_allowed_Valid() const{
    return m_is_adding_new_keywords_from_project_allowed_isValid;
}

bool OAIOrganizationSettingsModel::isIsCustomerSearchAllowed() const {
    return m_is_customer_search_allowed;
}
void OAIOrganizationSettingsModel::setIsCustomerSearchAllowed(const bool &is_customer_search_allowed) {
    m_is_customer_search_allowed = is_customer_search_allowed;
    m_is_customer_search_allowed_isSet = true;
}

bool OAIOrganizationSettingsModel::is_is_customer_search_allowed_Set() const{
    return m_is_customer_search_allowed_isSet;
}

bool OAIOrganizationSettingsModel::is_is_customer_search_allowed_Valid() const{
    return m_is_customer_search_allowed_isValid;
}

bool OAIOrganizationSettingsModel::isIsEnteringHourPlannedInvoiceQuantityAllowed() const {
    return m_is_entering_hour_planned_invoice_quantity_allowed;
}
void OAIOrganizationSettingsModel::setIsEnteringHourPlannedInvoiceQuantityAllowed(const bool &is_entering_hour_planned_invoice_quantity_allowed) {
    m_is_entering_hour_planned_invoice_quantity_allowed = is_entering_hour_planned_invoice_quantity_allowed;
    m_is_entering_hour_planned_invoice_quantity_allowed_isSet = true;
}

bool OAIOrganizationSettingsModel::is_is_entering_hour_planned_invoice_quantity_allowed_Set() const{
    return m_is_entering_hour_planned_invoice_quantity_allowed_isSet;
}

bool OAIOrganizationSettingsModel::is_is_entering_hour_planned_invoice_quantity_allowed_Valid() const{
    return m_is_entering_hour_planned_invoice_quantity_allowed_isValid;
}

bool OAIOrganizationSettingsModel::isIsIdenticalPhaseCodesAllowed() const {
    return m_is_identical_phase_codes_allowed;
}
void OAIOrganizationSettingsModel::setIsIdenticalPhaseCodesAllowed(const bool &is_identical_phase_codes_allowed) {
    m_is_identical_phase_codes_allowed = is_identical_phase_codes_allowed;
    m_is_identical_phase_codes_allowed_isSet = true;
}

bool OAIOrganizationSettingsModel::is_is_identical_phase_codes_allowed_Set() const{
    return m_is_identical_phase_codes_allowed_isSet;
}

bool OAIOrganizationSettingsModel::is_is_identical_phase_codes_allowed_Valid() const{
    return m_is_identical_phase_codes_allowed_isValid;
}

bool OAIOrganizationSettingsModel::isIsTravelExpenseImmediatelyInvoiceable() const {
    return m_is_travel_expense_immediately_invoiceable;
}
void OAIOrganizationSettingsModel::setIsTravelExpenseImmediatelyInvoiceable(const bool &is_travel_expense_immediately_invoiceable) {
    m_is_travel_expense_immediately_invoiceable = is_travel_expense_immediately_invoiceable;
    m_is_travel_expense_immediately_invoiceable_isSet = true;
}

bool OAIOrganizationSettingsModel::is_is_travel_expense_immediately_invoiceable_Set() const{
    return m_is_travel_expense_immediately_invoiceable_isSet;
}

bool OAIOrganizationSettingsModel::is_is_travel_expense_immediately_invoiceable_Valid() const{
    return m_is_travel_expense_immediately_invoiceable_isValid;
}

bool OAIOrganizationSettingsModel::isIsWorkHourDescriptionMandatory() const {
    return m_is_work_hour_description_mandatory;
}
void OAIOrganizationSettingsModel::setIsWorkHourDescriptionMandatory(const bool &is_work_hour_description_mandatory) {
    m_is_work_hour_description_mandatory = is_work_hour_description_mandatory;
    m_is_work_hour_description_mandatory_isSet = true;
}

bool OAIOrganizationSettingsModel::is_is_work_hour_description_mandatory_Set() const{
    return m_is_work_hour_description_mandatory_isSet;
}

bool OAIOrganizationSettingsModel::is_is_work_hour_description_mandatory_Valid() const{
    return m_is_work_hour_description_mandatory_isValid;
}

qint64 OAIOrganizationSettingsModel::getLastCustomerNumber() const {
    return m_last_customer_number;
}
void OAIOrganizationSettingsModel::setLastCustomerNumber(const qint64 &last_customer_number) {
    m_last_customer_number = last_customer_number;
    m_last_customer_number_isSet = true;
}

bool OAIOrganizationSettingsModel::is_last_customer_number_Set() const{
    return m_last_customer_number_isSet;
}

bool OAIOrganizationSettingsModel::is_last_customer_number_Valid() const{
    return m_last_customer_number_isValid;
}

QDateTime OAIOrganizationSettingsModel::getLastFlextimeCalculationEndTime() const {
    return m_last_flextime_calculation_end_time;
}
void OAIOrganizationSettingsModel::setLastFlextimeCalculationEndTime(const QDateTime &last_flextime_calculation_end_time) {
    m_last_flextime_calculation_end_time = last_flextime_calculation_end_time;
    m_last_flextime_calculation_end_time_isSet = true;
}

bool OAIOrganizationSettingsModel::is_last_flextime_calculation_end_time_Set() const{
    return m_last_flextime_calculation_end_time_isSet;
}

bool OAIOrganizationSettingsModel::is_last_flextime_calculation_end_time_Valid() const{
    return m_last_flextime_calculation_end_time_isValid;
}

OAIUserWithFirstNameLastNameModel OAIOrganizationSettingsModel::getLastFlextimeCalculationUser() const {
    return m_last_flextime_calculation_user;
}
void OAIOrganizationSettingsModel::setLastFlextimeCalculationUser(const OAIUserWithFirstNameLastNameModel &last_flextime_calculation_user) {
    m_last_flextime_calculation_user = last_flextime_calculation_user;
    m_last_flextime_calculation_user_isSet = true;
}

bool OAIOrganizationSettingsModel::is_last_flextime_calculation_user_Set() const{
    return m_last_flextime_calculation_user_isSet;
}

bool OAIOrganizationSettingsModel::is_last_flextime_calculation_user_Valid() const{
    return m_last_flextime_calculation_user_isValid;
}

qint64 OAIOrganizationSettingsModel::getLastInvoiceNumber() const {
    return m_last_invoice_number;
}
void OAIOrganizationSettingsModel::setLastInvoiceNumber(const qint64 &last_invoice_number) {
    m_last_invoice_number = last_invoice_number;
    m_last_invoice_number_isSet = true;
}

bool OAIOrganizationSettingsModel::is_last_invoice_number_Set() const{
    return m_last_invoice_number_isSet;
}

bool OAIOrganizationSettingsModel::is_last_invoice_number_Valid() const{
    return m_last_invoice_number_isValid;
}

qint64 OAIOrganizationSettingsModel::getLastProjectNumber() const {
    return m_last_project_number;
}
void OAIOrganizationSettingsModel::setLastProjectNumber(const qint64 &last_project_number) {
    m_last_project_number = last_project_number;
    m_last_project_number_isSet = true;
}

bool OAIOrganizationSettingsModel::is_last_project_number_Set() const{
    return m_last_project_number_isSet;
}

bool OAIOrganizationSettingsModel::is_last_project_number_Valid() const{
    return m_last_project_number_isValid;
}

qint64 OAIOrganizationSettingsModel::getLastPurchaseOrderNumber() const {
    return m_last_purchase_order_number;
}
void OAIOrganizationSettingsModel::setLastPurchaseOrderNumber(const qint64 &last_purchase_order_number) {
    m_last_purchase_order_number = last_purchase_order_number;
    m_last_purchase_order_number_isSet = true;
}

bool OAIOrganizationSettingsModel::is_last_purchase_order_number_Set() const{
    return m_last_purchase_order_number_isSet;
}

bool OAIOrganizationSettingsModel::is_last_purchase_order_number_Valid() const{
    return m_last_purchase_order_number_isValid;
}

qint64 OAIOrganizationSettingsModel::getLastTravelReimbursementNumber() const {
    return m_last_travel_reimbursement_number;
}
void OAIOrganizationSettingsModel::setLastTravelReimbursementNumber(const qint64 &last_travel_reimbursement_number) {
    m_last_travel_reimbursement_number = last_travel_reimbursement_number;
    m_last_travel_reimbursement_number_isSet = true;
}

bool OAIOrganizationSettingsModel::is_last_travel_reimbursement_number_Set() const{
    return m_last_travel_reimbursement_number_isSet;
}

bool OAIOrganizationSettingsModel::is_last_travel_reimbursement_number_Valid() const{
    return m_last_travel_reimbursement_number_isValid;
}

double OAIOrganizationSettingsModel::getMaxFlextimeBalanceLimit() const {
    return m_max_flextime_balance_limit;
}
void OAIOrganizationSettingsModel::setMaxFlextimeBalanceLimit(const double &max_flextime_balance_limit) {
    m_max_flextime_balance_limit = max_flextime_balance_limit;
    m_max_flextime_balance_limit_isSet = true;
}

bool OAIOrganizationSettingsModel::is_max_flextime_balance_limit_Set() const{
    return m_max_flextime_balance_limit_isSet;
}

bool OAIOrganizationSettingsModel::is_max_flextime_balance_limit_Valid() const{
    return m_max_flextime_balance_limit_isValid;
}

double OAIOrganizationSettingsModel::getMinFlextimeBalanceLimit() const {
    return m_min_flextime_balance_limit;
}
void OAIOrganizationSettingsModel::setMinFlextimeBalanceLimit(const double &min_flextime_balance_limit) {
    m_min_flextime_balance_limit = min_flextime_balance_limit;
    m_min_flextime_balance_limit_isSet = true;
}

bool OAIOrganizationSettingsModel::is_min_flextime_balance_limit_Set() const{
    return m_min_flextime_balance_limit_isSet;
}

bool OAIOrganizationSettingsModel::is_min_flextime_balance_limit_Valid() const{
    return m_min_flextime_balance_limit_isValid;
}

qint64 OAIOrganizationSettingsModel::getNextCustomerNumber() const {
    return m_next_customer_number;
}
void OAIOrganizationSettingsModel::setNextCustomerNumber(const qint64 &next_customer_number) {
    m_next_customer_number = next_customer_number;
    m_next_customer_number_isSet = true;
}

bool OAIOrganizationSettingsModel::is_next_customer_number_Set() const{
    return m_next_customer_number_isSet;
}

bool OAIOrganizationSettingsModel::is_next_customer_number_Valid() const{
    return m_next_customer_number_isValid;
}

qint32 OAIOrganizationSettingsModel::getNextInvoiceNumber() const {
    return m_next_invoice_number;
}
void OAIOrganizationSettingsModel::setNextInvoiceNumber(const qint32 &next_invoice_number) {
    m_next_invoice_number = next_invoice_number;
    m_next_invoice_number_isSet = true;
}

bool OAIOrganizationSettingsModel::is_next_invoice_number_Set() const{
    return m_next_invoice_number_isSet;
}

bool OAIOrganizationSettingsModel::is_next_invoice_number_Valid() const{
    return m_next_invoice_number_isValid;
}

qint64 OAIOrganizationSettingsModel::getNextProjectNumber() const {
    return m_next_project_number;
}
void OAIOrganizationSettingsModel::setNextProjectNumber(const qint64 &next_project_number) {
    m_next_project_number = next_project_number;
    m_next_project_number_isSet = true;
}

bool OAIOrganizationSettingsModel::is_next_project_number_Set() const{
    return m_next_project_number_isSet;
}

bool OAIOrganizationSettingsModel::is_next_project_number_Valid() const{
    return m_next_project_number_isValid;
}

qint32 OAIOrganizationSettingsModel::getNextPurchaseOrderNumber() const {
    return m_next_purchase_order_number;
}
void OAIOrganizationSettingsModel::setNextPurchaseOrderNumber(const qint32 &next_purchase_order_number) {
    m_next_purchase_order_number = next_purchase_order_number;
    m_next_purchase_order_number_isSet = true;
}

bool OAIOrganizationSettingsModel::is_next_purchase_order_number_Set() const{
    return m_next_purchase_order_number_isSet;
}

bool OAIOrganizationSettingsModel::is_next_purchase_order_number_Valid() const{
    return m_next_purchase_order_number_isValid;
}

qint32 OAIOrganizationSettingsModel::getNextTravelReimbursementNumber() const {
    return m_next_travel_reimbursement_number;
}
void OAIOrganizationSettingsModel::setNextTravelReimbursementNumber(const qint32 &next_travel_reimbursement_number) {
    m_next_travel_reimbursement_number = next_travel_reimbursement_number;
    m_next_travel_reimbursement_number_isSet = true;
}

bool OAIOrganizationSettingsModel::is_next_travel_reimbursement_number_Set() const{
    return m_next_travel_reimbursement_number_isSet;
}

bool OAIOrganizationSettingsModel::is_next_travel_reimbursement_number_Valid() const{
    return m_next_travel_reimbursement_number_isValid;
}

double OAIOrganizationSettingsModel::getOverdueInterest() const {
    return m_overdue_interest;
}
void OAIOrganizationSettingsModel::setOverdueInterest(const double &overdue_interest) {
    m_overdue_interest = overdue_interest;
    m_overdue_interest_isSet = true;
}

bool OAIOrganizationSettingsModel::is_overdue_interest_Set() const{
    return m_overdue_interest_isSet;
}

bool OAIOrganizationSettingsModel::is_overdue_interest_Valid() const{
    return m_overdue_interest_isValid;
}

OAIReferenceNumberDisplay OAIOrganizationSettingsModel::getPaymentReferenceNumberDisplaySetting() const {
    return m_payment_reference_number_display_setting;
}
void OAIOrganizationSettingsModel::setPaymentReferenceNumberDisplaySetting(const OAIReferenceNumberDisplay &payment_reference_number_display_setting) {
    m_payment_reference_number_display_setting = payment_reference_number_display_setting;
    m_payment_reference_number_display_setting_isSet = true;
}

bool OAIOrganizationSettingsModel::is_payment_reference_number_display_setting_Set() const{
    return m_payment_reference_number_display_setting_isSet;
}

bool OAIOrganizationSettingsModel::is_payment_reference_number_display_setting_Valid() const{
    return m_payment_reference_number_display_setting_isValid;
}

qint32 OAIOrganizationSettingsModel::getPaymentTerm() const {
    return m_payment_term;
}
void OAIOrganizationSettingsModel::setPaymentTerm(const qint32 &payment_term) {
    m_payment_term = payment_term;
    m_payment_term_isSet = true;
}

bool OAIOrganizationSettingsModel::is_payment_term_Set() const{
    return m_payment_term_isSet;
}

bool OAIOrganizationSettingsModel::is_payment_term_Valid() const{
    return m_payment_term_isValid;
}

OAIProjectNameDisplayFormatOptions OAIOrganizationSettingsModel::getProjectNameDisplayFormatSetting() const {
    return m_project_name_display_format_setting;
}
void OAIOrganizationSettingsModel::setProjectNameDisplayFormatSetting(const OAIProjectNameDisplayFormatOptions &project_name_display_format_setting) {
    m_project_name_display_format_setting = project_name_display_format_setting;
    m_project_name_display_format_setting_isSet = true;
}

bool OAIOrganizationSettingsModel::is_project_name_display_format_setting_Set() const{
    return m_project_name_display_format_setting_isSet;
}

bool OAIOrganizationSettingsModel::is_project_name_display_format_setting_Valid() const{
    return m_project_name_display_format_setting_isValid;
}

OAIProjectNameDisplayOptions OAIOrganizationSettingsModel::getProjectNameDisplaySetting() const {
    return m_project_name_display_setting;
}
void OAIOrganizationSettingsModel::setProjectNameDisplaySetting(const OAIProjectNameDisplayOptions &project_name_display_setting) {
    m_project_name_display_setting = project_name_display_setting;
    m_project_name_display_setting_isSet = true;
}

bool OAIOrganizationSettingsModel::is_project_name_display_setting_Set() const{
    return m_project_name_display_setting_isSet;
}

bool OAIOrganizationSettingsModel::is_project_name_display_setting_Valid() const{
    return m_project_name_display_setting_isValid;
}

QString OAIOrganizationSettingsModel::getPurchaseOrderNumberPrefix() const {
    return m_purchase_order_number_prefix;
}
void OAIOrganizationSettingsModel::setPurchaseOrderNumberPrefix(const QString &purchase_order_number_prefix) {
    m_purchase_order_number_prefix = purchase_order_number_prefix;
    m_purchase_order_number_prefix_isSet = true;
}

bool OAIOrganizationSettingsModel::is_purchase_order_number_prefix_Set() const{
    return m_purchase_order_number_prefix_isSet;
}

bool OAIOrganizationSettingsModel::is_purchase_order_number_prefix_Valid() const{
    return m_purchase_order_number_prefix_isValid;
}

OAIQuickSearchOptions OAIOrganizationSettingsModel::getQuickSearchSetting() const {
    return m_quick_search_setting;
}
void OAIOrganizationSettingsModel::setQuickSearchSetting(const OAIQuickSearchOptions &quick_search_setting) {
    m_quick_search_setting = quick_search_setting;
    m_quick_search_setting_isSet = true;
}

bool OAIOrganizationSettingsModel::is_quick_search_setting_Set() const{
    return m_quick_search_setting_isSet;
}

bool OAIOrganizationSettingsModel::is_quick_search_setting_Valid() const{
    return m_quick_search_setting_isValid;
}

bool OAIOrganizationSettingsModel::isSetCreditNoteInvoiceNumber() const {
    return m_set_credit_note_invoice_number;
}
void OAIOrganizationSettingsModel::setSetCreditNoteInvoiceNumber(const bool &set_credit_note_invoice_number) {
    m_set_credit_note_invoice_number = set_credit_note_invoice_number;
    m_set_credit_note_invoice_number_isSet = true;
}

bool OAIOrganizationSettingsModel::is_set_credit_note_invoice_number_Set() const{
    return m_set_credit_note_invoice_number_isSet;
}

bool OAIOrganizationSettingsModel::is_set_credit_note_invoice_number_Valid() const{
    return m_set_credit_note_invoice_number_isValid;
}

QDate OAIOrganizationSettingsModel::getTravelEntryClosingDate() const {
    return m_travel_entry_closing_date;
}
void OAIOrganizationSettingsModel::setTravelEntryClosingDate(const QDate &travel_entry_closing_date) {
    m_travel_entry_closing_date = travel_entry_closing_date;
    m_travel_entry_closing_date_isSet = true;
}

bool OAIOrganizationSettingsModel::is_travel_entry_closing_date_Set() const{
    return m_travel_entry_closing_date_isSet;
}

bool OAIOrganizationSettingsModel::is_travel_entry_closing_date_Valid() const{
    return m_travel_entry_closing_date_isValid;
}

QDate OAIOrganizationSettingsModel::getTravelExpenseReimbursementStartDate() const {
    return m_travel_expense_reimbursement_start_date;
}
void OAIOrganizationSettingsModel::setTravelExpenseReimbursementStartDate(const QDate &travel_expense_reimbursement_start_date) {
    m_travel_expense_reimbursement_start_date = travel_expense_reimbursement_start_date;
    m_travel_expense_reimbursement_start_date_isSet = true;
}

bool OAIOrganizationSettingsModel::is_travel_expense_reimbursement_start_date_Set() const{
    return m_travel_expense_reimbursement_start_date_isSet;
}

bool OAIOrganizationSettingsModel::is_travel_expense_reimbursement_start_date_Valid() const{
    return m_travel_expense_reimbursement_start_date_isValid;
}

QString OAIOrganizationSettingsModel::getTravelReimbursementInstructions() const {
    return m_travel_reimbursement_instructions;
}
void OAIOrganizationSettingsModel::setTravelReimbursementInstructions(const QString &travel_reimbursement_instructions) {
    m_travel_reimbursement_instructions = travel_reimbursement_instructions;
    m_travel_reimbursement_instructions_isSet = true;
}

bool OAIOrganizationSettingsModel::is_travel_reimbursement_instructions_Set() const{
    return m_travel_reimbursement_instructions_isSet;
}

bool OAIOrganizationSettingsModel::is_travel_reimbursement_instructions_Valid() const{
    return m_travel_reimbursement_instructions_isValid;
}

bool OAIOrganizationSettingsModel::isUniqueIdentifierForProductsAndWorktypes() const {
    return m_unique_identifier_for_products_and_worktypes;
}
void OAIOrganizationSettingsModel::setUniqueIdentifierForProductsAndWorktypes(const bool &unique_identifier_for_products_and_worktypes) {
    m_unique_identifier_for_products_and_worktypes = unique_identifier_for_products_and_worktypes;
    m_unique_identifier_for_products_and_worktypes_isSet = true;
}

bool OAIOrganizationSettingsModel::is_unique_identifier_for_products_and_worktypes_Set() const{
    return m_unique_identifier_for_products_and_worktypes_isSet;
}

bool OAIOrganizationSettingsModel::is_unique_identifier_for_products_and_worktypes_Valid() const{
    return m_unique_identifier_for_products_and_worktypes_isValid;
}

OAIWorkHourApprovalMode OAIOrganizationSettingsModel::getWorkHourApprovalMode() const {
    return m_work_hour_approval_mode;
}
void OAIOrganizationSettingsModel::setWorkHourApprovalMode(const OAIWorkHourApprovalMode &work_hour_approval_mode) {
    m_work_hour_approval_mode = work_hour_approval_mode;
    m_work_hour_approval_mode_isSet = true;
}

bool OAIOrganizationSettingsModel::is_work_hour_approval_mode_Set() const{
    return m_work_hour_approval_mode_isSet;
}

bool OAIOrganizationSettingsModel::is_work_hour_approval_mode_Valid() const{
    return m_work_hour_approval_mode_isValid;
}

OAIEntryFormat OAIOrganizationSettingsModel::getWorkHourEntryFormat() const {
    return m_work_hour_entry_format;
}
void OAIOrganizationSettingsModel::setWorkHourEntryFormat(const OAIEntryFormat &work_hour_entry_format) {
    m_work_hour_entry_format = work_hour_entry_format;
    m_work_hour_entry_format_isSet = true;
}

bool OAIOrganizationSettingsModel::is_work_hour_entry_format_Set() const{
    return m_work_hour_entry_format_isSet;
}

bool OAIOrganizationSettingsModel::is_work_hour_entry_format_Valid() const{
    return m_work_hour_entry_format_isValid;
}

QList<OAIWorkweek> OAIOrganizationSettingsModel::getWorkWeek() const {
    return m_work_week;
}
void OAIOrganizationSettingsModel::setWorkWeek(const QList<OAIWorkweek> &work_week) {
    m_work_week = work_week;
    m_work_week_isSet = true;
}

bool OAIOrganizationSettingsModel::is_work_week_Set() const{
    return m_work_week_isSet;
}

bool OAIOrganizationSettingsModel::is_work_week_Valid() const{
    return m_work_week_isValid;
}

QDate OAIOrganizationSettingsModel::getWorktimeEntryClosingDate() const {
    return m_worktime_entry_closing_date;
}
void OAIOrganizationSettingsModel::setWorktimeEntryClosingDate(const QDate &worktime_entry_closing_date) {
    m_worktime_entry_closing_date = worktime_entry_closing_date;
    m_worktime_entry_closing_date_isSet = true;
}

bool OAIOrganizationSettingsModel::is_worktime_entry_closing_date_Set() const{
    return m_worktime_entry_closing_date_isSet;
}

bool OAIOrganizationSettingsModel::is_worktime_entry_closing_date_Valid() const{
    return m_worktime_entry_closing_date_isValid;
}

bool OAIOrganizationSettingsModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency_rounding_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_footer_column1.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_footer_column2.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_footer_column3.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_project_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_flextime_calculation_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_adding_new_keywords_from_project_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_customer_search_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_entering_hour_planned_invoice_quantity_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_identical_phase_codes_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_travel_expense_immediately_invoiceable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_work_hour_description_mandatory_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_customer_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_flextime_calculation_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_flextime_calculation_user.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_invoice_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_project_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_purchase_order_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_travel_reimbursement_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_flextime_balance_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_flextime_balance_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_customer_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_invoice_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_project_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_purchase_order_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_travel_reimbursement_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_overdue_interest_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_reference_number_display_setting.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_term_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_name_display_format_setting.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_name_display_setting.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchase_order_number_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quick_search_setting.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_set_credit_note_invoice_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_travel_entry_closing_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_travel_expense_reimbursement_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_travel_reimbursement_instructions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unique_identifier_for_products_and_worktypes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_work_hour_approval_mode.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_work_hour_entry_format.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_work_week.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_worktime_entry_closing_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrganizationSettingsModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_work_week_isValid && true;
}

} // namespace OpenAPI
