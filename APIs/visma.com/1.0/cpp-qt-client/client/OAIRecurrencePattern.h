/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecurrencePattern.h
 *
 * 
 */

#ifndef OAIRecurrencePattern_H
#define OAIRecurrencePattern_H

#include <QJsonObject>

#include "OAIDailyModel.h"
#include "OAIMonthlyModel.h"
#include "OAIWeeklyModel.h"
#include "OAIYearlyModel.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDailyModel;
class OAIMonthlyModel;
class OAIWeeklyModel;
class OAIYearlyModel;

class OAIRecurrencePattern : public OAIObject {
public:
    OAIRecurrencePattern();
    OAIRecurrencePattern(QString json);
    ~OAIRecurrencePattern() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDailyModel getDaily() const;
    void setDaily(const OAIDailyModel &daily);
    bool is_daily_Set() const;
    bool is_daily_Valid() const;

    OAIMonthlyModel getMonthly() const;
    void setMonthly(const OAIMonthlyModel &monthly);
    bool is_monthly_Set() const;
    bool is_monthly_Valid() const;

    OAIWeeklyModel getWeekly() const;
    void setWeekly(const OAIWeeklyModel &weekly);
    bool is_weekly_Set() const;
    bool is_weekly_Valid() const;

    OAIYearlyModel getYearly() const;
    void setYearly(const OAIYearlyModel &yearly);
    bool is_yearly_Set() const;
    bool is_yearly_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDailyModel m_daily;
    bool m_daily_isSet;
    bool m_daily_isValid;

    OAIMonthlyModel m_monthly;
    bool m_monthly_isSet;
    bool m_monthly_isValid;

    OAIWeeklyModel m_weekly;
    bool m_weekly_isSet;
    bool m_weekly_isValid;

    OAIYearlyModel m_yearly;
    bool m_yearly_isSet;
    bool m_yearly_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecurrencePattern)

#endif // OAIRecurrencePattern_H
