/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIYearlyModel.h
 *
 * 
 */

#ifndef OAIYearlyModel_H
#define OAIYearlyModel_H

#include <QJsonObject>

#include "OAIDayOrdinal.h"
#include "OAIDayOrdinalOption.h"
#include "OAIMonths.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIYearlyModel : public OAIObject {
public:
    OAIYearlyModel();
    OAIYearlyModel(QString json);
    ~OAIYearlyModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDayOfMonth() const;
    void setDayOfMonth(const qint32 &day_of_month);
    bool is_day_of_month_Set() const;
    bool is_day_of_month_Valid() const;

    OAIDayOrdinal getDayOrdinal() const;
    void setDayOrdinal(const OAIDayOrdinal &day_ordinal);
    bool is_day_ordinal_Set() const;
    bool is_day_ordinal_Valid() const;

    OAIDayOrdinalOption getDayOrdinalOption() const;
    void setDayOrdinalOption(const OAIDayOrdinalOption &day_ordinal_option);
    bool is_day_ordinal_option_Set() const;
    bool is_day_ordinal_option_Valid() const;

    OAIMonths getMonth() const;
    void setMonth(const OAIMonths &month);
    bool is_month_Set() const;
    bool is_month_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_day_of_month;
    bool m_day_of_month_isSet;
    bool m_day_of_month_isValid;

    OAIDayOrdinal m_day_ordinal;
    bool m_day_ordinal_isSet;
    bool m_day_ordinal_isValid;

    OAIDayOrdinalOption m_day_ordinal_option;
    bool m_day_ordinal_option_isSet;
    bool m_day_ordinal_option_isValid;

    OAIMonths m_month;
    bool m_month_isSet;
    bool m_month_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIYearlyModel)

#endif // OAIYearlyModel_H
