/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProjectForecastOutputModel.h
 *
 * 
 */

#ifndef OAIProjectForecastOutputModel_H
#define OAIProjectForecastOutputModel_H

#include <QJsonObject>

#include "OAIModelBaseWithRequiredGuid.h"
#include "OAIMoneyOutputModel.h"
#include "OAIUserWithFirstNameLastNameAndPhotoFileModel.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMoneyOutputModel;
class OAIUserWithFirstNameLastNameAndPhotoFileModel;
class OAIModelBaseWithRequiredGuid;

class OAIProjectForecastOutputModel : public OAIObject {
public:
    OAIProjectForecastOutputModel();
    OAIProjectForecastOutputModel(QString json);
    ~OAIProjectForecastOutputModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMoneyOutputModel getBillingForecast() const;
    void setBillingForecast(const OAIMoneyOutputModel &billing_forecast);
    bool is_billing_forecast_Set() const;
    bool is_billing_forecast_Valid() const;

    QString getBillingForecastNotes() const;
    void setBillingForecastNotes(const QString &billing_forecast_notes);
    bool is_billing_forecast_notes_Set() const;
    bool is_billing_forecast_notes_Valid() const;

    OAIUserWithFirstNameLastNameAndPhotoFileModel getCreatedBy() const;
    void setCreatedBy(const OAIUserWithFirstNameLastNameAndPhotoFileModel &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QDateTime getCreatedDateTime() const;
    void setCreatedDateTime(const QDateTime &created_date_time);
    bool is_created_date_time_Set() const;
    bool is_created_date_time_Valid() const;

    OAIMoneyOutputModel getExpenseForecast() const;
    void setExpenseForecast(const OAIMoneyOutputModel &expense_forecast);
    bool is_expense_forecast_Set() const;
    bool is_expense_forecast_Valid() const;

    QString getExpenseForecastNotes() const;
    void setExpenseForecastNotes(const QString &expense_forecast_notes);
    bool is_expense_forecast_notes_Set() const;
    bool is_expense_forecast_notes_Valid() const;

    QString getGuid() const;
    void setGuid(const QString &guid);
    bool is_guid_Set() const;
    bool is_guid_Valid() const;

    OAIMoneyOutputModel getLaborExpenseForecast() const;
    void setLaborExpenseForecast(const OAIMoneyOutputModel &labor_expense_forecast);
    bool is_labor_expense_forecast_Set() const;
    bool is_labor_expense_forecast_Valid() const;

    QString getLaborExpenseForecastNotes() const;
    void setLaborExpenseForecastNotes(const QString &labor_expense_forecast_notes);
    bool is_labor_expense_forecast_notes_Set() const;
    bool is_labor_expense_forecast_notes_Valid() const;

    OAIUserWithFirstNameLastNameAndPhotoFileModel getLastUpdatedBy() const;
    void setLastUpdatedBy(const OAIUserWithFirstNameLastNameAndPhotoFileModel &last_updated_by);
    bool is_last_updated_by_Set() const;
    bool is_last_updated_by_Valid() const;

    QDateTime getLastUpdatedDateTime() const;
    void setLastUpdatedDateTime(const QDateTime &last_updated_date_time);
    bool is_last_updated_date_time_Set() const;
    bool is_last_updated_date_time_Valid() const;

    qint32 getMonth() const;
    void setMonth(const qint32 &month);
    bool is_month_Set() const;
    bool is_month_Valid() const;

    OAIModelBaseWithRequiredGuid getProject() const;
    void setProject(const OAIModelBaseWithRequiredGuid &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    OAIMoneyOutputModel getRevenueForecast() const;
    void setRevenueForecast(const OAIMoneyOutputModel &revenue_forecast);
    bool is_revenue_forecast_Set() const;
    bool is_revenue_forecast_Valid() const;

    QString getRevenueForecastNotes() const;
    void setRevenueForecastNotes(const QString &revenue_forecast_notes);
    bool is_revenue_forecast_notes_Set() const;
    bool is_revenue_forecast_notes_Valid() const;

    qint32 getYear() const;
    void setYear(const qint32 &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMoneyOutputModel m_billing_forecast;
    bool m_billing_forecast_isSet;
    bool m_billing_forecast_isValid;

    QString m_billing_forecast_notes;
    bool m_billing_forecast_notes_isSet;
    bool m_billing_forecast_notes_isValid;

    OAIUserWithFirstNameLastNameAndPhotoFileModel m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QDateTime m_created_date_time;
    bool m_created_date_time_isSet;
    bool m_created_date_time_isValid;

    OAIMoneyOutputModel m_expense_forecast;
    bool m_expense_forecast_isSet;
    bool m_expense_forecast_isValid;

    QString m_expense_forecast_notes;
    bool m_expense_forecast_notes_isSet;
    bool m_expense_forecast_notes_isValid;

    QString m_guid;
    bool m_guid_isSet;
    bool m_guid_isValid;

    OAIMoneyOutputModel m_labor_expense_forecast;
    bool m_labor_expense_forecast_isSet;
    bool m_labor_expense_forecast_isValid;

    QString m_labor_expense_forecast_notes;
    bool m_labor_expense_forecast_notes_isSet;
    bool m_labor_expense_forecast_notes_isValid;

    OAIUserWithFirstNameLastNameAndPhotoFileModel m_last_updated_by;
    bool m_last_updated_by_isSet;
    bool m_last_updated_by_isValid;

    QDateTime m_last_updated_date_time;
    bool m_last_updated_date_time_isSet;
    bool m_last_updated_date_time_isValid;

    qint32 m_month;
    bool m_month_isSet;
    bool m_month_isValid;

    OAIModelBaseWithRequiredGuid m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    OAIMoneyOutputModel m_revenue_forecast;
    bool m_revenue_forecast_isSet;
    bool m_revenue_forecast_isValid;

    QString m_revenue_forecast_notes;
    bool m_revenue_forecast_notes_isSet;
    bool m_revenue_forecast_notes_isValid;

    qint32 m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProjectForecastOutputModel)

#endif // OAIProjectForecastOutputModel_H
