/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRoleAllocationInputModel.h
 *
 * 
 */

#ifndef OAIRoleAllocationInputModel_H
#define OAIRoleAllocationInputModel_H

#include <QJsonObject>

#include "OAISimpleInputModel.h"
#include "OAISimpleInputRequiredModel.h"
#include <QDate>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISimpleInputModel;
class OAISimpleInputRequiredModel;

class OAIRoleAllocationInputModel : public OAIObject {
public:
    OAIRoleAllocationInputModel();
    OAIRoleAllocationInputModel(QString json);
    ~OAIRoleAllocationInputModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAllocationHours() const;
    void setAllocationHours(const double &allocation_hours);
    bool is_allocation_hours_Set() const;
    bool is_allocation_hours_Valid() const;

    QDate getEndDate() const;
    void setEndDate(const QDate &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    OAISimpleInputModel getPhase() const;
    void setPhase(const OAISimpleInputModel &phase);
    bool is_phase_Set() const;
    bool is_phase_Valid() const;

    OAISimpleInputRequiredModel getProject() const;
    void setProject(const OAISimpleInputRequiredModel &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    OAISimpleInputRequiredModel getRole() const;
    void setRole(const OAISimpleInputRequiredModel &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    QDate getStartDate() const;
    void setStartDate(const QDate &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_allocation_hours;
    bool m_allocation_hours_isSet;
    bool m_allocation_hours_isValid;

    QDate m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    OAISimpleInputModel m_phase;
    bool m_phase_isSet;
    bool m_phase_isValid;

    OAISimpleInputRequiredModel m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    OAISimpleInputRequiredModel m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    QDate m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRoleAllocationInputModel)

#endif // OAIRoleAllocationInputModel_H
