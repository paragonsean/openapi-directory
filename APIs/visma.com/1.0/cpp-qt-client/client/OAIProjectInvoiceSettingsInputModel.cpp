/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectInvoiceSettingsInputModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectInvoiceSettingsInputModel::OAIProjectInvoiceSettingsInputModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectInvoiceSettingsInputModel::OAIProjectInvoiceSettingsInputModel() {
    this->initializeModel();
}

OAIProjectInvoiceSettingsInputModel::~OAIProjectInvoiceSettingsInputModel() {}

void OAIProjectInvoiceSettingsInputModel::initializeModel() {

    m_free_text1_isSet = false;
    m_free_text1_isValid = false;

    m_free_text2_isSet = false;
    m_free_text2_isValid = false;

    m_html_text1_isSet = false;
    m_html_text1_isValid = false;

    m_html_text2_isSet = false;
    m_html_text2_isValid = false;

    m_project_isSet = false;
    m_project_isValid = false;

    m_project_fee_description_format_isSet = false;
    m_project_fee_description_format_isValid = false;

    m_project_fee_grouping_isSet = false;
    m_project_fee_grouping_isValid = false;

    m_project_fee_primary_group_by_isSet = false;
    m_project_fee_primary_group_by_isValid = false;

    m_project_fee_secondary_group_by_isSet = false;
    m_project_fee_secondary_group_by_isValid = false;

    m_project_travel_expense_description_format_isSet = false;
    m_project_travel_expense_description_format_isValid = false;

    m_project_travel_expense_grouping_isSet = false;
    m_project_travel_expense_grouping_isValid = false;

    m_project_travel_expense_primary_group_by_isSet = false;
    m_project_travel_expense_primary_group_by_isValid = false;

    m_project_travel_expense_secondary_group_by_isSet = false;
    m_project_travel_expense_secondary_group_by_isValid = false;

    m_show_attachment_price_excluding_value_added_tax_isSet = false;
    m_show_attachment_price_excluding_value_added_tax_isValid = false;

    m_show_attachment_unit_isSet = false;
    m_show_attachment_unit_isValid = false;

    m_show_attachment_unit_price_isSet = false;
    m_show_attachment_unit_price_isValid = false;

    m_show_attachment_value_added_tax_isSet = false;
    m_show_attachment_value_added_tax_isValid = false;

    m_show_categories_isSet = false;
    m_show_categories_isValid = false;

    m_show_footer_isSet = false;
    m_show_footer_isValid = false;

    m_show_logo_and_title_isSet = false;
    m_show_logo_and_title_isValid = false;

    m_show_price_excluding_value_added_tax_isSet = false;
    m_show_price_excluding_value_added_tax_isValid = false;

    m_show_quantity_isSet = false;
    m_show_quantity_isValid = false;

    m_show_reference_number_isSet = false;
    m_show_reference_number_isValid = false;

    m_show_unit_isSet = false;
    m_show_unit_isValid = false;

    m_show_unit_price_isSet = false;
    m_show_unit_price_isValid = false;

    m_show_value_added_tax_isSet = false;
    m_show_value_added_tax_isValid = false;

    m_style_isSet = false;
    m_style_isValid = false;

    m_work_hour_description_format_isSet = false;
    m_work_hour_description_format_isValid = false;

    m_work_hour_grouping_isSet = false;
    m_work_hour_grouping_isValid = false;

    m_work_hour_primary_group_by_isSet = false;
    m_work_hour_primary_group_by_isValid = false;

    m_work_hour_secondary_group_by_isSet = false;
    m_work_hour_secondary_group_by_isValid = false;
}

void OAIProjectInvoiceSettingsInputModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectInvoiceSettingsInputModel::fromJsonObject(QJsonObject json) {

    m_free_text1_isValid = ::OpenAPI::fromJsonValue(m_free_text1, json[QString("freeText1")]);
    m_free_text1_isSet = !json[QString("freeText1")].isNull() && m_free_text1_isValid;

    m_free_text2_isValid = ::OpenAPI::fromJsonValue(m_free_text2, json[QString("freeText2")]);
    m_free_text2_isSet = !json[QString("freeText2")].isNull() && m_free_text2_isValid;

    m_html_text1_isValid = ::OpenAPI::fromJsonValue(m_html_text1, json[QString("htmlText1")]);
    m_html_text1_isSet = !json[QString("htmlText1")].isNull() && m_html_text1_isValid;

    m_html_text2_isValid = ::OpenAPI::fromJsonValue(m_html_text2, json[QString("htmlText2")]);
    m_html_text2_isSet = !json[QString("htmlText2")].isNull() && m_html_text2_isValid;

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;

    m_project_fee_description_format_isValid = ::OpenAPI::fromJsonValue(m_project_fee_description_format, json[QString("projectFeeDescriptionFormat")]);
    m_project_fee_description_format_isSet = !json[QString("projectFeeDescriptionFormat")].isNull() && m_project_fee_description_format_isValid;

    m_project_fee_grouping_isValid = ::OpenAPI::fromJsonValue(m_project_fee_grouping, json[QString("projectFeeGrouping")]);
    m_project_fee_grouping_isSet = !json[QString("projectFeeGrouping")].isNull() && m_project_fee_grouping_isValid;

    m_project_fee_primary_group_by_isValid = ::OpenAPI::fromJsonValue(m_project_fee_primary_group_by, json[QString("projectFeePrimaryGroupBy")]);
    m_project_fee_primary_group_by_isSet = !json[QString("projectFeePrimaryGroupBy")].isNull() && m_project_fee_primary_group_by_isValid;

    m_project_fee_secondary_group_by_isValid = ::OpenAPI::fromJsonValue(m_project_fee_secondary_group_by, json[QString("projectFeeSecondaryGroupBy")]);
    m_project_fee_secondary_group_by_isSet = !json[QString("projectFeeSecondaryGroupBy")].isNull() && m_project_fee_secondary_group_by_isValid;

    m_project_travel_expense_description_format_isValid = ::OpenAPI::fromJsonValue(m_project_travel_expense_description_format, json[QString("projectTravelExpenseDescriptionFormat")]);
    m_project_travel_expense_description_format_isSet = !json[QString("projectTravelExpenseDescriptionFormat")].isNull() && m_project_travel_expense_description_format_isValid;

    m_project_travel_expense_grouping_isValid = ::OpenAPI::fromJsonValue(m_project_travel_expense_grouping, json[QString("projectTravelExpenseGrouping")]);
    m_project_travel_expense_grouping_isSet = !json[QString("projectTravelExpenseGrouping")].isNull() && m_project_travel_expense_grouping_isValid;

    m_project_travel_expense_primary_group_by_isValid = ::OpenAPI::fromJsonValue(m_project_travel_expense_primary_group_by, json[QString("projectTravelExpensePrimaryGroupBy")]);
    m_project_travel_expense_primary_group_by_isSet = !json[QString("projectTravelExpensePrimaryGroupBy")].isNull() && m_project_travel_expense_primary_group_by_isValid;

    m_project_travel_expense_secondary_group_by_isValid = ::OpenAPI::fromJsonValue(m_project_travel_expense_secondary_group_by, json[QString("projectTravelExpenseSecondaryGroupBy")]);
    m_project_travel_expense_secondary_group_by_isSet = !json[QString("projectTravelExpenseSecondaryGroupBy")].isNull() && m_project_travel_expense_secondary_group_by_isValid;

    m_show_attachment_price_excluding_value_added_tax_isValid = ::OpenAPI::fromJsonValue(m_show_attachment_price_excluding_value_added_tax, json[QString("showAttachmentPriceExcludingValueAddedTax")]);
    m_show_attachment_price_excluding_value_added_tax_isSet = !json[QString("showAttachmentPriceExcludingValueAddedTax")].isNull() && m_show_attachment_price_excluding_value_added_tax_isValid;

    m_show_attachment_unit_isValid = ::OpenAPI::fromJsonValue(m_show_attachment_unit, json[QString("showAttachmentUnit")]);
    m_show_attachment_unit_isSet = !json[QString("showAttachmentUnit")].isNull() && m_show_attachment_unit_isValid;

    m_show_attachment_unit_price_isValid = ::OpenAPI::fromJsonValue(m_show_attachment_unit_price, json[QString("showAttachmentUnitPrice")]);
    m_show_attachment_unit_price_isSet = !json[QString("showAttachmentUnitPrice")].isNull() && m_show_attachment_unit_price_isValid;

    m_show_attachment_value_added_tax_isValid = ::OpenAPI::fromJsonValue(m_show_attachment_value_added_tax, json[QString("showAttachmentValueAddedTax")]);
    m_show_attachment_value_added_tax_isSet = !json[QString("showAttachmentValueAddedTax")].isNull() && m_show_attachment_value_added_tax_isValid;

    m_show_categories_isValid = ::OpenAPI::fromJsonValue(m_show_categories, json[QString("showCategories")]);
    m_show_categories_isSet = !json[QString("showCategories")].isNull() && m_show_categories_isValid;

    m_show_footer_isValid = ::OpenAPI::fromJsonValue(m_show_footer, json[QString("showFooter")]);
    m_show_footer_isSet = !json[QString("showFooter")].isNull() && m_show_footer_isValid;

    m_show_logo_and_title_isValid = ::OpenAPI::fromJsonValue(m_show_logo_and_title, json[QString("showLogoAndTitle")]);
    m_show_logo_and_title_isSet = !json[QString("showLogoAndTitle")].isNull() && m_show_logo_and_title_isValid;

    m_show_price_excluding_value_added_tax_isValid = ::OpenAPI::fromJsonValue(m_show_price_excluding_value_added_tax, json[QString("showPriceExcludingValueAddedTax")]);
    m_show_price_excluding_value_added_tax_isSet = !json[QString("showPriceExcludingValueAddedTax")].isNull() && m_show_price_excluding_value_added_tax_isValid;

    m_show_quantity_isValid = ::OpenAPI::fromJsonValue(m_show_quantity, json[QString("showQuantity")]);
    m_show_quantity_isSet = !json[QString("showQuantity")].isNull() && m_show_quantity_isValid;

    m_show_reference_number_isValid = ::OpenAPI::fromJsonValue(m_show_reference_number, json[QString("showReferenceNumber")]);
    m_show_reference_number_isSet = !json[QString("showReferenceNumber")].isNull() && m_show_reference_number_isValid;

    m_show_unit_isValid = ::OpenAPI::fromJsonValue(m_show_unit, json[QString("showUnit")]);
    m_show_unit_isSet = !json[QString("showUnit")].isNull() && m_show_unit_isValid;

    m_show_unit_price_isValid = ::OpenAPI::fromJsonValue(m_show_unit_price, json[QString("showUnitPrice")]);
    m_show_unit_price_isSet = !json[QString("showUnitPrice")].isNull() && m_show_unit_price_isValid;

    m_show_value_added_tax_isValid = ::OpenAPI::fromJsonValue(m_show_value_added_tax, json[QString("showValueAddedTax")]);
    m_show_value_added_tax_isSet = !json[QString("showValueAddedTax")].isNull() && m_show_value_added_tax_isValid;

    m_style_isValid = ::OpenAPI::fromJsonValue(m_style, json[QString("style")]);
    m_style_isSet = !json[QString("style")].isNull() && m_style_isValid;

    m_work_hour_description_format_isValid = ::OpenAPI::fromJsonValue(m_work_hour_description_format, json[QString("workHourDescriptionFormat")]);
    m_work_hour_description_format_isSet = !json[QString("workHourDescriptionFormat")].isNull() && m_work_hour_description_format_isValid;

    m_work_hour_grouping_isValid = ::OpenAPI::fromJsonValue(m_work_hour_grouping, json[QString("workHourGrouping")]);
    m_work_hour_grouping_isSet = !json[QString("workHourGrouping")].isNull() && m_work_hour_grouping_isValid;

    m_work_hour_primary_group_by_isValid = ::OpenAPI::fromJsonValue(m_work_hour_primary_group_by, json[QString("workHourPrimaryGroupBy")]);
    m_work_hour_primary_group_by_isSet = !json[QString("workHourPrimaryGroupBy")].isNull() && m_work_hour_primary_group_by_isValid;

    m_work_hour_secondary_group_by_isValid = ::OpenAPI::fromJsonValue(m_work_hour_secondary_group_by, json[QString("workHourSecondaryGroupBy")]);
    m_work_hour_secondary_group_by_isSet = !json[QString("workHourSecondaryGroupBy")].isNull() && m_work_hour_secondary_group_by_isValid;
}

QString OAIProjectInvoiceSettingsInputModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectInvoiceSettingsInputModel::asJsonObject() const {
    QJsonObject obj;
    if (m_free_text1.isSet()) {
        obj.insert(QString("freeText1"), ::OpenAPI::toJsonValue(m_free_text1));
    }
    if (m_free_text2.isSet()) {
        obj.insert(QString("freeText2"), ::OpenAPI::toJsonValue(m_free_text2));
    }
    if (m_html_text1.isSet()) {
        obj.insert(QString("htmlText1"), ::OpenAPI::toJsonValue(m_html_text1));
    }
    if (m_html_text2.isSet()) {
        obj.insert(QString("htmlText2"), ::OpenAPI::toJsonValue(m_html_text2));
    }
    if (m_project.isSet()) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    if (m_project_fee_description_format_isSet) {
        obj.insert(QString("projectFeeDescriptionFormat"), ::OpenAPI::toJsonValue(m_project_fee_description_format));
    }
    if (m_project_fee_grouping.isSet()) {
        obj.insert(QString("projectFeeGrouping"), ::OpenAPI::toJsonValue(m_project_fee_grouping));
    }
    if (m_project_fee_primary_group_by_isSet) {
        obj.insert(QString("projectFeePrimaryGroupBy"), ::OpenAPI::toJsonValue(m_project_fee_primary_group_by));
    }
    if (m_project_fee_secondary_group_by_isSet) {
        obj.insert(QString("projectFeeSecondaryGroupBy"), ::OpenAPI::toJsonValue(m_project_fee_secondary_group_by));
    }
    if (m_project_travel_expense_description_format_isSet) {
        obj.insert(QString("projectTravelExpenseDescriptionFormat"), ::OpenAPI::toJsonValue(m_project_travel_expense_description_format));
    }
    if (m_project_travel_expense_grouping.isSet()) {
        obj.insert(QString("projectTravelExpenseGrouping"), ::OpenAPI::toJsonValue(m_project_travel_expense_grouping));
    }
    if (m_project_travel_expense_primary_group_by_isSet) {
        obj.insert(QString("projectTravelExpensePrimaryGroupBy"), ::OpenAPI::toJsonValue(m_project_travel_expense_primary_group_by));
    }
    if (m_project_travel_expense_secondary_group_by_isSet) {
        obj.insert(QString("projectTravelExpenseSecondaryGroupBy"), ::OpenAPI::toJsonValue(m_project_travel_expense_secondary_group_by));
    }
    if (m_show_attachment_price_excluding_value_added_tax_isSet) {
        obj.insert(QString("showAttachmentPriceExcludingValueAddedTax"), ::OpenAPI::toJsonValue(m_show_attachment_price_excluding_value_added_tax));
    }
    if (m_show_attachment_unit_isSet) {
        obj.insert(QString("showAttachmentUnit"), ::OpenAPI::toJsonValue(m_show_attachment_unit));
    }
    if (m_show_attachment_unit_price_isSet) {
        obj.insert(QString("showAttachmentUnitPrice"), ::OpenAPI::toJsonValue(m_show_attachment_unit_price));
    }
    if (m_show_attachment_value_added_tax_isSet) {
        obj.insert(QString("showAttachmentValueAddedTax"), ::OpenAPI::toJsonValue(m_show_attachment_value_added_tax));
    }
    if (m_show_categories_isSet) {
        obj.insert(QString("showCategories"), ::OpenAPI::toJsonValue(m_show_categories));
    }
    if (m_show_footer_isSet) {
        obj.insert(QString("showFooter"), ::OpenAPI::toJsonValue(m_show_footer));
    }
    if (m_show_logo_and_title_isSet) {
        obj.insert(QString("showLogoAndTitle"), ::OpenAPI::toJsonValue(m_show_logo_and_title));
    }
    if (m_show_price_excluding_value_added_tax_isSet) {
        obj.insert(QString("showPriceExcludingValueAddedTax"), ::OpenAPI::toJsonValue(m_show_price_excluding_value_added_tax));
    }
    if (m_show_quantity_isSet) {
        obj.insert(QString("showQuantity"), ::OpenAPI::toJsonValue(m_show_quantity));
    }
    if (m_show_reference_number_isSet) {
        obj.insert(QString("showReferenceNumber"), ::OpenAPI::toJsonValue(m_show_reference_number));
    }
    if (m_show_unit_isSet) {
        obj.insert(QString("showUnit"), ::OpenAPI::toJsonValue(m_show_unit));
    }
    if (m_show_unit_price_isSet) {
        obj.insert(QString("showUnitPrice"), ::OpenAPI::toJsonValue(m_show_unit_price));
    }
    if (m_show_value_added_tax_isSet) {
        obj.insert(QString("showValueAddedTax"), ::OpenAPI::toJsonValue(m_show_value_added_tax));
    }
    if (m_style.isSet()) {
        obj.insert(QString("style"), ::OpenAPI::toJsonValue(m_style));
    }
    if (m_work_hour_description_format_isSet) {
        obj.insert(QString("workHourDescriptionFormat"), ::OpenAPI::toJsonValue(m_work_hour_description_format));
    }
    if (m_work_hour_grouping.isSet()) {
        obj.insert(QString("workHourGrouping"), ::OpenAPI::toJsonValue(m_work_hour_grouping));
    }
    if (m_work_hour_primary_group_by_isSet) {
        obj.insert(QString("workHourPrimaryGroupBy"), ::OpenAPI::toJsonValue(m_work_hour_primary_group_by));
    }
    if (m_work_hour_secondary_group_by_isSet) {
        obj.insert(QString("workHourSecondaryGroupBy"), ::OpenAPI::toJsonValue(m_work_hour_secondary_group_by));
    }
    return obj;
}

OAITemplateFreeTextModel OAIProjectInvoiceSettingsInputModel::getFreeText1() const {
    return m_free_text1;
}
void OAIProjectInvoiceSettingsInputModel::setFreeText1(const OAITemplateFreeTextModel &free_text1) {
    m_free_text1 = free_text1;
    m_free_text1_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_free_text1_Set() const{
    return m_free_text1_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_free_text1_Valid() const{
    return m_free_text1_isValid;
}

OAITemplateFreeTextModel OAIProjectInvoiceSettingsInputModel::getFreeText2() const {
    return m_free_text2;
}
void OAIProjectInvoiceSettingsInputModel::setFreeText2(const OAITemplateFreeTextModel &free_text2) {
    m_free_text2 = free_text2;
    m_free_text2_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_free_text2_Set() const{
    return m_free_text2_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_free_text2_Valid() const{
    return m_free_text2_isValid;
}

OAITemplateFreeTextModel OAIProjectInvoiceSettingsInputModel::getHtmlText1() const {
    return m_html_text1;
}
void OAIProjectInvoiceSettingsInputModel::setHtmlText1(const OAITemplateFreeTextModel &html_text1) {
    m_html_text1 = html_text1;
    m_html_text1_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_html_text1_Set() const{
    return m_html_text1_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_html_text1_Valid() const{
    return m_html_text1_isValid;
}

OAITemplateFreeTextModel OAIProjectInvoiceSettingsInputModel::getHtmlText2() const {
    return m_html_text2;
}
void OAIProjectInvoiceSettingsInputModel::setHtmlText2(const OAITemplateFreeTextModel &html_text2) {
    m_html_text2 = html_text2;
    m_html_text2_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_html_text2_Set() const{
    return m_html_text2_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_html_text2_Valid() const{
    return m_html_text2_isValid;
}

OAISimpleInputRequiredModel OAIProjectInvoiceSettingsInputModel::getProject() const {
    return m_project;
}
void OAIProjectInvoiceSettingsInputModel::setProject(const OAISimpleInputRequiredModel &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_project_Set() const{
    return m_project_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_project_Valid() const{
    return m_project_isValid;
}

QString OAIProjectInvoiceSettingsInputModel::getProjectFeeDescriptionFormat() const {
    return m_project_fee_description_format;
}
void OAIProjectInvoiceSettingsInputModel::setProjectFeeDescriptionFormat(const QString &project_fee_description_format) {
    m_project_fee_description_format = project_fee_description_format;
    m_project_fee_description_format_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_project_fee_description_format_Set() const{
    return m_project_fee_description_format_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_project_fee_description_format_Valid() const{
    return m_project_fee_description_format_isValid;
}

OAIInvoiceGrouping OAIProjectInvoiceSettingsInputModel::getProjectFeeGrouping() const {
    return m_project_fee_grouping;
}
void OAIProjectInvoiceSettingsInputModel::setProjectFeeGrouping(const OAIInvoiceGrouping &project_fee_grouping) {
    m_project_fee_grouping = project_fee_grouping;
    m_project_fee_grouping_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_project_fee_grouping_Set() const{
    return m_project_fee_grouping_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_project_fee_grouping_Valid() const{
    return m_project_fee_grouping_isValid;
}

QString OAIProjectInvoiceSettingsInputModel::getProjectFeePrimaryGroupBy() const {
    return m_project_fee_primary_group_by;
}
void OAIProjectInvoiceSettingsInputModel::setProjectFeePrimaryGroupBy(const QString &project_fee_primary_group_by) {
    m_project_fee_primary_group_by = project_fee_primary_group_by;
    m_project_fee_primary_group_by_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_project_fee_primary_group_by_Set() const{
    return m_project_fee_primary_group_by_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_project_fee_primary_group_by_Valid() const{
    return m_project_fee_primary_group_by_isValid;
}

QString OAIProjectInvoiceSettingsInputModel::getProjectFeeSecondaryGroupBy() const {
    return m_project_fee_secondary_group_by;
}
void OAIProjectInvoiceSettingsInputModel::setProjectFeeSecondaryGroupBy(const QString &project_fee_secondary_group_by) {
    m_project_fee_secondary_group_by = project_fee_secondary_group_by;
    m_project_fee_secondary_group_by_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_project_fee_secondary_group_by_Set() const{
    return m_project_fee_secondary_group_by_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_project_fee_secondary_group_by_Valid() const{
    return m_project_fee_secondary_group_by_isValid;
}

QString OAIProjectInvoiceSettingsInputModel::getProjectTravelExpenseDescriptionFormat() const {
    return m_project_travel_expense_description_format;
}
void OAIProjectInvoiceSettingsInputModel::setProjectTravelExpenseDescriptionFormat(const QString &project_travel_expense_description_format) {
    m_project_travel_expense_description_format = project_travel_expense_description_format;
    m_project_travel_expense_description_format_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_project_travel_expense_description_format_Set() const{
    return m_project_travel_expense_description_format_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_project_travel_expense_description_format_Valid() const{
    return m_project_travel_expense_description_format_isValid;
}

OAIInvoiceGrouping OAIProjectInvoiceSettingsInputModel::getProjectTravelExpenseGrouping() const {
    return m_project_travel_expense_grouping;
}
void OAIProjectInvoiceSettingsInputModel::setProjectTravelExpenseGrouping(const OAIInvoiceGrouping &project_travel_expense_grouping) {
    m_project_travel_expense_grouping = project_travel_expense_grouping;
    m_project_travel_expense_grouping_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_project_travel_expense_grouping_Set() const{
    return m_project_travel_expense_grouping_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_project_travel_expense_grouping_Valid() const{
    return m_project_travel_expense_grouping_isValid;
}

QString OAIProjectInvoiceSettingsInputModel::getProjectTravelExpensePrimaryGroupBy() const {
    return m_project_travel_expense_primary_group_by;
}
void OAIProjectInvoiceSettingsInputModel::setProjectTravelExpensePrimaryGroupBy(const QString &project_travel_expense_primary_group_by) {
    m_project_travel_expense_primary_group_by = project_travel_expense_primary_group_by;
    m_project_travel_expense_primary_group_by_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_project_travel_expense_primary_group_by_Set() const{
    return m_project_travel_expense_primary_group_by_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_project_travel_expense_primary_group_by_Valid() const{
    return m_project_travel_expense_primary_group_by_isValid;
}

QString OAIProjectInvoiceSettingsInputModel::getProjectTravelExpenseSecondaryGroupBy() const {
    return m_project_travel_expense_secondary_group_by;
}
void OAIProjectInvoiceSettingsInputModel::setProjectTravelExpenseSecondaryGroupBy(const QString &project_travel_expense_secondary_group_by) {
    m_project_travel_expense_secondary_group_by = project_travel_expense_secondary_group_by;
    m_project_travel_expense_secondary_group_by_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_project_travel_expense_secondary_group_by_Set() const{
    return m_project_travel_expense_secondary_group_by_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_project_travel_expense_secondary_group_by_Valid() const{
    return m_project_travel_expense_secondary_group_by_isValid;
}

bool OAIProjectInvoiceSettingsInputModel::isShowAttachmentPriceExcludingValueAddedTax() const {
    return m_show_attachment_price_excluding_value_added_tax;
}
void OAIProjectInvoiceSettingsInputModel::setShowAttachmentPriceExcludingValueAddedTax(const bool &show_attachment_price_excluding_value_added_tax) {
    m_show_attachment_price_excluding_value_added_tax = show_attachment_price_excluding_value_added_tax;
    m_show_attachment_price_excluding_value_added_tax_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_attachment_price_excluding_value_added_tax_Set() const{
    return m_show_attachment_price_excluding_value_added_tax_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_attachment_price_excluding_value_added_tax_Valid() const{
    return m_show_attachment_price_excluding_value_added_tax_isValid;
}

bool OAIProjectInvoiceSettingsInputModel::isShowAttachmentUnit() const {
    return m_show_attachment_unit;
}
void OAIProjectInvoiceSettingsInputModel::setShowAttachmentUnit(const bool &show_attachment_unit) {
    m_show_attachment_unit = show_attachment_unit;
    m_show_attachment_unit_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_attachment_unit_Set() const{
    return m_show_attachment_unit_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_attachment_unit_Valid() const{
    return m_show_attachment_unit_isValid;
}

bool OAIProjectInvoiceSettingsInputModel::isShowAttachmentUnitPrice() const {
    return m_show_attachment_unit_price;
}
void OAIProjectInvoiceSettingsInputModel::setShowAttachmentUnitPrice(const bool &show_attachment_unit_price) {
    m_show_attachment_unit_price = show_attachment_unit_price;
    m_show_attachment_unit_price_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_attachment_unit_price_Set() const{
    return m_show_attachment_unit_price_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_attachment_unit_price_Valid() const{
    return m_show_attachment_unit_price_isValid;
}

bool OAIProjectInvoiceSettingsInputModel::isShowAttachmentValueAddedTax() const {
    return m_show_attachment_value_added_tax;
}
void OAIProjectInvoiceSettingsInputModel::setShowAttachmentValueAddedTax(const bool &show_attachment_value_added_tax) {
    m_show_attachment_value_added_tax = show_attachment_value_added_tax;
    m_show_attachment_value_added_tax_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_attachment_value_added_tax_Set() const{
    return m_show_attachment_value_added_tax_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_attachment_value_added_tax_Valid() const{
    return m_show_attachment_value_added_tax_isValid;
}

bool OAIProjectInvoiceSettingsInputModel::isShowCategories() const {
    return m_show_categories;
}
void OAIProjectInvoiceSettingsInputModel::setShowCategories(const bool &show_categories) {
    m_show_categories = show_categories;
    m_show_categories_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_categories_Set() const{
    return m_show_categories_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_categories_Valid() const{
    return m_show_categories_isValid;
}

bool OAIProjectInvoiceSettingsInputModel::isShowFooter() const {
    return m_show_footer;
}
void OAIProjectInvoiceSettingsInputModel::setShowFooter(const bool &show_footer) {
    m_show_footer = show_footer;
    m_show_footer_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_footer_Set() const{
    return m_show_footer_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_footer_Valid() const{
    return m_show_footer_isValid;
}

bool OAIProjectInvoiceSettingsInputModel::isShowLogoAndTitle() const {
    return m_show_logo_and_title;
}
void OAIProjectInvoiceSettingsInputModel::setShowLogoAndTitle(const bool &show_logo_and_title) {
    m_show_logo_and_title = show_logo_and_title;
    m_show_logo_and_title_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_logo_and_title_Set() const{
    return m_show_logo_and_title_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_logo_and_title_Valid() const{
    return m_show_logo_and_title_isValid;
}

bool OAIProjectInvoiceSettingsInputModel::isShowPriceExcludingValueAddedTax() const {
    return m_show_price_excluding_value_added_tax;
}
void OAIProjectInvoiceSettingsInputModel::setShowPriceExcludingValueAddedTax(const bool &show_price_excluding_value_added_tax) {
    m_show_price_excluding_value_added_tax = show_price_excluding_value_added_tax;
    m_show_price_excluding_value_added_tax_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_price_excluding_value_added_tax_Set() const{
    return m_show_price_excluding_value_added_tax_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_price_excluding_value_added_tax_Valid() const{
    return m_show_price_excluding_value_added_tax_isValid;
}

bool OAIProjectInvoiceSettingsInputModel::isShowQuantity() const {
    return m_show_quantity;
}
void OAIProjectInvoiceSettingsInputModel::setShowQuantity(const bool &show_quantity) {
    m_show_quantity = show_quantity;
    m_show_quantity_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_quantity_Set() const{
    return m_show_quantity_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_quantity_Valid() const{
    return m_show_quantity_isValid;
}

bool OAIProjectInvoiceSettingsInputModel::isShowReferenceNumber() const {
    return m_show_reference_number;
}
void OAIProjectInvoiceSettingsInputModel::setShowReferenceNumber(const bool &show_reference_number) {
    m_show_reference_number = show_reference_number;
    m_show_reference_number_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_reference_number_Set() const{
    return m_show_reference_number_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_reference_number_Valid() const{
    return m_show_reference_number_isValid;
}

bool OAIProjectInvoiceSettingsInputModel::isShowUnit() const {
    return m_show_unit;
}
void OAIProjectInvoiceSettingsInputModel::setShowUnit(const bool &show_unit) {
    m_show_unit = show_unit;
    m_show_unit_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_unit_Set() const{
    return m_show_unit_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_unit_Valid() const{
    return m_show_unit_isValid;
}

bool OAIProjectInvoiceSettingsInputModel::isShowUnitPrice() const {
    return m_show_unit_price;
}
void OAIProjectInvoiceSettingsInputModel::setShowUnitPrice(const bool &show_unit_price) {
    m_show_unit_price = show_unit_price;
    m_show_unit_price_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_unit_price_Set() const{
    return m_show_unit_price_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_unit_price_Valid() const{
    return m_show_unit_price_isValid;
}

bool OAIProjectInvoiceSettingsInputModel::isShowValueAddedTax() const {
    return m_show_value_added_tax;
}
void OAIProjectInvoiceSettingsInputModel::setShowValueAddedTax(const bool &show_value_added_tax) {
    m_show_value_added_tax = show_value_added_tax;
    m_show_value_added_tax_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_value_added_tax_Set() const{
    return m_show_value_added_tax_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_show_value_added_tax_Valid() const{
    return m_show_value_added_tax_isValid;
}

OAIInvoiceSkin OAIProjectInvoiceSettingsInputModel::getStyle() const {
    return m_style;
}
void OAIProjectInvoiceSettingsInputModel::setStyle(const OAIInvoiceSkin &style) {
    m_style = style;
    m_style_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_style_Set() const{
    return m_style_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_style_Valid() const{
    return m_style_isValid;
}

QString OAIProjectInvoiceSettingsInputModel::getWorkHourDescriptionFormat() const {
    return m_work_hour_description_format;
}
void OAIProjectInvoiceSettingsInputModel::setWorkHourDescriptionFormat(const QString &work_hour_description_format) {
    m_work_hour_description_format = work_hour_description_format;
    m_work_hour_description_format_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_work_hour_description_format_Set() const{
    return m_work_hour_description_format_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_work_hour_description_format_Valid() const{
    return m_work_hour_description_format_isValid;
}

OAIInvoiceGrouping OAIProjectInvoiceSettingsInputModel::getWorkHourGrouping() const {
    return m_work_hour_grouping;
}
void OAIProjectInvoiceSettingsInputModel::setWorkHourGrouping(const OAIInvoiceGrouping &work_hour_grouping) {
    m_work_hour_grouping = work_hour_grouping;
    m_work_hour_grouping_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_work_hour_grouping_Set() const{
    return m_work_hour_grouping_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_work_hour_grouping_Valid() const{
    return m_work_hour_grouping_isValid;
}

QString OAIProjectInvoiceSettingsInputModel::getWorkHourPrimaryGroupBy() const {
    return m_work_hour_primary_group_by;
}
void OAIProjectInvoiceSettingsInputModel::setWorkHourPrimaryGroupBy(const QString &work_hour_primary_group_by) {
    m_work_hour_primary_group_by = work_hour_primary_group_by;
    m_work_hour_primary_group_by_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_work_hour_primary_group_by_Set() const{
    return m_work_hour_primary_group_by_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_work_hour_primary_group_by_Valid() const{
    return m_work_hour_primary_group_by_isValid;
}

QString OAIProjectInvoiceSettingsInputModel::getWorkHourSecondaryGroupBy() const {
    return m_work_hour_secondary_group_by;
}
void OAIProjectInvoiceSettingsInputModel::setWorkHourSecondaryGroupBy(const QString &work_hour_secondary_group_by) {
    m_work_hour_secondary_group_by = work_hour_secondary_group_by;
    m_work_hour_secondary_group_by_isSet = true;
}

bool OAIProjectInvoiceSettingsInputModel::is_work_hour_secondary_group_by_Set() const{
    return m_work_hour_secondary_group_by_isSet;
}

bool OAIProjectInvoiceSettingsInputModel::is_work_hour_secondary_group_by_Valid() const{
    return m_work_hour_secondary_group_by_isValid;
}

bool OAIProjectInvoiceSettingsInputModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_free_text1.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_free_text2.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_html_text1.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_html_text2.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_fee_description_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_fee_grouping.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_fee_primary_group_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_fee_secondary_group_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_travel_expense_description_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_travel_expense_grouping.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_travel_expense_primary_group_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_travel_expense_secondary_group_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_attachment_price_excluding_value_added_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_attachment_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_attachment_unit_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_attachment_value_added_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_categories_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_footer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_logo_and_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_price_excluding_value_added_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_reference_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_unit_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_value_added_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_style.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_work_hour_description_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_work_hour_grouping.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_work_hour_primary_group_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_work_hour_secondary_group_by_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectInvoiceSettingsInputModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_project_isValid && true;
}

} // namespace OpenAPI
