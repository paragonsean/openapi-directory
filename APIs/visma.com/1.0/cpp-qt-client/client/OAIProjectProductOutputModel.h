/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProjectProductOutputModel.h
 *
 * 
 */

#ifndef OAIProjectProductOutputModel_H
#define OAIProjectProductOutputModel_H

#include <QJsonObject>

#include "OAIProjectProductSubModel.h"
#include "OAIProjectSubModel.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProjectProductSubModel;
class OAIProjectSubModel;

class OAIProjectProductOutputModel : public OAIObject {
public:
    OAIProjectProductOutputModel();
    OAIProjectProductOutputModel(QString json);
    ~OAIProjectProductOutputModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGuid() const;
    void setGuid(const QString &guid);
    bool is_guid_Set() const;
    bool is_guid_Valid() const;

    OAIProjectProductSubModel getProduct() const;
    void setProduct(const OAIProjectProductSubModel &product);
    bool is_product_Set() const;
    bool is_product_Valid() const;

    OAIProjectSubModel getProject() const;
    void setProject(const OAIProjectSubModel &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_guid;
    bool m_guid_isSet;
    bool m_guid_isValid;

    OAIProjectProductSubModel m_product;
    bool m_product_isSet;
    bool m_product_isValid;

    OAIProjectSubModel m_project;
    bool m_project_isSet;
    bool m_project_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProjectProductOutputModel)

#endif // OAIProjectProductOutputModel_H
