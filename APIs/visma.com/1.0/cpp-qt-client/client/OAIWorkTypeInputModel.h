/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkTypeInputModel.h
 *
 * 
 */

#ifndef OAIWorkTypeInputModel_H
#define OAIWorkTypeInputModel_H

#include <QJsonObject>

#include "OAIMoneyInputModelWithNullableAmount.h"
#include "OAISimpleInputModel.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMoneyInputModelWithNullableAmount;
class OAISimpleInputModel;

class OAIWorkTypeInputModel : public OAIObject {
public:
    OAIWorkTypeInputModel();
    OAIWorkTypeInputModel(QString json);
    ~OAIWorkTypeInputModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    OAIMoneyInputModelWithNullableAmount getHourCost() const;
    void setHourCost(const OAIMoneyInputModelWithNullableAmount &hour_cost);
    bool is_hour_cost_Set() const;
    bool is_hour_cost_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    bool isIsDefault() const;
    void setIsDefault(const bool &is_default);
    bool is_is_default_Set() const;
    bool is_is_default_Valid() const;

    bool isIsProductive() const;
    void setIsProductive(const bool &is_productive);
    bool is_is_productive_Set() const;
    bool is_is_productive_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAISimpleInputModel getSalesAccount() const;
    void setSalesAccount(const OAISimpleInputModel &sales_account);
    bool is_sales_account_Set() const;
    bool is_sales_account_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    OAIMoneyInputModelWithNullableAmount m_hour_cost;
    bool m_hour_cost_isSet;
    bool m_hour_cost_isValid;

    bool m_is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    bool m_is_default;
    bool m_is_default_isSet;
    bool m_is_default_isValid;

    bool m_is_productive;
    bool m_is_productive_isSet;
    bool m_is_productive_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAISimpleInputModel m_sales_account;
    bool m_sales_account_isSet;
    bool m_sales_account_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkTypeInputModel)

#endif // OAIWorkTypeInputModel_H
