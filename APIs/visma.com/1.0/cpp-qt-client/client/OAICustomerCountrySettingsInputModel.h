/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomerCountrySettingsInputModel.h
 *
 * 
 */

#ifndef OAICustomerCountrySettingsInputModel_H
#define OAICustomerCountrySettingsInputModel_H

#include <QJsonObject>

#include "OAISimpleInputModel.h"
#include "OAISimpleInputRequiredModel.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISimpleInputRequiredModel;
class OAISimpleInputModel;

class OAICustomerCountrySettingsInputModel : public OAIObject {
public:
    OAICustomerCountrySettingsInputModel();
    OAICustomerCountrySettingsInputModel(QString json);
    ~OAICustomerCountrySettingsInputModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISimpleInputRequiredModel getCountry() const;
    void setCountry(const OAISimpleInputRequiredModel &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    OAISimpleInputRequiredModel getCustomer() const;
    void setCustomer(const OAISimpleInputRequiredModel &customer);
    bool is_customer_Set() const;
    bool is_customer_Valid() const;

    bool isIsTaxFree() const;
    void setIsTaxFree(const bool &is_tax_free);
    bool is_is_tax_free_Set() const;
    bool is_is_tax_free_Valid() const;

    QString getTaxFreeDescription() const;
    void setTaxFreeDescription(const QString &tax_free_description);
    bool is_tax_free_description_Set() const;
    bool is_tax_free_description_Valid() const;

    OAISimpleInputModel getValueAddedTax() const;
    void setValueAddedTax(const OAISimpleInputModel &value_added_tax);
    bool is_value_added_tax_Set() const;
    bool is_value_added_tax_Valid() const;

    QString getZeroVatCategoryCodeEn16931() const;
    void setZeroVatCategoryCodeEn16931(const QString &zero_vat_category_code_en16931);
    bool is_zero_vat_category_code_en16931_Set() const;
    bool is_zero_vat_category_code_en16931_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISimpleInputRequiredModel m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    OAISimpleInputRequiredModel m_customer;
    bool m_customer_isSet;
    bool m_customer_isValid;

    bool m_is_tax_free;
    bool m_is_tax_free_isSet;
    bool m_is_tax_free_isValid;

    QString m_tax_free_description;
    bool m_tax_free_description_isSet;
    bool m_tax_free_description_isValid;

    OAISimpleInputModel m_value_added_tax;
    bool m_value_added_tax_isSet;
    bool m_value_added_tax_isValid;

    QString m_zero_vat_category_code_en16931;
    bool m_zero_vat_category_code_en16931_isSet;
    bool m_zero_vat_category_code_en16931_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomerCountrySettingsInputModel)

#endif // OAICustomerCountrySettingsInputModel_H
