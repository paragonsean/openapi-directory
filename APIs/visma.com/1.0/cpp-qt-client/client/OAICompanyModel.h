/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICompanyModel.h
 *
 * 
 */

#ifndef OAICompanyModel_H
#define OAICompanyModel_H

#include <QJsonObject>

#include "OAICompanyCountry.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICompanyCountry;

class OAICompanyModel : public OAIObject {
public:
    OAICompanyModel();
    OAICompanyModel(QString json);
    ~OAICompanyModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICompanyCountry getCountry() const;
    void setCountry(const OAICompanyCountry &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    QString getCurrencyGuid() const;
    void setCurrencyGuid(const QString &currency_guid);
    bool is_currency_guid_Set() const;
    bool is_currency_guid_Valid() const;

    double getCurrencyRate() const;
    void setCurrencyRate(const double &currency_rate);
    bool is_currency_rate_Set() const;
    bool is_currency_rate_Valid() const;

    QString getCurrencySymbol() const;
    void setCurrencySymbol(const QString &currency_symbol);
    bool is_currency_symbol_Set() const;
    bool is_currency_symbol_Valid() const;

    QString getGuid() const;
    void setGuid(const QString &guid);
    bool is_guid_Set() const;
    bool is_guid_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRootBusinessUnitGuid() const;
    void setRootBusinessUnitGuid(const QString &root_business_unit_guid);
    bool is_root_business_unit_guid_Set() const;
    bool is_root_business_unit_guid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICompanyCountry m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    QString m_currency_guid;
    bool m_currency_guid_isSet;
    bool m_currency_guid_isValid;

    double m_currency_rate;
    bool m_currency_rate_isSet;
    bool m_currency_rate_isValid;

    QString m_currency_symbol;
    bool m_currency_symbol_isSet;
    bool m_currency_symbol_isValid;

    QString m_guid;
    bool m_guid_isSet;
    bool m_guid_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_root_business_unit_guid;
    bool m_root_business_unit_guid_isSet;
    bool m_root_business_unit_guid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICompanyModel)

#endif // OAICompanyModel_H
