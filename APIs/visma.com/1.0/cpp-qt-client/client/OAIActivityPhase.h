/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActivityPhase.h
 *
 * 
 */

#ifndef OAIActivityPhase_H
#define OAIActivityPhase_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIActivityPhase : public OAIObject {
public:
    OAIActivityPhase();
    OAIActivityPhase(QString json);
    ~OAIActivityPhase() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGuid() const;
    void setGuid(const QString &guid);
    bool is_guid_Set() const;
    bool is_guid_Valid() const;

    bool isIsLocked() const;
    void setIsLocked(const bool &is_locked);
    bool is_is_locked_Set() const;
    bool is_is_locked_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getProjectGuid() const;
    void setProjectGuid(const QString &project_guid);
    bool is_project_guid_Set() const;
    bool is_project_guid_Valid() const;

    QString getProjectName() const;
    void setProjectName(const QString &project_name);
    bool is_project_name_Set() const;
    bool is_project_name_Valid() const;

    qint64 getProjectNumber() const;
    void setProjectNumber(const qint64 &project_number);
    bool is_project_number_Set() const;
    bool is_project_number_Valid() const;

    QString getProjectOwnerGuid() const;
    void setProjectOwnerGuid(const QString &project_owner_guid);
    bool is_project_owner_guid_Set() const;
    bool is_project_owner_guid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_guid;
    bool m_guid_isSet;
    bool m_guid_isValid;

    bool m_is_locked;
    bool m_is_locked_isSet;
    bool m_is_locked_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_project_guid;
    bool m_project_guid_isSet;
    bool m_project_guid_isValid;

    QString m_project_name;
    bool m_project_name_isSet;
    bool m_project_name_isValid;

    qint64 m_project_number;
    bool m_project_number_isSet;
    bool m_project_number_isValid;

    QString m_project_owner_guid;
    bool m_project_owner_guid_isSet;
    bool m_project_owner_guid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActivityPhase)

#endif // OAIActivityPhase_H
