/**
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserInputModel.h
 *
 * 
 */

#ifndef OAIUserInputModel_H
#define OAIUserInputModel_H

#include <QJsonObject>

#include "OAILicenseUserType.h"
#include "OAISalutationType.h"
#include "OAISatisfactionLevelType.h"
#include "OAISimpleInputModel.h"
#include "OAISimpleInputRequiredModel.h"
#include "OAITimezoneModel.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISimpleInputRequiredModel;
class OAISimpleInputModel;
class OAITimezoneModel;

class OAIUserInputModel : public OAIObject {
public:
    OAIUserInputModel();
    OAIUserInputModel(QString json);
    ~OAIUserInputModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getBankAccountNumber() const;
    void setBankAccountNumber(const QString &bank_account_number);
    bool is_bank_account_number_Set() const;
    bool is_bank_account_number_Valid() const;

    QDateTime getBirthDate() const;
    void setBirthDate(const QDateTime &birth_date);
    bool is_birth_date_Set() const;
    bool is_birth_date_Valid() const;

    OAISimpleInputRequiredModel getBusinessUnit() const;
    void setBusinessUnit(const OAISimpleInputRequiredModel &business_unit);
    bool is_business_unit_Set() const;
    bool is_business_unit_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    OAISimpleInputModel getCountry() const;
    void setCountry(const OAISimpleInputModel &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    OAISimpleInputModel getCountryRegion() const;
    void setCountryRegion(const OAISimpleInputModel &country_region);
    bool is_country_region_Set() const;
    bool is_country_region_Valid() const;

    bool isCreateDefaultWorkContract() const;
    void setCreateDefaultWorkContract(const bool &create_default_work_contract);
    bool is_create_default_work_contract_Set() const;
    bool is_create_default_work_contract_Valid() const;

    OAISimpleInputModel getCulture() const;
    void setCulture(const OAISimpleInputModel &culture);
    bool is_culture_Set() const;
    bool is_culture_Valid() const;

    OAISimpleInputModel getDefaultActivityType() const;
    void setDefaultActivityType(const OAISimpleInputModel &default_activity_type);
    bool is_default_activity_type_Set() const;
    bool is_default_activity_type_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    OAISimpleInputModel getLanguage() const;
    void setLanguage(const OAISimpleInputModel &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    OAISimpleInputModel getPermissionProfile() const;
    void setPermissionProfile(const OAISimpleInputModel &permission_profile);
    bool is_permission_profile_Set() const;
    bool is_permission_profile_Valid() const;

    QString getPhone() const;
    void setPhone(const QString &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    QString getPostalCode() const;
    void setPostalCode(const QString &postal_code);
    bool is_postal_code_Set() const;
    bool is_postal_code_Valid() const;

    OAISalutationType getSalutation() const;
    void setSalutation(const OAISalutationType &salutation);
    bool is_salutation_Set() const;
    bool is_salutation_Valid() const;

    OAISatisfactionLevelType getSatisfaction() const;
    void setSatisfaction(const OAISatisfactionLevelType &satisfaction);
    bool is_satisfaction_Set() const;
    bool is_satisfaction_Valid() const;

    QString getSocialSecurityNumber() const;
    void setSocialSecurityNumber(const QString &social_security_number);
    bool is_social_security_number_Set() const;
    bool is_social_security_number_Valid() const;

    OAISimpleInputRequiredModel getSuperiorUser() const;
    void setSuperiorUser(const OAISimpleInputRequiredModel &superior_user);
    bool is_superior_user_Set() const;
    bool is_superior_user_Valid() const;

    OAITimezoneModel getTimezone() const;
    void setTimezone(const OAITimezoneModel &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    OAILicenseUserType getUserType() const;
    void setUserType(const OAILicenseUserType &user_type);
    bool is_user_type_Set() const;
    bool is_user_type_Valid() const;

    OAISimpleInputRequiredModel getWorkType() const;
    void setWorkType(const OAISimpleInputRequiredModel &work_type);
    bool is_work_type_Set() const;
    bool is_work_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_bank_account_number;
    bool m_bank_account_number_isSet;
    bool m_bank_account_number_isValid;

    QDateTime m_birth_date;
    bool m_birth_date_isSet;
    bool m_birth_date_isValid;

    OAISimpleInputRequiredModel m_business_unit;
    bool m_business_unit_isSet;
    bool m_business_unit_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    OAISimpleInputModel m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    OAISimpleInputModel m_country_region;
    bool m_country_region_isSet;
    bool m_country_region_isValid;

    bool m_create_default_work_contract;
    bool m_create_default_work_contract_isSet;
    bool m_create_default_work_contract_isValid;

    OAISimpleInputModel m_culture;
    bool m_culture_isSet;
    bool m_culture_isValid;

    OAISimpleInputModel m_default_activity_type;
    bool m_default_activity_type_isSet;
    bool m_default_activity_type_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    bool m_is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    OAISimpleInputModel m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    OAISimpleInputModel m_permission_profile;
    bool m_permission_profile_isSet;
    bool m_permission_profile_isValid;

    QString m_phone;
    bool m_phone_isSet;
    bool m_phone_isValid;

    QString m_postal_code;
    bool m_postal_code_isSet;
    bool m_postal_code_isValid;

    OAISalutationType m_salutation;
    bool m_salutation_isSet;
    bool m_salutation_isValid;

    OAISatisfactionLevelType m_satisfaction;
    bool m_satisfaction_isSet;
    bool m_satisfaction_isValid;

    QString m_social_security_number;
    bool m_social_security_number_isSet;
    bool m_social_security_number_isValid;

    OAISimpleInputRequiredModel m_superior_user;
    bool m_superior_user_isSet;
    bool m_superior_user_isValid;

    OAITimezoneModel m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;

    OAILicenseUserType m_user_type;
    bool m_user_type_isSet;
    bool m_user_type_isValid;

    OAISimpleInputRequiredModel m_work_type;
    bool m_work_type_isSet;
    bool m_work_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserInputModel)

#endif // OAIUserInputModel_H
