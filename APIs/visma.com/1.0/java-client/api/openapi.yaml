openapi: 3.0.0
info:
  description: "The API uses OAuth2 client creadentials flow. To get the Bearer token\
    \ for the resources you have to request the token by using route '/token', found\
    \ from Authentication controller.\r\n\r\nYou need to provide a Client_Id, client_secret\
    \ and scope needed. The client_id and client_secret can be obtained from Severa\
    \ UI Rest Api settings section.\r\n\r\nAfter authentication, calls need to use\
    \ the Bearer token as authorization header (Bearer {accessToken}). The calls also\
    \ need to have Client_Id header.\r\n\r\nThe access token can be refreshed from\
    \ '/refreshtoken' route using the refresh token which was obtained from the authentication.\r\
    \n\r\n"
  title: Severa Public Rest API Documentation
  version: "1.0"
  x-apisguru-categories:
  - project_management
  x-logo:
    url: https://assets-global.website-files.com/6305e092bc95bebe63ae6578/639981fb13f505465c007db2_2437_16-9.jpg
  x-origin:
  - format: openapi
    url: https://api.severa.visma.com/psapublicrest/openapidocs/v1.0/doc.json
    version: "3.0"
  x-providerName: visma.com
servers:
- url: https://api.severa.visma.com/rest-api
paths:
  /heartbeat/authorized:
    get:
      description: "This route requires authentication, returns 204 http status when\
        \ successful."
      operationId: HeartBeat_GetAuthorization
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2: []
      summary: Returns http status code 204 for successful authentication.
      tags:
      - NoScope
      x-accepts:
      - application/json
  /heartbeat/database:
    get:
      description: This does not require authentication.
      operationId: HeartBeat_GetDatabaseStatus
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
          description: Returns message "Database is alive."
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      summary: Can be used to check the status of the database.
      tags:
      - NoScope
      x-accepts:
      - application/json
      - text/plain
  /heartbeat/server:
    get:
      description: This does not require authentication.
      operationId: HeartBeat_GetServerStatus
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
          description: Returns message "Server is alive."
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      summary: Can be used to check the status of the REST Api.
      tags:
      - NoScope
      x-accepts:
      - application/json
      - text/plain
  /v1/activities:
    get:
      description: "Start and end date times accept values of DateTimeOffset type,\
        \ based on UTF-8 encoding."
      operationId: Activities_GetActivities
      parameters:
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Which activities to fetch - open/closed, Default all."
        explode: true
        in: query
        name: closed
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 3
      - description: "Optional: activity category for the activities to be fetched.\
          \ Should be one of Personal/Absences/CalendarEntry/SalesEvent/Task. Default\
          \ all."
        explode: true
        in: query
        name: activityCategories
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ActivityCategory'
          nullable: true
          type: array
        style: form
        x-position: 4
      - description: "Optional: ID of customer. Default all."
        explode: true
        in: query
        name: customerGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 5
        x-relation-guid: CustomerModel
      - description: "Optional: Include the activities that don't have customer. Default\
          \ is true."
        explode: true
        in: query
        name: includeTasksWithNoCustomer
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-position: 6
      - description: "Optional: ID of the project for the activities to be fetched.\
          \ If not provided, returns for all projects. Default all."
        explode: true
        in: query
        name: projectGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 7
        x-relation-guid: ProjectOutputModel
      - description: "Optional: Include the activities that don't have project. Default\
          \ is true."
        explode: true
        in: query
        name: includeTasksWithNoProject
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-position: 8
      - description: "Optional: ID of the business unit of the project based on which\
          \ activities should be filtered. If not provided, returns for all business\
          \ units. Default all."
        explode: true
        in: query
        name: projectBusinessUnitGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 9
        x-relation-guid: BusinessUnitModel
      - description: "Optional: ID of the project manager. If not provided, returns\
          \ for all project managers. Default all."
        explode: true
        in: query
        name: projectOwnerGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 10
        x-relation-guid: UserOutputModel
      - description: "Optional: ID of the user for the activities to be fetched. If\
          \ not provided, returns for all users. Default all."
        explode: true
        in: query
        name: userGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 11
        x-relation-guid: UserOutputModel
      - description: "Optional: Include the activities that the user is a member.\
          \ Effective if userGuid is provided. Default is to not include."
        explode: true
        in: query
        name: includeAsMember
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 12
      - description: "Optional: User keyword Ids of activity owner to search for."
        explode: true
        in: query
        name: userKeywordGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 13
        x-relation-guid: UserKeywordModel
      - description: "Optional: starting date and time from which to get the activities\
          \ in user's timezone. Finds all activities that end after the date time.\
          \ Format \"2017-04-12T13%3A20%3A00%2b02%3A00\". Default all."
        explode: true
        in: query
        name: startDateTime
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 14
      - description: "Optional: ending date and time to which to get the activities\
          \ in user's timezone. Finds all activities that start before or on the date\
          \ time. Format \"2017-04-12T13%3A20%3A00%2b02%3A00\". Default all. If activities\
          \ for one day are fetched, give start date time with time as 00:00 with\
          \ the offset of the timezone and end time as 23:59:59 with the offset."
        explode: true
        in: query
        name: endDateTime
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 15
      - description: "Optional: ID of the project task status. Default all."
        explode: true
        in: query
        name: projectTaskStatusGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 16
        x-relation-guid: ProjectTaskStatusModel
      - description: "Optional: ID of the phase for the activities to be fetched.\
          \ If not provided, returns for all phases. Default all."
        explode: true
        in: query
        name: phaseGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 17
        x-relation-guid: PhaseOutputModel
      - description: "Optional: If one phase guid is given include activities also\
          \ from sub phases. If multiple phase guids are given, returns activities\
          \ only for those regardless of this parameter. Default false."
        explode: true
        in: query
        name: includeSubPhases
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 18
      - description: "Optional: ID of the contact for the activities to be fetched.\
          \ If not provided, returns for all users. Default all."
        explode: true
        in: query
        name: contactGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 19
        x-relation-guid: ContactModel
      - description: "Optional: has duration flag for the activity. Default all."
        explode: true
        in: query
        name: hasDuration
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 20
      - description: "Optional: has any work hour entries associated with the activity.\
          \ Default all."
        explode: true
        in: query
        name: hasHours
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 21
      - description: "Optional: is the activity unassigned. Default all."
        explode: true
        in: query
        name: isUnassigned
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 22
      - description: "Optional: Get activities that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 23
      - description: "Optional: If given as true returns activities that start after\
          \ start time and end before end time. If given as false returns activities\
          \ that start before end time and end after start time. Limit are included\
          \ in both cases. Default false."
        explode: true
        in: query
        name: useStrictStartAndEndDateTime
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 24
      - description: "Optional: ID of the project activity type. Default all."
        explode: true
        in: query
        name: activityTypeGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 25
        x-relation-guid: ActivityTypeModel
      - description: "Optional: Type of the recurrence. Default returns all not recurring\
          \ activities, instances and exceptions. (None = not recurring activity)"
        explode: true
        in: query
        name: recurrenceType
        required: false
        schema:
          $ref: '#/components/schemas/RecurrenceType'
        style: form
        x-position: 26
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActivityModel'
                type: array
          description: Activities for a project
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - activities:read
      summary: Get all activities of an organization
      tags:
      - ActivitiesRead
      x-accepts:
      - application/json
    post:
      operationId: Activities_PostActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityModel'
        description: ActivityModel
        x-name: activity
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityModel'
          description: Created activity
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - activities:write
      summary: Insert a activity
      tags:
      - ActivitiesWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/activities/{activityGuid}/activityparticipants:
    get:
      operationId: ActivityParticipants_GetActivityParticipants
      parameters:
      - description: ID of the activity
        explode: false
        in: path
        name: activityGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ActivityModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActivityParticipantModel'
                type: array
          description: ActivityParticipants for an activity
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - activities:read
      summary: Get participants for an activity
      tags:
      - ActivitiesRead
      x-accepts:
      - application/json
  /v1/activities/{activityGuid}/activityparticipants/{activityParticipantGuid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if participant\
        \ can't be found."
      operationId: ActivityParticipants_DeleteActivityParticipant
      parameters:
      - description: "ID of the activity from which to delete the participant. If\
          \ an activity occurrence guid is given, this will create an exception to\
          \ the recurring activity and delete the participant from that."
        explode: false
        in: path
        name: activityGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ActivityModel
      - description: ID of the participant
        explode: false
        in: path
        name: activityParticipantGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 2
        x-relation-guid: ActivityParticipantModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - activities:delete
      summary: Delete activity participant.
      tags:
      - ActivitiesDelete
      x-accepts:
      - application/json
  /v1/activities/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if activity\
        \ can't be found."
      operationId: Activities_DeleteActivity
      parameters:
      - description: ID for the activity to delete
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ActivityModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - activities:delete
      summary: Delete an activity
      tags:
      - ActivitiesDelete
      x-accepts:
      - application/json
    get:
      operationId: Activities_GetActivity
      parameters:
      - description: GUID used to get the activity.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ActivityModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - activities:read
      summary: Get activity by ID
      tags:
      - ActivitiesRead
      x-accepts:
      - application/json
    patch:
      operationId: Activities_PatchActivity
      parameters:
      - description: "ID of the activity. Can also be comma separate list of IDs to\
          \ patch multiple activities with one call. When multiple IDs are given,\
          \ returns model which has list of succeeded activities and list of errors."
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ActivityModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of ActivityModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActivityModel'
                type: array
          description: List of updated activities
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - activities:write
      summary: Update (Patch) a activity or a part of it
      tags:
      - ActivitiesWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/activities/{guid}/exceptions:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if activity\
        \ can't be found or is not recurring."
      operationId: Activities_DeleteExceptions
      parameters:
      - description: ID of the recurring activity
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ActivityModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - activities:delete
      summary: Resets exceptions from a recurring activity.
      tags:
      - ActivitiesDelete
      x-accepts:
      - application/json
  /v1/activityparticipants:
    post:
      operationId: ActivityParticipants_PostActivityParticipant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityParticipantModel'
        description: ActivityParticipantModel
        x-name: activityParticipantModel
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityParticipantModel'
          description: Added participant
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - activities:write
      summary: Adds an activity participant
      tags:
      - ActivitiesWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/activityparticipants/{guid}:
    get:
      operationId: ActivityParticipants_GetActivityParticipant
      parameters:
      - description: ID of the participant
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ActivityParticipantModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityParticipantModel'
          description: ActivityParticipant
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - activities:read
      summary: Get activity participant
      tags:
      - ActivitiesRead
      x-accepts:
      - application/json
    patch:
      description: Only IsConfirmed property can be updated.
      operationId: ActivityParticipants_PatchActivityParticipants
      parameters:
      - description: ID of the activity participant
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ActivityParticipantModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ActivityParticipantModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActivityParticipantModel'
                type: array
          description: list of updated activity participants
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - activities:write
      summary: Update (Patch) a activity participant or a part of it
      tags:
      - ActivitiesWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/activitytypes:
    get:
      operationId: ActivityTypes_GetActivityTypes
      parameters:
      - description: "If not given, return all Activity Types, if given as true return\
          \ only active Activity Types, if given as false returns only inactive Activity\
          \ Types"
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Get activity types that have been added or changed\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Category or multiple categories of activity types\
          \ to search for. Default all."
        explode: true
        in: query
        name: category
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ActivityCategory'
          nullable: true
          type: array
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActivityTypeModel'
                type: array
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get the Activity Types
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: ActivityTypes_PostActivityType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTypeModel'
        description: Activity type
        x-name: activityType
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTypeModel'
          description: Inserted ActivityType
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert an Activity type.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/activitytypes/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if activity\
        \ type can't be found."
      operationId: ActivityTypes_DeleteActivityType
      parameters:
      - description: ID for the activity type to delete
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ActivityTypeModel
      - description: "Optional: ID of the activity type to which to move usages of\
          \ this activity type. Default null. If activity type is in use and usages\
          \ aren't moved the deletion might fail."
        explode: true
        in: query
        name: moveUsagesToGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
        x-relation-guid: ActivityTypeModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete an activity type.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: ActivityTypes_GetActivityType
      parameters:
      - description: GUID used to get the Activity Type.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ActivityTypeModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTypeModel'
          description: Activity Type
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get Activity Type by ID
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: ActivityTypes_PatchActivityType
      parameters:
      - description: ID of the Activity Type
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ActivityTypeModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ActivityTypeModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActivityTypeModel'
                type: array
          description: List of updated Activity Types
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) an Activity Type or a part of it
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/addresses:
    get:
      operationId: Addresses_GetAddresses
      parameters:
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 3
      - description: "Optional: Get addresses that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AddressModel'
                type: array
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get the addresses.
      tags:
      - CustomersRead
      x-accepts:
      - application/json
  /v1/addresses/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if address\
        \ can't be found."
      operationId: Addresses_DeleteAddress
      parameters:
      - description: ID for the address to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: AddressModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:delete
      summary: Delete an address.
      tags:
      - CustomersDelete
      x-accepts:
      - application/json
    get:
      operationId: Addresses_GetAddress
      parameters:
      - description: GUID used to get the address.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: AddressModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressModel'
          description: Address.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get address by ID.
      tags:
      - CustomersRead
      x-accepts:
      - application/json
    patch:
      operationId: Addresses_PatchAddress
      parameters:
      - description: ID of the address.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: AddressModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of AddressModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AddressModel'
                type: array
          description: List of updated addresses.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:write
      summary: Update (Patch) an address or a part of it.
      tags:
      - CustomersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/bankaccounts:
    get:
      operationId: BankAccounts_GetBankAccounts
      parameters:
      - description: "Optional: ID of the company."
        explode: true
        in: query
        name: companyGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
        x-relation-guid: CompanyModel
      - description: "Optional: ID of the business unit."
        explode: true
        in: query
        name: businessUnitGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
        x-relation-guid: BusinessUnitModel
      - description: "If not given, returns all bank accounts, if given as true returns\
          \ only active bank accounts, if given as false returns only inactive bank\
          \ accounts."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 3
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 5
      - description: "Optional: Text to search from bank account name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 6
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 7
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=BankName&sortings[0].value=Desc\
          \ &sortings[1].key=BusinessUnitName&sortings[1].value=Asc\"."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 8
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BankAccountOutputModel'
                type: array
          description: Bank accounts.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all bank accounts for current organization.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/bankaccounts/{guid}:
    get:
      operationId: BankAccounts_GetBankAccount
      parameters:
      - description: GUID used to get the bank account.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: BankAccountOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountOutputModel'
          description: Bank account.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get bank account by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/businessunits:
    get:
      operationId: BusinessUnits_GetBusinessUnits
      parameters:
      - description: "If not given, return all BusinessUnits, if given as true return\
          \ only active BusinessUnits, if given as false returns only inactive BusinessUnits"
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: ID of the company to which the business units belong."
        explode: true
        in: query
        name: companyGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
        x-relation-guid: CompanyModel
      - description: "Optional: ID of the country in which the company of business\
          \ units is located."
        explode: true
        in: query
        name: companyCountryGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 3
        x-relation-guid: CountryModel
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 5
      - description: "Optional: Text to search from business unit name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 6
      - description: "Optional: Get business units that have been added or changed\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 7
      - description: "Optional: Code of the business unit."
        explode: true
        in: query
        name: code
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 8
      - description: "Optional: Name of the business unit."
        explode: true
        in: query
        name: name
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 9
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BusinessUnitModel'
                type: array
          description: All the BusinessUnits
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the BusinessUnits
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/businessunits/{guid}:
    get:
      operationId: BusinessUnits_GetBusinessUnit
      parameters:
      - description: GUID used to get the businessUnit.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: BusinessUnitModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessUnitModel'
          description: BusinessUnit.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get businessUnit by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: BusinessUnits_PatchBusinessUnit
      parameters:
      - description: ID of the businessUnit.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: BusinessUnitModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of BusinessUnitModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BusinessUnitModel'
                type: array
          description: List of updated business units.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) an businessUnit or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/communicationtypes:
    get:
      operationId: CommunicationTypes_GetCommunicationTypes
      parameters:
      - description: "Filter the communication types. If true/false, only the active/inactive\
          \ ones are returned. If null, all the communication types are returned."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from communication type name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=name&sortings[0].value=Asc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommunicationTypeModel'
                type: array
          description: Projects.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all communication types.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: CommunicationTypes_PostCommunicationType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunicationTypeModel'
        description: CommunicationTypeModel.
        x-name: communicationTypeModel
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationTypeModel'
          description: Created communication type.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a communication type.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/communicationtypes/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: CommunicationTypes_DeleteCommunicationType
      parameters:
      - description: GUID used to delete the communication type.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CommunicationTypeModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Deletes a communication type.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: CommunicationTypes_GetCommunicationType
      parameters:
      - description: ID used to get the communication type.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CommunicationTypeModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationTypeModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get communication type by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: CommunicationTypes_PatchCommunicationType
      parameters:
      - description: ID of the communication type.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CommunicationTypeModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of CommunicationTypeModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommunicationTypeModel'
                type: array
          description: Updated communication model.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a communication type or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/contactcommunications:
    get:
      operationId: ContactCommunications_GetCommunications
      parameters:
      - description: "If not given, return all contact communications, if given as\
          \ true return only active contact communications, if given as false returns\
          \ only inactive contact communications."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from contact communication value."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Get contact communications that have been added or\
          \ changed after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContactCommunicationModel'
                type: array
          description: All the contact communications.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get all contact communications.
      tags:
      - CustomersRead
      x-accepts:
      - application/json
    post:
      operationId: ContactCommunications_PostContactCommunication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCommunicationModel'
        description: ContactCommunicationModel.
        x-name: contactCommunication
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactCommunicationModel'
          description: Inserted contact communication.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:write
      summary: Insert a communication for a contact.
      tags:
      - CustomersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/contactcommunications/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: ContactCommunications_DeleteContactCommunication
      parameters:
      - description: GUID used to delete the contact's communication.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ContactCommunicationModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:delete
      summary: Deletes contact's communication.
      tags:
      - CustomersDelete
      x-accepts:
      - application/json
    get:
      operationId: ContactCommunications_GetCommunication
      parameters:
      - description: GUID used to get the contact communication.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ContactCommunicationModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactCommunicationModel'
          description: Contact communication.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get contact communication by ID.
      tags:
      - CustomersRead
      x-accepts:
      - application/json
    patch:
      operationId: ContactCommunications_PatchContactCommunication
      parameters:
      - description: ID of the contact's communication.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ContactCommunicationModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of ContactCommunicationModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactCommunicationModel'
          description: Updated contact communication model.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:write
      summary: Update (Patch) a contact's communication or a part of it.
      tags:
      - CustomersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/contactpersons:
    get:
      operationId: Contacts_GetContacts
      parameters:
      - description: "If not given, return all Contact persons, if given as true return\
          \ only active Contact persons, if given as false returns only inactive Contact\
          \ persons."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from contact person's name or communication\
          \ method (i.e. phone number or email address)."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Search criterias."
        explode: true
        in: query
        name: searchCriterias
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndObject'
          nullable: true
          type: array
        style: form
        x-position: 5
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=FirstName&sortings[0].value=Desc\
          \ &sortings[1].key=LastName&sortings[1].value=Asc\"."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      - description: "Optional: Get contact persons that have been added or changed\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 7
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContactModel'
                type: array
          description: List of contacts for a customer.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get all the contact persons.
      tags:
      - CustomersRead
      x-accepts:
      - application/json
    post:
      operationId: Contacts_PostContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactModel'
        description: ContactModel.
        x-name: contact
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactModel'
          description: Inserted contact.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:write
      summary: Insert a contact.
      tags:
      - CustomersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/contactpersons/{contactGuid}/addresses:
    get:
      operationId: Addresses_GetContactAddress
      parameters:
      - description: ID for the contact person
        explode: false
        in: path
        name: contactGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ContactModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AddressModel'
                type: array
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get contact person's address
      tags:
      - CustomersRead
      x-accepts:
      - application/json
  /v1/contactpersons/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: Contacts_DeleteContact
      parameters:
      - description: GUID used to delete the contact.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ContactModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:delete
      summary: Deletes a contact.
      tags:
      - CustomersDelete
      x-accepts:
      - application/json
    get:
      operationId: Contacts_GetContact
      parameters:
      - description: GUID used to get the contact.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ContactModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactModel'
          description: Contact.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get contact by ID.
      tags:
      - CustomersRead
      x-accepts:
      - application/json
    patch:
      operationId: Contacts_PatchContact
      parameters:
      - description: ID of the contact.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ContactModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ContactModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContactModel'
                type: array
          description: List of updated contact persons.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:write
      summary: Update (Patch) an contact or a part of it.
      tags:
      - CustomersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/contactroles:
    get:
      operationId: ContactRoles_GetContactRoles
      parameters:
      - description: "If not given, return all contact roles, if given as true return\
          \ only active contact roles, if given as false returns only inactive contact\
          \ roles."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from contact role name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContactRoleModel'
                type: array
          description: All the contact roles.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get contact roles.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: ContactRoles_PostContactRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRoleModel'
        description: ContactRoleModel.
        x-name: contactRole
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactRoleModel'
          description: Created contact role.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a contact role.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/contactroles/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if contact\
        \ role can't be found."
      operationId: ContactRoles_DeleteContactRole
      parameters:
      - description: ID for the contact role to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ContactRoleModel
      - description: "Optional: ID of the contact role to which to move usages of\
          \ this contact role. Default null. If contact role is in use and usages\
          \ aren't moved the deletion might fail."
        explode: true
        in: query
        name: moveUsagesToGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
        x-relation-guid: ContactRoleModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete a contact role.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: ContactRoles_GetContactRole
      parameters:
      - description: Id used to get the contact role.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ContactRoleModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactRoleModel'
          description: ContactRoleModel.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get contact role by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: ContactRoles_PatchContactRole
      parameters:
      - description: ID of the contact role.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ContactRoleModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ContactRoleModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContactRoleModel'
                type: array
          description: list of updated contact role.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a contact role or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/contacts/{contactGuid}/contactcommunications:
    get:
      operationId: ContactCommunications_GetCommunications2
      parameters:
      - description: Whose communications are requested.
        explode: false
        in: path
        name: contactGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ContactModel
      - description: "If not given, return all contact communications, if given as\
          \ true return only active contact communications, if given as false returns\
          \ only inactive contact communications."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContactCommunicationModel'
                type: array
          description: All the contact communications.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get all communications for a contact.
      tags:
      - CustomersRead
      x-accepts:
      - application/json
  /v1/contacts/{contactGuid}/keywords:
    get:
      operationId: Keywords_GetContactKeywords
      parameters:
      - description: ID of the user whose keywords are requested.
        explode: false
        in: path
        name: contactGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ContactModel
      - description: "If not given, return all Keywords, if given as true return only\
          \ active Keywords, if given as false returns only inactive Keywords."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=Keyword&sortings[0].value=Desc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeywordModel'
                type: array
          description: Keywords.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get all the keywords for contact.
      tags:
      - CustomersRead
      x-accepts:
      - application/json
  /v1/contacts/{contactGuid}/keywords/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if the\
        \ keyword or the link can't be found."
      operationId: Keywords_DeleteContactKeyword
      parameters:
      - explode: false
        in: path
        name: contactGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ContactModel
      - explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 2
        x-relation-guid: KeywordModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:delete
      summary: Delete a keyword from the contact
      tags:
      - CustomersDelete
      x-accepts:
      - application/json
    post:
      operationId: Keywords_LinkKeywordToContact
      parameters:
      - explode: false
        in: path
        name: contactGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      - explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 2
        x-relation-guid: KeywordModel
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactKeywordModel'
          description: Created contact keyword link.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:write
      summary: Link existing keyword to contact
      tags:
      - CustomersWrite
      x-accepts:
      - application/json
  /v1/costaccounts:
    get:
      operationId: CostAccounts_GetCostAccounts
      parameters:
      - description: "If not given, return all cost accounts, if given as true return\
          \ only active cost accounts, if given as false returns only inactive cost\
          \ accounts."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from cost account name or identifier."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=Name&sortings[0].value=Desc\
          \ &sortings[1].key=Identifier&sortings[1].value=Asc\"."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CostAccountModel'
                type: array
          description: All the cost accounts.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get cost accounts.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: CostAccounts_PostCostAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostAccountModel'
        description: CostAccountModel.
        x-name: costAccount
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostAccountModel'
          description: Created cost account.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a cost account.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/costaccounts/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if cost\
        \ account can't be found."
      operationId: CostAccounts_DeleteCostAccount
      parameters:
      - description: ID for the cost account to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CostAccountModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete a cost account.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: CostAccounts_GetCostAccount
      parameters:
      - description: Cost account's guid.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CostAccountModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostAccountModel'
          description: CostAccountModel.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get cost account by Guid.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: CostAccounts_PatchCostAccount
      parameters:
      - description: ID of the cost account.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CostAccountModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of CostAccountModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CostAccountModel'
                type: array
          description: list of updated cost account.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a cost account or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/costcenters:
    get:
      operationId: CostCenters_GetCostCenters
      parameters:
      - description: "If not given, return all cost centers, if given as true return\
          \ only active cost centers, if given as false returns only inactive cost\
          \ centers."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from cost center name or identifier."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Get cost centers that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 5
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 6
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\"."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 7
      - description: "Optional: Identifier of the cost center."
        explode: true
        in: query
        name: identifier
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 8
      - description: "Optional: Name of the cost center."
        explode: true
        in: query
        name: name
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 9
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CostCenterModel'
                type: array
          description: All the cost centers.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get cost centers.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: CostCenters_PostCostCenter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostCenterModel'
        description: CostCenterModel.
        x-name: costCenter
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCenterModel'
          description: Created cost center.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a cost center.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/costcenters/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if cost\
        \ center can't be found."
      operationId: CostCenters_DeleteCostCenter
      parameters:
      - description: ID for the cost center to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CostCenterModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete a cost center.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: CostCenters_GetCostCenter
      parameters:
      - description: Id used to get the cost center.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CostCenterModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCenterModel'
          description: CostCenterModel.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get cost center by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: CostCenters_PatchCostCenter
      parameters:
      - description: ID of the cost center.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CostCenterModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of CostCenterModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CostCenterModel'
                type: array
          description: list of updated cost center.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a cost center or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/currencies:
    get:
      operationId: Currencies_GetCurrencies
      parameters:
      - description: "If not given, return all Currencies, if given as true return\
          \ only active Currencies, if given as false returns only inactive Currencies."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text based search applied to the result. Matches currency\
          \ name and code."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=name&sortings[0].value=Asc\"\
          . Using additional sorting fields \"CreatedDate\" and / or \"LastUpdatedDate\"\
          \ as keys sort currencies without a timestamp provided when sorting with\
          \ other date fields."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CurrencyOutputModel'
                type: array
          description: All the Currencies
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the Currencies
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/currencies/{guid}:
    get:
      operationId: Currencies_GetCurrency
      parameters:
      - description: GUID used to get the currency.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CurrencyOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyOutputModel'
          description: CurrencyModel.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get currency by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: Currencies_PatchCurrency
      parameters:
      - description: ID of the currency.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CurrencyOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of CurrencyModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CurrencyOutputModel'
                type: array
          description: List of updated currencies.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) an currency or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/customercountrysettings:
    post:
      operationId: CustomerCountrySettings_PostCustomerCountrySettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCountrySettingsInputModel'
        description: CustomerCountrySettingsModel.
        x-name: model
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCountrySettingsOutputModel'
          description: Inserted customer country setting.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:write
      summary: Insert a customer country setting.
      tags:
      - CustomersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/customercountrysettings/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if customer\
        \ country setting can't be found."
      operationId: CustomerCountrySettings_DeleteCustomerCountrySetting
      parameters:
      - description: GUID used to delete the customer country setting.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerCountrySettingsOutputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:delete
      summary: Deletes a customer country setting.
      tags:
      - CustomersDelete
      x-accepts:
      - application/json
    patch:
      operationId: CustomerCountrySettings_PatchCustomerCountrySettings
      parameters:
      - description: ID of the customer country setting.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerCountrySettingsOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of CustomerCountrySettingsModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerCountrySettingsOutputModel'
                type: array
          description: List of updated customer country settings.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:write
      summary: Update (Patch) a customer country setting.
      tags:
      - CustomersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/customermarketsegments:
    get:
      operationId: CustomerMarketSegments_GetAllCustomerMarketSegments
      parameters:
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Text to search from customer market segment name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Optional: Fetches all children of a parent based on parent market\
          \ segment guid."
        explode: true
        in: query
        name: parentMarketSegmentGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 4
        x-relation-guid: CustomerMarketSegmentModel
      - description: "Optional: Returns only child segments when false. Has no effect\
          \ if parentMarketSegmentGuid parameter is defined. Default = true."
        explode: true
        in: query
        name: includeParentLevel
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerMarketSegmentModel'
                type: array
          description: List of Customer Market Segments.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get all Customer Market Segments.
      tags:
      - CustomersRead
      x-accepts:
      - application/json
    post:
      operationId: CustomerMarketSegments_PostCustomerMarketSegment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerMarketSegmentModel'
        description: CustomerMarketSegmentModel.
        x-name: customerMarketSegment
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerMarketSegmentModel'
          description: Created customer market segment.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:write
      summary: Add a market segment for customer.
      tags:
      - CustomersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/customermarketsegments/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if customer\
        \ market segment can't be found."
      operationId: CustomerMarketSegments_DeleteCustomerMarketSegment
      parameters:
      - description: ID for the customer market segment to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerMarketSegmentModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:delete
      summary: Deletes a customer market segment.
      tags:
      - CustomersDelete
      x-accepts:
      - application/json
    get:
      operationId: CustomerMarketSegments_GetCustomerMarketSegment
      parameters:
      - description: Customer market segment guid.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerMarketSegmentModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerMarketSegmentModel'
          description: List of Customer Market Segments.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get the customer market segment.
      tags:
      - CustomersRead
      x-accepts:
      - application/json
  /v1/customers:
    get:
      operationId: Customers_GetCustomers
      parameters:
      - explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "If not given, return all Customers, if given as true return\
          \ only active Customers, if given as false returns only inactive Customers."
        explode: true
        in: query
        name: isActive
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 3
      - description: "Optional: List of customer owner ids to search for. Default\
          \ all."
        explode: true
        in: query
        name: customerOwnerGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 4
        x-relation-guid: UserOutputModel
      - description: "Optional: When true returns only internal customer"
        explode: true
        in: query
        name: isInternal
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: List of customer numbers."
        explode: true
        in: query
        name: numbers
        required: false
        schema:
          items:
            format: int64
            type: integer
          nullable: true
          type: array
        style: form
        x-position: 6
      - description: "Optional: Get customers that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 7
      - description: "Optional: Get customers where email address matches to any provided\
          \ email address"
        explode: true
        in: query
        name: emailAddresses
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 8
      - description: "Optional: Get customers where customer name matches to any provided\
          \ customer name"
        explode: true
        in: query
        name: customerNames
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 9
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerModel'
                type: array
          description: All the customers
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get all the customers
      tags:
      - CustomersRead
      x-accepts:
      - application/json
    post:
      operationId: Customers_PostCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerModel'
        description: CustomerModel.
        x-name: customer
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerModel'
          description: Inserted customer.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:write
      summary: Insert a customer.
      tags:
      - CustomersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/customers/customproperties:
    get:
      operationId: CustomerCustomProperties_GetCustomerCustomProperties
      parameters:
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Get only active or inactive customer properties."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 3
      - description: "Optional: Text to search from custom property name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Is the customer property used in any custom property\
          \ usage."
        explode: true
        in: query
        name: isInUse
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 6
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (sub-model fields not supported) in the model can be used, while\
          \ value can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=Name&sortings[0].value=Desc&sortings[1].key=Number&sortings[1].value=Asc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 7
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomPropertyModel'
                type: array
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get the customer custom properties.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: CustomerCustomProperties_PostCustomerCustomProperty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomPropertyModel'
        description: CustomerCustomPropertyModel.
        x-name: customProperty
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomPropertyModel'
                type: array
          description: Created customer custom property.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a customer custom property.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/customers/customproperties/customercustompropertyselectionitems:
    post:
      operationId: CustomerCustomPropertySelectionItems_PostCustomerCustomPropertySelectionItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCustomPropertySelectionItemInputModel'
        description: CustomPropertySelectionItemInputModel.
        x-name: customerCustomPropertySelectionItem
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCustomPropertySelectionItemOutputModel'
          description: Created customer custom property.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a customer custom property selection item.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/customers/customproperties/customercustompropertyselectionitems/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: CustomerCustomPropertySelectionItems_DeleteCustomerCustomPropertySelectionItem
      parameters:
      - description: GUID used to delete the customer custom property selection item.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerCustomPropertySelectionItemInputModel
      responses:
        "204":
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Deletes a customer custom property selection item.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: CustomerCustomPropertySelectionItems_GetCustomerCustomPropertySelectionItem
      parameters:
      - description: Id used to get the customer custom property selection item.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerCustomPropertySelectionItemOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCustomPropertySelectionItemOutputModel'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get customer custom property selection item by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: CustomerCustomPropertySelectionItems_PatchCustomerCustomPropertySelectionItem
      parameters:
      - description: ID of the customer custom property selection item.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerCustomPropertySelectionItemInputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of CustomerCustomPropertySelectionItemInputModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerCustomPropertySelectionItemOutputModel'
                type: array
          description: List of updated customer custom properties.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a customer custom property selection item or a part
        of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/customers/customproperties/{customPropertyGuid}/customercustompropertyselectionitems:
    get:
      operationId: CustomerCustomPropertySelectionItems_GetCustomerCustomPropertySelectionItems
      parameters:
      - description: Custom property id used to get the customer custom property selection
          items.
        explode: false
        in: path
        name: customPropertyGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomPropertyModel
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Get only active or inactive selection items."
        explode: true
        in: query
        name: isActive
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 3
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Get custom property selection items that have been\
          \ added or changed after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerCustomPropertySelectionItemOutputModel'
                type: array
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get the customer custom properties.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/customers/customproperties/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: CustomerCustomProperties_DeleteCustomerCustomProperty
      parameters:
      - description: GUID used to delete the customer custom property.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomPropertyModel
      responses:
        "204":
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Deletes a customer custom property.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: CustomerCustomProperties_GetCustomerCustomProperty
      parameters:
      - description: Id used to get the customer custom property.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomPropertyModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPropertyModel'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get customer custom property by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: CustomerCustomProperties_PatchCustomerCustomProperty
      parameters:
      - description: "ID of the customer custom property Can also be comma separate\
          \ list of IDs to patch multiple customer custom properties with one call.\
          \ When multiple IDs are given, returns model which has list of succeeded\
          \ customer custom properties and list of errors."
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomPropertyModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of CustomerCustomPropertyModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomPropertyModel'
                type: array
          description: List of updated customer custom properties.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a customer custom property or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/customers/customvalues:
    post:
      operationId: CustomerCustomValues_PostCustomerCustomValue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCustomValueModel'
        description: CustomerCustomValueModel.
        x-name: customerCustomValue
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerCustomValueModel'
                type: array
          description: Created customer custom value.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:write
      summary: Insert a customer custom value.
      tags:
      - CustomersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/customers/customvalues/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: CustomerCustomValues_DeleteCustomerCustomValue
      parameters:
      - description: GUID used to delete the customer custom value.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerCustomValueModel
      responses:
        "204":
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:delete
      summary: Deletes a customer custom value.
      tags:
      - CustomersDelete
      x-accepts:
      - application/json
    get:
      operationId: CustomerCustomValues_GetCustomerCustomValue
      parameters:
      - description: Id used to get the customer custom value.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerCustomValueModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCustomValueModel'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get customer custom value by ID.
      tags:
      - CustomersRead
      x-accepts:
      - application/json
    patch:
      operationId: CustomerCustomValues_PatchCustomerCustomValue
      parameters:
      - description: "ID of the customer custom value Can also be comma separate list\
          \ of IDs to patch multiple customer custom values with one call. When multiple\
          \ IDs are given, returns model which has list of succeeded customer custom\
          \ values and list of errors."
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerCustomValueModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of CustomerCustomValueModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerCustomValueModel'
                type: array
          description: List of updated customer custom values.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:write
      summary: Update (Patch) a customer custom value or a part of it.
      tags:
      - CustomersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/customers/{customerGuid}/addresses:
    get:
      operationId: Addresses_GetCustomerAddresses
      parameters:
      - description: ID for the customer.
        explode: false
        in: path
        name: customerGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerModel
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AddressModel'
                type: array
          description: Addresses for the customer
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get customer's addresses
      tags:
      - CustomersRead
      x-accepts:
      - application/json
    post:
      operationId: Addresses_PostCustomerAddress
      parameters:
      - description: ID of the customer to add the address for.
        explode: false
        in: path
        name: customerGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressModel'
        description: AddressModel.
        x-name: address
        x-position: 2
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressModel'
          description: Created address.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:write
      summary: Insert an address.
      tags:
      - CustomersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/customers/{customerGuid}/contactpersons:
    get:
      operationId: Contacts_GetCustomerContacts
      parameters:
      - description: Customer guid used to get the contact persons.
        explode: false
        in: path
        name: customerGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerModel
      - description: "If not given, return all Contact persons, if given as true return\
          \ only active Contact persons, if given as false returns only inactive Contact\
          \ persons."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      - description: "Optional: Text to search from contact person's name or communication\
          \ method (i.e. phone number or email address)."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContactModel'
                type: array
          description: List of contacts for a customer.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get the contact persons for a customer.
      tags:
      - CustomersRead
      x-accepts:
      - application/json
  /v1/customers/{customerGuid}/customercountrysettings:
    get:
      operationId: CustomerCountrySettings_GetCustomerCountrySettings
      parameters:
      - description: GUID of the customer.
        explode: false
        in: path
        name: customerGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerCountrySettingsOutputModel'
                type: array
          description: All the Currencies.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get all the country settings for a customer.
      tags:
      - CustomersRead
      x-accepts:
      - application/json
  /v1/customers/{customerGuid}/customermarketsegments:
    get:
      operationId: CustomerMarketSegments_GetCustomerMarketSegments
      parameters:
      - description: ID of the customer.
        explode: false
        in: path
        name: customerGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerModel
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Return also the markets segments that are not in use\
          \ for the customer."
        explode: true
        in: query
        name: includeMarketSegmentsFromRegistry
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerMarketSegmentModel'
                type: array
          description: List of Customer Market Segments.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get the Market Segments for a customer.
      tags:
      - CustomersRead
      x-accepts:
      - application/json
  /v1/customers/{customerGuid}/customersalesnotes:
    get:
      operationId: SalesNotes_GetCustomerSalesNotes
      parameters:
      - description: Customer guid used to get the notes.
        explode: false
        in: path
        name: customerGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Get sales notes that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerSalesNoteOutputModel'
                type: array
          description: List of sales notes for a customer.
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get the customer sales notes.
      tags:
      - CustomersRead
      x-accepts:
      - application/json
  /v1/customers/{customerGuid}/customvalues:
    get:
      operationId: CustomerCustomValues_GetCustomerCustomValues
      parameters:
      - description: ID of the customer.
        explode: false
        in: path
        name: customerGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerModel
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Get only values of active or inactive customer custom\
          \ properties."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 4
      - description: List of target for which to get the values.
        explode: true
        in: query
        name: target
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 5
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 6
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (sub-model fields not supported) in the model can be used, while\
          \ value can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=Name&sortings[0].value=Desc&sortings[1].key=Number&sortings[1].value=Asc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 7
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerCustomValueModel'
                type: array
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get the customer custom values.
      tags:
      - CustomersRead
      x-accepts:
      - application/json
  /v1/customers/{customerGuid}/projects:
    get:
      operationId: Projects_GetCustomerProjects
      parameters:
      - description: Id of the customer.
        explode: false
        in: path
        name: customerGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerModel
      - explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: When true fetch projects that have something to bill,\
          \ when false nothing to bill. Default nothing = all."
        explode: true
        in: query
        name: isBillable
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 4
      - explode: true
        in: query
        name: currencyGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 5
      - explode: true
        in: query
        name: projectGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 6
      - explode: true
        in: query
        name: projectKeywordGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 7
      - explode: true
        in: query
        name: projectStatusTypeGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 8
      - explode: true
        in: query
        name: salesPersonGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 9
      - explode: true
        in: query
        name: projectOwnerGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 10
      - explode: true
        in: query
        name: businessUnitGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 11
      - explode: true
        in: query
        name: minimumBillableAmount
        required: false
        schema:
          format: double
          nullable: true
          type: number
        style: form
        x-position: 12
      - explode: true
        in: query
        name: customerOwnerGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 13
      - explode: true
        in: query
        name: invoiceableDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 14
      - explode: true
        in: query
        name: marketSegmentationGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 15
      - explode: true
        in: query
        name: salesStatusTypeGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 16
      - explode: true
        in: query
        name: isClosed
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 17
      - explode: true
        in: query
        name: hasRecurringFees
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 18
      - explode: true
        in: query
        name: companyCurrencyGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 19
      - explode: true
        in: query
        name: projectMemberUserGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 20
      - explode: true
        in: query
        name: numbers
        required: false
        schema:
          items:
            format: int64
            type: integer
          nullable: true
          type: array
        style: form
        x-position: 21
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectOutputModel'
                type: array
          description: All the projects for the customer
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get customer's projects
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/customers/{customerGuid}/salesnotes:
    get:
      operationId: SalesNotes_GetAllCustomerSalesNotes
      parameters:
      - description: Customer guid used to get the notes.
        explode: false
        in: path
        name: customerGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Get sales notes that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SalesNoteOutputModel'
                type: array
          description: List of sales notes for a customer.
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
        - customers:read
      summary: Get the sales notes by customer guid.
      tags:
      - ProjectsRead
      - CustomersRead
      x-accepts:
      - application/json
  /v1/customers/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: Customers_DeleteCustomer
      parameters:
      - description: GUID used to delete the customer.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:delete
      summary: Deletes a customer.
      tags:
      - CustomersDelete
      x-accepts:
      - application/json
    get:
      operationId: Customers_GetCustomer
      parameters:
      - description: ID used to get the customer.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get customer by GUID.
      tags:
      - CustomersRead
      x-accepts:
      - application/json
    patch:
      operationId: Customers_PatchCustomer
      parameters:
      - description: ID of the customer.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of CustomerModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerModel'
                type: array
          description: List of updated customers.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:write
      summary: Update (Patch) an customer or a part of it.
      tags:
      - CustomersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/customersalesnotes:
    post:
      operationId: SalesNotes_PostCustomerSalesNotes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSalesNoteInputModel'
        description: SalesNoteOutputModel
        x-name: salesNote
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSalesNoteOutputModel'
          description: Created customer sales note.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:write
      summary: Insert a customer sales note.
      tags:
      - CustomersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/customersalesnotes/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. OK (200) if note has child\
        \ notes and can't be deleted. It is marked as IsDeleted = true. Not found\
        \ (404) if note can't be found."
      operationId: SalesNotes_DeleteCustomerSalesNote
      parameters:
      - description: GUID used to delete the customer sales note.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerSalesNoteOutputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:delete
      summary: Deletes a customer sales note.
      tags:
      - CustomersDelete
      x-accepts:
      - application/json
    get:
      operationId: SalesNotes_GetCustomerSalesNote
      parameters:
      - description: GUID used to get the customer sales note.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerSalesNoteOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSalesNoteOutputModel'
          description: ProjectNote
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:read
      summary: Get customer sales note by ID.
      tags:
      - CustomersRead
      x-accepts:
      - application/json
    patch:
      operationId: SalesNotes_PatchCustomerSalesNote
      parameters:
      - description: ID of the customer sales note.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomerSalesNoteOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of customer sales note model.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerSalesNoteOutputModel'
                type: array
          description: list of updated sales notes.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - customers:write
      summary: Update (Patch) a customer sales note or a part of it.
      tags:
      - CustomersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/deletedphasemembers:
    get:
      description: Use root phase to get project members.
      operationId: PhaseMembers_GetAllDeletedPhaseMembers
      parameters:
      - description: "Optional: Get phase members that have been added or changed\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: deletedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: Page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Is the user active. Default nothing = all."
        explode: true
        in: query
        name: isUserActive
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeletedPhaseMemberOutputModel'
                type: array
          description: All the phase members
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get all deleted phase members
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/deletedprojectfees:
    get:
      operationId: ProjectFees_GetDeletedProjectFees
      parameters:
      - explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: ID of the project for the deleted project fees to\
          \ be fetched. If not provided, returns for all projects. Default all."
        explode: true
        in: query
        name: projectGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 3
        x-relation-guid: ProjectOutputModel
      - description: "Optional: ID of the user. If not provided, returns for all users.\
          \ Default all."
        explode: true
        in: query
        name: userGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 4
        x-relation-guid: UserOutputModel
      - description: "Optional: Get project fees that have been deleted after this\
          \ date time (greater or equal)."
        explode: true
        in: query
        name: deletedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeletedProjectFeeModel'
                type: array
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:read
      summary: Get the deleted project fees.
      tags:
      - FeesRead
      x-accepts:
      - application/json
  /v1/deletedprojecttravelexpenses:
    get:
      operationId: ProjectTravelExpenses_GetDeletedProjectTravelExpenses
      parameters:
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: ID of the project for the deleted project travel expenses\
          \ to be fetched. If not provided, returns for all projects. Default all."
        explode: true
        in: query
        name: projectGuid
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 3
        x-relation-guid: ProjectOutputModel
      - description: "Optional: ID of the user. If not provided, returns for all users.\
          \ Default all."
        explode: true
        in: query
        name: userGuid
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 4
        x-relation-guid: UserOutputModel
      - description: "Optional: Get project travel expenses that have been deleted\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: deletedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeletedProjectTravelExpenseModel'
                type: array
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - travels:read
      summary: Get the deleted project travel expenses.
      tags:
      - TravelsRead
      x-accepts:
      - application/json
  /v1/deletedworkhours:
    get:
      operationId: WorkHours_GetDeletedWorkHours
      parameters:
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: ID of the project for the deleted work hours to be\
          \ fetched. If not provided, returns for all projects. Default all."
        explode: true
        in: query
        name: projectGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 3
        x-relation-guid: ProjectOutputModel
      - description: "Optional: ID of the user. If not provided, returns for all users.\
          \ Default all."
        explode: true
        in: query
        name: userGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 4
        x-relation-guid: UserOutputModel
      - description: "Optional: Get work hours that have been deleted after this date\
          \ time (greater or equal)."
        explode: true
        in: query
        name: deletedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeletedWorkHourModel'
                type: array
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - hours:read
      summary: Get the deleted work hours.
      tags:
      - HoursRead
      x-accepts:
      - application/json
  /v1/files/{fileGuid}/keywords:
    get:
      operationId: Keywords_GetFileKeywords
      parameters:
      - description: ID of the file for which keywords are requested.
        explode: false
        in: path
        name: fileGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: FileModel
      - description: "If not given, return all Keywords, if given as true return only\
          \ active Keywords, if given as false returns only inactive Keywords."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=Keyword&sortings[0].value=Desc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileKeywordModel'
                type: array
          description: Keywords.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - files:read
      summary: Get all the keywords for file.
      tags:
      - FilesRead
      x-accepts:
      - application/json
  /v1/files/{fileGuid}/keywords/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if the\
        \ keyword or the link can't be found."
      operationId: Keywords_DeleteFileKeyword
      parameters:
      - explode: false
        in: path
        name: fileGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: FileModel
      - explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 2
        x-relation-guid: KeywordModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - files:delete
      summary: Delete a keyword from the file
      tags:
      - FilesDelete
      x-accepts:
      - application/json
    post:
      operationId: Keywords_LinkKeywordToFile
      parameters:
      - explode: false
        in: path
        name: fileGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      - explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 2
        x-relation-guid: KeywordModel
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileKeywordModel'
          description: Created file keyword link.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - files:write
      summary: Link existing keyword to file
      tags:
      - FilesWrite
      x-accepts:
      - application/json
  /v1/files/{guid}:
    get:
      operationId: Files_GetFile
      parameters:
      - description: GUID used to get the file.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: FileModel
      - description: Is data included in response as base64 string.
        explode: true
        in: query
        name: includeDataInResponse
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileModel'
          description: File.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - files:read
      summary: Get file by ID.
      tags:
      - FilesRead
      x-accepts:
      - application/json
  /v1/files/{guid}/filedata:
    get:
      description: "Returns binary data, which contains content with type given in\
        \ Content-Type header."
      operationId: FileData_GetDataForFile
      parameters:
      - description: GUID used to get the file.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: FileModel
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Get file data by ID
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - files:read
      summary: Get file data by ID.
      tags:
      - FilesRead
      x-accepts:
      - application/json
      - application/octet-stream
  /v1/flatrates:
    get:
      operationId: FlatRates_GetAllFlatRates
      parameters:
      - description: "Optional: Page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Get flat rates that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Optional: Get flat rates by invoice guid. Default all."
        explode: true
        in: query
        name: invoiceGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 4
        x-relation-guid: InvoiceOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlatRateOutputModel'
                type: array
          description: All the flat rates
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:read
      summary: Get all flat rates
      tags:
      - FeesRead
      x-accepts:
      - application/json
    post:
      operationId: FlatRates_PostFlatRate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatRateInputModel'
        description: FlatRateModel.
        x-name: flatRate
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlatRateOutputModel'
          description: Created flat rate.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:write
      summary: Insert a flat rate.
      tags:
      - FeesWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/flatrates/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: FlatRates_DeleteFlatRate
      parameters:
      - description: ID of flat rate.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: FlatRateInputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:delete
      summary: Delete a flat rate of a phase.
      tags:
      - FeesDelete
      x-accepts:
      - application/json
    get:
      operationId: FlatRates_GetFlatrate
      parameters:
      - description: Id of the flat rate.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: FlatRateInputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlatRateOutputModel'
                type: array
          description: FlatRateModel.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:read
      summary: Get flat rate.
      tags:
      - FeesRead
      x-accepts:
      - application/json
    patch:
      operationId: FlatRates_PatchFlatRate
      parameters:
      - description: ID of the flat rate.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: FlatRateInputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of FlatRateModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlatRateOutputModel'
                type: array
          description: list of updated flat rates.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:write
      summary: Update (Patch) a flat rate or a part of it.
      tags:
      - FeesWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/flextimeadjustments:
    post:
      operationId: FlextimeAdjustments_PostFlextimeAdjustment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlextimeAdjustmentInputModel'
        description: FlextimeAdjustmentInputModel.
        x-name: flextimeAdjustment
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlextimeAdjustmentOutputModel'
          description: Inserted FlextimeAdjustment.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:write
      summary: Insert a flextime adjustment.
      tags:
      - UsersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/flextimeadjustments/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if flextime\
        \ adjustment can't be found."
      operationId: FlextimeAdjustments_DeleteFlextimeAdjustment
      parameters:
      - description: ID for the flextime adjustment to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: FlextimeAdjustmentOutputModel
      responses:
        "204":
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:write
      summary: Delete an flextime adjustment.
      tags:
      - UsersWrite
      x-accepts:
      - application/json
    get:
      operationId: FlextimeAdjustments_GetFlextimeAdjustment
      parameters:
      - description: GUID used to get the Flextime Adjustment.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: FlextimeAdjustmentOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlextimeAdjustmentOutputModel'
          description: Flextime Adjustment.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:read
      summary: Get Flextime Adjustment by ID.
      tags:
      - UsersRead
      x-accepts:
      - application/json
    patch:
      operationId: FlextimeAdjustments_PatchFlextimeAdjustment
      parameters:
      - description: ID of the Flextime Adjustment.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: FlextimeAdjustmentOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of FlextimeAdjustmentInputModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlextimeAdjustmentOutputModel'
                type: array
          description: Updated Flextime Adjustment.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:write
      summary: Update (Patch) an Flextime Adjustment or a part of it.
      tags:
      - UsersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/holidays:
    get:
      operationId: Holidays_GetHolidays
      parameters:
      - description: "Optional: Holidays for this year only. Default: all years."
        explode: true
        in: query
        name: year
        required: false
        schema:
          format: int32
          maximum: 2075
          minimum: 1900
          nullable: true
          type: integer
        style: form
        x-position: 1
      - description: "Optional: Holidays for this country only. Default local."
        explode: true
        in: query
        name: countryGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
        x-relation-guid: CountryModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HolidayModel'
                type: array
          description: 'List of holidays. '
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get holidays.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/holidaysbytimeperiod:
    get:
      operationId: Holidays_GetHolidaysByTimePeriod
      parameters:
      - description: Start date for holidays.
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-position: 1
      - description: End date for holidays.
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-position: 2
      - description: "Optional: Holidays for this country only. Default local."
        explode: true
        in: query
        name: countryGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 3
        x-relation-guid: CountryModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HolidayModel'
                type: array
          description: 'List of holidays. '
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get holidays with start and end date.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/industries:
    get:
      operationId: Industries_GetIndustries
      parameters:
      - description: "If not given, return all industries, if given as true return\
          \ only active industries, if given as false returns only inactive industries."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from industry name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IndustryModel'
                type: array
          description: All the industries.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the industries.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: Industries_PostIndustry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndustryModel'
        description: IndustryModel.
        x-name: model
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndustryModel'
          description: Inserted industry.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert an industry.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/industries/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if industry\
        \ can't be found."
      operationId: Industries_DeleteIndustry
      parameters:
      - description: ID for the industry to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: IndustryModel
      - description: "Optional: ID of the industry to which to move usages of this\
          \ industry. Default null. If industry is in use and usages aren't moved\
          \ the deletion might fail."
        explode: true
        in: query
        name: moveUsagesToGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
        x-relation-guid: IndustryModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete an industry.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: Industries_GetIndustry
      parameters:
      - description: GUID used to get the industry.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: IndustryModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndustryModel'
          description: Industry.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get industry by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: Industries_PatchIndustry
      parameters:
      - description: ID of the industry.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: IndustryModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of IndustryModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IndustryModel'
                type: array
          description: list of updated industries.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) an industry or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/integrations/vismafinancials/companyinformation:
    get:
      operationId: Organizations_GetVismaFinancialsCompanyInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VismaFinancialsCompanyModel'
          description: VismaFinancialsCompanyModel.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - organization:read
      summary: Get Visma.net Financials integration company information.
      tags:
      - OrganizationRead
      x-accepts:
      - application/json
  /v1/invoicefiles/{guid}:
    get:
      operationId: Files_GetInvoiceFile
      parameters:
      - description: GUID used to get the invoice file.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceFileModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceFileModel'
          description: InvoiceFile.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - files:read
      summary: Get invoice file by ID.
      tags:
      - FilesRead
      x-accepts:
      - application/json
  /v1/invoicerows:
    get:
      operationId: InvoiceRows_GetInvoiceRows
      parameters:
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Get invoice rows that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InvoiceRowOutputModel'
                type: array
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get invoice rows
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
  /v1/invoicerows/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: InvoiceRows_DeleteInvoiceRow
      parameters:
      - description: GUID used to delete the invoice row.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceRowOutputModel
      - explode: true
        in: query
        name: setAsNonBillable
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 2
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:delete
      summary: Deletes an invoice row
      tags:
      - InvoicesDelete
      x-accepts:
      - application/json
    get:
      operationId: InvoiceRows_GetInvoiceRow
      parameters:
      - description: GUID of the invoice row.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceRowOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceRowOutputModel'
          description: Invoice row
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get invoice row by ID
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
    patch:
      description: "If CostCenterNumber, SalesAccountNumber or RecurringSalesAccountNumber\
        \ are changed and the invoice row is related to one or many ProjectFees or\
        \ ProjectTravelExpenses, the values for those will also be updated."
      operationId: InvoiceRows_PatchInvoiceRow
      parameters:
      - description: ID of the invoice row
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceRowOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of InvoiceRowModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InvoiceRowOutputModel'
                type: array
          description: List of updated invoice rows
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:write
      summary: Update (Patch) a invoice row or a part of it
      tags:
      - InvoicesWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/invoicerows/{invoiceRowGuid}/projectfees:
    get:
      operationId: ProjectFees_GetInvoiceRowProjectFees
      parameters:
      - description: ID of the invoice row.
        explode: false
        in: path
        name: invoiceRowGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceRowOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: Number of rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: ProjectFee's product type. if given, it filters the\
          \ projectFees by the given type. FixedFees (Own work), Materials (Products),\
          \ Subcontracting"
        explode: true
        in: query
        name: productType
        required: false
        schema:
          $ref: '#/components/schemas/ProductType'
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectFeeOutputModel'
                type: array
          description: ProjectFees
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get all the project fees on an invoice row
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
  /v1/invoicerows/{invoiceRowGuid}/projecttravelexpenses:
    get:
      operationId: ProjectTravelExpenses_GetInvoiceRowProjectTravelExpenses
      parameters:
      - description: ID of the invoice row.
        explode: false
        in: path
        name: invoiceRowGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceRowOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Class of the expense. Mileage, DailyAllowance or OtherTravelExpense"
        explode: true
        in: query
        name: expenseClass
        required: false
        schema:
          $ref: '#/components/schemas/ExpensesClass'
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTravelExpenseOutputModel'
                type: array
          description: ProjectTravelExpenseOutputModel
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get all the project travel expenses on an invoice row
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
  /v1/invoicerows/{invoiceRowGuid}/reimbursedprojectfees:
    get:
      operationId: ReimbursedProjectFees_GetInvoiceRowReimbursedProjectFees
      parameters:
      - description: ID of the invoice row.
        explode: false
        in: path
        name: invoiceRowGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceRowOutputModel
      - description: "Optional: Number of rows to fetch"
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReimbursedProjectFeeOutputModel'
                type: array
          description: ReimbursedProjectFee
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get all the project fees on an invoice row
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
  /v1/invoicerows/{invoiceRowGuid}/reimbursedprojecttravelexpenses:
    get:
      operationId: ReimbursedProjectTravelExpenses_GetInvoiceRowProjectTravelExpenses
      parameters:
      - description: ID of the invoice row.
        explode: false
        in: path
        name: invoiceRowGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceRowOutputModel
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default all."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Searched string: part of name or description."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional. If true, calculates the total count of project fees.\
          \ Default false."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (sub-model fields not supported) in the model can be used, while\
          \ value can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=Name&sortings[0].value=Desc&sortings[1].key=Number&sortings[1].value=Asc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReimbursedProjectTravelExpenseOutputModel'
                type: array
          description: ReimbursedProjectTravelExpenses.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get all the project travel expenses on an invoice row.
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
  /v1/invoicerows/{invoiceRowGuid}/reimbursedworkhours:
    get:
      operationId: ReimbursedWorkHours_GetInvoiceRowReimbursedWorkHours
      parameters:
      - description: ID of the invoice row.
        explode: false
        in: path
        name: invoiceRowGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceRowOutputModel
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from description or invoice description."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (sub-model fields not supported) in the model can be used, while\
          \ value can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=DueDate&sortings[0].value=Asc&sortings[1].key=TotalIncludingTax&sortings[1].value=Desc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReimbursedWorkHourOutputModel'
                type: array
          description: ReimbursedWorkHour.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get all reimbursed hours on an invoice row.
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
  /v1/invoicerows/{invoiceRowGuid}/workhours:
    get:
      operationId: WorkHours_GetInvoiceRowWorkHours
      parameters:
      - description: ID of the invoice row.
        explode: false
        in: path
        name: invoiceRowGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceRowOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkHourOutputModel'
                type: array
          description: WorkHours
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get all the work hours on an invoice row
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
  /v1/invoices:
    get:
      operationId: Invoices_GetInvoices
      parameters:
      - description: "Optional: Number of rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 1
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: Get only invoices paid at this date or later. Default:\
          \ Get invoices regardless of payment date."
        explode: true
        in: query
        name: paymentDateStart
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Optional: Get invoices with this status only. Default: all statuses."
        explode: true
        in: query
        name: invoiceStatusGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 4
        x-relation-guid: InvoiceStatusModel
      - description: "Optional: ID of the project to get the invoices. If not provided,\
          \ returns for all projects. Default all."
        explode: true
        in: query
        name: projectGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 5
        x-relation-guid: ProjectOutputModel
      - description: "Optional: ID of the project manager to get the invoices for.\
          \ If not provided, returns for all project managers. Default all."
        explode: true
        in: query
        name: projectOwnerGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 6
        x-relation-guid: UserOutputModel
      - description: "Optional: ID of the business unit of the project. If not provided,\
          \ returns for all business units. Default all."
        explode: true
        in: query
        name: projectBusinessUnitGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 7
        x-relation-guid: BusinessUnitModel
      - description: "Optional: List of customer IDs. Get invoices for these customers."
        explode: true
        in: query
        name: customerGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 8
        x-relation-guid: CustomerModel
      - description: "Optional: starting date from which to get the invoices. Default\
          \ all."
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 9
      - description: "Optional: end date from which to get the invoices. Default all."
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 10
      - description: "Optional: specifies minimum value for invoice total in organization\
          \ currency."
        explode: true
        in: query
        name: minimumTotalExcludingTax
        required: false
        schema:
          format: double
          nullable: true
          type: number
        style: form
        x-position: 11
      - description: "Optional: specifies maximum value for invoice total in organization\
          \ currency."
        explode: true
        in: query
        name: maximumTotalExcludingTax
        required: false
        schema:
          format: double
          nullable: true
          type: number
        style: form
        x-position: 12
      - description: "Optional: Invoice reference number. If not provided, returns\
          \ invoices with any invoice reference number."
        explode: true
        in: query
        name: referenceNumbers
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 13
      - description: "Optional: Invoice number. If not provided, returns invoices\
          \ with any invoice number."
        explode: true
        in: query
        name: numbers
        required: false
        schema:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        style: form
        x-position: 14
      - description: "Optional: Get invoices that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 15
      - description: "Optional: ID of the salesperson to get the invoices for. If\
          \ not provided, returns for all sales persons."
        explode: true
        in: query
        name: salesPersonGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 16
        x-relation-guid: UserOutputModel
      - description: "Optional: ID of the user who created the invoice. If not provided,\
          \ returns for all users."
        explode: true
        in: query
        name: createdByUserGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 17
        x-relation-guid: UserOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InvoiceOutputModel'
                type: array
          description: 'List of Invoices '
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get Invoices
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
    post:
      operationId: Invoices_PostInvoiceCreation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceModel'
        description: CreateInvoiceModel
        x-name: createInvoiceModel
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InvoiceOutputModel'
                type: array
          description: Created invoice(s)
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:write
      summary: Add an invoice to project(s)
      tags:
      - InvoicesWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/invoices/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if cost\
        \ center can't be found."
      operationId: Invoices_DeleteInvoice
      parameters:
      - description: ID for the invoice to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceOutputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:delete
      summary: Delete an invoice.
      tags:
      - InvoicesDelete
      x-accepts:
      - application/json
    get:
      operationId: Invoices_GetInvoice
      parameters:
      - description: GUID of the invoice.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceOutputModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get invoice by ID
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
    patch:
      operationId: Invoices_PatchInvoice
      parameters:
      - description: GUID of the invoice
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of InvoiceInputModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InvoiceOutputModel'
                type: array
          description: list of invoices
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:write
      summary: Update (Patch) an invoice or a part of it
      tags:
      - InvoicesWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/invoices/{guid}/pdf:
    get:
      operationId: Pdf_GetInvoicePdf
      parameters:
      - description: The invoice GUID.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceOutputModel
      - description: "Optional: type of invoice."
        explode: true
        in: query
        name: invoiceType
        required: false
        schema:
          $ref: '#/components/schemas/InvoiceType'
        style: form
        x-position: 2
      - description: "Optional: what to include in the PDF. Defaults to InvoicePdfGetOptions.All."
        explode: true
        in: query
        name: pdfGetOptions
        required: false
        schema:
          $ref: '#/components/schemas/InvoicePdfGetOptions'
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: Get an invoice PDF
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - files:read
      summary: Get an invoice PDF.
      tags:
      - FilesRead
      x-accepts:
      - application/json
      - application/pdf
  /v1/invoices/{guid}/projects/{projectGuid}:
    delete:
      operationId: Invoices_DeleteProjectFromInvoice
      parameters:
      - description: The invoice GUID.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceOutputModel
      - description: The project GUID.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 2
        x-relation-guid: ProjectOutputModel
      responses:
        "204":
          description: The updated invoice.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:delete
      summary: Delete a project from invoice.
      tags:
      - InvoicesDelete
      x-accepts:
      - application/json
  /v1/invoices/{invoiceGuid}/files:
    get:
      operationId: Files_GetInvoiceFiles
      parameters:
      - description: GUID of the invoice used to get the files.
        explode: false
        in: path
        name: invoiceGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceOutputModel
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InvoiceFileModel'
                type: array
          description: InvoiceFile.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - files:read
      summary: Get all files of a invoice by its id.
      tags:
      - FilesRead
      x-accepts:
      - application/json
  /v1/invoices/{invoiceGuid}/finvoice:
    get:
      operationId: Finvoices_GetFinvoiceByInvoiceGuid
      parameters:
      - explode: false
        in: path
        name: invoiceGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceOutputModel
      responses:
        "200":
          content:
            application/soap+xml:
              schema:
                format: binary
                type: string
          description: Exports single invoice as Finvoice
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
      - application/soap+xml
  /v1/invoices/{invoiceGuid}/invoicerows:
    get:
      operationId: InvoiceRows_GetInvoiceRowsForInvoice
      parameters:
      - description: ID of the invoice.
        explode: false
        in: path
        name: invoiceGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Type of the row. Either Hours or ProjectFees, Default\
          \ all."
        explode: true
        in: query
        name: rowType
        required: false
        schema:
          $ref: '#/components/schemas/InvoiceRowType'
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InvoiceRowOutputModel'
                type: array
          description: 'List of Invoice rows '
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get Invoice rows for an invoice.
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
  /v1/invoices/{invoiceGuid}/invoicesettings:
    get:
      operationId: InvoiceSettings_GetInvoiceSettings
      parameters:
      - description: Invoice GUID used to get the invoice settings.
        explode: false
        in: path
        name: invoiceGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceSettingsOutputModel'
          description: InvoiceSettingsOutputModel
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get invoice settings by invoice GUID
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
  /v1/invoices/{invoiceGuid}/projectfees:
    get:
      operationId: ProjectFees_GetInvoiceProjectFees
      parameters:
      - description: ID of the invoice.
        explode: false
        in: path
        name: invoiceGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: Number of rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: ProjectFee's product type. if given, it filters the\
          \ projectFees by the given type. FixedFees (Own work), Materials (Products),\
          \ Subcontracting"
        explode: true
        in: query
        name: productType
        required: false
        schema:
          $ref: '#/components/schemas/ProductType'
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectFeeOutputModel'
                type: array
          description: ProjectFees
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get all the project fees on an invoice
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
  /v1/invoices/{invoiceGuid}/projecttravelexpenses:
    get:
      operationId: ProjectTravelExpenses_GetInvoiceProjectTravelExpenses
      parameters:
      - description: ID of the invoice.
        explode: false
        in: path
        name: invoiceGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Class of the expense. Mileage, DailyAllowance or OtherTravelExpense"
        explode: true
        in: query
        name: expenseClass
        required: false
        schema:
          $ref: '#/components/schemas/ExpensesClass'
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTravelExpenseOutputModel'
                type: array
          description: ProjectTravelExpenseOutputModel
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get all the project travel expenses on an invoice
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
  /v1/invoices/{invoiceGuid}/reimbursedprojectfees:
    get:
      operationId: ReimbursedProjectFees_GetInvoiceReimbursedProjectFees
      parameters:
      - description: ID of the invoice.
        explode: false
        in: path
        name: invoiceGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceOutputModel
      - description: "Optional: Number of rows to fetch"
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReimbursedProjectFeeOutputModel'
                type: array
          description: ReimbursedProjectFee
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get all the project fees on an invoice
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
  /v1/invoices/{invoiceGuid}/reimbursedprojecttravelexpenses:
    get:
      operationId: ReimbursedProjectTravelExpenses_GetInvoiceProjectTravelExpenses
      parameters:
      - description: ID of the invoice.
        explode: false
        in: path
        name: invoiceGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceOutputModel
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default all."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Searched string: part of name or description."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional. If true, calculates the total count of project fees.\
          \ Default false."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (sub-model fields not supported) in the model can be used, while\
          \ value can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=Name&sortings[0].value=Desc&sortings[1].key=Number&sortings[1].value=Asc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReimbursedProjectTravelExpenseOutputModel'
                type: array
          description: ReimbursedProjectTravelExpenses.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get all the project travel expenses on an invoice.
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
  /v1/invoices/{invoiceGuid}/reimbursedworkhours:
    get:
      operationId: ReimbursedWorkHours_GetInvoiceReimbursedWorkHours
      parameters:
      - description: ID of the invoice.
        explode: false
        in: path
        name: invoiceGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceOutputModel
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from description or invoice description."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (sub-model fields not supported) in the model can be used, while\
          \ value can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=DueDate&sortings[0].value=Asc&sortings[1].key=TotalIncludingTax&sortings[1].value=Desc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReimbursedWorkHourOutputModel'
                type: array
          description: ReimbursedWorkHour.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get all reimbursed hours on an invoice.
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
  /v1/invoices/{invoiceGuid}/uninvoicedprojectfees:
    get:
      operationId: ProjectFees_GetUninvoicedProjectFeesForInvoice
      parameters:
      - description: ID of the invoice.
        explode: false
        in: path
        name: invoiceGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: Number of rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Filter the project fees. If true/false, only the billable/non-billable\
          \ ones are returned. If null, all are returned. Default is null."
        explode: true
        in: query
        name: isBillable
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectFeeOutputModel'
                type: array
          description: ProjectFees
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get uninvoiced project fees available for invoice
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
  /v1/invoices/{invoiceGuid}/uninvoicedprojecttravelexpenses:
    get:
      operationId: ProjectTravelExpenses_GetUninvoicedProjectTravelExpensesForInvoice
      parameters:
      - description: ID of the invoice.
        explode: false
        in: path
        name: invoiceGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceOutputModel
      - description: "Optional: Filter the travel expenses. If true/false, only the\
          \ billable/non-billable ones are returned. If null, all are returned. Default\
          \ is null."
        explode: true
        in: query
        name: isBillable
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      - description: "Optional: Class of the expense. Mileage, DailyAllowance or OtherTravelExpense"
        explode: true
        in: query
        name: expenseClass
        required: false
        schema:
          $ref: '#/components/schemas/ExpensesClass'
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTravelExpenseOutputModel'
                type: array
          description: ProjectTravelExpenseOutputModel
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get uninvoiced project travel expenses available for invoice
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
  /v1/invoices/{invoiceGuid}/uninvoicedworkhours:
    get:
      operationId: WorkHours_GetUninvoicedWorkHoursForInvoice
      parameters:
      - description: ID of the invoice.
        explode: false
        in: path
        name: invoiceGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceOutputModel
      - description: "Optional: Filter the work hours. If true/false, only the billable/non-billable\
          \ ones are returned. If null, all are returned. Default is null."
        explode: true
        in: query
        name: isBillable
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkHourOutputModel'
                type: array
          description: WorkHours
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get uninvoiced work hours available for invoice
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
  /v1/invoices/{invoiceGuid}/workhours:
    get:
      operationId: WorkHours_GetInvoiceWorkHours
      parameters:
      - description: ID of the invoice.
        explode: false
        in: path
        name: invoiceGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkHourOutputModel'
                type: array
          description: WorkHours
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      summary: Get all the work hours on an invoice
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
  /v1/invoicesettings/{guid}:
    patch:
      operationId: InvoiceSettings_PatchInvoiceSettings
      parameters:
      - description: ID of the invoice settings
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceSettingsOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of InvoiceSettingsModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceSettingsOutputModel'
          description: InvoiceSettingsOutputModel
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:write
      summary: Update (Patch) invoice setting
      tags:
      - InvoicesWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/invoicestatuses:
    get:
      operationId: InvoiceStatuses_GetInvoiceStatuses
      parameters:
      - description: "Filter the invoice statuses. If true/false, only the active/inactive\
          \ ones are returned. If null, all the invoice statuses are returned."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from invoice status name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=Name&sortings[0].value=Desc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InvoiceStatusModel'
                type: array
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get invoice statuses.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: InvoiceStatuses_PostInvoiceStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceStatusModel'
        description: InvoiceStatusModel.
        x-name: model
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceStatusModel'
          description: Inserted invoice status.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a invoice status.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/invoicestatuses/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if invoice\
        \ status can't be found."
      operationId: InvoiceStatuses_DeleteInvoiceStatus
      parameters:
      - description: ID for the invoice status to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceStatusModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete an invoice status.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: InvoiceStatuses_GetInvoiceStatus
      parameters:
      - description: GUID used to get the Invoice status.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceStatusModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceStatusModel'
          description: Invoice status.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get Invoice status by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: InvoiceStatuses_PatchInvoiceStatus
      parameters:
      - description: ID of the Invoice status.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceStatusModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of InvoiceStatusModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InvoiceStatusModel'
                type: array
          description: List of updated Invoice statuses.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) an Invoice status or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/invoicestatuses/{invoiceStatusGuid}/finvoices:
    get:
      operationId: Finvoices_GetFinvoicesByInvoiceStatus
      parameters:
      - explode: false
        in: path
        name: invoiceStatusGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceStatusModel
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Exports all invoices by invoice status as stream of multiple
            Finvoices
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
      tags:
      - InvoicesRead
      x-accepts:
      - application/json
      - application/octet-stream
  /v1/invoicetemplates:
    get:
      operationId: InvoiceTemplates_GetInvoiceTemplates
      parameters:
      - explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      - explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InvoiceTemplateModel'
                type: array
          description: InvoiceTemplatesModel.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get invoice templates.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/invoicetemplates/{guid}:
    get:
      operationId: InvoiceTemplates_GetInvoiceTemplate
      parameters:
      - description: ID of the invoice template.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: InvoiceTemplateModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceTemplateModel'
          description: InvoiceTemplatesModel.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get invoice template by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/keywords:
    get:
      operationId: Keywords_GetKeywords
      parameters:
      - description: "Optional: category of the keyword."
        explode: true
        in: query
        name: category
        required: false
        schema:
          $ref: '#/components/schemas/KeywordCategory'
        style: form
        x-position: 1
      - description: "If not given, return all Keywords, if given as true return only\
          \ active Keywords, if given as false returns only inactive Keywords."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      - description: "Optional: Text to search from keyword."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 5
      - description: "Optional: Get keywords that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 6
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 7
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\"."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 8
      - description: "Optional: Keyword name."
        explode: true
        in: query
        name: keyword
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 9
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeywordModel'
                type: array
          description: All the Keywords.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the keywords.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: Keywords_PostKeyword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeywordModel'
        description: KeywordModel.
        x-name: keyword
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeywordModel'
          description: Created contact role.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a keyword.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/keywords/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: Keywords_DeleteKeyword
      parameters:
      - description: GUID used to get the keyword.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: KeywordModel
      - description: "Optional: ID of the keyword to which to move usages of this\
          \ keyword. Default null. If keyword is in use and usages aren't moved the\
          \ deletion might fail."
        explode: true
        in: query
        name: moveUsagesToGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
        x-relation-guid: KeywordModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: "Delete keyword by ID. It will also be deleted from any entity it is\
        \ used in (Project, etc.)"
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: Keywords_GetKeyword
      parameters:
      - description: GUID used to get the keyword.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: KeywordModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeywordModel'
          description: Keyword.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get keyword by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: Keywords_PatchKeyword
      parameters:
      - description: ID of the keyword.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: KeywordModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeywordModel'
                type: array
          description: list of updated keywords.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a keyword or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/kpiformulas:
    get:
      operationId: KpiFormulas_GetKpiFormulas
      parameters:
      - description: "Optional: Category of KPI formula (Project, Invoice, User)."
        explode: true
        in: query
        name: category
        required: false
        schema:
          $ref: '#/components/schemas/KpiFormulaCategory'
        style: form
        x-position: 1
      - description: "Optional: return with given active status. Default is to return\
          \ all."
        explode: true
        in: query
        name: isActive
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      - description: "Optional: Text to search."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 5
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=Name&sortings[0].value=Desc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      - description: "Optional: Include definition to response. Default false."
        explode: true
        in: query
        name: includeDefinition
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 7
      - description: "Optional: Get KPI formulas that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 8
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KpiFormulaModelBase'
                type: array
          description: KPI formulas.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get saved KPI formulas.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/leadsources:
    get:
      operationId: LeadSources_GetLeadSources
      parameters:
      - description: "If not given, return all lead sources, if given as true return\
          \ only active lead sources, if given as false returns only inactive lead\
          \ sources."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from lead source name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LeadSourceModel'
                type: array
          description: List of lead sources.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get the lead sources.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: LeadSources_PostLeadSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadSourceModel'
        description: LeadSourceModel.
        x-name: model
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSourceModel'
          description: Inserted lead source.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a lead source.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/leadsources/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if lead\
        \ source can't be found."
      operationId: LeadSources_DeleteLeadSource
      parameters:
      - description: ID for the lead source to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: LeadSourceModel
      - description: "Optional: ID of the lead source to which to move usages of this\
          \ lead source. Default null. If industry is in use and usages aren't moved\
          \ the deletion might fail."
        explode: true
        in: query
        name: moveUsagesToGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
        x-relation-guid: LeadSourceModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete a lead source.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: LeadSources_GetLeadSource
      parameters:
      - description: GUID used to get the lead source.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: LeadSourceModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSourceModel'
          description: lead source.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get lead source by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: LeadSources_PatchLeadSource
      parameters:
      - description: ID of the lead source.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: LeadSourceModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of LeadSourceModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LeadSourceModel'
                type: array
          description: List of updated lead sources.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) an lead source or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/localization/countries:
    get:
      operationId: Countries_GetCountries
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CountryModel'
                type: array
          description: All the Countries.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the Countries.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/localization/countries/{code2}:
    get:
      operationId: Countries_GetCountryByCode2
      parameters:
      - description: "Optional: ISO Alpha-2 code used to get a country."
        explode: false
        in: path
        name: code2
        required: true
        schema:
          maxLength: 2
          minLength: 2
          type: string
        style: simple
        x-position: 1
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CountryModel'
                type: array
          description: Country
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get a country by ISO Alpha-2 code
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/localization/countries/{code3}:
    get:
      operationId: Countries_GetCountryByCode3
      parameters:
      - description: "Optional: ISO Alpha-3 code used to get a country."
        explode: false
        in: path
        name: code3
        required: true
        schema:
          maxLength: 3
          minLength: 3
          type: string
        style: simple
        x-position: 1
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CountryModel'
                type: array
          description: Country
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get a country by ISO Alpha-3 code
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/localization/countries/{countryGuid}/countryregions:
    get:
      operationId: Countries_GetCountryRegions
      parameters:
      - description: GUID of the country.
        explode: false
        in: path
        name: countryGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CountryModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CountryRegionModel'
                type: array
          description: All the CountryRegions of the country.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the Country regions for a country.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/localization/countries/{countryName}:
    get:
      operationId: Countries_GetCountryByName
      parameters:
      - description: "Optional: English country name."
        explode: false
        in: path
        name: countryName
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CountryModel'
                type: array
          description: Country
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get a country by name
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/localization/countries/{guid}:
    get:
      operationId: Countries_GetCountry
      parameters:
      - description: GUID used to get the country.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CountryModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryModel'
          description: Country.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get country by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/localization/countryregions/{guid}:
    get:
      operationId: Countries_GetCountryRegion
      parameters:
      - description: GUID used to get the country region.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CountryRegionModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryRegionModel'
          description: CountryRegion.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get country region by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/localization/formattingcultures:
    get:
      operationId: FormattingCultures_GetFormattings
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FormattingCultureModel'
                type: array
          description: All the Formatting Cultures
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the Formatting Cultures
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/localization/formattingcultures/{guid}:
    get:
      operationId: FormattingCultures_GetFormattingCulture
      parameters:
      - description: GUID used to get the formatting culture.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: FormattingCultureModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormattingCultureModel'
          description: Formatting culture.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get formatting culture by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/localization/languages:
    get:
      operationId: Languages_GetLanguages
      parameters:
      - description: "Optional: which languages to fetch. only invoice languages or\
          \ non invoice languages?, default all."
        explode: true
        in: query
        name: isInvoiceLanguage
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LanguageModel'
                type: array
          description: All the Languages
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the languages
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/localization/languages/{guid}:
    get:
      operationId: Languages_GetLanguage
      parameters:
      - description: GUID used to get the language.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: LanguageModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageModel'
          description: Language
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get language by ID
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/localization/timezones:
    get:
      operationId: Timezones_GetTimezones
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TimezoneModel'
                type: array
          description: All the Timezones.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the timezones.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/localization/timezones/{guid}:
    get:
      operationId: Timezones_GetTimezone
      parameters:
      - description: GUID used to get the timezone.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TimezoneModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimezoneModel'
          description: Timezone.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get timezone by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/login/oauth/access_token:
    post:
      operationId: PublicBearerAuthentication_GetAccessTokenJson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessTokenCredentials'
        description: AccessTokenCredentials model
        x-name: credentials
        x-position: 1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicAuthenticationOutputModel'
          description: PublicAuthenticationOutputModel
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2: []
      summary: Get oAuth2 access token.
      tags:
      - NoScope
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/login/oauth/authorize:
    get:
      operationId: PublicBearerAuthentication_GetAuthorizationCode
      parameters:
      - description: code
        explode: true
        in: query
        name: response_type
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: Unguessable random string.
        explode: true
        in: query
        name: state
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: Client id.
        explode: true
        in: query
        name: client_id
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: Url where to redirect after code has been retrieved.
        explode: true
        in: query
        name: redirect_uri
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Scopes that client requests. If scopes that are not allowed\
          \ for the client are requested, returns unauthorized."
        explode: true
        in: query
        name: scope
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 5
      responses:
        "302":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2: []
      summary: Get the oAuth2 authorization code flow code.
      tags:
      - NoScope
      x-accepts:
      - application/json
  /v1/marketsegments:
    get:
      operationId: MarketSegments_GetMarketSegments
      parameters:
      - description: "If not given, return all Market Segments, if given as true return\
          \ only active Market Segments, if given as false returns only inactive Market\
          \ Segments."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from market segment name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: Include also child market segments. If false returns\
          \ only parent segments. Default true."
        explode: true
        in: query
        name: includeChildSegments
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MarketSegmentModel'
                type: array
          description: List of Market Segments.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get the Market Segments.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: MarketSegments_PostMarketSegment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketSegmentModel'
        description: MarketSegmentModel.
        x-name: marketSegment
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketSegmentModel'
          description: Created market segment.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a market segment.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/marketsegments/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if market\
        \ segment can't be found."
      operationId: MarketSegments_DeleteMarketSegment
      parameters:
      - description: ID for the market segment to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: MarketSegmentModel
      - description: "Optional: ID of the lead source to which to move usages of this\
          \ market segment. Default null."
        explode: true
        in: query
        name: moveUsagesToGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
        x-relation-guid: MarketSegmentModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete a market segment.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: MarketSegments_GetMarketSegment
      parameters:
      - description: GUID used to get the Market Segment.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: MarketSegmentModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketSegmentModel'
          description: Market Segment.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get Market Segment by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: MarketSegments_PatchMarketSegment
      parameters:
      - description: ID of the Market Segment.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: MarketSegmentModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of MarketSegmentModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MarketSegmentModel'
                type: array
          description: List of updated Market Segments.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) an Market Segment or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/organizationdetails:
    get:
      operationId: OrganizationDetails_GetOrganizationDetails
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetailsOutputModel'
          description: Organization
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - organization:read
      summary: Get the details of organization.
      tags:
      - OrganizationRead
      x-accepts:
      - application/json
    patch:
      operationId: OrganizationDetails_PatchOrganizationDetails
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        x-name: patchDocument
        x-position: 1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetailsOutputModel'
          description: organization details
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - organization:write
      summary: Update (Patch) a organization details or a part of it
      tags:
      - OrganizationWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/organizationsettings:
    get:
      operationId: OrganizationSettings_GetOrganizationSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSettingsModel'
          description: Organization.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - organization:read
      summary: Get the settings of organization.
      tags:
      - OrganizationRead
      x-accepts:
      - application/json
  /v1/overtimeprices/{guid}:
    get:
      operationId: OvertimePrices_GetOvertimePrice
      parameters:
      - description: Id used to get the overtime price.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: OvertimePriceModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OvertimePriceModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get overtime price by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/overtimes:
    get:
      operationId: Overtimes_GetOvertimes
      parameters:
      - description: "If not given, return all overtime definitions, if given as true\
          \ return only active overtime definitions, if given as false returns only\
          \ inactive overtime definitions."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default all."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from overtime name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=name&sortings[0].value=Asc\"\
          \"."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OvertimeModel'
                type: array
          description: Overtime definitions.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get overtime definitions.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: Overtimes_PostOvertime
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OvertimeModel'
        description: OvertimeModel.
        x-name: overtime
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OvertimeModel'
          description: Created overtime.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert an overtime.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/overtimes/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if overtime\
        \ can't be found."
      operationId: Overtimes_DeleteOvertime
      parameters:
      - description: ID for the overtime to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: OvertimeModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete an overtime.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: Overtimes_GetOvertime
      parameters:
      - description: Id used to get the overtime definition.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: OvertimeModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OvertimeModel'
          description: OvertimeModel.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get overtime definition by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: Overtimes_PatchOvertime
      parameters:
      - description: ID of the overtime.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: OvertimeModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of OvertimeModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OvertimeModel'
                type: array
          description: list of overtimes.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) an overtime or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/permissionprofiles:
    get:
      operationId: PermissionProfiles_GetPermissionProfiles
      parameters:
      - description: "If not given, return all Permission Profiles, if given as true\
          \ return only active Permission Profiles, if given as false returns only\
          \ inactive Permission Profiles."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from permission profile name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=name&sortings[0].value=Asc&sortings[1].key=isActive&sortings[1].value=Asc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PermissionProfileModel'
                type: array
          description: List of Permission Profiles.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get the Permission Profiles.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/permissionprofiles/{guid}:
    get:
      operationId: PermissionProfiles_GetPermissionProfile
      parameters:
      - description: GUID used to get the Permission Profile.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: PermissionProfileModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionProfileModel'
          description: PermissionProfileModel.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get Permission Profile by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/phasemembers:
    get:
      description: Use root phase to get project members.
      operationId: PhaseMembers_GetAllPhaseMembers
      parameters:
      - description: "Optional: Get phase members that have been added or changed\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: Page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Is the user active. Default nothing = all."
        explode: true
        in: query
        name: isUserActive
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PhaseMemberOutputModel'
                type: array
          description: All the phase members
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get all active phase members
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
    post:
      description: User is always added as a root phase (project) member also.
      operationId: PhaseMembers_PostPhaseMember
      parameters:
      - description: "Optional: Add member to all sub phases. Default true."
        explode: true
        in: query
        name: addToAllSubPhases
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-position: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhaseMemberModel'
        description: PhaseMemberModel.
        x-name: memberModel
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhaseMemberModel'
          description: Added member.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Adds a phase member.
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/phasemembers/{userGuid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Only one of transferToRoleGuid\
        \ and transferToUserGuid can be provided. Use root phase to delete a project\
        \ member."
      operationId: PhaseMembers_DeletePhaseMember
      parameters:
      - description: GUID of the phase member to remove
        explode: false
        in: path
        name: userGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 2
        x-relation-guid: UserOutputModel
      - description: "Optional: The action to be applied to the user's resource allocations"
        explode: true
        in: query
        name: resourceAllocationAction
        required: false
        schema:
          $ref: '#/components/schemas/ResourceAllocationAction'
        style: form
        x-position: 3
      - description: "Optional: GUID of the user to whom the resource allocations\
          \ are transferred."
        explode: true
        in: query
        name: transferToUserGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 4
        x-relation-guid: UserOutputModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhaseMemberModel'
        x-name: memberModel
        x-position: 1
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:delete
      summary: Deletes a phase member
      tags:
      - ProjectsDelete
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/phasemembersfrombusinessunitusers:
    post:
      description: Users are always added as a root phase (project) member also.
      operationId: PhaseMembers_PostPhaseMembersFromBusinessUnitUsers
      parameters:
      - description: "Optional: Add member to all sub phases. Default true."
        explode: true
        in: query
        name: addToAllSubPhases
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-position: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhaseMembersFromBusinessUnitUsersModel'
        description: PhaseMemberModel.
        x-name: memberModel
        x-position: 1
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PhaseMemberModel'
                type: array
          description: List of added members.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Adds business unit users to phase members.
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/phases:
    get:
      operationId: Phases_GetPhases
      parameters:
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Get phases that have been added or changed after this\
          \ date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Optional: Code of the phase."
        explode: true
        in: query
        name: code
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: List of project ids."
        explode: true
        in: query
        name: projectGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 5
        x-relation-guid: ProjectOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PhaseOutputModel'
                type: array
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get the phases.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
    post:
      operationId: Phases_PostPhase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhaseInputModel'
        description: PhaseOutputModel
        x-name: phase
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhaseOutputModel'
          description: Created phase
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Insert a phase
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/phases/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: Phases_DeletePhase
      parameters:
      - description: GUID used to delete the phase.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: PhaseOutputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:delete
      summary: Deletes a phase
      tags:
      - ProjectsDelete
      x-accepts:
      - application/json
    get:
      operationId: Phases_GetPhase
      parameters:
      - description: Id used to get the phase.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: PhaseOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhaseOutputModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get phase by ID
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
    patch:
      operationId: Phases_PatchPhase
      parameters:
      - description: ID of the phase
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: PhaseOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of PhaseInputModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PhaseOutputModel'
                type: array
          description: Updated phase
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Update (Patch) a phase or a part of it
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/phases/{phaseGuid}/phasemembers:
    get:
      description: Use root phase to get project members.
      operationId: PhaseMembers_GetPhaseMembers
      parameters:
      - description: GUID of the phase.
        explode: false
        in: path
        name: phaseGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: PhaseOutputModel
      - description: "Optional: Page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Is the member active on the phase. Filters only root\
          \ phase members. Default nothing = all."
        explode: true
        in: query
        name: isActive
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 4
      - description: "Optional: Is the user active. Default nothing = all."
        explode: true
        in: query
        name: isUserActive
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PhaseMemberOutputModel'
                type: array
          description: All the phase members
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get phase members
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/phases/{phaseGuid}/resourceallocations/allocations:
    get:
      operationId: ResourceAllocations_GetResourceAllocationsByPhaseGuid
      parameters:
      - explode: false
        in: path
        name: phaseGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: PhaseOutputModel
      - description: Get resource allocations with startDate. Using startDate and
          endDate or changedSince parameters are required to fetch a maximum of 30
          days
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: Get resource allocations with endDate. Using startDate and endDate
          or changedSince parameters are required to fetch a maximum of 30 days
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Optional: Get resource allocations that have been added or changed\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 4
      - explode: true
        in: query
        name: userLicenseTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/LicenseUserType'
          nullable: true
          type: array
        style: form
        x-position: 5
      - explode: true
        in: query
        name: projectGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 6
        x-relation-guid: ProjectOutputModel
      - explode: true
        in: query
        name: userGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 7
        x-relation-guid: UserOutputModel
      - explode: true
        in: query
        name: projectBusinessUnitGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 8
        x-relation-guid: BusinessUnitModel
      - explode: true
        in: query
        name: userBusinessUnitGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 9
        x-relation-guid: BusinessUnitModel
      - explode: true
        in: query
        name: projectManagerUserGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 10
        x-relation-guid: UserOutputModel
      - explode: true
        in: query
        name: userTagGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 11
        x-relation-guid: UserKeywordModel
      - explode: true
        in: query
        name: useSalesProbability
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-position: 12
      - explode: true
        in: query
        name: projectStatusTypeGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 13
        x-relation-guid: ProjectStatusTypeModel
      - explode: true
        in: query
        name: projectTagGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 14
        x-relation-guid: ProjectKeywordModel
      - explode: true
        in: query
        name: superiorUserGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 15
        x-relation-guid: UserOutputModel
      - explode: true
        in: query
        name: salesStatusTypeGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 16
        x-relation-guid: SalesStatusTypeOutputModel
      - explode: true
        in: query
        name: resourceAllocationGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 17
        x-relation-guid: ResourceAllocationOutputModel
      - explode: true
        in: query
        name: salesProgress
        required: false
        schema:
          $ref: '#/components/schemas/SalesProgress'
        style: form
        x-position: 18
      - description: "Optional: Number of rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 19
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 20
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAllocationOutputModel'
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - resourceallocations:read
      summary: "Get resource allocations for a phase with required filters (startDate\
        \ and endDate or changedSince, max 30 days to be fetched at once)"
      tags:
      - ResourceallocationsRead
      x-accepts:
      - application/json
  /v1/phases/{phaseGuid}/worktypes:
    get:
      description: "Only the active work types are included in the list, whether they\
        \ come from organization settings or project specific work types."
      operationId: WorkTypes_GetPhaseWorkTypes
      parameters:
      - description: Id of the phase.
        explode: false
        in: path
        name: phaseGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: PhaseOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: number of rows to fetch"
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: Id of the user for whom the work types are retrieved. Default
          is current user.
        explode: true
        in: query
        name: userGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 4
        x-relation-guid: UserOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkTypeOutputModel'
                type: array
          description: All the work types matching search criteria
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get all work types that are available for a phase (for work hour entry)
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/phasestatustypes:
    get:
      operationId: PhaseStatusTypes_GetPhaseStatusTypes
      parameters:
      - description: "If not given, return all phase status types, if given as true\
          \ return only active phase status types, if given as false returns only\
          \ inactive phase status types"
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default all."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      - explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PhaseStatusTypeModel'
                type: array
          description: All the phase status types
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get phase status types
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: PhaseStatusTypes_PostPhaseStatusType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhaseStatusTypeModel'
        description: PhaseStatusTypeModel
        x-name: phaseStatusType
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhaseStatusTypeModel'
          description: Created phase status type
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a phase status type
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/phasestatustypes/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if phase\
        \ status type can't be found."
      operationId: PhaseStatusTypes_DeletePhaseStatusType
      parameters:
      - description: ID for the phase status type to delete
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: PhaseStatusTypeModel
      - description: "Optional: ID of the phase status type to which to move usages\
          \ of this phase status type. Default null. If phase status type is in use\
          \ and usages aren't moved the deletion might fail."
        explode: true
        in: query
        name: moveUsagesToGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
        x-relation-guid: PhaseStatusTypeModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete a phase status type
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: PhaseStatusTypes_GetPhaseStatusType
      parameters:
      - description: Id used to get the phase status type.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: PhaseStatusTypeModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhaseStatusTypeModel'
          description: PhaseStatusTypeModel
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get phase status type by GUID
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: PhaseStatusTypes_PatchPhaseStatusType
      parameters:
      - description: ID of the phase status type
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: PhaseStatusTypeModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of TaskStatusTypeModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PhaseStatusTypeModel'
                type: array
          description: list of updated phase status type
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a phase status type or a part of it
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/pricelists:
    get:
      operationId: PriceLists_GetPricelists
      parameters:
      - description: "If not given, return all price lists, if given as true return\
          \ only active price lists, if given as false returns only inactive price\
          \ lists."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from price list name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: ID of the price list currency."
        explode: true
        in: query
        name: currencyGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 5
        x-relation-guid: CurrencyOutputModel
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 6
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\"."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 7
      - description: "Optional: Name of the price list."
        explode: true
        in: query
        name: name
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 8
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PriceListOutputModel'
                type: array
          description: All the price lists.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all price lists.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/pricelists/{guid}:
    get:
      operationId: PriceLists_GetPriceList
      parameters:
      - description: ID used to get the price list.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: PriceListModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceListModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get price list by GUID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/pricelists/{pricelistGuid}/pricelistversions:
    get:
      operationId: PriceListVersions_GetPricelistVersionsByPricelist
      parameters:
      - explode: false
        in: path
        name: pricelistGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: PriceListOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PricelistVersionOutputModel'
                type: array
          description: Price list versions.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all price list versions of a price list.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/pricelistversions/{guid}:
    get:
      operationId: PriceListVersions_GetPricelistVersion
      parameters:
      - explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: PricelistVersionOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricelistVersionOutputModel'
          description: Price list version.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get a price list version by guid.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/pricelistversions/{pricelistVersionGuid}/overtimeprices:
    get:
      operationId: OvertimePrices_GetOvertimePrices
      parameters:
      - explode: false
        in: path
        name: pricelistVersionGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: PricelistVersionOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OvertimePriceModel'
                type: array
          description: Projects.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the overtime prices for a price list version.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/pricelistversions/{pricelistVersionGuid}/productprices:
    get:
      operationId: ProductPrices_GetProductPrices
      parameters:
      - description: ID of the price list version.
        explode: false
        in: path
        name: pricelistVersionGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: PricelistVersionOutputModel
      - description: "If true return only prices from the price list, if false also\
          \ returns prices from the products. Default is false."
        explode: true
        in: query
        name: fromPricelistOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      - description: "Optional: Text to search from Product name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 5
      - description: "Optional: Calculate the number of total rows. Default false\
          \ = total row count is returned as zero."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 6
      - description: "Optional: Absolute search for products with specified product\
          \ code."
        explode: true
        in: query
        name: productCode
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 7
      - description: "Optional: Search all product price(s) by products guid(s)."
        explode: true
        in: query
        name: productGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 8
        x-relation-guid: ProductOutputModel
      - description: "Optional: If true, return only volume priced products. If false,\
          \ return all non volume priced products. Default is null, which means return\
          \ all products."
        explode: true
        in: query
        name: isVolumePriced
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 9
      - description: "Optional: Search product prices according to product category\
          \ / categories by product category guid(s)."
        explode: true
        in: query
        name: productCategoryGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 10
        x-relation-guid: ProductCategoryModel
      - description: "Optional: Search product prices according to product type /\
          \ types."
        explode: true
        in: query
        name: productTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ProductType'
          nullable: true
          type: array
        style: form
        x-position: 11
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProductPriceOutputModel'
                type: array
          description: Projects.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the product prices for a price list version.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/pricelistversions/{pricelistVersionGuid}/travelprices:
    get:
      operationId: TravelPrices_GetTravelPrices
      parameters:
      - description: ID of the price list version.
        explode: false
        in: path
        name: pricelistVersionGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: PricelistVersionOutputModel
      - description: "If true return only prices from the price list, if false also\
          \ returns prices from the products. Default is false."
        explode: true
        in: query
        name: fromPricelistOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: List of expense classes to search by, defaults to\
          \ all travel categories."
        explode: true
        in: query
        name: expenseClasses
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ExpensesClass'
          nullable: true
          type: array
        style: form
        x-position: 3
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 5
      - description: "Optional: Text to search from Product name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 6
      - description: "Optional: Calculate the number of total rows. Default false\
          \ = total row count is returned as zero."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 7
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TravelPriceOutputModel'
                type: array
          description: TravelPriceModel.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the travel prices for a price list version.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/pricelistversions/{pricelistVersionGuid}/workhourprices:
    get:
      operationId: WorkHourPrices_GetWorkHourPrices
      parameters:
      - description: Price list version identifier.
        explode: false
        in: path
        name: pricelistVersionGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: PricelistVersionOutputModel
      - description: "Optional: page token to fetch the next page.."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Get prices that have been added or changed after this\
          \ date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkHourPriceOutputModel'
          description: workHourPrices.
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the workHourPrices for a price list version.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/productcategories:
    get:
      operationId: ProductCategories_GetProductCategories
      parameters:
      - description: "If not given, return all Product categories, if given as true\
          \ return only active Product categories, if given as false returns only\
          \ inactive Product categories."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default all."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from product category name or code."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Get product categories that have been added or changed\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 5
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 6
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: ?sortings[0].key=Name&sortings[0].value=Desc\
          \ &sortings[1].key=Code&sortings[1].value=Asc."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 7
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProductCategoryModel'
                type: array
          description: Product categories.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get product categories.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: ProductCategories_PostProductCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryModel'
        description: ProductCategoryModel.
        x-name: productCategory
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryModel'
          description: Created product category.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a product category.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/productcategories/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if product\
        \ category can't be found."
      operationId: ProductCategories_DeleteProductCategory
      parameters:
      - description: ID for the product category to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProductCategoryModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete a product category.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: ProductCategories_GetProductCategory
      parameters:
      - description: Id used to get the product category.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProductCategoryModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryModel'
          description: ProductCategoryModel.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get product category by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: ProductCategories_PatchProductCategory
      parameters:
      - description: ID of the product category.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProductCategoryModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ProductCategoryModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProductCategoryModel'
                type: array
          description: list of updated product category.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a product category or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/productcountrysettings:
    post:
      operationId: ProductCountrySettings_PostProductCountrySettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCountrySettingsModel'
        description: ProductCountrySettingsModel
        x-name: model
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCountrySettingsModel'
          description: Inserted product country setting
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a product country setting
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/productcountrysettings/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if product\
        \ country setting can't be found."
      operationId: ProductCountrySettings_DeleteProductCountrySetting
      parameters:
      - description: GUID used to delete the product country setting.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProductCountrySettingsModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Deletes a product country setting
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    patch:
      operationId: ProductCountrySettings_PatchProductCountrySettings
      parameters:
      - description: ID of the product country setting
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProductCountrySettingsModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ProductCountrySettingsModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProductCountrySettingsModel'
                type: array
          description: List of updated product country settings
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a product country setting
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/productprices/{guid}:
    get:
      operationId: ProductPrices_GetProductPrice
      parameters:
      - description: Id used to get the product price.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProductPriceOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPriceOutputModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get product price by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/products:
    get:
      operationId: Products_GetProducts
      parameters:
      - description: "Optional: Number of rows to fetch"
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 1
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Product type. if given, it filters the products by the given\
          \ type."
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/ProductType'
        style: form
        x-position: 3
      - description: "If not given, return all Products, if given as true return only\
          \ isActive Products, if given as false returns only inactive Products"
        explode: true
        in: query
        name: isActive
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 4
      - description: "Optional: Code of the product."
        explode: true
        in: query
        name: code
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 5
      - description: "Optional: Get products that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProductOutputModel'
                type: array
          description: All the Products
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the Products
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: Products_PostProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInputModel'
        description: ProductModel.
        x-name: product
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductOutputModel'
          description: Created product.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a product.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/products/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if product\
        \ can't be found."
      operationId: Products_DeleteProduct
      parameters:
      - description: ID for the product to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProductOutputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete a product.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: Products_GetProduct
      parameters:
      - description: GUID used to get the product.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProductOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductOutputModel'
          description: Product.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get product by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: Products_PatchProduct
      parameters:
      - description: ID of the product.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProductOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ProductModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProductOutputModel'
                type: array
          description: List of updated products.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) an product or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/products/{productGuid}/productcountrysettings:
    get:
      operationId: ProductCountrySettings_GetProductCountrySettings
      parameters:
      - description: GUID of the product.
        explode: false
        in: path
        name: productGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProductOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProductCountrySettingsModel'
                type: array
          description: All the ProductCountrySettings (tax related information)
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the country settings for a product
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/projectbillingcustomers:
    post:
      operationId: ProjectBillingCustomers_PostProjectBillingCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectBillingCustomerModel2'
        description: ProjectBillingCustomerModel.
        x-name: projectBillingCustomer
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectBillingCustomerModel2'
          description: Created billing customer.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a billing customer for a project.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectbillingcustomers/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: ProjectBillingCustomers_DeleteProjectBillingCustomer
      parameters:
      - description: GUID of the project billing customer to remove.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectBillingCustomerModel2
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Deletes a project billing customer.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: ProjectBillingCustomers_GetProjectBillingCustomer
      parameters:
      - description: ID of the project billing customer.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectBillingCustomerModel2
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectBillingCustomerModel2'
          description: Project billing customer.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get a project billing customer.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: ProjectBillingCustomers_PatchProjectBillingCustomer
      parameters:
      - description: ID of the project billing customer.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectBillingCustomerModel2
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ProjectBillingCustomerModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectBillingCustomerModel2'
                type: array
          description: list of updated project billing customer.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a project billing customer.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectfees:
    get:
      operationId: ProjectFees_GetProjectFeesByToken
      parameters:
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: Number of rows to fetch"
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Get project fees that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectFeeOutputModel'
                type: array
          description: ProjectFee
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:read
      summary: Get the project fees.
      tags:
      - FeesRead
      x-accepts:
      - application/json
    post:
      operationId: ProjectFees_PostProjectFee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFeeInputModel'
        description: ProjectFeeInputModel.
        x-name: projectFee
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectFeeOutputModel'
                type: array
          description: Created project fees.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:write
      summary: Insert a project fee.
      tags:
      - FeesWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectfees/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: ProjectFees_DeleteProjectFree
      parameters:
      - description: GUID used to delete the project fee.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectFeeInputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:delete
      summary: Deletes a project fee.
      tags:
      - FeesDelete
      x-accepts:
      - application/json
    get:
      operationId: ProjectFees_GetProjectFee
      parameters:
      - description: Id used to get the projectFee.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectFeeOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFeeOutputModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:read
      summary: Get projectFee by ID.
      tags:
      - FeesRead
      x-accepts:
      - application/json
    patch:
      operationId: ProjectFees_PatchProjectFee
      parameters:
      - description: "ID of the project fee Can also be comma separate list of IDs\
          \ to patch multiple project fees with one call. When multiple IDs are given,\
          \ returns model which has list of succeeded project fees and list of errors."
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectFeeInputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of ProjectFeeInputModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectFeeOutputModel'
                type: array
          description: List of updated project fees.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:write
      summary: Update (Patch) a projectFee or a part of it.
      tags:
      - FeesWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectfiles/{guid}:
    get:
      operationId: Files_GetProjectFile
      parameters:
      - description: GUID used to get the project file.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectFileModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFileModel'
          description: ProposalFile.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - files:read
      summary: Get project file by ID.
      tags:
      - FilesRead
      x-accepts:
      - application/json
  /v1/projectforecasts:
    post:
      operationId: ProjectForecasts_PostForecast
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectForecastInputModel'
        description: ProjectForecastOutputInputModel
        x-name: projectForecast
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectForecastOutputModel'
          description: Project forecast
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Insert a project forecast
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectforecasts/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if product\
        \ can't be found."
      operationId: ProjectForecasts_DeleteForecast
      parameters:
      - description: ID for the project forecast to delete
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectForecastInputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:delete
      summary: Delete a project forecast
      tags:
      - ProjectsDelete
      x-accepts:
      - application/json
    get:
      operationId: ProjectForecasts_GetForecast
      parameters:
      - description: GUID used to get the project forecast.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectForecastOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectForecastOutputModel'
          description: Project forecast
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get project forecast by ID
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
    patch:
      operationId: ProjectForecasts_PatchForecast
      parameters:
      - description: ID of the project forecast
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectForecastInputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ProjectForecastInputModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectForecastOutputModel'
                type: array
          description: List of updated Project forecast
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Update (Patch) an project forecast or a part of it
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectinvoicesettings:
    post:
      operationId: ProjectInvoiceSettings_PostProjectInvoiceSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectInvoiceSettingsInputModel'
        description: Project invoice settings.
        x-name: projectInvoiceSettings
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectInvoiceSettingsOutputModel'
          description: Created project invoice settings.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:write
        - projects:write
      summary: Create a new project invoice settings.
      tags:
      - InvoicesWrite
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectinvoicesettings/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if project\
        \ invoice settings can't be found."
      operationId: ProjectInvoiceSettings_DeleteProjectInvoiceSettings
      parameters:
      - description: ID for the project invoice settings to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectInvoiceSettingsOutputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:delete
        - projects:delete
      summary: Delete an project invoice settings.
      tags:
      - InvoicesDelete
      - ProjectsDelete
      x-accepts:
      - application/json
    get:
      operationId: ProjectInvoiceSettings_GetProjectInvoiceSetting
      parameters:
      - description: ID of the project invoice settings.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectInvoiceSettingsOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectInvoiceSettingsOutputModel'
          description: The project invoice settings.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
        - projects:read
      summary: Get project invoice settings by ID.
      tags:
      - InvoicesRead
      - ProjectsRead
      x-accepts:
      - application/json
    patch:
      operationId: ProjectInvoiceSettings_PatchProjectInvoiceSettings
      parameters:
      - description: ID of the project invoice settings.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectInvoiceSettingsOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ProjectInvoiceSettingsInputModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectInvoiceSettingsOutputModel'
                type: array
          description: The project invoice settings.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:write
        - projects:write
      summary: Update (Patch) project invoice settings.
      tags:
      - InvoicesWrite
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectlinks:
    post:
      operationId: Files_PostProjectLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFileModel'
        description: ProjectFileModel.
        x-name: model
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFileModel'
          description: Created project file.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Add a link to a project.
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectmembercostexceptions:
    post:
      operationId: ProjectMemberCostExceptions_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectMemberCostExceptionInputModel'
        description: ProjectMemberCostExceptionModel.
        x-name: model
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMemberCostExceptionOutputModel'
          description: Inserted link.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Add a cost exception to a project member.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectmembercostexceptions/{guid}:
    delete:
      description: "Deletes project member cost exception. Returns: No Content (204)\
        \ if succeeded."
      operationId: ProjectMemberCostExceptions_Delete
      parameters:
      - description: GUID used to delete the project member cost exception.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectMemberCostExceptionInputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Deletes a project member cost exception.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: ProjectMemberCostExceptions_GetProjectMemberCostException
      parameters:
      - description: GUID used to get the cost exception.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectMemberCostExceptionInputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMemberCostExceptionOutputModel'
          description: Link.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get project member cost exception by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: ProjectMemberCostExceptions_Patch
      parameters:
      - description: ID of the project member cost exception.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectMemberCostExceptionInputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of ProjectMemberCostExceptionModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectMemberCostExceptionOutputModel'
                type: array
          description: list of updated links.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) project member cost exception.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectproducts:
    post:
      operationId: ProjectProducts_PostProjectProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectProductInputModel'
        description: projectProductModel
        x-name: projectProductModel
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectProductOutputModel'
          description: Added project product
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Adds a product to a project.
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectproducts/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: ProjectProducts_DeleteProjectProduct
      parameters:
      - description: GUID of the project product to remove.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectProductInputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:delete
      summary: Deletes a project product.
      tags:
      - ProjectsDelete
      x-accepts:
      - application/json
  /v1/projectrecurringfeerules:
    get:
      operationId: ProjectRecurringFeeRules_GetProjectRecurringFeeRules
      parameters:
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "projectRecurringFeeRule's product type. if given, it filters\
          \ the projectRecurringFeeRules by the given type."
        explode: true
        in: query
        name: productType
        required: false
        schema:
          $ref: '#/components/schemas/ProductType'
        style: form
        x-position: 3
      - description: "Optional: Get recurring fee rules that have been added or changed\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectRecurringFeeRuleOutputModel'
                type: array
          description: List of updated project recurring fee rules
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:read
      summary: Get the recurring fee rules.
      tags:
      - FeesRead
      x-accepts:
      - application/json
    post:
      operationId: ProjectRecurringFeeRules_PostProjectRecurringFeeRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRecurringFeeRuleInputModel'
        description: ProjectRecurringFeeRuleModel.
        x-name: projectRecurringFeeRule
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectRecurringFeeRuleOutputModel'
                type: array
          description: Created ProjectRecurringFeeRules.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:write
      summary: Insert a projectRecurringFeeRule.
      tags:
      - FeesWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectrecurringfeerules/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: ProjectRecurringFeeRules_DeleteProjectRecurringFeeRule
      parameters:
      - description: GUID used to delete the project recurring fee rule.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectRecurringFeeRuleInputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:delete
      summary: Deletes a projectRecurringFeeRule.
      tags:
      - FeesDelete
      x-accepts:
      - application/json
    get:
      operationId: ProjectRecurringFeeRules_GetProjectRecurringFeeRule
      parameters:
      - description: Id used to get the ProjectRecurringFeeRule.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectRecurringFeeRuleOutputModel
      - description: Indicates the rule should be returned even if it is not active.
          Default is false.
        explode: true
        in: query
        name: includeInactive
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRecurringFeeRuleOutputModel'
          description: List of updated project recurring fee rules.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:read
      summary: Get project's RecurringFeeRule by ID.
      tags:
      - FeesRead
      x-accepts:
      - application/json
    patch:
      operationId: ProjectRecurringFeeRules_PatchProjectRecurringFeeRule
      parameters:
      - description: ID of the projectRecurringFeeRule.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectRecurringFeeRuleInputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of ProjectRecurringFeeRuleModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectRecurringFeeRuleOutputModel'
                type: array
          description: List of updated projectRecurringFeeRules.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:write
      summary: Update (Patch) a projectRecurringFeeRule or a part of it.
      tags:
      - FeesWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projects:
    get:
      operationId: Projects_GetProjects
      parameters:
      - explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: ID of project currency."
        explode: true
        in: query
        name: currencyGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 3
        x-relation-guid: CurrencyOutputModel
      - description: "Optional: Get projects that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: When true fetch projects that have something to bill,\
          \ when false nothing to bill. Default nothing = all."
        explode: true
        in: query
        name: isBillable
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 5
      - explode: true
        in: query
        name: customerGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 6
      - explode: true
        in: query
        name: projectGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 7
      - explode: true
        in: query
        name: projectKeywordGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 8
      - explode: true
        in: query
        name: projectStatusTypeGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 9
      - explode: true
        in: query
        name: salesPersonGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 10
      - explode: true
        in: query
        name: projectOwnerGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 11
      - explode: true
        in: query
        name: businessUnitGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 12
      - explode: true
        in: query
        name: minimumBillableAmount
        required: false
        schema:
          format: double
          nullable: true
          type: number
        style: form
        x-position: 13
      - explode: true
        in: query
        name: customerOwnerGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 14
      - explode: true
        in: query
        name: invoiceableDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 15
      - explode: true
        in: query
        name: marketSegmentationGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 16
      - explode: true
        in: query
        name: salesStatusTypeGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 17
      - explode: true
        in: query
        name: isClosed
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 18
      - explode: true
        in: query
        name: hasRecurringFees
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 19
      - explode: true
        in: query
        name: companyCurrencyGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 20
      - explode: true
        in: query
        name: projectMemberUserGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 21
      - explode: true
        in: query
        name: numbers
        required: false
        schema:
          items:
            format: int64
            type: integer
          nullable: true
          type: array
        style: form
        x-position: 22
      - description: "Optional: Get internal / non-internal projects."
        explode: true
        in: query
        name: internal
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 23
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectOutputModel'
                type: array
          description: Projects
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get all the projects
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
    post:
      description: "When creating a new project, the price list property will be ignored,\
        \ as it is chosen by default."
      operationId: Projects_PostProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectInputModelBase'
        description: ProjectInputModelBase
        x-name: project
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectOutputModel'
          description: Created project
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Insert a project
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projects/customproperties:
    get:
      operationId: ProjectCustomProperties_GetProjectCustomProperties
      parameters:
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Get only active or inactive project properties."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 3
      - description: "Optional: Text to search from custom property name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Is the customer property used in any custom property\
          \ usage."
        explode: true
        in: query
        name: isInUse
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 6
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (sub-model fields not supported) in the model can be used, while\
          \ value can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=Name&sortings[0].value=Desc&sortings[1].key=Number&sortings[1].value=Asc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 7
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomPropertyModel'
                type: array
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get the project custom properties.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: ProjectCustomProperties_PostProjectCustomProperty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomPropertyModel'
        description: ProjectCustomPropertyModel.
        x-name: customProperty
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomPropertyModel'
                type: array
          description: Created project custom property.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a project custom property.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projects/customproperties/projectcustompropertyselectionitems:
    post:
      operationId: ProjectCustomPropertySelectionItems_PostProjectCustomPropertySelectionItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCustomPropertySelectionItemInputModel'
        description: CustomPropertySelectionItemInputModel.
        x-name: projectCustomPropertySelectionItem
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCustomPropertySelectionItemOutputModel'
          description: Created project custom property.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a project custom property selection item.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projects/customproperties/projectcustompropertyselectionitems/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: ProjectCustomPropertySelectionItems_DeleteProjectCustomPropertySelectionItem
      parameters:
      - description: GUID used to delete the project custom property selection item.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectCustomPropertySelectionItemInputModel
      responses:
        "204":
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Deletes a project custom property selection item.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: ProjectCustomPropertySelectionItems_GetProjectCustomPropertySelectionItem
      parameters:
      - description: Id used to get the project custom property selection item.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectCustomPropertySelectionItemOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCustomPropertySelectionItemOutputModel'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get project custom property selection item by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: ProjectCustomPropertySelectionItems_PatchProjectCustomPropertySelectionItem
      parameters:
      - description: ID of the project custom property selection item.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectCustomPropertySelectionItemInputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of ProjectCustomPropertySelectionItemInputModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectCustomPropertySelectionItemOutputModel'
                type: array
          description: List of updated project custom properties.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a project custom property selection item or a part of
        it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projects/customproperties/{customPropertyGuid}/projectcustompropertyselectionitems:
    get:
      operationId: ProjectCustomPropertySelectionItems_GetProjectCustomPropertySelectionItems
      parameters:
      - description: Custom property id used to get the project custom property selection
          items.
        explode: false
        in: path
        name: customPropertyGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomPropertyModel
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Get only active or inactive selection items."
        explode: true
        in: query
        name: isActive
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 3
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Get custom property selection items that have been\
          \ added or changed after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectCustomPropertySelectionItemOutputModel'
                type: array
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get the project custom properties.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/projects/customproperties/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: ProjectCustomProperties_DeleteProjectCustomProperty
      parameters:
      - description: GUID used to delete the project custom property.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomPropertyModel
      responses:
        "204":
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Deletes a project custom property.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: ProjectCustomProperties_GetProjectCustomProperty
      parameters:
      - description: Id used to get the project custom property.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomPropertyModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPropertyModel'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get project custom property by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: ProjectCustomProperties_PatchProjectCustomProperty
      parameters:
      - description: "ID of the project custom property Can also be comma separate\
          \ list of IDs to patch multiple project custom properties with one call.\
          \ When multiple IDs are given, returns model which has list of succeeded\
          \ project custom properties and list of errors."
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomPropertyModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of ProjectCustomPropertyModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomPropertyModel'
                type: array
          description: List of updated project custom properties.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a project custom property or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projects/customvalues:
    post:
      operationId: ProjectCustomValues_PostProjectCustomValue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCustomValueModel'
        description: ProjectCustomValueModel.
        x-name: projectCustomValue
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectCustomValueModel'
                type: array
          description: Created project custom value.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Insert a project custom value.
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projects/customvalues/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: ProjectCustomValues_DeleteProjectCustomValue
      parameters:
      - description: GUID used to delete the project custom value.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectCustomValueModel
      responses:
        "204":
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:delete
      summary: Deletes a project custom value.
      tags:
      - ProjectsDelete
      x-accepts:
      - application/json
    get:
      operationId: ProjectCustomValues_GetProjectCustomValue
      parameters:
      - description: Id used to get the project custom value.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectCustomValueModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCustomValueModel'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get project custom value by ID.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
    patch:
      operationId: ProjectCustomValues_PatchProjectCustomValue
      parameters:
      - description: "ID of the project custom value Can also be comma separate list\
          \ of IDs to patch multiple project custom values with one call. When multiple\
          \ IDs are given, returns model which has list of succeeded project custom\
          \ values and list of errors."
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectCustomValueModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of ProjectCustomValueModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectCustomValueModel'
                type: array
          description: List of updated project custom values.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Update (Patch) a project custom value or a part of it.
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projects/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if project\
        \ can't be found."
      operationId: Projects_DeleteProject
      parameters:
      - description: ID for the project to delete
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:delete
      summary: Delete a project
      tags:
      - ProjectsDelete
      x-accepts:
      - application/json
    get:
      operationId: Projects_GetProject
      parameters:
      - description: Id used to get the project.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectOutputModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get project by ID
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
    patch:
      description: "To update current project status, give ProjectStatusTypeGuid and\
        \ possibly Description. To update current sales status, give SalesStatusTypeGuid\
        \ ("
      operationId: Projects_PatchProject
      parameters:
      - description: ID of the project
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of ProjectInputModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectOutputModel'
                type: array
          description: List of updated projects
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Update (Patch) a project or a part of it
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projects/{guid}/phaseswithhierarchy:
    get:
      operationId: Phases_GetProjectPhases
      parameters:
      - description: Id of the project.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PhaseModelWithHierarchyInfo'
                type: array
          description: All the phases for the project
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get project's phases as flat list
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/customvalues:
    get:
      operationId: ProjectCustomValues_GetProjectCustomValues
      parameters:
      - description: ID of the project.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Get only values of active or inactive project custom\
          \ properties."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 4
      - description: List of target for which to get the values.
        explode: true
        in: query
        name: target
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 5
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 6
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (sub-model fields not supported) in the model can be used, while\
          \ value can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=Name&sortings[0].value=Desc&sortings[1].key=Number&sortings[1].value=Asc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 7
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectCustomValueModel'
                type: array
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get the project custom values.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/files:
    get:
      operationId: Files_GetProjectFiles
      parameters:
      - description: GUID of the project used to get the files.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=Name&sortings[0].value=Desc&sortings[1].key=Number&sortings[1].value=Asc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectFileModel'
                type: array
          description: File.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - files:read
      summary: Get all files of a project by its id.
      tags:
      - FilesRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/flatrates:
    get:
      operationId: FlatRates_GetFlatratesForProject
      parameters:
      - description: Id of the project.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlatRateOutputModel'
                type: array
          description: All the flat rates for the project.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:read
      summary: Get project's flat rates.
      tags:
      - FeesRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/keywords:
    get:
      operationId: Keywords_GetProjectKeywords
      parameters:
      - description: ID of the project for which keywords are requested.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: "If not given, return all Keywords, if given as true return only\
          \ active Keywords, if given as false returns only inactive Keywords."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=Keyword&sortings[0].value=Desc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectKeywordModel'
                type: array
          description: Keywords.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get all the keywords for project.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/keywords/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if the\
        \ keyword or the link can't be found."
      operationId: Keywords_DeleteProjectKeyword
      parameters:
      - explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 2
        x-relation-guid: KeywordModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:delete
      summary: Delete a keyword from the project
      tags:
      - ProjectsDelete
      x-accepts:
      - application/json
    post:
      operationId: Keywords_LinkKeywordToProject
      parameters:
      - explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      - explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 2
        x-relation-guid: KeywordModel
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectKeywordModel'
          description: Created project keyword link.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Link existing keyword to project
      tags:
      - ProjectsWrite
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/overtimeprices:
    get:
      operationId: OvertimePrices_GetOvertimePricesForProject
      parameters:
      - explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OvertimePriceModel'
                type: array
          description: Projects.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get all the overtimePrices for a project.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/pricelists/custom:
    post:
      operationId: PriceLists_PostCustomPricelist
      parameters:
      - description: ID of the project.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: Get the custom volume pricing price list or regular custom price
          list. Default is false.
        explode: true
        in: query
        name: isVolumePricing
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 2
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPriceListOutputModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: |-
        Create custom price list for a project. If project already has a custom price list returns existing price list.
        Creates a new price list if project doesn't have a custom price list.
        Project can only have one custom price list.
        Note that project's price list will be changed to the custom price list created here and
        also existing prices are copied to the new price list.
      tags:
      - ProjectsWrite
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/productprices:
    get:
      operationId: ProductPrices_GetProductPricesForProject
      parameters:
      - description: ID of the project.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: "If true return only prices from the price list, if false also\
          \ returns prices from the products. Default is false."
        explode: true
        in: query
        name: fromPricelistOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      - description: "Optional: Text to search from Product name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 5
      - description: "Optional: Calculate the number of total rows. Default false\
          \ = total row count is returned as zero."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 6
      - description: "Optional: If true, returns only prices that are available for\
          \ the project, false returns price that are not available. Default all."
        explode: true
        in: query
        name: isAvailable
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 7
      - description: "Optional: Absolute search for products with specified product\
          \ code."
        explode: true
        in: query
        name: productCode
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 8
      - description: "Optional: Search all product price(s) by products guid(s)."
        explode: true
        in: query
        name: productGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 9
        x-relation-guid: ProductOutputModel
      - description: "Optional: If true, return only volume priced products. If false,\
          \ return all non volume priced products. Default is null, which means return\
          \ all products."
        explode: true
        in: query
        name: isVolumePriced
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 10
      - description: "Optional: Search product prices according to product category\
          \ / categories by product category guid(s)."
        explode: true
        in: query
        name: productCategoryGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 11
        x-relation-guid: ProductCategoryModel
      - description: "Optional: Search product prices according to product type /\
          \ types."
        explode: true
        in: query
        name: productTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ProductType'
          nullable: true
          type: array
        style: form
        x-position: 12
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProductPriceOutputModel'
                type: array
          description: Projects.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get all the productPrices for a project.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/productsforproject:
    get:
      operationId: Products_GetSearchedProducts
      parameters:
      - description: Id of the project
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: "Optional: Number of rows to fetch"
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Product type. if given, it filters the products by the given\
          \ type"
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/ProductType'
        style: form
        x-position: 4
      - description: "Optional: If true returns all the products from registry with\
          \ project specific prices. If false returns only products specified for\
          \ the project with project specific prices. Default false."
        explode: true
        in: query
        name: includeProductsFromRegistry
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProductForProjectOutputModel'
                type: array
          description: All the Products matching search criteria
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Gets available products for the given project where price information
        comes from projects price list
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/projectbillingcustomers:
    get:
      operationId: ProjectBillingCustomers_GetWorkHourPricesForProject
      parameters:
      - explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectBillingCustomerModel'
                type: array
          description: Project's billing customers
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get all the billing customers for a project
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/projectfees:
    get:
      operationId: ProjectFees_GetProjectFeesForProject
      parameters:
      - description: ID of the project.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: Number of rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: ProjectFee's product type. if given, it filters the\
          \ projectFees by the given type. FixedFees (Own work), Materials (Products),\
          \ Subcontracting"
        explode: true
        in: query
        name: productType
        required: false
        schema:
          $ref: '#/components/schemas/ProductType'
        style: form
        x-position: 4
      - description: "Optional: Filter the project fees. If true/false, only the billable/non-billable\
          \ ones are returned. If null, all are returned. Default is null."
        explode: true
        in: query
        name: isBillable
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: Filter the project fees. If true/false, only the ones\
          \ that are/are not invoiced are returned. If null, all are returned. Default\
          \ is null."
        explode: true
        in: query
        name: isBilled
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 6
      - description: "Optional: Filter the project fees. When given, only the ones\
          \ that are invoiceable before or on the given date are returned. Default\
          \ is null."
        explode: true
        in: query
        name: invoiceableDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 7
      - description: "Optional: Also fetches recurring rules along with project fees.\
          \ Default is false."
        explode: true
        in: query
        name: includeRecurringRules
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 8
      - description: "Optional. Filter the project fees. If true/false, only the ones\
          \ that will be billable in the future are returned. If null, all are returned.\
          \ Default is false."
        explode: true
        in: query
        name: isBillablePeriodInFuture
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 9
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectFeeOutputModel'
                type: array
          description: ProjectFees
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:read
      summary: Get all the project fees for a project
      tags:
      - FeesRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/projectforecasts:
    delete:
      operationId: ProjectForecasts_DeleteForecasts
      parameters:
      - description: Project for the forecasts to delete
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: Year where to start deleting the forecasts
        explode: true
        in: query
        name: year
        required: false
        schema:
          format: int32
          maximum: 2075
          minimum: 1900
          type: integer
        style: form
        x-position: 2
      - description: Month where to start deleting the forecasts
        explode: true
        in: query
        name: month
        required: false
        schema:
          format: int32
          maximum: 12
          minimum: 1
          type: integer
        style: form
        x-position: 3
      responses:
        "204":
          description: List of project forecasts.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:delete
      summary: "Delete the project forecasts from a month onward, including the given\
        \ month."
      tags:
      - ProjectsDelete
      x-accepts:
      - application/json
    get:
      operationId: ProjectForecasts_GetForecasts
      parameters:
      - description: project for the forecasts
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: Start date of the date range for the forecasts
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: End date of the date range for the forecasts
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectForecastOutputModel'
                type: array
          description: List of project forecasts.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get the project forecasts
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/projectinvoicesettings:
    get:
      operationId: ProjectInvoiceSettings_GetProjectInvoiceSettings
      parameters:
      - description: ID of the project.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectInvoiceSettingsOutputModel'
                type: array
          description: The project invoice settings.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - invoices:read
        - projects:read
      summary: Get project invoice settings by project ID.
      tags:
      - InvoicesRead
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/projectmembercostexceptions:
    get:
      operationId: ProjectMemberCostExceptions_GetProjectMemberCostExceptionsForProject
      parameters:
      - description: Guid of the project.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: "Optional: Guid of the user."
        explode: true
        in: query
        name: userGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
        x-relation-guid: UserOutputModel
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectMemberCostExceptionOutputModel'
                type: array
          description: All the member cost exceptions for one project.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get all cost exceptions of project members for a project.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/projectproducts:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: ProjectProducts_DeleteAllProjectProducts
      parameters:
      - description: GUID of the project from where project products to remove.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:delete
      summary: Deletes all project products of a project.
      tags:
      - ProjectsDelete
      x-accepts:
      - application/json
    get:
      description: "This is the same as organization's list of products, unless the\
        \ project has some specific products and UseProductsFromSetting in project\
        \ model is set to false."
      operationId: ProjectProducts_GetProjectProducts
      parameters:
      - description: GUID of the project.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: "Optional: Includes products available from product registry"
        explode: true
        in: query
        name: includeProductsFromRegistry
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Optional: How many rows to fetch, Default all."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      - description: Fetch only active
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectProductOutputModel'
                type: array
          description: A list of products for the project.
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get project products
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/projectrecurringfeerules:
    get:
      operationId: ProjectRecurringFeeRules_GetProjectRecurringFeeRulesForProject
      parameters:
      - description: ID of the project to get the recurring fee rules.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: "projectRecurringFeeRule's product type. if given, it filters\
          \ the projectRecurringFeeRules by the given type."
        explode: true
        in: query
        name: productType
        required: false
        schema:
          $ref: '#/components/schemas/ProductType'
        style: form
        x-position: 2
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      - description: "Optional. Filter the project recurring fee rules. If true/false,\
          \ only the ones that will be billable in the future are returned. If null,\
          \ all are returned. Default is false."
        explode: true
        in: query
        name: isBillablePeriodInFuture
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 5
      - description: the time period for any uninvoiced recurring rules.
        explode: true
        in: query
        name: billableTimePeriod
        required: false
        schema:
          $ref: '#/components/schemas/BillablePeriod'
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectRecurringFeeRuleOutputModel'
                type: array
          description: List of updated project recurring fee rules
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:read
      summary: Get all the Recurring Fee Rules for a project
      tags:
      - FeesRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/projectsalesnotes:
    get:
      operationId: SalesNotes_GetProjectSalesNotes
      parameters:
      - description: Project guid used to get the notes.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Get sales notes that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectSalesNoteOutputModel'
                type: array
          description: List of sales notes for a project.
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get the sales notes of a case.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/projecttravelexpenses:
    get:
      operationId: ProjectTravelExpenses_GetProjectTravelExpensesForProject
      parameters:
      - description: ID of the project.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: "Optional: Filter the travel expenses. If true/false, only the\
          \ billable/non-billable ones are returned. If null, all are returned. Default\
          \ is null."
        explode: true
        in: query
        name: isBillable
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: Filter the travel expenses. If true/false, only the\
          \ ones that are/are not invoiced are returned. If null, all are returned.\
          \ Default is null."
        explode: true
        in: query
        name: isBilled
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 3
      - description: "Optional: Filter the project fees. When given, only the ones\
          \ that are invoiceable before or on the given date are returned. Default\
          \ is null."
        explode: true
        in: query
        name: invoiceableDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 5
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 6
      - description: "Optional. Filter the project travel expenses. If true/false,\
          \ only the ones that will be billable in the future are returned. If null,\
          \ all are returned. Default is false."
        explode: true
        in: query
        name: isBillablePeriodInFuture
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 7
      - description: "Optional: Class of the expense. Mileage, DailyAllowance or OtherTravelExpense"
        explode: true
        in: query
        name: expenseClass
        required: false
        schema:
          $ref: '#/components/schemas/ExpensesClass'
        style: form
        x-position: 8
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTravelExpenseOutputModel'
                type: array
          description: ProjectTravelExpenseOutputModel
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - travels:read
      summary: Get all the project travel expenses for a project
      tags:
      - TravelsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/projectworkhourprices:
    get:
      operationId: ProjectWorkHourPrices_GetWorkHourPricesForProject
      parameters:
      - description: Guid of the project.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: "If true return only prices from the price list, if false also\
          \ returns prices from the products. Default is false."
        explode: true
        in: query
        name: fromPricelistOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: If true, returns only prices that are available for\
          \ the project, false returns price that are not available. Default all."
        explode: true
        in: query
        name: isAvailable
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 3
      - description: "Optional: Get project work hour prices that have been added\
          \ or changed after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectWorkHourPriceOutputModel'
                type: array
          description: Projects
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get all the work hour prices for a project
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/projectworktypes:
    get:
      description: "This is the same as organization's list of work types, unless\
        \ the project has some specific work types and \"UseWorktypesFromSetting\"\
        \ in project model is set to false."
      operationId: ProjectWorkTypes_GetProjectWorktypes
      parameters:
      - description: GUID of the project.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: "Include work types also from registry. If false, returns only\
          \ project specific work types. Default false."
        explode: true
        in: query
        name: includeWorktypesFromRegistry
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      - description: "If not given, return all work types, if given as true return\
          \ only active work types, if given as false returns only inactive work types."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: Text to search from work type name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 6
      - description: "Optional: Get project work types that have been added or changed\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 7
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectWorkTypeModel'
                type: array
          description: A list of work types for the project.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get project work types.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/proposals:
    get:
      operationId: Proposals_GetProposalsForProject
      parameters:
      - description: Project id for which to get proposals.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default all."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Get proposals that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProposalOutputModel'
                type: array
          description: Proposal
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get all the proposals for a project
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/resourceallocations/allocations:
    get:
      operationId: ResourceAllocations_GetResourceAllocationsByProjectGuid
      parameters:
      - explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: Get resource allocations with startDate. Using startDate and
          endDate or changedSince parameters are required to fetch a maximum of 30
          days
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: Get resource allocations with endDate. Using startDate and endDate
          or changedSince parameters are required to fetch a maximum of 30 days
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Optional: Get resource allocations that have been added or changed\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 4
      - explode: true
        in: query
        name: userLicenseTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/LicenseUserType'
          nullable: true
          type: array
        style: form
        x-position: 5
      - explode: true
        in: query
        name: phaseGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 6
        x-relation-guid: PhaseOutputModel
      - explode: true
        in: query
        name: userGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 7
        x-relation-guid: UserOutputModel
      - explode: true
        in: query
        name: projectBusinessUnitGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 8
        x-relation-guid: BusinessUnitModel
      - explode: true
        in: query
        name: userBusinessUnitGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 9
        x-relation-guid: BusinessUnitModel
      - explode: true
        in: query
        name: projectManagerUserGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 10
        x-relation-guid: UserOutputModel
      - explode: true
        in: query
        name: userTagGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 11
        x-relation-guid: UserKeywordModel
      - explode: true
        in: query
        name: useSalesProbability
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-position: 12
      - explode: true
        in: query
        name: projectStatusTypeGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 13
        x-relation-guid: ProjectStatusTypeModel
      - explode: true
        in: query
        name: projectTagGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 14
        x-relation-guid: ProjectKeywordModel
      - explode: true
        in: query
        name: superiorUserGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 15
        x-relation-guid: UserOutputModel
      - explode: true
        in: query
        name: salesStatusTypeGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 16
        x-relation-guid: SalesStatusTypeOutputModel
      - explode: true
        in: query
        name: resourceAllocationGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 17
        x-relation-guid: ResourceAllocationOutputModel
      - explode: true
        in: query
        name: salesProgress
        required: false
        schema:
          $ref: '#/components/schemas/SalesProgress'
        style: form
        x-position: 18
      - description: "Optional: Number of rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 19
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 20
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAllocationOutputModel'
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - resourceallocations:read
      summary: "Get resource allocations for a project with required filters (startDate\
        \ and endDate or changedSince, max 30 days to be fetched at once)"
      tags:
      - ResourceallocationsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/salesstatushistory:
    get:
      operationId: SalesStatusHistory_GetSalesStatusHistory
      parameters:
      - description: The project for which the sales status history is fetched.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SalesStatusHistoryOutputModel'
                type: array
          description: Sales status history
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get the sales status history for a project
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/teamproductivity:
    get:
      operationId: TeamProductivity_GetTeamProductivity
      parameters:
      - description: GUID of the project.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TeamProductivityOutputModel'
                type: array
          description: List of project members with team productivity information.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get team productivity of a project.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/travelexpensetypes:
    get:
      operationId: TravelExpenseTypes_GetSearchedTravelExpenseTypes
      parameters:
      - description: Id of the project.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: "Searched string: part of name or code."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: How many rows to fetch, Default all."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      - description: "Optional: Id of the user to fetch travels for."
        explode: true
        in: query
        name: userGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 5
        x-relation-guid: UserOutputModel
      - description: "Optional: Expense class of the travel. Mileage/DailyAllowance/OtherTravelExpense."
        explode: true
        in: query
        name: expenseClass
        required: false
        schema:
          $ref: '#/components/schemas/ExpensesClass'
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TravelExpenseTypeOutputModel'
                type: array
          description: All the Travel expense types matching search criteria.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Search active travel expense types of project by part of the name or
        code.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/travelprices:
    get:
      operationId: TravelPrices_GetTravelPricesForProject
      parameters:
      - description: ID of the project.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: "If true return only prices from the price list, if false also\
          \ returns prices from the settings. Default is false."
        explode: true
        in: query
        name: fromPricelistOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: List of expense classes to search by, defaults to\
          \ all travel categories."
        explode: true
        in: query
        name: expenseClasses
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ExpensesClass'
          nullable: true
          type: array
        style: form
        x-position: 3
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 5
      - description: "Optional: Text to search from Product name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 6
      - description: "Optional: Calculate the number of total rows. Default false\
          \ = total row count is returned as zero."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 7
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TravelPriceOutputModel'
                type: array
          description: TravelPriceModel.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get all the travel prices for a project.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/workhours:
    get:
      operationId: WorkHours_GetProjectWorkHours
      parameters:
      - description: ID of the project.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: "Optional: Filter the work hours. If true/false, only the billable/non-billable\
          \ ones are returned. If null, all are returned. Default is null."
        explode: true
        in: query
        name: isBillable
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: Filter the work hours. If true/false, only the ones\
          \ that are/are not invoiced are returned. If null, all are returned. Default\
          \ is null."
        explode: true
        in: query
        name: isBilled
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 3
      - description: "Optional: starting date from which to get the hours. Default\
          \ all."
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: starting date to which to get the hours. Default all."
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 5
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 6
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 7
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkHourOutputModel'
                type: array
          description: WorkHours
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - hours:read
      summary: Get all the work hours for phases of a project for invoicing
      tags:
      - HoursRead
      x-accepts:
      - application/json
  /v1/projects/{projectGuid}/worktypesforproject:
    get:
      operationId: WorkTypes_GetSearchedWorktypes
      parameters:
      - description: Id of the case to which proposal is connected.
        explode: false
        in: path
        name: projectGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectOutputModel
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Searched string: part of name or code."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorktypeForProjectOutputModel'
                type: array
          description: All the work types matching search criteria.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Search active work types by part of the name or code.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/projectsalesnotes:
    post:
      operationId: SalesNotes_PostProjectSalesNotes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectSalesNoteInputModel'
        description: SalesNoteOutputModel
        x-name: salesNote
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSalesNoteOutputModel'
          description: Created project sales note.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Insert a project sales note.
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectsalesnotes/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. OK (200) if note has child\
        \ notes and can't be deleted. It is marked as IsDeleted = true. Not found\
        \ (404) if note can't be found."
      operationId: SalesNotes_DeleteProjectSalesNote
      parameters:
      - description: GUID used to delete the project sales note.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectSalesNoteOutputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:delete
      summary: Deletes a project sales note.
      tags:
      - ProjectsDelete
      x-accepts:
      - application/json
    get:
      operationId: SalesNotes_GetProjectSalesNote
      parameters:
      - description: GUID used to get the project sales note.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectSalesNoteOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSalesNoteOutputModel'
          description: ProjectNote
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get project sales note by ID.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
    patch:
      operationId: SalesNotes_PatchProjectSalesNote
      parameters:
      - description: ID of the project sales note.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectSalesNoteOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of project sales note model.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectSalesNoteOutputModel'
                type: array
          description: list of updated sales notes.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Update (Patch) a project sales note or a part of it.
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectstatustypes:
    get:
      operationId: ProjectStatusTypes_GetProjectStatusTypes
      parameters:
      - description: "If not given, return all ProjectStatusTypes, if given as true\
          \ return only active ProjectStatusTypes, if given as false returns only\
          \ inactive ProjectStatusTypes"
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from ProjectStatusType name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=name&sortings[0].value=Asc&sortings[1].key=isActive&sortings[1].value=Asc\""
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectStatusTypeModel'
                type: array
          description: All the ProjectStatusTypes
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the ProjectStatusTypes
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: ProjectStatusTypes_PostProjectStatusType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectStatusTypeModel'
        description: ProjectStatusTypeModel
        x-name: projectStatusType
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStatusTypeModel'
          description: Project status type
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a project status type
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectstatustypes/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if projectStatusType\
        \ can't be found."
      operationId: ProjectStatusTypes_DeleteProjectStatusType
      parameters:
      - description: ID for the projectStatusType to delete
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectStatusTypeModel
      - description: "Optional: ID of the project status type to which to move usages\
          \ of this project status type. Default null. If project status type is in\
          \ use and usages aren't moved the deletion might fail."
        explode: true
        in: query
        name: moveUsagesToGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
        x-relation-guid: ProjectStatusTypeModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete a projectStatusType
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: ProjectStatusTypes_GetProjectStatusType
      parameters:
      - description: GUID used to get the projectStatusType.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectStatusTypeModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStatusTypeModel'
          description: projectStatusType
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get projectStatusType by ID
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: ProjectStatusTypes_PatchProjectStatusType
      parameters:
      - description: ID of the projectStatusType
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectStatusTypeModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ProjectStatusTypeModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectStatusTypeModel'
                type: array
          description: List of updated business units
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a projectStatusType or a part of it
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projecttaskstatuses:
    get:
      operationId: ProjectTaskStatuses_GetProjectTaskStatuses
      parameters:
      - description: "If not given, return all project task statuses, if given as\
          \ true return only active project task statuses, if given as false returns\
          \ only inactive project task statuses."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from activity type name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=name&sortings[0].value=Asc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTaskStatusModel'
                type: array
          description: List of Activity Types.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get the project task statuses.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: ProjectTaskStatuses_PostProjectTaskStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTaskStatusModel'
        description: ProjectTaskStatusModel.
        x-name: projectTaskStatus
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTaskStatusModel'
          description: 'Project task status. '
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a project task status.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projecttaskstatuses/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if product\
        \ can't be found."
      operationId: ProjectTaskStatuses_DeleteProjectTaskStatus
      parameters:
      - description: ID for the project task status to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectTaskStatusModel
      - description: "Optional: ID of the project task status to which to move usages\
          \ of this project task status. Default null."
        explode: true
        in: query
        name: moveUsagesToGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
        x-relation-guid: ProjectTaskStatusModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete a project task status.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: ProjectTaskStatuses_GetProjectTaskStatus
      parameters:
      - description: GUID used to get the Project task status.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectTaskStatusModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTaskStatusModel'
          description: Project task status.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get Project task status by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: ProjectTaskStatuses_PatchProjectTaskStatus
      parameters:
      - description: ID of the Project task status.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectTaskStatusModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ProjectTaskStatusModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTaskStatusModel'
                type: array
          description: List of updated Project task status.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) an Project task status or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projecttravelexpensefiles/{guid}:
    get:
      operationId: Files_GetTravelExpenseFile
      parameters:
      - description: GUID used to get the travel expense file.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectTravelExpenseFileModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTravelExpenseFileModel'
          description: InvoiceFile.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - files:read
      summary: Get travel expense file by ID.
      tags:
      - FilesRead
      x-accepts:
      - application/json
  /v1/projecttravelexpenses:
    get:
      operationId: ProjectTravelExpenses_GetProjectTravelExpenses
      parameters:
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Get project travel expenses that have been added or\
          \ changed after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTravelExpenseOutputModel'
                type: array
          description: ProjectTravelExpenseOutputModel
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - travels:read
      summary: Get the project travel expenses.
      tags:
      - TravelsRead
      x-accepts:
      - application/json
    post:
      operationId: ProjectTravelExpenses_PostProjectTravelExpense
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTravelExpenseInputModel'
        description: ProjectTravelExpenseInputModel.
        x-name: projectTravelExpense
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTravelExpenseOutputModel'
          description: Created project travel expense.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - travels:write
      summary: Insert a project travel expense.
      tags:
      - TravelsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projecttravelexpenses/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: ProjectTravelExpenses_DeleteProjectTravelExpense
      parameters:
      - description: GUID used to delete the project travel expense.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectTravelExpenseInputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - travels:delete
      summary: Deletes a project travel expense.
      tags:
      - TravelsDelete
      x-accepts:
      - application/json
    get:
      operationId: ProjectTravelExpenses_GetProjectTravelExpense
      parameters:
      - description: Id used to get the project travel expense.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectTravelExpenseOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTravelExpenseOutputModel'
          description: ProjectTravelExpenseOutputModel.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - travels:read
      summary: Get project travel expense by ID.
      tags:
      - TravelsRead
      x-accepts:
      - application/json
    patch:
      operationId: ProjectTravelExpenses_PatchProjectTravelExpense
      parameters:
      - description: ID of the project travel expense.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectTravelExpenseInputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of ProjectTravelExpenseInputModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTravelExpenseOutputModel'
                type: array
          description: List of updated project travel expenses.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - travels:write
      summary: Update (Patch) a project travel expense or a part of it.
      tags:
      - TravelsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projecttravelexpenses/{projectTravelExpenseGuid}/files:
    get:
      operationId: Files_GetTravelExpenseFiles
      parameters:
      - description: GUID of the travel expense used to get the files.
        explode: false
        in: path
        name: projectTravelExpenseGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectTravelExpenseOutputModel
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTravelExpenseFileModel'
                type: array
          description: TravelExpenseFile.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - files:read
      summary: Get all files of a travel expense by its id.
      tags:
      - FilesRead
      x-accepts:
      - application/json
  /v1/projectworkhourprices:
    post:
      operationId: ProjectWorkHourPrices_PostProjectWorkHourPrice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectWorkHourPriceInputModel'
        description: ProjectWorkHourPriceInputModel
        x-name: workHourPrice
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWorkHourPriceOutputModel'
          description: Created work hour prices
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Insert a work hour price
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectworkhourprices/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: ProjectWorkHourPrices_DeleteProjectWorkHourPrice
      parameters:
      - description: GUID used to delete the work hour price.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectWorkHourPriceOutputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:delete
      summary: Deletes a work hour price
      tags:
      - ProjectsDelete
      x-accepts:
      - application/json
    get:
      operationId: ProjectWorkHourPrices_GetProjectWorkHourPrice
      parameters:
      - description: Id used to get the work hour price.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectWorkHourPriceOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWorkHourPriceOutputModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get project work hour price by ID
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
    patch:
      operationId: ProjectWorkHourPrices_PatchProjectWorkHourPrice
      parameters:
      - description: ID of the work hour price
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectWorkHourPriceOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ProjectWorkHourPriceInputModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectWorkHourPriceOutputModel'
                type: array
          description: list of updated work hour prices
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Update (Patch) a work hour price or a part of it
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectworktypes:
    post:
      description: The "UseWorktypesFromSetting" flag for the Project should be false
        (the project should not use the organization list of work types).
      operationId: ProjectWorkTypes_PostProjectWorktype
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectWorkTypeModel'
        description: ProjectWorkTypeModel.
        x-name: projectWorkTypeModel
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWorkTypeModel'
          description: Added project work type.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Adds a work type to a project.
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/projectworktypes/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. The \"UseWorktypesFromSetting\"\
        \ flag for the Project should be false (the project should not use the organization\
        \ list of work types)."
      operationId: ProjectWorkTypes_DeleteProjectWorktype
      parameters:
      - description: GUID of the project work type to remove.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectWorkTypeModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:delete
      summary: Deletes a project work type.
      tags:
      - ProjectsDelete
      x-accepts:
      - application/json
    patch:
      description: This currently can be used only to change the default work type
        in a project. The "UseWorktypesFromSetting" flag for the Project should be
        false (the project should not use the organization list of work types).
      operationId: ProjectWorkTypes_PatchProjectWorktype
      parameters:
      - description: ID of the project work type.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProjectWorkTypeModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ProjectWorkTypeModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectWorkTypeModel'
                type: array
          description: list of updated project work types.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Update (patch) a project work type.
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/proposalfeerows:
    get:
      operationId: ProposalFees_GetProposalFees
      parameters:
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Get proposal fee rows that have been added or changed\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProposalFeeRowOutputModel'
                type: array
          description: Proposal fee rows
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get the proposal fee rows.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
    post:
      operationId: ProposalFees_PostProposalFee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProposalFeeRowInputModel'
        description: ProposalFeeModel
        x-name: proposalFee
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalFeeRowOutputModel'
          description: Created proposal fee row.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Insert a proposal fee row.
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/proposalfeerows/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if proposal\
        \ fee row can't be found."
      operationId: ProposalFees_DeleteProposalFee
      parameters:
      - description: ID for the proposal fee row to delete
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalFeeRowInputModel
      responses:
        "204":
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:delete
      summary: Delete a proposal fee row
      tags:
      - ProjectsDelete
      x-accepts:
      - application/json
    get:
      operationId: ProposalFees_GetProposalFee
      parameters:
      - description: proposal fee row id to get
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalFeeRowInputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalFeeRowOutputModel'
          description: Proposal fee
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get the proposal fee rows by guid
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
    patch:
      operationId: ProposalFees_PatchProposalFee
      parameters:
      - description: ID of the proposal fee row
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalFeeRowInputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ProposalFeeModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProposalFeeRowOutputModel'
                type: array
          description: list of updated proposal fee rows
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Update (Patch) a proposal fee row or a part of it
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/proposals:
    get:
      operationId: Proposals_GetProposals
      parameters:
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Get proposals that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProposalOutputModel'
                type: array
          description: Proposal
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get all the proposals
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
    post:
      operationId: Proposals_PostProposal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProposalInputModel'
        description: ProposalInputModel
        x-name: proposal
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalOutputModel'
          description: Created proposal.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Insert a proposal.
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/proposals/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if proposal\
        \ can't be found."
      operationId: Proposals_DeleteProposal
      parameters:
      - description: Guid for the proposal to delete
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalOutputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:delete
      summary: Delete a proposal
      tags:
      - ProjectsDelete
      x-accepts:
      - application/json
    get:
      operationId: Proposals_GetProposal
      parameters:
      - description: GUID used to get the Proposal.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalOutputModel'
          description: Proposal
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get Proposal by ID
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
    patch:
      operationId: Proposals_PatchProposal
      parameters:
      - description: Guid of the Proposal
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ProposalInputModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProposalOutputModel'
                type: array
          description: List of updated Proposals
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Update (Patch) a Proposal or a part of it
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/proposals/{guid}/proposalsettings:
    get:
      operationId: ProposalSettings_GetProposalSettings
      parameters:
      - description: GUID used to get the Proposal.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalSettingsOutputModel'
          description: Proposal
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get settings for a proposal
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
    patch:
      operationId: ProposalSettings_PatchProposalSettings
      parameters:
      - description: Guid of the Proposal
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ProposalSettingsInputModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProposalSettingsOutputModel'
                type: array
          description: List of updated Proposal settings
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Update (Patch) proposal settings
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/proposals/{proposalGuid}/proposalfeerows:
    get:
      operationId: ProposalFees_GetProposalFeesForProposal
      parameters:
      - description: proposal id for which to get proposal fees rows.
        explode: false
        in: path
        name: proposalGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default all."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProposalFeeRowOutputModel'
                type: array
          description: Proposal fee rows
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get all the proposal fee rows for a proposal
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/proposals/{proposalGuid}/proposalsubtotals:
    get:
      operationId: ProposalSubtotals_GetProposalSubtotalsForProposal
      parameters:
      - description: proposal id for which to get proposal subtotals.
        explode: false
        in: path
        name: proposalGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalOutputModel
      - description: "Optional: Page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default all."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProposalSubtotalOutputModel'
                type: array
          description: Proposal
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get all the proposal subtotals for a proposal
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/proposals/{proposalGuid}/proposalworkrows:
    get:
      operationId: ProposalWorkhours_GetProposalWorkHoursForProposal
      parameters:
      - description: proposal id for which to get proposal work rows.
        explode: false
        in: path
        name: proposalGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default all."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProposalWorkhourRowOutputModel'
                type: array
          description: Proposal work rows.
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get all the proposal work rows.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/proposalstatuses:
    get:
      operationId: ProposalStatuses_GetProposalStatuses
      parameters:
      - description: "Optional: If not given, return all proposal statuses, if given\
          \ as true return only active proposal statuses, if given as false returns\
          \ only inactive proposal statuses."
        explode: true
        in: query
        name: isActive
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Search by proposal status name."
        explode: true
        in: query
        name: proposalStatusName
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProposalStatusOutputModel'
                type: array
          description: Proposal statuses
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the proposal statuses
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: ProposalStatuses_PostProposalStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProposalStatusInputModel'
        description: ProposalStatusModel
        x-name: model
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalStatusOutputModel'
          description: Inserted proposal status
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a proposal status
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/proposalstatuses/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if proposal\
        \ status can't be found."
      operationId: ProposalStatuses_DeleteProposalStatus
      parameters:
      - description: ID for the proposal status to delete
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalStatusInputModel
      - description: "Optional: ID of the proposal status to which to move usages\
          \ of this proposal status. Default null. If proposal status is in use and\
          \ usages aren't moved the deletion might fail."
        explode: true
        in: query
        name: moveUsagesToGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
        x-relation-guid: ProposalStatusInputModel
      responses:
        "204":
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete an proposal status
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: ProposalStatuses_GetProposalStatus
      parameters:
      - description: GUID used to get the Proposal status.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalStatusInputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalStatusOutputModel'
          description: Proposal status
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get Proposal status by ID
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: ProposalStatuses_PatchProposalStatus
      parameters:
      - description: ID of the Proposal status
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalStatusInputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ProposalStatusModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProposalStatusOutputModel'
                type: array
          description: List of updated Proposal statuses
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) an Proposal status or a part of it
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/proposalstatuses/{guid}/usage:
    get:
      operationId: ProposalStatuses_GetUsage
      parameters:
      - description: GUID used to get the proposal status.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalStatusInputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsageModel2'
                type: array
          description: Usage
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get usage for an proposal status.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/proposalsubtotals:
    get:
      operationId: ProposalSubtotals_GetProposalSubtotals
      parameters:
      - description: "Optional: Page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Get proposal subtotals that have been added or changed\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProposalSubtotalOutputModel'
                type: array
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get the proposal subtotals.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
    post:
      operationId: ProposalSubtotals_PostProposalSubtotal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProposalSubtotalInputModel'
        description: ProposalSubtotalModel
        x-name: proposalSubtotal
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalSubtotalOutputModel'
          description: Created proposal subtotal.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Insert a proposal subtotal
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/proposalsubtotals/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if proposal\
        \ subtotal can't be found."
      operationId: ProposalSubtotals_DeleteProposalSubtotal
      parameters:
      - description: ID for the proposal subtotal to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalSubtotalInputModel
      responses:
        "204":
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:delete
      summary: Delete a proposal subtotal
      tags:
      - ProjectsDelete
      x-accepts:
      - application/json
    get:
      operationId: ProposalSubtotals_GetProposalSubtotal
      parameters:
      - description: GUID used to get the Proposal subtotal.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalSubtotalInputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalSubtotalOutputModel'
          description: Proposal subtotal
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get Proposal subtotal by ID
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
    patch:
      description: "It is not possible to changed the proposalGuid for an existing\
        \ proposal subtotal. Also, when a proposal subtotal is connected to a phase,\
        \ the connection can only be broken if the phase is deleted."
      operationId: ProposalSubtotals_PatchProposalSubtotal
      parameters:
      - description: ID of the Proposal subtotal
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalSubtotalInputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ProposalSubtotalModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProposalSubtotalOutputModel'
                type: array
          description: List of updated Proposal subtotals
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Update (Patch) a Proposal subtotal or a part of it
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/proposalworkrows:
    get:
      operationId: ProposalWorkhours_GetProposalWorkHours
      parameters:
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Get proposal work rows that have been added or changed\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProposalWorkhourRowOutputModel'
                type: array
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get the proposal work rows.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
    post:
      operationId: ProposalWorkhours_PostProposalWorkhour
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProposalWorkhourRowInputModel'
        description: ProposalWorkhourModel
        x-name: proposalWorkhour
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalWorkhourRowOutputModel'
          description: Created proposal work row.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Insert a proposal work row.
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/proposalworkrows/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if proposal\
        \ work row can't be found."
      operationId: ProposalWorkhours_DeleteProposalWorkhour
      parameters:
      - description: ID for the proposal work row to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalWorkhourRowOutputModel
      responses:
        "204":
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:delete
      summary: Delete a proposal work row.
      tags:
      - ProjectsDelete
      x-accepts:
      - application/json
    get:
      operationId: ProposalWorkhours_GetProposalWorkhour
      parameters:
      - description: proposal work row id to get.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalWorkhourRowOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalWorkhourRowOutputModel'
          description: Proposal work row.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get the proposal work row by guid.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
    patch:
      operationId: ProposalWorkhours_PatchProposalWorkhour
      parameters:
      - description: ID of the proposal work row.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ProposalWorkhourRowOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of ProposalWorkhourModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProposalWorkhourRowOutputModel'
                type: array
          description: updated proposal work row.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:write
      summary: Update (Patch) a proposal work row or a part of it.
      tags:
      - ProjectsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/refreshtoken:
    post:
      operationId: PublicBearerAuthentication_GetAccessTokenTokenFromRefreshToken
      requestBody:
        content:
          application/json:
            schema:
              nullable: true
              type: string
        description: Refresh token.
        x-name: refreshToken
        x-position: 1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicAuthenticationOutputModel'
          description: PublicAuthenticationOutputModel
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2: []
      summary: Get new access token using a refresh token.
      tags:
      - NoScope
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/resourceallocations:
    get:
      operationId: ResourceAllocations_GetResourceAllocations
      parameters:
      - description: "Optional: Number of rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 1
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: Get resource allocations that have been added or changed\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAllocationOutputModel'
          description: ResourceAllocation
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - resourceallocations:read
      summary: Get resource allocations
      tags:
      - ResourceallocationsRead
      x-accepts:
      - application/json
    post:
      operationId: ResourceAllocations_PostResourceAllocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceAllocationInputModel'
        description: ResourceAllocationInputModel
        x-name: resourceAllocation
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAllocationOutputModel'
          description: Created resource allocation
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - resourceallocations:write
      summary: Insert a resource allocation
      tags:
      - ResourceallocationsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/resourceallocations/allocations:
    post:
      operationId: ResourceAllocations_PostResourceAllocations
      parameters:
      - description: "Optional: Number of rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Optional: Get resource allocations that have been added or changed\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceAllocationCriteriaModel'
        description: resourceAllocationCriteriaModel
        x-name: resourceAllocationCriteriaModel
        x-position: 1
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ResourceAllocationOutputModel'
                type: array
          description: ResourceAllocationModel
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - resourceallocations:read
      summary: Get resource allocations (its POST because of being able to accommodate
        more filters)
      tags:
      - ResourceallocationsRead
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/resourceallocations/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if resource\
        \ allocation can't be found."
      operationId: ResourceAllocations_DeleteResourceAllocation
      parameters:
      - description: ID of the resource allocation to delete
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ResourceAllocationOutputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - resourceallocations:delete
      summary: Delete an resource allocation
      tags:
      - ResourceallocationsDelete
      x-accepts:
      - application/json
    get:
      operationId: ResourceAllocations_GetResourceAllocation
      parameters:
      - description: GUID used to get the resource allocation.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ResourceAllocationOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAllocationOutputModel'
          description: ResourceAllocation
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - resourceallocations:read
      summary: Get resource allocation by ID
      tags:
      - ResourceallocationsRead
      x-accepts:
      - application/json
    patch:
      operationId: ResourceAllocations_PatchResourceAllocation
      parameters:
      - description: ID of the resource allocation
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: ResourceAllocationOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of ResourceAllocationModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ResourceAllocationOutputModel'
                type: array
          description: List of updated activities
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - resourceallocations:write
      summary: Update (Patch) a resource allocation or a part of it
      tags:
      - ResourceallocationsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/roleallocations:
    get:
      operationId: RoleAllocations_GetRoleAllocations
      parameters:
      - description: Starting date from which to get the role allocations. If end
          date is not specified on the role allocation then it will be compared with
          phase end date.
        explode: true
        in: query
        name: startDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
        x-position: 1
      - description: "Optional: Ending date to which to get the role allocations.\
          \ If start date is not specified on the role allocation then it will be\
          \ compared with phase start date."
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: Page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Optional: How many rows to fetch, Default all."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      - description: "Optional: Calculates the hours based on sales probability set\
          \ for the project. Default is true."
        explode: true
        in: query
        name: useSalesProbability
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: Role IDs."
        explode: true
        in: query
        name: roleGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 6
        x-relation-guid: RoleOutputModel
      - description: "Optional: Phase IDs."
        explode: true
        in: query
        name: phaseGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 7
        x-relation-guid: PhaseOutputModel
      - description: "Optional: Project IDs."
        explode: true
        in: query
        name: projectGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 8
        x-relation-guid: ProjectOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleAllocationOutputModel'
                type: array
          description: RoleAllocationModel.
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - resourceallocations:read
      summary: Get role allocations.
      tags:
      - ResourceallocationsRead
      x-accepts:
      - application/json
    post:
      operationId: RoleAllocations_PostRoleAllocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAllocationInputModel'
        description: Role allocation to insert.
        x-name: roleAllocation
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAllocationOutputModel'
          description: RoleAllocationModel.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - resourceallocations:write
      summary: Insert a role allocation.
      tags:
      - ResourceallocationsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/roleallocations/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if role\
        \ can't be found."
      operationId: RoleAllocations_DeleteRoleAllocation
      parameters:
      - description: ID for the role allocation to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: RoleAllocationOutputModel
      responses:
        "204":
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - resourceallocations:delete
      summary: Delete a role allocation.
      tags:
      - ResourceallocationsDelete
      x-accepts:
      - application/json
    get:
      operationId: RoleAllocations_GetRoleAllocation
      parameters:
      - description: ID used to get the role allocation.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: RoleAllocationOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAllocationOutputModel'
          description: RoleAllocationModel.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - resourceallocations:read
      summary: Get role allocation by GUID.
      tags:
      - ResourceallocationsRead
      x-accepts:
      - application/json
    patch:
      operationId: RoleAllocations_PatchRoleAllocation
      parameters:
      - description: ID of the role allocation.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: RoleAllocationOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of RoleAllocationModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleAllocationOutputModel'
                type: array
          description: RoleAllocationModel.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - resourceallocations:write
      summary: Update (Patch) a role allocation.
      tags:
      - ResourceallocationsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/roles:
    get:
      operationId: Roles_GetRoles
      parameters:
      - description: "If not given, return all roles, if given as true return only\
          \ active roles, if given as false returns only inactive roles."
        explode: true
        in: query
        name: isActive
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: Page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default all."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Get roles that have been added or changed after this\
          \ date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleOutputModel'
                type: array
          description: All the roles.
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get roles.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: Roles_PostRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleInputModel'
        description: RoleInputModel.
        x-name: role
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleOutputModel'
          description: Created role.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a role.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/roles/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if role\
        \ can't be found."
      operationId: Roles_DeleteRole
      parameters:
      - description: ID for the role to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: RoleOutputModel
      responses:
        "204":
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete a role.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: Roles_GetRole
      parameters:
      - description: Id used to get the role.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: RoleOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleOutputModel'
          description: RoleOutputModel.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get role by GUID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: Roles_PatchRole
      parameters:
      - description: ID of the role.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: RoleOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of RoleInputModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleOutputModel'
                type: array
          description: list of updated roles.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a role or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/rootphaseswithhierarchy:
    get:
      operationId: Phases_GetRootPhases
      parameters:
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - explode: true
        in: query
        name: customerGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 3
      - explode: true
        in: query
        name: projectGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 4
      - explode: true
        in: query
        name: projectKeywordGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 5
      - explode: true
        in: query
        name: projectStatusTypeGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 6
      - explode: true
        in: query
        name: salesPersonGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 7
      - explode: true
        in: query
        name: projectOwnerGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 8
      - explode: true
        in: query
        name: businessUnitGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 9
      - explode: true
        in: query
        name: customerOwnerGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 10
      - explode: true
        in: query
        name: salesStatusTypeGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 11
      - explode: true
        in: query
        name: openProjects
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 12
      - explode: true
        in: query
        name: projectMemberUserGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 13
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PhaseOutputModel'
                type: array
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Get a list of root phases with information about hierarchy.
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/salesaccounts:
    get:
      operationId: SalesAccounts_GetSalesAccounts
      parameters:
      - description: "If not given, return all Sales accounts, if given as true return\
          \ only active Sales accounts, if given as false returns only inactive Sales\
          \ accounts."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from cost account name or identifier."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=Name&sortings[0].value=Desc\
          \ &sortings[1].key=Identifier&sortings[1].value=Asc\"."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SalesAccountModel'
                type: array
          description: All the sales accounts.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get sales accounts.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: SalesAccounts_PostSalesAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesAccountModel'
        description: SalesAccountModel.
        x-name: salesAccount
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesAccountModel'
          description: Created sales account.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a sales account.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/salesaccounts/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if sales\
        \ account can't be found."
      operationId: SalesAccounts_DeleteSalesAccount
      parameters:
      - description: ID for the sales account to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: SalesAccountModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete a sales account.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: SalesAccounts_GetSalesAccount
      parameters:
      - description: Id used to get the sales account.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: SalesAccountModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesAccountModel'
          description: SalesAccountModel.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get sales account by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: SalesAccounts_PatchSalesAccount
      parameters:
      - description: ID of the sales account.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: SalesAccountModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of SalesAccountModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SalesAccountModel'
                type: array
          description: list of updated sales account.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a sales account or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/salescases:
    get:
      operationId: Projects_GetSalesCases
      parameters:
      - explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - explode: true
        in: query
        name: customerGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 3
      - explode: true
        in: query
        name: currencyGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 4
      - explode: true
        in: query
        name: projectGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 5
      - explode: true
        in: query
        name: projectKeywordGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 6
      - explode: true
        in: query
        name: projectStatusTypeGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 7
      - explode: true
        in: query
        name: salesPersonGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 8
      - explode: true
        in: query
        name: projectOwnerGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 9
      - explode: true
        in: query
        name: businessUnitGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 10
      - explode: true
        in: query
        name: minimumBillableAmount
        required: false
        schema:
          format: double
          nullable: true
          type: number
        style: form
        x-position: 11
      - explode: true
        in: query
        name: customerOwnerGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 12
      - explode: true
        in: query
        name: invoiceableDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 13
      - explode: true
        in: query
        name: marketSegmentationGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 14
      - explode: true
        in: query
        name: salesStatusTypeGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 15
      - explode: true
        in: query
        name: isClosed
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 16
      - explode: true
        in: query
        name: hasRecurringFees
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 17
      - explode: true
        in: query
        name: companyCurrencyGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 18
      - explode: true
        in: query
        name: projectMemberUserGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 19
      - explode: true
        in: query
        name: numbers
        required: false
        schema:
          items:
            format: int64
            type: integer
          nullable: true
          type: array
        style: form
        x-position: 20
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectOutputModel'
                type: array
          description: Projects
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - projects:read
      summary: Gets the sales cases (sales status is in progress)
      tags:
      - ProjectsRead
      x-accepts:
      - application/json
  /v1/salesstatustypes:
    get:
      operationId: SalesStatusTypes_GetSalesStatusTypes
      parameters:
      - description: "If not given, return all sales status types, if given as true\
          \ return only active sales status types, if given as false returns only\
          \ inactive sales status types"
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: Get sales status types of the sales state."
        explode: true
        in: query
        name: salesState
        required: false
        schema:
          $ref: '#/components/schemas/SalesStatusType'
        style: form
        x-position: 2
      - description: "Optional: First row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      - description: "Optional: Text to search from sales status type name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 5
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 6
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=Name&sortings[0].value=Desc\
          \ &sortings[1].key=Code&sortings[1].value=Asc\""
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 7
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SalesStatusTypeOutputModel'
                type: array
          description: Sales status types
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the sales status types
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: SalesStatusTypes_PostSalesStatusType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesStatusTypeInputModel'
        description: salesStatusType
        x-name: salesStatusType
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesStatusTypeOutputModel'
          description: Sales status type
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a sales status type
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/salesstatustypes/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if sales\
        \ status type can't be found."
      operationId: SalesStatusTypes_DeleteSalesStatusType
      parameters:
      - description: ID for the sales status type to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: SalesStatusTypeOutputModel
      - description: "Optional: ID of the sales status type to which to move usages\
          \ of this sales status type. Default null. If sales status type is in use\
          \ and usages aren't moved the deletion might fail."
        explode: true
        in: query
        name: moveUsagesToGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
        x-relation-guid: SalesStatusTypeOutputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete an sales status type.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: SalesStatusTypes_GetSalesStatusType
      parameters:
      - description: GUID used to get the sales status type.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: SalesStatusTypeOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesStatusTypeOutputModel'
          description: Sales status type
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get sales status type by ID
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: SalesStatusTypes_PatchSalesStatusType
      parameters:
      - description: ID of the sales status type
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: SalesStatusTypeOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of salesStatusType
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SalesStatusTypeOutputModel'
                type: array
          description: List of updated sales status types
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) an sales status type or a part of it
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/signout:
    post:
      operationId: PublicBearerAuthentication_Logout
      requestBody:
        content:
          application/json:
            schema:
              nullable: true
              type: string
        x-name: refreshToken
        x-position: 1
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2: []
      summary: Logout. Invalidates refresh token. Access token will be invalid when
        it expires.
      tags:
      - NoScope
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/octet-stream
  /v1/timeentries:
    get:
      operationId: TimeEntries_GetTimeEntries
      parameters:
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 1
      - description: "Optional: Filters time entries for given phases."
        explode: true
        in: query
        name: phaseGuid
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 2
        x-relation-guid: PhaseOutputModel
      - description: "Optional: Filters time entries for given time entry types."
        explode: true
        in: query
        name: timeEntryTypeGuid
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 3
        x-relation-guid: TimeEntryTypeModel
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      - description: "Optional: Get time entries that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TimeEntryModel'
                type: array
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - hours:read
      summary: Get the time entries.
      tags:
      - HoursRead
      x-accepts:
      - application/json
    post:
      operationId: TimeEntries_PostTimeEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeEntryModel'
        description: TimeEntryModel.
        x-name: timeEntry
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TimeEntryModel'
                type: array
          description: Created time entry.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - hours:write
      summary: Insert a time entry.
      tags:
      - HoursWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/timeentries/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: TimeEntries_DeleteTimeEntry
      parameters:
      - description: GUID used to delete the time entry.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TimeEntryModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - hours:delete
      summary: Deletes a time entry.
      tags:
      - HoursDelete
      x-accepts:
      - application/json
    get:
      operationId: TimeEntries_GetTimeEntry
      parameters:
      - description: Id used to get the time entry.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TimeEntryModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntryModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - hours:read
      summary: Get time entry by ID.
      tags:
      - HoursRead
      x-accepts:
      - application/json
    patch:
      operationId: TimeEntries_PatchTimeEntry
      parameters:
      - description: ID of the time entry.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TimeEntryModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of TimeEntryModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TimeEntryModel'
                type: array
          description: List of updated time entries.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - hours:write
      summary: Update (Patch) a time entry or a part of it.
      tags:
      - HoursWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/timeentrytypes:
    get:
      operationId: TimeEntryTypes_GetTimeEntryTypes
      parameters:
      - description: "Filter the time entry types. If true/false, only the active/inactive\
          \ ones are returned. If null, all the time entry types are returned."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from time entry type name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Calculates the total row count."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=name&sortings[0].value=Asc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TimeEntryTypeModel'
                type: array
          description: Projects.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all time entry types.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: TimeEntryTypes_PostTimeEntryType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeEntryTypeModel'
        description: TimeEntryTypeModel.
        x-name: timeEntryTypeModel
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntryTypeModel'
          description: Created time entry type.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a time entry type.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/timeentrytypes/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: TimeEntryTypes_DeleteTimeEntryType
      parameters:
      - description: GUID used to delete the time entry type.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TimeEntryTypeModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Deletes a time entry type.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: TimeEntryTypes_GetTimeEntryType
      parameters:
      - description: ID used to get the time entry type.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TimeEntryTypeModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntryTypeModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get time entry type by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: TimeEntryTypes_PatchTimeEntryType
      parameters:
      - description: ID of the time entry type.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TimeEntryTypeModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of TimeEntryTypeModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TimeEntryTypeModel'
                type: array
          description: Updated time entry type model.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a time entry type or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/token:
    post:
      operationId: PublicBearerAuthentication_GetLoginToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCredentials'
        description: ClientCredentials of the client.
        x-name: credentials
        x-position: 1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicAuthenticationOutputModel'
          description: PublicAuthenticationOutputModel
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2: []
      summary: Can be used to get the login information and access token for the api
        client.
      tags:
      - NoScope
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/travelexpensetypecountrysettings:
    post:
      operationId: TravelExpenseTypeCountrySettings_PostTravelExpenseTypeCountrySettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelExpenseTypeCountrySettingsModel'
        description: Travel expense type country setting model
        x-name: model
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelExpenseTypeCountrySettingsModel'
          description: Added travel expense type country setting
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a travel expense type country setting
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/travelexpensetypecountrysettings/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if travel\
        \ expense type country setting can't be found."
      operationId: TravelExpenseTypeCountrySettings_DeleteTravelExpenseTypeCountrySetting
      parameters:
      - description: GUID used to delete the travel expense type country setting.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TravelExpenseTypeCountrySettingsModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Deletes a travel expense type country setting
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    patch:
      operationId: TravelExpenseTypeCountrySettings_PatchTravelExpenseTypeCountrySettings
      parameters:
      - description: ID of the travel expense type country setting
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TravelExpenseTypeCountrySettingsModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of TravelExpenseTypeCountrySettingsModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TravelExpenseTypeCountrySettingsModel'
                type: array
          description: List of updated travel expense type country settings
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a travel expense type country setting
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/travelexpensetypes:
    get:
      operationId: TravelExpenseTypes_GetTravelExpenseTypes
      parameters:
      - description: "If not given, return all travel expense types, if given as true\
          \ return only active travel expense types, if given as false returns only\
          \ inactive travel expense types."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default all."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Searched string: part of name or code."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Code of the travel expense type."
        explode: true
        in: query
        name: code
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 5
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 6
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=IsActive&sortings[0].value=Asc&sortings[1].key=Name&sortings[1].value=Desc."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 7
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TravelExpenseTypeOutputModel'
                type: array
          description: All the travel expense types.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all the travel expense types.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: TravelExpenseTypes_PostTravelExpenseType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelExpenseTypeInputModel'
        description: TravelExpenseTypeInputModel.
        x-name: travelExpenseType
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelExpenseTypeOutputModel'
          description: Created travel expense type.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a new travel expense type.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/travelexpensetypes/{guid}:
    delete:
      operationId: TravelExpenseTypes_DeleteTravelExpenseType
      parameters:
      - description: Guid for the travel expense type to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TravelExpenseTypeOutputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Deletes a travel expense type.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: TravelExpenseTypes_GetTravelExpenseType
      parameters:
      - description: GUID used to get the travel expense type.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TravelExpenseTypeOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelExpenseTypeOutputModel'
          description: Travel expense type.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get travel expense type by guid.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: TravelExpenseTypes_PatchTravelExpenseType
      parameters:
      - description: Guid of the travel expense type.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TravelExpenseTypeOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of TravelExpenseTypeInputModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TravelExpenseTypeOutputModel'
                type: array
          description: List of updated travel expense types.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) an travel expense type or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/travelexpensetypes/{travelExpenseTypeGuid}/travelexpensetypecountrysettings:
    get:
      operationId: TravelExpenseTypeCountrySettings_GetTravelExpenseTypeCountrySettings
      parameters:
      - description: Guid of the travel expense type.
        explode: false
        in: path
        name: travelExpenseTypeGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TravelExpenseTypeOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TravelExpenseTypeCountrySettingsModel'
                type: array
          description: All the TravelExpenseCountrySettings (tax related information)
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all country settings for a travel expense type
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/travelprices/{guid}:
    get:
      operationId: TravelPrices_GetTravelPrice
      parameters:
      - description: Id used to get the travel price.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TravelPriceOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelPriceOutputModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get travel price by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/travelreimbursements:
    get:
      operationId: TravelReimbursements_GetTravelReimbursements
      parameters:
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Get travel reimbursements that have been added or\
          \ changed after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Optional: List of travel reimbursement status ids."
        explode: true
        in: query
        name: travelReimbursementStatusGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 4
        x-relation-guid: TravelReimbursementStatusModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TravelReimbursementOutputModel'
                type: array
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - travels:read
      summary: Get travel reimbursements.
      tags:
      - TravelsRead
      x-accepts:
      - application/json
    post:
      operationId: TravelReimbursements_PostTravelReimbursement
      parameters:
      - description: "Optional: Add all of user's unreimbursed travel expenses to\
          \ reimbursement. Default is true. If TravelExpenseReimbursementStartDate\
          \ is given in organization settings, travel expenses are added from that\
          \ date onwards. If value is false then expenses from includedProjectTravelExpenses\
          \ list are added."
        explode: true
        in: query
        name: addAllUnreimbursedTravelExpenses
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: A list of included projectTravelExpense GUIDs belonging\
          \ to the user. If addAllUnreimbursedTravelExpenses is true then this list\
          \ is ignored."
        explode: true
        in: query
        name: includedProjectTravelExpenses
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelReimbursementInputModel'
        description: TravelReimbursementModel
        x-name: model
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelReimbursementOutputModel'
          description: Added travel reimbursement
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - travels:write
      summary: Add a travel reimbursement
      tags:
      - TravelsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/travelreimbursements/{guid}:
    delete:
      operationId: TravelReimbursements_DeleteTravelReimbursement
      parameters:
      - description: GUID of travel reimbursement
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TravelReimbursementOutputModel
      responses:
        "204":
          description: No Content (204) if succeeded.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - travels:delete
      summary: Delete a travel reimbursement
      tags:
      - TravelsDelete
      x-accepts:
      - application/json
    get:
      operationId: TravelReimbursements_GetTravelReimbursement
      parameters:
      - description: ID of travel reimbursement
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TravelReimbursementOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelReimbursementOutputModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - travels:read
      summary: Get travel reimbursement by ID
      tags:
      - TravelsRead
      x-accepts:
      - application/json
    patch:
      operationId: TravelReimbursements_PatchTravelReimbursement
      parameters:
      - description: ID of the travel reimbursement
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TravelReimbursementOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TravelReimbursementOutputModel'
                type: array
          description: Updated travel reimbursement
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - travels:write
      summary: Update (Patch) a travel reimbursement
      tags:
      - TravelsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/travelreimbursements/{guid}/pdf:
    get:
      operationId: Pdf_GetTravelReimbursementPdf
      parameters:
      - description: The travel reimbursement GUID.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TravelReimbursementOutputModel
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: Get a travel reimbursement PDF
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - files:read
      summary: Get a travel reimbursement PDF.
      tags:
      - FilesRead
      x-accepts:
      - application/json
      - application/pdf
  /v1/travelreimbursements/{travelReimbursementGuid}/projecttravelexpenses:
    get:
      operationId: ProjectTravelExpenses_GetProjectTravelExpensesForTravelReimbursement
      parameters:
      - description: "Optional: ID of the travel reimbursement"
        explode: false
        in: path
        name: travelReimbursementGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TravelReimbursementOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Class of the expense. Mileage, DailyAllowance or OtherTravelExpense"
        explode: true
        in: query
        name: expenseClass
        required: false
        schema:
          $ref: '#/components/schemas/ExpensesClass'
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTravelExpenseOutputModel'
                type: array
          description: ProjectTravelExpenseOutputModel
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - travels:read
      summary: Get all the project travel expenses for a travel reimbursement
      tags:
      - TravelsRead
      x-accepts:
      - application/json
  /v1/travelreimbursementstatuses:
    get:
      operationId: TravelReimbursementStatus_GetTravelReimbursementStatuses
      parameters:
      - description: "Optional: Filter the travel reimbursement statuses. If true/false,\
          \ only the active/inactive ones are returned. If null, all the travel reimbursement\
          \ statuses are returned."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Text to search from travel reimbursement name."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=name&sortings[0].value=Asc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TravelReimbursementStatusModel'
                type: array
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get the travel reimbursement statuses.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: TravelReimbursementStatus_PostTravelReimbursementStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelReimbursementStatusModel'
        description: TravelReimbursementStatusModel.
        x-name: travelReimbursementStatus
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelReimbursementStatusModel'
          description: Created travel reimbursement status.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a travel reimbursement status.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/travelreimbursementstatuses/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if travel\
        \ reimbursement status can't be found."
      operationId: TravelReimbursementStatus_DeleteTravelReimbursementStatus
      parameters:
      - description: ID for the travel reimbursement status to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TravelReimbursementStatusModel
      - description: "Optional: ID of the travel reimbursement status to which to\
          \ move usages of this travel reimbursement status. Default null. If travel\
          \ reimbursement status is in use and usages aren't moved the deletion might\
          \ fail."
        explode: true
        in: query
        name: moveUsagesToGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
        x-relation-guid: TravelReimbursementStatusModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete a travel reimbursement status.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: TravelReimbursementStatus_GetTravelReimbursementStatus
      parameters:
      - description: reimbursement status id to get.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TravelReimbursementStatusModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelReimbursementStatusModel'
          description: TravelReimbursementStatusModel.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get the travel reimbursement statuses by guid.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: TravelReimbursementStatus_PatchTravelReimbursementStatus
      parameters:
      - description: ID of the travel reimbursement status.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: TravelReimbursementStatusModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of TravelReimbursementStatusModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TravelReimbursementStatusModel'
                type: array
          description: list of updated travel reimbursement statuses.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a travel reimbursement status or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/users:
    get:
      operationId: Users_GetUsers
      parameters:
      - explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "If not given, return all users, if given as true return only\
          \ active users, if given as false returns only inactive users"
        explode: true
        in: query
        name: isActive
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 3
      - description: "Optional: ID of the business unit of the user. If not provided,\
          \ returns for all business units. Default all."
        explode: true
        in: query
        name: businessUnitGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 4
        x-relation-guid: BusinessUnitModel
      - description: "Optional: ID of the keyword of the user. If not provided, returns\
          \ for all keywords. Default all."
        explode: true
        in: query
        name: keywordGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 5
        x-relation-guid: UserKeywordModel
      - description: "Optional: Get users that have been added or changed after this\
          \ date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 6
      - description: "Optional: ID of the supervisor to get subordinates for."
        explode: true
        in: query
        name: supervisorUserGuids
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 7
        x-relation-guid: UserOutputModel
      - description: "Optional: Code of the user."
        explode: true
        in: query
        name: code
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 8
      - description: "Optional: Email address of the user."
        explode: true
        in: query
        name: email
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 9
      - description: "Optional: Filter users by purpose."
        explode: true
        in: query
        name: purpose
        required: false
        schema:
          $ref: '#/components/schemas/GetUsersPurpose'
        style: form
        x-position: 10
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserOutputModel'
                type: array
          description: All the users
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:read
      summary: Get users
      tags:
      - UsersRead
      x-accepts:
      - application/json
    post:
      operationId: Users_PostUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInputModel'
        description: UserModel.
        x-name: user
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutputModel'
          description: Created user.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:write
      summary: Insert an user.
      tags:
      - UsersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/users/customproperties:
    get:
      operationId: UserCustomProperties_GetUserCustomProperties
      parameters:
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Get only active or inactive user custom properties."
        explode: true
        in: query
        name: isActive
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 3
      - description: "Optional: Is the customer property used in any custom property\
          \ usage."
        explode: true
        in: query
        name: isInUse
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 4
      - description: "Optional: Get custom properties that have been added or changed\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserCustomPropertyOutputModel'
                type: array
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get the user custom properties.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: UserCustomProperties_PostUserCustomProperty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCustomPropertyInputModel'
        description: UserCustomPropertyModel.
        x-name: customProperty
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCustomPropertyOutputModel'
          description: Created user custom property.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a user custom property.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/users/customproperties/usercustompropertyselectionitems:
    post:
      operationId: UserCustomPropertySelectionItems_PostUserCustomPropertySelectionItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCustomPropertySelectionItemInputModel'
        description: UserPropertySelectionItemInputModel.
        x-name: userCustomPropertySelectionItem
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCustomPropertySelectionItemOutputModel'
          description: Created user custom property.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a user custom property selection item.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/users/customproperties/usercustompropertyselectionitems/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: UserCustomPropertySelectionItems_DeleteUserCustomPropertySelectionItem
      parameters:
      - description: GUID used to delete the user custom property selection item.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserCustomPropertySelectionItemInputModel
      responses:
        "204":
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Deletes a user custom property selection item.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: UserCustomPropertySelectionItems_GetUserCustomPropertySelectionItem
      parameters:
      - description: Id used to get the user custom property selection item.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserCustomPropertySelectionItemOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCustomPropertySelectionItemOutputModel'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get user custom property selection item by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: UserCustomPropertySelectionItems_PatchUserCustomPropertySelectionItem
      parameters:
      - description: ID of the user custom property selection item.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserCustomPropertySelectionItemInputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of UserCustomPropertySelectionItemInputModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserCustomPropertySelectionItemOutputModel'
                type: array
          description: List of updated user custom properties.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a user custom property selection item or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/users/customproperties/{customPropertyGuid}/usercustompropertyselectionitems:
    get:
      operationId: UserCustomPropertySelectionItems_GetUserCustomPropertySelectionItems
      parameters:
      - description: Custom property id used to get the user custom property selection
          items.
        explode: false
        in: path
        name: customPropertyGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: CustomPropertyModel
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Get only active or inactive selection items."
        explode: true
        in: query
        name: isActive
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 3
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: Get custom property selection items that have been\
          \ added or changed after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserCustomPropertySelectionItemOutputModel'
                type: array
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get the user custom properties.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/users/customproperties/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: UserCustomProperties_DeleteUserCustomProperty
      parameters:
      - description: GUID used to delete the user custom property.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserCustomPropertyOutputModel
      responses:
        "204":
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Deletes a user custom property.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: UserCustomProperties_GetUserCustomProperty
      parameters:
      - description: Id used to get the user custom property.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserCustomPropertyOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCustomPropertyOutputModel'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get user custom property by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: UserCustomProperties_PatchUserCustomProperty
      parameters:
      - description: "ID of the user custom property Can also be comma separate list\
          \ of IDs to patch multiple user custom properties with one call. When multiple\
          \ IDs are given, returns model which has list of succeeded user custom properties\
          \ and list of errors."
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserCustomPropertyOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of UserCustomPropertyModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserCustomPropertyOutputModel'
                type: array
          description: List of updated user custom properties.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a user custom property or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/users/customvalues:
    post:
      operationId: UserCustomValues_PostUserCustomValue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCustomValueInputModel'
        description: UserCustomValueModel.
        x-name: userCustomValue
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserCustomValueOutputModel'
                type: array
          description: Created user custom value.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:write
      summary: Insert a user custom value.
      tags:
      - UsersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/users/customvalues/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: UserCustomValues_DeleteUserCustomValue
      parameters:
      - description: GUID used to delete the user custom value.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserCustomValueOutputModel
      responses:
        "204":
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:delete
      summary: Deletes a user custom value.
      tags:
      - UsersDelete
      x-accepts:
      - application/json
    get:
      operationId: UserCustomValues_GetUserCustomValue
      parameters:
      - description: Id used to get the user custom value.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserCustomValueOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCustomValueOutputModel'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:read
      summary: Get user custom value by ID.
      tags:
      - UsersRead
      x-accepts:
      - application/json
    patch:
      operationId: UserCustomValues_PatchUserCustomValue
      parameters:
      - description: "ID of the user custom value Can also be comma separate list\
          \ of IDs to patch multiple user custom values with one call. When multiple\
          \ IDs are given, returns model which has list of succeeded user custom values\
          \ and list of errors."
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserCustomValueOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of UserCustomValueModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserCustomValueOutputModel'
                type: array
          description: List of updated user custom values.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:write
      summary: Update (Patch) a user custom value or a part of it.
      tags:
      - UsersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/users/{guid}:
    delete:
      description: No Content (204) if succeeded. Bad Request (400) if user can't
        be deleted. Not Found (404) if the user can't be found.
      operationId: Users_DeleteUser
      parameters:
      - description: ID of the user.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:delete
      summary: Delete an user.
      tags:
      - UsersDelete
      x-accepts:
      - application/json
    get:
      operationId: Users_GetUser
      parameters:
      - description: GUID used to get the user.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutputModel'
          description: User.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:read
      summary: Get user by ID.
      tags:
      - UsersRead
      x-accepts:
      - application/json
    patch:
      operationId: Users_PatchUser
      parameters:
      - description: ID of the user.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of UserModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserOutputModel'
                type: array
          description: List of updated users.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:write
      summary: Update (Patch) an user or a part of it.
      tags:
      - UsersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/users/{userGuid}/customvalues:
    get:
      operationId: UserCustomValues_GetUserCustomValues
      parameters:
      - description: ID of the user.
        explode: false
        in: path
        name: userGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Get only values of active or inactive user custom\
          \ properties."
        explode: true
        in: query
        name: isActive
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 4
      - description: "Optional: List of target for which to get the values."
        explode: true
        in: query
        name: targets
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 5
      - description: "Optional: Get user custom values that have been added or changed\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserCustomValueOutputModel'
                type: array
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:read
      summary: Get the user custom values.
      tags:
      - UsersRead
      x-accepts:
      - application/json
  /v1/users/{userGuid}/flextime:
    get:
      operationId: Flextime_GetFlextime
      parameters:
      - description: Id of the user.
        explode: false
        in: path
        name: userGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      - description: Date for which to get the balance. Max 12 months into the future.
        explode: true
        in: query
        name: eventDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlextimeModel'
          description: FlextimeModel.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:read
      summary: |-
        Get the flextime balance for a user for a specified date. Total balance is returned for the given date. Month balance is the balance for the month of the given date.
        Values are returned only if the advanced time tracking add-on is active.
      tags:
      - UsersRead
      x-accepts:
      - application/json
  /v1/users/{userGuid}/flextimeadjustments:
    get:
      operationId: FlextimeAdjustments_GetFlextimeAdjustments
      parameters:
      - description: ID of the user for whom to get the adjustments.
        explode: false
        in: path
        name: userGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlextimeAdjustmentOutputModel'
                type: array
          description: List of Flextime Adjustments.
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Addon required
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:read
      summary: Get the Flextime Adjustments.
      tags:
      - UsersRead
      x-accepts:
      - application/json
  /v1/users/{userGuid}/keywords:
    get:
      operationId: Keywords_GetUserKeywords
      parameters:
      - description: ID of the user for who keywords are requested.
        explode: false
        in: path
        name: userGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      - description: "If not given, return all Keywords, if given as true return only\
          \ active Keywords, if given as false returns only inactive Keywords."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=Keyword&sortings[0].value=Desc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserKeywordModel'
                type: array
          description: Keywords.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:read
      summary: Get all the keywords for user.
      tags:
      - UsersRead
      x-accepts:
      - application/json
  /v1/users/{userGuid}/keywords/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if the\
        \ keyword or the link can't be found."
      operationId: Keywords_DeleteUserKeyword
      parameters:
      - explode: false
        in: path
        name: userGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      - explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 2
        x-relation-guid: KeywordModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:delete
      summary: Delete a keyword from the user
      tags:
      - UsersDelete
      x-accepts:
      - application/json
    post:
      operationId: Keywords_LinkKeywordToUser
      parameters:
      - explode: false
        in: path
        name: userGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      - explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 2
        x-relation-guid: KeywordModel
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserKeywordModel'
          description: Created user keyword link.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:write
      summary: Link existing keyword to user
      tags:
      - UsersWrite
      x-accepts:
      - application/json
  /v1/users/{userGuid}/projectfees:
    get:
      operationId: ProjectFees_GetUserProjectFees
      parameters:
      - description: ID of the user.
        explode: false
        in: path
        name: userGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: Number of rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: ProjectFee's product type. if given, it filters the\
          \ projectFees by the given type. FixedFees (Own work), Materials (Products),\
          \ Subcontracting."
        explode: true
        in: query
        name: productType
        required: false
        schema:
          $ref: '#/components/schemas/ProductType'
        style: form
        x-position: 4
      - description: "Optional: Filter the project fees. If true/false, only the billable/non-billable\
          \ ones are returned. If null, all are returned. Default is null."
        explode: true
        in: query
        name: isBillable
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 5
      - description: "Optional: Filter the project fees. If true/false, only the ones\
          \ that are/are not invoiced are returned. If null, all are returned. Default\
          \ is null."
        explode: true
        in: query
        name: isBilled
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 6
      - description: "Optional: Filter the project fees. When given, only the ones\
          \ that are invoiceable before or on the given date are returned. Default\
          \ is null."
        explode: true
        in: query
        name: invoiceableDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 7
      - description: "Optional: Filter the project fees. If true/false, only the ones\
          \ are connected/not-connected to a phase are returned. If null, all are\
          \ returned. Default is null."
        explode: true
        in: query
        name: hasPhase
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 8
      - description: Start date search criteria. Only get project fees that have event
          date from this date.
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 9
      - description: End date search criteria. Only get project fees that have event
          date until this date.
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 10
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectFeeOutputModel'
                type: array
          description: ProjectFees
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - fees:read
      summary: Get all the projectFees for a user
      tags:
      - FeesRead
      x-accepts:
      - application/json
  /v1/users/{userGuid}/projectmembercostexceptions:
    get:
      operationId: ProjectMemberCostExceptions_GetProjectMemberCostExceptionsForUser
      parameters:
      - description: Guid of the user.
        explode: false
        in: path
        name: userGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      - description: Search only for open or closed projects. Default all projects.
        explode: true
        in: query
        name: isProjectClosed
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectMemberCostExceptionOutputModel'
                type: array
          description: All the member cost exceptions for one project.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:read
      summary: Get all cost exceptions of project members for user.
      tags:
      - UsersRead
      x-accepts:
      - application/json
  /v1/users/{userGuid}/projecttravelexpenses:
    get:
      operationId: ProjectTravelExpenses_GetProjectTravelExpensesForUser
      parameters:
      - description: ID of the user.
        explode: false
        in: path
        name: userGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      - description: "Optional: starting date from which to get the travel expenses.\
          \ Default all."
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: starting date to which to get the travel expenses.\
          \ Default all."
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 5
      - description: "Optional: Class of the expense. Mileage, DailyAllowance or OtherTravelExpense"
        explode: true
        in: query
        name: expenseClass
        required: false
        schema:
          $ref: '#/components/schemas/ExpensesClass'
        style: form
        x-position: 6
      - description: "Optional. Filter the project travel expenses. If true/false,\
          \ only the ones that are reimbursed are returned. If null, all are returned.\
          \ Default is null."
        explode: true
        in: query
        name: isReimbursed
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 7
      - description: "Optional: Filter the project travel expenses by whether or not\
          \ the reimbursement is required. Default all."
        explode: true
        in: query
        name: isTravelReimbursementRequired
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 8
      - description: "Optional: ID of the travel reimbursement"
        explode: true
        in: query
        name: travelReimbursementGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 9
        x-relation-guid: TravelReimbursementOutputModel
      - description: "Optional: ID of the cost currency."
        explode: true
        in: query
        name: costCurrencyGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 10
        x-relation-guid: CurrencyOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTravelExpenseOutputModel'
                type: array
          description: ProjectTravelExpenseOutputModel
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - travels:read
      summary: Get all the project travel expenses for a user
      tags:
      - TravelsRead
      x-accepts:
      - application/json
  /v1/users/{userGuid}/resourceallocations/allocations:
    get:
      operationId: ResourceAllocations_GetResourceAllocationsByUserGuid
      parameters:
      - explode: false
        in: path
        name: userGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      - description: Get resource allocations with startDate. Using startDate and
          endDate or changedSince parameters are required to fetch a maximum of 30
          days
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: Get resource allocations with endDate. Using startDate and endDate
          or changedSince parameters are required to fetch a maximum of 30 days
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Optional: Get resource allocations that have been added or changed\
          \ after this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 4
      - explode: true
        in: query
        name: userLicenseTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/LicenseUserType'
          nullable: true
          type: array
        style: form
        x-position: 5
      - explode: true
        in: query
        name: phaseGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 6
        x-relation-guid: PhaseOutputModel
      - explode: true
        in: query
        name: projectGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 7
        x-relation-guid: ProjectOutputModel
      - explode: true
        in: query
        name: projectBusinessUnitGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 8
        x-relation-guid: BusinessUnitModel
      - explode: true
        in: query
        name: userBusinessUnitGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 9
        x-relation-guid: BusinessUnitModel
      - explode: true
        in: query
        name: projectManagerUserGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 10
        x-relation-guid: UserOutputModel
      - explode: true
        in: query
        name: userTagGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 11
        x-relation-guid: UserKeywordModel
      - explode: true
        in: query
        name: useSalesProbability
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-position: 12
      - explode: true
        in: query
        name: projectStatusTypeGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 13
        x-relation-guid: ProjectStatusTypeModel
      - explode: true
        in: query
        name: projectTagGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 14
        x-relation-guid: ProjectKeywordModel
      - explode: true
        in: query
        name: superiorUserGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 15
        x-relation-guid: UserOutputModel
      - explode: true
        in: query
        name: salesStatusTypeGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 16
        x-relation-guid: SalesStatusTypeOutputModel
      - explode: true
        in: query
        name: resourceAllocationGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 17
        x-relation-guid: ResourceAllocationOutputModel
      - explode: true
        in: query
        name: salesProgress
        required: false
        schema:
          $ref: '#/components/schemas/SalesProgress'
        style: form
        x-position: 18
      - description: "Optional: Number of rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 19
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 20
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAllocationOutputModel'
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - resourceallocations:read
      summary: "Get resource allocations for a user with required filters (startDate\
        \ and endDate or changedSince, max 30 days to be fetched at once)"
      tags:
      - ResourceallocationsRead
      x-accepts:
      - application/json
  /v1/users/{userGuid}/timeentries:
    get:
      operationId: TimeEntries_GetTimeEntriesForUser
      parameters:
      - description: ID of the user.
        explode: false
        in: path
        name: userGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      - description: "Optional: starting date from which to get the time entries.\
          \ Default all."
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: starting date to which to get the time entries. Default\
          \ all."
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Optional: Filters time entries for given phases."
        explode: true
        in: query
        name: phaseGuid
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 4
        x-relation-guid: PhaseOutputModel
      - description: "Optional: Filters time entries for given time entry types."
        explode: true
        in: query
        name: timeEntryTypeGuid
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 5
        x-relation-guid: TimeEntryTypeModel
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 6
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 7
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TimeEntryModel'
                type: array
          description: TimeEntries.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - hours:read
      summary: Get all the time entries for a user.
      tags:
      - HoursRead
      x-accepts:
      - application/json
  /v1/users/{userGuid}/travelexpensesfiles:
    get:
      operationId: Files_GetUsersTravelExpensesFiles
      parameters:
      - description: GUID of the user used to get the files attached to travel expenses.
        explode: false
        in: path
        name: userGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: How many rows to fetch."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: Start date to from which to check travel expenses."
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Optional: End date to check for availability until travel expenses."
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTravelExpenseFileModel'
                type: array
          description: TravelExpenseFile.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - files:read
      summary: Get all files of all travel expenses of the user.
      tags:
      - FilesRead
      x-accepts:
      - application/json
  /v1/users/{userGuid}/workcontracts:
    get:
      operationId: WorkContracts_GetWorkContractsForUser
      parameters:
      - description: Id of the user.
        explode: false
        in: path
        name: userGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkContractOutputModel'
                type: array
          description: Work contracts.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:read
      summary: Get all the work contracts for the user.
      tags:
      - UsersRead
      x-accepts:
      - application/json
  /v1/users/{userGuid}/workcontracts/current:
    get:
      operationId: WorkContracts_GetCurrentWorkContractForUser
      parameters:
      - description: Id of the user
        explode: false
        in: path
        name: userGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkContractOutputModel'
          description: Work contracts
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:read
      summary: Gets current work contract for the user
      tags:
      - UsersRead
      x-accepts:
      - application/json
  /v1/users/{userGuid}/workdays:
    get:
      operationId: Workdays_GetWorkdays
      parameters:
      - description: ID of the user.
        explode: false
        in: path
        name: userGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      - description: Start date of the workdays.
        explode: true
        in: query
        name: startDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
        x-position: 2
      - description: End date of the workdays.
        explode: true
        in: query
        name: endDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkdayModel'
                type: array
          description: User's workdays.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:read
      summary: Get workdays for a user.
      tags:
      - UsersRead
      x-accepts:
      - application/json
  /v1/users/{userGuid}/workdays/{date}:
    patch:
      operationId: Workdays_PatchWorkDay
      parameters:
      - description: ID of the user.
        explode: false
        in: path
        name: userGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      - description: Date of the workday..
        explode: false
        in: path
        name: date
        required: true
        schema:
          format: date-time
          type: string
        style: simple
        x-position: 2
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of WorkdayModel
        x-name: patchDocument
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkdayModel'
                type: array
          description: list of updated workdays
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - users:write
      summary: Update (Patch) a workday or a part of it
      tags:
      - UsersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/users/{userGuid}/workhours:
    get:
      operationId: WorkHours_GetWorkHoursForUser
      parameters:
      - description: ID of the user.
        explode: false
        in: path
        name: userGuid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: UserOutputModel
      - description: "Optional: starting date from which to get the hours. Default\
          \ all."
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "Optional: starting date to which to get the hours. Default all."
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Optional: ID of the phase to get the hours for. Default all."
        explode: true
        in: query
        name: phaseGuid
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 4
        x-relation-guid: PhaseOutputModel
      - description: "Optional: ID of the work type. Default all."
        explode: true
        in: query
        name: workTypeGuid
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
        x-position: 5
        x-relation-guid: WorkTypeOutputModel
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 6
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 7
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkHourOutputModel'
                type: array
          description: WorkHours
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - hours:read
      summary: Get all the work hours for a user
      tags:
      - HoursRead
      x-accepts:
      - application/json
  /v1/vatrates:
    get:
      operationId: VatRates_GetVatRates
      parameters:
      - description: "If not given, return all vat rates in organizations country.\
          \ If given return only for that country."
        explode: true
        in: query
        name: countryGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
        x-relation-guid: CountryModel
      - description: "If not given, return all vat rates, if given as true return\
          \ only active ones, if given as false returns only inactive ones."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VatRateOutputModel'
                type: array
          description: Vat rates
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all organization vat rates
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: VatRates_PostVatRate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VatRateInputModel'
        description: VatRateInputModel
        x-name: model
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VatRateOutputModel'
          description: Inserted vat rate
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a vat rate
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/vatrates/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Bad Request (400) if vat\
        \ rate is the default one. Not Found (404) if vat rate can't be found."
      operationId: VatRates_DeleteVatRate
      parameters:
      - description: GUID for the vat rate to delete
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: VatRateOutputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Delete a vat rate
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: VatRates_GetVatRate
      parameters:
      - description: GUID used to get the vat rate.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: VatRateOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VatRateOutputModel'
          description: Vat rate
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get a vat rate by GUID
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: VatRates_PatchVatRate
      parameters:
      - description: GUID of the vat rate
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: VatRateOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of ValueAddedTaxModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VatRateOutputModel'
                type: array
          description: list of updated vat rates
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a vat rate or a part of it
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/workcontracts:
    post:
      operationId: WorkContracts_PostWorkContract
      parameters:
      - description: Optional. Reset flextime to zero when new work contract starts
          or keep the flextime value. Default true = reset flextime.
        explode: true
        in: query
        name: resetFlextime
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-position: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkContractInputModel'
        description: WorkContractOutputModel.
        x-name: workContract
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkContractOutputModel'
          description: Created work contract.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      - ClientIdAuth: []
        OAuth2:
        - users:write
      summary: Insert a work contract.
      tags:
      - SettingsWrite
      - UsersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/workcontracts/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded. Not found (404) if work\
        \ contract can't be found."
      operationId: WorkContracts_DeleteWorkContract
      parameters:
      - description: ID for the work contract to delete.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: WorkContractOutputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      - ClientIdAuth: []
        OAuth2:
        - users:delete
      summary: Delete a work contract.
      tags:
      - SettingsDelete
      - UsersDelete
      x-accepts:
      - application/json
    get:
      operationId: WorkContracts_GetWorkContract
      parameters:
      - description: Id used to get the work contract.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: WorkContractOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkContractOutputModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      - ClientIdAuth: []
        OAuth2:
        - users:read
      summary: Get work contract by ID.
      tags:
      - SettingsRead
      - UsersRead
      x-accepts:
      - application/json
    patch:
      operationId: WorkContracts_PatchWorkContract
      parameters:
      - description: ID of the work contract.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: WorkContractOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON patch document of WorkContractOutputModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkContractOutputModel'
                type: array
          description: list of updated work contract.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      - ClientIdAuth: []
        OAuth2:
        - users:write
      summary: Update (Patch) a work contract or a part of it.
      tags:
      - SettingsWrite
      - UsersWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/workhourprices/{guid}:
    get:
      operationId: WorkHourPrices_GetWorkHourPrice
      parameters:
      - description: Id used to get the work hour price.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: WorkHourPriceOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkHourPriceOutputModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get work hour price by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
  /v1/workhours:
    get:
      operationId: WorkHours_GetWorkHours
      parameters:
      - description: "Optional: page token to fetch the next page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 2
      - description: "Optional: Get work hours that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: Billable status type
        explode: true
        in: query
        name: billableStatus
        required: false
        schema:
          $ref: '#/components/schemas/BillableStatusType'
        style: form
        x-position: 4
      - description: "Optional: Get work hours that have event date after this date\
          \ time (greater or equal)."
        explode: true
        in: query
        name: eventDateStart
        required: false
        schema:
          format: date
          nullable: true
          type: string
        style: form
        x-position: 5
      - description: "Optional: Get work hours that have event date before this date\
          \ time (less or equal)."
        explode: true
        in: query
        name: eventDateEnd
        required: false
        schema:
          format: date
          nullable: true
          type: string
        style: form
        x-position: 6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkHourOutputModel'
                type: array
          description: ""
          headers:
            NextPageToken:
              description: Page token to fetch the next page
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - hours:read
      summary: Get the work hours.
      tags:
      - HoursRead
      x-accepts:
      - application/json
    post:
      operationId: WorkHours_PostWorkHour
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkHourInputModel'
        description: WorkHourInputModel
        x-name: workHour
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkHourOutputModel'
          description: Created work hour
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - hours:write
      summary: Insert a work hour
      tags:
      - HoursWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/workhours/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: WorkHours_DeleteWorkHour
      parameters:
      - description: GUID used to delete the work hour.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: WorkHourInputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - hours:delete
      summary: Deletes a work hour.
      tags:
      - HoursDelete
      x-accepts:
      - application/json
    get:
      operationId: WorkHours_GetWorkHour
      parameters:
      - description: Id used to get the work hour.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: WorkHourOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkHourOutputModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - hours:read
      summary: Get work hour by ID
      tags:
      - HoursRead
      x-accepts:
      - application/json
    patch:
      operationId: WorkHours_PatchWorkHour
      parameters:
      - description: "ID of the work hour. Can also be comma separate list of IDs\
          \ to patch multiple work hours with one call. When multiple IDs are given,\
          \ returns model which has list of succeeded work hours and list of errors."
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: WorkHourInputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of WorkHourInputModel
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkHourOutputModel'
                type: array
          description: List of updated work hours
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - hours:write
      summary: Update (Patch) a work hour or a part of it
      tags:
      - HoursWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/worktypes:
    get:
      operationId: WorkTypes_GetWorkTypes
      parameters:
      - description: "Filter the work types. If true/false, only the active/inactive\
          \ ones are returned. If null, all the work types are returned."
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 1
      - description: "Filter the work types. If true/false, only the productive/non-productive\
          \ ones are returned. If null, all the work types are returned."
        explode: true
        in: query
        name: productive
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
        x-position: 2
      - description: "Optional: first row to fetch. Default 0 = first row."
        explode: true
        in: query
        name: firstRow
        required: false
        schema:
          default: 0
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 3
      - description: "Optional: How many rows to fetch, Default 20, maximum 100."
        explode: true
        in: query
        name: rowCount
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
        x-position: 4
      - description: "Optional: Text to search from work type name or code."
        explode: true
        in: query
        name: textToSearch
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 5
      - description: "Optional: Code of the work type."
        explode: true
        in: query
        name: code
        required: false
        schema:
          default: ""
          nullable: true
          type: string
        style: form
        x-position: 6
      - description: "Optional: Get work types that have been added or changed after\
          \ this date time (greater or equal)."
        explode: true
        in: query
        name: changedSince
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
        x-position: 7
      - description: "Optional: Calculate total number of rows."
        explode: true
        in: query
        name: calculateRowCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-position: 8
      - description: "Optional: A list of Key-Value pairs, containing names of fields\
          \ and directions by which the results should be sorted. Any sortable field\
          \ name (submodel fields not supported) in the model can be used, while value\
          \ can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=name&sortings[0].value=Asc\"\
          ."
        explode: true
        in: query
        name: sortings
        required: false
        schema:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringAndSortDirection'
          nullable: true
          type: array
        style: form
        x-position: 9
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkTypeOutputModel'
                type: array
          description: All the work types matching search criteria.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get all work types.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    post:
      operationId: WorkTypes_PostWorkType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkTypeInputModel'
        description: WorkTypeModel.
        x-name: workTypeModel
        x-position: 1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkTypeOutputModel'
          description: Created work type.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Insert a work type.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/worktypes/{guid}:
    delete:
      description: "Returns: No Content (204) if succeeded."
      operationId: WorkTypes_DeleteWorkType
      parameters:
      - description: GUID used to delete the work type.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: WorkTypeOutputModel
      - description: "Optional: ID of the work type to which to move usages of this\
          \ work type. Default null. If work type is in use and usages aren't moved\
          \ the deletion might fail."
        explode: true
        in: query
        name: moveUsagesToGuid
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
        x-relation-guid: WorkTypeOutputModel
      responses:
        "204":
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:delete
      summary: Deletes a work type.
      tags:
      - SettingsDelete
      x-accepts:
      - application/json
    get:
      operationId: WorkTypes_GetWorkType
      parameters:
      - description: Id used to get the work type.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: WorkTypeOutputModel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkTypeOutputModel'
          description: ""
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:read
      summary: Get work type by ID.
      tags:
      - SettingsRead
      x-accepts:
      - application/json
    patch:
      operationId: WorkTypes_PatchWorkType
      parameters:
      - description: ID of the work type.
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
        x-position: 1
        x-relation-guid: WorkTypeOutputModel
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              nullable: true
              type: array
        description: JSON Patch document of WorkTypeModel.
        x-name: patchDocument
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkTypeOutputModel'
                type: array
          description: List of updated work types.
        "404":
          description: Resource not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionModel'
          description: Default error response
      security:
      - ClientIdAuth: []
        OAuth2:
        - settings:write
      summary: Update (Patch) a work type or a part of it.
      tags:
      - SettingsWrite
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  schemas:
    AccessTokenCredentials:
      example:
        refresh_token: refresh_token
        code: code
        grant_type: client_credentials
        scope: scope
        client_secret: client_secret
        redirect_uri: redirect_uri
        state: state
        client_id: client_id
      properties:
        client_id:
          nullable: true
          type: string
        client_secret:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        grant_type:
          $ref: '#/components/schemas/GrantType'
        redirect_uri:
          nullable: true
          type: string
        refresh_token:
          nullable: true
          type: string
        scope:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
      type: object
    ActivityActivityType:
      example:
        name: name
        guid: guid
        category: Personal
      properties:
        category:
          $ref: '#/components/schemas/ActivityCategory'
        guid:
          minLength: 1
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
      required:
      - guid
      type: object
    ActivityCategory:
      description: ""
      enum:
      - Personal
      - Absences
      - CalendarEntry
      - SalesEvent
      - Task
      type: string
      x-enumNames:
      - Personal
      - Absences
      - CalendarEntry
      - SalesEvent
      - Task
    ActivityCustomer:
      example:
        number: 0
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        number:
          format: int64
          nullable: true
          readOnly: true
          type: integer
      type: object
    ActivityModel:
      example:
        phase:
          isLocked: true
          projectGuid: projectGuid
          projectNumber: 6
          name: name
          guid: guid
          projectOwnerGuid: projectOwnerGuid
          projectName: projectName
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        notes: notes
        isUnassigned: true
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        recurrenceRule: recurrenceRule
        hasHours: true
        endDateTime: 2000-01-23T04:56:07.000+00:00
        recurrenceType: None
        projectTaskStatus:
          name: name
          guid: guid
        recurrence:
          lastOccurrenceDateTime: 2000-01-23T04:56:07.000+00:00
          pattern:
            daily:
              everyWeekday: true
              interval: 1
            monthly:
              dayOfMonth: 5
              dayOrdinal: First
              dayOrdinalOption: Sunday
              interval: 5
            yearly:
              month: January
              dayOfMonth: 7
              dayOrdinal: null
              dayOrdinalOption: null
            weekly:
              sunday: true
              saturday: true
              tuesday: true
              friday: true
              thursday: true
              wednesday: true
              interval: 2
              monday: true
          range:
            recursUntilDate: 2000-01-23
            maxOccurrences: 9
          exceptions:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          frequency: Daily
        isAllDay: true
        ownerUser:
          code: code
          keywords:
          - guid: guid
            value: value
          - guid: guid
            value: value
          name: name
          guid: guid
        recurrenceParentActivityGuid: recurrenceParentActivityGuid
        startDateTime: 2000-01-23T04:56:07.000+00:00
        isClosed: true
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        hasDuration: true
        name: name
        guid: guid
        location: location
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        activityType:
          name: name
          guid: guid
          category: Personal
        customer:
          number: 0
          name: name
          guid: guid
      properties:
        activityType:
          $ref: '#/components/schemas/ActivityActivityType'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customer:
          $ref: '#/components/schemas/ActivityCustomer'
        endDateTime:
          format: date-time
          nullable: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        hasDuration:
          type: boolean
        hasHours:
          readOnly: true
          type: boolean
        isAllDay:
          type: boolean
        isClosed:
          type: boolean
        isUnassigned:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        location:
          maxLength: 1000
          minLength: 0
          nullable: true
          type: string
        name:
          minLength: 1
          type: string
        notes:
          nullable: true
          type: string
        ownerUser:
          $ref: '#/components/schemas/ActivityOwnerModel'
        phase:
          $ref: '#/components/schemas/ActivityPhase'
        projectTaskStatus:
          $ref: '#/components/schemas/ModelWithName'
        recurrence:
          $ref: '#/components/schemas/ActivityRecurrenceModel'
        recurrenceParentActivityGuid:
          nullable: true
          type: string
          x-relation-guid: ActivityModel
        recurrenceRule:
          nullable: true
          readOnly: true
          type: string
        recurrenceType:
          $ref: '#/components/schemas/RecurrenceType'
        startDateTime:
          format: date-time
          type: string
      required:
      - activityType
      - name
      - ownerUser
      - startDateTime
      type: object
    ActivityOwnerKeyword:
      example:
        guid: guid
        value: value
      properties:
        guid:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    ActivityOwnerModel:
      example:
        code: code
        keywords:
        - guid: guid
          value: value
        - guid: guid
          value: value
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          readOnly: true
          type: string
        guid:
          minLength: 1
          type: string
        keywords:
          items:
            $ref: '#/components/schemas/ActivityOwnerKeyword'
          nullable: true
          readOnly: true
          type: array
        name:
          nullable: true
          readOnly: true
          type: string
      required:
      - guid
      type: object
    ActivityParticipantModel:
      example:
        participantGuid: participantGuid
        mobilePhone: mobilePhone
        phone: phone
        activityGuid: activityGuid
        name: name
        guid: guid
        isActive: true
        type: User
        email: email
        status: Unknown
      properties:
        activityGuid:
          minLength: 1
          type: string
          x-relation-guid: ActivityModel
        email:
          nullable: true
          readOnly: true
          type: string
        guid:
          nullable: true
          type: string
        isActive:
          readOnly: true
          type: boolean
        mobilePhone:
          nullable: true
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
        participantGuid:
          minLength: 1
          type: string
          x-relation-guid: UserOutputModel
        phone:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/MemberStatus'
        type:
          $ref: '#/components/schemas/ParticipantType'
      required:
      - activityGuid
      - participantGuid
      type: object
    ActivityPhase:
      example:
        isLocked: true
        projectGuid: projectGuid
        projectNumber: 6
        name: name
        guid: guid
        projectOwnerGuid: projectOwnerGuid
        projectName: projectName
      properties:
        guid:
          nullable: true
          type: string
        isLocked:
          readOnly: true
          type: boolean
        name:
          nullable: true
          type: string
        projectGuid:
          nullable: true
          readOnly: true
          type: string
          x-relation-guid: ProjectOutputModel
        projectName:
          nullable: true
          readOnly: true
          type: string
        projectNumber:
          format: int64
          nullable: true
          readOnly: true
          type: integer
        projectOwnerGuid:
          nullable: true
          readOnly: true
          type: string
          x-relation-guid: UserOutputModel
      type: object
    ActivityRecurrenceModel:
      example:
        lastOccurrenceDateTime: 2000-01-23T04:56:07.000+00:00
        pattern:
          daily:
            everyWeekday: true
            interval: 1
          monthly:
            dayOfMonth: 5
            dayOrdinal: First
            dayOrdinalOption: Sunday
            interval: 5
          yearly:
            month: January
            dayOfMonth: 7
            dayOrdinal: null
            dayOrdinalOption: null
          weekly:
            sunday: true
            saturday: true
            tuesday: true
            friday: true
            thursday: true
            wednesday: true
            interval: 2
            monday: true
        range:
          recursUntilDate: 2000-01-23
          maxOccurrences: 9
        exceptions:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        frequency: Daily
      properties:
        exceptions:
          items:
            format: date-time
            type: string
          nullable: true
          readOnly: true
          type: array
        frequency:
          $ref: '#/components/schemas/RecurrenceFrequency'
        lastOccurrenceDateTime:
          format: date-time
          nullable: true
          type: string
        pattern:
          $ref: '#/components/schemas/RecurrencePattern'
        range:
          $ref: '#/components/schemas/RecurrenceRange'
      required:
      - frequency
      type: object
    ActivityTypeModel:
      example:
        isPaidLeave: true
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isDefault: true
        code: code
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        category: Personal
        isActive: true
      properties:
        category:
          $ref: '#/components/schemas/ActivityCategory'
        code:
          nullable: true
          type: string
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        isDefault:
          type: boolean
        isPaidLeave:
          nullable: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
      required:
      - category
      - name
      type: object
    AddressCountry:
      example:
        englishName: englishName
        hasRegions: NoRegion
        name: name
        guid: guid
      properties:
        englishName:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        hasRegions:
          $ref: '#/components/schemas/CountryRegionsStatus'
        name:
          nullable: true
          type: string
      type: object
    AddressCustomer:
      example:
        number: 0
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        number:
          format: int64
          nullable: true
          readOnly: true
          type: integer
      type: object
    AddressModel:
      example:
        country:
          englishName: englishName
          hasRegions: NoRegion
          name: name
          guid: guid
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        city: city
        isVisitAddress: true
        isPostalAddress: true
        countryRegion:
          name: name
          guid: guid
        postalCode: postalCode
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        isBillingAddress: true
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        phone: phone
        guid: guid
        addressline: addressline
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        fax: fax
        contacts:
        - name: name
          guid: guid
        - name: name
          guid: guid
        customer:
          number: 0
          name: name
          guid: guid
      properties:
        addressline:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        contacts:
          items:
            $ref: '#/components/schemas/ModelWithName'
          nullable: true
          type: array
          x-relation: ContactModel
        country:
          $ref: '#/components/schemas/AddressCountry'
        countryRegion:
          $ref: '#/components/schemas/ModelWithName'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customer:
          $ref: '#/components/schemas/AddressCustomer'
        fax:
          nullable: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isBillingAddress:
          type: boolean
        isPostalAddress:
          type: boolean
        isVisitAddress:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        phone:
          nullable: true
          type: string
        postalCode:
          nullable: true
          type: string
      type: object
    BankAccountFormat:
      description: ""
      enum:
      - Iban
      - Bankgiro
      type: string
      x-enumNames:
      - Iban
      - Bankgiro
    BankAccountOutputModel:
      example:
        accountNumberFormat: Iban
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        businessUnit:
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        bankName: bankName
        company:
          name: name
          guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        accountNumber: accountNumber
        isActive: true
        bic: bic
      properties:
        accountNumber:
          minLength: 1
          type: string
        accountNumberFormat:
          $ref: '#/components/schemas/BankAccountFormat'
        bankName:
          minLength: 1
          type: string
        bic:
          nullable: true
          type: string
        businessUnit:
          $ref: '#/components/schemas/ModelWithName'
        company:
          $ref: '#/components/schemas/ModelWithName'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
      required:
      - accountNumber
      - bankName
      type: object
    BillablePeriod:
      description: ""
      enum:
      - Any
      - Past
      - Future
      - NowAndPast
      - NowAndFuture
      type: string
      x-enumNames:
      - Any
      - Past
      - Future
      - NowAndPast
      - NowAndFuture
    BillableStatusType:
      description: ""
      enum:
      - Billable
      - NotBillable
      - RemovedFromInvoice
      type: string
      x-enumNames:
      - Billable
      - NotBillable
      - RemovedFromInvoice
    BillingAddressModel:
      example:
        country: country
        city: city
        postalCode: postalCode
        guid: guid
        addressline: addressline
      properties:
        addressline:
          nullable: true
          readOnly: true
          type: string
        city:
          nullable: true
          readOnly: true
          type: string
        country:
          nullable: true
          readOnly: true
          type: string
        guid:
          nullable: true
          type: string
        postalCode:
          nullable: true
          readOnly: true
          type: string
      type: object
    BillingCustomerModel:
      example:
        eInvoiceOperator: eInvoiceOperator
        name: name
        eInvoiceAddress: eInvoiceAddress
        guid: guid
      properties:
        eInvoiceAddress:
          nullable: true
          readOnly: true
          type: string
        eInvoiceOperator:
          nullable: true
          readOnly: true
          type: string
        guid:
          minLength: 1
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
      required:
      - guid
      type: object
    BillingScheduleType:
      description: ""
      enum:
      - Immediately
      - WhenPhaseCompleted
      - OnDate
      type: string
      x-enumNames:
      - Immediately
      - WhenPhaseCompleted
      - OnDate
    BusinessUnitCostCenterModel:
      example:
        identifier: identifier
        name: name
        guid: guid
      properties:
        guid:
          minLength: 1
          type: string
        identifier:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
      required:
      - guid
      type: object
    BusinessUnitModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        code: code
        costCenter:
          identifier: identifier
          name: name
          guid: guid
        companyName: companyName
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        companyGuid: companyGuid
        isActive: true
        companyCurrencyGuid: companyCurrencyGuid
        kvkNumber: kvkNumber
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        parentGuid: parentGuid
        companyCountryGuid: companyCountryGuid
        name: name
        guid: guid
        companyBusinessUnitGuid: companyBusinessUnitGuid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        vatNumber: vatNumber
      properties:
        code:
          nullable: true
          type: string
        companyBusinessUnitGuid:
          nullable: true
          readOnly: true
          type: string
          x-relation-guid: BusinessUnitModel
        companyCountryGuid:
          nullable: true
          readOnly: true
          type: string
          x-relation-guid: CountryModel
        companyCurrencyGuid:
          nullable: true
          readOnly: true
          type: string
          x-relation-guid: CurrencyOutputModel
        companyGuid:
          nullable: true
          readOnly: true
          type: string
          x-relation-guid: CompanyModel
        companyName:
          nullable: true
          readOnly: true
          type: string
        costCenter:
          $ref: '#/components/schemas/BusinessUnitCostCenterModel'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        kvkNumber:
          maxLength: 25
          minLength: 0
          nullable: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        parentGuid:
          nullable: true
          type: string
          x-relation-guid: BusinessUnitModel
        vatNumber:
          nullable: true
          type: string
      required:
      - name
      type: object
    BusinessUnitSubModel:
      example:
        code: code
        companyName: companyName
        companyCountryGuid: companyCountryGuid
        name: name
        guid: guid
        companyBusinessUnitGuid: companyBusinessUnitGuid
        companyGuid: companyGuid
        companyCurrencyGuid: companyCurrencyGuid
      properties:
        code:
          nullable: true
          type: string
        companyBusinessUnitGuid:
          nullable: true
          type: string
          x-relation-guid: BusinessUnitModel
        companyCountryGuid:
          nullable: true
          type: string
          x-relation-guid: CountryModel
        companyCurrencyGuid:
          nullable: true
          type: string
          x-relation-guid: CurrencyOutputModel
        companyGuid:
          nullable: true
          type: string
          x-relation-guid: CompanyModel
        companyName:
          nullable: true
          type: string
        guid:
          minLength: 1
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
      required:
      - guid
      type: object
    ClientCredentials:
      example:
        scope: scope
        client_secret: client_secret
        client_id: client_id
      properties:
        client_id:
          minLength: 1
          type: string
        client_secret:
          minLength: 1
          type: string
        scope:
          nullable: true
          type: string
      required:
      - client_id
      - client_secret
      type: object
    CommunicationMethodType:
      description: ""
      enum:
      - Phone
      - Fax
      - MobilePhone
      - IPPhone
      - InstantMessenger
      - EmailAddress
      type: string
      x-enumNames:
      - Phone
      - Fax
      - MobilePhone
      - IPPhone
      - InstantMessenger
      - EmailAddress
    CommunicationTypeModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
        type: Phone
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/CommunicationMethodType'
      required:
      - name
      type: object
    CommunicationTypeSubModel:
      example:
        name: name
        guid: guid
        isActive: true
        type: Phone
      properties:
        guid:
          minLength: 1
          type: string
        isActive:
          default: true
          type: boolean
        name:
          nullable: true
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/CommunicationMethodType'
      required:
      - guid
      type: object
    CompanyCountry:
      example:
        code3: code3
        englishName: englishName
        name: name
        guid: guid
      properties:
        code3:
          nullable: true
          readOnly: true
          type: string
        englishName:
          nullable: true
          readOnly: true
          type: string
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    CompanyModel:
      example:
        country:
          code3: code3
          englishName: englishName
          name: name
          guid: guid
        rootBusinessUnitGuid: rootBusinessUnitGuid
        name: name
        currencySymbol: currencySymbol
        guid: guid
        currencyRate: 0.8008281904610115
        currencyCode: currencyCode
        currencyGuid: currencyGuid
      properties:
        country:
          $ref: '#/components/schemas/CompanyCountry'
        currencyCode:
          nullable: true
          readOnly: true
          type: string
        currencyGuid:
          nullable: true
          readOnly: true
          type: string
          x-relation-guid: CurrencyOutputModel
        currencyRate:
          format: double
          readOnly: true
          type: number
        currencySymbol:
          nullable: true
          readOnly: true
          type: string
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        rootBusinessUnitGuid:
          nullable: true
          readOnly: true
          type: string
          x-relation-guid: BusinessUnitModel
      type: object
    ContactCommunicationModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isForbiddenToUse: true
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        contact:
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        communicationType:
          name: name
          guid: guid
          isActive: true
          type: Phone
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        value: value
      properties:
        communicationType:
          $ref: '#/components/schemas/CommunicationTypeSubModel'
        contact:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isForbiddenToUse:
          default: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        value:
          minLength: 1
          type: string
      required:
      - communicationType
      - contact
      - value
      type: object
    ContactCustomer:
      example:
        number: 0
        name: name
        guid: guid
      properties:
        guid:
          minLength: 1
          type: string
          x-relation-guid: CustomerModel
        name:
          nullable: true
          readOnly: true
          type: string
        number:
          format: int64
          nullable: true
          readOnly: true
          type: integer
      required:
      - guid
      type: object
    ContactKeywordModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        category: Project
        isActive: true
        keyword: keyword
      properties:
        category:
          $ref: '#/components/schemas/KeywordCategory'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        keyword:
          minLength: 1
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
      required:
      - keyword
      type: object
    ContactModel:
      example:
        lastName: lastName
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        role:
          name: name
          guid: guid
        jobTitle: jobTitle
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        description: description
        timeZone:
          name: name
          guid: guid
        dateOfBirth: 2000-01-23
        language:
          name: name
          guid: guid
        isActive: true
        phoneNumbers:
        - phoneNumbers
        - phoneNumbers
        emails:
        - emails
        - emails
        firstName: firstName
        isDeleted: true
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isEmailAllowed: false
        satisfactionLevel: Unsatisfied
        name: name
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        salutation: Mr.
        addressGuid: addressGuid
        customer:
          number: 0
          name: name
          guid: guid
      properties:
        addressGuid:
          nullable: true
          type: string
          x-relation-guid: AddressModel
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customer:
          $ref: '#/components/schemas/ContactCustomer'
        dateOfBirth:
          format: date
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        emails:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        firstName:
          minLength: 1
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        isDeleted:
          readOnly: true
          type: boolean
        isEmailAllowed:
          default: false
          type: boolean
        jobTitle:
          nullable: true
          type: string
        language:
          $ref: '#/components/schemas/ModelWithName'
        lastName:
          minLength: 1
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
        phoneNumbers:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        role:
          $ref: '#/components/schemas/ModelWithName'
        salutation:
          $ref: '#/components/schemas/SalutationType'
        satisfactionLevel:
          $ref: '#/components/schemas/SatisfactionLevelType'
        timeZone:
          $ref: '#/components/schemas/ModelWithName'
      required:
      - customer
      - firstName
      - lastName
      type: object
    ContactRoleModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    CostAccountModel:
      example:
        isTravelTypeDefault: true
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        number: number
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        isTravelTypeDefault:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        number:
          minLength: 1
          type: string
      required:
      - name
      - number
      type: object
    CostCenterModel:
      example:
        identifier: identifier
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isDefault: true
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        identifier:
          minLength: 1
          type: string
        isActive:
          default: true
          type: boolean
        isDefault:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
      required:
      - identifier
      - name
      type: object
    CountryLanguage:
      example:
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    CountryModel:
      example:
        code3: code3
        defaultCulture: defaultCulture
        englishName: englishName
        code2: code2
        hasRegions: NoRegion
        timezone:
          name: name
          guid: guid
        isRegistrationCountry: true
        defaultLanguage:
          name: name
          guid: guid
        companyRegisterUrl: companyRegisterUrl
        name: name
        guid: guid
        currency:
          symbol: symbol
          code: code
          name: name
          guid: guid
        isInEU: true
      properties:
        code2:
          nullable: true
          type: string
        code3:
          nullable: true
          type: string
        companyRegisterUrl:
          nullable: true
          type: string
        currency:
          $ref: '#/components/schemas/CurrencyBaseModel'
        defaultCulture:
          nullable: true
          type: string
        defaultLanguage:
          $ref: '#/components/schemas/CountryLanguage'
        englishName:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        hasRegions:
          $ref: '#/components/schemas/CountryRegionsStatus'
        isInEU:
          type: boolean
        isRegistrationCountry:
          type: boolean
        name:
          nullable: true
          type: string
        timezone:
          $ref: '#/components/schemas/CountryTimezone'
      type: object
    CountryRegionModel:
      example:
        code: code
        timezone:
          name: name
          guid: guid
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        timezone:
          $ref: '#/components/schemas/CountryRegionTimezoneModel'
      type: object
    CountryRegionTimezoneModel:
      example:
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    CountryRegionsStatus:
      description: ""
      enum:
      - NoRegion
      - Unknown
      - HasRegions
      type: string
      x-enumNames:
      - NoRegion
      - Unknown
      - HasRegions
    CountryTimezone:
      example:
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    CreateInvoiceModel:
      example:
        date: 2000-01-23
        projects:
        - guid: guid
        - guid: guid
        billingCustomerGuid: billingCustomerGuid
        groupProjects: true
        invoiceStatusGuid: invoiceStatusGuid
      properties:
        billingCustomerGuid:
          nullable: true
          type: string
          x-relation-guid: CustomerModel
        date:
          format: date
          nullable: true
          type: string
        groupProjects:
          type: boolean
        invoiceStatusGuid:
          nullable: true
          type: string
          x-relation-guid: InvoiceStatusModel
        projects:
          items:
            $ref: '#/components/schemas/CreateInvoiceProjectModel'
          type: array
      required:
      - projects
      type: object
    CreateInvoiceProjectModel:
      example:
        guid: guid
      properties:
        guid:
          minLength: 1
          type: string
          x-relation-guid: ProjectOutputModel
      required:
      - guid
      type: object
    CurrencyBaseModel:
      example:
        symbol: symbol
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          readOnly: true
          type: string
        guid:
          minLength: 1
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
        symbol:
          nullable: true
          readOnly: true
          type: string
      required:
      - guid
      type: object
    CurrencyOutputModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        symbol: symbol
        code: code
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        rate: 0.8008281904610115
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        isOrganizationCurrency: true
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        code:
          nullable: true
          type: string
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          type: string
        isActive:
          default: true
          type: boolean
        isOrganizationCurrency:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          type: string
        rate:
          format: double
          type: number
        symbol:
          nullable: true
          type: string
      type: object
    CurrencyPurpose:
      description: ""
      enum:
      - ProjectPrice
      - ProjectCost
      - UserCost
      - ExpenseCost
      type: string
      x-enumFlags: true
      x-enumNames:
      - ProjectPrice
      - ProjectCost
      - UserCost
      - ExpenseCost
    CurrencySubModel:
      example:
        symbol: symbol
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        guid:
          minLength: 1
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
        symbol:
          nullable: true
          type: string
      required:
      - guid
      type: object
    CurrencySubModel2:
      example:
        symbol: symbol
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        guid:
          minLength: 1
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
        symbol:
          nullable: true
          type: string
      required:
      - guid
      type: object
    CustomPriceListOutputModel:
      example:
        isVolumePricing: true
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isDefault: true
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isCustom: true
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        currency:
          symbol: symbol
          code: code
          name: name
          guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        currency:
          $ref: '#/components/schemas/PriceListCurrency3'
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          type: boolean
        isCustom:
          type: boolean
        isDefault:
          type: boolean
        isVolumePricing:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
      required:
      - currency
      - name
      type: object
    CustomPropertyModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
        type: Numeric
        parameters: parameters
        usageCount: 0
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        parameters:
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/CustomPropertyType'
        usageCount:
          format: int32
          readOnly: true
          type: integer
      required:
      - name
      - type
      type: object
    CustomPropertyShortModel:
      example:
        name: name
        guid: guid
        type: Numeric
        parameters: parameters
      properties:
        guid:
          minLength: 1
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
        parameters:
          nullable: true
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/CustomPropertyType'
      required:
      - guid
      type: object
    CustomPropertyType:
      description: ""
      enum:
      - Numeric
      - Money
      - String
      - Date
      - Selection
      type: string
      x-enumNames:
      - Numeric
      - Money
      - String
      - Date
      - Selection
    CustomerContactPersonSubModel:
      example:
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    CustomerContactSubModel:
      example:
        firstName: firstName
        lastName: lastName
        isDeleted: true
        name: name
        guid: guid
      properties:
        firstName:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        isDeleted:
          type: boolean
        lastName:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    CustomerCountry:
      example:
        englishName: englishName
        name: name
        guid: guid
      properties:
        englishName:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    CustomerCountrySettingsInputModel:
      example:
        country:
          guid: guid
        valueAddedTax:
          guid: guid
        taxFreeDescription: taxFreeDescription
        isTaxFree: true
        zeroVatCategoryCodeEn16931: zeroVatCategoryCodeEn16931
        customer:
          guid: guid
      properties:
        country:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        customer:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        isTaxFree:
          type: boolean
        taxFreeDescription:
          nullable: true
          type: string
        valueAddedTax:
          $ref: '#/components/schemas/SimpleInputModel'
        zeroVatCategoryCodeEn16931:
          nullable: true
          type: string
      required:
      - country
      - customer
      type: object
    CustomerCountrySettingsOutputModel:
      example:
        country:
          englishName: englishName
          name: name
          guid: guid
        valueAddedTax:
          percentage: 0.8008281904610115
          guid: guid
        taxFreeDescription: taxFreeDescription
        guid: guid
        isTaxFree: true
        zeroVatCategoryCodeEn16931: zeroVatCategoryCodeEn16931
        customer:
          guid: guid
      properties:
        country:
          $ref: '#/components/schemas/CustomerCountry'
        customer:
          $ref: '#/components/schemas/ModelBase'
        guid:
          nullable: true
          type: string
        isTaxFree:
          type: boolean
        taxFreeDescription:
          nullable: true
          type: string
        valueAddedTax:
          $ref: '#/components/schemas/ValueAddedTaxSubModel'
        zeroVatCategoryCodeEn16931:
          nullable: true
          type: string
      type: object
    CustomerCurrency:
      example:
        symbol: symbol
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        symbol:
          nullable: true
          type: string
      type: object
    CustomerCustomPropertySelectionItemInputModel:
      example:
        sortOrder: 0
        customerCustomProperty:
          guid: guid
        name: name
        isActive: true
      properties:
        customerCustomProperty:
          $ref: '#/components/schemas/SimpleInputModel'
        isActive:
          default: true
          type: boolean
        name:
          nullable: true
          type: string
        sortOrder:
          format: int32
          nullable: true
          type: integer
      required:
      - customerCustomProperty
      type: object
    CustomerCustomPropertySelectionItemOutputModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        sortOrder: 0
        customerCustomProperty:
          name: name
          guid: guid
          type: Numeric
          parameters: parameters
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customerCustomProperty:
          $ref: '#/components/schemas/CustomPropertyShortModel'
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        sortOrder:
          format: int32
          nullable: true
          type: integer
      required:
      - name
      type: object
    CustomerCustomValueModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        customerGuid: customerGuid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        value: value
        customProperty:
          name: name
          guid: guid
          type: Numeric
          parameters: parameters
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customProperty:
          $ref: '#/components/schemas/CustomPropertyShortModel'
        customerGuid:
          nullable: true
          type: string
          x-relation-guid: CustomerModel
        guid:
          nullable: true
          readOnly: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        value:
          nullable: true
          type: string
      required:
      - customProperty
      type: object
    CustomerHeadquarterAddress:
      example:
        country: country
        city: city
        postalCode: postalCode
        guid: guid
        addressline: addressline
      properties:
        addressline:
          nullable: true
          readOnly: true
          type: string
        city:
          nullable: true
          readOnly: true
          type: string
        country:
          nullable: true
          readOnly: true
          type: string
        guid:
          nullable: true
          type: string
        postalCode:
          nullable: true
          readOnly: true
          type: string
      type: object
    CustomerInvoicingVat:
      example:
        code: code
        percentage: 6.027456183070403
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        percentage:
          format: double
          type: number
      type: object
    CustomerLanguage:
      example:
        englishName: englishName
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          readOnly: true
          type: string
        englishName:
          nullable: true
          readOnly: true
          type: string
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    CustomerMarketSegmentModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        parentMarketSegment:
          name: name
          guid: guid
          isActive: true
        customer:
          name: name
          guid: guid
        marketSegment:
          name: name
          guid: guid
          isActive: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customer:
          $ref: '#/components/schemas/ModelWithName'
        guid:
          nullable: true
          readOnly: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        marketSegment:
          $ref: '#/components/schemas/MarketSegmentSubModel'
        parentMarketSegment:
          $ref: '#/components/schemas/MarketSegmentSubModel'
      type: object
    CustomerModel:
      example:
        overdueInterest: 5.637376656633329
        eInvoiceOperator: eInvoiceOperator
        notes: notes
        timezone:
          name: name
          guid: guid
        headquarterAddress:
          country: country
          city: city
          postalCode: postalCode
          guid: guid
          addressline: addressline
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        industry:
          name: name
          guid: guid
        language:
          englishName: englishName
          code: code
          name: name
          guid: guid
        isActive: true
        number: 1
        kvkNumber: kvkNumber
        currency:
          symbol: symbol
          code: code
          name: name
          guid: guid
        email: email
        owner:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        website: website
        invoicingVat:
          code: code
          percentage: 6.027456183070403
          guid: guid
        eInvoiceAddress: eInvoiceAddress
        numberOfEmployees: 5
        isInternal: true
        pricelist:
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        invoiceTemplate:
          name: name
          guid: guid
        name: name
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        paymentTerm: 2
        annualRevenue: 0
        vatNumber: vatNumber
      properties:
        annualRevenue:
          format: int64
          nullable: true
          type: integer
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        currency:
          $ref: '#/components/schemas/CustomerCurrency'
        eInvoiceAddress:
          nullable: true
          type: string
        eInvoiceOperator:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        headquarterAddress:
          $ref: '#/components/schemas/CustomerHeadquarterAddress'
        industry:
          $ref: '#/components/schemas/ModelWithName'
        invoiceTemplate:
          $ref: '#/components/schemas/ModelWithName'
        invoicingVat:
          $ref: '#/components/schemas/CustomerInvoicingVat'
        isActive:
          default: true
          type: boolean
        isInternal:
          readOnly: true
          type: boolean
        kvkNumber:
          maxLength: 25
          minLength: 0
          nullable: true
          type: string
        language:
          $ref: '#/components/schemas/CustomerLanguage'
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        notes:
          nullable: true
          type: string
        number:
          format: int64
          nullable: true
          type: integer
        numberOfEmployees:
          format: int32
          nullable: true
          type: integer
        overdueInterest:
          format: double
          nullable: true
          type: number
        owner:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        paymentTerm:
          format: int32
          nullable: true
          type: integer
        pricelist:
          $ref: '#/components/schemas/ModelWithName'
        timezone:
          $ref: '#/components/schemas/ModelWithName'
        vatNumber:
          nullable: true
          type: string
        website:
          nullable: true
          type: string
      required:
      - name
      type: object
    CustomerSalesNoteInputModel:
      example:
        note: note
        user:
          guid: guid
        customer:
          guid: guid
      properties:
        customer:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        note:
          nullable: true
          type: string
        user:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
      required:
      - customer
      - user
      type: object
    CustomerSalesNoteOutputModel:
      example:
        lastUpdatedBy:
          guid: guid
        note: note
        isDeleted: true
        createdBy:
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        user:
          guid: guid
        customer:
          guid: guid
      properties:
        createdBy:
          $ref: '#/components/schemas/ModelBase'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customer:
          $ref: '#/components/schemas/ModelBase'
        guid:
          nullable: true
          readOnly: true
          type: string
        isDeleted:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/ModelBase'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        note:
          nullable: true
          type: string
        user:
          $ref: '#/components/schemas/ModelBase'
      type: object
    DailyModel:
      example:
        everyWeekday: true
        interval: 1
      properties:
        everyWeekday:
          type: boolean
        interval:
          format: int32
          nullable: true
          type: integer
      type: object
    DayOrdinal:
      description: ""
      enum:
      - First
      - Second
      - Third
      - Fourth
      - Last
      type: string
      x-enumNames:
      - First
      - Second
      - Third
      - Fourth
      - Last
    DayOrdinalOption:
      description: ""
      enum:
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - WeekDay
      - Saturday
      - WeekendDay
      - Day
      type: string
      x-enumNames:
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - WeekDay
      - Saturday
      - WeekendDay
      - Day
    DeletedPhaseMemberOutputModel:
      example:
        phase:
          guid: guid
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        deletedDateTime: 2000-01-23T04:56:07.000+00:00
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
        currentWorkContractTitle: currentWorkContractTitle
        user:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        currentWorkContractTitle:
          nullable: true
          type: string
        deletedDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        phase:
          $ref: '#/components/schemas/ModelBase'
        user:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
      type: object
    DeletedProjectFeeModel:
      example:
        phase:
          guid: guid
        lastUpdatedBy:
          guid: guid
        product:
          guid: guid
        quantity: 0.8008281904610115
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        project:
          guid: guid
        deletedDateTime: 2000-01-23T04:56:07.000+00:00
        measurementUnit: measurementUnit
        createdBy:
          guid: guid
        name: name
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        user:
          guid: guid
        customer:
          guid: guid
        eventDate: 2000-01-23
      properties:
        createdBy:
          $ref: '#/components/schemas/ModelBaseReadOnly'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customer:
          $ref: '#/components/schemas/ModelBaseReadOnly'
        deletedDateTime:
          format: date-time
          readOnly: true
          type: string
        eventDate:
          format: date
          nullable: true
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/ModelBaseReadOnly'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        measurementUnit:
          nullable: true
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
        phase:
          $ref: '#/components/schemas/ModelBaseReadOnly'
        product:
          $ref: '#/components/schemas/ModelBaseReadOnly'
        project:
          $ref: '#/components/schemas/ModelBaseReadOnly'
        quantity:
          format: double
          nullable: true
          readOnly: true
          type: number
        user:
          $ref: '#/components/schemas/ModelBaseReadOnly'
      type: object
    DeletedProjectTravelExpenseModel:
      example:
        phase:
          guid: guid
        travelStartTime: 2000-01-23T04:56:07.000+00:00
        lastUpdatedBy:
          guid: guid
        quantity: 0.8008281904610115
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        description: description
        project:
          guid: guid
        travelEndTime: 2000-01-23T04:56:07.000+00:00
        deletedDateTime: 2000-01-23T04:56:07.000+00:00
        measurementUnit: measurementUnit
        createdBy:
          guid: guid
        travelExpense:
          guid: guid
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        user:
          guid: guid
        customer:
          guid: guid
        eventDate: 2000-01-23
      properties:
        createdBy:
          $ref: '#/components/schemas/ModelBaseReadOnly'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customer:
          $ref: '#/components/schemas/ModelBaseReadOnly'
        deletedDateTime:
          format: date-time
          readOnly: true
          type: string
        description:
          nullable: true
          readOnly: true
          type: string
        eventDate:
          format: date
          nullable: true
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/ModelBaseReadOnly'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        measurementUnit:
          nullable: true
          readOnly: true
          type: string
        phase:
          $ref: '#/components/schemas/ModelBaseReadOnly'
        project:
          $ref: '#/components/schemas/ModelBaseReadOnly'
        quantity:
          format: double
          nullable: true
          readOnly: true
          type: number
        travelEndTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        travelExpense:
          $ref: '#/components/schemas/ModelBaseReadOnly'
        travelStartTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        user:
          $ref: '#/components/schemas/ModelBaseReadOnly'
      type: object
    DeletedWorkHourModel:
      example:
        phase:
          guid: guid
        lastUpdatedBy:
          guid: guid
        quantity: 6.027456183070403
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        project:
          guid: guid
        deletedDateTime: 2000-01-23T04:56:07.000+00:00
        plannedInvoiceQuantity: 0.8008281904610115
        createdBy:
          guid: guid
        workType:
          guid: guid
        guid: guid
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        user:
          guid: guid
        customer:
          guid: guid
        eventDate: 2000-01-23
      properties:
        createdBy:
          $ref: '#/components/schemas/ModelBaseReadOnly'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customer:
          $ref: '#/components/schemas/ModelBaseReadOnly'
        deletedDateTime:
          format: date-time
          readOnly: true
          type: string
        endTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        eventDate:
          format: date
          nullable: true
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/ModelBaseReadOnly'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        phase:
          $ref: '#/components/schemas/ModelBaseReadOnly'
        plannedInvoiceQuantity:
          format: double
          nullable: true
          readOnly: true
          type: number
        project:
          $ref: '#/components/schemas/ModelBaseReadOnly'
        quantity:
          format: double
          nullable: true
          readOnly: true
          type: number
        startTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        user:
          $ref: '#/components/schemas/ModelBaseReadOnly'
        workType:
          $ref: '#/components/schemas/ModelBaseReadOnly'
      type: object
    EntryFormat:
      description: ""
      enum:
      - StartTimeEndTime
      - Quantity
      type: string
      x-enumNames:
      - StartTimeEndTime
      - Quantity
    ErrorModel:
      example:
        stack: stack
        details:
        - location:
            identifier: identifier
            name: name
            type: PathParameter
          message: message
          url: url
        - location:
            identifier: identifier
            name: name
            type: PathParameter
          message: message
          url: url
        type: InternalSystemError
        httpStatusCode: 0
      properties:
        details:
          items:
            $ref: '#/components/schemas/ExceptionDetailModel'
          nullable: true
          type: array
        httpStatusCode:
          format: int32
          type: integer
        stack:
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/ExceptionTypeEnum'
      type: object
    ExceptionDetailModel:
      example:
        location:
          identifier: identifier
          name: name
          type: PathParameter
        message: message
        url: url
      properties:
        location:
          $ref: '#/components/schemas/ExceptionLocationModel'
        message:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
      type: object
    ExceptionLocationModel:
      example:
        identifier: identifier
        name: name
        type: PathParameter
      properties:
        identifier:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/ExceptionLocationTypeEnum'
      type: object
    ExceptionLocationTypeEnum:
      description: ""
      enum:
      - PathParameter
      - RequestBody
      - RequestHeader
      - UriParameter
      type: string
      x-enumNames:
      - PathParameter
      - RequestBody
      - RequestHeader
      - UriParameter
    ExceptionModel:
      example:
        error:
          stack: stack
          details:
          - location:
              identifier: identifier
              name: name
              type: PathParameter
            message: message
            url: url
          - location:
              identifier: identifier
              name: name
              type: PathParameter
            message: message
            url: url
          type: InternalSystemError
          httpStatusCode: 0
      properties:
        error:
          $ref: '#/components/schemas/ErrorModel'
      type: object
    ExceptionTypeEnum:
      description: ""
      enum:
      - InternalSystemError
      - AuthenticationRequired
      - AddonMissing
      - FeatureIsNotEnabled
      - InvalidParameter
      - InvalidOperation
      - InvalidRequest
      - InsufficientApiScope
      - InvalidApiVersion
      - ConfigurationError
      - UserLicenseType
      - TermsOfServiceNotApproved
      - HttpsRequired
      - OrganizationNotActive
      - PermissionDenied
      - TrialExpired
      - NotAvailableInTrial
      - InvalidRecaptcha
      - AddonMissingTermsOfServiceApproval
      type: string
      x-enumNames:
      - InternalSystemError
      - AuthenticationRequired
      - AddonMissing
      - FeatureIsNotEnabled
      - InvalidParameter
      - InvalidOperation
      - InvalidRequest
      - InsufficientApiScope
      - InvalidApiVersion
      - ConfigurationError
      - UserLicenseType
      - TermsOfServiceNotApproved
      - HttpsRequired
      - OrganizationNotActive
      - PermissionDenied
      - TrialExpired
      - NotAvailableInTrial
      - InvalidRecaptcha
      - AddonMissingTermsOfServiceApproval
    ExpensesClass:
      description: ""
      enum:
      - Mileage
      - DailyAllowance
      - OtherTravelExpense
      type: string
      x-enumNames:
      - Mileage
      - DailyAllowance
      - OtherTravelExpense
    FileCategory:
      description: ""
      enum:
      - Misc
      - Application
      - Projects
      - Proposal
      - ProjectFees
      - Invoice
      - Users
      - ProjectTravelExpense
      - Customer
      type: string
      x-enumNames:
      - Misc
      - Application
      - Projects
      - Proposal
      - ProjectFees
      - Invoice
      - Users
      - ProjectTravelExpense
      - Customer
    FileKeywordModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        category: Project
        isActive: true
        keyword: keyword
      properties:
        category:
          $ref: '#/components/schemas/KeywordCategory'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        keyword:
          minLength: 1
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
      required:
      - keyword
      type: object
    FileModel:
      example:
        isInternal: true
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        size: 0.8008281904610115
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        description: description
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        category: Misc
        contentType: contentType
      properties:
        category:
          $ref: '#/components/schemas/FileCategory'
        contentType:
          nullable: true
          readOnly: true
          type: string
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        description:
          nullable: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isInternal:
          nullable: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        size:
          format: double
          nullable: true
          readOnly: true
          type: number
      required:
      - name
      type: object
    FlatRateInputModel:
      example:
        phase:
          guid: guid
        pricePerAdditionalHour:
          amount: 6.027456183070403
          currencyCode: currencyCode
        billAdditionalHours: true
        billingSchedule: Immediately
        price:
          amount: 6.027456183070403
          currencyCode: currencyCode
        plannedBillingDate: 2000-01-23
        includesHours: 0.8008281904610115
      properties:
        billAdditionalHours:
          default: true
          nullable: true
          type: boolean
        billingSchedule:
          $ref: '#/components/schemas/BillingScheduleType'
        includesHours:
          default: 0
          format: double
          nullable: true
          type: number
        phase:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        plannedBillingDate:
          format: date
          nullable: true
          type: string
        price:
          $ref: '#/components/schemas/MoneyInputModelWithNullableAmount'
        pricePerAdditionalHour:
          $ref: '#/components/schemas/MoneyInputModelWithNullableAmount'
      required:
      - billingSchedule
      - phase
      type: object
    FlatRateOutputModel:
      example:
        phase:
          name: name
          guid: guid
        pricePerAdditionalHour:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        billAdditionalHours: true
        billingSchedule: Immediately
        price:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        guid: guid
        project:
          number: 6
          name: name
          guid: guid
        plannedBillingDate: 2000-01-23
        includesHours: 0.8008281904610115
        invoiceGuid: invoiceGuid
      properties:
        billAdditionalHours:
          default: true
          nullable: true
          type: boolean
        billingSchedule:
          $ref: '#/components/schemas/BillingScheduleType'
        guid:
          nullable: true
          type: string
        includesHours:
          default: 0
          format: double
          nullable: true
          type: number
        invoiceGuid:
          nullable: true
          type: string
          x-relation-guid: PhaseOutputModel
        phase:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
        plannedBillingDate:
          format: date
          nullable: true
          type: string
        price:
          $ref: '#/components/schemas/MoneyOutputModel'
        pricePerAdditionalHour:
          $ref: '#/components/schemas/MoneyOutputModel'
        project:
          $ref: '#/components/schemas/FlatrateProjectSubModel'
      type: object
    FlatrateProjectSubModel:
      example:
        number: 6
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
        number:
          format: int64
          nullable: true
          readOnly: true
          type: integer
      type: object
    FlextimeAdjustmentInputModel:
      example:
        adjustmentDate: 2000-01-23
        amount: 0.8008281904610115
        notes: notes
        user:
          guid: guid
      properties:
        adjustmentDate:
          format: date
          type: string
        amount:
          format: double
          type: number
        notes:
          nullable: true
          type: string
        user:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
      required:
      - adjustmentDate
      - amount
      - user
      type: object
    FlextimeAdjustmentOutputModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        adjustmentDate: 2000-01-23
        amount: 0.8008281904610115
        notes: notes
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        user:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
      properties:
        adjustmentDate:
          format: date
          nullable: true
          type: string
        amount:
          format: double
          nullable: true
          type: number
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        notes:
          nullable: true
          type: string
        user:
          $ref: '#/components/schemas/UserWithFirstNameLastNamePhotoFileModelAndRequiredGuid'
      type: object
    FlextimeModel:
      example:
        monthFlextimeBalance: 0.8008281904610115
        totalFlextimeBalance: 6.027456183070403
      properties:
        monthFlextimeBalance:
          format: double
          nullable: true
          type: number
        totalFlextimeBalance:
          format: double
          nullable: true
          type: number
      type: object
    FormattingCultureModel:
      example:
        englishName: englishName
        code: code
        name: name
        guid: guid
        isActive: true
      properties:
        code:
          nullable: true
          type: string
        englishName:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        isActive:
          default: true
          nullable: true
          type: boolean
        name:
          nullable: true
          type: string
      type: object
    FormattingCultureSubModel:
      example:
        englishName: englishName
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        englishName:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    FormattingCultureSubModel2:
      example:
        englishName: englishName
        code: code
        name: name
      properties:
        code:
          nullable: true
          readOnly: true
          type: string
        englishName:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
      type: object
    FreeTextInputModel:
      example:
        value: value
      properties:
        value:
          nullable: true
          type: string
      type: object
    FreeTextModel:
      example:
        tagContext: tagContext
        text: text
        value: value
        allowTags: true
      properties:
        allowTags:
          nullable: true
          readOnly: true
          type: boolean
        tagContext:
          nullable: true
          readOnly: true
          type: string
        text:
          nullable: true
          readOnly: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    FreeTextModel2:
      example:
        plainText: plainText
        tagContext: tagContext
        text: text
        value: value
        allowTags: true
      properties:
        allowTags:
          readOnly: true
          type: boolean
        plainText:
          nullable: true
          readOnly: true
          type: string
        tagContext:
          nullable: true
          readOnly: true
          type: string
        text:
          nullable: true
          readOnly: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    GetUsersPurpose:
      description: Purpose used for getting the users.
      enum:
      - AbsenceOwner
      - AccountOwner
      - ActivityOwner
      - ActivityParticipant
      - BillingContact
      - ProjectManager
      - SalesPerson
      - SuperiorUser
      - TermsOfServiceApprover
      type: string
      x-enumNames:
      - AbsenceOwner
      - AccountOwner
      - ActivityOwner
      - ActivityParticipant
      - BillingContact
      - ProjectManager
      - SalesPerson
      - SuperiorUser
      - TermsOfServiceApprover
    GrantType:
      description: ""
      enum:
      - client_credentials
      - authorization_code
      - refresh_token
      type: string
      x-enumNames:
      - ClientCredentials
      - AuthorizationCode
      - RefreshToken
    GroupByType:
      description: ""
      enum:
      - None
      - Date
      - Category
      - Project
      type: string
      x-enumNames:
      - None
      - Date
      - Category
      - Project
    HolidayModel:
      example:
        date: 2000-01-23
        recurringEndYear: 1914
        countryGuid: countryGuid
        name: name
        guid: guid
        isRecurringYearly: true
        isPublicHoliday: true
        isActive: true
      properties:
        countryGuid:
          minLength: 1
          type: string
          x-relation-guid: CountryModel
        date:
          format: date
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        isPublicHoliday:
          readOnly: true
          type: boolean
        isRecurringYearly:
          type: boolean
        name:
          minLength: 1
          type: string
        recurringEndYear:
          format: int32
          maximum: 2075
          minimum: 1900
          nullable: true
          type: integer
      required:
      - countryGuid
      - date
      - name
      type: object
    IndustryModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        code: code
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        code:
          nullable: true
          type: string
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    InvoiceCustomerSubModel:
      example:
        number: 0
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        number:
          format: int64
          nullable: true
          type: integer
      type: object
    InvoiceFileModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        fileGuid: fileGuid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        description: description
        invoiceGuid: invoiceGuid
        isInternal: true
        size: 0.8008281904610115
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        sortOrder: 6
        name: name
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        category: Misc
        contentType: contentType
      properties:
        category:
          $ref: '#/components/schemas/FileCategory'
        contentType:
          nullable: true
          readOnly: true
          type: string
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        description:
          nullable: true
          type: string
        fileGuid:
          nullable: true
          readOnly: true
          type: string
          x-relation-guid: FileModel
        guid:
          nullable: true
          readOnly: true
          type: string
        invoiceGuid:
          nullable: true
          readOnly: true
          type: string
          x-relation-guid: InvoiceOutputModel
        isInternal:
          nullable: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        size:
          format: double
          nullable: true
          readOnly: true
          type: number
        sortOrder:
          format: int32
          nullable: true
          type: integer
      required:
      - name
      type: object
    InvoiceGrouping:
      description: ""
      enum:
      - OneByOne
      - Group
      - Group+Attachment
      type: string
      x-enumNames:
      - OneByOne
      - Group
      - GroupWithAttachment
    InvoiceLanguageSubModel:
      example:
        englishName: englishName
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        englishName:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    InvoiceOutputModel:
      example:
        date: 2000-01-23
        totalIncludingTax:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        overdueInterest: 5.637376656633329
        senderAddress:
          country: country
          city: city
          postalCode: postalCode
          addressline: addressline
          state: state
        notes: notes
        orderNumber: orderNumber
        projects:
        - number: 7
          name: name
          guid: guid
        - number: 7
          name: name
          guid: guid
        dueDate: 2000-01-23
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        workHourValueAddedTax: 9.301444243932576
        language:
          englishName: englishName
          code: code
          name: name
          guid: guid
        senderVatNumber: senderVatNumber
        freeText1:
          plainText: plainText
          tagContext: tagContext
          text: text
          value: value
          allowTags: true
        isCreditNote: true
        totalTax:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        workHoursQuantity: 3.616076749251911
        freeText2:
          plainText: plainText
          tagContext: tagContext
          text: text
          value: value
          allowTags: true
        number: 5
        senderName: senderName
        workHoursTotalExcludingTax:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        referenceNumber: referenceNumber
        senderKvkNumber: senderKvkNumber
        invoiceNumberBusinessUnitGuid: invoiceNumberBusinessUnitGuid
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        yourReference: yourReference
        entryDate: 2000-01-23
        creditNoteInvoice:
          number: 6
          guid: guid
        receiverAddress:
          country: country
          city: city
          postalCode: postalCode
          addressline: addressline
          state: state
        senderContactGuid: senderContactGuid
        invoiceTemplate:
          name: name
          guid: guid
        guid: guid
        paymentTerm: 2
        flatRatesTotalExcludingTax:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        senderContactName: senderContactName
        status:
          isPaid: true
          name: name
          guid: guid
          isSent: true
          isWaitingPayment: true
        projectFeesTotalExcludingTax:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        ourReference: ourReference
        receiverContactName: receiverContactName
        reimburseInvoice:
          number: 6
          guid: guid
        receiverVatNumber: receiverVatNumber
        currency:
          symbol: symbol
          code: code
          name: name
          guid: guid
        receiverContactGuid: receiverContactGuid
        canBeDeleted: true
        receiverCustomerName: receiverCustomerName
        receiverContactEmail: receiverContactEmail
        totalExcludingTax:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        projectTravelExpensesTotalExcludingTax:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        receiverKvkNumber: receiverKvkNumber
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        billingCustomer:
          number: 0
          name: name
          guid: guid
        culture:
          englishName: englishName
          code: code
          name: name
        currencyRate: 1.4658129805029452
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        paymentDate: 2000-01-23
        customer:
          number: 0
          name: name
          guid: guid
      properties:
        billingCustomer:
          $ref: '#/components/schemas/InvoiceCustomerSubModel'
        canBeDeleted:
          type: boolean
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        creditNoteInvoice:
          $ref: '#/components/schemas/RelatedInvoiceSubModel'
        culture:
          $ref: '#/components/schemas/FormattingCultureSubModel2'
        currency:
          $ref: '#/components/schemas/CurrencySubModel'
        currencyRate:
          format: double
          type: number
        customer:
          $ref: '#/components/schemas/InvoiceCustomerSubModel'
        date:
          format: date
          type: string
        dueDate:
          format: date
          type: string
        entryDate:
          format: date
          nullable: true
          type: string
        flatRatesTotalExcludingTax:
          $ref: '#/components/schemas/MoneyOutputModel'
        freeText1:
          $ref: '#/components/schemas/FreeTextModel2'
        freeText2:
          $ref: '#/components/schemas/FreeTextModel2'
        guid:
          nullable: true
          readOnly: true
          type: string
        invoiceNumberBusinessUnitGuid:
          nullable: true
          type: string
          x-relation-guid: BusinessUnitModel
        invoiceTemplate:
          $ref: '#/components/schemas/ModelWithName'
        isCreditNote:
          type: boolean
        language:
          $ref: '#/components/schemas/InvoiceLanguageSubModel'
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        notes:
          nullable: true
          type: string
        number:
          format: int32
          nullable: true
          type: integer
        orderNumber:
          nullable: true
          type: string
        ourReference:
          nullable: true
          type: string
        overdueInterest:
          format: double
          type: number
        paymentDate:
          format: date
          nullable: true
          type: string
        paymentTerm:
          format: int32
          type: integer
        projectFeesTotalExcludingTax:
          $ref: '#/components/schemas/MoneyOutputModel'
        projectTravelExpensesTotalExcludingTax:
          $ref: '#/components/schemas/MoneyOutputModel'
        projects:
          items:
            $ref: '#/components/schemas/InvoiceProjectSubModel'
          nullable: true
          type: array
          x-relation: ProjectOutputModel
        receiverAddress:
          $ref: '#/components/schemas/InvoiceReceiverAddressSubModel'
        receiverContactEmail:
          nullable: true
          type: string
        receiverContactGuid:
          nullable: true
          type: string
          x-relation-guid: ContactModel
        receiverContactName:
          nullable: true
          type: string
        receiverCustomerName:
          nullable: true
          type: string
        receiverKvkNumber:
          nullable: true
          type: string
        receiverVatNumber:
          nullable: true
          type: string
        referenceNumber:
          nullable: true
          type: string
        reimburseInvoice:
          $ref: '#/components/schemas/RelatedInvoiceSubModel'
        senderAddress:
          $ref: '#/components/schemas/InvoiceSenderAddressSubModel'
        senderContactGuid:
          nullable: true
          type: string
          x-relation-guid: ContactModel
        senderContactName:
          nullable: true
          type: string
        senderKvkNumber:
          nullable: true
          type: string
        senderName:
          nullable: true
          type: string
        senderVatNumber:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/InvoiceStatusSubModel'
        totalExcludingTax:
          $ref: '#/components/schemas/MoneyOutputModel'
        totalIncludingTax:
          $ref: '#/components/schemas/MoneyOutputModel'
        totalTax:
          $ref: '#/components/schemas/MoneyOutputModel'
        workHourValueAddedTax:
          format: double
          nullable: true
          type: number
        workHoursQuantity:
          format: double
          type: number
        workHoursTotalExcludingTax:
          $ref: '#/components/schemas/MoneyOutputModel'
        yourReference:
          nullable: true
          type: string
      type: object
    InvoicePdfGetOptions:
      description: ""
      enum:
      - All
      - InvoiceOnly
      - AttachmentAndBreakdown
      type: string
      x-enumNames:
      - All
      - InvoiceOnly
      - AttachmentAndBreakdown
    InvoiceProjectSubModel:
      example:
        number: 7
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        number:
          format: int64
          nullable: true
          type: integer
      type: object
    InvoiceReceiverAddressSubModel:
      example:
        country: country
        city: city
        postalCode: postalCode
        addressline: addressline
        state: state
      properties:
        addressline:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        postalCode:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
      type: object
    InvoiceRowAccountingSubModel:
      example:
        number: number
        name: name
      properties:
        name:
          nullable: true
          type: string
        number:
          nullable: true
          type: string
      type: object
    InvoiceRowCategory:
      description: ""
      enum:
      - Hours
      - ProjectFees
      - Travels
      type: string
      x-enumNames:
      - Hours
      - ProjectFees
      - Travels
    InvoiceRowOutputModel:
      example:
        unitPrice:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        salesAccount:
          number: number
          name: name
        code:
        - code
        - code
        quantity: 0.8008281904610115
        salesReceivableAccount:
          number: number
          name: name
        costCenter:
          number: number
          name: name
        vatRate: 1.4658129805029452
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        description: description
        recurringSalesAccount:
          number: number
          name: name
        invoiceGuid: invoiceGuid
        measurementUnit: measurementUnit
        rowType: FlatRate
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        hasInvoiceComment: true
        sortOrder: 6
        vatAccount:
          number: number
          name: name
        guid: guid
        flatRateGuid: flatRateGuid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        category: Hours
      properties:
        category:
          $ref: '#/components/schemas/InvoiceRowCategory'
        code:
          items:
            type: string
          nullable: true
          type: array
        costCenter:
          $ref: '#/components/schemas/InvoiceRowAccountingSubModel'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        description:
          nullable: true
          type: string
        flatRateGuid:
          nullable: true
          type: string
          x-relation-guid: FlatRateOutputModel
        guid:
          nullable: true
          readOnly: true
          type: string
        hasInvoiceComment:
          type: boolean
        invoiceGuid:
          nullable: true
          type: string
          x-relation-guid: InvoiceOutputModel
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        measurementUnit:
          nullable: true
          type: string
        quantity:
          format: double
          type: number
        recurringSalesAccount:
          $ref: '#/components/schemas/InvoiceRowAccountingSubModel'
        rowType:
          $ref: '#/components/schemas/InvoiceRowType'
        salesAccount:
          $ref: '#/components/schemas/InvoiceRowAccountingSubModel'
        salesReceivableAccount:
          $ref: '#/components/schemas/InvoiceRowAccountingSubModel'
        sortOrder:
          format: int32
          type: integer
        unitPrice:
          $ref: '#/components/schemas/MoneyOutputModel'
        vatAccount:
          $ref: '#/components/schemas/InvoiceRowAccountingSubModel'
        vatRate:
          format: double
          nullable: true
          type: number
      type: object
    InvoiceRowType:
      description: ""
      enum:
      - FlatRate
      - Hours
      - ProjectFees
      - TravelExpenses
      type: string
      x-enumNames:
      - FlatRate
      - Hours
      - ProjectFees
      - TravelExpenses
    InvoiceSenderAddressSubModel:
      example:
        country: country
        city: city
        postalCode: postalCode
        addressline: addressline
        state: state
      properties:
        addressline:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        postalCode:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
      type: object
    InvoiceSettingsOutputModel:
      example:
        projectFeeDescriptionFormat: ""
        showReferenceNumber: true
        showLogoAndTitle: true
        showAttachmentPriceExcludingValueAddedTax: true
        projectTravelExpensePrimaryGroupBy: projectTravelExpensePrimaryGroupBy
        showQuantity: true
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        showFooter: true
        reverseChargeDescription: reverseChargeDescription
        workHourGrouping: null
        projectFeeGrouping: OneByOne
        projectTravelExpenseSecondaryGroupBy: projectTravelExpenseSecondaryGroupBy
        showAttachmentUnitPrice: true
        workHourPrimaryGroupBy: workHourPrimaryGroupBy
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        showAttachmentValueAddedTax: true
        showPriceExcludingValueAddedTax: true
        showAttachmentUnit: true
        showUnitPrice: true
        entryDate: 2000-01-23
        workHourDescriptionFormat: ""
        projectFeeSecondaryGroupBy: projectFeeSecondaryGroupBy
        showAttachmentQuantity: true
        workHourSecondaryGroupBy: workHourSecondaryGroupBy
        showUnit: true
        showCategories: true
        projectTravelExpenseDescriptionFormat: ""
        isReverseCharged: true
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        projectFeePrimaryGroupBy: projectFeePrimaryGroupBy
        showValueAddedTax: true
        guid: guid
        categorySortOrder: categorySortOrder
        style: BlackAndWhite
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        paymentDate: 2000-01-23
        projectTravelExpenseGrouping: null
      properties:
        categorySortOrder:
          nullable: true
          type: string
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        entryDate:
          format: date
          nullable: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isReverseCharged:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        paymentDate:
          format: date
          nullable: true
          type: string
        projectFeeDescriptionFormat:
          default: ""
          nullable: true
          type: string
        projectFeeGrouping:
          $ref: '#/components/schemas/InvoiceGrouping'
        projectFeePrimaryGroupBy:
          nullable: true
          type: string
        projectFeeSecondaryGroupBy:
          nullable: true
          type: string
        projectTravelExpenseDescriptionFormat:
          default: ""
          nullable: true
          type: string
        projectTravelExpenseGrouping:
          $ref: '#/components/schemas/InvoiceGrouping'
        projectTravelExpensePrimaryGroupBy:
          nullable: true
          type: string
        projectTravelExpenseSecondaryGroupBy:
          nullable: true
          type: string
        reverseChargeDescription:
          nullable: true
          type: string
        showAttachmentPriceExcludingValueAddedTax:
          type: boolean
        showAttachmentQuantity:
          readOnly: true
          type: boolean
        showAttachmentUnit:
          type: boolean
        showAttachmentUnitPrice:
          type: boolean
        showAttachmentValueAddedTax:
          type: boolean
        showCategories:
          default: true
          type: boolean
        showFooter:
          type: boolean
        showLogoAndTitle:
          type: boolean
        showPriceExcludingValueAddedTax:
          readOnly: true
          type: boolean
        showQuantity:
          type: boolean
        showReferenceNumber:
          default: true
          type: boolean
        showUnit:
          type: boolean
        showUnitPrice:
          type: boolean
        showValueAddedTax:
          type: boolean
        style:
          $ref: '#/components/schemas/InvoiceSkin'
        workHourDescriptionFormat:
          default: ""
          nullable: true
          type: string
        workHourGrouping:
          $ref: '#/components/schemas/InvoiceGrouping'
        workHourPrimaryGroupBy:
          nullable: true
          type: string
        workHourSecondaryGroupBy:
          nullable: true
          type: string
      type: object
    InvoiceSkin:
      description: ""
      enum:
      - BlackAndWhite
      - Blue
      - Cyan
      - Green
      - Lilac
      - Orange
      - Plain
      - Red
      - Yellow
      type: string
      x-enumNames:
      - BlackAndWhite
      - Blue
      - Cyan
      - Green
      - Lilac
      - Orange
      - Plain
      - Red
      - Yellow
    InvoiceStatusModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isDefaultForCreditNote: true
        hasInvoiceNumber: true
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        isSent: true
        isActive: true
        isPaid: true
        isDefault: true
        isReadOnly: true
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        sortOrder: 0
        name: name
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isWaitingPayment: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        hasInvoiceNumber:
          type: boolean
        isActive:
          default: true
          type: boolean
        isDefault:
          type: boolean
        isDefaultForCreditNote:
          type: boolean
        isPaid:
          type: boolean
        isReadOnly:
          type: boolean
        isSent:
          type: boolean
        isWaitingPayment:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        sortOrder:
          format: int32
          type: integer
      required:
      - name
      type: object
    InvoiceStatusSubModel:
      example:
        isPaid: true
        name: name
        guid: guid
        isSent: true
        isWaitingPayment: true
      properties:
        guid:
          minLength: 1
          type: string
        isPaid:
          type: boolean
        isSent:
          type: boolean
        isWaitingPayment:
          type: boolean
        name:
          nullable: true
          readOnly: true
          type: string
      required:
      - guid
      type: object
    InvoiceSubModel:
      example:
        date: 2000-01-23
        number: 6
        guid: guid
      properties:
        date:
          format: date
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        number:
          format: int32
          nullable: true
          type: integer
      type: object
    InvoiceTemplateModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isDefault: true
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        canDelete: true
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
        title: title
      properties:
        canDelete:
          readOnly: true
          type: boolean
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        isDefault:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        title:
          minLength: 1
          type: string
      required:
      - title
      type: object
    InvoiceTemplateSubModel:
      example:
        templateInvoiceGuid: templateInvoiceGuid
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
          x-relation-guid: InvoiceTemplateModel
        templateInvoiceGuid:
          deprecated: true
          nullable: true
          type: string
          x-deprecatedMessage: Not in use anymore.
          x-relation-guid: InvoiceTemplateModel
      type: object
    InvoiceType:
      description: ""
      enum:
      - Invoice
      - Reminder
      type: string
      x-enumNames:
      - Invoice
      - Reminder
    KeyValuePairOfStringAndObject:
      properties:
        key:
          type: string
        value:
          nullable: true
          type: string
      type: object
    KeyValuePairOfStringAndSortDirection:
      properties:
        key:
          type: string
        value:
          $ref: '#/components/schemas/SortDirection'
      type: object
    KeywordCategory:
      description: ""
      enum:
      - Project
      - Contact
      - User
      - File
      type: string
      x-enumNames:
      - Case
      - Contact
      - User
      - File
    KeywordModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        category: Project
        isActive: true
        keyword: keyword
      properties:
        category:
          $ref: '#/components/schemas/KeywordCategory'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        keyword:
          minLength: 1
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
      required:
      - category
      - keyword
      type: object
    KpiFormulaCategory:
      description: ""
      enum:
      - Unknown
      - Functions
      - Project
      - User
      - Invoice
      type: string
      x-enumNames:
      - Unknown
      - Functions
      - Project
      - User
      - Invoice
    KpiFormulaModelBase:
      example:
        unit: unit
        dataType: String
        name: name
        guid: guid
        category: Unknown
        isActive: true
      properties:
        category:
          $ref: '#/components/schemas/KpiFormulaCategory'
        dataType:
          $ref: '#/components/schemas/SearchFieldDataType'
        guid:
          nullable: true
          type: string
        isActive:
          default: true
          type: boolean
        name:
          nullable: true
          type: string
        unit:
          nullable: true
          type: string
      type: object
    LanguageModel:
      example:
        englishName: englishName
        code: code
        isInvoiceLanguage: true
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        englishName:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        isInvoiceLanguage:
          type: boolean
        name:
          nullable: true
          type: string
      type: object
    LeadSourceModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    LicenseUserType:
      description: ""
      enum:
      - FullUser
      - Employee
      - RestrictedEmployee
      - Subcontractor
      type: string
      x-enumNames:
      - FullUser
      - Employee
      - RestrictedEmployee
      - Subcontractor
    MarketSegmentModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
        parentMarketSegment:
          name: name
          guid: guid
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        parentMarketSegment:
          $ref: '#/components/schemas/ModelWithName'
      required:
      - name
      type: object
    MarketSegmentSubModel:
      example:
        name: name
        guid: guid
        isActive: true
      properties:
        guid:
          nullable: true
          type: string
        isActive:
          nullable: true
          readOnly: true
          type: boolean
        name:
          nullable: true
          type: string
      type: object
    MemberStatus:
      description: ""
      enum:
      - Unknown
      - Invited
      - Accepted
      - Tentative
      - Declined
      type: string
      x-enumNames:
      - Unknown
      - Invited
      - Accepted
      - Tentative
      - Declined
    ModelBase:
      example:
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
      type: object
    ModelBaseReadOnly:
      example:
        guid: guid
      properties:
        guid:
          nullable: true
          readOnly: true
          type: string
      type: object
    ModelBaseWithRequiredGuid:
      example:
        name: name
        guid: guid
      properties:
        guid:
          minLength: 1
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
      required:
      - guid
      type: object
    ModelWithName:
      example:
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    MoneyInputModel:
      example:
        amount: 5.962133916683182
        currencyCode: currencyCode
      properties:
        amount:
          format: double
          type: number
        currencyCode:
          minLength: 1
          type: string
      required:
      - amount
      - currencyCode
      type: object
    MoneyInputModelWithNotNegativeAmount:
      example:
        amount: 1.4658129805029452
        currencyCode: currencyCode
      properties:
        amount:
          format: double
          nullable: true
          type: number
        currencyCode:
          minLength: 1
          type: string
      required:
      - currencyCode
      type: object
    MoneyInputModelWithNullableAmount:
      example:
        amount: 6.027456183070403
        currencyCode: currencyCode
      properties:
        amount:
          format: double
          nullable: true
          type: number
        currencyCode:
          minLength: 1
          type: string
      required:
      - currencyCode
      type: object
    MoneyOutputModel:
      example:
        amount: 5.962133916683182
        multiCurrencyInfo:
        - amount: 5.637376656633329
          purpose:
          - ProjectPrice
          - ProjectPrice
          currencyCode: currencyCode
        - amount: 5.637376656633329
          purpose:
          - ProjectPrice
          - ProjectPrice
          currencyCode: currencyCode
        currencyCode: currencyCode
      properties:
        amount:
          format: double
          nullable: true
          type: number
        currencyCode:
          nullable: true
          type: string
        multiCurrencyInfo:
          items:
            $ref: '#/components/schemas/MultiCurrencyInfoModel'
          nullable: true
          type: array
      type: object
    MonthlyModel:
      example:
        dayOfMonth: 5
        dayOrdinal: First
        dayOrdinalOption: Sunday
        interval: 5
      properties:
        dayOfMonth:
          format: int32
          nullable: true
          type: integer
        dayOrdinal:
          $ref: '#/components/schemas/DayOrdinal'
        dayOrdinalOption:
          $ref: '#/components/schemas/DayOrdinalOption'
        interval:
          format: int32
          type: integer
      type: object
    Months:
      description: ""
      enum:
      - January
      - February
      - March
      - April
      - May
      - June
      - July
      - August
      - September
      - October
      - November
      - December
      type: string
      x-enumNames:
      - January
      - February
      - March
      - April
      - May
      - June
      - July
      - August
      - September
      - October
      - November
      - December
    MultiCurrencyInfoModel:
      example:
        amount: 5.637376656633329
        purpose:
        - ProjectPrice
        - ProjectPrice
        currencyCode: currencyCode
      properties:
        amount:
          format: double
          nullable: true
          type: number
        currencyCode:
          nullable: true
          type: string
        purpose:
          items:
            $ref: '#/components/schemas/CurrencyPurpose'
          nullable: false
          type: array
      type: object
    OrganizationDetailsCountrySubModel:
      example:
        englishName: englishName
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        englishName:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    OrganizationDetailsFormattingSubModel:
      example:
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    OrganizationDetailsLanguageSubModel:
      example:
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    OrganizationDetailsOutputModel:
      example:
        country:
          englishName: englishName
          code: code
          name: name
          guid: guid
        address: address
        city: city
        timezone:
          name: name
          guid: guid
        postalCode: postalCode
        eInvoiceAddress: eInvoiceAddress
        language:
          code: code
          name: name
          guid: guid
        activeAddons:
        - activeAddons
        - activeAddons
        termsOfServiceApprover:
          code: code
          name: name
          guid: guid
        isVatRegistered: true
        activeCompanies:
        - country:
            code3: code3
            englishName: englishName
            name: name
            guid: guid
          rootBusinessUnitGuid: rootBusinessUnitGuid
          name: name
          currencySymbol: currencySymbol
          guid: guid
          currencyRate: 0.8008281904610115
          currencyCode: currencyCode
          currencyGuid: currencyGuid
        - country:
            code3: code3
            englishName: englishName
            name: name
            guid: guid
          rootBusinessUnitGuid: rootBusinessUnitGuid
          name: name
          currencySymbol: currencySymbol
          guid: guid
          currencyRate: 0.8008281904610115
          currencyCode: currencyCode
          currencyGuid: currencyGuid
        kvkNumber: kvkNumber
        odpCompany: odpCompany
        phone: phone
        name: name
        guid: guid
        currency:
          symbol: symbol
          code: code
          name: name
          guid: guid
        fax: fax
        registeredOffice: registeredOffice
        eInvoiceOperatorCode: eInvoiceOperatorCode
        formatting:
          code: code
          name: name
          guid: guid
        vatNumber: vatNumber
      properties:
        activeAddons:
          items:
            type: string
          nullable: true
          type: array
        activeCompanies:
          items:
            $ref: '#/components/schemas/CompanyModel'
          nullable: true
          type: array
        address:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        country:
          $ref: '#/components/schemas/OrganizationDetailsCountrySubModel'
        currency:
          $ref: '#/components/schemas/CurrencyBaseModel'
        eInvoiceAddress:
          nullable: true
          type: string
        eInvoiceOperatorCode:
          nullable: true
          type: string
        fax:
          nullable: true
          type: string
        formatting:
          $ref: '#/components/schemas/OrganizationDetailsFormattingSubModel'
        guid:
          nullable: true
          type: string
        isVatRegistered:
          type: boolean
        kvkNumber:
          maxLength: 25
          minLength: 0
          nullable: true
          type: string
        language:
          $ref: '#/components/schemas/OrganizationDetailsLanguageSubModel'
        name:
          nullable: true
          type: string
        odpCompany:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        postalCode:
          nullable: true
          type: string
        registeredOffice:
          nullable: true
          type: string
        termsOfServiceApprover:
          $ref: '#/components/schemas/UserWithNameAndPhotoFileModel'
        timezone:
          $ref: '#/components/schemas/ModelWithName'
        vatNumber:
          nullable: true
          type: string
      type: object
    OrganizationSettingsModel:
      example:
        overdueInterest: 1.2315135367772556
        travelReimbursementInstructions: travelReimbursementInstructions
        quickSearchSetting: ShowOpenProjectsSalesCasesAndCustomers
        lastFlextimeCalculationEndTime: 2000-01-23T04:56:07.000+00:00
        paymentReferenceNumberDisplaySetting: ReferenceNumber
        isEnteringHourPlannedInvoiceQuantityAllowed: false
        defaultFooterColumn3:
          tagContext: tagContext
          text: text
          value: value
          allowTags: true
        lastInvoiceNumber: 6
        minFlextimeBalanceLimit: -293.85987584968905
        nextPurchaseOrderNumber: 4
        defaultFooterColumn2:
          tagContext: tagContext
          text: text
          value: value
          allowTags: true
        lastProjectNumber: 1
        maxFlextimeBalanceLimit: 230.2135886934765
        currencyRoundingType: AwayFromZero
        isWorkHourDescriptionMandatory: false
        lastTravelReimbursementNumber: 5
        projectNameDisplaySetting: ShowProjectLongName
        lastPurchaseOrderNumber: 5
        travelExpenseReimbursementStartDate: 2000-01-23
        displayProjectNumber: true
        setCreditNoteInvoiceNumber: true
        lastFlextimeCalculationUser:
          firstName: firstName
          lastName: lastName
          guid: guid
        flextimeCalculationStartDate: 2000-01-23
        travelEntryClosingDate: 2000-01-23
        nextCustomerNumber: 9
        nextProjectNumber: 2
        workHourApprovalMode: None
        isTravelExpenseImmediatelyInvoiceable: true
        uniqueIdentifierForProductsAndWorktypes: true
        nextTravelReimbursementNumber: 7
        lastCustomerNumber: 0
        isIdenticalPhaseCodesAllowed: false
        workWeek:
        - Monday
        - Monday
        defaultFooterColumn1:
          tagContext: tagContext
          text: text
          value: value
          allowTags: true
        isCustomerSearchAllowed: true
        nextInvoiceNumber: 3
        workHourEntryFormat: StartTimeEndTime
        isAddingNewKeywordsFromProjectAllowed: true
        projectNameDisplayFormatSetting: ProjectNamePhaseName
        paymentTerm: 1
        purchaseOrderNumberPrefix: purchaseOrderNumberPrefix
        worktimeEntryClosingDate: 2000-01-23
      properties:
        currencyRoundingType:
          $ref: '#/components/schemas/TotalRoundingType'
        defaultFooterColumn1:
          $ref: '#/components/schemas/FreeTextModel'
        defaultFooterColumn2:
          $ref: '#/components/schemas/FreeTextModel'
        defaultFooterColumn3:
          $ref: '#/components/schemas/FreeTextModel'
        displayProjectNumber:
          type: boolean
        flextimeCalculationStartDate:
          format: date
          nullable: true
          type: string
        isAddingNewKeywordsFromProjectAllowed:
          type: boolean
        isCustomerSearchAllowed:
          type: boolean
        isEnteringHourPlannedInvoiceQuantityAllowed:
          default: false
          type: boolean
        isIdenticalPhaseCodesAllowed:
          default: false
          type: boolean
        isTravelExpenseImmediatelyInvoiceable:
          nullable: true
          type: boolean
        isWorkHourDescriptionMandatory:
          default: false
          type: boolean
        lastCustomerNumber:
          format: int64
          readOnly: true
          type: integer
        lastFlextimeCalculationEndTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        lastFlextimeCalculationUser:
          $ref: '#/components/schemas/UserWithFirstNameLastNameModel'
        lastInvoiceNumber:
          format: int64
          nullable: true
          readOnly: true
          type: integer
        lastProjectNumber:
          format: int64
          nullable: true
          readOnly: true
          type: integer
        lastPurchaseOrderNumber:
          format: int64
          nullable: true
          readOnly: true
          type: integer
        lastTravelReimbursementNumber:
          format: int64
          nullable: true
          readOnly: true
          type: integer
        maxFlextimeBalanceLimit:
          format: double
          maximum: 1000
          minimum: 0
          nullable: true
          type: number
        minFlextimeBalanceLimit:
          format: double
          maximum: 0
          minimum: -1000
          nullable: true
          type: number
        nextCustomerNumber:
          format: int64
          type: integer
        nextInvoiceNumber:
          format: int32
          type: integer
        nextProjectNumber:
          format: int64
          type: integer
        nextPurchaseOrderNumber:
          format: int32
          nullable: true
          type: integer
        nextTravelReimbursementNumber:
          format: int32
          type: integer
        overdueInterest:
          format: double
          nullable: true
          type: number
        paymentReferenceNumberDisplaySetting:
          $ref: '#/components/schemas/ReferenceNumberDisplay'
        paymentTerm:
          format: int32
          nullable: true
          readOnly: true
          type: integer
        projectNameDisplayFormatSetting:
          $ref: '#/components/schemas/ProjectNameDisplayFormatOptions'
        projectNameDisplaySetting:
          $ref: '#/components/schemas/ProjectNameDisplayOptions'
        purchaseOrderNumberPrefix:
          maxLength: 20
          minLength: 0
          nullable: true
          type: string
        quickSearchSetting:
          $ref: '#/components/schemas/QuickSearchOptions'
        setCreditNoteInvoiceNumber:
          type: boolean
        travelEntryClosingDate:
          format: date
          nullable: true
          type: string
        travelExpenseReimbursementStartDate:
          format: date
          nullable: true
          type: string
        travelReimbursementInstructions:
          nullable: true
          readOnly: true
          type: string
        uniqueIdentifierForProductsAndWorktypes:
          type: boolean
        workHourApprovalMode:
          $ref: '#/components/schemas/WorkHourApprovalMode'
        workHourEntryFormat:
          $ref: '#/components/schemas/EntryFormat'
        workWeek:
          items:
            $ref: '#/components/schemas/Workweek'
          type: array
        worktimeEntryClosingDate:
          format: date
          nullable: true
          type: string
      required:
      - workWeek
      type: object
    OvertimeModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        code: code
        multipliesUnitCost: false
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        percentage: 0.8008281904610115
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
        includeInFlextime: true
      properties:
        code:
          minLength: 1
          type: string
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        includeInFlextime:
          nullable: true
          type: boolean
        isActive:
          default: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        multipliesUnitCost:
          default: false
          type: boolean
        name:
          minLength: 1
          type: string
        percentage:
          format: double
          type: number
      required:
      - code
      - name
      type: object
    OvertimePriceModel:
      example:
        pricelistVersionGuid: pricelistVersionGuid
        priceSource: ProductRegistry
        projectGuid: projectGuid
        guid: guid
        overtime:
          name: name
          guid: guid
        pricingMultiplier: 0.8008281904610115
      properties:
        guid:
          nullable: true
          type: string
        overtime:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
        priceSource:
          $ref: '#/components/schemas/PriceSource'
        pricelistVersionGuid:
          nullable: true
          type: string
          x-relation-guid: PricelistVersionOutputModel
        pricingMultiplier:
          format: double
          nullable: true
          type: number
        projectGuid:
          nullable: true
          type: string
          x-relation-guid: ProjectOutputModel
      required:
      - overtime
      type: object
    ParticipantType:
      description: ""
      enum:
      - User
      - Contact
      - Resource
      - Other
      type: string
      x-enumNames:
      - User
      - Contact
      - Resource
      - Other
    PatchOperation:
      example:
        op: Add
        path: path
        from: from
        value: value
      properties:
        from:
          nullable: true
          type: string
        op:
          $ref: '#/components/schemas/PatchOperationType'
        path:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      required:
      - op
      type: object
    PatchOperationType:
      description: ""
      enum:
      - Add
      - Copy
      - Move
      - Remove
      - Replace
      type: string
      x-enumNames:
      - Add
      - Copy
      - Move
      - Remove
      - Replace
    PermissionLevel:
      description: ""
      enum:
      - View
      - Edit
      type: string
      x-enumNames:
      - View
      - Edit
    PermissionProfileModel:
      example:
        isAccessible: true
        isDefault: true
        name: name
        guid: guid
        isActive: true
      properties:
        guid:
          nullable: true
          readOnly: true
          type: string
        isAccessible:
          nullable: true
          readOnly: true
          type: boolean
        isActive:
          default: true
          type: boolean
        isDefault:
          type: boolean
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    PhaseCustomerSubModel:
      example:
        isInternal: true
        number: 0
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        isInternal:
          type: boolean
        name:
          nullable: true
          type: string
        number:
          format: int64
          nullable: true
          type: integer
      type: object
    PhaseInputModel:
      example:
        defaultWorkType:
          name: name
          guid: guid
        code: code
        workHoursEstimate: 1.4658129805029452
        project:
          name: name
          guid: guid
        phaseStatus:
          description: description
          phaseStatusTypeGuid: phaseStatusTypeGuid
        originalStartDate: 2000-01-23
        isClosed: false
        isLocked: false
        sortOrder: 6
        name: name
        parentPhase:
          name: name
          guid: guid
        originalWorkHoursEstimate: 0.8008281904610115
        deadline: 2000-01-23
        originalDeadline: 2000-01-23
        startDate: 2000-01-23
        isCompleted: false
      properties:
        code:
          nullable: true
          type: string
        deadline:
          format: date
          nullable: true
          type: string
        defaultWorkType:
          $ref: '#/components/schemas/ModelWithName'
        isClosed:
          default: false
          type: boolean
        isCompleted:
          default: false
          type: boolean
        isLocked:
          default: false
          type: boolean
        name:
          minLength: 1
          type: string
        originalDeadline:
          format: date
          nullable: true
          type: string
        originalStartDate:
          format: date
          nullable: true
          type: string
        originalWorkHoursEstimate:
          format: double
          nullable: true
          type: number
        parentPhase:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
        phaseStatus:
          $ref: '#/components/schemas/PhaseStatusInputModel'
        project:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
        sortOrder:
          format: int32
          nullable: true
          type: integer
        startDate:
          format: date
          nullable: true
          type: string
        workHoursEstimate:
          format: double
          nullable: true
          type: number
      required:
      - name
      - parentPhase
      type: object
    PhaseMemberModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        phaseGuid: phaseGuid
        workHoursIncludingChildPhases: 6.027456183070403
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        workHours: 0.8008281904610115
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
        currentWorkcontractTitle: currentWorkcontractTitle
        user:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        currentWorkcontractTitle:
          nullable: true
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          readOnly: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        phaseGuid:
          minLength: 1
          type: string
          x-relation-guid: PhaseOutputModel
        user:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        workHours:
          format: double
          readOnly: true
          type: number
        workHoursIncludingChildPhases:
          format: double
          readOnly: true
          type: number
      required:
      - phaseGuid
      type: object
    PhaseMemberOutputModel:
      example:
        phase:
          name: name
          guid: guid
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
        currentWorkContractTitle: currentWorkContractTitle
        user:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        currentWorkContractTitle:
          nullable: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        phase:
          $ref: '#/components/schemas/ModelWithName'
        user:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
      type: object
    PhaseMembersFromBusinessUnitUsersModel:
      example:
        phaseGuid: phaseGuid
        businessUnitGuid: businessUnitGuid
      properties:
        businessUnitGuid:
          minLength: 1
          type: string
          x-relation-guid: BusinessUnitModel
        phaseGuid:
          minLength: 1
          type: string
          x-relation-guid: PhaseOutputModel
      required:
      - businessUnitGuid
      - phaseGuid
      type: object
    PhaseModelWithHierarchyInfo:
      example:
        defaultWorkType:
          name: name
          guid: guid
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        code: code
        level: 6
        hasChildren: true
        workHoursEstimate: 5.637376656633329
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        project:
          isInternal: true
          number: 6
          isClosed: true
          name: name
          guid: guid
        phaseStatus:
          name: name
          description: description
          phaseStatusTypeGuid: phaseStatusTypeGuid
        originalStartDate: 2000-01-23
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isLocked: false
        sortOrder: 5
        name: name
        parentPhase:
          name: name
          guid: guid
        guid: guid
        originalWorkHoursEstimate: 1.4658129805029452
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        deadline: 2000-01-23
        currencyCode:
          symbol: symbol
          code: code
          name: name
          guid: guid
        originalDeadline: 2000-01-23
        startDate: 2000-01-23
        customer:
          isInternal: true
          number: 0
          name: name
          guid: guid
        isCompleted: false
      properties:
        code:
          nullable: true
          type: string
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        currencyCode:
          $ref: '#/components/schemas/CurrencyBaseModel'
        customer:
          $ref: '#/components/schemas/PhaseCustomerSubModel'
        deadline:
          format: date
          nullable: true
          type: string
        defaultWorkType:
          $ref: '#/components/schemas/ModelWithName'
        guid:
          nullable: true
          readOnly: true
          type: string
        hasChildren:
          type: boolean
        isCompleted:
          default: false
          type: boolean
        isLocked:
          default: false
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        level:
          format: int32
          type: integer
        name:
          minLength: 1
          type: string
        originalDeadline:
          format: date
          nullable: true
          type: string
        originalStartDate:
          format: date
          nullable: true
          type: string
        originalWorkHoursEstimate:
          format: double
          nullable: true
          type: number
        parentPhase:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
        phaseStatus:
          $ref: '#/components/schemas/PhaseStatusOutputModel'
        project:
          $ref: '#/components/schemas/PhaseProjectSubModel'
        sortOrder:
          format: int32
          nullable: true
          type: integer
        startDate:
          format: date
          nullable: true
          type: string
        workHoursEstimate:
          format: double
          nullable: true
          type: number
      required:
      - name
      type: object
    PhaseOutputModel:
      example:
        defaultWorkType:
          name: name
          guid: guid
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        code: code
        workHoursEstimate: 5.962133916683182
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        project:
          isInternal: true
          number: 6
          isClosed: true
          name: name
          guid: guid
        phaseStatus:
          name: name
          description: description
          phaseStatusTypeGuid: phaseStatusTypeGuid
        originalStartDate: 2000-01-23
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isLocked: false
        sortOrder: 1
        name: name
        parentPhase:
          name: name
          guid: guid
        guid: guid
        originalWorkHoursEstimate: 0.8008281904610115
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        deadline: 2000-01-23
        currencyCode:
          symbol: symbol
          code: code
          name: name
          guid: guid
        originalDeadline: 2000-01-23
        startDate: 2000-01-23
        isCompleted: false
      properties:
        code:
          nullable: true
          type: string
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        currencyCode:
          $ref: '#/components/schemas/CurrencyBaseModel'
        deadline:
          format: date
          nullable: true
          type: string
        defaultWorkType:
          $ref: '#/components/schemas/ModelWithName'
        guid:
          nullable: true
          readOnly: true
          type: string
        isCompleted:
          default: false
          type: boolean
        isLocked:
          default: false
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        originalDeadline:
          format: date
          nullable: true
          type: string
        originalStartDate:
          format: date
          nullable: true
          type: string
        originalWorkHoursEstimate:
          format: double
          nullable: true
          type: number
        parentPhase:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
        phaseStatus:
          $ref: '#/components/schemas/PhaseStatusOutputModel'
        project:
          $ref: '#/components/schemas/PhaseProjectSubModel'
        sortOrder:
          format: int32
          nullable: true
          type: integer
        startDate:
          format: date
          nullable: true
          type: string
        workHoursEstimate:
          format: double
          nullable: true
          type: number
      required:
      - name
      type: object
    PhaseProjectSubModel:
      example:
        isInternal: true
        number: 6
        isClosed: true
        name: name
        guid: guid
      properties:
        guid:
          minLength: 1
          type: string
        isClosed:
          readOnly: true
          type: boolean
        isInternal:
          readOnly: true
          type: boolean
        name:
          nullable: true
          readOnly: true
          type: string
        number:
          format: int64
          nullable: true
          readOnly: true
          type: integer
      required:
      - guid
      type: object
    PhaseStatusInputModel:
      example:
        description: description
        phaseStatusTypeGuid: phaseStatusTypeGuid
      properties:
        description:
          nullable: true
          type: string
        phaseStatusTypeGuid:
          nullable: true
          type: string
          x-relation-guid: PhaseStatusTypeModel
      type: object
    PhaseStatusOutputModel:
      example:
        name: name
        description: description
        phaseStatusTypeGuid: phaseStatusTypeGuid
      properties:
        description:
          nullable: true
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
        phaseStatusTypeGuid:
          nullable: true
          type: string
          x-relation-guid: PhaseStatusTypeModel
      type: object
    PhaseStatusTypeModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        sortOrder: 0
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          nullable: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        sortOrder:
          format: int32
          type: integer
      required:
      - name
      type: object
    PhaseSubModel:
      example:
        endDate: 2000-01-23
        name: name
        guid: guid
        startDate: 2000-01-23
      properties:
        endDate:
          format: date
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        startDate:
          format: date
          nullable: true
          type: string
      type: object
    PriceListCurrency:
      example:
        symbol: symbol
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        guid:
          minLength: 1
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
        symbol:
          nullable: true
          type: string
      required:
      - guid
      type: object
    PriceListCurrency2:
      example:
        symbol: symbol
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        guid:
          minLength: 1
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
        symbol:
          nullable: true
          type: string
      required:
      - guid
      type: object
    PriceListCurrency3:
      example:
        symbol: symbol
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        guid:
          minLength: 1
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
        symbol:
          nullable: true
          type: string
      required:
      - guid
      type: object
    PriceListModel:
      example:
        isVolumePricing: true
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isDefault: true
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isCustom: true
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        currency:
          symbol: symbol
          code: code
          name: name
          guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        currency:
          $ref: '#/components/schemas/PriceListCurrency'
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        isCustom:
          readOnly: true
          type: boolean
        isDefault:
          type: boolean
        isVolumePricing:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
      required:
      - currency
      - name
      type: object
    PriceListOutputModel:
      example:
        isVolumePricing: true
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isDefault: true
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isCustom: true
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        currency:
          symbol: symbol
          code: code
          name: name
          guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        currency:
          $ref: '#/components/schemas/PriceListCurrency2'
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          type: boolean
        isCustom:
          type: boolean
        isDefault:
          type: boolean
        isVolumePricing:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
      required:
      - currency
      - name
      type: object
    PriceModelBase:
      example:
        pricelistVersionGuid: pricelistVersionGuid
        price:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        priceSource: ProductRegistry
        projectGuid: projectGuid
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        price:
          $ref: '#/components/schemas/MoneyOutputModel'
        priceSource:
          $ref: '#/components/schemas/PriceSource'
        pricelistVersionGuid:
          nullable: true
          type: string
          x-relation-guid: PricelistVersionOutputModel
        projectGuid:
          nullable: true
          type: string
          x-relation-guid: ProjectOutputModel
      type: object
    PriceSource:
      description: ""
      enum:
      - ProductRegistry
      - Pricelist
      - Project
      type: string
      x-enumNames:
      - ProductRegistry
      - Pricelist
      - Project
    PricelistVersionOutputModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        pricelistGuid: pricelistGuid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        startDate: 2000-01-23
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        pricelistGuid:
          nullable: true
          type: string
          x-relation-guid: PriceListOutputModel
        startDate:
          format: date
          nullable: true
          type: string
      type: object
    PrintToPdf:
      description: ""
      enum:
      - DoNotPrintToProposal
      - PrintToProposalBottom
      - PrintToProposalBoth
      type: string
      x-enumNames:
      - DoNotPrintToProposal
      - PrintToProposalBottom
      - PrintToProposalBoth
    ProductCategoryModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isDefault: true
        code: code
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        code:
          nullable: true
          type: string
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        isDefault:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    ProductCountrySettingsModel:
      example:
        country:
          name: name
          guid: guid
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        product:
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        vatRate: 0.8008281904610115
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        country:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        product:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
        vatRate:
          format: double
          nullable: true
          type: number
      required:
      - country
      - product
      type: object
    ProductForProjectOutputModel:
      example:
        isVolumePriced: true
        product:
          unitPrice:
            amount: 5.962133916683182
            multiCurrencyInfo:
            - amount: 5.637376656633329
              purpose:
              - ProjectPrice
              - ProjectPrice
              currencyCode: currencyCode
            - amount: 5.637376656633329
              purpose:
              - ProjectPrice
              - ProjectPrice
              currencyCode: currencyCode
            currencyCode: currencyCode
          lastUpdatedBy:
            firstName: firstName
            lastName: lastName
            code: code
            name: name
            guid: guid
          salesAccount:
            number: number
            name: name
            guid: guid
          code: code
          vatRate: 0.8008281904610115
          createdDateTime: 2000-01-23T04:56:07.000+00:00
          isActive: true
          type: FixedFees
          measurementUnit: measurementUnit
          productCategory:
            name: name
            guid: guid
          createdBy:
            firstName: firstName
            lastName: lastName
            code: code
            name: name
            guid: guid
          unitCost:
            amount: 5.962133916683182
            multiCurrencyInfo:
            - amount: 5.637376656633329
              purpose:
              - ProjectPrice
              - ProjectPrice
              currencyCode: currencyCode
            - amount: 5.637376656633329
              purpose:
              - ProjectPrice
              - ProjectPrice
              currencyCode: currencyCode
            currencyCode: currencyCode
          name: name
          guid: guid
          lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
          proposalDescription: proposalDescription
      properties:
        isVolumePriced:
          nullable: true
          type: boolean
        product:
          $ref: '#/components/schemas/ProductOutputModel'
      type: object
    ProductInputModel:
      example:
        unitPrice:
          amount: 6.027456183070403
          currencyCode: currencyCode
        salesAccount:
          guid: guid
        code: code
        unitCost:
          amount: 6.027456183070403
          currencyCode: currencyCode
        vatRate: 0.8008281904610115
        name: name
        isActive: true
        type: FixedFees
        measurementUnit: measurementUnit
        proposalDescription: proposalDescription
        productCategory:
          guid: guid
      properties:
        code:
          nullable: true
          type: string
        isActive:
          default: true
          nullable: true
          type: boolean
        measurementUnit:
          nullable: true
          type: string
        name:
          minLength: 1
          type: string
        productCategory:
          $ref: '#/components/schemas/SimpleInputModel'
        proposalDescription:
          nullable: true
          type: string
        salesAccount:
          $ref: '#/components/schemas/SimpleInputModel'
        type:
          $ref: '#/components/schemas/ProductType'
        unitCost:
          $ref: '#/components/schemas/MoneyInputModelWithNullableAmount'
        unitPrice:
          $ref: '#/components/schemas/MoneyInputModelWithNullableAmount'
        vatRate:
          format: double
          nullable: true
          type: number
      required:
      - name
      type: object
    ProductOutputModel:
      example:
        unitPrice:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        salesAccount:
          number: number
          name: name
          guid: guid
        code: code
        vatRate: 0.8008281904610115
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
        type: FixedFees
        measurementUnit: measurementUnit
        productCategory:
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        unitCost:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        name: name
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        proposalDescription: proposalDescription
      properties:
        code:
          nullable: true
          type: string
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          nullable: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        measurementUnit:
          nullable: true
          type: string
        name:
          minLength: 1
          type: string
        productCategory:
          $ref: '#/components/schemas/ModelWithName'
        proposalDescription:
          nullable: true
          type: string
        salesAccount:
          $ref: '#/components/schemas/ProductSalesAccountSubModel'
        type:
          $ref: '#/components/schemas/ProductType'
        unitCost:
          $ref: '#/components/schemas/MoneyOutputModel'
        unitPrice:
          $ref: '#/components/schemas/MoneyOutputModel'
        vatRate:
          format: double
          nullable: true
          type: number
      required:
      - name
      type: object
    ProductPriceModel:
      example:
        pricelistVersionGuid: pricelistVersionGuid
        quantity: 0.8008281904610115
        price:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        priceSource: ProductRegistry
        projectGuid: projectGuid
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        price:
          $ref: '#/components/schemas/MoneyOutputModel'
        priceSource:
          $ref: '#/components/schemas/PriceSource'
        pricelistVersionGuid:
          nullable: true
          type: string
          x-relation-guid: PricelistVersionOutputModel
        projectGuid:
          nullable: true
          type: string
          x-relation-guid: ProjectOutputModel
        quantity:
          format: double
          nullable: true
          type: number
      type: object
    ProductPriceOutputModel:
      example:
        isAvailable: true
        isVolumePriced: true
        product:
          productCode: productCode
          name: name
          guid: guid
          productType: FixedFees
          productCategory:
            name: name
            guid: guid
        prices:
        - pricelistVersionGuid: pricelistVersionGuid
          quantity: 0.8008281904610115
          price:
            amount: 5.962133916683182
            multiCurrencyInfo:
            - amount: 5.637376656633329
              purpose:
              - ProjectPrice
              - ProjectPrice
              currencyCode: currencyCode
            - amount: 5.637376656633329
              purpose:
              - ProjectPrice
              - ProjectPrice
              currencyCode: currencyCode
            currencyCode: currencyCode
          priceSource: ProductRegistry
          projectGuid: projectGuid
          guid: guid
        - pricelistVersionGuid: pricelistVersionGuid
          quantity: 0.8008281904610115
          price:
            amount: 5.962133916683182
            multiCurrencyInfo:
            - amount: 5.637376656633329
              purpose:
              - ProjectPrice
              - ProjectPrice
              currencyCode: currencyCode
            - amount: 5.637376656633329
              purpose:
              - ProjectPrice
              - ProjectPrice
              currencyCode: currencyCode
            currencyCode: currencyCode
          priceSource: ProductRegistry
          projectGuid: projectGuid
          guid: guid
      properties:
        isAvailable:
          type: boolean
        isVolumePriced:
          type: boolean
        prices:
          items:
            $ref: '#/components/schemas/ProductPriceModel'
          nullable: true
          type: array
        product:
          $ref: '#/components/schemas/ProductPriceProductOutputSubModel'
      type: object
    ProductPriceProductOutputSubModel:
      example:
        productCode: productCode
        name: name
        guid: guid
        productType: FixedFees
        productCategory:
          name: name
          guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        productCategory:
          $ref: '#/components/schemas/ModelWithName'
        productCode:
          nullable: true
          readOnly: true
          type: string
        productType:
          $ref: '#/components/schemas/ProductType'
      type: object
    ProductSalesAccountSubModel:
      example:
        number: number
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        number:
          nullable: true
          type: string
      type: object
    ProductSalesAccountSubModel2:
      example:
        number: number
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        number:
          nullable: true
          type: string
      type: object
    ProductType:
      description: ""
      enum:
      - FixedFees
      - Materials
      - Subcontracting
      type: string
      x-enumNames:
      - OwnWork
      - Products
      - Subcontracting
    ProjectBillingCustomerModel:
      example:
        canBeDeleted: true
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isDefault: true
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        billingCustomer:
          eInvoiceOperator: eInvoiceOperator
          name: name
          eInvoiceAddress: eInvoiceAddress
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        project:
          name: name
          guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        billingCustomer:
          $ref: '#/components/schemas/BillingCustomerModel'
        canBeDeleted:
          readOnly: true
          type: boolean
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isDefault:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        project:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
      required:
      - billingCustomer
      - project
      type: object
    ProjectBillingCustomerModel2:
      example:
        canBeDeleted: true
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isDefault: true
        billingContact:
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        billingCustomer:
          eInvoiceOperator: eInvoiceOperator
          name: name
          eInvoiceAddress: eInvoiceAddress
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        project:
          name: name
          guid: guid
        billingAddress:
          country: country
          city: city
          postalCode: postalCode
          guid: guid
          addressline: addressline
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        billingAddress:
          $ref: '#/components/schemas/BillingAddressModel'
        billingContact:
          $ref: '#/components/schemas/ModelWithName'
        billingCustomer:
          $ref: '#/components/schemas/BillingCustomerModel'
        canBeDeleted:
          readOnly: true
          type: boolean
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isDefault:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        project:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
      required:
      - billingCustomer
      - project
      type: object
    ProjectCostCenterSubModel:
      example:
        identifier: identifier
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        identifier:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    ProjectCustomPropertySelectionItemInputModel:
      example:
        projectCustomProperty:
          guid: guid
        sortOrder: 0
        name: name
        isActive: true
      properties:
        isActive:
          default: true
          type: boolean
        name:
          nullable: true
          type: string
        projectCustomProperty:
          $ref: '#/components/schemas/SimpleInputModel'
        sortOrder:
          format: int32
          nullable: true
          type: integer
      required:
      - projectCustomProperty
      type: object
    ProjectCustomPropertySelectionItemOutputModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        projectCustomProperty:
          name: name
          guid: guid
          type: Numeric
          parameters: parameters
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        sortOrder: 0
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        projectCustomProperty:
          $ref: '#/components/schemas/CustomPropertyShortModel'
        sortOrder:
          format: int32
          nullable: true
          type: integer
      required:
      - name
      type: object
    ProjectCustomValueModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        projectGuid: projectGuid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        value: value
        customProperty:
          name: name
          guid: guid
          type: Numeric
          parameters: parameters
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customProperty:
          $ref: '#/components/schemas/CustomPropertyShortModel'
        guid:
          nullable: true
          readOnly: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        projectGuid:
          nullable: true
          type: string
          x-relation-guid: ProjectOutputModel
        value:
          nullable: true
          type: string
      required:
      - customProperty
      type: object
    ProjectCustomerSubModel:
      example:
        number: 1
        name: name
        guid: guid
      properties:
        guid:
          minLength: 1
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
        number:
          format: int64
          nullable: true
          type: integer
      required:
      - guid
      type: object
    ProjectFeeBillingScheduleType:
      description: ""
      enum:
      - Immediately
      - OnDate
      - WhenPhaseCompleted
      - Recurring
      type: string
      x-enumNames:
      - Immediately
      - OnDate
      - WhenTaskIsCompleted
      - Recurring
    ProjectFeeCustomerSubModel:
      example:
        number: 0
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        number:
          format: int64
          nullable: true
          type: integer
      type: object
    ProjectFeeInputModel:
      example:
        vatRate: 1.4658129805029452
        description: description
        project:
          guid: guid
        invoiceRowDescription: invoiceRowDescription
        hasVolumePricing: true
        productType: FixedFees
        phase:
          guid: guid
        unitPrice:
          amount: 6.027456183070403
          currencyCode: currencyCode
        product:
          guid: guid
        salesAccount:
          guid: guid
        quantity: 6.027456183070403
        billingSchedule: Immediately
        costCenter:
          guid: guid
        billingDependencyPhase:
          guid: guid
        plannedBillingDate: 2000-01-23
        measurementUnit: measurementUnit
        isBillable: true
        invoiceQuantity: 0.8008281904610115
        unitCost:
          amount: 6.027456183070403
          currencyCode: currencyCode
        name: name
        invoice:
          guid: guid
        invoiceRowComment: invoiceRowComment
        user:
          guid: guid
        displayPeriodStartDate: 2000-01-23
        eventDate: 2000-01-23
      properties:
        billingDependencyPhase:
          $ref: '#/components/schemas/SimpleInputModel'
        billingSchedule:
          $ref: '#/components/schemas/ProjectFeeBillingScheduleType'
        costCenter:
          $ref: '#/components/schemas/SimpleInputModel'
        description:
          nullable: true
          type: string
        displayPeriodStartDate:
          format: date
          nullable: true
          type: string
        eventDate:
          format: date
          nullable: true
          type: string
        hasVolumePricing:
          type: boolean
        invoice:
          $ref: '#/components/schemas/SimpleInputModel'
        invoiceQuantity:
          format: double
          nullable: true
          type: number
        invoiceRowComment:
          nullable: true
          type: string
        invoiceRowDescription:
          nullable: true
          type: string
        isBillable:
          nullable: true
          type: boolean
        measurementUnit:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        phase:
          $ref: '#/components/schemas/SimpleInputModel'
        plannedBillingDate:
          format: date
          nullable: true
          type: string
        product:
          $ref: '#/components/schemas/SimpleInputModel'
        productType:
          $ref: '#/components/schemas/ProductType'
        project:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        quantity:
          format: double
          type: number
        salesAccount:
          $ref: '#/components/schemas/SimpleInputModel'
        unitCost:
          $ref: '#/components/schemas/MoneyInputModelWithNullableAmount'
        unitPrice:
          $ref: '#/components/schemas/MoneyInputModelWithNullableAmount'
        user:
          $ref: '#/components/schemas/SimpleInputModel'
        vatRate:
          format: double
          nullable: true
          type: number
      required:
      - project
      type: object
    ProjectFeeInvoiceSubModel:
      example:
        date: 2000-01-23
        number: 6
        guid: guid
      properties:
        date:
          format: date
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        number:
          format: int32
          nullable: true
          type: integer
      type: object
    ProjectFeeOutputModel:
      example:
        invoiceRowGuid: invoiceRowGuid
        vatRate: 5.637376656633329
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        description: description
        project:
          name: name
          guid: guid
          companyGuid: companyGuid
        invoiceRowDescription: invoiceRowDescription
        recurrenceRuleGuid: recurrenceRuleGuid
        hasVolumePricing: true
        productType: FixedFees
        phase:
          name: name
          guid: guid
        unitPrice:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        product:
          code: code
          name: name
          guid: guid
        salesAccount:
          number: number
          name: name
          guid: guid
        quantity: 5.962133916683182
        billingSchedule: Immediately
        costCenter:
          identifier: identifier
          name: name
          guid: guid
        isRecurrenceRule: true
        billingDependencyPhase:
          name: name
          guid: guid
          isCompleted: true
        plannedBillingDate: 2000-01-23
        measurementUnit: measurementUnit
        isBillable: true
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        invoiceQuantity: 1.4658129805029452
        unitCost:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        name: name
        guid: guid
        invoice:
          date: 2000-01-23
          number: 6
          guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        invoiceRowComment: invoiceRowComment
        user:
          code: code
          name: name
          guid: guid
          companyGuid: companyGuid
        displayPeriodStartDate: 2000-01-23
        customer:
          number: 0
          name: name
          guid: guid
        eventDate: 2000-01-23
      properties:
        billingDependencyPhase:
          $ref: '#/components/schemas/ProjectFeePhaseSubModel'
        billingSchedule:
          $ref: '#/components/schemas/ProjectFeeBillingScheduleType'
        costCenter:
          $ref: '#/components/schemas/ProjectCostCenterSubModel'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customer:
          $ref: '#/components/schemas/ProjectFeeCustomerSubModel'
        description:
          nullable: true
          type: string
        displayPeriodStartDate:
          format: date
          nullable: true
          type: string
        eventDate:
          format: date
          nullable: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        hasVolumePricing:
          type: boolean
        invoice:
          $ref: '#/components/schemas/ProjectFeeInvoiceSubModel'
        invoiceQuantity:
          format: double
          nullable: true
          type: number
        invoiceRowComment:
          nullable: true
          type: string
        invoiceRowDescription:
          nullable: true
          type: string
        invoiceRowGuid:
          nullable: true
          type: string
          x-relation-guid: InvoiceRowOutputModel
        isBillable:
          nullable: true
          type: boolean
        isRecurrenceRule:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        measurementUnit:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        phase:
          $ref: '#/components/schemas/ModelWithName'
        plannedBillingDate:
          format: date
          nullable: true
          type: string
        product:
          $ref: '#/components/schemas/ProjectFeeProductSubModel'
        productType:
          $ref: '#/components/schemas/ProductType'
        project:
          $ref: '#/components/schemas/ProjectFeeProjectSubModel'
        quantity:
          format: double
          type: number
        recurrenceRuleGuid:
          nullable: true
          type: string
          x-relation-guid: ActivityRecurrenceModel
        salesAccount:
          $ref: '#/components/schemas/ProjectSalesAccountSubModel'
        unitCost:
          $ref: '#/components/schemas/MoneyOutputModel'
        unitPrice:
          $ref: '#/components/schemas/MoneyOutputModel'
        user:
          $ref: '#/components/schemas/UserSubModel'
        vatRate:
          format: double
          nullable: true
          type: number
      type: object
    ProjectFeePhaseSubModel:
      example:
        name: name
        guid: guid
        isCompleted: true
      properties:
        guid:
          nullable: true
          type: string
        isCompleted:
          type: boolean
        name:
          nullable: true
          type: string
      type: object
    ProjectFeeProductSubModel:
      example:
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    ProjectFeeProjectSubModel:
      example:
        name: name
        guid: guid
        companyGuid: companyGuid
      properties:
        companyGuid:
          nullable: true
          type: string
          x-relation-guid: CompanyModel
        guid:
          minLength: 1
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
      required:
      - guid
      type: object
    ProjectFileModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        fileGuid: fileGuid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        description: description
        isInternal: true
        isReadOnly: true
        size: 0.8008281904610115
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        projectGuid: projectGuid
        name: name
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        usages:
        - isReadOnly: true
          name: name
          guid: guid
          type: Invoice
        - isReadOnly: true
          name: name
          guid: guid
          type: Invoice
        category: Misc
        contentType: contentType
      properties:
        category:
          $ref: '#/components/schemas/FileCategory'
        contentType:
          nullable: true
          readOnly: true
          type: string
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        description:
          nullable: true
          type: string
        fileGuid:
          nullable: true
          type: string
          x-relation-guid: FileModel
        guid:
          nullable: true
          readOnly: true
          type: string
        isInternal:
          nullable: true
          type: boolean
        isReadOnly:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        projectGuid:
          minLength: 1
          readOnly: true
          type: string
          x-relation-guid: ProjectOutputModel
        size:
          format: double
          nullable: true
          readOnly: true
          type: number
        usages:
          items:
            $ref: '#/components/schemas/UsageModel'
          nullable: true
          type: array
      required:
      - name
      - projectGuid
      type: object
    ProjectForecastInputModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        revenueForecast:
          amount: 6.027456183070403
          currencyCode: currencyCode
        year: 2005
        billingForecast:
          amount: 6.027456183070403
          currencyCode: currencyCode
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        project:
          guid: guid
        expenseForecast:
          amount: 6.027456183070403
          currencyCode: currencyCode
        laborExpenseForecastNotes: laborExpenseForecastNotes
        expenseForecastNotes: expenseForecastNotes
        month: 1
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        laborExpenseForecast:
          amount: 6.027456183070403
          currencyCode: currencyCode
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        billingForecastNotes: billingForecastNotes
        revenueForecastNotes: revenueForecastNotes
      properties:
        billingForecast:
          $ref: '#/components/schemas/MoneyInputModelWithNullableAmount'
        billingForecastNotes:
          nullable: true
          type: string
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        expenseForecast:
          $ref: '#/components/schemas/MoneyInputModelWithNullableAmount'
        expenseForecastNotes:
          nullable: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        laborExpenseForecast:
          $ref: '#/components/schemas/MoneyInputModelWithNullableAmount'
        laborExpenseForecastNotes:
          nullable: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        month:
          format: int32
          maximum: 12
          minimum: 1
          type: integer
        project:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        revenueForecast:
          $ref: '#/components/schemas/MoneyInputModelWithNullableAmount'
        revenueForecastNotes:
          nullable: true
          type: string
        year:
          format: int32
          maximum: 2075
          minimum: 1900
          type: integer
      required:
      - month
      - project
      - year
      type: object
    ProjectForecastOutputModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        revenueForecast:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        year: 6
        billingForecast:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        project:
          name: name
          guid: guid
        expenseForecast:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        laborExpenseForecastNotes: laborExpenseForecastNotes
        expenseForecastNotes: expenseForecastNotes
        month: 0
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        laborExpenseForecast:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        billingForecastNotes: billingForecastNotes
        revenueForecastNotes: revenueForecastNotes
      properties:
        billingForecast:
          $ref: '#/components/schemas/MoneyOutputModel'
        billingForecastNotes:
          nullable: true
          type: string
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          nullable: true
          type: string
        expenseForecast:
          $ref: '#/components/schemas/MoneyOutputModel'
        expenseForecastNotes:
          nullable: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        laborExpenseForecast:
          $ref: '#/components/schemas/MoneyOutputModel'
        laborExpenseForecastNotes:
          nullable: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        month:
          format: int32
          nullable: true
          type: integer
        project:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
        revenueForecast:
          $ref: '#/components/schemas/MoneyOutputModel'
        revenueForecastNotes:
          nullable: true
          type: string
        year:
          format: int32
          nullable: true
          type: integer
      type: object
    ProjectInputModelBase:
      example:
        businessUnit:
          guid: guid
        orderNumber: orderNumber
        billingContact:
          guid: guid
        useOvertimeMultipliers: true
        expectedOrderDate: 2000-01-23
        description: description
        internalName: internalName
        number: 6
        ourReference: ourReference
        customerContact:
          guid: guid
        currency:
          guid: guid
        deadline: 2000-01-23
        completionEstimatePercentage: 0
        isJoiningAllowed: true
        useProductsFromSetting: true
        yourReference: yourReference
        costCenter:
          guid: guid
        leadSource:
          guid: guid
        probability: 5
        useWorktypesFromSetting: true
        isInternal: true
        invoiceNotes: invoiceNotes
        projectStatus:
          projectStatusTypeGuid: projectStatusTypeGuid
          description: description
        isClosed: true
        expectedValue:
          amount: 6.027456183070403
          currencyCode: currencyCode
        invoiceTemplate:
          templateInvoiceGuid: templateInvoiceGuid
          guid: guid
        name: name
        projectOwner:
          guid: guid
        salesPerson:
          guid: guid
        salesStatus:
          salesStatusTypeGuid: salesStatusTypeGuid
        paymentTerm: 1
        startDate: 2000-01-23
        customer:
          guid: guid
      properties:
        billingContact:
          $ref: '#/components/schemas/SimpleInputModel'
        businessUnit:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        completionEstimatePercentage:
          format: int32
          nullable: true
          type: integer
        costCenter:
          $ref: '#/components/schemas/SimpleInputModel'
        currency:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        customer:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        customerContact:
          $ref: '#/components/schemas/SimpleInputModel'
        deadline:
          format: date
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        expectedOrderDate:
          format: date
          nullable: true
          type: string
        expectedValue:
          $ref: '#/components/schemas/MoneyInputModelWithNullableAmount'
        internalName:
          nullable: true
          type: string
        invoiceNotes:
          nullable: true
          type: string
        invoiceTemplate:
          $ref: '#/components/schemas/InvoiceTemplateSubModel'
        isClosed:
          type: boolean
        isInternal:
          type: boolean
        isJoiningAllowed:
          default: true
          type: boolean
        leadSource:
          $ref: '#/components/schemas/SimpleInputModel'
        name:
          minLength: 1
          type: string
        number:
          format: int64
          nullable: true
          type: integer
        orderNumber:
          nullable: true
          type: string
        ourReference:
          nullable: true
          type: string
        paymentTerm:
          format: int32
          nullable: true
          type: integer
        probability:
          format: int32
          nullable: true
          type: integer
        projectOwner:
          $ref: '#/components/schemas/SimpleInputModel'
        projectStatus:
          $ref: '#/components/schemas/SimpleProjectStatusInputModel'
        salesPerson:
          $ref: '#/components/schemas/SimpleInputModel'
        salesStatus:
          $ref: '#/components/schemas/SimpleSalesStatusInputModel'
        startDate:
          format: date
          nullable: true
          type: string
        useOvertimeMultipliers:
          default: true
          type: boolean
        useProductsFromSetting:
          default: true
          type: boolean
        useWorktypesFromSetting:
          default: true
          type: boolean
        yourReference:
          nullable: true
          type: string
      required:
      - customer
      - name
      - projectOwner
      type: object
    ProjectInvoiceSettingsInputModel:
      example:
        projectFeeDescriptionFormat: projectFeeDescriptionFormat
        showReferenceNumber: true
        showLogoAndTitle: true
        showAttachmentPriceExcludingValueAddedTax: true
        projectTravelExpensePrimaryGroupBy: projectTravelExpensePrimaryGroupBy
        showQuantity: true
        project:
          guid: guid
        htmlText2:
          tagContext: tagContext
          value: value
          allowTags: true
        htmlText1:
          tagContext: tagContext
          value: value
          allowTags: true
        showFooter: true
        freeText1:
          tagContext: tagContext
          value: value
          allowTags: true
        freeText2:
          tagContext: tagContext
          value: value
          allowTags: true
        workHourGrouping: null
        projectFeeGrouping: OneByOne
        projectTravelExpenseSecondaryGroupBy: projectTravelExpenseSecondaryGroupBy
        showAttachmentUnitPrice: true
        workHourPrimaryGroupBy: workHourPrimaryGroupBy
        showAttachmentValueAddedTax: true
        showPriceExcludingValueAddedTax: true
        showAttachmentUnit: true
        showUnitPrice: true
        workHourDescriptionFormat: workHourDescriptionFormat
        projectFeeSecondaryGroupBy: projectFeeSecondaryGroupBy
        workHourSecondaryGroupBy: workHourSecondaryGroupBy
        showUnit: true
        showCategories: true
        projectTravelExpenseDescriptionFormat: projectTravelExpenseDescriptionFormat
        projectFeePrimaryGroupBy: projectFeePrimaryGroupBy
        showValueAddedTax: true
        style: BlackAndWhite
        projectTravelExpenseGrouping: null
      properties:
        freeText1:
          $ref: '#/components/schemas/TemplateFreeTextModel'
        freeText2:
          $ref: '#/components/schemas/TemplateFreeTextModel'
        htmlText1:
          $ref: '#/components/schemas/TemplateFreeTextModel'
        htmlText2:
          $ref: '#/components/schemas/TemplateFreeTextModel'
        project:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        projectFeeDescriptionFormat:
          nullable: true
          type: string
        projectFeeGrouping:
          $ref: '#/components/schemas/InvoiceGrouping'
        projectFeePrimaryGroupBy:
          nullable: true
          type: string
        projectFeeSecondaryGroupBy:
          nullable: true
          type: string
        projectTravelExpenseDescriptionFormat:
          nullable: true
          type: string
        projectTravelExpenseGrouping:
          $ref: '#/components/schemas/InvoiceGrouping'
        projectTravelExpensePrimaryGroupBy:
          nullable: true
          type: string
        projectTravelExpenseSecondaryGroupBy:
          nullable: true
          type: string
        showAttachmentPriceExcludingValueAddedTax:
          nullable: true
          type: boolean
        showAttachmentUnit:
          nullable: true
          type: boolean
        showAttachmentUnitPrice:
          nullable: true
          type: boolean
        showAttachmentValueAddedTax:
          nullable: true
          type: boolean
        showCategories:
          nullable: true
          type: boolean
        showFooter:
          nullable: true
          type: boolean
        showLogoAndTitle:
          nullable: true
          type: boolean
        showPriceExcludingValueAddedTax:
          nullable: true
          type: boolean
        showQuantity:
          nullable: true
          type: boolean
        showReferenceNumber:
          nullable: true
          type: boolean
        showUnit:
          nullable: true
          type: boolean
        showUnitPrice:
          nullable: true
          type: boolean
        showValueAddedTax:
          nullable: true
          type: boolean
        style:
          $ref: '#/components/schemas/InvoiceSkin'
        workHourDescriptionFormat:
          nullable: true
          type: string
        workHourGrouping:
          $ref: '#/components/schemas/InvoiceGrouping'
        workHourPrimaryGroupBy:
          nullable: true
          type: string
        workHourSecondaryGroupBy:
          nullable: true
          type: string
      required:
      - project
      type: object
    ProjectInvoiceSettingsOutputModel:
      example:
        projectFeeDescriptionFormat: projectFeeDescriptionFormat
        showReferenceNumber: true
        showLogoAndTitle: true
        showAttachmentPriceExcludingValueAddedTax: true
        projectTravelExpensePrimaryGroupBy: projectTravelExpensePrimaryGroupBy
        showQuantity: true
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        project:
          guid: guid
        htmlText2:
          tagContext: tagContext
          value: value
          allowTags: true
        htmlText1:
          tagContext: tagContext
          value: value
          allowTags: true
        showFooter: true
        freeText1:
          tagContext: tagContext
          value: value
          allowTags: true
        freeText2:
          tagContext: tagContext
          value: value
          allowTags: true
        workHourGrouping: null
        projectFeeGrouping: OneByOne
        projectTravelExpenseSecondaryGroupBy: projectTravelExpenseSecondaryGroupBy
        showAttachmentUnitPrice: true
        workHourPrimaryGroupBy: workHourPrimaryGroupBy
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        showAttachmentValueAddedTax: true
        showPriceExcludingValueAddedTax: true
        showAttachmentUnit: true
        showUnitPrice: true
        workHourDescriptionFormat: workHourDescriptionFormat
        projectFeeSecondaryGroupBy: projectFeeSecondaryGroupBy
        workHourSecondaryGroupBy: workHourSecondaryGroupBy
        showUnit: true
        showCategories: true
        projectTravelExpenseDescriptionFormat: projectTravelExpenseDescriptionFormat
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        projectFeePrimaryGroupBy: projectFeePrimaryGroupBy
        showValueAddedTax: true
        guid: guid
        style: BlackAndWhite
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        projectTravelExpenseGrouping: null
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        freeText1:
          $ref: '#/components/schemas/TemplateFreeTextModel'
        freeText2:
          $ref: '#/components/schemas/TemplateFreeTextModel'
        guid:
          nullable: true
          readOnly: true
          type: string
        htmlText1:
          $ref: '#/components/schemas/TemplateFreeTextModel'
        htmlText2:
          $ref: '#/components/schemas/TemplateFreeTextModel'
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        project:
          $ref: '#/components/schemas/ModelBase'
        projectFeeDescriptionFormat:
          nullable: true
          type: string
        projectFeeGrouping:
          $ref: '#/components/schemas/InvoiceGrouping'
        projectFeePrimaryGroupBy:
          nullable: true
          type: string
        projectFeeSecondaryGroupBy:
          nullable: true
          type: string
        projectTravelExpenseDescriptionFormat:
          nullable: true
          type: string
        projectTravelExpenseGrouping:
          $ref: '#/components/schemas/InvoiceGrouping'
        projectTravelExpensePrimaryGroupBy:
          nullable: true
          type: string
        projectTravelExpenseSecondaryGroupBy:
          nullable: true
          type: string
        showAttachmentPriceExcludingValueAddedTax:
          nullable: true
          type: boolean
        showAttachmentUnit:
          nullable: true
          type: boolean
        showAttachmentUnitPrice:
          nullable: true
          type: boolean
        showAttachmentValueAddedTax:
          nullable: true
          type: boolean
        showCategories:
          nullable: true
          type: boolean
        showFooter:
          nullable: true
          type: boolean
        showLogoAndTitle:
          nullable: true
          type: boolean
        showPriceExcludingValueAddedTax:
          nullable: true
          type: boolean
        showQuantity:
          nullable: true
          type: boolean
        showReferenceNumber:
          nullable: true
          type: boolean
        showUnit:
          nullable: true
          type: boolean
        showUnitPrice:
          nullable: true
          type: boolean
        showValueAddedTax:
          nullable: true
          type: boolean
        style:
          $ref: '#/components/schemas/InvoiceSkin'
        workHourDescriptionFormat:
          nullable: true
          type: string
        workHourGrouping:
          $ref: '#/components/schemas/InvoiceGrouping'
        workHourPrimaryGroupBy:
          nullable: true
          type: string
        workHourSecondaryGroupBy:
          nullable: true
          type: string
      type: object
    ProjectInvoiceTemplateSubModel:
      example:
        templateInvoiceGuid: templateInvoiceGuid
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        templateInvoiceGuid:
          deprecated: true
          nullable: true
          type: string
          x-deprecatedMessage: Not in use anymore.
          x-relation-guid: InvoiceTemplateModel
      type: object
    ProjectKeywordModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        category: Project
        isActive: true
        keyword: keyword
      properties:
        category:
          $ref: '#/components/schemas/KeywordCategory'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        keyword:
          minLength: 1
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
      required:
      - keyword
      type: object
    ProjectMemberCostExceptionInputModel:
      example:
        cost:
          amount: 6.027456183070403
          currencyCode: currencyCode
        project:
          guid: guid
        user:
          guid: guid
      properties:
        cost:
          $ref: '#/components/schemas/MoneyInputModelWithNullableAmount'
        project:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        user:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
      required:
      - project
      - user
      type: object
    ProjectMemberCostExceptionOutputModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        cost:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        project:
          number: 6
          isClosed: true
          name: name
          guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        user:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        customer:
          number: 0
          name: name
          guid: guid
      properties:
        cost:
          $ref: '#/components/schemas/MoneyOutputModel'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customer:
          $ref: '#/components/schemas/ProjectMemberCostExceptionProjectCustomerSubModel'
        guid:
          nullable: true
          readOnly: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        project:
          $ref: '#/components/schemas/ProjectMemberCostExceptionProjectSubModel'
        user:
          $ref: '#/components/schemas/UserWithFirstNameLastNamePhotoFileModelAndRequiredGuid'
      type: object
    ProjectMemberCostExceptionProjectCustomerSubModel:
      example:
        number: 0
        name: name
        guid: guid
      properties:
        guid:
          minLength: 1
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
        number:
          format: int64
          nullable: true
          type: integer
      required:
      - guid
      type: object
    ProjectMemberCostExceptionProjectSubModel:
      example:
        number: 6
        isClosed: true
        name: name
        guid: guid
      properties:
        guid:
          minLength: 1
          type: string
        isClosed:
          type: boolean
        name:
          nullable: true
          readOnly: true
          type: string
        number:
          format: int64
          nullable: true
          type: integer
      required:
      - guid
      type: object
    ProjectNameDisplayFormatOptions:
      description: ""
      enum:
      - ProjectNamePhaseName
      - CustomerNameProjectNamePhaseName
      type: string
      x-enumNames:
      - ProjectNamePhaseName
      - CustomerNameProjectNamePhaseName
    ProjectNameDisplayOptions:
      description: ""
      enum:
      - ShowProjectLongName
      - ShowProjectShortName
      type: string
      x-enumNames:
      - ShowProjectLongName
      - ShowProjectShortName
    ProjectOutputModel:
      example:
        rootPhase:
          name: name
          guid: guid
        useWorkTypesFromSetting: true
        businessUnit:
          code: code
          companyName: companyName
          companyCountryGuid: companyCountryGuid
          name: name
          guid: guid
          companyBusinessUnitGuid: companyBusinessUnitGuid
          companyGuid: companyGuid
          companyCurrencyGuid: companyCurrencyGuid
        orderNumber: orderNumber
        billingContact:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        keywords:
        - name: name
          guid: guid
        - name: name
          guid: guid
        useOvertimeMultipliers: true
        isDailyAllowanceBillable: true
        expectedOrderDate: 2000-01-23
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        description: description
        internalName: internalName
        number: 2
        ourReference: ourReference
        customerContact:
          firstName: firstName
          lastName: lastName
          isDeleted: true
          name: name
          guid: guid
        currency:
          symbol: symbol
          code: code
          name: name
          guid: guid
        deadline: 2000-01-23
        isOtherTravelExpensesBillable: true
        defaultWorkType:
          name: name
          guid: guid
        isMileageBillable: true
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        completionEstimatePercentage: 6
        isJoiningAllowed: true
        useProductsFromSetting: true
        yourReference: yourReference
        costCenter:
          identifier: identifier
          name: name
          guid: guid
        leadSource:
          name: name
          guid: guid
        probability: 9
        isInternal: true
        invoiceNotes: invoiceNotes
        pricelist:
          isVolumePricing: true
          isCustom: true
          name: name
          guid: guid
        projectStatus:
          projectStatusTypeGuid: projectStatusTypeGuid
          name: name
          description: description
          guid: guid
        calculatedCompletionPercentage: 0
        isClosed: true
        closedDate: 2000-01-23
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        expectedValue:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        invoiceTemplate:
          templateInvoiceGuid: templateInvoiceGuid
          name: name
          guid: guid
        name: name
        guid: guid
        projectOwner:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        salesPerson:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        salesStatus:
          salesStatusTypeGuid: salesStatusTypeGuid
          name: name
          guid: guid
        paymentTerm: 7
        startDate: 2000-01-23
        customer:
          number: 1
          name: name
          guid: guid
      properties:
        billingContact:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        businessUnit:
          $ref: '#/components/schemas/BusinessUnitSubModel'
        calculatedCompletionPercentage:
          format: int32
          nullable: true
          type: integer
        closedDate:
          format: date
          nullable: true
          type: string
        completionEstimatePercentage:
          format: int32
          nullable: true
          type: integer
        costCenter:
          $ref: '#/components/schemas/ProjectCostCenterSubModel'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        currency:
          $ref: '#/components/schemas/CurrencySubModel2'
        customer:
          $ref: '#/components/schemas/ProjectCustomerSubModel'
        customerContact:
          $ref: '#/components/schemas/CustomerContactSubModel'
        deadline:
          format: date
          nullable: true
          type: string
        defaultWorkType:
          $ref: '#/components/schemas/ModelWithName'
        description:
          nullable: true
          type: string
        expectedOrderDate:
          format: date
          nullable: true
          type: string
        expectedValue:
          $ref: '#/components/schemas/MoneyOutputModel'
        guid:
          nullable: true
          readOnly: true
          type: string
        internalName:
          nullable: true
          type: string
        invoiceNotes:
          nullable: true
          type: string
        invoiceTemplate:
          $ref: '#/components/schemas/ProjectInvoiceTemplateSubModel'
        isClosed:
          type: boolean
        isDailyAllowanceBillable:
          type: boolean
        isInternal:
          type: boolean
        isJoiningAllowed:
          default: true
          type: boolean
        isMileageBillable:
          type: boolean
        isOtherTravelExpensesBillable:
          type: boolean
        keywords:
          items:
            $ref: '#/components/schemas/ModelWithName'
          nullable: true
          type: array
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        leadSource:
          $ref: '#/components/schemas/ModelWithName'
        name:
          minLength: 1
          type: string
        number:
          format: int64
          nullable: true
          type: integer
        orderNumber:
          nullable: true
          type: string
        ourReference:
          nullable: true
          type: string
        paymentTerm:
          format: int32
          nullable: true
          type: integer
        pricelist:
          $ref: '#/components/schemas/ProjectPricelistSubModel'
        probability:
          format: int32
          nullable: true
          type: integer
        projectOwner:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        projectStatus:
          $ref: '#/components/schemas/ProjectStatusSubModel'
        rootPhase:
          $ref: '#/components/schemas/ModelWithName'
        salesPerson:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        salesStatus:
          $ref: '#/components/schemas/SalesStatusSubModel'
        startDate:
          format: date
          nullable: true
          type: string
        useOvertimeMultipliers:
          default: true
          type: boolean
        useProductsFromSetting:
          default: true
          type: boolean
        useWorkTypesFromSetting:
          default: true
          type: boolean
        yourReference:
          nullable: true
          type: string
      required:
      - name
      type: object
    ProjectPricelistSubModel:
      example:
        isVolumePricing: true
        isCustom: true
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        isCustom:
          type: boolean
        isVolumePricing:
          type: boolean
        name:
          nullable: true
          type: string
      type: object
    ProjectProductInputModel:
      example:
        product:
          guid: guid
        guid: guid
        project:
          guid: guid
      properties:
        guid:
          nullable: true
          type: string
        product:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        project:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
      required:
      - product
      - project
      type: object
    ProjectProductOutputModel:
      example:
        product:
          productCode: productCode
          name: name
          guid: guid
          isActive: true
          productType: OwnWork
          productCategory: productCategory
        guid: guid
        project:
          number: 0
          name: name
          guid: guid
      properties:
        guid:
          nullable: true
          type: string
        product:
          $ref: '#/components/schemas/ProjectProductSubModel'
        project:
          $ref: '#/components/schemas/ProjectSubModel'
      required:
      - product
      type: object
    ProjectProductSubModel:
      example:
        productCode: productCode
        name: name
        guid: guid
        isActive: true
        productType: OwnWork
        productCategory: productCategory
      properties:
        guid:
          minLength: 1
          type: string
        isActive:
          readOnly: true
          type: boolean
        name:
          nullable: true
          readOnly: true
          type: string
        productCategory:
          nullable: true
          readOnly: true
          type: string
        productCode:
          nullable: true
          type: string
        productType:
          $ref: '#/components/schemas/TypeOfProduct'
      required:
      - guid
      type: object
    ProjectRecurringFeeRuleInputModel:
      example:
        phase:
          guid: guid
        unitPrice:
          amount: 6.027456183070403
          currencyCode: currencyCode
        recurrenceEndDate: 2000-01-23
        product:
          guid: guid
        salesAccount:
          guid: guid
        quantity: 6.027456183070403
        recurrenceTimes: 1
        recurrenceEndType: Never
        costCenter:
          guid: guid
        vatRate: 5.962133916683182
        description: description
        project:
          guid: guid
        isActive: true
        recurringSalesAccount:
          guid: guid
        measurementUnit: measurementUnit
        frequency: 0
        recurrenceStartDate: 2000-01-23
        unitCost:
          amount: 6.027456183070403
          currencyCode: currencyCode
        hasVolumePricing: true
        user:
          guid: guid
        displayPeriodStartDate: 2000-01-23
        productType: FixedFees
      properties:
        costCenter:
          $ref: '#/components/schemas/SimpleInputModel'
        description:
          nullable: true
          type: string
        displayPeriodStartDate:
          format: date
          nullable: true
          type: string
        frequency:
          format: int32
          type: integer
        hasVolumePricing:
          type: boolean
        isActive:
          default: true
          type: boolean
        measurementUnit:
          nullable: true
          type: string
        phase:
          $ref: '#/components/schemas/SimpleInputModel'
        product:
          $ref: '#/components/schemas/SimpleInputModel'
        productType:
          $ref: '#/components/schemas/ProductType'
        project:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        quantity:
          format: double
          type: number
        recurrenceEndDate:
          format: date
          nullable: true
          type: string
        recurrenceEndType:
          $ref: '#/components/schemas/RecurrenceEndTypes'
        recurrenceStartDate:
          format: date
          nullable: true
          type: string
        recurrenceTimes:
          format: int32
          nullable: true
          type: integer
        recurringSalesAccount:
          $ref: '#/components/schemas/SimpleInputModel'
        salesAccount:
          $ref: '#/components/schemas/SimpleInputModel'
        unitCost:
          $ref: '#/components/schemas/MoneyInputModelWithNullableAmount'
        unitPrice:
          $ref: '#/components/schemas/MoneyInputModelWithNullableAmount'
        user:
          $ref: '#/components/schemas/SimpleInputModel'
        vatRate:
          format: double
          nullable: true
          type: number
      required:
      - frequency
      - project
      type: object
    ProjectRecurringFeeRuleOutputModel:
      example:
        recurrenceEndDate: 2000-01-23
        generatedTimes: 6
        recurrenceEndType: Never
        vatRate: 5.637376656633329
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        description: description
        project:
          name: name
          guid: guid
          companyGuid: companyGuid
        isActive: true
        frequency: 0
        recurrenceStartDate: 2000-01-23
        hasVolumePricing: true
        productType: FixedFees
        phase:
          name: name
          guid: guid
        unitPrice:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        product:
          code: code
          name: name
          guid: guid
        salesAccount:
          number: number
          name: name
          guid: guid
        quantity: 1.4658129805029452
        recurrenceTimes: 5
        costCenter:
          identifier: identifier
          name: name
          guid: guid
        recurringSalesAccount:
          number: number
          name: name
          guid: guid
        measurementUnit: measurementUnit
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        unitCost:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        name: name
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        user:
          code: code
          name: name
          guid: guid
          companyGuid: companyGuid
        displayPeriodStartDate: 2000-01-23
        customer:
          number: 0
          name: name
          guid: guid
      properties:
        costCenter:
          $ref: '#/components/schemas/ProjectCostCenterSubModel'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customer:
          $ref: '#/components/schemas/ProjectFeeCustomerSubModel'
        description:
          nullable: true
          type: string
        displayPeriodStartDate:
          format: date
          nullable: true
          type: string
        frequency:
          format: int32
          nullable: true
          type: integer
        generatedTimes:
          format: int32
          type: integer
        guid:
          nullable: true
          readOnly: true
          type: string
        hasVolumePricing:
          type: boolean
        isActive:
          default: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        measurementUnit:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        phase:
          $ref: '#/components/schemas/ModelWithName'
        product:
          $ref: '#/components/schemas/ProjectFeeProductSubModel'
        productType:
          $ref: '#/components/schemas/ProductType'
        project:
          $ref: '#/components/schemas/ProjectFeeProjectSubModel'
        quantity:
          format: double
          type: number
        recurrenceEndDate:
          format: date
          nullable: true
          type: string
        recurrenceEndType:
          $ref: '#/components/schemas/RecurrenceEndTypes'
        recurrenceStartDate:
          format: date
          nullable: true
          type: string
        recurrenceTimes:
          format: int32
          nullable: true
          type: integer
        recurringSalesAccount:
          $ref: '#/components/schemas/ProjectSalesAccountSubModel'
        salesAccount:
          $ref: '#/components/schemas/ProjectSalesAccountSubModel'
        unitCost:
          $ref: '#/components/schemas/MoneyOutputModel'
        unitPrice:
          $ref: '#/components/schemas/MoneyOutputModel'
        user:
          $ref: '#/components/schemas/UserSubModel'
        vatRate:
          format: double
          nullable: true
          type: number
      type: object
    ProjectSalesAccountSubModel:
      example:
        number: number
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        number:
          nullable: true
          type: string
      type: object
    ProjectSalesNoteInputModel:
      example:
        note: note
        project:
          guid: guid
        user:
          guid: guid
      properties:
        note:
          nullable: true
          type: string
        project:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        user:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
      required:
      - project
      - user
      type: object
    ProjectSalesNoteOutputModel:
      example:
        lastUpdatedBy:
          guid: guid
        note: note
        isDeleted: true
        createdBy:
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        project:
          guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        user:
          guid: guid
      properties:
        createdBy:
          $ref: '#/components/schemas/ModelBase'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isDeleted:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/ModelBase'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        note:
          nullable: true
          type: string
        project:
          $ref: '#/components/schemas/ModelBase'
        user:
          $ref: '#/components/schemas/ModelBase'
      type: object
    ProjectStatusSubModel:
      example:
        projectStatusTypeGuid: projectStatusTypeGuid
        name: name
        description: description
        guid: guid
      properties:
        description:
          nullable: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          type: string
        projectStatusTypeGuid:
          nullable: true
          type: string
          x-relation-guid: PhaseStatusTypeModel
      type: object
    ProjectStatusTypeModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        sortOrder: 0
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        sortOrder:
          format: int32
          type: integer
      required:
      - name
      type: object
    ProjectSubModel:
      example:
        number: 0
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        number:
          format: int64
          nullable: true
          type: integer
      type: object
    ProjectTaskStatusModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isDefault: true
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        sortOrder: 0
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
        isDone: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        isDefault:
          type: boolean
        isDone:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        sortOrder:
          format: int32
          type: integer
      required:
      - name
      type: object
    ProjectTravelExpenseBillingScheduleType:
      description: ""
      enum:
      - Immediately
      - WhenPhaseCompleted
      - OnDate
      type: string
      x-enumNames:
      - Immediately
      - WhenPhaseCompleted
      - OnDate
    ProjectTravelExpenseFileModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        travelExpenseGuid: travelExpenseGuid
        fileGuid: fileGuid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        description: description
        source: Severa
        isInternal: true
        size: 0.8008281904610115
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        name: name
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        category: Misc
        contentType: contentType
      properties:
        category:
          $ref: '#/components/schemas/FileCategory'
        contentType:
          nullable: true
          readOnly: true
          type: string
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        description:
          nullable: true
          type: string
        fileGuid:
          nullable: true
          readOnly: true
          type: string
          x-relation-guid: FileModel
        guid:
          nullable: true
          readOnly: true
          type: string
        isInternal:
          nullable: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        size:
          format: double
          nullable: true
          readOnly: true
          type: number
        source:
          $ref: '#/components/schemas/TravelReimbursementAttachmentSource'
        travelExpenseGuid:
          nullable: true
          readOnly: true
          type: string
          x-relation-guid: ProjectTravelExpenseOutputModel
      required:
      - name
      type: object
    ProjectTravelExpenseInputModel:
      example:
        vatRate: 5.637376656633329
        description: description
        project:
          guid: guid
        invoiceRowDescription: invoiceRowDescription
        travelReimbursementRequired: true
        travelReimbursement:
          guid: guid
        phase:
          guid: guid
        travelStartTime: 2000-01-23T04:56:07.000+00:00
        unitPrice:
          amount: 5.962133916683182
          currencyCode: currencyCode
        salesAccount:
          guid: guid
        quantity: 1.4658129805029452
        billingSchedule: Immediately
        costCenter:
          guid: guid
        billingDependencyPhase:
          guid: guid
        travelEndTime: 2000-01-23T04:56:07.000+00:00
        plannedBillingDate: 2000-01-23
        measurementUnit: measurementUnit
        isBillable: true
        invoiceQuantity: 0.8008281904610115
        travelExpense:
          guid: guid
        purchaseVatRate: 6.027456183070403
        unitCost:
          amount: 5.962133916683182
          currencyCode: currencyCode
        costAccount:
          guid: guid
        invoice:
          guid: guid
        invoiceRowComment: invoiceRowComment
        user:
          guid: guid
        eventDate: 2000-01-23
      properties:
        billingDependencyPhase:
          $ref: '#/components/schemas/SimpleInputModel'
        billingSchedule:
          $ref: '#/components/schemas/ProjectTravelExpenseBillingScheduleType'
        costAccount:
          $ref: '#/components/schemas/SimpleInputModel'
        costCenter:
          $ref: '#/components/schemas/SimpleInputModel'
        description:
          nullable: true
          type: string
        eventDate:
          format: date
          nullable: true
          type: string
        invoice:
          $ref: '#/components/schemas/SimpleInputModel'
        invoiceQuantity:
          format: double
          nullable: true
          type: number
        invoiceRowComment:
          nullable: true
          type: string
        invoiceRowDescription:
          nullable: true
          type: string
        isBillable:
          nullable: true
          type: boolean
        measurementUnit:
          nullable: true
          type: string
        phase:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        plannedBillingDate:
          format: date
          nullable: true
          type: string
        project:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        purchaseVatRate:
          format: double
          nullable: true
          type: number
        quantity:
          format: double
          type: number
        salesAccount:
          $ref: '#/components/schemas/SimpleInputModel'
        travelEndTime:
          format: date-time
          nullable: true
          type: string
        travelExpense:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        travelReimbursement:
          $ref: '#/components/schemas/SimpleInputModel'
        travelReimbursementRequired:
          default: true
          type: boolean
        travelStartTime:
          format: date-time
          nullable: true
          type: string
        unitCost:
          $ref: '#/components/schemas/MoneyInputModel'
        unitPrice:
          $ref: '#/components/schemas/MoneyInputModel'
        user:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        vatRate:
          format: double
          nullable: true
          type: number
      required:
      - phase
      - project
      - quantity
      - travelExpense
      - user
      type: object
    ProjectTravelExpenseOutputModel:
      example:
        invoiceRowGuid: invoiceRowGuid
        vatRate: 7.061401241503109
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        description: description
        project:
          isInternal: true
          number: 5
          name: name
          guid: guid
          companyGuid: companyGuid
        invoiceRowDescription: invoiceRowDescription
        travelReimbursementRequired: true
        travelReimbursement:
          isLocked: true
          guid: guid
          isApproved: true
          status: status
        phase:
          name: name
          guid: guid
        travelStartTime: 2000-01-23T04:56:07.000+00:00
        unitPrice:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        salesAccount:
          name: name
          guid: guid
        quantity: 2.3021358869347655
        unitCostExcludingPurchaseVat:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        billingSchedule: Immediately
        costCenter:
          name: name
          guid: guid
        billingDependencyPhase:
          name: name
          guid: guid
        travelEndTime: 2000-01-23T04:56:07.000+00:00
        plannedBillingDate: 2000-01-23
        measurementUnit: measurementUnit
        isBillable: true
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        invoiceQuantity: 1.4658129805029452
        travelExpense:
          code: code
          includeTime: true
          expenseClass: Mileage
          name: name
          guid: guid
        purchaseVatRate: 5.637376656633329
        unitCost:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        guid: guid
        attachmentCount: 0
        costAccount:
          name: name
          guid: guid
        invoice:
          date: 2000-01-23
          number: 6
          guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        invoiceRowComment: invoiceRowComment
        user:
          code: code
          name: name
          guid: guid
          companyGuid: companyGuid
        customer:
          name: name
          guid: guid
        eventDate: 2000-01-23
      properties:
        attachmentCount:
          format: int32
          type: integer
        billingDependencyPhase:
          $ref: '#/components/schemas/ModelWithName'
        billingSchedule:
          $ref: '#/components/schemas/ProjectTravelExpenseBillingScheduleType'
        costAccount:
          $ref: '#/components/schemas/ModelWithName'
        costCenter:
          $ref: '#/components/schemas/ModelWithName'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customer:
          $ref: '#/components/schemas/ModelWithName'
        description:
          nullable: true
          type: string
        eventDate:
          format: date
          nullable: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        invoice:
          $ref: '#/components/schemas/InvoiceSubModel'
        invoiceQuantity:
          format: double
          nullable: true
          type: number
        invoiceRowComment:
          nullable: true
          type: string
        invoiceRowDescription:
          nullable: true
          type: string
        invoiceRowGuid:
          nullable: true
          type: string
          x-relation-guid: InvoiceRowOutputModel
        isBillable:
          nullable: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        measurementUnit:
          nullable: true
          type: string
        phase:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
        plannedBillingDate:
          format: date
          nullable: true
          type: string
        project:
          $ref: '#/components/schemas/ProjectTravelExpenseProjectSubModel'
        purchaseVatRate:
          format: double
          nullable: true
          type: number
        quantity:
          format: double
          nullable: true
          type: number
        salesAccount:
          $ref: '#/components/schemas/ModelWithName'
        travelEndTime:
          format: date-time
          nullable: true
          type: string
        travelExpense:
          $ref: '#/components/schemas/TravelExpenseSubModel'
        travelReimbursement:
          $ref: '#/components/schemas/TravelReimbursementSubModel'
        travelReimbursementRequired:
          default: true
          type: boolean
        travelStartTime:
          format: date-time
          nullable: true
          type: string
        unitCost:
          $ref: '#/components/schemas/MoneyOutputModel'
        unitCostExcludingPurchaseVat:
          $ref: '#/components/schemas/MoneyOutputModel'
        unitPrice:
          $ref: '#/components/schemas/MoneyOutputModel'
        user:
          $ref: '#/components/schemas/UserRequiredSubModel'
        vatRate:
          format: double
          nullable: true
          type: number
      type: object
    ProjectTravelExpenseProjectSubModel:
      example:
        isInternal: true
        number: 5
        name: name
        guid: guid
        companyGuid: companyGuid
      properties:
        companyGuid:
          nullable: true
          type: string
          x-relation-guid: CompanyModel
        guid:
          minLength: 1
          type: string
        isInternal:
          type: boolean
        name:
          nullable: true
          readOnly: true
          type: string
        number:
          format: int64
          nullable: true
          type: integer
      required:
      - guid
      type: object
    ProjectWorkHourPriceInputModel:
      example:
        phase:
          guid: guid
        unitPrice:
          amount: 5.962133916683182
          currencyCode: currencyCode
        workType:
          guid: guid
        project:
          guid: guid
        user:
          guid: guid
        isBillable: true
      properties:
        isBillable:
          default: true
          nullable: true
          type: boolean
        phase:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        project:
          $ref: '#/components/schemas/SimpleInputModel'
        unitPrice:
          $ref: '#/components/schemas/MoneyInputModel'
        user:
          $ref: '#/components/schemas/SimpleInputModel'
        workType:
          $ref: '#/components/schemas/SimpleInputModel'
      required:
      - project
      - unitPrice
      type: object
    ProjectWorkHourPriceOutputModel:
      example:
        phase:
          name: name
          guid: guid
        unitPrice:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        isAvailable: true
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        workType:
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        project:
          number: 0
          name: name
          guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        user:
          name: name
          guid: guid
        isBillable: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isAvailable:
          type: boolean
        isBillable:
          nullable: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        phase:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
        project:
          $ref: '#/components/schemas/ProjectSubModel'
        unitPrice:
          $ref: '#/components/schemas/MoneyOutputModel'
        user:
          $ref: '#/components/schemas/ModelWithName'
        workType:
          $ref: '#/components/schemas/ModelWithName'
      type: object
    ProjectWorkTypeModel:
      example:
        isDefault: true
        projectGuid: projectGuid
        guid: guid
        worktype:
          code: code
          isProductive: true
          name: name
          guid: guid
          isActive: true
      properties:
        guid:
          nullable: true
          type: string
        isDefault:
          type: boolean
        projectGuid:
          minLength: 1
          type: string
          x-relation-guid: ProjectOutputModel
        worktype:
          $ref: '#/components/schemas/WorkTypeSubModel'
      required:
      - projectGuid
      - worktype
      type: object
    ProposalBillingAddressSubModel:
      example:
        country: country
        city: city
        postalCode: postalCode
        guid: guid
        addressline: addressline
      properties:
        addressline:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        postalCode:
          nullable: true
          type: string
      type: object
    ProposalCustomerSubModel:
      example:
        number: 0
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        number:
          format: int64
          nullable: true
          type: integer
      type: object
    ProposalFeeRowInputModel:
      example:
        proposal:
          guid: guid
        unitPrice:
          amount: 5.962133916683182
          currencyCode: currencyCode
        product:
          guid: guid
        quantity: 0.8008281904610115
        vatRate: 1.4658129805029452
        description: description
        isShownOnProposal: true
        measurementUnit: measurementUnit
        subtotal:
          guid: guid
        sortOrder: 6
        unitCost:
          amount: 5.962133916683182
          currencyCode: currencyCode
        name: name
        projectFee:
          guid: guid
      properties:
        description:
          nullable: true
          type: string
        isShownOnProposal:
          default: true
          type: boolean
        measurementUnit:
          nullable: true
          type: string
        name:
          maxLength: 200
          minLength: 0
          type: string
        product:
          $ref: '#/components/schemas/SimpleInputModel'
        projectFee:
          $ref: '#/components/schemas/SimpleInputModel'
        proposal:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        quantity:
          format: double
          type: number
        sortOrder:
          format: int32
          nullable: true
          type: integer
        subtotal:
          $ref: '#/components/schemas/SimpleInputModel'
        unitCost:
          $ref: '#/components/schemas/MoneyInputModel'
        unitPrice:
          $ref: '#/components/schemas/MoneyInputModel'
        vatRate:
          format: double
          nullable: true
          type: number
      required:
      - name
      - proposal
      - quantity
      type: object
    ProposalFeeRowOutputModel:
      example:
        proposal:
          guid: guid
        unitPrice:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        product:
          guid: guid
        quantity: 0.8008281904610115
        vatRate: 1.4658129805029452
        description: description
        isShownOnProposal: true
        measurementUnit: measurementUnit
        subtotal:
          guid: guid
        sortOrder: 6
        unitCost:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        name: name
        guid: guid
        projectFee:
          guid: guid
      properties:
        description:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        isShownOnProposal:
          type: boolean
        measurementUnit:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        product:
          $ref: '#/components/schemas/ModelBase'
        projectFee:
          $ref: '#/components/schemas/ModelBase'
        proposal:
          $ref: '#/components/schemas/ModelBase'
        quantity:
          format: double
          nullable: true
          type: number
        sortOrder:
          format: int32
          nullable: true
          type: integer
        subtotal:
          $ref: '#/components/schemas/ModelBase'
        unitCost:
          $ref: '#/components/schemas/MoneyOutputModel'
        unitPrice:
          $ref: '#/components/schemas/MoneyOutputModel'
        vatRate:
          format: double
          nullable: true
          type: number
      type: object
    ProposalInputModel:
      example:
        freeText1:
          value: value
        proposalDate: 2000-01-23
        freeText2:
          value: value
        customerContactPerson:
          guid: guid
        proposalStatus:
          guid: guid
        culture:
          guid: guid
        name: name
        project:
          guid: guid
        language:
          guid: guid
        billingAddress:
          guid: guid
      properties:
        billingAddress:
          $ref: '#/components/schemas/SimpleInputModel'
        culture:
          $ref: '#/components/schemas/SimpleInputModel'
        customerContactPerson:
          $ref: '#/components/schemas/SimpleInputModel'
        freeText1:
          $ref: '#/components/schemas/FreeTextInputModel'
        freeText2:
          $ref: '#/components/schemas/FreeTextInputModel'
        language:
          $ref: '#/components/schemas/SimpleInputModel'
        name:
          maxLength: 50
          minLength: 0
          type: string
        project:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        proposalDate:
          format: date
          nullable: true
          type: string
        proposalStatus:
          $ref: '#/components/schemas/SimpleInputModel'
      required:
      - name
      - project
      type: object
    ProposalLanguageSubModel:
      example:
        englishName: englishName
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        englishName:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    ProposalOutputModel:
      example:
        proposalDate: 2000-01-23
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        totalIncludingVat:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        customerContactPerson:
          name: name
          guid: guid
        totalExcludingVat:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        project:
          number: 6
          name: name
          guid: guid
        language:
          englishName: englishName
          code: code
          name: name
          guid: guid
        freeText1:
          plainText: plainText
          tagContext: tagContext
          text: text
          value: value
          allowTags: true
        freeText2:
          plainText: plainText
          tagContext: tagContext
          text: text
          value: value
          allowTags: true
        number: number
        pricelist:
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        proposalStatus:
          name: name
          guid: guid
        culture:
          englishName: englishName
          code: code
          name: name
          guid: guid
        name: name
        guid: guid
        billingAddress:
          country: country
          city: city
          postalCode: postalCode
          guid: guid
          addressline: addressline
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        customer:
          number: 0
          name: name
          guid: guid
      properties:
        billingAddress:
          $ref: '#/components/schemas/ProposalBillingAddressSubModel'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        culture:
          $ref: '#/components/schemas/FormattingCultureSubModel'
        customer:
          $ref: '#/components/schemas/ProposalCustomerSubModel'
        customerContactPerson:
          $ref: '#/components/schemas/CustomerContactPersonSubModel'
        freeText1:
          $ref: '#/components/schemas/FreeTextModel2'
        freeText2:
          $ref: '#/components/schemas/FreeTextModel2'
        guid:
          nullable: true
          readOnly: true
          type: string
        language:
          $ref: '#/components/schemas/ProposalLanguageSubModel'
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          type: string
        number:
          nullable: true
          type: string
        pricelist:
          $ref: '#/components/schemas/ModelWithName'
        project:
          $ref: '#/components/schemas/ProposalProjectSubModel'
        proposalDate:
          format: date
          nullable: true
          type: string
        proposalStatus:
          $ref: '#/components/schemas/ModelWithName'
        totalExcludingVat:
          $ref: '#/components/schemas/MoneyOutputModel'
        totalIncludingVat:
          $ref: '#/components/schemas/MoneyOutputModel'
      type: object
    ProposalProjectSubModel:
      example:
        number: 6
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        number:
          format: int64
          nullable: true
          type: integer
      type: object
    ProposalSettingsOutputModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        showGanttChart: false
        showUnitPrice: true
        showTotalPrice: true
        showTreeview: false
        showQuantity: true
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        showOurReference: false
        isTaxFree: false
        showUnit: true
        showBillingContact: false
        showYourReference: false
        showProjectMembers: false
        showProjectPlan: false
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        printTotalInPdf: DoNotPrintToProposal
        showBillingDetails: false
        showOrderNumber: false
        guid: guid
        showPaymentTerms: false
        style: BlackAndWhite
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isTaxFree:
          default: false
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        printTotalInPdf:
          $ref: '#/components/schemas/PrintToPdf'
        showBillingContact:
          default: false
          type: boolean
        showBillingDetails:
          default: false
          deprecated: true
          type: boolean
          x-deprecatedMessage: Obsolete
        showGanttChart:
          default: false
          deprecated: true
          type: boolean
          x-deprecatedMessage: Obsolete
        showOrderNumber:
          default: false
          type: boolean
        showOurReference:
          default: false
          type: boolean
        showPaymentTerms:
          default: false
          type: boolean
        showProjectMembers:
          default: false
          type: boolean
        showProjectPlan:
          default: false
          type: boolean
        showQuantity:
          default: true
          type: boolean
        showTotalPrice:
          default: true
          type: boolean
        showTreeview:
          default: false
          deprecated: true
          type: boolean
          x-deprecatedMessage: Obsolete
        showUnit:
          default: true
          type: boolean
        showUnitPrice:
          default: true
          type: boolean
        showYourReference:
          default: false
          type: boolean
        style:
          $ref: '#/components/schemas/InvoiceSkin'
      type: object
    ProposalStatusInputModel:
      example:
        isWon: true
        isDefault: true
        sortOrder: 0
        name: name
        isLost: true
        isActive: true
      properties:
        isActive:
          default: true
          type: boolean
        isDefault:
          type: boolean
        isLost:
          type: boolean
        isWon:
          type: boolean
        name:
          maxLength: 200
          minLength: 0
          type: string
        sortOrder:
          format: int32
          type: integer
      required:
      - name
      type: object
    ProposalStatusOutputModel:
      example:
        isWon: true
        isDefault: true
        sortOrder: 0
        name: name
        guid: guid
        isLost: true
        isActive: true
      properties:
        guid:
          nullable: true
          type: string
        isActive:
          type: boolean
        isDefault:
          type: boolean
        isLost:
          type: boolean
        isWon:
          type: boolean
        name:
          nullable: true
          type: string
        sortOrder:
          format: int32
          type: integer
      type: object
    ProposalSubtotalInputModel:
      example:
        phase:
          guid: guid
        proposal:
          guid: guid
        sortOrder: 0
        name: name
        description: description
        isShownOnProposal: true
      properties:
        description:
          nullable: true
          type: string
        isShownOnProposal:
          default: true
          type: boolean
        name:
          maxLength: 200
          minLength: 0
          type: string
        phase:
          $ref: '#/components/schemas/ModelBase'
        proposal:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        sortOrder:
          format: int32
          nullable: true
          type: integer
      required:
      - name
      - proposal
      type: object
    ProposalSubtotalOutputModel:
      example:
        phase:
          guid: guid
        proposal:
          guid: guid
        sortOrder: 0
        name: name
        description: description
        guid: guid
        projectFee:
          guid: guid
        isShownOnProposal: true
      properties:
        description:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        isShownOnProposal:
          type: boolean
        name:
          nullable: true
          type: string
        phase:
          $ref: '#/components/schemas/ModelBase'
        projectFee:
          $ref: '#/components/schemas/ModelBase'
        proposal:
          $ref: '#/components/schemas/ModelBase'
        sortOrder:
          format: int32
          nullable: true
          type: integer
      type: object
    ProposalWorkhourRowInputModel:
      example:
        phase:
          guid: guid
        proposal:
          guid: guid
        quantity: 0.8008281904610115
        subtotal:
          guid: guid
        sortOrder: 6
        name: name
        workType:
          guid: guid
        description: description
        isShownOnProposal: true
      properties:
        description:
          nullable: true
          type: string
        isShownOnProposal:
          default: true
          type: boolean
        name:
          maxLength: 200
          minLength: 0
          type: string
        phase:
          $ref: '#/components/schemas/SimpleInputModel'
        proposal:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        quantity:
          format: double
          type: number
        sortOrder:
          format: int32
          nullable: true
          type: integer
        subtotal:
          $ref: '#/components/schemas/SimpleInputModel'
        workType:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
      required:
      - name
      - proposal
      - quantity
      - workType
      type: object
    ProposalWorkhourRowOutputModel:
      example:
        phase:
          guid: guid
        proposal:
          guid: guid
        unitPrice:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        quantity: 0.8008281904610115
        description: description
        isShownOnProposal: true
        subtotal:
          guid: guid
        sortOrder: 6
        unitCost:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        name: name
        workType:
          guid: guid
        guid: guid
        projectFee:
          guid: guid
      properties:
        description:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        isShownOnProposal:
          default: true
          type: boolean
        name:
          nullable: true
          type: string
        phase:
          $ref: '#/components/schemas/ModelBase'
        projectFee:
          $ref: '#/components/schemas/ModelBase'
        proposal:
          $ref: '#/components/schemas/ModelBase'
        quantity:
          format: double
          nullable: true
          type: number
        sortOrder:
          format: int32
          nullable: true
          type: integer
        subtotal:
          $ref: '#/components/schemas/ModelBase'
        unitCost:
          $ref: '#/components/schemas/MoneyOutputModel'
        unitPrice:
          $ref: '#/components/schemas/MoneyOutputModel'
        workType:
          $ref: '#/components/schemas/ModelBase'
      type: object
    PublicAuthenticationOutputModel:
      example:
        access_token: access_token
        refresh_token_expires_in: 6
        refresh_token: refresh_token
        scope: scope
        access_token_expires_utc: 2000-01-23T04:56:07.000+00:00
        refresh_token_expires_utc: 2000-01-23T04:56:07.000+00:00
        access_token_expires_in: 0
        access_token_type: access_token_type
      properties:
        access_token:
          type: string
        access_token_expires_in:
          format: int64
          type: integer
        access_token_expires_utc:
          format: date-time
          type: string
        access_token_type:
          type: string
        refresh_token:
          type: string
        refresh_token_expires_in:
          format: int64
          type: integer
        refresh_token_expires_utc:
          format: date-time
          type: string
        scope:
          type: string
      type: object
    QuickSearchOptions:
      description: ""
      enum:
      - ShowOpenProjectsSalesCasesAndCustomers
      - ShowOpenAndClosedProjectsSalesCasesAndCustomers
      type: string
      x-enumNames:
      - ShowOpenProjectsSalesCasesAndCustomers
      - ShowOpenAndClosedProjectsSalesCasesAndCustomers
    RecurrenceEndTypes:
      description: ""
      enum:
      - Never
      - AfterNumberOfTimes
      - OnDate
      type: string
      x-enumNames:
      - Never
      - AfterNumberOfTimes
      - OnDate
    RecurrenceFrequency:
      description: ""
      enum:
      - Daily
      - Weekly
      - Monthly
      - Yearly
      type: string
      x-enumNames:
      - Daily
      - Weekly
      - Monthly
      - Yearly
    RecurrencePattern:
      example:
        daily:
          everyWeekday: true
          interval: 1
        monthly:
          dayOfMonth: 5
          dayOrdinal: First
          dayOrdinalOption: Sunday
          interval: 5
        yearly:
          month: January
          dayOfMonth: 7
          dayOrdinal: null
          dayOrdinalOption: null
        weekly:
          sunday: true
          saturday: true
          tuesday: true
          friday: true
          thursday: true
          wednesday: true
          interval: 2
          monday: true
      properties:
        daily:
          $ref: '#/components/schemas/DailyModel'
        monthly:
          $ref: '#/components/schemas/MonthlyModel'
        weekly:
          $ref: '#/components/schemas/WeeklyModel'
        yearly:
          $ref: '#/components/schemas/YearlyModel'
      type: object
    RecurrenceRange:
      example:
        recursUntilDate: 2000-01-23
        maxOccurrences: 9
      properties:
        maxOccurrences:
          format: int32
          nullable: true
          type: integer
        recursUntilDate:
          format: date
          nullable: true
          type: string
      type: object
    RecurrenceType:
      description: ""
      enum:
      - None
      - Occurrence
      - Exception
      - Series
      type: string
      x-enumNames:
      - None
      - Occurrence
      - Exception
      - Series
    ReferenceNumberDisplay:
      description: ""
      enum:
      - ReferenceNumber
      - Kid
      type: string
      x-enumNames:
      - ReferenceNumber
      - Kid
    ReferenceType:
      description: ""
      enum:
      - Invoice
      - Proposal
      - InvoiceTemplate
      - Other
      type: string
      x-enumNames:
      - Invoice
      - Proposal
      - InvoiceTemplate
      - Other
    ReimbursedProjectFeeOutputModel:
      example:
        phase:
          name: name
          guid: guid
        unitPrice:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        product:
          name: name
          guid: guid
        invoiceRowGuid: invoiceRowGuid
        quantity: 6.027456183070403
        vatRate: 1.4658129805029452
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        description: description
        project:
          number: number
          name: name
          guid: guid
        invoiceRowDescription: invoiceRowDescription
        invoiceGuid: invoiceGuid
        measurementUnit: measurementUnit
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        invoiceQuantity: 0.8008281904610115
        unitCost:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        name: name
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        user:
          name: name
          guid: guid
        productType: FixedFees
        eventDate: 2000-01-23
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        description:
          nullable: true
          type: string
        eventDate:
          format: date
          nullable: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        invoiceGuid:
          nullable: true
          type: string
          x-relation-guid: PhaseOutputModel
        invoiceQuantity:
          format: double
          nullable: true
          type: number
        invoiceRowDescription:
          nullable: true
          type: string
        invoiceRowGuid:
          nullable: true
          type: string
          x-relation-guid: InvoiceRowOutputModel
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        measurementUnit:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        phase:
          $ref: '#/components/schemas/ModelWithName'
        product:
          $ref: '#/components/schemas/ModelWithName'
        productType:
          $ref: '#/components/schemas/ProductType'
        project:
          $ref: '#/components/schemas/ReimbursedProjectFeeProjectSubModel'
        quantity:
          format: double
          type: number
        unitCost:
          $ref: '#/components/schemas/MoneyOutputModel'
        unitPrice:
          $ref: '#/components/schemas/MoneyOutputModel'
        user:
          $ref: '#/components/schemas/ModelWithName'
        vatRate:
          format: double
          nullable: true
          type: number
      type: object
    ReimbursedProjectFeeProjectSubModel:
      example:
        number: number
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        number:
          nullable: true
          type: string
      type: object
    ReimbursedProjectTravelExpenseOutputModel:
      example:
        phase:
          name: name
          guid: guid
        travelStartTime: 2000-01-23T04:56:07.000+00:00
        unitPrice:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        product:
          name: name
          guid: guid
        invoiceRowGuid: invoiceRowGuid
        quantity: 6.027456183070403
        vatRate: 1.4658129805029452
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        description: description
        project:
          number: number
          name: name
          guid: guid
        travelEndTime: 2000-01-23T04:56:07.000+00:00
        invoiceRowDescription: invoiceRowDescription
        invoiceGuid: invoiceGuid
        measurementUnit: measurementUnit
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        invoiceQuantity: 0.8008281904610115
        unitCost:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        name: name
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        user:
          name: name
          guid: guid
        eventDate: 2000-01-23
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        description:
          nullable: true
          type: string
        eventDate:
          format: date
          nullable: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        invoiceGuid:
          nullable: true
          type: string
          x-relation-guid: PhaseOutputModel
        invoiceQuantity:
          format: double
          nullable: true
          type: number
        invoiceRowDescription:
          nullable: true
          type: string
        invoiceRowGuid:
          nullable: true
          type: string
          x-relation-guid: InvoiceRowOutputModel
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        measurementUnit:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        phase:
          $ref: '#/components/schemas/ModelWithName'
        product:
          $ref: '#/components/schemas/ModelWithName'
        project:
          $ref: '#/components/schemas/ReimbursedProjectFeeProjectSubModel'
        quantity:
          format: double
          type: number
        travelEndTime:
          format: date-time
          nullable: true
          type: string
        travelStartTime:
          format: date-time
          nullable: true
          type: string
        unitCost:
          $ref: '#/components/schemas/MoneyOutputModel'
        unitPrice:
          $ref: '#/components/schemas/MoneyOutputModel'
        user:
          $ref: '#/components/schemas/ModelWithName'
        vatRate:
          format: double
          nullable: true
          type: number
      type: object
    ReimbursedWorkHourOutputModel:
      example:
        phase:
          name: name
          guid: guid
        unitPrice:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        invoiceRowGuid: invoiceRowGuid
        quantity: 5.962133916683182
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        description: description
        project:
          number: 1
          name: name
          guid: guid
        invoiceRowDescription: invoiceRowDescription
        invoiceGuid: invoiceGuid
        plannedInvoiceQuantity: 6.027456183070403
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        invoiceQuantity: 0.8008281904610115
        unitCost:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        workType:
          name: name
          guid: guid
        guid: guid
        overtime:
          name: name
          guid: guid
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        invoiceRowComment: invoiceRowComment
        user:
          name: name
          guid: guid
        customer:
          name: name
          guid: guid
        eventDate: 2000-01-23
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customer:
          $ref: '#/components/schemas/ModelWithName'
        description:
          nullable: true
          type: string
        endTime:
          format: date-time
          nullable: true
          type: string
        eventDate:
          format: date
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        invoiceGuid:
          nullable: true
          type: string
          x-relation-guid: PhaseOutputModel
        invoiceQuantity:
          format: double
          nullable: true
          type: number
        invoiceRowComment:
          nullable: true
          type: string
        invoiceRowDescription:
          nullable: true
          type: string
        invoiceRowGuid:
          nullable: true
          type: string
          x-relation-guid: InvoiceRowOutputModel
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        overtime:
          $ref: '#/components/schemas/ModelWithName'
        phase:
          $ref: '#/components/schemas/ModelWithName'
        plannedInvoiceQuantity:
          format: double
          nullable: true
          type: number
        project:
          $ref: '#/components/schemas/ReimbursedWorkHourProjectSubModel'
        quantity:
          format: double
          nullable: true
          type: number
        startTime:
          format: date-time
          nullable: true
          type: string
        unitCost:
          $ref: '#/components/schemas/MoneyOutputModel'
        unitPrice:
          $ref: '#/components/schemas/MoneyOutputModel'
        user:
          $ref: '#/components/schemas/ModelWithName'
        workType:
          $ref: '#/components/schemas/ModelWithName'
      type: object
    ReimbursedWorkHourProjectSubModel:
      example:
        number: 1
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        number:
          format: int64
          nullable: true
          type: integer
      type: object
    RelatedInvoiceSubModel:
      example:
        number: 6
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        number:
          format: int32
          nullable: true
          type: integer
      type: object
    ResourceAllocationAction:
      description: ""
      enum:
      - None
      - Delete
      - Transfer
      type: string
      x-enumNames:
      - None
      - Delete
      - Transfer
    ResourceAllocationCriteriaModel:
      example:
        projectManagerUserGuids:
        - projectManagerUserGuids
        - projectManagerUserGuids
        userBusinessUnitGuids:
        - userBusinessUnitGuids
        - userBusinessUnitGuids
        endDate: 2000-01-23T04:56:07.000+00:00
        superiorUserGuids:
        - superiorUserGuids
        - superiorUserGuids
        userLicenseTypes:
        - FullUser
        - FullUser
        phaseGuids:
        - phaseGuids
        - phaseGuids
        projectStatusTypeGuids:
        - projectStatusTypeGuids
        - projectStatusTypeGuids
        salesStatusTypeGuids:
        - salesStatusTypeGuids
        - salesStatusTypeGuids
        projectTagGuids:
        - projectTagGuids
        - projectTagGuids
        projectBusinessUnitGuids:
        - projectBusinessUnitGuids
        - projectBusinessUnitGuids
        resourceAllocationGuids:
        - resourceAllocationGuids
        - resourceAllocationGuids
        includeAbsences: true
        userGuids:
        - userGuids
        - userGuids
        salesProgresses:
        - None
        - None
        useSalesProbability: true
        userTagGuids:
        - userTagGuids
        - userTagGuids
        projectGuids:
        - projectGuids
        - projectGuids
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        endDate:
          format: date-time
          nullable: true
          type: string
        includeAbsences:
          type: boolean
        phaseGuids:
          items:
            type: string
          nullable: true
          type: array
          x-relation-guid: PhaseOutputModel
        projectBusinessUnitGuids:
          items:
            type: string
          nullable: true
          type: array
          x-relation-guid: BusinessUnitModel
        projectGuids:
          items:
            type: string
          nullable: true
          type: array
          x-relation-guid: ProjectOutputModel
        projectManagerUserGuids:
          items:
            type: string
          nullable: true
          type: array
          x-relation-guid: UserOutputModel
        projectStatusTypeGuids:
          items:
            type: string
          nullable: true
          type: array
          x-relation-guid: ProjectStatusTypeModel
        projectTagGuids:
          items:
            type: string
          nullable: true
          type: array
          x-relation-guid: ProjectKeywordModel
        resourceAllocationGuids:
          items:
            type: string
          nullable: true
          type: array
          x-relation-guid: ResourceAllocationOutputModel
        salesProgresses:
          items:
            $ref: '#/components/schemas/SalesProgress'
          nullable: true
          type: array
        salesStatusTypeGuids:
          items:
            type: string
          nullable: true
          type: array
          x-relation-guid: SalesStatusTypeOutputModel
        startDate:
          format: date-time
          nullable: true
          type: string
        superiorUserGuids:
          items:
            type: string
          nullable: true
          type: array
          x-relation-guid: UserOutputModel
        useSalesProbability:
          default: true
          type: boolean
        userBusinessUnitGuids:
          items:
            type: string
          nullable: true
          type: array
          x-relation-guid: BusinessUnitModel
        userGuids:
          items:
            type: string
          nullable: true
          type: array
          x-relation-guid: UserOutputModel
        userLicenseTypes:
          items:
            $ref: '#/components/schemas/LicenseUserType'
          nullable: true
          type: array
        userTagGuids:
          items:
            type: string
          nullable: true
          type: array
          x-relation-guid: UserKeywordModel
      type: object
    ResourceAllocationInputModel:
      example:
        allocationPercentage: 6
        phase:
          guid: guid
        endDate: 2000-01-23
        allocationHours: 0.8008281904610115
        project:
          guid: guid
        user:
          guid: guid
        startDate: 2000-01-23
      properties:
        allocationHours:
          format: double
          nullable: true
          type: number
        allocationPercentage:
          format: int32
          nullable: true
          type: integer
        endDate:
          format: date
          nullable: true
          type: string
        phase:
          $ref: '#/components/schemas/SimpleInputModel'
        project:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        startDate:
          format: date
          nullable: true
          type: string
        user:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
      required:
      - project
      - user
      type: object
    ResourceAllocationOutputModel:
      example:
        allocationPercentage: 6
        phase:
          endDate: 2000-01-23
          name: name
          guid: guid
          startDate: 2000-01-23
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        projectMemberGuid: projectMemberGuid
        endDate: 2000-01-23
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        derivedStartDate: 2000-01-23
        project:
          isInternal: true
          number: 5
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        allocationHours: 0.8008281904610115
        guid: guid
        calculatedAllocationHours: 1.4658129805029452
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        derivedEndDate: 2000-01-23
        user:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        startDate: 2000-01-23
        customer:
          name: name
          guid: guid
      properties:
        allocationHours:
          format: double
          nullable: true
          type: number
        allocationPercentage:
          format: int32
          nullable: true
          type: integer
        calculatedAllocationHours:
          format: double
          nullable: true
          type: number
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customer:
          $ref: '#/components/schemas/ModelWithName'
        derivedEndDate:
          format: date
          nullable: true
          type: string
        derivedStartDate:
          format: date
          nullable: true
          type: string
        endDate:
          format: date
          nullable: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        phase:
          $ref: '#/components/schemas/ResourceAllocationPhaseSubModel'
        project:
          $ref: '#/components/schemas/ResourceAllocationProjectSubModel'
        projectMemberGuid:
          nullable: true
          type: string
          x-relation-guid: PhaseMemberModel
        startDate:
          format: date
          nullable: true
          type: string
        user:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
      type: object
    ResourceAllocationPhaseSubModel:
      example:
        endDate: 2000-01-23
        name: name
        guid: guid
        startDate: 2000-01-23
      properties:
        endDate:
          format: date
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        startDate:
          format: date
          nullable: true
          type: string
      type: object
    ResourceAllocationProjectSubModel:
      example:
        isInternal: true
        number: 5
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        isInternal:
          type: boolean
        name:
          nullable: true
          type: string
        number:
          format: int64
          nullable: true
          type: integer
      type: object
    RoleAllocationInputModel:
      example:
        phase:
          guid: guid
        role:
          guid: guid
        endDate: 2000-01-23
        allocationHours: 0.8008281904610115
        project:
          guid: guid
        startDate: 2000-01-23
      properties:
        allocationHours:
          format: double
          type: number
        endDate:
          format: date
          nullable: true
          type: string
        phase:
          $ref: '#/components/schemas/SimpleInputModel'
        project:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        role:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        startDate:
          format: date
          nullable: true
          type: string
      required:
      - allocationHours
      - project
      - role
      type: object
    RoleAllocationOutputModel:
      example:
        phase:
          endDate: 2000-01-23
          name: name
          guid: guid
          startDate: 2000-01-23
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        role:
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        endDate: 2000-01-23
        allocationHours: 0.8008281904610115
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        project:
          name: name
          guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        startDate: 2000-01-23
        customer:
          name: name
          guid: guid
      properties:
        allocationHours:
          format: double
          nullable: true
          type: number
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customer:
          $ref: '#/components/schemas/ModelWithName'
        endDate:
          format: date
          nullable: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        phase:
          $ref: '#/components/schemas/PhaseSubModel'
        project:
          $ref: '#/components/schemas/ModelWithName'
        role:
          $ref: '#/components/schemas/ModelWithName'
        startDate:
          format: date
          nullable: true
          type: string
      type: object
    RoleInputModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    RoleOutputModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    SalesAccountModel:
      example:
        isWorkTypeDefault: true
        isTravelTypeDefault: true
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        number: number
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        isProductDefault: true
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        isProductDefault:
          type: boolean
        isTravelTypeDefault:
          type: boolean
        isWorkTypeDefault:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        number:
          minLength: 1
          type: string
      required:
      - name
      - number
      type: object
    SalesNoteOutputModel:
      example:
        lastUpdatedBy:
          guid: guid
        note: note
        isDeleted: true
        createdBy:
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        project:
          guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        user:
          guid: guid
        customer:
          guid: guid
      properties:
        createdBy:
          $ref: '#/components/schemas/ModelBase'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customer:
          $ref: '#/components/schemas/ModelBase'
        guid:
          nullable: true
          readOnly: true
          type: string
        isDeleted:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/ModelBase'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        note:
          nullable: true
          type: string
        project:
          $ref: '#/components/schemas/ModelBase'
        user:
          $ref: '#/components/schemas/ModelBase'
      type: object
    SalesProgress:
      description: ""
      enum:
      - None
      - InProgress
      - Won
      - Lost
      type: string
      x-enumNames:
      - None
      - InProgress
      - Won
      - Lost
    SalesStatusHistoryOutputModel:
      example:
        timeStamp: 2000-01-23T04:56:07.000+00:00
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        salesStatusType:
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        project:
          name: name
          guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        project:
          $ref: '#/components/schemas/ModelWithName'
        salesStatusType:
          $ref: '#/components/schemas/ModelWithName'
        timeStamp:
          format: date-time
          type: string
      type: object
    SalesStatusSubModel:
      example:
        salesStatusTypeGuid: salesStatusTypeGuid
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          type: string
        salesStatusTypeGuid:
          nullable: true
          type: string
          x-relation-guid: SalesStatusTypeOutputModel
      type: object
    SalesStatusType:
      description: ""
      enum:
      - InProgress
      - Won
      - Lost
      type: string
      x-enumNames:
      - InProgress
      - Won
      - Lost
    SalesStatusTypeInputModel:
      example:
        salesState: InProgress
        isProposalDefault: false
        defaultProbability: 0
        name: name
        isActive: true
      properties:
        defaultProbability:
          format: int32
          nullable: true
          type: integer
        isActive:
          default: true
          type: boolean
        isProposalDefault:
          default: false
          nullable: true
          type: boolean
        name:
          minLength: 1
          type: string
        salesState:
          $ref: '#/components/schemas/SalesStatusType'
      required:
      - name
      - salesState
      type: object
    SalesStatusTypeOutputModel:
      example:
        salesState: InProgress
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isProposalDefault: true
        defaultProbability: 0
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        defaultProbability:
          format: int32
          nullable: true
          type: integer
        guid:
          nullable: false
          type: string
        isActive:
          type: boolean
        isProposalDefault:
          nullable: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: false
          type: string
        salesState:
          $ref: '#/components/schemas/SalesStatusType'
      type: object
    SalutationType:
      description: ""
      enum:
      - Mr.
      - Mrs.
      - Ms.
      type: string
      x-enumNames:
      - Mr
      - Mrs
      - Ms
    SatisfactionLevelType:
      description: ""
      enum:
      - Unsatisfied
      - Neutral
      - Satisfied
      - Unknown
      type: string
      x-enumNames:
      - Unsatisfied
      - Neutral
      - Satisfied
      - Unknown
    SearchFieldDataType:
      description: ""
      enum:
      - String
      - Boolean
      - Integer
      - Percentage
      - Numeric
      - Money
      - Date
      - DateTime
      - Time
      - Object
      - ObjectCollection
      - IpAddress
      type: string
      x-enumNames:
      - String
      - Boolean
      - Integer
      - Percentage
      - Numeric
      - Money
      - Date
      - DateTime
      - Time
      - Object
      - ObjectCollection
      - IpAddress
    SimpleInputModel:
      example:
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
      type: object
    SimpleInputRequiredModel:
      example:
        guid: guid
      properties:
        guid:
          minLength: 1
          type: string
      required:
      - guid
      type: object
    SimpleProjectStatusInputModel:
      example:
        projectStatusTypeGuid: projectStatusTypeGuid
        description: description
      properties:
        description:
          nullable: true
          type: string
        projectStatusTypeGuid:
          nullable: true
          type: string
          x-relation-guid: ProjectStatusTypeModel
      type: object
    SimpleSalesStatusInputModel:
      example:
        salesStatusTypeGuid: salesStatusTypeGuid
      properties:
        salesStatusTypeGuid:
          nullable: true
          type: string
          x-relation-guid: SalesStatusTypeOutputModel
      type: object
    SortDirection:
      description: ""
      enum:
      - Asc
      - Desc
      - AscNullsFirst
      - AscNullsLast
      - DescNullsFirst
      - DescNullsLast
      type: string
      x-enumNames:
      - Asc
      - Desc
      - AscNullsFirst
      - AscNullsLast
      - DescNullsFirst
      - DescNullsLast
    TeamProductivityOutputModel:
      example:
        adjustedShareOfBillingPercentage: 0.8008281904610115
        workHoursBillable: 5.637376656633329
        adjustedShareOfBilling:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        billableHoursPercentage: 6.027456183070403
        calculatedShareOfBilling:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        workHoursValue:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        projectGuid: projectGuid
        workHours: 5.962133916683182
        guid: guid
        calculatedShareOfBillingPercentage: 1.4658129805029452
        workHoursCost:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        user:
          code: code
          name: name
          guid: guid
      properties:
        adjustedShareOfBilling:
          $ref: '#/components/schemas/MoneyOutputModel'
        adjustedShareOfBillingPercentage:
          format: double
          nullable: true
          type: number
        billableHoursPercentage:
          format: double
          nullable: true
          type: number
        calculatedShareOfBilling:
          $ref: '#/components/schemas/MoneyOutputModel'
        calculatedShareOfBillingPercentage:
          format: double
          type: number
        guid:
          nullable: true
          type: string
        projectGuid:
          nullable: true
          type: string
          x-relation-guid: ProjectOutputModel
        user:
          $ref: '#/components/schemas/UserWithNameAndPhotoFileModel'
        workHours:
          format: double
          type: number
        workHoursBillable:
          format: double
          type: number
        workHoursCost:
          $ref: '#/components/schemas/MoneyOutputModel'
        workHoursValue:
          $ref: '#/components/schemas/MoneyOutputModel'
      type: object
    TemplateFreeTextModel:
      example:
        tagContext: tagContext
        value: value
        allowTags: true
      properties:
        allowTags:
          nullable: true
          type: boolean
        tagContext:
          nullable: true
          readOnly: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    TimeEntryModel:
      example:
        phase:
          name: name
          guid: guid
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        quantity: 6.027456183070403
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        description: description
        project:
          number: 0
          name: name
          guid: guid
        timeEntryType:
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        guid: guid
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        user:
          name: name
          guid: guid
        customer:
          name: name
          guid: guid
        eventDate: 2000-01-23
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customer:
          $ref: '#/components/schemas/ModelWithName'
        description:
          nullable: true
          type: string
        endTime:
          format: date-time
          nullable: true
          type: string
        eventDate:
          format: date
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        phase:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
        project:
          $ref: '#/components/schemas/TimeEntryProject'
        quantity:
          format: double
          nullable: true
          type: number
        startTime:
          format: date-time
          nullable: true
          type: string
        timeEntryType:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
        user:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
      required:
      - eventDate
      - phase
      - timeEntryType
      - user
      type: object
    TimeEntryProject:
      example:
        number: 0
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        number:
          format: int64
          nullable: true
          type: integer
      type: object
    TimeEntryTypeModel:
      example:
        identifier: identifier
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        identifier:
          nullable: true
          type: string
        isActive:
          default: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    TimezoneModel:
      example:
        systemName: systemName
        name: name
        guid: guid
        ianaName: ianaName
      properties:
        guid:
          nullable: true
          type: string
        ianaName:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        systemName:
          nullable: true
          type: string
      type: object
    TotalRoundingType:
      description: ""
      enum:
      - AwayFromZero
      - NearestInteger
      type: string
      x-enumNames:
      - AwayFromZero
      - NearestInteger
    TravelExpenseCostAccountSubModel:
      example:
        number: number
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        number:
          nullable: true
          type: string
      type: object
    TravelExpenseSubModel:
      example:
        code: code
        includeTime: true
        expenseClass: Mileage
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        expenseClass:
          $ref: '#/components/schemas/ExpensesClass'
        guid:
          minLength: 1
          type: string
        includeTime:
          type: boolean
        name:
          nullable: true
          readOnly: true
          type: string
      required:
      - guid
      type: object
    TravelExpenseTypeCountrySettingsModel:
      example:
        country:
          name: name
          guid: guid
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        product:
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        purchaseVatRate: 0.8008281904610115
        vatRate: 6.027456183070403
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        country:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        product:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
        purchaseVatRate:
          format: double
          nullable: true
          type: number
        vatRate:
          format: double
          nullable: true
          type: number
      required:
      - country
      - product
      type: object
    TravelExpenseTypeInputModel:
      example:
        salesAccount:
          guid: guid
        code: code
        includeTime: true
        expenseClass: Mileage
        purchaseVatRate: 0.8008281904610115
        unitCost:
          amount: 6.027456183070403
          currencyCode: currencyCode
        vatRate: 6.027456183070403
        name: name
        costAccount:
          guid: guid
        isActive: true
        measurementUnit: measurementUnit
        productCategory:
          guid: guid
      properties:
        code:
          nullable: true
          type: string
        costAccount:
          $ref: '#/components/schemas/SimpleInputModel'
        expenseClass:
          $ref: '#/components/schemas/ExpensesClass'
        includeTime:
          default: true
          type: boolean
        isActive:
          default: true
          nullable: true
          type: boolean
        measurementUnit:
          nullable: true
          type: string
        name:
          minLength: 1
          type: string
        productCategory:
          $ref: '#/components/schemas/SimpleInputModel'
        purchaseVatRate:
          format: double
          nullable: true
          type: number
        salesAccount:
          $ref: '#/components/schemas/SimpleInputModel'
        unitCost:
          $ref: '#/components/schemas/MoneyInputModelWithNullableAmount'
        vatRate:
          format: double
          nullable: true
          type: number
      required:
      - expenseClass
      - name
      - unitCost
      type: object
    TravelExpenseTypeOutputModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        salesAccount:
          number: number
          name: name
          guid: guid
        code: code
        isMileage: true
        vatRate: 6.027456183070403
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
        isDailyAllowance: true
        measurementUnit: measurementUnit
        productCategory:
          name: name
          guid: guid
        includeTime: true
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        expenseClass: Mileage
        purchaseVatRate: 0.8008281904610115
        unitCost:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        name: name
        guid: guid
        costAccount:
          number: number
          name: name
          guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        code:
          nullable: true
          type: string
        costAccount:
          $ref: '#/components/schemas/TravelExpenseCostAccountSubModel'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        expenseClass:
          $ref: '#/components/schemas/ExpensesClass'
        guid:
          nullable: true
          readOnly: true
          type: string
        includeTime:
          type: boolean
        isActive:
          default: true
          nullable: true
          type: boolean
        isDailyAllowance:
          type: boolean
        isMileage:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        measurementUnit:
          nullable: true
          type: string
        name:
          minLength: 1
          type: string
        productCategory:
          $ref: '#/components/schemas/ModelWithName'
        purchaseVatRate:
          format: double
          nullable: true
          type: number
        salesAccount:
          $ref: '#/components/schemas/ProductSalesAccountSubModel2'
        unitCost:
          $ref: '#/components/schemas/MoneyOutputModel'
        vatRate:
          format: double
          nullable: true
          type: number
      required:
      - name
      type: object
    TravelPriceOutputModel:
      example:
        product:
          productCode: productCode
          expenseClass: Mileage
          name: name
          guid: guid
        prices:
        - pricelistVersionGuid: pricelistVersionGuid
          price:
            amount: 5.962133916683182
            multiCurrencyInfo:
            - amount: 5.637376656633329
              purpose:
              - ProjectPrice
              - ProjectPrice
              currencyCode: currencyCode
            - amount: 5.637376656633329
              purpose:
              - ProjectPrice
              - ProjectPrice
              currencyCode: currencyCode
            currencyCode: currencyCode
          priceSource: ProductRegistry
          projectGuid: projectGuid
          guid: guid
        - pricelistVersionGuid: pricelistVersionGuid
          price:
            amount: 5.962133916683182
            multiCurrencyInfo:
            - amount: 5.637376656633329
              purpose:
              - ProjectPrice
              - ProjectPrice
              currencyCode: currencyCode
            - amount: 5.637376656633329
              purpose:
              - ProjectPrice
              - ProjectPrice
              currencyCode: currencyCode
            currencyCode: currencyCode
          priceSource: ProductRegistry
          projectGuid: projectGuid
          guid: guid
      properties:
        prices:
          items:
            $ref: '#/components/schemas/PriceModelBase'
          nullable: true
          type: array
        product:
          $ref: '#/components/schemas/TravelPriceProductSubModel'
      type: object
    TravelPriceProductSubModel:
      example:
        productCode: productCode
        expenseClass: Mileage
        name: name
        guid: guid
      properties:
        expenseClass:
          $ref: '#/components/schemas/ExpensesClass'
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        productCode:
          nullable: true
          readOnly: true
          type: string
      type: object
    TravelReimbursementAttachmentSource:
      description: ""
      enum:
      - Severa
      - VismaScanner
      - Google
      type: string
      x-enumNames:
      - Severa
      - VismaScanner
      - Google
    TravelReimbursementInputModel:
      example:
        travelReimbursementStatus:
          guid: guid
        advancePayment:
          amount: 6.027456183070403
          currencyCode: currencyCode
        groupBy: None
        title: title
        user:
          name: name
          guid: guid
      properties:
        advancePayment:
          $ref: '#/components/schemas/MoneyInputModelWithNullableAmount'
        groupBy:
          $ref: '#/components/schemas/GroupByType'
        title:
          nullable: true
          type: string
        travelReimbursementStatus:
          $ref: '#/components/schemas/SimpleInputModel'
        user:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
      required:
      - user
      type: object
    TravelReimbursementOutputModel:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        approvalDate: 2000-01-23T04:56:07.000+00:00
        travelReimbursementStatus:
          name: name
          guid: guid
        canChangeApproval: true
        totalExpenses:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        groupBy: None
        title: title
        number: 0
        total:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        advancePayment:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        user:
          name: name
          guid: guid
        approvedByUser:
          name: name
          guid: guid
      properties:
        advancePayment:
          $ref: '#/components/schemas/MoneyOutputModel'
        approvalDate:
          format: date-time
          nullable: true
          type: string
        approvedByUser:
          $ref: '#/components/schemas/ModelWithName'
        canChangeApproval:
          type: boolean
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        date:
          format: date-time
          type: string
        groupBy:
          $ref: '#/components/schemas/GroupByType'
        guid:
          nullable: true
          readOnly: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        number:
          format: int32
          nullable: true
          type: integer
        title:
          nullable: true
          type: string
        total:
          $ref: '#/components/schemas/MoneyOutputModel'
        totalExpenses:
          $ref: '#/components/schemas/MoneyOutputModel'
        travelReimbursementStatus:
          $ref: '#/components/schemas/ModelWithName'
        user:
          $ref: '#/components/schemas/ModelWithName'
      type: object
    TravelReimbursementStatusModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isDefault: true
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isLocked: false
        sortOrder: 0
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
        isApproved: false
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        isApproved:
          default: false
          type: boolean
        isDefault:
          type: boolean
        isLocked:
          default: false
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        sortOrder:
          format: int32
          type: integer
      required:
      - name
      type: object
    TravelReimbursementSubModel:
      example:
        isLocked: true
        guid: guid
        isApproved: true
        status: status
      properties:
        guid:
          nullable: true
          type: string
        isApproved:
          type: boolean
        isLocked:
          type: boolean
        status:
          nullable: true
          type: string
      type: object
    TypeOfProduct:
      description: ""
      enum:
      - OwnWork
      - Products
      - Subcontracting
      - Travels
      type: string
      x-enumNames:
      - OwnWork
      - Products
      - Subcontracting
      - Travels
    UsageModel:
      example:
        isReadOnly: true
        name: name
        guid: guid
        type: Invoice
      properties:
        guid:
          nullable: true
          type: string
        isReadOnly:
          type: boolean
        name:
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/ReferenceType'
      type: object
    UsageModel2:
      example:
        context: context
        count: 0
      properties:
        context:
          nullable: true
          type: string
        count:
          format: int32
          nullable: true
          readOnly: true
          type: integer
      type: object
    UserCountrySubModel:
      example:
        code3: code3
        englishName: englishName
        hasRegions: NoRegion
        name: name
        guid: guid
      properties:
        code3:
          nullable: true
          type: string
        englishName:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        hasRegions:
          $ref: '#/components/schemas/CountryRegionsStatus'
        name:
          nullable: true
          type: string
      type: object
    UserCultureSubModel:
      example:
        englishName: englishName
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        englishName:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    UserCustomPropertyInputModel:
      example:
        name: name
        permission: View
        isActive: true
        type: Numeric
        parameters: parameters
      properties:
        isActive:
          default: true
          type: boolean
        name:
          minLength: 1
          type: string
        parameters:
          nullable: true
          type: string
        permission:
          $ref: '#/components/schemas/PermissionLevel'
        type:
          $ref: '#/components/schemas/CustomPropertyType'
      required:
      - name
      - type
      type: object
    UserCustomPropertyOutputModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        permission: View
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
        type: Numeric
        parameters: parameters
        usageCount: 0
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          type: string
        parameters:
          nullable: true
          type: string
        permission:
          $ref: '#/components/schemas/PermissionLevel'
        type:
          $ref: '#/components/schemas/CustomPropertyType'
        usageCount:
          format: int32
          type: integer
      type: object
    UserCustomPropertySelectionItemInputModel:
      example:
        sortOrder: 0
        name: name
        isActive: true
        userCustomProperty:
          guid: guid
      properties:
        isActive:
          default: true
          type: boolean
        name:
          nullable: true
          type: string
        sortOrder:
          format: int32
          nullable: true
          type: integer
        userCustomProperty:
          $ref: '#/components/schemas/SimpleInputModel'
      required:
      - userCustomProperty
      type: object
    UserCustomPropertySelectionItemOutputModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        sortOrder: 0
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
        userCustomProperty:
          name: name
          guid: guid
          type: Numeric
          parameters: parameters
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        sortOrder:
          format: int32
          nullable: true
          type: integer
        userCustomProperty:
          $ref: '#/components/schemas/CustomPropertyShortModel'
      required:
      - name
      type: object
    UserCustomValueInputModel:
      example:
        user:
          guid: guid
        value: value
        customProperty:
          guid: guid
      properties:
        customProperty:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        user:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        value:
          nullable: true
          type: string
      required:
      - customProperty
      - user
      type: object
    UserCustomValueOutputModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        user:
          guid: guid
        value: value
        customProperty:
          name: name
          guid: guid
          type: Numeric
          parameters: parameters
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customProperty:
          $ref: '#/components/schemas/CustomPropertyShortModel'
        guid:
          nullable: true
          readOnly: true
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        user:
          $ref: '#/components/schemas/ModelBase'
        value:
          nullable: true
          type: string
      type: object
    UserInputModel:
      example:
        country:
          guid: guid
        lastName: lastName
        businessUnit:
          guid: guid
        code: code
        notes: notes
        city: city
        socialSecurityNumber: socialSecurityNumber
        timezone:
          systemName: systemName
          name: name
          guid: guid
          ianaName: ianaName
        permissionProfile:
          guid: guid
        postalCode: postalCode
        language:
          guid: guid
        isActive: true
        bankAccountNumber: bankAccountNumber
        superiorUser:
          guid: guid
        email: email
        defaultActivityType:
          guid: guid
        address: address
        countryRegion:
          guid: guid
        satisfaction: Unsatisfied
        birthDate: 2000-01-23T04:56:07.000+00:00
        createDefaultWorkContract: true
        firstName: firstName
        phone: phone
        culture:
          guid: guid
        workType:
          guid: guid
        salutation: Mr.
        userType: FullUser
      properties:
        address:
          nullable: true
          type: string
        bankAccountNumber:
          nullable: true
          type: string
        birthDate:
          format: date-time
          nullable: true
          type: string
        businessUnit:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        city:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        country:
          $ref: '#/components/schemas/SimpleInputModel'
        countryRegion:
          $ref: '#/components/schemas/SimpleInputModel'
        createDefaultWorkContract:
          default: true
          type: boolean
        culture:
          $ref: '#/components/schemas/SimpleInputModel'
        defaultActivityType:
          $ref: '#/components/schemas/SimpleInputModel'
        email:
          nullable: true
          type: string
        firstName:
          maxLength: 100
          minLength: 1
          type: string
        isActive:
          default: true
          type: boolean
        language:
          $ref: '#/components/schemas/SimpleInputModel'
        lastName:
          maxLength: 100
          minLength: 1
          type: string
        notes:
          nullable: true
          type: string
        permissionProfile:
          $ref: '#/components/schemas/SimpleInputModel'
        phone:
          nullable: true
          type: string
        postalCode:
          nullable: true
          type: string
        salutation:
          $ref: '#/components/schemas/SalutationType'
        satisfaction:
          $ref: '#/components/schemas/SatisfactionLevelType'
        socialSecurityNumber:
          nullable: true
          type: string
        superiorUser:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        timezone:
          $ref: '#/components/schemas/TimezoneModel'
        userType:
          $ref: '#/components/schemas/LicenseUserType'
        workType:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
      required:
      - firstName
      - lastName
      type: object
    UserKeywordModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        category: Project
        isActive: true
        keyword: keyword
        userGuid: userGuid
      properties:
        category:
          $ref: '#/components/schemas/KeywordCategory'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        keyword:
          minLength: 1
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        userGuid:
          nullable: true
          readOnly: true
          type: string
          x-relation-guid: UserOutputModel
      required:
      - keyword
      type: object
    UserKeywordSubModel:
      example:
        value: value
      properties:
        value:
          nullable: true
          type: string
      type: object
    UserLanguageSubModel:
      example:
        englishName: englishName
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        englishName:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    UserOutputModel:
      example:
        country:
          code3: code3
          englishName: englishName
          hasRegions: NoRegion
          name: name
          guid: guid
        lastLogin: 2000-01-23T04:56:07.000+00:00
        lastName: lastName
        businessUnit:
          code: code
          companyName: companyName
          companyCountryGuid: companyCountryGuid
          name: name
          guid: guid
          companyBusinessUnitGuid: companyBusinessUnitGuid
          companyGuid: companyGuid
          companyCurrencyGuid: companyCurrencyGuid
        code: code
        notes: notes
        keywords:
        - value: value
        - value: value
        city: city
        socialSecurityNumber: socialSecurityNumber
        timezone:
          systemName: systemName
          name: name
          guid: guid
          ianaName: ianaName
        permissionProfile:
          name: name
          guid: guid
        postalCode: postalCode
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        language:
          englishName: englishName
          code: code
          name: name
          guid: guid
        isActive: true
        title: title
        workContract:
          flextimeLimitPerDay: 6.027456183070403
          workWeek:
          - Monday
          - Monday
          endDate: 2000-01-23
          dailyHours: 0.8008281904610115
          guid: guid
          hourCost:
            amount: 5.962133916683182
            multiCurrencyInfo:
            - amount: 5.637376656633329
              purpose:
              - ProjectPrice
              - ProjectPrice
              currencyCode: currencyCode
            - amount: 5.637376656633329
              purpose:
              - ProjectPrice
              - ProjectPrice
              currencyCode: currencyCode
            currencyCode: currencyCode
          isFlextimeActive: true
          isOvertimeAllowed: true
          title: title
          startDate: 2000-01-23
        bankAccountNumber: bankAccountNumber
        superiorUser:
          name: name
          guid: guid
        email: email
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        defaultActivityType:
          name: name
          guid: guid
        address: address
        countryRegion:
          name: name
          guid: guid
        satisfaction: Unsatisfied
        birthDate: 2000-01-23T04:56:07.000+00:00
        firstName: firstName
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        phone: phone
        culture:
          englishName: englishName
          code: code
          name: name
          guid: guid
        workType:
          name: name
          guid: guid
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        salutation: Mr.
        userType: FullUser
      properties:
        address:
          nullable: true
          type: string
        bankAccountNumber:
          nullable: true
          type: string
        birthDate:
          format: date-time
          nullable: true
          type: string
        businessUnit:
          $ref: '#/components/schemas/BusinessUnitSubModel'
        city:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        country:
          $ref: '#/components/schemas/UserCountrySubModel'
        countryRegion:
          $ref: '#/components/schemas/ModelWithName'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        culture:
          $ref: '#/components/schemas/UserCultureSubModel'
        defaultActivityType:
          $ref: '#/components/schemas/ModelWithName'
        email:
          nullable: true
          type: string
        firstName:
          minLength: 1
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        keywords:
          items:
            $ref: '#/components/schemas/UserKeywordSubModel'
          nullable: true
          type: array
        language:
          $ref: '#/components/schemas/UserLanguageSubModel'
        lastLogin:
          format: date-time
          nullable: true
          type: string
        lastName:
          minLength: 1
          type: string
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        notes:
          nullable: true
          type: string
        permissionProfile:
          $ref: '#/components/schemas/ModelWithName'
        phone:
          nullable: true
          type: string
        postalCode:
          nullable: true
          type: string
        salutation:
          $ref: '#/components/schemas/SalutationType'
        satisfaction:
          $ref: '#/components/schemas/SatisfactionLevelType'
        socialSecurityNumber:
          nullable: true
          type: string
        superiorUser:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
        timezone:
          $ref: '#/components/schemas/TimezoneModel'
        title:
          nullable: true
          type: string
        userType:
          $ref: '#/components/schemas/LicenseUserType'
        workContract:
          $ref: '#/components/schemas/UserWorkContractSubModel'
        workType:
          $ref: '#/components/schemas/ModelBaseWithRequiredGuid'
      required:
      - firstName
      - lastName
      type: object
    UserRequiredSubModel:
      example:
        code: code
        name: name
        guid: guid
        companyGuid: companyGuid
      properties:
        code:
          nullable: true
          readOnly: true
          type: string
        companyGuid:
          nullable: true
          type: string
          x-relation-guid: CompanyModel
        guid:
          minLength: 1
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
      required:
      - guid
      type: object
    UserSubModel:
      example:
        code: code
        name: name
        guid: guid
        companyGuid: companyGuid
      properties:
        code:
          nullable: true
          readOnly: true
          type: string
        companyGuid:
          nullable: true
          type: string
          x-relation-guid: CompanyModel
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    UserWithFirstNameLastNameAndPhotoFileModel:
      example:
        firstName: firstName
        lastName: lastName
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          readOnly: true
          type: string
        firstName:
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    UserWithFirstNameLastNameModel:
      example:
        firstName: firstName
        lastName: lastName
        guid: guid
      properties:
        firstName:
          nullable: true
          type: string
        guid:
          minLength: 1
          type: string
        lastName:
          nullable: true
          type: string
      required:
      - guid
      type: object
    UserWithFirstNameLastNamePhotoFileModelAndRequiredGuid:
      example:
        firstName: firstName
        lastName: lastName
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          readOnly: true
          type: string
        firstName:
          nullable: true
          type: string
        guid:
          minLength: 1
          type: string
        lastName:
          nullable: true
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
      required:
      - guid
      type: object
    UserWithNameAndPhotoFileModel:
      example:
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          readOnly: true
          type: string
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    UserWithPhotoFileModelAndRequiredGuid:
      example:
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          readOnly: true
          type: string
        guid:
          minLength: 1
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
      required:
      - guid
      type: object
    UserWorkContractSubModel:
      example:
        flextimeLimitPerDay: 6.027456183070403
        workWeek:
        - Monday
        - Monday
        endDate: 2000-01-23
        dailyHours: 0.8008281904610115
        guid: guid
        hourCost:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        isFlextimeActive: true
        isOvertimeAllowed: true
        title: title
        startDate: 2000-01-23
      properties:
        dailyHours:
          format: double
          type: number
        endDate:
          format: date
          nullable: true
          type: string
        flextimeLimitPerDay:
          format: double
          nullable: true
          type: number
        guid:
          nullable: true
          readOnly: true
          type: string
        hourCost:
          $ref: '#/components/schemas/MoneyOutputModel'
        isFlextimeActive:
          default: true
          type: boolean
        isOvertimeAllowed:
          type: boolean
        startDate:
          format: date
          type: string
        title:
          minLength: 1
          type: string
        workWeek:
          items:
            $ref: '#/components/schemas/Workweek'
          nullable: true
          type: array
      required:
      - startDate
      - title
      type: object
    ValueAddedTaxSubModel:
      example:
        percentage: 0.8008281904610115
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        percentage:
          format: double
          readOnly: true
          type: number
      type: object
    VatRateInputModel:
      example:
        isDefault: true
        code: code
        percentage: 0.8008281904610115
        countryGuid: countryGuid
        isActive: true
      properties:
        code:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        countryGuid:
          nullable: true
          type: string
          x-relation-guid: CountryModel
        isActive:
          default: true
          type: boolean
        isDefault:
          type: boolean
        percentage:
          format: double
          type: number
      required:
      - percentage
      type: object
    VatRateOutputModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isDefault: true
        code: code
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        percentage: 0.8008281904610115
        countryGuid: countryGuid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        code:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        countryGuid:
          nullable: true
          type: string
          x-relation-guid: CountryModel
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isActive:
          default: true
          type: boolean
        isDefault:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        percentage:
          format: double
          type: number
      type: object
    VismaFinancialsCompanyModel:
      example:
        name: name
        id: 0
      properties:
        id:
          format: int64
          nullable: true
          readOnly: true
          type: integer
        name:
          nullable: true
          type: string
      type: object
    WeeklyModel:
      example:
        sunday: true
        saturday: true
        tuesday: true
        friday: true
        thursday: true
        wednesday: true
        interval: 2
        monday: true
      properties:
        friday:
          type: boolean
        interval:
          format: int32
          type: integer
        monday:
          type: boolean
        saturday:
          type: boolean
        sunday:
          type: boolean
        thursday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
      type: object
    WorkContractInputModel:
      example:
        flextimeLimitPerDay: 6.027456183070403
        workWeek:
        - Monday
        - Monday
        role:
          guid: guid
        endDate: 2000-01-23
        dailyHours: 0.8008281904610115
        hourCost:
          amount: 1.4658129805029452
          currencyCode: currencyCode
        isFlextimeActive: true
        isOvertimeAllowed: true
        title: title
        user:
          guid: guid
        startDate: 2000-01-23
      properties:
        dailyHours:
          format: double
          type: number
        endDate:
          format: date
          nullable: true
          type: string
        flextimeLimitPerDay:
          format: double
          nullable: true
          type: number
        hourCost:
          $ref: '#/components/schemas/MoneyInputModelWithNotNegativeAmount'
        isFlextimeActive:
          default: true
          type: boolean
        isOvertimeAllowed:
          type: boolean
        role:
          $ref: '#/components/schemas/SimpleInputModel'
        startDate:
          format: date
          type: string
        title:
          minLength: 1
          type: string
        user:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        workWeek:
          items:
            $ref: '#/components/schemas/Workweek'
          nullable: true
          type: array
      required:
      - hourCost
      - startDate
      - title
      - user
      type: object
    WorkContractOutputModel:
      example:
        flextimeLimitPerDay: 6.027456183070403
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        role:
          name: name
          guid: guid
        endDate: 2000-01-23
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        dailyHours: 0.8008281904610115
        hourCost:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        isFlextimeActive: true
        isOvertimeAllowed: true
        title: title
        workWeek:
        - Monday
        - Monday
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        user:
          code: code
          name: name
          guid: guid
        startDate: 2000-01-23
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        dailyHours:
          format: double
          type: number
        endDate:
          format: date
          nullable: true
          type: string
        flextimeLimitPerDay:
          format: double
          nullable: true
          type: number
        guid:
          nullable: true
          readOnly: true
          type: string
        hourCost:
          $ref: '#/components/schemas/MoneyOutputModel'
        isFlextimeActive:
          default: true
          type: boolean
        isOvertimeAllowed:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        role:
          $ref: '#/components/schemas/ModelWithName'
        startDate:
          format: date
          type: string
        title:
          minLength: 1
          type: string
        user:
          $ref: '#/components/schemas/UserWithPhotoFileModelAndRequiredGuid'
        workWeek:
          items:
            $ref: '#/components/schemas/Workweek'
          nullable: true
          type: array
      required:
      - startDate
      - title
      type: object
    WorkHourApprovalMode:
      description: ""
      enum:
      - None
      - RequiredForInvoicing
      - InvoicableAlways
      type: string
      x-enumNames:
      - None
      - RequiredForInvoicing
      - InvoicableAlways
    WorkHourCustomerSubModel:
      example:
        number: 0
        name: name
        guid: guid
      properties:
        guid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        number:
          format: int64
          nullable: true
          type: integer
      type: object
    WorkHourInputModel:
      example:
        phase:
          guid: guid
        unitPrice:
          amount: 5.962133916683182
          currencyCode: currencyCode
        quantity: 1.4658129805029452
        description: description
        invoiceRowDescription: invoiceRowDescription
        isBillable: true
        plannedInvoiceQuantity: 6.027456183070403
        invoiceQuantity: 0.8008281904610115
        workType:
          guid: guid
        overtime:
          guid: guid
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        invoice:
          guid: guid
        invoiceRowComment: invoiceRowComment
        isApproved: true
        user:
          guid: guid
        eventDate: 2000-01-23
      properties:
        description:
          nullable: true
          type: string
        endTime:
          format: date-time
          nullable: true
          type: string
        eventDate:
          format: date
          type: string
        invoice:
          $ref: '#/components/schemas/SimpleInputModel'
        invoiceQuantity:
          format: double
          nullable: true
          type: number
        invoiceRowComment:
          nullable: true
          type: string
        invoiceRowDescription:
          nullable: true
          type: string
        isApproved:
          nullable: true
          type: boolean
        isBillable:
          nullable: true
          type: boolean
        overtime:
          $ref: '#/components/schemas/SimpleInputModel'
        phase:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        plannedInvoiceQuantity:
          format: double
          nullable: true
          type: number
        quantity:
          format: double
          nullable: true
          type: number
        startTime:
          format: date-time
          nullable: true
          type: string
        unitPrice:
          $ref: '#/components/schemas/MoneyInputModel'
        user:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
        workType:
          $ref: '#/components/schemas/SimpleInputRequiredModel'
      required:
      - eventDate
      - phase
      - user
      - workType
      type: object
    WorkHourInvoiceSubModel:
      example:
        date: 2000-01-23
        number: 6
        guid: guid
      properties:
        date:
          format: date
          nullable: true
          type: string
        guid:
          nullable: true
          type: string
        number:
          format: int32
          nullable: true
          type: integer
      type: object
    WorkHourOutputModel:
      example:
        invoiceRowGuid: invoiceRowGuid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        description: description
        project:
          number: 5
          isClosed: true
          name: name
          guid: guid
          companyGuid: companyGuid
        invoiceRowDescription: invoiceRowDescription
        isModifiable: true
        startTime: 2000-01-23T04:56:07.000+00:00
        isApproved: true
        phase:
          isLocked: true
          name: name
          guid: guid
          isCompleted: true
        unitPrice:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        quantity: 2.3021358869347655
        billableStatus: Billable
        isBillable: true
        isProductive: true
        plannedInvoiceQuantity: 5.962133916683182
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        invoiceQuantity: 1.4658129805029452
        unitCost:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        workType:
          code: code
          name: name
          guid: guid
        guid: guid
        overtime:
          name: name
          guid: guid
        endTime: 2000-01-23T04:56:07.000+00:00
        invoice:
          date: 2000-01-23
          number: 6
          guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        invoiceRowComment: invoiceRowComment
        user:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        customer:
          number: 0
          name: name
          guid: guid
        eventDate: 2000-01-23
      properties:
        billableStatus:
          $ref: '#/components/schemas/BillableStatusType'
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        customer:
          $ref: '#/components/schemas/WorkHourCustomerSubModel'
        description:
          nullable: true
          type: string
        endTime:
          format: date-time
          nullable: true
          type: string
        eventDate:
          format: date
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        invoice:
          $ref: '#/components/schemas/WorkHourInvoiceSubModel'
        invoiceQuantity:
          format: double
          nullable: true
          type: number
        invoiceRowComment:
          nullable: true
          type: string
        invoiceRowDescription:
          nullable: true
          type: string
        invoiceRowGuid:
          nullable: true
          type: string
          x-relation-guid: InvoiceRowOutputModel
        isApproved:
          nullable: true
          type: boolean
        isBillable:
          nullable: true
          type: boolean
        isModifiable:
          type: boolean
        isProductive:
          nullable: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        overtime:
          $ref: '#/components/schemas/ModelWithName'
        phase:
          $ref: '#/components/schemas/WorkHourPhaseSubModel'
        plannedInvoiceQuantity:
          format: double
          nullable: true
          type: number
        project:
          $ref: '#/components/schemas/WorkHourProjectSubModel'
        quantity:
          format: double
          nullable: true
          type: number
        startTime:
          format: date-time
          nullable: true
          type: string
        unitCost:
          $ref: '#/components/schemas/MoneyOutputModel'
        unitPrice:
          $ref: '#/components/schemas/MoneyOutputModel'
        user:
          $ref: '#/components/schemas/UserWithFirstNameLastNamePhotoFileModelAndRequiredGuid'
        workType:
          $ref: '#/components/schemas/WorkHourWorkTypeSubModel'
      required:
      - eventDate
      type: object
    WorkHourPhaseSubModel:
      example:
        isLocked: true
        name: name
        guid: guid
        isCompleted: true
      properties:
        guid:
          minLength: 1
          type: string
        isCompleted:
          type: boolean
        isLocked:
          type: boolean
        name:
          nullable: true
          readOnly: true
          type: string
      required:
      - guid
      type: object
    WorkHourPriceOutputModel:
      example:
        unitPrice:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        workType:
          name: name
          guid: guid
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        user:
          name: name
          guid: guid
        isBillable: true
        pricelistVersion:
          guid: guid
      properties:
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        isBillable:
          nullable: true
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        pricelistVersion:
          $ref: '#/components/schemas/ModelBase'
        unitPrice:
          $ref: '#/components/schemas/MoneyOutputModel'
        user:
          $ref: '#/components/schemas/ModelWithName'
        workType:
          $ref: '#/components/schemas/ModelWithName'
      type: object
    WorkHourProjectSubModel:
      example:
        number: 5
        isClosed: true
        name: name
        guid: guid
        companyGuid: companyGuid
      properties:
        companyGuid:
          nullable: true
          type: string
          x-relation-guid: CompanyModel
        guid:
          nullable: true
          type: string
        isClosed:
          type: boolean
        name:
          nullable: true
          type: string
        number:
          format: int64
          nullable: true
          type: integer
      type: object
    WorkHourWorkTypeSubModel:
      example:
        code: code
        name: name
        guid: guid
      properties:
        code:
          nullable: true
          type: string
        guid:
          minLength: 1
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
      required:
      - guid
      type: object
    WorkTypeInputModel:
      example:
        isDefault: true
        salesAccount:
          guid: guid
        code: code
        isProductive: true
        name: name
        hourCost:
          amount: 6.027456183070403
          currencyCode: currencyCode
        isActive: true
      properties:
        code:
          nullable: true
          type: string
        hourCost:
          $ref: '#/components/schemas/MoneyInputModelWithNullableAmount'
        isActive:
          default: true
          type: boolean
        isDefault:
          type: boolean
        isProductive:
          type: boolean
        name:
          minLength: 1
          type: string
        salesAccount:
          $ref: '#/components/schemas/SimpleInputModel'
      required:
      - name
      type: object
    WorkTypeOutputModel:
      example:
        lastUpdatedBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        isDefault: true
        salesAccount:
          name: name
          guid: guid
        code: code
        isProductive: true
        createdBy:
          firstName: firstName
          lastName: lastName
          code: code
          name: name
          guid: guid
        name: name
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        guid: guid
        hourCost:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
      properties:
        code:
          nullable: true
          type: string
        createdBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        createdDateTime:
          format: date-time
          readOnly: true
          type: string
        guid:
          nullable: true
          readOnly: true
          type: string
        hourCost:
          $ref: '#/components/schemas/MoneyOutputModel'
        isActive:
          default: true
          type: boolean
        isDefault:
          type: boolean
        isProductive:
          type: boolean
        lastUpdatedBy:
          $ref: '#/components/schemas/UserWithFirstNameLastNameAndPhotoFileModel'
        lastUpdatedDateTime:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        salesAccount:
          $ref: '#/components/schemas/ModelWithName'
      required:
      - name
      type: object
    WorkTypeSubModel:
      example:
        code: code
        isProductive: true
        name: name
        guid: guid
        isActive: true
      properties:
        code:
          nullable: true
          readOnly: true
          type: string
        guid:
          minLength: 1
          type: string
        isActive:
          default: true
          readOnly: true
          type: boolean
        isProductive:
          readOnly: true
          type: boolean
        name:
          nullable: true
          readOnly: true
          type: string
      required:
      - guid
      type: object
    WorkdayModel:
      example:
        date: 2000-01-23
        flextimeLimitPerDay: 5.637376656633329
        enteredTimeEntries: 1.4658129805029452
        isHoliday: true
        isOvertimeAllowed: true
        userGuid: userGuid
        isReadOnly: true
        enteredHours: 6.027456183070403
        expectedHours: 5.962133916683182
        incompleteTimingMinutes: 2
        absenceHours: 0.8008281904610115
        holidayName: holidayName
        isCompleted: true
      properties:
        absenceHours:
          format: double
          type: number
        date:
          format: date
          type: string
        enteredHours:
          format: double
          type: number
        enteredTimeEntries:
          format: double
          type: number
        expectedHours:
          format: double
          readOnly: true
          type: number
        flextimeLimitPerDay:
          format: double
          nullable: true
          type: number
        holidayName:
          nullable: true
          type: string
        incompleteTimingMinutes:
          format: int32
          type: integer
        isCompleted:
          type: boolean
        isHoliday:
          type: boolean
        isOvertimeAllowed:
          type: boolean
        isReadOnly:
          type: boolean
        userGuid:
          nullable: true
          type: string
          x-relation-guid: UserOutputModel
      type: object
    WorktypeForProjectOutputModel:
      example:
        hourPrice:
          amount: 5.962133916683182
          multiCurrencyInfo:
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          - amount: 5.637376656633329
            purpose:
            - ProjectPrice
            - ProjectPrice
            currencyCode: currencyCode
          currencyCode: currencyCode
        worktype:
          lastUpdatedBy:
            firstName: firstName
            lastName: lastName
            code: code
            name: name
            guid: guid
          isDefault: true
          salesAccount:
            name: name
            guid: guid
          code: code
          isProductive: true
          createdBy:
            firstName: firstName
            lastName: lastName
            code: code
            name: name
            guid: guid
          name: name
          createdDateTime: 2000-01-23T04:56:07.000+00:00
          guid: guid
          hourCost:
            amount: 5.962133916683182
            multiCurrencyInfo:
            - amount: 5.637376656633329
              purpose:
              - ProjectPrice
              - ProjectPrice
              currencyCode: currencyCode
            - amount: 5.637376656633329
              purpose:
              - ProjectPrice
              - ProjectPrice
              currencyCode: currencyCode
            currencyCode: currencyCode
          lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
          isActive: true
      properties:
        hourPrice:
          $ref: '#/components/schemas/MoneyOutputModel'
        worktype:
          $ref: '#/components/schemas/WorkTypeOutputModel'
      type: object
    Workweek:
      description: ""
      enum:
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      - Sunday
      type: string
      x-enumFlags: true
      x-enumNames:
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      - Sunday
    YearlyModel:
      example:
        month: January
        dayOfMonth: 7
        dayOrdinal: null
        dayOrdinalOption: null
      properties:
        dayOfMonth:
          format: int32
          nullable: true
          type: integer
        dayOrdinal:
          $ref: '#/components/schemas/DayOrdinal'
        dayOrdinalOption:
          $ref: '#/components/schemas/DayOrdinalOption'
        month:
          $ref: '#/components/schemas/Months'
      type: object
  securitySchemes:
    ClientIdAuth:
      description: Client_Id header
      in: header
      name: Client_Id
      type: apiKey
    OAuth2:
      description: This API uses OAuth 2 with the Client Credentials flow
      flows:
        clientCredentials:
          refreshUrl: /refreshtoken
          scopes:
            activities:delete: Delete access to activity resources
            activities:read: Read-only access to activity resources
            activities:write: Write access to activity resources
            customers:delete: Delete access to customer resources
            customers:read: Read-only access to customer resources
            customers:write: Write access to customer resources
            fees:delete: Delete access to project fee related resources
            fees:read: Read-only access to project fee related resources
            fees:write: Write access to project fee related resources
            files:delete: Delete access to files
            files:read: Read-only access to files
            files:write: Write access to files
            hours:delete: Delete access to work hour resources
            hours:read: Read-only access to work hour resources
            hours:write: Write access to work hour resources
            invoices:delete: Delete access to invoice resources
            invoices:read: Read-only access to invoice resources
            invoices:write: Write access to invoice resources
            organization:read: Read-only access to organization-level resources
            organization:write: Write access to organization-level resources
            projects:delete: Delete access to project resources
            projects:read: Read-only access to project resources
            projects:write: Write access to project resources
            resourceallocations:delete: Delete access to resource allocations
            resourceallocations:read: Read-only access to resource allocations
            resourceallocations:write: Write access to resource allocations
            settings:delete: Delete access to settings resources
            settings:read: Read-only access to settings resources
            settings:write: Write access to settings resources
            travels:delete: Delete access to travel expense related resources
            travels:read: Read-only access to travel expense related resources
            travels:write: Write access to travel expense related resources
            users:delete: Delete access to user resources
            users:read: Read-only access to user resources
            users:write: Write access to user resources
          tokenUrl: /token
      type: oauth2
x-hasEquivalentPaths: true

