/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CompanyModel;
import org.openapitools.client.model.CurrencyBaseModel;
import org.openapitools.client.model.ModelWithName;
import org.openapitools.client.model.OrganizationDetailsCountrySubModel;
import org.openapitools.client.model.OrganizationDetailsFormattingSubModel;
import org.openapitools.client.model.OrganizationDetailsLanguageSubModel;
import org.openapitools.client.model.UserWithNameAndPhotoFileModel;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrganizationDetailsOutputModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:00.992903-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrganizationDetailsOutputModel {
  public static final String SERIALIZED_NAME_ACTIVE_ADDONS = "activeAddons";
  @SerializedName(SERIALIZED_NAME_ACTIVE_ADDONS)
  private List<String> activeAddons;

  public static final String SERIALIZED_NAME_ACTIVE_COMPANIES = "activeCompanies";
  @SerializedName(SERIALIZED_NAME_ACTIVE_COMPANIES)
  private List<CompanyModel> activeCompanies;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private OrganizationDetailsCountrySubModel country;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private CurrencyBaseModel currency;

  public static final String SERIALIZED_NAME_E_INVOICE_ADDRESS = "eInvoiceAddress";
  @SerializedName(SERIALIZED_NAME_E_INVOICE_ADDRESS)
  private String eInvoiceAddress;

  public static final String SERIALIZED_NAME_E_INVOICE_OPERATOR_CODE = "eInvoiceOperatorCode";
  @SerializedName(SERIALIZED_NAME_E_INVOICE_OPERATOR_CODE)
  private String eInvoiceOperatorCode;

  public static final String SERIALIZED_NAME_FAX = "fax";
  @SerializedName(SERIALIZED_NAME_FAX)
  private String fax;

  public static final String SERIALIZED_NAME_FORMATTING = "formatting";
  @SerializedName(SERIALIZED_NAME_FORMATTING)
  private OrganizationDetailsFormattingSubModel formatting;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_IS_VAT_REGISTERED = "isVatRegistered";
  @SerializedName(SERIALIZED_NAME_IS_VAT_REGISTERED)
  private Boolean isVatRegistered;

  public static final String SERIALIZED_NAME_KVK_NUMBER = "kvkNumber";
  @SerializedName(SERIALIZED_NAME_KVK_NUMBER)
  private String kvkNumber;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private OrganizationDetailsLanguageSubModel language;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ODP_COMPANY = "odpCompany";
  @SerializedName(SERIALIZED_NAME_ODP_COMPANY)
  private String odpCompany;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_REGISTERED_OFFICE = "registeredOffice";
  @SerializedName(SERIALIZED_NAME_REGISTERED_OFFICE)
  private String registeredOffice;

  public static final String SERIALIZED_NAME_TERMS_OF_SERVICE_APPROVER = "termsOfServiceApprover";
  @SerializedName(SERIALIZED_NAME_TERMS_OF_SERVICE_APPROVER)
  private UserWithNameAndPhotoFileModel termsOfServiceApprover;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private ModelWithName timezone;

  public static final String SERIALIZED_NAME_VAT_NUMBER = "vatNumber";
  @SerializedName(SERIALIZED_NAME_VAT_NUMBER)
  private String vatNumber;

  public OrganizationDetailsOutputModel() {
  }

  public OrganizationDetailsOutputModel activeAddons(List<String> activeAddons) {
    this.activeAddons = activeAddons;
    return this;
  }

  public OrganizationDetailsOutputModel addActiveAddonsItem(String activeAddonsItem) {
    if (this.activeAddons == null) {
      this.activeAddons = new ArrayList<>();
    }
    this.activeAddons.add(activeAddonsItem);
    return this;
  }

  /**
   * Get activeAddons
   * @return activeAddons
   */
  @javax.annotation.Nullable
  public List<String> getActiveAddons() {
    return activeAddons;
  }

  public void setActiveAddons(List<String> activeAddons) {
    this.activeAddons = activeAddons;
  }


  public OrganizationDetailsOutputModel activeCompanies(List<CompanyModel> activeCompanies) {
    this.activeCompanies = activeCompanies;
    return this;
  }

  public OrganizationDetailsOutputModel addActiveCompaniesItem(CompanyModel activeCompaniesItem) {
    if (this.activeCompanies == null) {
      this.activeCompanies = new ArrayList<>();
    }
    this.activeCompanies.add(activeCompaniesItem);
    return this;
  }

  /**
   * Get activeCompanies
   * @return activeCompanies
   */
  @javax.annotation.Nullable
  public List<CompanyModel> getActiveCompanies() {
    return activeCompanies;
  }

  public void setActiveCompanies(List<CompanyModel> activeCompanies) {
    this.activeCompanies = activeCompanies;
  }


  public OrganizationDetailsOutputModel address(String address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }


  public OrganizationDetailsOutputModel city(String city) {
    this.city = city;
    return this;
  }

  /**
   * Get city
   * @return city
   */
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }


  public OrganizationDetailsOutputModel country(OrganizationDetailsCountrySubModel country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nullable
  public OrganizationDetailsCountrySubModel getCountry() {
    return country;
  }

  public void setCountry(OrganizationDetailsCountrySubModel country) {
    this.country = country;
  }


  public OrganizationDetailsOutputModel currency(CurrencyBaseModel currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  public CurrencyBaseModel getCurrency() {
    return currency;
  }

  public void setCurrency(CurrencyBaseModel currency) {
    this.currency = currency;
  }


  public OrganizationDetailsOutputModel eInvoiceAddress(String eInvoiceAddress) {
    this.eInvoiceAddress = eInvoiceAddress;
    return this;
  }

  /**
   * Get eInvoiceAddress
   * @return eInvoiceAddress
   */
  @javax.annotation.Nullable
  public String geteInvoiceAddress() {
    return eInvoiceAddress;
  }

  public void seteInvoiceAddress(String eInvoiceAddress) {
    this.eInvoiceAddress = eInvoiceAddress;
  }


  public OrganizationDetailsOutputModel eInvoiceOperatorCode(String eInvoiceOperatorCode) {
    this.eInvoiceOperatorCode = eInvoiceOperatorCode;
    return this;
  }

  /**
   * Get eInvoiceOperatorCode
   * @return eInvoiceOperatorCode
   */
  @javax.annotation.Nullable
  public String geteInvoiceOperatorCode() {
    return eInvoiceOperatorCode;
  }

  public void seteInvoiceOperatorCode(String eInvoiceOperatorCode) {
    this.eInvoiceOperatorCode = eInvoiceOperatorCode;
  }


  public OrganizationDetailsOutputModel fax(String fax) {
    this.fax = fax;
    return this;
  }

  /**
   * Get fax
   * @return fax
   */
  @javax.annotation.Nullable
  public String getFax() {
    return fax;
  }

  public void setFax(String fax) {
    this.fax = fax;
  }


  public OrganizationDetailsOutputModel formatting(OrganizationDetailsFormattingSubModel formatting) {
    this.formatting = formatting;
    return this;
  }

  /**
   * Get formatting
   * @return formatting
   */
  @javax.annotation.Nullable
  public OrganizationDetailsFormattingSubModel getFormatting() {
    return formatting;
  }

  public void setFormatting(OrganizationDetailsFormattingSubModel formatting) {
    this.formatting = formatting;
  }


  public OrganizationDetailsOutputModel guid(String guid) {
    this.guid = guid;
    return this;
  }

  /**
   * Get guid
   * @return guid
   */
  @javax.annotation.Nullable
  public String getGuid() {
    return guid;
  }

  public void setGuid(String guid) {
    this.guid = guid;
  }


  public OrganizationDetailsOutputModel isVatRegistered(Boolean isVatRegistered) {
    this.isVatRegistered = isVatRegistered;
    return this;
  }

  /**
   * Get isVatRegistered
   * @return isVatRegistered
   */
  @javax.annotation.Nullable
  public Boolean getIsVatRegistered() {
    return isVatRegistered;
  }

  public void setIsVatRegistered(Boolean isVatRegistered) {
    this.isVatRegistered = isVatRegistered;
  }


  public OrganizationDetailsOutputModel kvkNumber(String kvkNumber) {
    this.kvkNumber = kvkNumber;
    return this;
  }

  /**
   * Get kvkNumber
   * @return kvkNumber
   */
  @javax.annotation.Nullable
  public String getKvkNumber() {
    return kvkNumber;
  }

  public void setKvkNumber(String kvkNumber) {
    this.kvkNumber = kvkNumber;
  }


  public OrganizationDetailsOutputModel language(OrganizationDetailsLanguageSubModel language) {
    this.language = language;
    return this;
  }

  /**
   * Get language
   * @return language
   */
  @javax.annotation.Nullable
  public OrganizationDetailsLanguageSubModel getLanguage() {
    return language;
  }

  public void setLanguage(OrganizationDetailsLanguageSubModel language) {
    this.language = language;
  }


  public OrganizationDetailsOutputModel name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public OrganizationDetailsOutputModel odpCompany(String odpCompany) {
    this.odpCompany = odpCompany;
    return this;
  }

  /**
   * Get odpCompany
   * @return odpCompany
   */
  @javax.annotation.Nullable
  public String getOdpCompany() {
    return odpCompany;
  }

  public void setOdpCompany(String odpCompany) {
    this.odpCompany = odpCompany;
  }


  public OrganizationDetailsOutputModel phone(String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Get phone
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  public OrganizationDetailsOutputModel postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Get postalCode
   * @return postalCode
   */
  @javax.annotation.Nullable
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public OrganizationDetailsOutputModel registeredOffice(String registeredOffice) {
    this.registeredOffice = registeredOffice;
    return this;
  }

  /**
   * Get registeredOffice
   * @return registeredOffice
   */
  @javax.annotation.Nullable
  public String getRegisteredOffice() {
    return registeredOffice;
  }

  public void setRegisteredOffice(String registeredOffice) {
    this.registeredOffice = registeredOffice;
  }


  public OrganizationDetailsOutputModel termsOfServiceApprover(UserWithNameAndPhotoFileModel termsOfServiceApprover) {
    this.termsOfServiceApprover = termsOfServiceApprover;
    return this;
  }

  /**
   * Get termsOfServiceApprover
   * @return termsOfServiceApprover
   */
  @javax.annotation.Nullable
  public UserWithNameAndPhotoFileModel getTermsOfServiceApprover() {
    return termsOfServiceApprover;
  }

  public void setTermsOfServiceApprover(UserWithNameAndPhotoFileModel termsOfServiceApprover) {
    this.termsOfServiceApprover = termsOfServiceApprover;
  }


  public OrganizationDetailsOutputModel timezone(ModelWithName timezone) {
    this.timezone = timezone;
    return this;
  }

  /**
   * Get timezone
   * @return timezone
   */
  @javax.annotation.Nullable
  public ModelWithName getTimezone() {
    return timezone;
  }

  public void setTimezone(ModelWithName timezone) {
    this.timezone = timezone;
  }


  public OrganizationDetailsOutputModel vatNumber(String vatNumber) {
    this.vatNumber = vatNumber;
    return this;
  }

  /**
   * Get vatNumber
   * @return vatNumber
   */
  @javax.annotation.Nullable
  public String getVatNumber() {
    return vatNumber;
  }

  public void setVatNumber(String vatNumber) {
    this.vatNumber = vatNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganizationDetailsOutputModel organizationDetailsOutputModel = (OrganizationDetailsOutputModel) o;
    return Objects.equals(this.activeAddons, organizationDetailsOutputModel.activeAddons) &&
        Objects.equals(this.activeCompanies, organizationDetailsOutputModel.activeCompanies) &&
        Objects.equals(this.address, organizationDetailsOutputModel.address) &&
        Objects.equals(this.city, organizationDetailsOutputModel.city) &&
        Objects.equals(this.country, organizationDetailsOutputModel.country) &&
        Objects.equals(this.currency, organizationDetailsOutputModel.currency) &&
        Objects.equals(this.eInvoiceAddress, organizationDetailsOutputModel.eInvoiceAddress) &&
        Objects.equals(this.eInvoiceOperatorCode, organizationDetailsOutputModel.eInvoiceOperatorCode) &&
        Objects.equals(this.fax, organizationDetailsOutputModel.fax) &&
        Objects.equals(this.formatting, organizationDetailsOutputModel.formatting) &&
        Objects.equals(this.guid, organizationDetailsOutputModel.guid) &&
        Objects.equals(this.isVatRegistered, organizationDetailsOutputModel.isVatRegistered) &&
        Objects.equals(this.kvkNumber, organizationDetailsOutputModel.kvkNumber) &&
        Objects.equals(this.language, organizationDetailsOutputModel.language) &&
        Objects.equals(this.name, organizationDetailsOutputModel.name) &&
        Objects.equals(this.odpCompany, organizationDetailsOutputModel.odpCompany) &&
        Objects.equals(this.phone, organizationDetailsOutputModel.phone) &&
        Objects.equals(this.postalCode, organizationDetailsOutputModel.postalCode) &&
        Objects.equals(this.registeredOffice, organizationDetailsOutputModel.registeredOffice) &&
        Objects.equals(this.termsOfServiceApprover, organizationDetailsOutputModel.termsOfServiceApprover) &&
        Objects.equals(this.timezone, organizationDetailsOutputModel.timezone) &&
        Objects.equals(this.vatNumber, organizationDetailsOutputModel.vatNumber);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeAddons, activeCompanies, address, city, country, currency, eInvoiceAddress, eInvoiceOperatorCode, fax, formatting, guid, isVatRegistered, kvkNumber, language, name, odpCompany, phone, postalCode, registeredOffice, termsOfServiceApprover, timezone, vatNumber);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganizationDetailsOutputModel {\n");
    sb.append("    activeAddons: ").append(toIndentedString(activeAddons)).append("\n");
    sb.append("    activeCompanies: ").append(toIndentedString(activeCompanies)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    eInvoiceAddress: ").append(toIndentedString(eInvoiceAddress)).append("\n");
    sb.append("    eInvoiceOperatorCode: ").append(toIndentedString(eInvoiceOperatorCode)).append("\n");
    sb.append("    fax: ").append(toIndentedString(fax)).append("\n");
    sb.append("    formatting: ").append(toIndentedString(formatting)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    isVatRegistered: ").append(toIndentedString(isVatRegistered)).append("\n");
    sb.append("    kvkNumber: ").append(toIndentedString(kvkNumber)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    odpCompany: ").append(toIndentedString(odpCompany)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    registeredOffice: ").append(toIndentedString(registeredOffice)).append("\n");
    sb.append("    termsOfServiceApprover: ").append(toIndentedString(termsOfServiceApprover)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    vatNumber: ").append(toIndentedString(vatNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activeAddons");
    openapiFields.add("activeCompanies");
    openapiFields.add("address");
    openapiFields.add("city");
    openapiFields.add("country");
    openapiFields.add("currency");
    openapiFields.add("eInvoiceAddress");
    openapiFields.add("eInvoiceOperatorCode");
    openapiFields.add("fax");
    openapiFields.add("formatting");
    openapiFields.add("guid");
    openapiFields.add("isVatRegistered");
    openapiFields.add("kvkNumber");
    openapiFields.add("language");
    openapiFields.add("name");
    openapiFields.add("odpCompany");
    openapiFields.add("phone");
    openapiFields.add("postalCode");
    openapiFields.add("registeredOffice");
    openapiFields.add("termsOfServiceApprover");
    openapiFields.add("timezone");
    openapiFields.add("vatNumber");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrganizationDetailsOutputModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrganizationDetailsOutputModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrganizationDetailsOutputModel is not found in the empty JSON string", OrganizationDetailsOutputModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrganizationDetailsOutputModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrganizationDetailsOutputModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("activeAddons") != null && !jsonObj.get("activeAddons").isJsonNull() && !jsonObj.get("activeAddons").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `activeAddons` to be an array in the JSON string but got `%s`", jsonObj.get("activeAddons").toString()));
      }
      if (jsonObj.get("activeCompanies") != null && !jsonObj.get("activeCompanies").isJsonNull()) {
        JsonArray jsonArrayactiveCompanies = jsonObj.getAsJsonArray("activeCompanies");
        if (jsonArrayactiveCompanies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("activeCompanies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `activeCompanies` to be an array in the JSON string but got `%s`", jsonObj.get("activeCompanies").toString()));
          }

          // validate the optional field `activeCompanies` (array)
          for (int i = 0; i < jsonArrayactiveCompanies.size(); i++) {
            CompanyModel.validateJsonElement(jsonArrayactiveCompanies.get(i));
          };
        }
      }
      if ((jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) && !jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      // validate the optional field `country`
      if (jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) {
        OrganizationDetailsCountrySubModel.validateJsonElement(jsonObj.get("country"));
      }
      // validate the optional field `currency`
      if (jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) {
        CurrencyBaseModel.validateJsonElement(jsonObj.get("currency"));
      }
      if ((jsonObj.get("eInvoiceAddress") != null && !jsonObj.get("eInvoiceAddress").isJsonNull()) && !jsonObj.get("eInvoiceAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eInvoiceAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eInvoiceAddress").toString()));
      }
      if ((jsonObj.get("eInvoiceOperatorCode") != null && !jsonObj.get("eInvoiceOperatorCode").isJsonNull()) && !jsonObj.get("eInvoiceOperatorCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eInvoiceOperatorCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eInvoiceOperatorCode").toString()));
      }
      if ((jsonObj.get("fax") != null && !jsonObj.get("fax").isJsonNull()) && !jsonObj.get("fax").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fax` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fax").toString()));
      }
      // validate the optional field `formatting`
      if (jsonObj.get("formatting") != null && !jsonObj.get("formatting").isJsonNull()) {
        OrganizationDetailsFormattingSubModel.validateJsonElement(jsonObj.get("formatting"));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      if ((jsonObj.get("kvkNumber") != null && !jsonObj.get("kvkNumber").isJsonNull()) && !jsonObj.get("kvkNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kvkNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kvkNumber").toString()));
      }
      // validate the optional field `language`
      if (jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) {
        OrganizationDetailsLanguageSubModel.validateJsonElement(jsonObj.get("language"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("odpCompany") != null && !jsonObj.get("odpCompany").isJsonNull()) && !jsonObj.get("odpCompany").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `odpCompany` to be a primitive type in the JSON string but got `%s`", jsonObj.get("odpCompany").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("postalCode") != null && !jsonObj.get("postalCode").isJsonNull()) && !jsonObj.get("postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postalCode").toString()));
      }
      if ((jsonObj.get("registeredOffice") != null && !jsonObj.get("registeredOffice").isJsonNull()) && !jsonObj.get("registeredOffice").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `registeredOffice` to be a primitive type in the JSON string but got `%s`", jsonObj.get("registeredOffice").toString()));
      }
      // validate the optional field `termsOfServiceApprover`
      if (jsonObj.get("termsOfServiceApprover") != null && !jsonObj.get("termsOfServiceApprover").isJsonNull()) {
        UserWithNameAndPhotoFileModel.validateJsonElement(jsonObj.get("termsOfServiceApprover"));
      }
      // validate the optional field `timezone`
      if (jsonObj.get("timezone") != null && !jsonObj.get("timezone").isJsonNull()) {
        ModelWithName.validateJsonElement(jsonObj.get("timezone"));
      }
      if ((jsonObj.get("vatNumber") != null && !jsonObj.get("vatNumber").isJsonNull()) && !jsonObj.get("vatNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vatNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vatNumber").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrganizationDetailsOutputModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrganizationDetailsOutputModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrganizationDetailsOutputModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrganizationDetailsOutputModel.class));

       return (TypeAdapter<T>) new TypeAdapter<OrganizationDetailsOutputModel>() {
           @Override
           public void write(JsonWriter out, OrganizationDetailsOutputModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrganizationDetailsOutputModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrganizationDetailsOutputModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrganizationDetailsOutputModel
   * @throws IOException if the JSON string is invalid with respect to OrganizationDetailsOutputModel
   */
  public static OrganizationDetailsOutputModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrganizationDetailsOutputModel.class);
  }

  /**
   * Convert an instance of OrganizationDetailsOutputModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

