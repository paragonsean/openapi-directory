/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.BusinessUnitCostCenterModel;
import org.openapitools.client.model.UserWithFirstNameLastNameAndPhotoFileModel;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BusinessUnitModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:00.992903-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BusinessUnitModel {
  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_COMPANY_BUSINESS_UNIT_GUID = "companyBusinessUnitGuid";
  @SerializedName(SERIALIZED_NAME_COMPANY_BUSINESS_UNIT_GUID)
  private String companyBusinessUnitGuid;

  public static final String SERIALIZED_NAME_COMPANY_COUNTRY_GUID = "companyCountryGuid";
  @SerializedName(SERIALIZED_NAME_COMPANY_COUNTRY_GUID)
  private String companyCountryGuid;

  public static final String SERIALIZED_NAME_COMPANY_CURRENCY_GUID = "companyCurrencyGuid";
  @SerializedName(SERIALIZED_NAME_COMPANY_CURRENCY_GUID)
  private String companyCurrencyGuid;

  public static final String SERIALIZED_NAME_COMPANY_GUID = "companyGuid";
  @SerializedName(SERIALIZED_NAME_COMPANY_GUID)
  private String companyGuid;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "companyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_COST_CENTER = "costCenter";
  @SerializedName(SERIALIZED_NAME_COST_CENTER)
  private BusinessUnitCostCenterModel costCenter;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private UserWithFirstNameLastNameAndPhotoFileModel createdBy;

  public static final String SERIALIZED_NAME_CREATED_DATE_TIME = "createdDateTime";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE_TIME)
  private OffsetDateTime createdDateTime;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "isActive";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive = true;

  public static final String SERIALIZED_NAME_KVK_NUMBER = "kvkNumber";
  @SerializedName(SERIALIZED_NAME_KVK_NUMBER)
  private String kvkNumber;

  public static final String SERIALIZED_NAME_LAST_UPDATED_BY = "lastUpdatedBy";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_BY)
  private UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy;

  public static final String SERIALIZED_NAME_LAST_UPDATED_DATE_TIME = "lastUpdatedDateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_DATE_TIME)
  private OffsetDateTime lastUpdatedDateTime;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PARENT_GUID = "parentGuid";
  @SerializedName(SERIALIZED_NAME_PARENT_GUID)
  private String parentGuid;

  public static final String SERIALIZED_NAME_VAT_NUMBER = "vatNumber";
  @SerializedName(SERIALIZED_NAME_VAT_NUMBER)
  private String vatNumber;

  public BusinessUnitModel() {
  }

  public BusinessUnitModel(
     String companyBusinessUnitGuid, 
     String companyCountryGuid, 
     String companyCurrencyGuid, 
     String companyGuid, 
     String companyName, 
     OffsetDateTime createdDateTime, 
     String guid, 
     OffsetDateTime lastUpdatedDateTime
  ) {
    this();
    this.companyBusinessUnitGuid = companyBusinessUnitGuid;
    this.companyCountryGuid = companyCountryGuid;
    this.companyCurrencyGuid = companyCurrencyGuid;
    this.companyGuid = companyGuid;
    this.companyName = companyName;
    this.createdDateTime = createdDateTime;
    this.guid = guid;
    this.lastUpdatedDateTime = lastUpdatedDateTime;
  }

  public BusinessUnitModel code(String code) {
    this.code = code;
    return this;
  }

  /**
   * Get code
   * @return code
   */
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }


  /**
   * Get companyBusinessUnitGuid
   * @return companyBusinessUnitGuid
   */
  @javax.annotation.Nullable
  public String getCompanyBusinessUnitGuid() {
    return companyBusinessUnitGuid;
  }



  /**
   * Get companyCountryGuid
   * @return companyCountryGuid
   */
  @javax.annotation.Nullable
  public String getCompanyCountryGuid() {
    return companyCountryGuid;
  }



  /**
   * Get companyCurrencyGuid
   * @return companyCurrencyGuid
   */
  @javax.annotation.Nullable
  public String getCompanyCurrencyGuid() {
    return companyCurrencyGuid;
  }



  /**
   * Get companyGuid
   * @return companyGuid
   */
  @javax.annotation.Nullable
  public String getCompanyGuid() {
    return companyGuid;
  }



  /**
   * Get companyName
   * @return companyName
   */
  @javax.annotation.Nullable
  public String getCompanyName() {
    return companyName;
  }



  public BusinessUnitModel costCenter(BusinessUnitCostCenterModel costCenter) {
    this.costCenter = costCenter;
    return this;
  }

  /**
   * Get costCenter
   * @return costCenter
   */
  @javax.annotation.Nullable
  public BusinessUnitCostCenterModel getCostCenter() {
    return costCenter;
  }

  public void setCostCenter(BusinessUnitCostCenterModel costCenter) {
    this.costCenter = costCenter;
  }


  public BusinessUnitModel createdBy(UserWithFirstNameLastNameAndPhotoFileModel createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public UserWithFirstNameLastNameAndPhotoFileModel getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(UserWithFirstNameLastNameAndPhotoFileModel createdBy) {
    this.createdBy = createdBy;
  }


  /**
   * Get createdDateTime
   * @return createdDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDateTime() {
    return createdDateTime;
  }



  /**
   * Get guid
   * @return guid
   */
  @javax.annotation.Nullable
  public String getGuid() {
    return guid;
  }



  public BusinessUnitModel isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

  /**
   * Get isActive
   * @return isActive
   */
  @javax.annotation.Nullable
  public Boolean getIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  public BusinessUnitModel kvkNumber(String kvkNumber) {
    this.kvkNumber = kvkNumber;
    return this;
  }

  /**
   * Get kvkNumber
   * @return kvkNumber
   */
  @javax.annotation.Nullable
  public String getKvkNumber() {
    return kvkNumber;
  }

  public void setKvkNumber(String kvkNumber) {
    this.kvkNumber = kvkNumber;
  }


  public BusinessUnitModel lastUpdatedBy(UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
    return this;
  }

  /**
   * Get lastUpdatedBy
   * @return lastUpdatedBy
   */
  @javax.annotation.Nullable
  public UserWithFirstNameLastNameAndPhotoFileModel getLastUpdatedBy() {
    return lastUpdatedBy;
  }

  public void setLastUpdatedBy(UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
  }


  /**
   * Get lastUpdatedDateTime
   * @return lastUpdatedDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedDateTime() {
    return lastUpdatedDateTime;
  }



  public BusinessUnitModel name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public BusinessUnitModel parentGuid(String parentGuid) {
    this.parentGuid = parentGuid;
    return this;
  }

  /**
   * Get parentGuid
   * @return parentGuid
   */
  @javax.annotation.Nullable
  public String getParentGuid() {
    return parentGuid;
  }

  public void setParentGuid(String parentGuid) {
    this.parentGuid = parentGuid;
  }


  public BusinessUnitModel vatNumber(String vatNumber) {
    this.vatNumber = vatNumber;
    return this;
  }

  /**
   * Get vatNumber
   * @return vatNumber
   */
  @javax.annotation.Nullable
  public String getVatNumber() {
    return vatNumber;
  }

  public void setVatNumber(String vatNumber) {
    this.vatNumber = vatNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BusinessUnitModel businessUnitModel = (BusinessUnitModel) o;
    return Objects.equals(this.code, businessUnitModel.code) &&
        Objects.equals(this.companyBusinessUnitGuid, businessUnitModel.companyBusinessUnitGuid) &&
        Objects.equals(this.companyCountryGuid, businessUnitModel.companyCountryGuid) &&
        Objects.equals(this.companyCurrencyGuid, businessUnitModel.companyCurrencyGuid) &&
        Objects.equals(this.companyGuid, businessUnitModel.companyGuid) &&
        Objects.equals(this.companyName, businessUnitModel.companyName) &&
        Objects.equals(this.costCenter, businessUnitModel.costCenter) &&
        Objects.equals(this.createdBy, businessUnitModel.createdBy) &&
        Objects.equals(this.createdDateTime, businessUnitModel.createdDateTime) &&
        Objects.equals(this.guid, businessUnitModel.guid) &&
        Objects.equals(this.isActive, businessUnitModel.isActive) &&
        Objects.equals(this.kvkNumber, businessUnitModel.kvkNumber) &&
        Objects.equals(this.lastUpdatedBy, businessUnitModel.lastUpdatedBy) &&
        Objects.equals(this.lastUpdatedDateTime, businessUnitModel.lastUpdatedDateTime) &&
        Objects.equals(this.name, businessUnitModel.name) &&
        Objects.equals(this.parentGuid, businessUnitModel.parentGuid) &&
        Objects.equals(this.vatNumber, businessUnitModel.vatNumber);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, companyBusinessUnitGuid, companyCountryGuid, companyCurrencyGuid, companyGuid, companyName, costCenter, createdBy, createdDateTime, guid, isActive, kvkNumber, lastUpdatedBy, lastUpdatedDateTime, name, parentGuid, vatNumber);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BusinessUnitModel {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    companyBusinessUnitGuid: ").append(toIndentedString(companyBusinessUnitGuid)).append("\n");
    sb.append("    companyCountryGuid: ").append(toIndentedString(companyCountryGuid)).append("\n");
    sb.append("    companyCurrencyGuid: ").append(toIndentedString(companyCurrencyGuid)).append("\n");
    sb.append("    companyGuid: ").append(toIndentedString(companyGuid)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    costCenter: ").append(toIndentedString(costCenter)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdDateTime: ").append(toIndentedString(createdDateTime)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    kvkNumber: ").append(toIndentedString(kvkNumber)).append("\n");
    sb.append("    lastUpdatedBy: ").append(toIndentedString(lastUpdatedBy)).append("\n");
    sb.append("    lastUpdatedDateTime: ").append(toIndentedString(lastUpdatedDateTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parentGuid: ").append(toIndentedString(parentGuid)).append("\n");
    sb.append("    vatNumber: ").append(toIndentedString(vatNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("code");
    openapiFields.add("companyBusinessUnitGuid");
    openapiFields.add("companyCountryGuid");
    openapiFields.add("companyCurrencyGuid");
    openapiFields.add("companyGuid");
    openapiFields.add("companyName");
    openapiFields.add("costCenter");
    openapiFields.add("createdBy");
    openapiFields.add("createdDateTime");
    openapiFields.add("guid");
    openapiFields.add("isActive");
    openapiFields.add("kvkNumber");
    openapiFields.add("lastUpdatedBy");
    openapiFields.add("lastUpdatedDateTime");
    openapiFields.add("name");
    openapiFields.add("parentGuid");
    openapiFields.add("vatNumber");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BusinessUnitModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BusinessUnitModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BusinessUnitModel is not found in the empty JSON string", BusinessUnitModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BusinessUnitModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BusinessUnitModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : BusinessUnitModel.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if ((jsonObj.get("companyBusinessUnitGuid") != null && !jsonObj.get("companyBusinessUnitGuid").isJsonNull()) && !jsonObj.get("companyBusinessUnitGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyBusinessUnitGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyBusinessUnitGuid").toString()));
      }
      if ((jsonObj.get("companyCountryGuid") != null && !jsonObj.get("companyCountryGuid").isJsonNull()) && !jsonObj.get("companyCountryGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyCountryGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyCountryGuid").toString()));
      }
      if ((jsonObj.get("companyCurrencyGuid") != null && !jsonObj.get("companyCurrencyGuid").isJsonNull()) && !jsonObj.get("companyCurrencyGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyCurrencyGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyCurrencyGuid").toString()));
      }
      if ((jsonObj.get("companyGuid") != null && !jsonObj.get("companyGuid").isJsonNull()) && !jsonObj.get("companyGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyGuid").toString()));
      }
      if ((jsonObj.get("companyName") != null && !jsonObj.get("companyName").isJsonNull()) && !jsonObj.get("companyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyName").toString()));
      }
      // validate the optional field `costCenter`
      if (jsonObj.get("costCenter") != null && !jsonObj.get("costCenter").isJsonNull()) {
        BusinessUnitCostCenterModel.validateJsonElement(jsonObj.get("costCenter"));
      }
      // validate the optional field `createdBy`
      if (jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) {
        UserWithFirstNameLastNameAndPhotoFileModel.validateJsonElement(jsonObj.get("createdBy"));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      if ((jsonObj.get("kvkNumber") != null && !jsonObj.get("kvkNumber").isJsonNull()) && !jsonObj.get("kvkNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kvkNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kvkNumber").toString()));
      }
      // validate the optional field `lastUpdatedBy`
      if (jsonObj.get("lastUpdatedBy") != null && !jsonObj.get("lastUpdatedBy").isJsonNull()) {
        UserWithFirstNameLastNameAndPhotoFileModel.validateJsonElement(jsonObj.get("lastUpdatedBy"));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("parentGuid") != null && !jsonObj.get("parentGuid").isJsonNull()) && !jsonObj.get("parentGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentGuid").toString()));
      }
      if ((jsonObj.get("vatNumber") != null && !jsonObj.get("vatNumber").isJsonNull()) && !jsonObj.get("vatNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vatNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vatNumber").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BusinessUnitModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BusinessUnitModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BusinessUnitModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BusinessUnitModel.class));

       return (TypeAdapter<T>) new TypeAdapter<BusinessUnitModel>() {
           @Override
           public void write(JsonWriter out, BusinessUnitModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BusinessUnitModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BusinessUnitModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BusinessUnitModel
   * @throws IOException if the JSON string is invalid with respect to BusinessUnitModel
   */
  public static BusinessUnitModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BusinessUnitModel.class);
  }

  /**
   * Convert an instance of BusinessUnitModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

