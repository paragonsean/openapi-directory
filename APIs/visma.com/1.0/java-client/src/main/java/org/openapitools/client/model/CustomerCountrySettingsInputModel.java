/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.SimpleInputModel;
import org.openapitools.client.model.SimpleInputRequiredModel;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CustomerCountrySettingsInputModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:00.992903-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CustomerCountrySettingsInputModel {
  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private SimpleInputRequiredModel country;

  public static final String SERIALIZED_NAME_CUSTOMER = "customer";
  @SerializedName(SERIALIZED_NAME_CUSTOMER)
  private SimpleInputRequiredModel customer;

  public static final String SERIALIZED_NAME_IS_TAX_FREE = "isTaxFree";
  @SerializedName(SERIALIZED_NAME_IS_TAX_FREE)
  private Boolean isTaxFree;

  public static final String SERIALIZED_NAME_TAX_FREE_DESCRIPTION = "taxFreeDescription";
  @SerializedName(SERIALIZED_NAME_TAX_FREE_DESCRIPTION)
  private String taxFreeDescription;

  public static final String SERIALIZED_NAME_VALUE_ADDED_TAX = "valueAddedTax";
  @SerializedName(SERIALIZED_NAME_VALUE_ADDED_TAX)
  private SimpleInputModel valueAddedTax;

  public static final String SERIALIZED_NAME_ZERO_VAT_CATEGORY_CODE_EN16931 = "zeroVatCategoryCodeEn16931";
  @SerializedName(SERIALIZED_NAME_ZERO_VAT_CATEGORY_CODE_EN16931)
  private String zeroVatCategoryCodeEn16931;

  public CustomerCountrySettingsInputModel() {
  }

  public CustomerCountrySettingsInputModel country(SimpleInputRequiredModel country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nonnull
  public SimpleInputRequiredModel getCountry() {
    return country;
  }

  public void setCountry(SimpleInputRequiredModel country) {
    this.country = country;
  }


  public CustomerCountrySettingsInputModel customer(SimpleInputRequiredModel customer) {
    this.customer = customer;
    return this;
  }

  /**
   * Get customer
   * @return customer
   */
  @javax.annotation.Nonnull
  public SimpleInputRequiredModel getCustomer() {
    return customer;
  }

  public void setCustomer(SimpleInputRequiredModel customer) {
    this.customer = customer;
  }


  public CustomerCountrySettingsInputModel isTaxFree(Boolean isTaxFree) {
    this.isTaxFree = isTaxFree;
    return this;
  }

  /**
   * Get isTaxFree
   * @return isTaxFree
   */
  @javax.annotation.Nullable
  public Boolean getIsTaxFree() {
    return isTaxFree;
  }

  public void setIsTaxFree(Boolean isTaxFree) {
    this.isTaxFree = isTaxFree;
  }


  public CustomerCountrySettingsInputModel taxFreeDescription(String taxFreeDescription) {
    this.taxFreeDescription = taxFreeDescription;
    return this;
  }

  /**
   * Get taxFreeDescription
   * @return taxFreeDescription
   */
  @javax.annotation.Nullable
  public String getTaxFreeDescription() {
    return taxFreeDescription;
  }

  public void setTaxFreeDescription(String taxFreeDescription) {
    this.taxFreeDescription = taxFreeDescription;
  }


  public CustomerCountrySettingsInputModel valueAddedTax(SimpleInputModel valueAddedTax) {
    this.valueAddedTax = valueAddedTax;
    return this;
  }

  /**
   * Get valueAddedTax
   * @return valueAddedTax
   */
  @javax.annotation.Nullable
  public SimpleInputModel getValueAddedTax() {
    return valueAddedTax;
  }

  public void setValueAddedTax(SimpleInputModel valueAddedTax) {
    this.valueAddedTax = valueAddedTax;
  }


  public CustomerCountrySettingsInputModel zeroVatCategoryCodeEn16931(String zeroVatCategoryCodeEn16931) {
    this.zeroVatCategoryCodeEn16931 = zeroVatCategoryCodeEn16931;
    return this;
  }

  /**
   * Get zeroVatCategoryCodeEn16931
   * @return zeroVatCategoryCodeEn16931
   */
  @javax.annotation.Nullable
  public String getZeroVatCategoryCodeEn16931() {
    return zeroVatCategoryCodeEn16931;
  }

  public void setZeroVatCategoryCodeEn16931(String zeroVatCategoryCodeEn16931) {
    this.zeroVatCategoryCodeEn16931 = zeroVatCategoryCodeEn16931;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerCountrySettingsInputModel customerCountrySettingsInputModel = (CustomerCountrySettingsInputModel) o;
    return Objects.equals(this.country, customerCountrySettingsInputModel.country) &&
        Objects.equals(this.customer, customerCountrySettingsInputModel.customer) &&
        Objects.equals(this.isTaxFree, customerCountrySettingsInputModel.isTaxFree) &&
        Objects.equals(this.taxFreeDescription, customerCountrySettingsInputModel.taxFreeDescription) &&
        Objects.equals(this.valueAddedTax, customerCountrySettingsInputModel.valueAddedTax) &&
        Objects.equals(this.zeroVatCategoryCodeEn16931, customerCountrySettingsInputModel.zeroVatCategoryCodeEn16931);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(country, customer, isTaxFree, taxFreeDescription, valueAddedTax, zeroVatCategoryCodeEn16931);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerCountrySettingsInputModel {\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    isTaxFree: ").append(toIndentedString(isTaxFree)).append("\n");
    sb.append("    taxFreeDescription: ").append(toIndentedString(taxFreeDescription)).append("\n");
    sb.append("    valueAddedTax: ").append(toIndentedString(valueAddedTax)).append("\n");
    sb.append("    zeroVatCategoryCodeEn16931: ").append(toIndentedString(zeroVatCategoryCodeEn16931)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("country");
    openapiFields.add("customer");
    openapiFields.add("isTaxFree");
    openapiFields.add("taxFreeDescription");
    openapiFields.add("valueAddedTax");
    openapiFields.add("zeroVatCategoryCodeEn16931");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("country");
    openapiRequiredFields.add("customer");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CustomerCountrySettingsInputModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomerCountrySettingsInputModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerCountrySettingsInputModel is not found in the empty JSON string", CustomerCountrySettingsInputModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CustomerCountrySettingsInputModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomerCountrySettingsInputModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CustomerCountrySettingsInputModel.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `country`
      SimpleInputRequiredModel.validateJsonElement(jsonObj.get("country"));
      // validate the required field `customer`
      SimpleInputRequiredModel.validateJsonElement(jsonObj.get("customer"));
      if ((jsonObj.get("taxFreeDescription") != null && !jsonObj.get("taxFreeDescription").isJsonNull()) && !jsonObj.get("taxFreeDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxFreeDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxFreeDescription").toString()));
      }
      // validate the optional field `valueAddedTax`
      if (jsonObj.get("valueAddedTax") != null && !jsonObj.get("valueAddedTax").isJsonNull()) {
        SimpleInputModel.validateJsonElement(jsonObj.get("valueAddedTax"));
      }
      if ((jsonObj.get("zeroVatCategoryCodeEn16931") != null && !jsonObj.get("zeroVatCategoryCodeEn16931").isJsonNull()) && !jsonObj.get("zeroVatCategoryCodeEn16931").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zeroVatCategoryCodeEn16931` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zeroVatCategoryCodeEn16931").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerCountrySettingsInputModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerCountrySettingsInputModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerCountrySettingsInputModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerCountrySettingsInputModel.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerCountrySettingsInputModel>() {
           @Override
           public void write(JsonWriter out, CustomerCountrySettingsInputModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerCountrySettingsInputModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CustomerCountrySettingsInputModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CustomerCountrySettingsInputModel
   * @throws IOException if the JSON string is invalid with respect to CustomerCountrySettingsInputModel
   */
  public static CustomerCountrySettingsInputModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerCountrySettingsInputModel.class);
  }

  /**
   * Convert an instance of CustomerCountrySettingsInputModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

