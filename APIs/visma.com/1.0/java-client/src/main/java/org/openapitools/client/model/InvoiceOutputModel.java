/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CurrencySubModel;
import org.openapitools.client.model.FormattingCultureSubModel2;
import org.openapitools.client.model.FreeTextModel2;
import org.openapitools.client.model.InvoiceCustomerSubModel;
import org.openapitools.client.model.InvoiceLanguageSubModel;
import org.openapitools.client.model.InvoiceProjectSubModel;
import org.openapitools.client.model.InvoiceReceiverAddressSubModel;
import org.openapitools.client.model.InvoiceSenderAddressSubModel;
import org.openapitools.client.model.InvoiceStatusSubModel;
import org.openapitools.client.model.ModelWithName;
import org.openapitools.client.model.MoneyOutputModel;
import org.openapitools.client.model.RelatedInvoiceSubModel;
import org.openapitools.client.model.UserWithFirstNameLastNameAndPhotoFileModel;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * InvoiceOutputModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:00.992903-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InvoiceOutputModel {
  public static final String SERIALIZED_NAME_BILLING_CUSTOMER = "billingCustomer";
  @SerializedName(SERIALIZED_NAME_BILLING_CUSTOMER)
  private InvoiceCustomerSubModel billingCustomer;

  public static final String SERIALIZED_NAME_CAN_BE_DELETED = "canBeDeleted";
  @SerializedName(SERIALIZED_NAME_CAN_BE_DELETED)
  private Boolean canBeDeleted;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private UserWithFirstNameLastNameAndPhotoFileModel createdBy;

  public static final String SERIALIZED_NAME_CREATED_DATE_TIME = "createdDateTime";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE_TIME)
  private OffsetDateTime createdDateTime;

  public static final String SERIALIZED_NAME_CREDIT_NOTE_INVOICE = "creditNoteInvoice";
  @SerializedName(SERIALIZED_NAME_CREDIT_NOTE_INVOICE)
  private RelatedInvoiceSubModel creditNoteInvoice;

  public static final String SERIALIZED_NAME_CULTURE = "culture";
  @SerializedName(SERIALIZED_NAME_CULTURE)
  private FormattingCultureSubModel2 culture;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private CurrencySubModel currency;

  public static final String SERIALIZED_NAME_CURRENCY_RATE = "currencyRate";
  @SerializedName(SERIALIZED_NAME_CURRENCY_RATE)
  private Double currencyRate;

  public static final String SERIALIZED_NAME_CUSTOMER = "customer";
  @SerializedName(SERIALIZED_NAME_CUSTOMER)
  private InvoiceCustomerSubModel customer;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private LocalDate date;

  public static final String SERIALIZED_NAME_DUE_DATE = "dueDate";
  @SerializedName(SERIALIZED_NAME_DUE_DATE)
  private LocalDate dueDate;

  public static final String SERIALIZED_NAME_ENTRY_DATE = "entryDate";
  @SerializedName(SERIALIZED_NAME_ENTRY_DATE)
  private LocalDate entryDate;

  public static final String SERIALIZED_NAME_FLAT_RATES_TOTAL_EXCLUDING_TAX = "flatRatesTotalExcludingTax";
  @SerializedName(SERIALIZED_NAME_FLAT_RATES_TOTAL_EXCLUDING_TAX)
  private MoneyOutputModel flatRatesTotalExcludingTax;

  public static final String SERIALIZED_NAME_FREE_TEXT1 = "freeText1";
  @SerializedName(SERIALIZED_NAME_FREE_TEXT1)
  private FreeTextModel2 freeText1;

  public static final String SERIALIZED_NAME_FREE_TEXT2 = "freeText2";
  @SerializedName(SERIALIZED_NAME_FREE_TEXT2)
  private FreeTextModel2 freeText2;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_INVOICE_NUMBER_BUSINESS_UNIT_GUID = "invoiceNumberBusinessUnitGuid";
  @SerializedName(SERIALIZED_NAME_INVOICE_NUMBER_BUSINESS_UNIT_GUID)
  private String invoiceNumberBusinessUnitGuid;

  public static final String SERIALIZED_NAME_INVOICE_TEMPLATE = "invoiceTemplate";
  @SerializedName(SERIALIZED_NAME_INVOICE_TEMPLATE)
  private ModelWithName invoiceTemplate;

  public static final String SERIALIZED_NAME_IS_CREDIT_NOTE = "isCreditNote";
  @SerializedName(SERIALIZED_NAME_IS_CREDIT_NOTE)
  private Boolean isCreditNote;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private InvoiceLanguageSubModel language;

  public static final String SERIALIZED_NAME_LAST_UPDATED_BY = "lastUpdatedBy";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_BY)
  private UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy;

  public static final String SERIALIZED_NAME_LAST_UPDATED_DATE_TIME = "lastUpdatedDateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_DATE_TIME)
  private OffsetDateTime lastUpdatedDateTime;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_NUMBER = "number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private Integer number;

  public static final String SERIALIZED_NAME_ORDER_NUMBER = "orderNumber";
  @SerializedName(SERIALIZED_NAME_ORDER_NUMBER)
  private String orderNumber;

  public static final String SERIALIZED_NAME_OUR_REFERENCE = "ourReference";
  @SerializedName(SERIALIZED_NAME_OUR_REFERENCE)
  private String ourReference;

  public static final String SERIALIZED_NAME_OVERDUE_INTEREST = "overdueInterest";
  @SerializedName(SERIALIZED_NAME_OVERDUE_INTEREST)
  private Double overdueInterest;

  public static final String SERIALIZED_NAME_PAYMENT_DATE = "paymentDate";
  @SerializedName(SERIALIZED_NAME_PAYMENT_DATE)
  private LocalDate paymentDate;

  public static final String SERIALIZED_NAME_PAYMENT_TERM = "paymentTerm";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TERM)
  private Integer paymentTerm;

  public static final String SERIALIZED_NAME_PROJECT_FEES_TOTAL_EXCLUDING_TAX = "projectFeesTotalExcludingTax";
  @SerializedName(SERIALIZED_NAME_PROJECT_FEES_TOTAL_EXCLUDING_TAX)
  private MoneyOutputModel projectFeesTotalExcludingTax;

  public static final String SERIALIZED_NAME_PROJECT_TRAVEL_EXPENSES_TOTAL_EXCLUDING_TAX = "projectTravelExpensesTotalExcludingTax";
  @SerializedName(SERIALIZED_NAME_PROJECT_TRAVEL_EXPENSES_TOTAL_EXCLUDING_TAX)
  private MoneyOutputModel projectTravelExpensesTotalExcludingTax;

  public static final String SERIALIZED_NAME_PROJECTS = "projects";
  @SerializedName(SERIALIZED_NAME_PROJECTS)
  private List<InvoiceProjectSubModel> projects;

  public static final String SERIALIZED_NAME_RECEIVER_ADDRESS = "receiverAddress";
  @SerializedName(SERIALIZED_NAME_RECEIVER_ADDRESS)
  private InvoiceReceiverAddressSubModel receiverAddress;

  public static final String SERIALIZED_NAME_RECEIVER_CONTACT_EMAIL = "receiverContactEmail";
  @SerializedName(SERIALIZED_NAME_RECEIVER_CONTACT_EMAIL)
  private String receiverContactEmail;

  public static final String SERIALIZED_NAME_RECEIVER_CONTACT_GUID = "receiverContactGuid";
  @SerializedName(SERIALIZED_NAME_RECEIVER_CONTACT_GUID)
  private String receiverContactGuid;

  public static final String SERIALIZED_NAME_RECEIVER_CONTACT_NAME = "receiverContactName";
  @SerializedName(SERIALIZED_NAME_RECEIVER_CONTACT_NAME)
  private String receiverContactName;

  public static final String SERIALIZED_NAME_RECEIVER_CUSTOMER_NAME = "receiverCustomerName";
  @SerializedName(SERIALIZED_NAME_RECEIVER_CUSTOMER_NAME)
  private String receiverCustomerName;

  public static final String SERIALIZED_NAME_RECEIVER_KVK_NUMBER = "receiverKvkNumber";
  @SerializedName(SERIALIZED_NAME_RECEIVER_KVK_NUMBER)
  private String receiverKvkNumber;

  public static final String SERIALIZED_NAME_RECEIVER_VAT_NUMBER = "receiverVatNumber";
  @SerializedName(SERIALIZED_NAME_RECEIVER_VAT_NUMBER)
  private String receiverVatNumber;

  public static final String SERIALIZED_NAME_REFERENCE_NUMBER = "referenceNumber";
  @SerializedName(SERIALIZED_NAME_REFERENCE_NUMBER)
  private String referenceNumber;

  public static final String SERIALIZED_NAME_REIMBURSE_INVOICE = "reimburseInvoice";
  @SerializedName(SERIALIZED_NAME_REIMBURSE_INVOICE)
  private RelatedInvoiceSubModel reimburseInvoice;

  public static final String SERIALIZED_NAME_SENDER_ADDRESS = "senderAddress";
  @SerializedName(SERIALIZED_NAME_SENDER_ADDRESS)
  private InvoiceSenderAddressSubModel senderAddress;

  public static final String SERIALIZED_NAME_SENDER_CONTACT_GUID = "senderContactGuid";
  @SerializedName(SERIALIZED_NAME_SENDER_CONTACT_GUID)
  private String senderContactGuid;

  public static final String SERIALIZED_NAME_SENDER_CONTACT_NAME = "senderContactName";
  @SerializedName(SERIALIZED_NAME_SENDER_CONTACT_NAME)
  private String senderContactName;

  public static final String SERIALIZED_NAME_SENDER_KVK_NUMBER = "senderKvkNumber";
  @SerializedName(SERIALIZED_NAME_SENDER_KVK_NUMBER)
  private String senderKvkNumber;

  public static final String SERIALIZED_NAME_SENDER_NAME = "senderName";
  @SerializedName(SERIALIZED_NAME_SENDER_NAME)
  private String senderName;

  public static final String SERIALIZED_NAME_SENDER_VAT_NUMBER = "senderVatNumber";
  @SerializedName(SERIALIZED_NAME_SENDER_VAT_NUMBER)
  private String senderVatNumber;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private InvoiceStatusSubModel status;

  public static final String SERIALIZED_NAME_TOTAL_EXCLUDING_TAX = "totalExcludingTax";
  @SerializedName(SERIALIZED_NAME_TOTAL_EXCLUDING_TAX)
  private MoneyOutputModel totalExcludingTax;

  public static final String SERIALIZED_NAME_TOTAL_INCLUDING_TAX = "totalIncludingTax";
  @SerializedName(SERIALIZED_NAME_TOTAL_INCLUDING_TAX)
  private MoneyOutputModel totalIncludingTax;

  public static final String SERIALIZED_NAME_TOTAL_TAX = "totalTax";
  @SerializedName(SERIALIZED_NAME_TOTAL_TAX)
  private MoneyOutputModel totalTax;

  public static final String SERIALIZED_NAME_WORK_HOUR_VALUE_ADDED_TAX = "workHourValueAddedTax";
  @SerializedName(SERIALIZED_NAME_WORK_HOUR_VALUE_ADDED_TAX)
  private Double workHourValueAddedTax;

  public static final String SERIALIZED_NAME_WORK_HOURS_QUANTITY = "workHoursQuantity";
  @SerializedName(SERIALIZED_NAME_WORK_HOURS_QUANTITY)
  private Double workHoursQuantity;

  public static final String SERIALIZED_NAME_WORK_HOURS_TOTAL_EXCLUDING_TAX = "workHoursTotalExcludingTax";
  @SerializedName(SERIALIZED_NAME_WORK_HOURS_TOTAL_EXCLUDING_TAX)
  private MoneyOutputModel workHoursTotalExcludingTax;

  public static final String SERIALIZED_NAME_YOUR_REFERENCE = "yourReference";
  @SerializedName(SERIALIZED_NAME_YOUR_REFERENCE)
  private String yourReference;

  public InvoiceOutputModel() {
  }

  public InvoiceOutputModel(
     OffsetDateTime createdDateTime, 
     String guid, 
     OffsetDateTime lastUpdatedDateTime
  ) {
    this();
    this.createdDateTime = createdDateTime;
    this.guid = guid;
    this.lastUpdatedDateTime = lastUpdatedDateTime;
  }

  public InvoiceOutputModel billingCustomer(InvoiceCustomerSubModel billingCustomer) {
    this.billingCustomer = billingCustomer;
    return this;
  }

  /**
   * Get billingCustomer
   * @return billingCustomer
   */
  @javax.annotation.Nullable
  public InvoiceCustomerSubModel getBillingCustomer() {
    return billingCustomer;
  }

  public void setBillingCustomer(InvoiceCustomerSubModel billingCustomer) {
    this.billingCustomer = billingCustomer;
  }


  public InvoiceOutputModel canBeDeleted(Boolean canBeDeleted) {
    this.canBeDeleted = canBeDeleted;
    return this;
  }

  /**
   * Get canBeDeleted
   * @return canBeDeleted
   */
  @javax.annotation.Nullable
  public Boolean getCanBeDeleted() {
    return canBeDeleted;
  }

  public void setCanBeDeleted(Boolean canBeDeleted) {
    this.canBeDeleted = canBeDeleted;
  }


  public InvoiceOutputModel createdBy(UserWithFirstNameLastNameAndPhotoFileModel createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public UserWithFirstNameLastNameAndPhotoFileModel getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(UserWithFirstNameLastNameAndPhotoFileModel createdBy) {
    this.createdBy = createdBy;
  }


  /**
   * Get createdDateTime
   * @return createdDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDateTime() {
    return createdDateTime;
  }



  public InvoiceOutputModel creditNoteInvoice(RelatedInvoiceSubModel creditNoteInvoice) {
    this.creditNoteInvoice = creditNoteInvoice;
    return this;
  }

  /**
   * Get creditNoteInvoice
   * @return creditNoteInvoice
   */
  @javax.annotation.Nullable
  public RelatedInvoiceSubModel getCreditNoteInvoice() {
    return creditNoteInvoice;
  }

  public void setCreditNoteInvoice(RelatedInvoiceSubModel creditNoteInvoice) {
    this.creditNoteInvoice = creditNoteInvoice;
  }


  public InvoiceOutputModel culture(FormattingCultureSubModel2 culture) {
    this.culture = culture;
    return this;
  }

  /**
   * Get culture
   * @return culture
   */
  @javax.annotation.Nullable
  public FormattingCultureSubModel2 getCulture() {
    return culture;
  }

  public void setCulture(FormattingCultureSubModel2 culture) {
    this.culture = culture;
  }


  public InvoiceOutputModel currency(CurrencySubModel currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  public CurrencySubModel getCurrency() {
    return currency;
  }

  public void setCurrency(CurrencySubModel currency) {
    this.currency = currency;
  }


  public InvoiceOutputModel currencyRate(Double currencyRate) {
    this.currencyRate = currencyRate;
    return this;
  }

  /**
   * Get currencyRate
   * @return currencyRate
   */
  @javax.annotation.Nullable
  public Double getCurrencyRate() {
    return currencyRate;
  }

  public void setCurrencyRate(Double currencyRate) {
    this.currencyRate = currencyRate;
  }


  public InvoiceOutputModel customer(InvoiceCustomerSubModel customer) {
    this.customer = customer;
    return this;
  }

  /**
   * Get customer
   * @return customer
   */
  @javax.annotation.Nullable
  public InvoiceCustomerSubModel getCustomer() {
    return customer;
  }

  public void setCustomer(InvoiceCustomerSubModel customer) {
    this.customer = customer;
  }


  public InvoiceOutputModel date(LocalDate date) {
    this.date = date;
    return this;
  }

  /**
   * Get date
   * @return date
   */
  @javax.annotation.Nullable
  public LocalDate getDate() {
    return date;
  }

  public void setDate(LocalDate date) {
    this.date = date;
  }


  public InvoiceOutputModel dueDate(LocalDate dueDate) {
    this.dueDate = dueDate;
    return this;
  }

  /**
   * Get dueDate
   * @return dueDate
   */
  @javax.annotation.Nullable
  public LocalDate getDueDate() {
    return dueDate;
  }

  public void setDueDate(LocalDate dueDate) {
    this.dueDate = dueDate;
  }


  public InvoiceOutputModel entryDate(LocalDate entryDate) {
    this.entryDate = entryDate;
    return this;
  }

  /**
   * Get entryDate
   * @return entryDate
   */
  @javax.annotation.Nullable
  public LocalDate getEntryDate() {
    return entryDate;
  }

  public void setEntryDate(LocalDate entryDate) {
    this.entryDate = entryDate;
  }


  public InvoiceOutputModel flatRatesTotalExcludingTax(MoneyOutputModel flatRatesTotalExcludingTax) {
    this.flatRatesTotalExcludingTax = flatRatesTotalExcludingTax;
    return this;
  }

  /**
   * Get flatRatesTotalExcludingTax
   * @return flatRatesTotalExcludingTax
   */
  @javax.annotation.Nullable
  public MoneyOutputModel getFlatRatesTotalExcludingTax() {
    return flatRatesTotalExcludingTax;
  }

  public void setFlatRatesTotalExcludingTax(MoneyOutputModel flatRatesTotalExcludingTax) {
    this.flatRatesTotalExcludingTax = flatRatesTotalExcludingTax;
  }


  public InvoiceOutputModel freeText1(FreeTextModel2 freeText1) {
    this.freeText1 = freeText1;
    return this;
  }

  /**
   * Get freeText1
   * @return freeText1
   */
  @javax.annotation.Nullable
  public FreeTextModel2 getFreeText1() {
    return freeText1;
  }

  public void setFreeText1(FreeTextModel2 freeText1) {
    this.freeText1 = freeText1;
  }


  public InvoiceOutputModel freeText2(FreeTextModel2 freeText2) {
    this.freeText2 = freeText2;
    return this;
  }

  /**
   * Get freeText2
   * @return freeText2
   */
  @javax.annotation.Nullable
  public FreeTextModel2 getFreeText2() {
    return freeText2;
  }

  public void setFreeText2(FreeTextModel2 freeText2) {
    this.freeText2 = freeText2;
  }


  /**
   * Get guid
   * @return guid
   */
  @javax.annotation.Nullable
  public String getGuid() {
    return guid;
  }



  public InvoiceOutputModel invoiceNumberBusinessUnitGuid(String invoiceNumberBusinessUnitGuid) {
    this.invoiceNumberBusinessUnitGuid = invoiceNumberBusinessUnitGuid;
    return this;
  }

  /**
   * Get invoiceNumberBusinessUnitGuid
   * @return invoiceNumberBusinessUnitGuid
   */
  @javax.annotation.Nullable
  public String getInvoiceNumberBusinessUnitGuid() {
    return invoiceNumberBusinessUnitGuid;
  }

  public void setInvoiceNumberBusinessUnitGuid(String invoiceNumberBusinessUnitGuid) {
    this.invoiceNumberBusinessUnitGuid = invoiceNumberBusinessUnitGuid;
  }


  public InvoiceOutputModel invoiceTemplate(ModelWithName invoiceTemplate) {
    this.invoiceTemplate = invoiceTemplate;
    return this;
  }

  /**
   * Get invoiceTemplate
   * @return invoiceTemplate
   */
  @javax.annotation.Nullable
  public ModelWithName getInvoiceTemplate() {
    return invoiceTemplate;
  }

  public void setInvoiceTemplate(ModelWithName invoiceTemplate) {
    this.invoiceTemplate = invoiceTemplate;
  }


  public InvoiceOutputModel isCreditNote(Boolean isCreditNote) {
    this.isCreditNote = isCreditNote;
    return this;
  }

  /**
   * Get isCreditNote
   * @return isCreditNote
   */
  @javax.annotation.Nullable
  public Boolean getIsCreditNote() {
    return isCreditNote;
  }

  public void setIsCreditNote(Boolean isCreditNote) {
    this.isCreditNote = isCreditNote;
  }


  public InvoiceOutputModel language(InvoiceLanguageSubModel language) {
    this.language = language;
    return this;
  }

  /**
   * Get language
   * @return language
   */
  @javax.annotation.Nullable
  public InvoiceLanguageSubModel getLanguage() {
    return language;
  }

  public void setLanguage(InvoiceLanguageSubModel language) {
    this.language = language;
  }


  public InvoiceOutputModel lastUpdatedBy(UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
    return this;
  }

  /**
   * Get lastUpdatedBy
   * @return lastUpdatedBy
   */
  @javax.annotation.Nullable
  public UserWithFirstNameLastNameAndPhotoFileModel getLastUpdatedBy() {
    return lastUpdatedBy;
  }

  public void setLastUpdatedBy(UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
  }


  /**
   * Get lastUpdatedDateTime
   * @return lastUpdatedDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedDateTime() {
    return lastUpdatedDateTime;
  }



  public InvoiceOutputModel notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * Get notes
   * @return notes
   */
  @javax.annotation.Nullable
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  public InvoiceOutputModel number(Integer number) {
    this.number = number;
    return this;
  }

  /**
   * Get number
   * @return number
   */
  @javax.annotation.Nullable
  public Integer getNumber() {
    return number;
  }

  public void setNumber(Integer number) {
    this.number = number;
  }


  public InvoiceOutputModel orderNumber(String orderNumber) {
    this.orderNumber = orderNumber;
    return this;
  }

  /**
   * Get orderNumber
   * @return orderNumber
   */
  @javax.annotation.Nullable
  public String getOrderNumber() {
    return orderNumber;
  }

  public void setOrderNumber(String orderNumber) {
    this.orderNumber = orderNumber;
  }


  public InvoiceOutputModel ourReference(String ourReference) {
    this.ourReference = ourReference;
    return this;
  }

  /**
   * Get ourReference
   * @return ourReference
   */
  @javax.annotation.Nullable
  public String getOurReference() {
    return ourReference;
  }

  public void setOurReference(String ourReference) {
    this.ourReference = ourReference;
  }


  public InvoiceOutputModel overdueInterest(Double overdueInterest) {
    this.overdueInterest = overdueInterest;
    return this;
  }

  /**
   * Get overdueInterest
   * @return overdueInterest
   */
  @javax.annotation.Nullable
  public Double getOverdueInterest() {
    return overdueInterest;
  }

  public void setOverdueInterest(Double overdueInterest) {
    this.overdueInterest = overdueInterest;
  }


  public InvoiceOutputModel paymentDate(LocalDate paymentDate) {
    this.paymentDate = paymentDate;
    return this;
  }

  /**
   * Get paymentDate
   * @return paymentDate
   */
  @javax.annotation.Nullable
  public LocalDate getPaymentDate() {
    return paymentDate;
  }

  public void setPaymentDate(LocalDate paymentDate) {
    this.paymentDate = paymentDate;
  }


  public InvoiceOutputModel paymentTerm(Integer paymentTerm) {
    this.paymentTerm = paymentTerm;
    return this;
  }

  /**
   * Get paymentTerm
   * @return paymentTerm
   */
  @javax.annotation.Nullable
  public Integer getPaymentTerm() {
    return paymentTerm;
  }

  public void setPaymentTerm(Integer paymentTerm) {
    this.paymentTerm = paymentTerm;
  }


  public InvoiceOutputModel projectFeesTotalExcludingTax(MoneyOutputModel projectFeesTotalExcludingTax) {
    this.projectFeesTotalExcludingTax = projectFeesTotalExcludingTax;
    return this;
  }

  /**
   * Get projectFeesTotalExcludingTax
   * @return projectFeesTotalExcludingTax
   */
  @javax.annotation.Nullable
  public MoneyOutputModel getProjectFeesTotalExcludingTax() {
    return projectFeesTotalExcludingTax;
  }

  public void setProjectFeesTotalExcludingTax(MoneyOutputModel projectFeesTotalExcludingTax) {
    this.projectFeesTotalExcludingTax = projectFeesTotalExcludingTax;
  }


  public InvoiceOutputModel projectTravelExpensesTotalExcludingTax(MoneyOutputModel projectTravelExpensesTotalExcludingTax) {
    this.projectTravelExpensesTotalExcludingTax = projectTravelExpensesTotalExcludingTax;
    return this;
  }

  /**
   * Get projectTravelExpensesTotalExcludingTax
   * @return projectTravelExpensesTotalExcludingTax
   */
  @javax.annotation.Nullable
  public MoneyOutputModel getProjectTravelExpensesTotalExcludingTax() {
    return projectTravelExpensesTotalExcludingTax;
  }

  public void setProjectTravelExpensesTotalExcludingTax(MoneyOutputModel projectTravelExpensesTotalExcludingTax) {
    this.projectTravelExpensesTotalExcludingTax = projectTravelExpensesTotalExcludingTax;
  }


  public InvoiceOutputModel projects(List<InvoiceProjectSubModel> projects) {
    this.projects = projects;
    return this;
  }

  public InvoiceOutputModel addProjectsItem(InvoiceProjectSubModel projectsItem) {
    if (this.projects == null) {
      this.projects = new ArrayList<>();
    }
    this.projects.add(projectsItem);
    return this;
  }

  /**
   * Get projects
   * @return projects
   */
  @javax.annotation.Nullable
  public List<InvoiceProjectSubModel> getProjects() {
    return projects;
  }

  public void setProjects(List<InvoiceProjectSubModel> projects) {
    this.projects = projects;
  }


  public InvoiceOutputModel receiverAddress(InvoiceReceiverAddressSubModel receiverAddress) {
    this.receiverAddress = receiverAddress;
    return this;
  }

  /**
   * Get receiverAddress
   * @return receiverAddress
   */
  @javax.annotation.Nullable
  public InvoiceReceiverAddressSubModel getReceiverAddress() {
    return receiverAddress;
  }

  public void setReceiverAddress(InvoiceReceiverAddressSubModel receiverAddress) {
    this.receiverAddress = receiverAddress;
  }


  public InvoiceOutputModel receiverContactEmail(String receiverContactEmail) {
    this.receiverContactEmail = receiverContactEmail;
    return this;
  }

  /**
   * Get receiverContactEmail
   * @return receiverContactEmail
   */
  @javax.annotation.Nullable
  public String getReceiverContactEmail() {
    return receiverContactEmail;
  }

  public void setReceiverContactEmail(String receiverContactEmail) {
    this.receiverContactEmail = receiverContactEmail;
  }


  public InvoiceOutputModel receiverContactGuid(String receiverContactGuid) {
    this.receiverContactGuid = receiverContactGuid;
    return this;
  }

  /**
   * Get receiverContactGuid
   * @return receiverContactGuid
   */
  @javax.annotation.Nullable
  public String getReceiverContactGuid() {
    return receiverContactGuid;
  }

  public void setReceiverContactGuid(String receiverContactGuid) {
    this.receiverContactGuid = receiverContactGuid;
  }


  public InvoiceOutputModel receiverContactName(String receiverContactName) {
    this.receiverContactName = receiverContactName;
    return this;
  }

  /**
   * Get receiverContactName
   * @return receiverContactName
   */
  @javax.annotation.Nullable
  public String getReceiverContactName() {
    return receiverContactName;
  }

  public void setReceiverContactName(String receiverContactName) {
    this.receiverContactName = receiverContactName;
  }


  public InvoiceOutputModel receiverCustomerName(String receiverCustomerName) {
    this.receiverCustomerName = receiverCustomerName;
    return this;
  }

  /**
   * Get receiverCustomerName
   * @return receiverCustomerName
   */
  @javax.annotation.Nullable
  public String getReceiverCustomerName() {
    return receiverCustomerName;
  }

  public void setReceiverCustomerName(String receiverCustomerName) {
    this.receiverCustomerName = receiverCustomerName;
  }


  public InvoiceOutputModel receiverKvkNumber(String receiverKvkNumber) {
    this.receiverKvkNumber = receiverKvkNumber;
    return this;
  }

  /**
   * Get receiverKvkNumber
   * @return receiverKvkNumber
   */
  @javax.annotation.Nullable
  public String getReceiverKvkNumber() {
    return receiverKvkNumber;
  }

  public void setReceiverKvkNumber(String receiverKvkNumber) {
    this.receiverKvkNumber = receiverKvkNumber;
  }


  public InvoiceOutputModel receiverVatNumber(String receiverVatNumber) {
    this.receiverVatNumber = receiverVatNumber;
    return this;
  }

  /**
   * Get receiverVatNumber
   * @return receiverVatNumber
   */
  @javax.annotation.Nullable
  public String getReceiverVatNumber() {
    return receiverVatNumber;
  }

  public void setReceiverVatNumber(String receiverVatNumber) {
    this.receiverVatNumber = receiverVatNumber;
  }


  public InvoiceOutputModel referenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
    return this;
  }

  /**
   * Get referenceNumber
   * @return referenceNumber
   */
  @javax.annotation.Nullable
  public String getReferenceNumber() {
    return referenceNumber;
  }

  public void setReferenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
  }


  public InvoiceOutputModel reimburseInvoice(RelatedInvoiceSubModel reimburseInvoice) {
    this.reimburseInvoice = reimburseInvoice;
    return this;
  }

  /**
   * Get reimburseInvoice
   * @return reimburseInvoice
   */
  @javax.annotation.Nullable
  public RelatedInvoiceSubModel getReimburseInvoice() {
    return reimburseInvoice;
  }

  public void setReimburseInvoice(RelatedInvoiceSubModel reimburseInvoice) {
    this.reimburseInvoice = reimburseInvoice;
  }


  public InvoiceOutputModel senderAddress(InvoiceSenderAddressSubModel senderAddress) {
    this.senderAddress = senderAddress;
    return this;
  }

  /**
   * Get senderAddress
   * @return senderAddress
   */
  @javax.annotation.Nullable
  public InvoiceSenderAddressSubModel getSenderAddress() {
    return senderAddress;
  }

  public void setSenderAddress(InvoiceSenderAddressSubModel senderAddress) {
    this.senderAddress = senderAddress;
  }


  public InvoiceOutputModel senderContactGuid(String senderContactGuid) {
    this.senderContactGuid = senderContactGuid;
    return this;
  }

  /**
   * Get senderContactGuid
   * @return senderContactGuid
   */
  @javax.annotation.Nullable
  public String getSenderContactGuid() {
    return senderContactGuid;
  }

  public void setSenderContactGuid(String senderContactGuid) {
    this.senderContactGuid = senderContactGuid;
  }


  public InvoiceOutputModel senderContactName(String senderContactName) {
    this.senderContactName = senderContactName;
    return this;
  }

  /**
   * Get senderContactName
   * @return senderContactName
   */
  @javax.annotation.Nullable
  public String getSenderContactName() {
    return senderContactName;
  }

  public void setSenderContactName(String senderContactName) {
    this.senderContactName = senderContactName;
  }


  public InvoiceOutputModel senderKvkNumber(String senderKvkNumber) {
    this.senderKvkNumber = senderKvkNumber;
    return this;
  }

  /**
   * Get senderKvkNumber
   * @return senderKvkNumber
   */
  @javax.annotation.Nullable
  public String getSenderKvkNumber() {
    return senderKvkNumber;
  }

  public void setSenderKvkNumber(String senderKvkNumber) {
    this.senderKvkNumber = senderKvkNumber;
  }


  public InvoiceOutputModel senderName(String senderName) {
    this.senderName = senderName;
    return this;
  }

  /**
   * Get senderName
   * @return senderName
   */
  @javax.annotation.Nullable
  public String getSenderName() {
    return senderName;
  }

  public void setSenderName(String senderName) {
    this.senderName = senderName;
  }


  public InvoiceOutputModel senderVatNumber(String senderVatNumber) {
    this.senderVatNumber = senderVatNumber;
    return this;
  }

  /**
   * Get senderVatNumber
   * @return senderVatNumber
   */
  @javax.annotation.Nullable
  public String getSenderVatNumber() {
    return senderVatNumber;
  }

  public void setSenderVatNumber(String senderVatNumber) {
    this.senderVatNumber = senderVatNumber;
  }


  public InvoiceOutputModel status(InvoiceStatusSubModel status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public InvoiceStatusSubModel getStatus() {
    return status;
  }

  public void setStatus(InvoiceStatusSubModel status) {
    this.status = status;
  }


  public InvoiceOutputModel totalExcludingTax(MoneyOutputModel totalExcludingTax) {
    this.totalExcludingTax = totalExcludingTax;
    return this;
  }

  /**
   * Get totalExcludingTax
   * @return totalExcludingTax
   */
  @javax.annotation.Nullable
  public MoneyOutputModel getTotalExcludingTax() {
    return totalExcludingTax;
  }

  public void setTotalExcludingTax(MoneyOutputModel totalExcludingTax) {
    this.totalExcludingTax = totalExcludingTax;
  }


  public InvoiceOutputModel totalIncludingTax(MoneyOutputModel totalIncludingTax) {
    this.totalIncludingTax = totalIncludingTax;
    return this;
  }

  /**
   * Get totalIncludingTax
   * @return totalIncludingTax
   */
  @javax.annotation.Nullable
  public MoneyOutputModel getTotalIncludingTax() {
    return totalIncludingTax;
  }

  public void setTotalIncludingTax(MoneyOutputModel totalIncludingTax) {
    this.totalIncludingTax = totalIncludingTax;
  }


  public InvoiceOutputModel totalTax(MoneyOutputModel totalTax) {
    this.totalTax = totalTax;
    return this;
  }

  /**
   * Get totalTax
   * @return totalTax
   */
  @javax.annotation.Nullable
  public MoneyOutputModel getTotalTax() {
    return totalTax;
  }

  public void setTotalTax(MoneyOutputModel totalTax) {
    this.totalTax = totalTax;
  }


  public InvoiceOutputModel workHourValueAddedTax(Double workHourValueAddedTax) {
    this.workHourValueAddedTax = workHourValueAddedTax;
    return this;
  }

  /**
   * Get workHourValueAddedTax
   * @return workHourValueAddedTax
   */
  @javax.annotation.Nullable
  public Double getWorkHourValueAddedTax() {
    return workHourValueAddedTax;
  }

  public void setWorkHourValueAddedTax(Double workHourValueAddedTax) {
    this.workHourValueAddedTax = workHourValueAddedTax;
  }


  public InvoiceOutputModel workHoursQuantity(Double workHoursQuantity) {
    this.workHoursQuantity = workHoursQuantity;
    return this;
  }

  /**
   * Get workHoursQuantity
   * @return workHoursQuantity
   */
  @javax.annotation.Nullable
  public Double getWorkHoursQuantity() {
    return workHoursQuantity;
  }

  public void setWorkHoursQuantity(Double workHoursQuantity) {
    this.workHoursQuantity = workHoursQuantity;
  }


  public InvoiceOutputModel workHoursTotalExcludingTax(MoneyOutputModel workHoursTotalExcludingTax) {
    this.workHoursTotalExcludingTax = workHoursTotalExcludingTax;
    return this;
  }

  /**
   * Get workHoursTotalExcludingTax
   * @return workHoursTotalExcludingTax
   */
  @javax.annotation.Nullable
  public MoneyOutputModel getWorkHoursTotalExcludingTax() {
    return workHoursTotalExcludingTax;
  }

  public void setWorkHoursTotalExcludingTax(MoneyOutputModel workHoursTotalExcludingTax) {
    this.workHoursTotalExcludingTax = workHoursTotalExcludingTax;
  }


  public InvoiceOutputModel yourReference(String yourReference) {
    this.yourReference = yourReference;
    return this;
  }

  /**
   * Get yourReference
   * @return yourReference
   */
  @javax.annotation.Nullable
  public String getYourReference() {
    return yourReference;
  }

  public void setYourReference(String yourReference) {
    this.yourReference = yourReference;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceOutputModel invoiceOutputModel = (InvoiceOutputModel) o;
    return Objects.equals(this.billingCustomer, invoiceOutputModel.billingCustomer) &&
        Objects.equals(this.canBeDeleted, invoiceOutputModel.canBeDeleted) &&
        Objects.equals(this.createdBy, invoiceOutputModel.createdBy) &&
        Objects.equals(this.createdDateTime, invoiceOutputModel.createdDateTime) &&
        Objects.equals(this.creditNoteInvoice, invoiceOutputModel.creditNoteInvoice) &&
        Objects.equals(this.culture, invoiceOutputModel.culture) &&
        Objects.equals(this.currency, invoiceOutputModel.currency) &&
        Objects.equals(this.currencyRate, invoiceOutputModel.currencyRate) &&
        Objects.equals(this.customer, invoiceOutputModel.customer) &&
        Objects.equals(this.date, invoiceOutputModel.date) &&
        Objects.equals(this.dueDate, invoiceOutputModel.dueDate) &&
        Objects.equals(this.entryDate, invoiceOutputModel.entryDate) &&
        Objects.equals(this.flatRatesTotalExcludingTax, invoiceOutputModel.flatRatesTotalExcludingTax) &&
        Objects.equals(this.freeText1, invoiceOutputModel.freeText1) &&
        Objects.equals(this.freeText2, invoiceOutputModel.freeText2) &&
        Objects.equals(this.guid, invoiceOutputModel.guid) &&
        Objects.equals(this.invoiceNumberBusinessUnitGuid, invoiceOutputModel.invoiceNumberBusinessUnitGuid) &&
        Objects.equals(this.invoiceTemplate, invoiceOutputModel.invoiceTemplate) &&
        Objects.equals(this.isCreditNote, invoiceOutputModel.isCreditNote) &&
        Objects.equals(this.language, invoiceOutputModel.language) &&
        Objects.equals(this.lastUpdatedBy, invoiceOutputModel.lastUpdatedBy) &&
        Objects.equals(this.lastUpdatedDateTime, invoiceOutputModel.lastUpdatedDateTime) &&
        Objects.equals(this.notes, invoiceOutputModel.notes) &&
        Objects.equals(this.number, invoiceOutputModel.number) &&
        Objects.equals(this.orderNumber, invoiceOutputModel.orderNumber) &&
        Objects.equals(this.ourReference, invoiceOutputModel.ourReference) &&
        Objects.equals(this.overdueInterest, invoiceOutputModel.overdueInterest) &&
        Objects.equals(this.paymentDate, invoiceOutputModel.paymentDate) &&
        Objects.equals(this.paymentTerm, invoiceOutputModel.paymentTerm) &&
        Objects.equals(this.projectFeesTotalExcludingTax, invoiceOutputModel.projectFeesTotalExcludingTax) &&
        Objects.equals(this.projectTravelExpensesTotalExcludingTax, invoiceOutputModel.projectTravelExpensesTotalExcludingTax) &&
        Objects.equals(this.projects, invoiceOutputModel.projects) &&
        Objects.equals(this.receiverAddress, invoiceOutputModel.receiverAddress) &&
        Objects.equals(this.receiverContactEmail, invoiceOutputModel.receiverContactEmail) &&
        Objects.equals(this.receiverContactGuid, invoiceOutputModel.receiverContactGuid) &&
        Objects.equals(this.receiverContactName, invoiceOutputModel.receiverContactName) &&
        Objects.equals(this.receiverCustomerName, invoiceOutputModel.receiverCustomerName) &&
        Objects.equals(this.receiverKvkNumber, invoiceOutputModel.receiverKvkNumber) &&
        Objects.equals(this.receiverVatNumber, invoiceOutputModel.receiverVatNumber) &&
        Objects.equals(this.referenceNumber, invoiceOutputModel.referenceNumber) &&
        Objects.equals(this.reimburseInvoice, invoiceOutputModel.reimburseInvoice) &&
        Objects.equals(this.senderAddress, invoiceOutputModel.senderAddress) &&
        Objects.equals(this.senderContactGuid, invoiceOutputModel.senderContactGuid) &&
        Objects.equals(this.senderContactName, invoiceOutputModel.senderContactName) &&
        Objects.equals(this.senderKvkNumber, invoiceOutputModel.senderKvkNumber) &&
        Objects.equals(this.senderName, invoiceOutputModel.senderName) &&
        Objects.equals(this.senderVatNumber, invoiceOutputModel.senderVatNumber) &&
        Objects.equals(this.status, invoiceOutputModel.status) &&
        Objects.equals(this.totalExcludingTax, invoiceOutputModel.totalExcludingTax) &&
        Objects.equals(this.totalIncludingTax, invoiceOutputModel.totalIncludingTax) &&
        Objects.equals(this.totalTax, invoiceOutputModel.totalTax) &&
        Objects.equals(this.workHourValueAddedTax, invoiceOutputModel.workHourValueAddedTax) &&
        Objects.equals(this.workHoursQuantity, invoiceOutputModel.workHoursQuantity) &&
        Objects.equals(this.workHoursTotalExcludingTax, invoiceOutputModel.workHoursTotalExcludingTax) &&
        Objects.equals(this.yourReference, invoiceOutputModel.yourReference);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(billingCustomer, canBeDeleted, createdBy, createdDateTime, creditNoteInvoice, culture, currency, currencyRate, customer, date, dueDate, entryDate, flatRatesTotalExcludingTax, freeText1, freeText2, guid, invoiceNumberBusinessUnitGuid, invoiceTemplate, isCreditNote, language, lastUpdatedBy, lastUpdatedDateTime, notes, number, orderNumber, ourReference, overdueInterest, paymentDate, paymentTerm, projectFeesTotalExcludingTax, projectTravelExpensesTotalExcludingTax, projects, receiverAddress, receiverContactEmail, receiverContactGuid, receiverContactName, receiverCustomerName, receiverKvkNumber, receiverVatNumber, referenceNumber, reimburseInvoice, senderAddress, senderContactGuid, senderContactName, senderKvkNumber, senderName, senderVatNumber, status, totalExcludingTax, totalIncludingTax, totalTax, workHourValueAddedTax, workHoursQuantity, workHoursTotalExcludingTax, yourReference);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceOutputModel {\n");
    sb.append("    billingCustomer: ").append(toIndentedString(billingCustomer)).append("\n");
    sb.append("    canBeDeleted: ").append(toIndentedString(canBeDeleted)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdDateTime: ").append(toIndentedString(createdDateTime)).append("\n");
    sb.append("    creditNoteInvoice: ").append(toIndentedString(creditNoteInvoice)).append("\n");
    sb.append("    culture: ").append(toIndentedString(culture)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    currencyRate: ").append(toIndentedString(currencyRate)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    entryDate: ").append(toIndentedString(entryDate)).append("\n");
    sb.append("    flatRatesTotalExcludingTax: ").append(toIndentedString(flatRatesTotalExcludingTax)).append("\n");
    sb.append("    freeText1: ").append(toIndentedString(freeText1)).append("\n");
    sb.append("    freeText2: ").append(toIndentedString(freeText2)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    invoiceNumberBusinessUnitGuid: ").append(toIndentedString(invoiceNumberBusinessUnitGuid)).append("\n");
    sb.append("    invoiceTemplate: ").append(toIndentedString(invoiceTemplate)).append("\n");
    sb.append("    isCreditNote: ").append(toIndentedString(isCreditNote)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    lastUpdatedBy: ").append(toIndentedString(lastUpdatedBy)).append("\n");
    sb.append("    lastUpdatedDateTime: ").append(toIndentedString(lastUpdatedDateTime)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    ourReference: ").append(toIndentedString(ourReference)).append("\n");
    sb.append("    overdueInterest: ").append(toIndentedString(overdueInterest)).append("\n");
    sb.append("    paymentDate: ").append(toIndentedString(paymentDate)).append("\n");
    sb.append("    paymentTerm: ").append(toIndentedString(paymentTerm)).append("\n");
    sb.append("    projectFeesTotalExcludingTax: ").append(toIndentedString(projectFeesTotalExcludingTax)).append("\n");
    sb.append("    projectTravelExpensesTotalExcludingTax: ").append(toIndentedString(projectTravelExpensesTotalExcludingTax)).append("\n");
    sb.append("    projects: ").append(toIndentedString(projects)).append("\n");
    sb.append("    receiverAddress: ").append(toIndentedString(receiverAddress)).append("\n");
    sb.append("    receiverContactEmail: ").append(toIndentedString(receiverContactEmail)).append("\n");
    sb.append("    receiverContactGuid: ").append(toIndentedString(receiverContactGuid)).append("\n");
    sb.append("    receiverContactName: ").append(toIndentedString(receiverContactName)).append("\n");
    sb.append("    receiverCustomerName: ").append(toIndentedString(receiverCustomerName)).append("\n");
    sb.append("    receiverKvkNumber: ").append(toIndentedString(receiverKvkNumber)).append("\n");
    sb.append("    receiverVatNumber: ").append(toIndentedString(receiverVatNumber)).append("\n");
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("    reimburseInvoice: ").append(toIndentedString(reimburseInvoice)).append("\n");
    sb.append("    senderAddress: ").append(toIndentedString(senderAddress)).append("\n");
    sb.append("    senderContactGuid: ").append(toIndentedString(senderContactGuid)).append("\n");
    sb.append("    senderContactName: ").append(toIndentedString(senderContactName)).append("\n");
    sb.append("    senderKvkNumber: ").append(toIndentedString(senderKvkNumber)).append("\n");
    sb.append("    senderName: ").append(toIndentedString(senderName)).append("\n");
    sb.append("    senderVatNumber: ").append(toIndentedString(senderVatNumber)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    totalExcludingTax: ").append(toIndentedString(totalExcludingTax)).append("\n");
    sb.append("    totalIncludingTax: ").append(toIndentedString(totalIncludingTax)).append("\n");
    sb.append("    totalTax: ").append(toIndentedString(totalTax)).append("\n");
    sb.append("    workHourValueAddedTax: ").append(toIndentedString(workHourValueAddedTax)).append("\n");
    sb.append("    workHoursQuantity: ").append(toIndentedString(workHoursQuantity)).append("\n");
    sb.append("    workHoursTotalExcludingTax: ").append(toIndentedString(workHoursTotalExcludingTax)).append("\n");
    sb.append("    yourReference: ").append(toIndentedString(yourReference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("billingCustomer");
    openapiFields.add("canBeDeleted");
    openapiFields.add("createdBy");
    openapiFields.add("createdDateTime");
    openapiFields.add("creditNoteInvoice");
    openapiFields.add("culture");
    openapiFields.add("currency");
    openapiFields.add("currencyRate");
    openapiFields.add("customer");
    openapiFields.add("date");
    openapiFields.add("dueDate");
    openapiFields.add("entryDate");
    openapiFields.add("flatRatesTotalExcludingTax");
    openapiFields.add("freeText1");
    openapiFields.add("freeText2");
    openapiFields.add("guid");
    openapiFields.add("invoiceNumberBusinessUnitGuid");
    openapiFields.add("invoiceTemplate");
    openapiFields.add("isCreditNote");
    openapiFields.add("language");
    openapiFields.add("lastUpdatedBy");
    openapiFields.add("lastUpdatedDateTime");
    openapiFields.add("notes");
    openapiFields.add("number");
    openapiFields.add("orderNumber");
    openapiFields.add("ourReference");
    openapiFields.add("overdueInterest");
    openapiFields.add("paymentDate");
    openapiFields.add("paymentTerm");
    openapiFields.add("projectFeesTotalExcludingTax");
    openapiFields.add("projectTravelExpensesTotalExcludingTax");
    openapiFields.add("projects");
    openapiFields.add("receiverAddress");
    openapiFields.add("receiverContactEmail");
    openapiFields.add("receiverContactGuid");
    openapiFields.add("receiverContactName");
    openapiFields.add("receiverCustomerName");
    openapiFields.add("receiverKvkNumber");
    openapiFields.add("receiverVatNumber");
    openapiFields.add("referenceNumber");
    openapiFields.add("reimburseInvoice");
    openapiFields.add("senderAddress");
    openapiFields.add("senderContactGuid");
    openapiFields.add("senderContactName");
    openapiFields.add("senderKvkNumber");
    openapiFields.add("senderName");
    openapiFields.add("senderVatNumber");
    openapiFields.add("status");
    openapiFields.add("totalExcludingTax");
    openapiFields.add("totalIncludingTax");
    openapiFields.add("totalTax");
    openapiFields.add("workHourValueAddedTax");
    openapiFields.add("workHoursQuantity");
    openapiFields.add("workHoursTotalExcludingTax");
    openapiFields.add("yourReference");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InvoiceOutputModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InvoiceOutputModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InvoiceOutputModel is not found in the empty JSON string", InvoiceOutputModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InvoiceOutputModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InvoiceOutputModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `billingCustomer`
      if (jsonObj.get("billingCustomer") != null && !jsonObj.get("billingCustomer").isJsonNull()) {
        InvoiceCustomerSubModel.validateJsonElement(jsonObj.get("billingCustomer"));
      }
      // validate the optional field `createdBy`
      if (jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) {
        UserWithFirstNameLastNameAndPhotoFileModel.validateJsonElement(jsonObj.get("createdBy"));
      }
      // validate the optional field `creditNoteInvoice`
      if (jsonObj.get("creditNoteInvoice") != null && !jsonObj.get("creditNoteInvoice").isJsonNull()) {
        RelatedInvoiceSubModel.validateJsonElement(jsonObj.get("creditNoteInvoice"));
      }
      // validate the optional field `culture`
      if (jsonObj.get("culture") != null && !jsonObj.get("culture").isJsonNull()) {
        FormattingCultureSubModel2.validateJsonElement(jsonObj.get("culture"));
      }
      // validate the optional field `currency`
      if (jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) {
        CurrencySubModel.validateJsonElement(jsonObj.get("currency"));
      }
      // validate the optional field `customer`
      if (jsonObj.get("customer") != null && !jsonObj.get("customer").isJsonNull()) {
        InvoiceCustomerSubModel.validateJsonElement(jsonObj.get("customer"));
      }
      // validate the optional field `flatRatesTotalExcludingTax`
      if (jsonObj.get("flatRatesTotalExcludingTax") != null && !jsonObj.get("flatRatesTotalExcludingTax").isJsonNull()) {
        MoneyOutputModel.validateJsonElement(jsonObj.get("flatRatesTotalExcludingTax"));
      }
      // validate the optional field `freeText1`
      if (jsonObj.get("freeText1") != null && !jsonObj.get("freeText1").isJsonNull()) {
        FreeTextModel2.validateJsonElement(jsonObj.get("freeText1"));
      }
      // validate the optional field `freeText2`
      if (jsonObj.get("freeText2") != null && !jsonObj.get("freeText2").isJsonNull()) {
        FreeTextModel2.validateJsonElement(jsonObj.get("freeText2"));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      if ((jsonObj.get("invoiceNumberBusinessUnitGuid") != null && !jsonObj.get("invoiceNumberBusinessUnitGuid").isJsonNull()) && !jsonObj.get("invoiceNumberBusinessUnitGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invoiceNumberBusinessUnitGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invoiceNumberBusinessUnitGuid").toString()));
      }
      // validate the optional field `invoiceTemplate`
      if (jsonObj.get("invoiceTemplate") != null && !jsonObj.get("invoiceTemplate").isJsonNull()) {
        ModelWithName.validateJsonElement(jsonObj.get("invoiceTemplate"));
      }
      // validate the optional field `language`
      if (jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) {
        InvoiceLanguageSubModel.validateJsonElement(jsonObj.get("language"));
      }
      // validate the optional field `lastUpdatedBy`
      if (jsonObj.get("lastUpdatedBy") != null && !jsonObj.get("lastUpdatedBy").isJsonNull()) {
        UserWithFirstNameLastNameAndPhotoFileModel.validateJsonElement(jsonObj.get("lastUpdatedBy"));
      }
      if ((jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      if ((jsonObj.get("orderNumber") != null && !jsonObj.get("orderNumber").isJsonNull()) && !jsonObj.get("orderNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderNumber").toString()));
      }
      if ((jsonObj.get("ourReference") != null && !jsonObj.get("ourReference").isJsonNull()) && !jsonObj.get("ourReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ourReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ourReference").toString()));
      }
      // validate the optional field `projectFeesTotalExcludingTax`
      if (jsonObj.get("projectFeesTotalExcludingTax") != null && !jsonObj.get("projectFeesTotalExcludingTax").isJsonNull()) {
        MoneyOutputModel.validateJsonElement(jsonObj.get("projectFeesTotalExcludingTax"));
      }
      // validate the optional field `projectTravelExpensesTotalExcludingTax`
      if (jsonObj.get("projectTravelExpensesTotalExcludingTax") != null && !jsonObj.get("projectTravelExpensesTotalExcludingTax").isJsonNull()) {
        MoneyOutputModel.validateJsonElement(jsonObj.get("projectTravelExpensesTotalExcludingTax"));
      }
      if (jsonObj.get("projects") != null && !jsonObj.get("projects").isJsonNull()) {
        JsonArray jsonArrayprojects = jsonObj.getAsJsonArray("projects");
        if (jsonArrayprojects != null) {
          // ensure the json data is an array
          if (!jsonObj.get("projects").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `projects` to be an array in the JSON string but got `%s`", jsonObj.get("projects").toString()));
          }

          // validate the optional field `projects` (array)
          for (int i = 0; i < jsonArrayprojects.size(); i++) {
            InvoiceProjectSubModel.validateJsonElement(jsonArrayprojects.get(i));
          };
        }
      }
      // validate the optional field `receiverAddress`
      if (jsonObj.get("receiverAddress") != null && !jsonObj.get("receiverAddress").isJsonNull()) {
        InvoiceReceiverAddressSubModel.validateJsonElement(jsonObj.get("receiverAddress"));
      }
      if ((jsonObj.get("receiverContactEmail") != null && !jsonObj.get("receiverContactEmail").isJsonNull()) && !jsonObj.get("receiverContactEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiverContactEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiverContactEmail").toString()));
      }
      if ((jsonObj.get("receiverContactGuid") != null && !jsonObj.get("receiverContactGuid").isJsonNull()) && !jsonObj.get("receiverContactGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiverContactGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiverContactGuid").toString()));
      }
      if ((jsonObj.get("receiverContactName") != null && !jsonObj.get("receiverContactName").isJsonNull()) && !jsonObj.get("receiverContactName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiverContactName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiverContactName").toString()));
      }
      if ((jsonObj.get("receiverCustomerName") != null && !jsonObj.get("receiverCustomerName").isJsonNull()) && !jsonObj.get("receiverCustomerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiverCustomerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiverCustomerName").toString()));
      }
      if ((jsonObj.get("receiverKvkNumber") != null && !jsonObj.get("receiverKvkNumber").isJsonNull()) && !jsonObj.get("receiverKvkNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiverKvkNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiverKvkNumber").toString()));
      }
      if ((jsonObj.get("receiverVatNumber") != null && !jsonObj.get("receiverVatNumber").isJsonNull()) && !jsonObj.get("receiverVatNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiverVatNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiverVatNumber").toString()));
      }
      if ((jsonObj.get("referenceNumber") != null && !jsonObj.get("referenceNumber").isJsonNull()) && !jsonObj.get("referenceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `referenceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("referenceNumber").toString()));
      }
      // validate the optional field `reimburseInvoice`
      if (jsonObj.get("reimburseInvoice") != null && !jsonObj.get("reimburseInvoice").isJsonNull()) {
        RelatedInvoiceSubModel.validateJsonElement(jsonObj.get("reimburseInvoice"));
      }
      // validate the optional field `senderAddress`
      if (jsonObj.get("senderAddress") != null && !jsonObj.get("senderAddress").isJsonNull()) {
        InvoiceSenderAddressSubModel.validateJsonElement(jsonObj.get("senderAddress"));
      }
      if ((jsonObj.get("senderContactGuid") != null && !jsonObj.get("senderContactGuid").isJsonNull()) && !jsonObj.get("senderContactGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `senderContactGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("senderContactGuid").toString()));
      }
      if ((jsonObj.get("senderContactName") != null && !jsonObj.get("senderContactName").isJsonNull()) && !jsonObj.get("senderContactName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `senderContactName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("senderContactName").toString()));
      }
      if ((jsonObj.get("senderKvkNumber") != null && !jsonObj.get("senderKvkNumber").isJsonNull()) && !jsonObj.get("senderKvkNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `senderKvkNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("senderKvkNumber").toString()));
      }
      if ((jsonObj.get("senderName") != null && !jsonObj.get("senderName").isJsonNull()) && !jsonObj.get("senderName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `senderName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("senderName").toString()));
      }
      if ((jsonObj.get("senderVatNumber") != null && !jsonObj.get("senderVatNumber").isJsonNull()) && !jsonObj.get("senderVatNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `senderVatNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("senderVatNumber").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        InvoiceStatusSubModel.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `totalExcludingTax`
      if (jsonObj.get("totalExcludingTax") != null && !jsonObj.get("totalExcludingTax").isJsonNull()) {
        MoneyOutputModel.validateJsonElement(jsonObj.get("totalExcludingTax"));
      }
      // validate the optional field `totalIncludingTax`
      if (jsonObj.get("totalIncludingTax") != null && !jsonObj.get("totalIncludingTax").isJsonNull()) {
        MoneyOutputModel.validateJsonElement(jsonObj.get("totalIncludingTax"));
      }
      // validate the optional field `totalTax`
      if (jsonObj.get("totalTax") != null && !jsonObj.get("totalTax").isJsonNull()) {
        MoneyOutputModel.validateJsonElement(jsonObj.get("totalTax"));
      }
      // validate the optional field `workHoursTotalExcludingTax`
      if (jsonObj.get("workHoursTotalExcludingTax") != null && !jsonObj.get("workHoursTotalExcludingTax").isJsonNull()) {
        MoneyOutputModel.validateJsonElement(jsonObj.get("workHoursTotalExcludingTax"));
      }
      if ((jsonObj.get("yourReference") != null && !jsonObj.get("yourReference").isJsonNull()) && !jsonObj.get("yourReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `yourReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("yourReference").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InvoiceOutputModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InvoiceOutputModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InvoiceOutputModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InvoiceOutputModel.class));

       return (TypeAdapter<T>) new TypeAdapter<InvoiceOutputModel>() {
           @Override
           public void write(JsonWriter out, InvoiceOutputModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InvoiceOutputModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InvoiceOutputModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InvoiceOutputModel
   * @throws IOException if the JSON string is invalid with respect to InvoiceOutputModel
   */
  public static InvoiceOutputModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InvoiceOutputModel.class);
  }

  /**
   * Convert an instance of InvoiceOutputModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

