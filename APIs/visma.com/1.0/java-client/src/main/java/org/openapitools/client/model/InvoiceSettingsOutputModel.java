/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.InvoiceGrouping;
import org.openapitools.client.model.InvoiceSkin;
import org.openapitools.client.model.UserWithFirstNameLastNameAndPhotoFileModel;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * InvoiceSettingsOutputModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:00.992903-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InvoiceSettingsOutputModel {
  public static final String SERIALIZED_NAME_CATEGORY_SORT_ORDER = "categorySortOrder";
  @SerializedName(SERIALIZED_NAME_CATEGORY_SORT_ORDER)
  private String categorySortOrder;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private UserWithFirstNameLastNameAndPhotoFileModel createdBy;

  public static final String SERIALIZED_NAME_CREATED_DATE_TIME = "createdDateTime";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE_TIME)
  private OffsetDateTime createdDateTime;

  public static final String SERIALIZED_NAME_ENTRY_DATE = "entryDate";
  @SerializedName(SERIALIZED_NAME_ENTRY_DATE)
  private LocalDate entryDate;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_IS_REVERSE_CHARGED = "isReverseCharged";
  @SerializedName(SERIALIZED_NAME_IS_REVERSE_CHARGED)
  private Boolean isReverseCharged;

  public static final String SERIALIZED_NAME_LAST_UPDATED_BY = "lastUpdatedBy";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_BY)
  private UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy;

  public static final String SERIALIZED_NAME_LAST_UPDATED_DATE_TIME = "lastUpdatedDateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_DATE_TIME)
  private OffsetDateTime lastUpdatedDateTime;

  public static final String SERIALIZED_NAME_PAYMENT_DATE = "paymentDate";
  @SerializedName(SERIALIZED_NAME_PAYMENT_DATE)
  private LocalDate paymentDate;

  public static final String SERIALIZED_NAME_PROJECT_FEE_DESCRIPTION_FORMAT = "projectFeeDescriptionFormat";
  @SerializedName(SERIALIZED_NAME_PROJECT_FEE_DESCRIPTION_FORMAT)
  private String projectFeeDescriptionFormat = "";

  public static final String SERIALIZED_NAME_PROJECT_FEE_GROUPING = "projectFeeGrouping";
  @SerializedName(SERIALIZED_NAME_PROJECT_FEE_GROUPING)
  private InvoiceGrouping projectFeeGrouping;

  public static final String SERIALIZED_NAME_PROJECT_FEE_PRIMARY_GROUP_BY = "projectFeePrimaryGroupBy";
  @SerializedName(SERIALIZED_NAME_PROJECT_FEE_PRIMARY_GROUP_BY)
  private String projectFeePrimaryGroupBy;

  public static final String SERIALIZED_NAME_PROJECT_FEE_SECONDARY_GROUP_BY = "projectFeeSecondaryGroupBy";
  @SerializedName(SERIALIZED_NAME_PROJECT_FEE_SECONDARY_GROUP_BY)
  private String projectFeeSecondaryGroupBy;

  public static final String SERIALIZED_NAME_PROJECT_TRAVEL_EXPENSE_DESCRIPTION_FORMAT = "projectTravelExpenseDescriptionFormat";
  @SerializedName(SERIALIZED_NAME_PROJECT_TRAVEL_EXPENSE_DESCRIPTION_FORMAT)
  private String projectTravelExpenseDescriptionFormat = "";

  public static final String SERIALIZED_NAME_PROJECT_TRAVEL_EXPENSE_GROUPING = "projectTravelExpenseGrouping";
  @SerializedName(SERIALIZED_NAME_PROJECT_TRAVEL_EXPENSE_GROUPING)
  private InvoiceGrouping projectTravelExpenseGrouping;

  public static final String SERIALIZED_NAME_PROJECT_TRAVEL_EXPENSE_PRIMARY_GROUP_BY = "projectTravelExpensePrimaryGroupBy";
  @SerializedName(SERIALIZED_NAME_PROJECT_TRAVEL_EXPENSE_PRIMARY_GROUP_BY)
  private String projectTravelExpensePrimaryGroupBy;

  public static final String SERIALIZED_NAME_PROJECT_TRAVEL_EXPENSE_SECONDARY_GROUP_BY = "projectTravelExpenseSecondaryGroupBy";
  @SerializedName(SERIALIZED_NAME_PROJECT_TRAVEL_EXPENSE_SECONDARY_GROUP_BY)
  private String projectTravelExpenseSecondaryGroupBy;

  public static final String SERIALIZED_NAME_REVERSE_CHARGE_DESCRIPTION = "reverseChargeDescription";
  @SerializedName(SERIALIZED_NAME_REVERSE_CHARGE_DESCRIPTION)
  private String reverseChargeDescription;

  public static final String SERIALIZED_NAME_SHOW_ATTACHMENT_PRICE_EXCLUDING_VALUE_ADDED_TAX = "showAttachmentPriceExcludingValueAddedTax";
  @SerializedName(SERIALIZED_NAME_SHOW_ATTACHMENT_PRICE_EXCLUDING_VALUE_ADDED_TAX)
  private Boolean showAttachmentPriceExcludingValueAddedTax;

  public static final String SERIALIZED_NAME_SHOW_ATTACHMENT_QUANTITY = "showAttachmentQuantity";
  @SerializedName(SERIALIZED_NAME_SHOW_ATTACHMENT_QUANTITY)
  private Boolean showAttachmentQuantity;

  public static final String SERIALIZED_NAME_SHOW_ATTACHMENT_UNIT = "showAttachmentUnit";
  @SerializedName(SERIALIZED_NAME_SHOW_ATTACHMENT_UNIT)
  private Boolean showAttachmentUnit;

  public static final String SERIALIZED_NAME_SHOW_ATTACHMENT_UNIT_PRICE = "showAttachmentUnitPrice";
  @SerializedName(SERIALIZED_NAME_SHOW_ATTACHMENT_UNIT_PRICE)
  private Boolean showAttachmentUnitPrice;

  public static final String SERIALIZED_NAME_SHOW_ATTACHMENT_VALUE_ADDED_TAX = "showAttachmentValueAddedTax";
  @SerializedName(SERIALIZED_NAME_SHOW_ATTACHMENT_VALUE_ADDED_TAX)
  private Boolean showAttachmentValueAddedTax;

  public static final String SERIALIZED_NAME_SHOW_CATEGORIES = "showCategories";
  @SerializedName(SERIALIZED_NAME_SHOW_CATEGORIES)
  private Boolean showCategories = true;

  public static final String SERIALIZED_NAME_SHOW_FOOTER = "showFooter";
  @SerializedName(SERIALIZED_NAME_SHOW_FOOTER)
  private Boolean showFooter;

  public static final String SERIALIZED_NAME_SHOW_LOGO_AND_TITLE = "showLogoAndTitle";
  @SerializedName(SERIALIZED_NAME_SHOW_LOGO_AND_TITLE)
  private Boolean showLogoAndTitle;

  public static final String SERIALIZED_NAME_SHOW_PRICE_EXCLUDING_VALUE_ADDED_TAX = "showPriceExcludingValueAddedTax";
  @SerializedName(SERIALIZED_NAME_SHOW_PRICE_EXCLUDING_VALUE_ADDED_TAX)
  private Boolean showPriceExcludingValueAddedTax;

  public static final String SERIALIZED_NAME_SHOW_QUANTITY = "showQuantity";
  @SerializedName(SERIALIZED_NAME_SHOW_QUANTITY)
  private Boolean showQuantity;

  public static final String SERIALIZED_NAME_SHOW_REFERENCE_NUMBER = "showReferenceNumber";
  @SerializedName(SERIALIZED_NAME_SHOW_REFERENCE_NUMBER)
  private Boolean showReferenceNumber = true;

  public static final String SERIALIZED_NAME_SHOW_UNIT = "showUnit";
  @SerializedName(SERIALIZED_NAME_SHOW_UNIT)
  private Boolean showUnit;

  public static final String SERIALIZED_NAME_SHOW_UNIT_PRICE = "showUnitPrice";
  @SerializedName(SERIALIZED_NAME_SHOW_UNIT_PRICE)
  private Boolean showUnitPrice;

  public static final String SERIALIZED_NAME_SHOW_VALUE_ADDED_TAX = "showValueAddedTax";
  @SerializedName(SERIALIZED_NAME_SHOW_VALUE_ADDED_TAX)
  private Boolean showValueAddedTax;

  public static final String SERIALIZED_NAME_STYLE = "style";
  @SerializedName(SERIALIZED_NAME_STYLE)
  private InvoiceSkin style;

  public static final String SERIALIZED_NAME_WORK_HOUR_DESCRIPTION_FORMAT = "workHourDescriptionFormat";
  @SerializedName(SERIALIZED_NAME_WORK_HOUR_DESCRIPTION_FORMAT)
  private String workHourDescriptionFormat = "";

  public static final String SERIALIZED_NAME_WORK_HOUR_GROUPING = "workHourGrouping";
  @SerializedName(SERIALIZED_NAME_WORK_HOUR_GROUPING)
  private InvoiceGrouping workHourGrouping;

  public static final String SERIALIZED_NAME_WORK_HOUR_PRIMARY_GROUP_BY = "workHourPrimaryGroupBy";
  @SerializedName(SERIALIZED_NAME_WORK_HOUR_PRIMARY_GROUP_BY)
  private String workHourPrimaryGroupBy;

  public static final String SERIALIZED_NAME_WORK_HOUR_SECONDARY_GROUP_BY = "workHourSecondaryGroupBy";
  @SerializedName(SERIALIZED_NAME_WORK_HOUR_SECONDARY_GROUP_BY)
  private String workHourSecondaryGroupBy;

  public InvoiceSettingsOutputModel() {
  }

  public InvoiceSettingsOutputModel(
     OffsetDateTime createdDateTime, 
     String guid, 
     OffsetDateTime lastUpdatedDateTime, 
     Boolean showAttachmentQuantity, 
     Boolean showPriceExcludingValueAddedTax
  ) {
    this();
    this.createdDateTime = createdDateTime;
    this.guid = guid;
    this.lastUpdatedDateTime = lastUpdatedDateTime;
    this.showAttachmentQuantity = showAttachmentQuantity;
    this.showPriceExcludingValueAddedTax = showPriceExcludingValueAddedTax;
  }

  public InvoiceSettingsOutputModel categorySortOrder(String categorySortOrder) {
    this.categorySortOrder = categorySortOrder;
    return this;
  }

  /**
   * Get categorySortOrder
   * @return categorySortOrder
   */
  @javax.annotation.Nullable
  public String getCategorySortOrder() {
    return categorySortOrder;
  }

  public void setCategorySortOrder(String categorySortOrder) {
    this.categorySortOrder = categorySortOrder;
  }


  public InvoiceSettingsOutputModel createdBy(UserWithFirstNameLastNameAndPhotoFileModel createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public UserWithFirstNameLastNameAndPhotoFileModel getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(UserWithFirstNameLastNameAndPhotoFileModel createdBy) {
    this.createdBy = createdBy;
  }


  /**
   * Get createdDateTime
   * @return createdDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDateTime() {
    return createdDateTime;
  }



  public InvoiceSettingsOutputModel entryDate(LocalDate entryDate) {
    this.entryDate = entryDate;
    return this;
  }

  /**
   * Get entryDate
   * @return entryDate
   */
  @javax.annotation.Nullable
  public LocalDate getEntryDate() {
    return entryDate;
  }

  public void setEntryDate(LocalDate entryDate) {
    this.entryDate = entryDate;
  }


  /**
   * Get guid
   * @return guid
   */
  @javax.annotation.Nullable
  public String getGuid() {
    return guid;
  }



  public InvoiceSettingsOutputModel isReverseCharged(Boolean isReverseCharged) {
    this.isReverseCharged = isReverseCharged;
    return this;
  }

  /**
   * Get isReverseCharged
   * @return isReverseCharged
   */
  @javax.annotation.Nullable
  public Boolean getIsReverseCharged() {
    return isReverseCharged;
  }

  public void setIsReverseCharged(Boolean isReverseCharged) {
    this.isReverseCharged = isReverseCharged;
  }


  public InvoiceSettingsOutputModel lastUpdatedBy(UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
    return this;
  }

  /**
   * Get lastUpdatedBy
   * @return lastUpdatedBy
   */
  @javax.annotation.Nullable
  public UserWithFirstNameLastNameAndPhotoFileModel getLastUpdatedBy() {
    return lastUpdatedBy;
  }

  public void setLastUpdatedBy(UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
  }


  /**
   * Get lastUpdatedDateTime
   * @return lastUpdatedDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedDateTime() {
    return lastUpdatedDateTime;
  }



  public InvoiceSettingsOutputModel paymentDate(LocalDate paymentDate) {
    this.paymentDate = paymentDate;
    return this;
  }

  /**
   * Get paymentDate
   * @return paymentDate
   */
  @javax.annotation.Nullable
  public LocalDate getPaymentDate() {
    return paymentDate;
  }

  public void setPaymentDate(LocalDate paymentDate) {
    this.paymentDate = paymentDate;
  }


  public InvoiceSettingsOutputModel projectFeeDescriptionFormat(String projectFeeDescriptionFormat) {
    this.projectFeeDescriptionFormat = projectFeeDescriptionFormat;
    return this;
  }

  /**
   * Get projectFeeDescriptionFormat
   * @return projectFeeDescriptionFormat
   */
  @javax.annotation.Nullable
  public String getProjectFeeDescriptionFormat() {
    return projectFeeDescriptionFormat;
  }

  public void setProjectFeeDescriptionFormat(String projectFeeDescriptionFormat) {
    this.projectFeeDescriptionFormat = projectFeeDescriptionFormat;
  }


  public InvoiceSettingsOutputModel projectFeeGrouping(InvoiceGrouping projectFeeGrouping) {
    this.projectFeeGrouping = projectFeeGrouping;
    return this;
  }

  /**
   * Get projectFeeGrouping
   * @return projectFeeGrouping
   */
  @javax.annotation.Nullable
  public InvoiceGrouping getProjectFeeGrouping() {
    return projectFeeGrouping;
  }

  public void setProjectFeeGrouping(InvoiceGrouping projectFeeGrouping) {
    this.projectFeeGrouping = projectFeeGrouping;
  }


  public InvoiceSettingsOutputModel projectFeePrimaryGroupBy(String projectFeePrimaryGroupBy) {
    this.projectFeePrimaryGroupBy = projectFeePrimaryGroupBy;
    return this;
  }

  /**
   * Get projectFeePrimaryGroupBy
   * @return projectFeePrimaryGroupBy
   */
  @javax.annotation.Nullable
  public String getProjectFeePrimaryGroupBy() {
    return projectFeePrimaryGroupBy;
  }

  public void setProjectFeePrimaryGroupBy(String projectFeePrimaryGroupBy) {
    this.projectFeePrimaryGroupBy = projectFeePrimaryGroupBy;
  }


  public InvoiceSettingsOutputModel projectFeeSecondaryGroupBy(String projectFeeSecondaryGroupBy) {
    this.projectFeeSecondaryGroupBy = projectFeeSecondaryGroupBy;
    return this;
  }

  /**
   * Get projectFeeSecondaryGroupBy
   * @return projectFeeSecondaryGroupBy
   */
  @javax.annotation.Nullable
  public String getProjectFeeSecondaryGroupBy() {
    return projectFeeSecondaryGroupBy;
  }

  public void setProjectFeeSecondaryGroupBy(String projectFeeSecondaryGroupBy) {
    this.projectFeeSecondaryGroupBy = projectFeeSecondaryGroupBy;
  }


  public InvoiceSettingsOutputModel projectTravelExpenseDescriptionFormat(String projectTravelExpenseDescriptionFormat) {
    this.projectTravelExpenseDescriptionFormat = projectTravelExpenseDescriptionFormat;
    return this;
  }

  /**
   * Get projectTravelExpenseDescriptionFormat
   * @return projectTravelExpenseDescriptionFormat
   */
  @javax.annotation.Nullable
  public String getProjectTravelExpenseDescriptionFormat() {
    return projectTravelExpenseDescriptionFormat;
  }

  public void setProjectTravelExpenseDescriptionFormat(String projectTravelExpenseDescriptionFormat) {
    this.projectTravelExpenseDescriptionFormat = projectTravelExpenseDescriptionFormat;
  }


  public InvoiceSettingsOutputModel projectTravelExpenseGrouping(InvoiceGrouping projectTravelExpenseGrouping) {
    this.projectTravelExpenseGrouping = projectTravelExpenseGrouping;
    return this;
  }

  /**
   * Get projectTravelExpenseGrouping
   * @return projectTravelExpenseGrouping
   */
  @javax.annotation.Nullable
  public InvoiceGrouping getProjectTravelExpenseGrouping() {
    return projectTravelExpenseGrouping;
  }

  public void setProjectTravelExpenseGrouping(InvoiceGrouping projectTravelExpenseGrouping) {
    this.projectTravelExpenseGrouping = projectTravelExpenseGrouping;
  }


  public InvoiceSettingsOutputModel projectTravelExpensePrimaryGroupBy(String projectTravelExpensePrimaryGroupBy) {
    this.projectTravelExpensePrimaryGroupBy = projectTravelExpensePrimaryGroupBy;
    return this;
  }

  /**
   * Get projectTravelExpensePrimaryGroupBy
   * @return projectTravelExpensePrimaryGroupBy
   */
  @javax.annotation.Nullable
  public String getProjectTravelExpensePrimaryGroupBy() {
    return projectTravelExpensePrimaryGroupBy;
  }

  public void setProjectTravelExpensePrimaryGroupBy(String projectTravelExpensePrimaryGroupBy) {
    this.projectTravelExpensePrimaryGroupBy = projectTravelExpensePrimaryGroupBy;
  }


  public InvoiceSettingsOutputModel projectTravelExpenseSecondaryGroupBy(String projectTravelExpenseSecondaryGroupBy) {
    this.projectTravelExpenseSecondaryGroupBy = projectTravelExpenseSecondaryGroupBy;
    return this;
  }

  /**
   * Get projectTravelExpenseSecondaryGroupBy
   * @return projectTravelExpenseSecondaryGroupBy
   */
  @javax.annotation.Nullable
  public String getProjectTravelExpenseSecondaryGroupBy() {
    return projectTravelExpenseSecondaryGroupBy;
  }

  public void setProjectTravelExpenseSecondaryGroupBy(String projectTravelExpenseSecondaryGroupBy) {
    this.projectTravelExpenseSecondaryGroupBy = projectTravelExpenseSecondaryGroupBy;
  }


  public InvoiceSettingsOutputModel reverseChargeDescription(String reverseChargeDescription) {
    this.reverseChargeDescription = reverseChargeDescription;
    return this;
  }

  /**
   * Get reverseChargeDescription
   * @return reverseChargeDescription
   */
  @javax.annotation.Nullable
  public String getReverseChargeDescription() {
    return reverseChargeDescription;
  }

  public void setReverseChargeDescription(String reverseChargeDescription) {
    this.reverseChargeDescription = reverseChargeDescription;
  }


  public InvoiceSettingsOutputModel showAttachmentPriceExcludingValueAddedTax(Boolean showAttachmentPriceExcludingValueAddedTax) {
    this.showAttachmentPriceExcludingValueAddedTax = showAttachmentPriceExcludingValueAddedTax;
    return this;
  }

  /**
   * Get showAttachmentPriceExcludingValueAddedTax
   * @return showAttachmentPriceExcludingValueAddedTax
   */
  @javax.annotation.Nullable
  public Boolean getShowAttachmentPriceExcludingValueAddedTax() {
    return showAttachmentPriceExcludingValueAddedTax;
  }

  public void setShowAttachmentPriceExcludingValueAddedTax(Boolean showAttachmentPriceExcludingValueAddedTax) {
    this.showAttachmentPriceExcludingValueAddedTax = showAttachmentPriceExcludingValueAddedTax;
  }


  /**
   * Get showAttachmentQuantity
   * @return showAttachmentQuantity
   */
  @javax.annotation.Nullable
  public Boolean getShowAttachmentQuantity() {
    return showAttachmentQuantity;
  }



  public InvoiceSettingsOutputModel showAttachmentUnit(Boolean showAttachmentUnit) {
    this.showAttachmentUnit = showAttachmentUnit;
    return this;
  }

  /**
   * Get showAttachmentUnit
   * @return showAttachmentUnit
   */
  @javax.annotation.Nullable
  public Boolean getShowAttachmentUnit() {
    return showAttachmentUnit;
  }

  public void setShowAttachmentUnit(Boolean showAttachmentUnit) {
    this.showAttachmentUnit = showAttachmentUnit;
  }


  public InvoiceSettingsOutputModel showAttachmentUnitPrice(Boolean showAttachmentUnitPrice) {
    this.showAttachmentUnitPrice = showAttachmentUnitPrice;
    return this;
  }

  /**
   * Get showAttachmentUnitPrice
   * @return showAttachmentUnitPrice
   */
  @javax.annotation.Nullable
  public Boolean getShowAttachmentUnitPrice() {
    return showAttachmentUnitPrice;
  }

  public void setShowAttachmentUnitPrice(Boolean showAttachmentUnitPrice) {
    this.showAttachmentUnitPrice = showAttachmentUnitPrice;
  }


  public InvoiceSettingsOutputModel showAttachmentValueAddedTax(Boolean showAttachmentValueAddedTax) {
    this.showAttachmentValueAddedTax = showAttachmentValueAddedTax;
    return this;
  }

  /**
   * Get showAttachmentValueAddedTax
   * @return showAttachmentValueAddedTax
   */
  @javax.annotation.Nullable
  public Boolean getShowAttachmentValueAddedTax() {
    return showAttachmentValueAddedTax;
  }

  public void setShowAttachmentValueAddedTax(Boolean showAttachmentValueAddedTax) {
    this.showAttachmentValueAddedTax = showAttachmentValueAddedTax;
  }


  public InvoiceSettingsOutputModel showCategories(Boolean showCategories) {
    this.showCategories = showCategories;
    return this;
  }

  /**
   * Get showCategories
   * @return showCategories
   */
  @javax.annotation.Nullable
  public Boolean getShowCategories() {
    return showCategories;
  }

  public void setShowCategories(Boolean showCategories) {
    this.showCategories = showCategories;
  }


  public InvoiceSettingsOutputModel showFooter(Boolean showFooter) {
    this.showFooter = showFooter;
    return this;
  }

  /**
   * Get showFooter
   * @return showFooter
   */
  @javax.annotation.Nullable
  public Boolean getShowFooter() {
    return showFooter;
  }

  public void setShowFooter(Boolean showFooter) {
    this.showFooter = showFooter;
  }


  public InvoiceSettingsOutputModel showLogoAndTitle(Boolean showLogoAndTitle) {
    this.showLogoAndTitle = showLogoAndTitle;
    return this;
  }

  /**
   * Get showLogoAndTitle
   * @return showLogoAndTitle
   */
  @javax.annotation.Nullable
  public Boolean getShowLogoAndTitle() {
    return showLogoAndTitle;
  }

  public void setShowLogoAndTitle(Boolean showLogoAndTitle) {
    this.showLogoAndTitle = showLogoAndTitle;
  }


  /**
   * Get showPriceExcludingValueAddedTax
   * @return showPriceExcludingValueAddedTax
   */
  @javax.annotation.Nullable
  public Boolean getShowPriceExcludingValueAddedTax() {
    return showPriceExcludingValueAddedTax;
  }



  public InvoiceSettingsOutputModel showQuantity(Boolean showQuantity) {
    this.showQuantity = showQuantity;
    return this;
  }

  /**
   * Get showQuantity
   * @return showQuantity
   */
  @javax.annotation.Nullable
  public Boolean getShowQuantity() {
    return showQuantity;
  }

  public void setShowQuantity(Boolean showQuantity) {
    this.showQuantity = showQuantity;
  }


  public InvoiceSettingsOutputModel showReferenceNumber(Boolean showReferenceNumber) {
    this.showReferenceNumber = showReferenceNumber;
    return this;
  }

  /**
   * Get showReferenceNumber
   * @return showReferenceNumber
   */
  @javax.annotation.Nullable
  public Boolean getShowReferenceNumber() {
    return showReferenceNumber;
  }

  public void setShowReferenceNumber(Boolean showReferenceNumber) {
    this.showReferenceNumber = showReferenceNumber;
  }


  public InvoiceSettingsOutputModel showUnit(Boolean showUnit) {
    this.showUnit = showUnit;
    return this;
  }

  /**
   * Get showUnit
   * @return showUnit
   */
  @javax.annotation.Nullable
  public Boolean getShowUnit() {
    return showUnit;
  }

  public void setShowUnit(Boolean showUnit) {
    this.showUnit = showUnit;
  }


  public InvoiceSettingsOutputModel showUnitPrice(Boolean showUnitPrice) {
    this.showUnitPrice = showUnitPrice;
    return this;
  }

  /**
   * Get showUnitPrice
   * @return showUnitPrice
   */
  @javax.annotation.Nullable
  public Boolean getShowUnitPrice() {
    return showUnitPrice;
  }

  public void setShowUnitPrice(Boolean showUnitPrice) {
    this.showUnitPrice = showUnitPrice;
  }


  public InvoiceSettingsOutputModel showValueAddedTax(Boolean showValueAddedTax) {
    this.showValueAddedTax = showValueAddedTax;
    return this;
  }

  /**
   * Get showValueAddedTax
   * @return showValueAddedTax
   */
  @javax.annotation.Nullable
  public Boolean getShowValueAddedTax() {
    return showValueAddedTax;
  }

  public void setShowValueAddedTax(Boolean showValueAddedTax) {
    this.showValueAddedTax = showValueAddedTax;
  }


  public InvoiceSettingsOutputModel style(InvoiceSkin style) {
    this.style = style;
    return this;
  }

  /**
   * Get style
   * @return style
   */
  @javax.annotation.Nullable
  public InvoiceSkin getStyle() {
    return style;
  }

  public void setStyle(InvoiceSkin style) {
    this.style = style;
  }


  public InvoiceSettingsOutputModel workHourDescriptionFormat(String workHourDescriptionFormat) {
    this.workHourDescriptionFormat = workHourDescriptionFormat;
    return this;
  }

  /**
   * Get workHourDescriptionFormat
   * @return workHourDescriptionFormat
   */
  @javax.annotation.Nullable
  public String getWorkHourDescriptionFormat() {
    return workHourDescriptionFormat;
  }

  public void setWorkHourDescriptionFormat(String workHourDescriptionFormat) {
    this.workHourDescriptionFormat = workHourDescriptionFormat;
  }


  public InvoiceSettingsOutputModel workHourGrouping(InvoiceGrouping workHourGrouping) {
    this.workHourGrouping = workHourGrouping;
    return this;
  }

  /**
   * Get workHourGrouping
   * @return workHourGrouping
   */
  @javax.annotation.Nullable
  public InvoiceGrouping getWorkHourGrouping() {
    return workHourGrouping;
  }

  public void setWorkHourGrouping(InvoiceGrouping workHourGrouping) {
    this.workHourGrouping = workHourGrouping;
  }


  public InvoiceSettingsOutputModel workHourPrimaryGroupBy(String workHourPrimaryGroupBy) {
    this.workHourPrimaryGroupBy = workHourPrimaryGroupBy;
    return this;
  }

  /**
   * Get workHourPrimaryGroupBy
   * @return workHourPrimaryGroupBy
   */
  @javax.annotation.Nullable
  public String getWorkHourPrimaryGroupBy() {
    return workHourPrimaryGroupBy;
  }

  public void setWorkHourPrimaryGroupBy(String workHourPrimaryGroupBy) {
    this.workHourPrimaryGroupBy = workHourPrimaryGroupBy;
  }


  public InvoiceSettingsOutputModel workHourSecondaryGroupBy(String workHourSecondaryGroupBy) {
    this.workHourSecondaryGroupBy = workHourSecondaryGroupBy;
    return this;
  }

  /**
   * Get workHourSecondaryGroupBy
   * @return workHourSecondaryGroupBy
   */
  @javax.annotation.Nullable
  public String getWorkHourSecondaryGroupBy() {
    return workHourSecondaryGroupBy;
  }

  public void setWorkHourSecondaryGroupBy(String workHourSecondaryGroupBy) {
    this.workHourSecondaryGroupBy = workHourSecondaryGroupBy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceSettingsOutputModel invoiceSettingsOutputModel = (InvoiceSettingsOutputModel) o;
    return Objects.equals(this.categorySortOrder, invoiceSettingsOutputModel.categorySortOrder) &&
        Objects.equals(this.createdBy, invoiceSettingsOutputModel.createdBy) &&
        Objects.equals(this.createdDateTime, invoiceSettingsOutputModel.createdDateTime) &&
        Objects.equals(this.entryDate, invoiceSettingsOutputModel.entryDate) &&
        Objects.equals(this.guid, invoiceSettingsOutputModel.guid) &&
        Objects.equals(this.isReverseCharged, invoiceSettingsOutputModel.isReverseCharged) &&
        Objects.equals(this.lastUpdatedBy, invoiceSettingsOutputModel.lastUpdatedBy) &&
        Objects.equals(this.lastUpdatedDateTime, invoiceSettingsOutputModel.lastUpdatedDateTime) &&
        Objects.equals(this.paymentDate, invoiceSettingsOutputModel.paymentDate) &&
        Objects.equals(this.projectFeeDescriptionFormat, invoiceSettingsOutputModel.projectFeeDescriptionFormat) &&
        Objects.equals(this.projectFeeGrouping, invoiceSettingsOutputModel.projectFeeGrouping) &&
        Objects.equals(this.projectFeePrimaryGroupBy, invoiceSettingsOutputModel.projectFeePrimaryGroupBy) &&
        Objects.equals(this.projectFeeSecondaryGroupBy, invoiceSettingsOutputModel.projectFeeSecondaryGroupBy) &&
        Objects.equals(this.projectTravelExpenseDescriptionFormat, invoiceSettingsOutputModel.projectTravelExpenseDescriptionFormat) &&
        Objects.equals(this.projectTravelExpenseGrouping, invoiceSettingsOutputModel.projectTravelExpenseGrouping) &&
        Objects.equals(this.projectTravelExpensePrimaryGroupBy, invoiceSettingsOutputModel.projectTravelExpensePrimaryGroupBy) &&
        Objects.equals(this.projectTravelExpenseSecondaryGroupBy, invoiceSettingsOutputModel.projectTravelExpenseSecondaryGroupBy) &&
        Objects.equals(this.reverseChargeDescription, invoiceSettingsOutputModel.reverseChargeDescription) &&
        Objects.equals(this.showAttachmentPriceExcludingValueAddedTax, invoiceSettingsOutputModel.showAttachmentPriceExcludingValueAddedTax) &&
        Objects.equals(this.showAttachmentQuantity, invoiceSettingsOutputModel.showAttachmentQuantity) &&
        Objects.equals(this.showAttachmentUnit, invoiceSettingsOutputModel.showAttachmentUnit) &&
        Objects.equals(this.showAttachmentUnitPrice, invoiceSettingsOutputModel.showAttachmentUnitPrice) &&
        Objects.equals(this.showAttachmentValueAddedTax, invoiceSettingsOutputModel.showAttachmentValueAddedTax) &&
        Objects.equals(this.showCategories, invoiceSettingsOutputModel.showCategories) &&
        Objects.equals(this.showFooter, invoiceSettingsOutputModel.showFooter) &&
        Objects.equals(this.showLogoAndTitle, invoiceSettingsOutputModel.showLogoAndTitle) &&
        Objects.equals(this.showPriceExcludingValueAddedTax, invoiceSettingsOutputModel.showPriceExcludingValueAddedTax) &&
        Objects.equals(this.showQuantity, invoiceSettingsOutputModel.showQuantity) &&
        Objects.equals(this.showReferenceNumber, invoiceSettingsOutputModel.showReferenceNumber) &&
        Objects.equals(this.showUnit, invoiceSettingsOutputModel.showUnit) &&
        Objects.equals(this.showUnitPrice, invoiceSettingsOutputModel.showUnitPrice) &&
        Objects.equals(this.showValueAddedTax, invoiceSettingsOutputModel.showValueAddedTax) &&
        Objects.equals(this.style, invoiceSettingsOutputModel.style) &&
        Objects.equals(this.workHourDescriptionFormat, invoiceSettingsOutputModel.workHourDescriptionFormat) &&
        Objects.equals(this.workHourGrouping, invoiceSettingsOutputModel.workHourGrouping) &&
        Objects.equals(this.workHourPrimaryGroupBy, invoiceSettingsOutputModel.workHourPrimaryGroupBy) &&
        Objects.equals(this.workHourSecondaryGroupBy, invoiceSettingsOutputModel.workHourSecondaryGroupBy);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(categorySortOrder, createdBy, createdDateTime, entryDate, guid, isReverseCharged, lastUpdatedBy, lastUpdatedDateTime, paymentDate, projectFeeDescriptionFormat, projectFeeGrouping, projectFeePrimaryGroupBy, projectFeeSecondaryGroupBy, projectTravelExpenseDescriptionFormat, projectTravelExpenseGrouping, projectTravelExpensePrimaryGroupBy, projectTravelExpenseSecondaryGroupBy, reverseChargeDescription, showAttachmentPriceExcludingValueAddedTax, showAttachmentQuantity, showAttachmentUnit, showAttachmentUnitPrice, showAttachmentValueAddedTax, showCategories, showFooter, showLogoAndTitle, showPriceExcludingValueAddedTax, showQuantity, showReferenceNumber, showUnit, showUnitPrice, showValueAddedTax, style, workHourDescriptionFormat, workHourGrouping, workHourPrimaryGroupBy, workHourSecondaryGroupBy);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceSettingsOutputModel {\n");
    sb.append("    categorySortOrder: ").append(toIndentedString(categorySortOrder)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdDateTime: ").append(toIndentedString(createdDateTime)).append("\n");
    sb.append("    entryDate: ").append(toIndentedString(entryDate)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    isReverseCharged: ").append(toIndentedString(isReverseCharged)).append("\n");
    sb.append("    lastUpdatedBy: ").append(toIndentedString(lastUpdatedBy)).append("\n");
    sb.append("    lastUpdatedDateTime: ").append(toIndentedString(lastUpdatedDateTime)).append("\n");
    sb.append("    paymentDate: ").append(toIndentedString(paymentDate)).append("\n");
    sb.append("    projectFeeDescriptionFormat: ").append(toIndentedString(projectFeeDescriptionFormat)).append("\n");
    sb.append("    projectFeeGrouping: ").append(toIndentedString(projectFeeGrouping)).append("\n");
    sb.append("    projectFeePrimaryGroupBy: ").append(toIndentedString(projectFeePrimaryGroupBy)).append("\n");
    sb.append("    projectFeeSecondaryGroupBy: ").append(toIndentedString(projectFeeSecondaryGroupBy)).append("\n");
    sb.append("    projectTravelExpenseDescriptionFormat: ").append(toIndentedString(projectTravelExpenseDescriptionFormat)).append("\n");
    sb.append("    projectTravelExpenseGrouping: ").append(toIndentedString(projectTravelExpenseGrouping)).append("\n");
    sb.append("    projectTravelExpensePrimaryGroupBy: ").append(toIndentedString(projectTravelExpensePrimaryGroupBy)).append("\n");
    sb.append("    projectTravelExpenseSecondaryGroupBy: ").append(toIndentedString(projectTravelExpenseSecondaryGroupBy)).append("\n");
    sb.append("    reverseChargeDescription: ").append(toIndentedString(reverseChargeDescription)).append("\n");
    sb.append("    showAttachmentPriceExcludingValueAddedTax: ").append(toIndentedString(showAttachmentPriceExcludingValueAddedTax)).append("\n");
    sb.append("    showAttachmentQuantity: ").append(toIndentedString(showAttachmentQuantity)).append("\n");
    sb.append("    showAttachmentUnit: ").append(toIndentedString(showAttachmentUnit)).append("\n");
    sb.append("    showAttachmentUnitPrice: ").append(toIndentedString(showAttachmentUnitPrice)).append("\n");
    sb.append("    showAttachmentValueAddedTax: ").append(toIndentedString(showAttachmentValueAddedTax)).append("\n");
    sb.append("    showCategories: ").append(toIndentedString(showCategories)).append("\n");
    sb.append("    showFooter: ").append(toIndentedString(showFooter)).append("\n");
    sb.append("    showLogoAndTitle: ").append(toIndentedString(showLogoAndTitle)).append("\n");
    sb.append("    showPriceExcludingValueAddedTax: ").append(toIndentedString(showPriceExcludingValueAddedTax)).append("\n");
    sb.append("    showQuantity: ").append(toIndentedString(showQuantity)).append("\n");
    sb.append("    showReferenceNumber: ").append(toIndentedString(showReferenceNumber)).append("\n");
    sb.append("    showUnit: ").append(toIndentedString(showUnit)).append("\n");
    sb.append("    showUnitPrice: ").append(toIndentedString(showUnitPrice)).append("\n");
    sb.append("    showValueAddedTax: ").append(toIndentedString(showValueAddedTax)).append("\n");
    sb.append("    style: ").append(toIndentedString(style)).append("\n");
    sb.append("    workHourDescriptionFormat: ").append(toIndentedString(workHourDescriptionFormat)).append("\n");
    sb.append("    workHourGrouping: ").append(toIndentedString(workHourGrouping)).append("\n");
    sb.append("    workHourPrimaryGroupBy: ").append(toIndentedString(workHourPrimaryGroupBy)).append("\n");
    sb.append("    workHourSecondaryGroupBy: ").append(toIndentedString(workHourSecondaryGroupBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("categorySortOrder");
    openapiFields.add("createdBy");
    openapiFields.add("createdDateTime");
    openapiFields.add("entryDate");
    openapiFields.add("guid");
    openapiFields.add("isReverseCharged");
    openapiFields.add("lastUpdatedBy");
    openapiFields.add("lastUpdatedDateTime");
    openapiFields.add("paymentDate");
    openapiFields.add("projectFeeDescriptionFormat");
    openapiFields.add("projectFeeGrouping");
    openapiFields.add("projectFeePrimaryGroupBy");
    openapiFields.add("projectFeeSecondaryGroupBy");
    openapiFields.add("projectTravelExpenseDescriptionFormat");
    openapiFields.add("projectTravelExpenseGrouping");
    openapiFields.add("projectTravelExpensePrimaryGroupBy");
    openapiFields.add("projectTravelExpenseSecondaryGroupBy");
    openapiFields.add("reverseChargeDescription");
    openapiFields.add("showAttachmentPriceExcludingValueAddedTax");
    openapiFields.add("showAttachmentQuantity");
    openapiFields.add("showAttachmentUnit");
    openapiFields.add("showAttachmentUnitPrice");
    openapiFields.add("showAttachmentValueAddedTax");
    openapiFields.add("showCategories");
    openapiFields.add("showFooter");
    openapiFields.add("showLogoAndTitle");
    openapiFields.add("showPriceExcludingValueAddedTax");
    openapiFields.add("showQuantity");
    openapiFields.add("showReferenceNumber");
    openapiFields.add("showUnit");
    openapiFields.add("showUnitPrice");
    openapiFields.add("showValueAddedTax");
    openapiFields.add("style");
    openapiFields.add("workHourDescriptionFormat");
    openapiFields.add("workHourGrouping");
    openapiFields.add("workHourPrimaryGroupBy");
    openapiFields.add("workHourSecondaryGroupBy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InvoiceSettingsOutputModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InvoiceSettingsOutputModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InvoiceSettingsOutputModel is not found in the empty JSON string", InvoiceSettingsOutputModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InvoiceSettingsOutputModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InvoiceSettingsOutputModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("categorySortOrder") != null && !jsonObj.get("categorySortOrder").isJsonNull()) && !jsonObj.get("categorySortOrder").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `categorySortOrder` to be a primitive type in the JSON string but got `%s`", jsonObj.get("categorySortOrder").toString()));
      }
      // validate the optional field `createdBy`
      if (jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) {
        UserWithFirstNameLastNameAndPhotoFileModel.validateJsonElement(jsonObj.get("createdBy"));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      // validate the optional field `lastUpdatedBy`
      if (jsonObj.get("lastUpdatedBy") != null && !jsonObj.get("lastUpdatedBy").isJsonNull()) {
        UserWithFirstNameLastNameAndPhotoFileModel.validateJsonElement(jsonObj.get("lastUpdatedBy"));
      }
      if ((jsonObj.get("projectFeeDescriptionFormat") != null && !jsonObj.get("projectFeeDescriptionFormat").isJsonNull()) && !jsonObj.get("projectFeeDescriptionFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectFeeDescriptionFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectFeeDescriptionFormat").toString()));
      }
      // validate the optional field `projectFeeGrouping`
      if (jsonObj.get("projectFeeGrouping") != null && !jsonObj.get("projectFeeGrouping").isJsonNull()) {
        InvoiceGrouping.validateJsonElement(jsonObj.get("projectFeeGrouping"));
      }
      if ((jsonObj.get("projectFeePrimaryGroupBy") != null && !jsonObj.get("projectFeePrimaryGroupBy").isJsonNull()) && !jsonObj.get("projectFeePrimaryGroupBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectFeePrimaryGroupBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectFeePrimaryGroupBy").toString()));
      }
      if ((jsonObj.get("projectFeeSecondaryGroupBy") != null && !jsonObj.get("projectFeeSecondaryGroupBy").isJsonNull()) && !jsonObj.get("projectFeeSecondaryGroupBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectFeeSecondaryGroupBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectFeeSecondaryGroupBy").toString()));
      }
      if ((jsonObj.get("projectTravelExpenseDescriptionFormat") != null && !jsonObj.get("projectTravelExpenseDescriptionFormat").isJsonNull()) && !jsonObj.get("projectTravelExpenseDescriptionFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectTravelExpenseDescriptionFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectTravelExpenseDescriptionFormat").toString()));
      }
      // validate the optional field `projectTravelExpenseGrouping`
      if (jsonObj.get("projectTravelExpenseGrouping") != null && !jsonObj.get("projectTravelExpenseGrouping").isJsonNull()) {
        InvoiceGrouping.validateJsonElement(jsonObj.get("projectTravelExpenseGrouping"));
      }
      if ((jsonObj.get("projectTravelExpensePrimaryGroupBy") != null && !jsonObj.get("projectTravelExpensePrimaryGroupBy").isJsonNull()) && !jsonObj.get("projectTravelExpensePrimaryGroupBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectTravelExpensePrimaryGroupBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectTravelExpensePrimaryGroupBy").toString()));
      }
      if ((jsonObj.get("projectTravelExpenseSecondaryGroupBy") != null && !jsonObj.get("projectTravelExpenseSecondaryGroupBy").isJsonNull()) && !jsonObj.get("projectTravelExpenseSecondaryGroupBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectTravelExpenseSecondaryGroupBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectTravelExpenseSecondaryGroupBy").toString()));
      }
      if ((jsonObj.get("reverseChargeDescription") != null && !jsonObj.get("reverseChargeDescription").isJsonNull()) && !jsonObj.get("reverseChargeDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reverseChargeDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reverseChargeDescription").toString()));
      }
      // validate the optional field `style`
      if (jsonObj.get("style") != null && !jsonObj.get("style").isJsonNull()) {
        InvoiceSkin.validateJsonElement(jsonObj.get("style"));
      }
      if ((jsonObj.get("workHourDescriptionFormat") != null && !jsonObj.get("workHourDescriptionFormat").isJsonNull()) && !jsonObj.get("workHourDescriptionFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workHourDescriptionFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workHourDescriptionFormat").toString()));
      }
      // validate the optional field `workHourGrouping`
      if (jsonObj.get("workHourGrouping") != null && !jsonObj.get("workHourGrouping").isJsonNull()) {
        InvoiceGrouping.validateJsonElement(jsonObj.get("workHourGrouping"));
      }
      if ((jsonObj.get("workHourPrimaryGroupBy") != null && !jsonObj.get("workHourPrimaryGroupBy").isJsonNull()) && !jsonObj.get("workHourPrimaryGroupBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workHourPrimaryGroupBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workHourPrimaryGroupBy").toString()));
      }
      if ((jsonObj.get("workHourSecondaryGroupBy") != null && !jsonObj.get("workHourSecondaryGroupBy").isJsonNull()) && !jsonObj.get("workHourSecondaryGroupBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workHourSecondaryGroupBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workHourSecondaryGroupBy").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InvoiceSettingsOutputModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InvoiceSettingsOutputModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InvoiceSettingsOutputModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InvoiceSettingsOutputModel.class));

       return (TypeAdapter<T>) new TypeAdapter<InvoiceSettingsOutputModel>() {
           @Override
           public void write(JsonWriter out, InvoiceSettingsOutputModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InvoiceSettingsOutputModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InvoiceSettingsOutputModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InvoiceSettingsOutputModel
   * @throws IOException if the JSON string is invalid with respect to InvoiceSettingsOutputModel
   */
  public static InvoiceSettingsOutputModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InvoiceSettingsOutputModel.class);
  }

  /**
   * Convert an instance of InvoiceSettingsOutputModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

