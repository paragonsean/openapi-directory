/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CustomerCurrency;
import org.openapitools.client.model.CustomerHeadquarterAddress;
import org.openapitools.client.model.CustomerInvoicingVat;
import org.openapitools.client.model.CustomerLanguage;
import org.openapitools.client.model.ModelWithName;
import org.openapitools.client.model.UserWithFirstNameLastNameAndPhotoFileModel;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CustomerModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:00.992903-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CustomerModel {
  public static final String SERIALIZED_NAME_ANNUAL_REVENUE = "annualRevenue";
  @SerializedName(SERIALIZED_NAME_ANNUAL_REVENUE)
  private Long annualRevenue;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private UserWithFirstNameLastNameAndPhotoFileModel createdBy;

  public static final String SERIALIZED_NAME_CREATED_DATE_TIME = "createdDateTime";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE_TIME)
  private OffsetDateTime createdDateTime;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private CustomerCurrency currency;

  public static final String SERIALIZED_NAME_E_INVOICE_ADDRESS = "eInvoiceAddress";
  @SerializedName(SERIALIZED_NAME_E_INVOICE_ADDRESS)
  private String eInvoiceAddress;

  public static final String SERIALIZED_NAME_E_INVOICE_OPERATOR = "eInvoiceOperator";
  @SerializedName(SERIALIZED_NAME_E_INVOICE_OPERATOR)
  private String eInvoiceOperator;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_HEADQUARTER_ADDRESS = "headquarterAddress";
  @SerializedName(SERIALIZED_NAME_HEADQUARTER_ADDRESS)
  private CustomerHeadquarterAddress headquarterAddress;

  public static final String SERIALIZED_NAME_INDUSTRY = "industry";
  @SerializedName(SERIALIZED_NAME_INDUSTRY)
  private ModelWithName industry;

  public static final String SERIALIZED_NAME_INVOICE_TEMPLATE = "invoiceTemplate";
  @SerializedName(SERIALIZED_NAME_INVOICE_TEMPLATE)
  private ModelWithName invoiceTemplate;

  public static final String SERIALIZED_NAME_INVOICING_VAT = "invoicingVat";
  @SerializedName(SERIALIZED_NAME_INVOICING_VAT)
  private CustomerInvoicingVat invoicingVat;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "isActive";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive = true;

  public static final String SERIALIZED_NAME_IS_INTERNAL = "isInternal";
  @SerializedName(SERIALIZED_NAME_IS_INTERNAL)
  private Boolean isInternal;

  public static final String SERIALIZED_NAME_KVK_NUMBER = "kvkNumber";
  @SerializedName(SERIALIZED_NAME_KVK_NUMBER)
  private String kvkNumber;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private CustomerLanguage language;

  public static final String SERIALIZED_NAME_LAST_UPDATED_BY = "lastUpdatedBy";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_BY)
  private UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy;

  public static final String SERIALIZED_NAME_LAST_UPDATED_DATE_TIME = "lastUpdatedDateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_DATE_TIME)
  private OffsetDateTime lastUpdatedDateTime;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_NUMBER = "number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private Long number;

  public static final String SERIALIZED_NAME_NUMBER_OF_EMPLOYEES = "numberOfEmployees";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_EMPLOYEES)
  private Integer numberOfEmployees;

  public static final String SERIALIZED_NAME_OVERDUE_INTEREST = "overdueInterest";
  @SerializedName(SERIALIZED_NAME_OVERDUE_INTEREST)
  private Double overdueInterest;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private UserWithFirstNameLastNameAndPhotoFileModel owner;

  public static final String SERIALIZED_NAME_PAYMENT_TERM = "paymentTerm";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TERM)
  private Integer paymentTerm;

  public static final String SERIALIZED_NAME_PRICELIST = "pricelist";
  @SerializedName(SERIALIZED_NAME_PRICELIST)
  private ModelWithName pricelist;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private ModelWithName timezone;

  public static final String SERIALIZED_NAME_VAT_NUMBER = "vatNumber";
  @SerializedName(SERIALIZED_NAME_VAT_NUMBER)
  private String vatNumber;

  public static final String SERIALIZED_NAME_WEBSITE = "website";
  @SerializedName(SERIALIZED_NAME_WEBSITE)
  private String website;

  public CustomerModel() {
  }

  public CustomerModel(
     OffsetDateTime createdDateTime, 
     String guid, 
     Boolean isInternal, 
     OffsetDateTime lastUpdatedDateTime
  ) {
    this();
    this.createdDateTime = createdDateTime;
    this.guid = guid;
    this.isInternal = isInternal;
    this.lastUpdatedDateTime = lastUpdatedDateTime;
  }

  public CustomerModel annualRevenue(Long annualRevenue) {
    this.annualRevenue = annualRevenue;
    return this;
  }

  /**
   * Get annualRevenue
   * @return annualRevenue
   */
  @javax.annotation.Nullable
  public Long getAnnualRevenue() {
    return annualRevenue;
  }

  public void setAnnualRevenue(Long annualRevenue) {
    this.annualRevenue = annualRevenue;
  }


  public CustomerModel createdBy(UserWithFirstNameLastNameAndPhotoFileModel createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public UserWithFirstNameLastNameAndPhotoFileModel getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(UserWithFirstNameLastNameAndPhotoFileModel createdBy) {
    this.createdBy = createdBy;
  }


  /**
   * Get createdDateTime
   * @return createdDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDateTime() {
    return createdDateTime;
  }



  public CustomerModel currency(CustomerCurrency currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  public CustomerCurrency getCurrency() {
    return currency;
  }

  public void setCurrency(CustomerCurrency currency) {
    this.currency = currency;
  }


  public CustomerModel eInvoiceAddress(String eInvoiceAddress) {
    this.eInvoiceAddress = eInvoiceAddress;
    return this;
  }

  /**
   * Get eInvoiceAddress
   * @return eInvoiceAddress
   */
  @javax.annotation.Nullable
  public String geteInvoiceAddress() {
    return eInvoiceAddress;
  }

  public void seteInvoiceAddress(String eInvoiceAddress) {
    this.eInvoiceAddress = eInvoiceAddress;
  }


  public CustomerModel eInvoiceOperator(String eInvoiceOperator) {
    this.eInvoiceOperator = eInvoiceOperator;
    return this;
  }

  /**
   * Get eInvoiceOperator
   * @return eInvoiceOperator
   */
  @javax.annotation.Nullable
  public String geteInvoiceOperator() {
    return eInvoiceOperator;
  }

  public void seteInvoiceOperator(String eInvoiceOperator) {
    this.eInvoiceOperator = eInvoiceOperator;
  }


  public CustomerModel email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  /**
   * Get guid
   * @return guid
   */
  @javax.annotation.Nullable
  public String getGuid() {
    return guid;
  }



  public CustomerModel headquarterAddress(CustomerHeadquarterAddress headquarterAddress) {
    this.headquarterAddress = headquarterAddress;
    return this;
  }

  /**
   * Get headquarterAddress
   * @return headquarterAddress
   */
  @javax.annotation.Nullable
  public CustomerHeadquarterAddress getHeadquarterAddress() {
    return headquarterAddress;
  }

  public void setHeadquarterAddress(CustomerHeadquarterAddress headquarterAddress) {
    this.headquarterAddress = headquarterAddress;
  }


  public CustomerModel industry(ModelWithName industry) {
    this.industry = industry;
    return this;
  }

  /**
   * Get industry
   * @return industry
   */
  @javax.annotation.Nullable
  public ModelWithName getIndustry() {
    return industry;
  }

  public void setIndustry(ModelWithName industry) {
    this.industry = industry;
  }


  public CustomerModel invoiceTemplate(ModelWithName invoiceTemplate) {
    this.invoiceTemplate = invoiceTemplate;
    return this;
  }

  /**
   * Get invoiceTemplate
   * @return invoiceTemplate
   */
  @javax.annotation.Nullable
  public ModelWithName getInvoiceTemplate() {
    return invoiceTemplate;
  }

  public void setInvoiceTemplate(ModelWithName invoiceTemplate) {
    this.invoiceTemplate = invoiceTemplate;
  }


  public CustomerModel invoicingVat(CustomerInvoicingVat invoicingVat) {
    this.invoicingVat = invoicingVat;
    return this;
  }

  /**
   * Get invoicingVat
   * @return invoicingVat
   */
  @javax.annotation.Nullable
  public CustomerInvoicingVat getInvoicingVat() {
    return invoicingVat;
  }

  public void setInvoicingVat(CustomerInvoicingVat invoicingVat) {
    this.invoicingVat = invoicingVat;
  }


  public CustomerModel isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

  /**
   * Get isActive
   * @return isActive
   */
  @javax.annotation.Nullable
  public Boolean getIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  /**
   * Get isInternal
   * @return isInternal
   */
  @javax.annotation.Nullable
  public Boolean getIsInternal() {
    return isInternal;
  }



  public CustomerModel kvkNumber(String kvkNumber) {
    this.kvkNumber = kvkNumber;
    return this;
  }

  /**
   * Get kvkNumber
   * @return kvkNumber
   */
  @javax.annotation.Nullable
  public String getKvkNumber() {
    return kvkNumber;
  }

  public void setKvkNumber(String kvkNumber) {
    this.kvkNumber = kvkNumber;
  }


  public CustomerModel language(CustomerLanguage language) {
    this.language = language;
    return this;
  }

  /**
   * Get language
   * @return language
   */
  @javax.annotation.Nullable
  public CustomerLanguage getLanguage() {
    return language;
  }

  public void setLanguage(CustomerLanguage language) {
    this.language = language;
  }


  public CustomerModel lastUpdatedBy(UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
    return this;
  }

  /**
   * Get lastUpdatedBy
   * @return lastUpdatedBy
   */
  @javax.annotation.Nullable
  public UserWithFirstNameLastNameAndPhotoFileModel getLastUpdatedBy() {
    return lastUpdatedBy;
  }

  public void setLastUpdatedBy(UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
  }


  /**
   * Get lastUpdatedDateTime
   * @return lastUpdatedDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedDateTime() {
    return lastUpdatedDateTime;
  }



  public CustomerModel name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CustomerModel notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * Get notes
   * @return notes
   */
  @javax.annotation.Nullable
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  public CustomerModel number(Long number) {
    this.number = number;
    return this;
  }

  /**
   * Get number
   * @return number
   */
  @javax.annotation.Nullable
  public Long getNumber() {
    return number;
  }

  public void setNumber(Long number) {
    this.number = number;
  }


  public CustomerModel numberOfEmployees(Integer numberOfEmployees) {
    this.numberOfEmployees = numberOfEmployees;
    return this;
  }

  /**
   * Get numberOfEmployees
   * @return numberOfEmployees
   */
  @javax.annotation.Nullable
  public Integer getNumberOfEmployees() {
    return numberOfEmployees;
  }

  public void setNumberOfEmployees(Integer numberOfEmployees) {
    this.numberOfEmployees = numberOfEmployees;
  }


  public CustomerModel overdueInterest(Double overdueInterest) {
    this.overdueInterest = overdueInterest;
    return this;
  }

  /**
   * Get overdueInterest
   * @return overdueInterest
   */
  @javax.annotation.Nullable
  public Double getOverdueInterest() {
    return overdueInterest;
  }

  public void setOverdueInterest(Double overdueInterest) {
    this.overdueInterest = overdueInterest;
  }


  public CustomerModel owner(UserWithFirstNameLastNameAndPhotoFileModel owner) {
    this.owner = owner;
    return this;
  }

  /**
   * Get owner
   * @return owner
   */
  @javax.annotation.Nullable
  public UserWithFirstNameLastNameAndPhotoFileModel getOwner() {
    return owner;
  }

  public void setOwner(UserWithFirstNameLastNameAndPhotoFileModel owner) {
    this.owner = owner;
  }


  public CustomerModel paymentTerm(Integer paymentTerm) {
    this.paymentTerm = paymentTerm;
    return this;
  }

  /**
   * Get paymentTerm
   * @return paymentTerm
   */
  @javax.annotation.Nullable
  public Integer getPaymentTerm() {
    return paymentTerm;
  }

  public void setPaymentTerm(Integer paymentTerm) {
    this.paymentTerm = paymentTerm;
  }


  public CustomerModel pricelist(ModelWithName pricelist) {
    this.pricelist = pricelist;
    return this;
  }

  /**
   * Get pricelist
   * @return pricelist
   */
  @javax.annotation.Nullable
  public ModelWithName getPricelist() {
    return pricelist;
  }

  public void setPricelist(ModelWithName pricelist) {
    this.pricelist = pricelist;
  }


  public CustomerModel timezone(ModelWithName timezone) {
    this.timezone = timezone;
    return this;
  }

  /**
   * Get timezone
   * @return timezone
   */
  @javax.annotation.Nullable
  public ModelWithName getTimezone() {
    return timezone;
  }

  public void setTimezone(ModelWithName timezone) {
    this.timezone = timezone;
  }


  public CustomerModel vatNumber(String vatNumber) {
    this.vatNumber = vatNumber;
    return this;
  }

  /**
   * Get vatNumber
   * @return vatNumber
   */
  @javax.annotation.Nullable
  public String getVatNumber() {
    return vatNumber;
  }

  public void setVatNumber(String vatNumber) {
    this.vatNumber = vatNumber;
  }


  public CustomerModel website(String website) {
    this.website = website;
    return this;
  }

  /**
   * Get website
   * @return website
   */
  @javax.annotation.Nullable
  public String getWebsite() {
    return website;
  }

  public void setWebsite(String website) {
    this.website = website;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerModel customerModel = (CustomerModel) o;
    return Objects.equals(this.annualRevenue, customerModel.annualRevenue) &&
        Objects.equals(this.createdBy, customerModel.createdBy) &&
        Objects.equals(this.createdDateTime, customerModel.createdDateTime) &&
        Objects.equals(this.currency, customerModel.currency) &&
        Objects.equals(this.eInvoiceAddress, customerModel.eInvoiceAddress) &&
        Objects.equals(this.eInvoiceOperator, customerModel.eInvoiceOperator) &&
        Objects.equals(this.email, customerModel.email) &&
        Objects.equals(this.guid, customerModel.guid) &&
        Objects.equals(this.headquarterAddress, customerModel.headquarterAddress) &&
        Objects.equals(this.industry, customerModel.industry) &&
        Objects.equals(this.invoiceTemplate, customerModel.invoiceTemplate) &&
        Objects.equals(this.invoicingVat, customerModel.invoicingVat) &&
        Objects.equals(this.isActive, customerModel.isActive) &&
        Objects.equals(this.isInternal, customerModel.isInternal) &&
        Objects.equals(this.kvkNumber, customerModel.kvkNumber) &&
        Objects.equals(this.language, customerModel.language) &&
        Objects.equals(this.lastUpdatedBy, customerModel.lastUpdatedBy) &&
        Objects.equals(this.lastUpdatedDateTime, customerModel.lastUpdatedDateTime) &&
        Objects.equals(this.name, customerModel.name) &&
        Objects.equals(this.notes, customerModel.notes) &&
        Objects.equals(this.number, customerModel.number) &&
        Objects.equals(this.numberOfEmployees, customerModel.numberOfEmployees) &&
        Objects.equals(this.overdueInterest, customerModel.overdueInterest) &&
        Objects.equals(this.owner, customerModel.owner) &&
        Objects.equals(this.paymentTerm, customerModel.paymentTerm) &&
        Objects.equals(this.pricelist, customerModel.pricelist) &&
        Objects.equals(this.timezone, customerModel.timezone) &&
        Objects.equals(this.vatNumber, customerModel.vatNumber) &&
        Objects.equals(this.website, customerModel.website);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(annualRevenue, createdBy, createdDateTime, currency, eInvoiceAddress, eInvoiceOperator, email, guid, headquarterAddress, industry, invoiceTemplate, invoicingVat, isActive, isInternal, kvkNumber, language, lastUpdatedBy, lastUpdatedDateTime, name, notes, number, numberOfEmployees, overdueInterest, owner, paymentTerm, pricelist, timezone, vatNumber, website);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerModel {\n");
    sb.append("    annualRevenue: ").append(toIndentedString(annualRevenue)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdDateTime: ").append(toIndentedString(createdDateTime)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    eInvoiceAddress: ").append(toIndentedString(eInvoiceAddress)).append("\n");
    sb.append("    eInvoiceOperator: ").append(toIndentedString(eInvoiceOperator)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    headquarterAddress: ").append(toIndentedString(headquarterAddress)).append("\n");
    sb.append("    industry: ").append(toIndentedString(industry)).append("\n");
    sb.append("    invoiceTemplate: ").append(toIndentedString(invoiceTemplate)).append("\n");
    sb.append("    invoicingVat: ").append(toIndentedString(invoicingVat)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    isInternal: ").append(toIndentedString(isInternal)).append("\n");
    sb.append("    kvkNumber: ").append(toIndentedString(kvkNumber)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    lastUpdatedBy: ").append(toIndentedString(lastUpdatedBy)).append("\n");
    sb.append("    lastUpdatedDateTime: ").append(toIndentedString(lastUpdatedDateTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    numberOfEmployees: ").append(toIndentedString(numberOfEmployees)).append("\n");
    sb.append("    overdueInterest: ").append(toIndentedString(overdueInterest)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    paymentTerm: ").append(toIndentedString(paymentTerm)).append("\n");
    sb.append("    pricelist: ").append(toIndentedString(pricelist)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    vatNumber: ").append(toIndentedString(vatNumber)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("annualRevenue");
    openapiFields.add("createdBy");
    openapiFields.add("createdDateTime");
    openapiFields.add("currency");
    openapiFields.add("eInvoiceAddress");
    openapiFields.add("eInvoiceOperator");
    openapiFields.add("email");
    openapiFields.add("guid");
    openapiFields.add("headquarterAddress");
    openapiFields.add("industry");
    openapiFields.add("invoiceTemplate");
    openapiFields.add("invoicingVat");
    openapiFields.add("isActive");
    openapiFields.add("isInternal");
    openapiFields.add("kvkNumber");
    openapiFields.add("language");
    openapiFields.add("lastUpdatedBy");
    openapiFields.add("lastUpdatedDateTime");
    openapiFields.add("name");
    openapiFields.add("notes");
    openapiFields.add("number");
    openapiFields.add("numberOfEmployees");
    openapiFields.add("overdueInterest");
    openapiFields.add("owner");
    openapiFields.add("paymentTerm");
    openapiFields.add("pricelist");
    openapiFields.add("timezone");
    openapiFields.add("vatNumber");
    openapiFields.add("website");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CustomerModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomerModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerModel is not found in the empty JSON string", CustomerModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CustomerModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomerModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CustomerModel.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `createdBy`
      if (jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) {
        UserWithFirstNameLastNameAndPhotoFileModel.validateJsonElement(jsonObj.get("createdBy"));
      }
      // validate the optional field `currency`
      if (jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) {
        CustomerCurrency.validateJsonElement(jsonObj.get("currency"));
      }
      if ((jsonObj.get("eInvoiceAddress") != null && !jsonObj.get("eInvoiceAddress").isJsonNull()) && !jsonObj.get("eInvoiceAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eInvoiceAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eInvoiceAddress").toString()));
      }
      if ((jsonObj.get("eInvoiceOperator") != null && !jsonObj.get("eInvoiceOperator").isJsonNull()) && !jsonObj.get("eInvoiceOperator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eInvoiceOperator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eInvoiceOperator").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      // validate the optional field `headquarterAddress`
      if (jsonObj.get("headquarterAddress") != null && !jsonObj.get("headquarterAddress").isJsonNull()) {
        CustomerHeadquarterAddress.validateJsonElement(jsonObj.get("headquarterAddress"));
      }
      // validate the optional field `industry`
      if (jsonObj.get("industry") != null && !jsonObj.get("industry").isJsonNull()) {
        ModelWithName.validateJsonElement(jsonObj.get("industry"));
      }
      // validate the optional field `invoiceTemplate`
      if (jsonObj.get("invoiceTemplate") != null && !jsonObj.get("invoiceTemplate").isJsonNull()) {
        ModelWithName.validateJsonElement(jsonObj.get("invoiceTemplate"));
      }
      // validate the optional field `invoicingVat`
      if (jsonObj.get("invoicingVat") != null && !jsonObj.get("invoicingVat").isJsonNull()) {
        CustomerInvoicingVat.validateJsonElement(jsonObj.get("invoicingVat"));
      }
      if ((jsonObj.get("kvkNumber") != null && !jsonObj.get("kvkNumber").isJsonNull()) && !jsonObj.get("kvkNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kvkNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kvkNumber").toString()));
      }
      // validate the optional field `language`
      if (jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) {
        CustomerLanguage.validateJsonElement(jsonObj.get("language"));
      }
      // validate the optional field `lastUpdatedBy`
      if (jsonObj.get("lastUpdatedBy") != null && !jsonObj.get("lastUpdatedBy").isJsonNull()) {
        UserWithFirstNameLastNameAndPhotoFileModel.validateJsonElement(jsonObj.get("lastUpdatedBy"));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      // validate the optional field `owner`
      if (jsonObj.get("owner") != null && !jsonObj.get("owner").isJsonNull()) {
        UserWithFirstNameLastNameAndPhotoFileModel.validateJsonElement(jsonObj.get("owner"));
      }
      // validate the optional field `pricelist`
      if (jsonObj.get("pricelist") != null && !jsonObj.get("pricelist").isJsonNull()) {
        ModelWithName.validateJsonElement(jsonObj.get("pricelist"));
      }
      // validate the optional field `timezone`
      if (jsonObj.get("timezone") != null && !jsonObj.get("timezone").isJsonNull()) {
        ModelWithName.validateJsonElement(jsonObj.get("timezone"));
      }
      if ((jsonObj.get("vatNumber") != null && !jsonObj.get("vatNumber").isJsonNull()) && !jsonObj.get("vatNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vatNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vatNumber").toString()));
      }
      if ((jsonObj.get("website") != null && !jsonObj.get("website").isJsonNull()) && !jsonObj.get("website").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `website` to be a primitive type in the JSON string but got `%s`", jsonObj.get("website").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerModel.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerModel>() {
           @Override
           public void write(JsonWriter out, CustomerModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CustomerModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CustomerModel
   * @throws IOException if the JSON string is invalid with respect to CustomerModel
   */
  public static CustomerModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerModel.class);
  }

  /**
   * Convert an instance of CustomerModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

