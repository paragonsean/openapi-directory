/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.InvoiceRowAccountingSubModel;
import org.openapitools.client.model.InvoiceRowCategory;
import org.openapitools.client.model.InvoiceRowType;
import org.openapitools.client.model.MoneyOutputModel;
import org.openapitools.client.model.UserWithFirstNameLastNameAndPhotoFileModel;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * InvoiceRowOutputModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:00.992903-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InvoiceRowOutputModel {
  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private InvoiceRowCategory category;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private List<String> code;

  public static final String SERIALIZED_NAME_COST_CENTER = "costCenter";
  @SerializedName(SERIALIZED_NAME_COST_CENTER)
  private InvoiceRowAccountingSubModel costCenter;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private UserWithFirstNameLastNameAndPhotoFileModel createdBy;

  public static final String SERIALIZED_NAME_CREATED_DATE_TIME = "createdDateTime";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE_TIME)
  private OffsetDateTime createdDateTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FLAT_RATE_GUID = "flatRateGuid";
  @SerializedName(SERIALIZED_NAME_FLAT_RATE_GUID)
  private String flatRateGuid;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_HAS_INVOICE_COMMENT = "hasInvoiceComment";
  @SerializedName(SERIALIZED_NAME_HAS_INVOICE_COMMENT)
  private Boolean hasInvoiceComment;

  public static final String SERIALIZED_NAME_INVOICE_GUID = "invoiceGuid";
  @SerializedName(SERIALIZED_NAME_INVOICE_GUID)
  private String invoiceGuid;

  public static final String SERIALIZED_NAME_LAST_UPDATED_BY = "lastUpdatedBy";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_BY)
  private UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy;

  public static final String SERIALIZED_NAME_LAST_UPDATED_DATE_TIME = "lastUpdatedDateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_DATE_TIME)
  private OffsetDateTime lastUpdatedDateTime;

  public static final String SERIALIZED_NAME_MEASUREMENT_UNIT = "measurementUnit";
  @SerializedName(SERIALIZED_NAME_MEASUREMENT_UNIT)
  private String measurementUnit;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Double quantity;

  public static final String SERIALIZED_NAME_RECURRING_SALES_ACCOUNT = "recurringSalesAccount";
  @SerializedName(SERIALIZED_NAME_RECURRING_SALES_ACCOUNT)
  private InvoiceRowAccountingSubModel recurringSalesAccount;

  public static final String SERIALIZED_NAME_ROW_TYPE = "rowType";
  @SerializedName(SERIALIZED_NAME_ROW_TYPE)
  private InvoiceRowType rowType;

  public static final String SERIALIZED_NAME_SALES_ACCOUNT = "salesAccount";
  @SerializedName(SERIALIZED_NAME_SALES_ACCOUNT)
  private InvoiceRowAccountingSubModel salesAccount;

  public static final String SERIALIZED_NAME_SALES_RECEIVABLE_ACCOUNT = "salesReceivableAccount";
  @SerializedName(SERIALIZED_NAME_SALES_RECEIVABLE_ACCOUNT)
  private InvoiceRowAccountingSubModel salesReceivableAccount;

  public static final String SERIALIZED_NAME_SORT_ORDER = "sortOrder";
  @SerializedName(SERIALIZED_NAME_SORT_ORDER)
  private Integer sortOrder;

  public static final String SERIALIZED_NAME_UNIT_PRICE = "unitPrice";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICE)
  private MoneyOutputModel unitPrice;

  public static final String SERIALIZED_NAME_VAT_ACCOUNT = "vatAccount";
  @SerializedName(SERIALIZED_NAME_VAT_ACCOUNT)
  private InvoiceRowAccountingSubModel vatAccount;

  public static final String SERIALIZED_NAME_VAT_RATE = "vatRate";
  @SerializedName(SERIALIZED_NAME_VAT_RATE)
  private Double vatRate;

  public InvoiceRowOutputModel() {
  }

  public InvoiceRowOutputModel(
     OffsetDateTime createdDateTime, 
     String guid, 
     OffsetDateTime lastUpdatedDateTime
  ) {
    this();
    this.createdDateTime = createdDateTime;
    this.guid = guid;
    this.lastUpdatedDateTime = lastUpdatedDateTime;
  }

  public InvoiceRowOutputModel category(InvoiceRowCategory category) {
    this.category = category;
    return this;
  }

  /**
   * Get category
   * @return category
   */
  @javax.annotation.Nullable
  public InvoiceRowCategory getCategory() {
    return category;
  }

  public void setCategory(InvoiceRowCategory category) {
    this.category = category;
  }


  public InvoiceRowOutputModel code(List<String> code) {
    this.code = code;
    return this;
  }

  public InvoiceRowOutputModel addCodeItem(String codeItem) {
    if (this.code == null) {
      this.code = new ArrayList<>();
    }
    this.code.add(codeItem);
    return this;
  }

  /**
   * Get code
   * @return code
   */
  @javax.annotation.Nullable
  public List<String> getCode() {
    return code;
  }

  public void setCode(List<String> code) {
    this.code = code;
  }


  public InvoiceRowOutputModel costCenter(InvoiceRowAccountingSubModel costCenter) {
    this.costCenter = costCenter;
    return this;
  }

  /**
   * Get costCenter
   * @return costCenter
   */
  @javax.annotation.Nullable
  public InvoiceRowAccountingSubModel getCostCenter() {
    return costCenter;
  }

  public void setCostCenter(InvoiceRowAccountingSubModel costCenter) {
    this.costCenter = costCenter;
  }


  public InvoiceRowOutputModel createdBy(UserWithFirstNameLastNameAndPhotoFileModel createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public UserWithFirstNameLastNameAndPhotoFileModel getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(UserWithFirstNameLastNameAndPhotoFileModel createdBy) {
    this.createdBy = createdBy;
  }


  /**
   * Get createdDateTime
   * @return createdDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDateTime() {
    return createdDateTime;
  }



  public InvoiceRowOutputModel description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public InvoiceRowOutputModel flatRateGuid(String flatRateGuid) {
    this.flatRateGuid = flatRateGuid;
    return this;
  }

  /**
   * Get flatRateGuid
   * @return flatRateGuid
   */
  @javax.annotation.Nullable
  public String getFlatRateGuid() {
    return flatRateGuid;
  }

  public void setFlatRateGuid(String flatRateGuid) {
    this.flatRateGuid = flatRateGuid;
  }


  /**
   * Get guid
   * @return guid
   */
  @javax.annotation.Nullable
  public String getGuid() {
    return guid;
  }



  public InvoiceRowOutputModel hasInvoiceComment(Boolean hasInvoiceComment) {
    this.hasInvoiceComment = hasInvoiceComment;
    return this;
  }

  /**
   * Get hasInvoiceComment
   * @return hasInvoiceComment
   */
  @javax.annotation.Nullable
  public Boolean getHasInvoiceComment() {
    return hasInvoiceComment;
  }

  public void setHasInvoiceComment(Boolean hasInvoiceComment) {
    this.hasInvoiceComment = hasInvoiceComment;
  }


  public InvoiceRowOutputModel invoiceGuid(String invoiceGuid) {
    this.invoiceGuid = invoiceGuid;
    return this;
  }

  /**
   * Get invoiceGuid
   * @return invoiceGuid
   */
  @javax.annotation.Nullable
  public String getInvoiceGuid() {
    return invoiceGuid;
  }

  public void setInvoiceGuid(String invoiceGuid) {
    this.invoiceGuid = invoiceGuid;
  }


  public InvoiceRowOutputModel lastUpdatedBy(UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
    return this;
  }

  /**
   * Get lastUpdatedBy
   * @return lastUpdatedBy
   */
  @javax.annotation.Nullable
  public UserWithFirstNameLastNameAndPhotoFileModel getLastUpdatedBy() {
    return lastUpdatedBy;
  }

  public void setLastUpdatedBy(UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
  }


  /**
   * Get lastUpdatedDateTime
   * @return lastUpdatedDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedDateTime() {
    return lastUpdatedDateTime;
  }



  public InvoiceRowOutputModel measurementUnit(String measurementUnit) {
    this.measurementUnit = measurementUnit;
    return this;
  }

  /**
   * Get measurementUnit
   * @return measurementUnit
   */
  @javax.annotation.Nullable
  public String getMeasurementUnit() {
    return measurementUnit;
  }

  public void setMeasurementUnit(String measurementUnit) {
    this.measurementUnit = measurementUnit;
  }


  public InvoiceRowOutputModel quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Get quantity
   * @return quantity
   */
  @javax.annotation.Nullable
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }


  public InvoiceRowOutputModel recurringSalesAccount(InvoiceRowAccountingSubModel recurringSalesAccount) {
    this.recurringSalesAccount = recurringSalesAccount;
    return this;
  }

  /**
   * Get recurringSalesAccount
   * @return recurringSalesAccount
   */
  @javax.annotation.Nullable
  public InvoiceRowAccountingSubModel getRecurringSalesAccount() {
    return recurringSalesAccount;
  }

  public void setRecurringSalesAccount(InvoiceRowAccountingSubModel recurringSalesAccount) {
    this.recurringSalesAccount = recurringSalesAccount;
  }


  public InvoiceRowOutputModel rowType(InvoiceRowType rowType) {
    this.rowType = rowType;
    return this;
  }

  /**
   * Get rowType
   * @return rowType
   */
  @javax.annotation.Nullable
  public InvoiceRowType getRowType() {
    return rowType;
  }

  public void setRowType(InvoiceRowType rowType) {
    this.rowType = rowType;
  }


  public InvoiceRowOutputModel salesAccount(InvoiceRowAccountingSubModel salesAccount) {
    this.salesAccount = salesAccount;
    return this;
  }

  /**
   * Get salesAccount
   * @return salesAccount
   */
  @javax.annotation.Nullable
  public InvoiceRowAccountingSubModel getSalesAccount() {
    return salesAccount;
  }

  public void setSalesAccount(InvoiceRowAccountingSubModel salesAccount) {
    this.salesAccount = salesAccount;
  }


  public InvoiceRowOutputModel salesReceivableAccount(InvoiceRowAccountingSubModel salesReceivableAccount) {
    this.salesReceivableAccount = salesReceivableAccount;
    return this;
  }

  /**
   * Get salesReceivableAccount
   * @return salesReceivableAccount
   */
  @javax.annotation.Nullable
  public InvoiceRowAccountingSubModel getSalesReceivableAccount() {
    return salesReceivableAccount;
  }

  public void setSalesReceivableAccount(InvoiceRowAccountingSubModel salesReceivableAccount) {
    this.salesReceivableAccount = salesReceivableAccount;
  }


  public InvoiceRowOutputModel sortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

  /**
   * Get sortOrder
   * @return sortOrder
   */
  @javax.annotation.Nullable
  public Integer getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
  }


  public InvoiceRowOutputModel unitPrice(MoneyOutputModel unitPrice) {
    this.unitPrice = unitPrice;
    return this;
  }

  /**
   * Get unitPrice
   * @return unitPrice
   */
  @javax.annotation.Nullable
  public MoneyOutputModel getUnitPrice() {
    return unitPrice;
  }

  public void setUnitPrice(MoneyOutputModel unitPrice) {
    this.unitPrice = unitPrice;
  }


  public InvoiceRowOutputModel vatAccount(InvoiceRowAccountingSubModel vatAccount) {
    this.vatAccount = vatAccount;
    return this;
  }

  /**
   * Get vatAccount
   * @return vatAccount
   */
  @javax.annotation.Nullable
  public InvoiceRowAccountingSubModel getVatAccount() {
    return vatAccount;
  }

  public void setVatAccount(InvoiceRowAccountingSubModel vatAccount) {
    this.vatAccount = vatAccount;
  }


  public InvoiceRowOutputModel vatRate(Double vatRate) {
    this.vatRate = vatRate;
    return this;
  }

  /**
   * Get vatRate
   * @return vatRate
   */
  @javax.annotation.Nullable
  public Double getVatRate() {
    return vatRate;
  }

  public void setVatRate(Double vatRate) {
    this.vatRate = vatRate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceRowOutputModel invoiceRowOutputModel = (InvoiceRowOutputModel) o;
    return Objects.equals(this.category, invoiceRowOutputModel.category) &&
        Objects.equals(this.code, invoiceRowOutputModel.code) &&
        Objects.equals(this.costCenter, invoiceRowOutputModel.costCenter) &&
        Objects.equals(this.createdBy, invoiceRowOutputModel.createdBy) &&
        Objects.equals(this.createdDateTime, invoiceRowOutputModel.createdDateTime) &&
        Objects.equals(this.description, invoiceRowOutputModel.description) &&
        Objects.equals(this.flatRateGuid, invoiceRowOutputModel.flatRateGuid) &&
        Objects.equals(this.guid, invoiceRowOutputModel.guid) &&
        Objects.equals(this.hasInvoiceComment, invoiceRowOutputModel.hasInvoiceComment) &&
        Objects.equals(this.invoiceGuid, invoiceRowOutputModel.invoiceGuid) &&
        Objects.equals(this.lastUpdatedBy, invoiceRowOutputModel.lastUpdatedBy) &&
        Objects.equals(this.lastUpdatedDateTime, invoiceRowOutputModel.lastUpdatedDateTime) &&
        Objects.equals(this.measurementUnit, invoiceRowOutputModel.measurementUnit) &&
        Objects.equals(this.quantity, invoiceRowOutputModel.quantity) &&
        Objects.equals(this.recurringSalesAccount, invoiceRowOutputModel.recurringSalesAccount) &&
        Objects.equals(this.rowType, invoiceRowOutputModel.rowType) &&
        Objects.equals(this.salesAccount, invoiceRowOutputModel.salesAccount) &&
        Objects.equals(this.salesReceivableAccount, invoiceRowOutputModel.salesReceivableAccount) &&
        Objects.equals(this.sortOrder, invoiceRowOutputModel.sortOrder) &&
        Objects.equals(this.unitPrice, invoiceRowOutputModel.unitPrice) &&
        Objects.equals(this.vatAccount, invoiceRowOutputModel.vatAccount) &&
        Objects.equals(this.vatRate, invoiceRowOutputModel.vatRate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, code, costCenter, createdBy, createdDateTime, description, flatRateGuid, guid, hasInvoiceComment, invoiceGuid, lastUpdatedBy, lastUpdatedDateTime, measurementUnit, quantity, recurringSalesAccount, rowType, salesAccount, salesReceivableAccount, sortOrder, unitPrice, vatAccount, vatRate);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceRowOutputModel {\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    costCenter: ").append(toIndentedString(costCenter)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdDateTime: ").append(toIndentedString(createdDateTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    flatRateGuid: ").append(toIndentedString(flatRateGuid)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    hasInvoiceComment: ").append(toIndentedString(hasInvoiceComment)).append("\n");
    sb.append("    invoiceGuid: ").append(toIndentedString(invoiceGuid)).append("\n");
    sb.append("    lastUpdatedBy: ").append(toIndentedString(lastUpdatedBy)).append("\n");
    sb.append("    lastUpdatedDateTime: ").append(toIndentedString(lastUpdatedDateTime)).append("\n");
    sb.append("    measurementUnit: ").append(toIndentedString(measurementUnit)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    recurringSalesAccount: ").append(toIndentedString(recurringSalesAccount)).append("\n");
    sb.append("    rowType: ").append(toIndentedString(rowType)).append("\n");
    sb.append("    salesAccount: ").append(toIndentedString(salesAccount)).append("\n");
    sb.append("    salesReceivableAccount: ").append(toIndentedString(salesReceivableAccount)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    vatAccount: ").append(toIndentedString(vatAccount)).append("\n");
    sb.append("    vatRate: ").append(toIndentedString(vatRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("category");
    openapiFields.add("code");
    openapiFields.add("costCenter");
    openapiFields.add("createdBy");
    openapiFields.add("createdDateTime");
    openapiFields.add("description");
    openapiFields.add("flatRateGuid");
    openapiFields.add("guid");
    openapiFields.add("hasInvoiceComment");
    openapiFields.add("invoiceGuid");
    openapiFields.add("lastUpdatedBy");
    openapiFields.add("lastUpdatedDateTime");
    openapiFields.add("measurementUnit");
    openapiFields.add("quantity");
    openapiFields.add("recurringSalesAccount");
    openapiFields.add("rowType");
    openapiFields.add("salesAccount");
    openapiFields.add("salesReceivableAccount");
    openapiFields.add("sortOrder");
    openapiFields.add("unitPrice");
    openapiFields.add("vatAccount");
    openapiFields.add("vatRate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InvoiceRowOutputModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InvoiceRowOutputModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InvoiceRowOutputModel is not found in the empty JSON string", InvoiceRowOutputModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InvoiceRowOutputModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InvoiceRowOutputModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `category`
      if (jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) {
        InvoiceRowCategory.validateJsonElement(jsonObj.get("category"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull() && !jsonObj.get("code").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be an array in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      // validate the optional field `costCenter`
      if (jsonObj.get("costCenter") != null && !jsonObj.get("costCenter").isJsonNull()) {
        InvoiceRowAccountingSubModel.validateJsonElement(jsonObj.get("costCenter"));
      }
      // validate the optional field `createdBy`
      if (jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) {
        UserWithFirstNameLastNameAndPhotoFileModel.validateJsonElement(jsonObj.get("createdBy"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("flatRateGuid") != null && !jsonObj.get("flatRateGuid").isJsonNull()) && !jsonObj.get("flatRateGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flatRateGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flatRateGuid").toString()));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      if ((jsonObj.get("invoiceGuid") != null && !jsonObj.get("invoiceGuid").isJsonNull()) && !jsonObj.get("invoiceGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invoiceGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invoiceGuid").toString()));
      }
      // validate the optional field `lastUpdatedBy`
      if (jsonObj.get("lastUpdatedBy") != null && !jsonObj.get("lastUpdatedBy").isJsonNull()) {
        UserWithFirstNameLastNameAndPhotoFileModel.validateJsonElement(jsonObj.get("lastUpdatedBy"));
      }
      if ((jsonObj.get("measurementUnit") != null && !jsonObj.get("measurementUnit").isJsonNull()) && !jsonObj.get("measurementUnit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `measurementUnit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("measurementUnit").toString()));
      }
      // validate the optional field `recurringSalesAccount`
      if (jsonObj.get("recurringSalesAccount") != null && !jsonObj.get("recurringSalesAccount").isJsonNull()) {
        InvoiceRowAccountingSubModel.validateJsonElement(jsonObj.get("recurringSalesAccount"));
      }
      // validate the optional field `rowType`
      if (jsonObj.get("rowType") != null && !jsonObj.get("rowType").isJsonNull()) {
        InvoiceRowType.validateJsonElement(jsonObj.get("rowType"));
      }
      // validate the optional field `salesAccount`
      if (jsonObj.get("salesAccount") != null && !jsonObj.get("salesAccount").isJsonNull()) {
        InvoiceRowAccountingSubModel.validateJsonElement(jsonObj.get("salesAccount"));
      }
      // validate the optional field `salesReceivableAccount`
      if (jsonObj.get("salesReceivableAccount") != null && !jsonObj.get("salesReceivableAccount").isJsonNull()) {
        InvoiceRowAccountingSubModel.validateJsonElement(jsonObj.get("salesReceivableAccount"));
      }
      // validate the optional field `unitPrice`
      if (jsonObj.get("unitPrice") != null && !jsonObj.get("unitPrice").isJsonNull()) {
        MoneyOutputModel.validateJsonElement(jsonObj.get("unitPrice"));
      }
      // validate the optional field `vatAccount`
      if (jsonObj.get("vatAccount") != null && !jsonObj.get("vatAccount").isJsonNull()) {
        InvoiceRowAccountingSubModel.validateJsonElement(jsonObj.get("vatAccount"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InvoiceRowOutputModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InvoiceRowOutputModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InvoiceRowOutputModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InvoiceRowOutputModel.class));

       return (TypeAdapter<T>) new TypeAdapter<InvoiceRowOutputModel>() {
           @Override
           public void write(JsonWriter out, InvoiceRowOutputModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InvoiceRowOutputModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InvoiceRowOutputModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InvoiceRowOutputModel
   * @throws IOException if the JSON string is invalid with respect to InvoiceRowOutputModel
   */
  public static InvoiceRowOutputModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InvoiceRowOutputModel.class);
  }

  /**
   * Convert an instance of InvoiceRowOutputModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

