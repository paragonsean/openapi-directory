/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BusinessUnitSubModel;
import org.openapitools.client.model.LicenseUserType;
import org.openapitools.client.model.ModelBaseWithRequiredGuid;
import org.openapitools.client.model.ModelWithName;
import org.openapitools.client.model.SalutationType;
import org.openapitools.client.model.SatisfactionLevelType;
import org.openapitools.client.model.TimezoneModel;
import org.openapitools.client.model.UserCountrySubModel;
import org.openapitools.client.model.UserCultureSubModel;
import org.openapitools.client.model.UserKeywordSubModel;
import org.openapitools.client.model.UserLanguageSubModel;
import org.openapitools.client.model.UserWithFirstNameLastNameAndPhotoFileModel;
import org.openapitools.client.model.UserWorkContractSubModel;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UserOutputModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:00.992903-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UserOutputModel {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_BANK_ACCOUNT_NUMBER = "bankAccountNumber";
  @SerializedName(SERIALIZED_NAME_BANK_ACCOUNT_NUMBER)
  private String bankAccountNumber;

  public static final String SERIALIZED_NAME_BIRTH_DATE = "birthDate";
  @SerializedName(SERIALIZED_NAME_BIRTH_DATE)
  private OffsetDateTime birthDate;

  public static final String SERIALIZED_NAME_BUSINESS_UNIT = "businessUnit";
  @SerializedName(SERIALIZED_NAME_BUSINESS_UNIT)
  private BusinessUnitSubModel businessUnit;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private UserCountrySubModel country;

  public static final String SERIALIZED_NAME_COUNTRY_REGION = "countryRegion";
  @SerializedName(SERIALIZED_NAME_COUNTRY_REGION)
  private ModelWithName countryRegion;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private UserWithFirstNameLastNameAndPhotoFileModel createdBy;

  public static final String SERIALIZED_NAME_CREATED_DATE_TIME = "createdDateTime";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE_TIME)
  private OffsetDateTime createdDateTime;

  public static final String SERIALIZED_NAME_CULTURE = "culture";
  @SerializedName(SERIALIZED_NAME_CULTURE)
  private UserCultureSubModel culture;

  public static final String SERIALIZED_NAME_DEFAULT_ACTIVITY_TYPE = "defaultActivityType";
  @SerializedName(SERIALIZED_NAME_DEFAULT_ACTIVITY_TYPE)
  private ModelWithName defaultActivityType;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "isActive";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive = true;

  public static final String SERIALIZED_NAME_KEYWORDS = "keywords";
  @SerializedName(SERIALIZED_NAME_KEYWORDS)
  private List<UserKeywordSubModel> keywords;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private UserLanguageSubModel language;

  public static final String SERIALIZED_NAME_LAST_LOGIN = "lastLogin";
  @SerializedName(SERIALIZED_NAME_LAST_LOGIN)
  private OffsetDateTime lastLogin;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_LAST_UPDATED_BY = "lastUpdatedBy";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_BY)
  private UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy;

  public static final String SERIALIZED_NAME_LAST_UPDATED_DATE_TIME = "lastUpdatedDateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_DATE_TIME)
  private OffsetDateTime lastUpdatedDateTime;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_PERMISSION_PROFILE = "permissionProfile";
  @SerializedName(SERIALIZED_NAME_PERMISSION_PROFILE)
  private ModelWithName permissionProfile;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_SALUTATION = "salutation";
  @SerializedName(SERIALIZED_NAME_SALUTATION)
  private SalutationType salutation;

  public static final String SERIALIZED_NAME_SATISFACTION = "satisfaction";
  @SerializedName(SERIALIZED_NAME_SATISFACTION)
  private SatisfactionLevelType satisfaction;

  public static final String SERIALIZED_NAME_SOCIAL_SECURITY_NUMBER = "socialSecurityNumber";
  @SerializedName(SERIALIZED_NAME_SOCIAL_SECURITY_NUMBER)
  private String socialSecurityNumber;

  public static final String SERIALIZED_NAME_SUPERIOR_USER = "superiorUser";
  @SerializedName(SERIALIZED_NAME_SUPERIOR_USER)
  private ModelBaseWithRequiredGuid superiorUser;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private TimezoneModel timezone;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_USER_TYPE = "userType";
  @SerializedName(SERIALIZED_NAME_USER_TYPE)
  private LicenseUserType userType;

  public static final String SERIALIZED_NAME_WORK_CONTRACT = "workContract";
  @SerializedName(SERIALIZED_NAME_WORK_CONTRACT)
  private UserWorkContractSubModel workContract;

  public static final String SERIALIZED_NAME_WORK_TYPE = "workType";
  @SerializedName(SERIALIZED_NAME_WORK_TYPE)
  private ModelBaseWithRequiredGuid workType;

  public UserOutputModel() {
  }

  public UserOutputModel(
     OffsetDateTime createdDateTime, 
     String guid, 
     OffsetDateTime lastUpdatedDateTime
  ) {
    this();
    this.createdDateTime = createdDateTime;
    this.guid = guid;
    this.lastUpdatedDateTime = lastUpdatedDateTime;
  }

  public UserOutputModel address(String address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }


  public UserOutputModel bankAccountNumber(String bankAccountNumber) {
    this.bankAccountNumber = bankAccountNumber;
    return this;
  }

  /**
   * Get bankAccountNumber
   * @return bankAccountNumber
   */
  @javax.annotation.Nullable
  public String getBankAccountNumber() {
    return bankAccountNumber;
  }

  public void setBankAccountNumber(String bankAccountNumber) {
    this.bankAccountNumber = bankAccountNumber;
  }


  public UserOutputModel birthDate(OffsetDateTime birthDate) {
    this.birthDate = birthDate;
    return this;
  }

  /**
   * Get birthDate
   * @return birthDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getBirthDate() {
    return birthDate;
  }

  public void setBirthDate(OffsetDateTime birthDate) {
    this.birthDate = birthDate;
  }


  public UserOutputModel businessUnit(BusinessUnitSubModel businessUnit) {
    this.businessUnit = businessUnit;
    return this;
  }

  /**
   * Get businessUnit
   * @return businessUnit
   */
  @javax.annotation.Nullable
  public BusinessUnitSubModel getBusinessUnit() {
    return businessUnit;
  }

  public void setBusinessUnit(BusinessUnitSubModel businessUnit) {
    this.businessUnit = businessUnit;
  }


  public UserOutputModel city(String city) {
    this.city = city;
    return this;
  }

  /**
   * Get city
   * @return city
   */
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }


  public UserOutputModel code(String code) {
    this.code = code;
    return this;
  }

  /**
   * Get code
   * @return code
   */
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }


  public UserOutputModel country(UserCountrySubModel country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nullable
  public UserCountrySubModel getCountry() {
    return country;
  }

  public void setCountry(UserCountrySubModel country) {
    this.country = country;
  }


  public UserOutputModel countryRegion(ModelWithName countryRegion) {
    this.countryRegion = countryRegion;
    return this;
  }

  /**
   * Get countryRegion
   * @return countryRegion
   */
  @javax.annotation.Nullable
  public ModelWithName getCountryRegion() {
    return countryRegion;
  }

  public void setCountryRegion(ModelWithName countryRegion) {
    this.countryRegion = countryRegion;
  }


  public UserOutputModel createdBy(UserWithFirstNameLastNameAndPhotoFileModel createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public UserWithFirstNameLastNameAndPhotoFileModel getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(UserWithFirstNameLastNameAndPhotoFileModel createdBy) {
    this.createdBy = createdBy;
  }


  /**
   * Get createdDateTime
   * @return createdDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDateTime() {
    return createdDateTime;
  }



  public UserOutputModel culture(UserCultureSubModel culture) {
    this.culture = culture;
    return this;
  }

  /**
   * Get culture
   * @return culture
   */
  @javax.annotation.Nullable
  public UserCultureSubModel getCulture() {
    return culture;
  }

  public void setCulture(UserCultureSubModel culture) {
    this.culture = culture;
  }


  public UserOutputModel defaultActivityType(ModelWithName defaultActivityType) {
    this.defaultActivityType = defaultActivityType;
    return this;
  }

  /**
   * Get defaultActivityType
   * @return defaultActivityType
   */
  @javax.annotation.Nullable
  public ModelWithName getDefaultActivityType() {
    return defaultActivityType;
  }

  public void setDefaultActivityType(ModelWithName defaultActivityType) {
    this.defaultActivityType = defaultActivityType;
  }


  public UserOutputModel email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public UserOutputModel firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nonnull
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  /**
   * Get guid
   * @return guid
   */
  @javax.annotation.Nullable
  public String getGuid() {
    return guid;
  }



  public UserOutputModel isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

  /**
   * Get isActive
   * @return isActive
   */
  @javax.annotation.Nullable
  public Boolean getIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  public UserOutputModel keywords(List<UserKeywordSubModel> keywords) {
    this.keywords = keywords;
    return this;
  }

  public UserOutputModel addKeywordsItem(UserKeywordSubModel keywordsItem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<>();
    }
    this.keywords.add(keywordsItem);
    return this;
  }

  /**
   * Get keywords
   * @return keywords
   */
  @javax.annotation.Nullable
  public List<UserKeywordSubModel> getKeywords() {
    return keywords;
  }

  public void setKeywords(List<UserKeywordSubModel> keywords) {
    this.keywords = keywords;
  }


  public UserOutputModel language(UserLanguageSubModel language) {
    this.language = language;
    return this;
  }

  /**
   * Get language
   * @return language
   */
  @javax.annotation.Nullable
  public UserLanguageSubModel getLanguage() {
    return language;
  }

  public void setLanguage(UserLanguageSubModel language) {
    this.language = language;
  }


  public UserOutputModel lastLogin(OffsetDateTime lastLogin) {
    this.lastLogin = lastLogin;
    return this;
  }

  /**
   * Get lastLogin
   * @return lastLogin
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastLogin() {
    return lastLogin;
  }

  public void setLastLogin(OffsetDateTime lastLogin) {
    this.lastLogin = lastLogin;
  }


  public UserOutputModel lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nonnull
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public UserOutputModel lastUpdatedBy(UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
    return this;
  }

  /**
   * Get lastUpdatedBy
   * @return lastUpdatedBy
   */
  @javax.annotation.Nullable
  public UserWithFirstNameLastNameAndPhotoFileModel getLastUpdatedBy() {
    return lastUpdatedBy;
  }

  public void setLastUpdatedBy(UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
  }


  /**
   * Get lastUpdatedDateTime
   * @return lastUpdatedDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedDateTime() {
    return lastUpdatedDateTime;
  }



  public UserOutputModel notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * Get notes
   * @return notes
   */
  @javax.annotation.Nullable
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  public UserOutputModel permissionProfile(ModelWithName permissionProfile) {
    this.permissionProfile = permissionProfile;
    return this;
  }

  /**
   * Get permissionProfile
   * @return permissionProfile
   */
  @javax.annotation.Nullable
  public ModelWithName getPermissionProfile() {
    return permissionProfile;
  }

  public void setPermissionProfile(ModelWithName permissionProfile) {
    this.permissionProfile = permissionProfile;
  }


  public UserOutputModel phone(String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Get phone
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  public UserOutputModel postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Get postalCode
   * @return postalCode
   */
  @javax.annotation.Nullable
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public UserOutputModel salutation(SalutationType salutation) {
    this.salutation = salutation;
    return this;
  }

  /**
   * Get salutation
   * @return salutation
   */
  @javax.annotation.Nullable
  public SalutationType getSalutation() {
    return salutation;
  }

  public void setSalutation(SalutationType salutation) {
    this.salutation = salutation;
  }


  public UserOutputModel satisfaction(SatisfactionLevelType satisfaction) {
    this.satisfaction = satisfaction;
    return this;
  }

  /**
   * Get satisfaction
   * @return satisfaction
   */
  @javax.annotation.Nullable
  public SatisfactionLevelType getSatisfaction() {
    return satisfaction;
  }

  public void setSatisfaction(SatisfactionLevelType satisfaction) {
    this.satisfaction = satisfaction;
  }


  public UserOutputModel socialSecurityNumber(String socialSecurityNumber) {
    this.socialSecurityNumber = socialSecurityNumber;
    return this;
  }

  /**
   * Get socialSecurityNumber
   * @return socialSecurityNumber
   */
  @javax.annotation.Nullable
  public String getSocialSecurityNumber() {
    return socialSecurityNumber;
  }

  public void setSocialSecurityNumber(String socialSecurityNumber) {
    this.socialSecurityNumber = socialSecurityNumber;
  }


  public UserOutputModel superiorUser(ModelBaseWithRequiredGuid superiorUser) {
    this.superiorUser = superiorUser;
    return this;
  }

  /**
   * Get superiorUser
   * @return superiorUser
   */
  @javax.annotation.Nullable
  public ModelBaseWithRequiredGuid getSuperiorUser() {
    return superiorUser;
  }

  public void setSuperiorUser(ModelBaseWithRequiredGuid superiorUser) {
    this.superiorUser = superiorUser;
  }


  public UserOutputModel timezone(TimezoneModel timezone) {
    this.timezone = timezone;
    return this;
  }

  /**
   * Get timezone
   * @return timezone
   */
  @javax.annotation.Nullable
  public TimezoneModel getTimezone() {
    return timezone;
  }

  public void setTimezone(TimezoneModel timezone) {
    this.timezone = timezone;
  }


  public UserOutputModel title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public UserOutputModel userType(LicenseUserType userType) {
    this.userType = userType;
    return this;
  }

  /**
   * Get userType
   * @return userType
   */
  @javax.annotation.Nullable
  public LicenseUserType getUserType() {
    return userType;
  }

  public void setUserType(LicenseUserType userType) {
    this.userType = userType;
  }


  public UserOutputModel workContract(UserWorkContractSubModel workContract) {
    this.workContract = workContract;
    return this;
  }

  /**
   * Get workContract
   * @return workContract
   */
  @javax.annotation.Nullable
  public UserWorkContractSubModel getWorkContract() {
    return workContract;
  }

  public void setWorkContract(UserWorkContractSubModel workContract) {
    this.workContract = workContract;
  }


  public UserOutputModel workType(ModelBaseWithRequiredGuid workType) {
    this.workType = workType;
    return this;
  }

  /**
   * Get workType
   * @return workType
   */
  @javax.annotation.Nullable
  public ModelBaseWithRequiredGuid getWorkType() {
    return workType;
  }

  public void setWorkType(ModelBaseWithRequiredGuid workType) {
    this.workType = workType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserOutputModel userOutputModel = (UserOutputModel) o;
    return Objects.equals(this.address, userOutputModel.address) &&
        Objects.equals(this.bankAccountNumber, userOutputModel.bankAccountNumber) &&
        Objects.equals(this.birthDate, userOutputModel.birthDate) &&
        Objects.equals(this.businessUnit, userOutputModel.businessUnit) &&
        Objects.equals(this.city, userOutputModel.city) &&
        Objects.equals(this.code, userOutputModel.code) &&
        Objects.equals(this.country, userOutputModel.country) &&
        Objects.equals(this.countryRegion, userOutputModel.countryRegion) &&
        Objects.equals(this.createdBy, userOutputModel.createdBy) &&
        Objects.equals(this.createdDateTime, userOutputModel.createdDateTime) &&
        Objects.equals(this.culture, userOutputModel.culture) &&
        Objects.equals(this.defaultActivityType, userOutputModel.defaultActivityType) &&
        Objects.equals(this.email, userOutputModel.email) &&
        Objects.equals(this.firstName, userOutputModel.firstName) &&
        Objects.equals(this.guid, userOutputModel.guid) &&
        Objects.equals(this.isActive, userOutputModel.isActive) &&
        Objects.equals(this.keywords, userOutputModel.keywords) &&
        Objects.equals(this.language, userOutputModel.language) &&
        Objects.equals(this.lastLogin, userOutputModel.lastLogin) &&
        Objects.equals(this.lastName, userOutputModel.lastName) &&
        Objects.equals(this.lastUpdatedBy, userOutputModel.lastUpdatedBy) &&
        Objects.equals(this.lastUpdatedDateTime, userOutputModel.lastUpdatedDateTime) &&
        Objects.equals(this.notes, userOutputModel.notes) &&
        Objects.equals(this.permissionProfile, userOutputModel.permissionProfile) &&
        Objects.equals(this.phone, userOutputModel.phone) &&
        Objects.equals(this.postalCode, userOutputModel.postalCode) &&
        Objects.equals(this.salutation, userOutputModel.salutation) &&
        Objects.equals(this.satisfaction, userOutputModel.satisfaction) &&
        Objects.equals(this.socialSecurityNumber, userOutputModel.socialSecurityNumber) &&
        Objects.equals(this.superiorUser, userOutputModel.superiorUser) &&
        Objects.equals(this.timezone, userOutputModel.timezone) &&
        Objects.equals(this.title, userOutputModel.title) &&
        Objects.equals(this.userType, userOutputModel.userType) &&
        Objects.equals(this.workContract, userOutputModel.workContract) &&
        Objects.equals(this.workType, userOutputModel.workType);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, bankAccountNumber, birthDate, businessUnit, city, code, country, countryRegion, createdBy, createdDateTime, culture, defaultActivityType, email, firstName, guid, isActive, keywords, language, lastLogin, lastName, lastUpdatedBy, lastUpdatedDateTime, notes, permissionProfile, phone, postalCode, salutation, satisfaction, socialSecurityNumber, superiorUser, timezone, title, userType, workContract, workType);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserOutputModel {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    bankAccountNumber: ").append(toIndentedString(bankAccountNumber)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    businessUnit: ").append(toIndentedString(businessUnit)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    countryRegion: ").append(toIndentedString(countryRegion)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdDateTime: ").append(toIndentedString(createdDateTime)).append("\n");
    sb.append("    culture: ").append(toIndentedString(culture)).append("\n");
    sb.append("    defaultActivityType: ").append(toIndentedString(defaultActivityType)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    lastLogin: ").append(toIndentedString(lastLogin)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    lastUpdatedBy: ").append(toIndentedString(lastUpdatedBy)).append("\n");
    sb.append("    lastUpdatedDateTime: ").append(toIndentedString(lastUpdatedDateTime)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    permissionProfile: ").append(toIndentedString(permissionProfile)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    salutation: ").append(toIndentedString(salutation)).append("\n");
    sb.append("    satisfaction: ").append(toIndentedString(satisfaction)).append("\n");
    sb.append("    socialSecurityNumber: ").append(toIndentedString(socialSecurityNumber)).append("\n");
    sb.append("    superiorUser: ").append(toIndentedString(superiorUser)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    userType: ").append(toIndentedString(userType)).append("\n");
    sb.append("    workContract: ").append(toIndentedString(workContract)).append("\n");
    sb.append("    workType: ").append(toIndentedString(workType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("bankAccountNumber");
    openapiFields.add("birthDate");
    openapiFields.add("businessUnit");
    openapiFields.add("city");
    openapiFields.add("code");
    openapiFields.add("country");
    openapiFields.add("countryRegion");
    openapiFields.add("createdBy");
    openapiFields.add("createdDateTime");
    openapiFields.add("culture");
    openapiFields.add("defaultActivityType");
    openapiFields.add("email");
    openapiFields.add("firstName");
    openapiFields.add("guid");
    openapiFields.add("isActive");
    openapiFields.add("keywords");
    openapiFields.add("language");
    openapiFields.add("lastLogin");
    openapiFields.add("lastName");
    openapiFields.add("lastUpdatedBy");
    openapiFields.add("lastUpdatedDateTime");
    openapiFields.add("notes");
    openapiFields.add("permissionProfile");
    openapiFields.add("phone");
    openapiFields.add("postalCode");
    openapiFields.add("salutation");
    openapiFields.add("satisfaction");
    openapiFields.add("socialSecurityNumber");
    openapiFields.add("superiorUser");
    openapiFields.add("timezone");
    openapiFields.add("title");
    openapiFields.add("userType");
    openapiFields.add("workContract");
    openapiFields.add("workType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("firstName");
    openapiRequiredFields.add("lastName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UserOutputModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UserOutputModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserOutputModel is not found in the empty JSON string", UserOutputModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UserOutputModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UserOutputModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UserOutputModel.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) && !jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      if ((jsonObj.get("bankAccountNumber") != null && !jsonObj.get("bankAccountNumber").isJsonNull()) && !jsonObj.get("bankAccountNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bankAccountNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bankAccountNumber").toString()));
      }
      // validate the optional field `businessUnit`
      if (jsonObj.get("businessUnit") != null && !jsonObj.get("businessUnit").isJsonNull()) {
        BusinessUnitSubModel.validateJsonElement(jsonObj.get("businessUnit"));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      // validate the optional field `country`
      if (jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) {
        UserCountrySubModel.validateJsonElement(jsonObj.get("country"));
      }
      // validate the optional field `countryRegion`
      if (jsonObj.get("countryRegion") != null && !jsonObj.get("countryRegion").isJsonNull()) {
        ModelWithName.validateJsonElement(jsonObj.get("countryRegion"));
      }
      // validate the optional field `createdBy`
      if (jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) {
        UserWithFirstNameLastNameAndPhotoFileModel.validateJsonElement(jsonObj.get("createdBy"));
      }
      // validate the optional field `culture`
      if (jsonObj.get("culture") != null && !jsonObj.get("culture").isJsonNull()) {
        UserCultureSubModel.validateJsonElement(jsonObj.get("culture"));
      }
      // validate the optional field `defaultActivityType`
      if (jsonObj.get("defaultActivityType") != null && !jsonObj.get("defaultActivityType").isJsonNull()) {
        ModelWithName.validateJsonElement(jsonObj.get("defaultActivityType"));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (!jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      if (jsonObj.get("keywords") != null && !jsonObj.get("keywords").isJsonNull()) {
        JsonArray jsonArraykeywords = jsonObj.getAsJsonArray("keywords");
        if (jsonArraykeywords != null) {
          // ensure the json data is an array
          if (!jsonObj.get("keywords").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `keywords` to be an array in the JSON string but got `%s`", jsonObj.get("keywords").toString()));
          }

          // validate the optional field `keywords` (array)
          for (int i = 0; i < jsonArraykeywords.size(); i++) {
            UserKeywordSubModel.validateJsonElement(jsonArraykeywords.get(i));
          };
        }
      }
      // validate the optional field `language`
      if (jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) {
        UserLanguageSubModel.validateJsonElement(jsonObj.get("language"));
      }
      if (!jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      // validate the optional field `lastUpdatedBy`
      if (jsonObj.get("lastUpdatedBy") != null && !jsonObj.get("lastUpdatedBy").isJsonNull()) {
        UserWithFirstNameLastNameAndPhotoFileModel.validateJsonElement(jsonObj.get("lastUpdatedBy"));
      }
      if ((jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      // validate the optional field `permissionProfile`
      if (jsonObj.get("permissionProfile") != null && !jsonObj.get("permissionProfile").isJsonNull()) {
        ModelWithName.validateJsonElement(jsonObj.get("permissionProfile"));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("postalCode") != null && !jsonObj.get("postalCode").isJsonNull()) && !jsonObj.get("postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postalCode").toString()));
      }
      // validate the optional field `salutation`
      if (jsonObj.get("salutation") != null && !jsonObj.get("salutation").isJsonNull()) {
        SalutationType.validateJsonElement(jsonObj.get("salutation"));
      }
      // validate the optional field `satisfaction`
      if (jsonObj.get("satisfaction") != null && !jsonObj.get("satisfaction").isJsonNull()) {
        SatisfactionLevelType.validateJsonElement(jsonObj.get("satisfaction"));
      }
      if ((jsonObj.get("socialSecurityNumber") != null && !jsonObj.get("socialSecurityNumber").isJsonNull()) && !jsonObj.get("socialSecurityNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `socialSecurityNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("socialSecurityNumber").toString()));
      }
      // validate the optional field `superiorUser`
      if (jsonObj.get("superiorUser") != null && !jsonObj.get("superiorUser").isJsonNull()) {
        ModelBaseWithRequiredGuid.validateJsonElement(jsonObj.get("superiorUser"));
      }
      // validate the optional field `timezone`
      if (jsonObj.get("timezone") != null && !jsonObj.get("timezone").isJsonNull()) {
        TimezoneModel.validateJsonElement(jsonObj.get("timezone"));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      // validate the optional field `userType`
      if (jsonObj.get("userType") != null && !jsonObj.get("userType").isJsonNull()) {
        LicenseUserType.validateJsonElement(jsonObj.get("userType"));
      }
      // validate the optional field `workContract`
      if (jsonObj.get("workContract") != null && !jsonObj.get("workContract").isJsonNull()) {
        UserWorkContractSubModel.validateJsonElement(jsonObj.get("workContract"));
      }
      // validate the optional field `workType`
      if (jsonObj.get("workType") != null && !jsonObj.get("workType").isJsonNull()) {
        ModelBaseWithRequiredGuid.validateJsonElement(jsonObj.get("workType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserOutputModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserOutputModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserOutputModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserOutputModel.class));

       return (TypeAdapter<T>) new TypeAdapter<UserOutputModel>() {
           @Override
           public void write(JsonWriter out, UserOutputModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserOutputModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UserOutputModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UserOutputModel
   * @throws IOException if the JSON string is invalid with respect to UserOutputModel
   */
  public static UserOutputModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserOutputModel.class);
  }

  /**
   * Convert an instance of UserOutputModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

