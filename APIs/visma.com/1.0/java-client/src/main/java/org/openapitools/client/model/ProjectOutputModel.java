/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BusinessUnitSubModel;
import org.openapitools.client.model.CurrencySubModel2;
import org.openapitools.client.model.CustomerContactSubModel;
import org.openapitools.client.model.ModelWithName;
import org.openapitools.client.model.MoneyOutputModel;
import org.openapitools.client.model.ProjectCostCenterSubModel;
import org.openapitools.client.model.ProjectCustomerSubModel;
import org.openapitools.client.model.ProjectInvoiceTemplateSubModel;
import org.openapitools.client.model.ProjectPricelistSubModel;
import org.openapitools.client.model.ProjectStatusSubModel;
import org.openapitools.client.model.SalesStatusSubModel;
import org.openapitools.client.model.UserWithFirstNameLastNameAndPhotoFileModel;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProjectOutputModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:00.992903-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProjectOutputModel {
  public static final String SERIALIZED_NAME_BILLING_CONTACT = "billingContact";
  @SerializedName(SERIALIZED_NAME_BILLING_CONTACT)
  private UserWithFirstNameLastNameAndPhotoFileModel billingContact;

  public static final String SERIALIZED_NAME_BUSINESS_UNIT = "businessUnit";
  @SerializedName(SERIALIZED_NAME_BUSINESS_UNIT)
  private BusinessUnitSubModel businessUnit;

  public static final String SERIALIZED_NAME_CALCULATED_COMPLETION_PERCENTAGE = "calculatedCompletionPercentage";
  @SerializedName(SERIALIZED_NAME_CALCULATED_COMPLETION_PERCENTAGE)
  private Integer calculatedCompletionPercentage;

  public static final String SERIALIZED_NAME_CLOSED_DATE = "closedDate";
  @SerializedName(SERIALIZED_NAME_CLOSED_DATE)
  private LocalDate closedDate;

  public static final String SERIALIZED_NAME_COMPLETION_ESTIMATE_PERCENTAGE = "completionEstimatePercentage";
  @SerializedName(SERIALIZED_NAME_COMPLETION_ESTIMATE_PERCENTAGE)
  private Integer completionEstimatePercentage;

  public static final String SERIALIZED_NAME_COST_CENTER = "costCenter";
  @SerializedName(SERIALIZED_NAME_COST_CENTER)
  private ProjectCostCenterSubModel costCenter;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private UserWithFirstNameLastNameAndPhotoFileModel createdBy;

  public static final String SERIALIZED_NAME_CREATED_DATE_TIME = "createdDateTime";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE_TIME)
  private OffsetDateTime createdDateTime;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private CurrencySubModel2 currency;

  public static final String SERIALIZED_NAME_CUSTOMER = "customer";
  @SerializedName(SERIALIZED_NAME_CUSTOMER)
  private ProjectCustomerSubModel customer;

  public static final String SERIALIZED_NAME_CUSTOMER_CONTACT = "customerContact";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_CONTACT)
  private CustomerContactSubModel customerContact;

  public static final String SERIALIZED_NAME_DEADLINE = "deadline";
  @SerializedName(SERIALIZED_NAME_DEADLINE)
  private LocalDate deadline;

  public static final String SERIALIZED_NAME_DEFAULT_WORK_TYPE = "defaultWorkType";
  @SerializedName(SERIALIZED_NAME_DEFAULT_WORK_TYPE)
  private ModelWithName defaultWorkType;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EXPECTED_ORDER_DATE = "expectedOrderDate";
  @SerializedName(SERIALIZED_NAME_EXPECTED_ORDER_DATE)
  private LocalDate expectedOrderDate;

  public static final String SERIALIZED_NAME_EXPECTED_VALUE = "expectedValue";
  @SerializedName(SERIALIZED_NAME_EXPECTED_VALUE)
  private MoneyOutputModel expectedValue;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_INTERNAL_NAME = "internalName";
  @SerializedName(SERIALIZED_NAME_INTERNAL_NAME)
  private String internalName;

  public static final String SERIALIZED_NAME_INVOICE_NOTES = "invoiceNotes";
  @SerializedName(SERIALIZED_NAME_INVOICE_NOTES)
  private String invoiceNotes;

  public static final String SERIALIZED_NAME_INVOICE_TEMPLATE = "invoiceTemplate";
  @SerializedName(SERIALIZED_NAME_INVOICE_TEMPLATE)
  private ProjectInvoiceTemplateSubModel invoiceTemplate;

  public static final String SERIALIZED_NAME_IS_CLOSED = "isClosed";
  @SerializedName(SERIALIZED_NAME_IS_CLOSED)
  private Boolean isClosed;

  public static final String SERIALIZED_NAME_IS_DAILY_ALLOWANCE_BILLABLE = "isDailyAllowanceBillable";
  @SerializedName(SERIALIZED_NAME_IS_DAILY_ALLOWANCE_BILLABLE)
  private Boolean isDailyAllowanceBillable;

  public static final String SERIALIZED_NAME_IS_INTERNAL = "isInternal";
  @SerializedName(SERIALIZED_NAME_IS_INTERNAL)
  private Boolean isInternal;

  public static final String SERIALIZED_NAME_IS_JOINING_ALLOWED = "isJoiningAllowed";
  @SerializedName(SERIALIZED_NAME_IS_JOINING_ALLOWED)
  private Boolean isJoiningAllowed = true;

  public static final String SERIALIZED_NAME_IS_MILEAGE_BILLABLE = "isMileageBillable";
  @SerializedName(SERIALIZED_NAME_IS_MILEAGE_BILLABLE)
  private Boolean isMileageBillable;

  public static final String SERIALIZED_NAME_IS_OTHER_TRAVEL_EXPENSES_BILLABLE = "isOtherTravelExpensesBillable";
  @SerializedName(SERIALIZED_NAME_IS_OTHER_TRAVEL_EXPENSES_BILLABLE)
  private Boolean isOtherTravelExpensesBillable;

  public static final String SERIALIZED_NAME_KEYWORDS = "keywords";
  @SerializedName(SERIALIZED_NAME_KEYWORDS)
  private List<ModelWithName> keywords;

  public static final String SERIALIZED_NAME_LAST_UPDATED_BY = "lastUpdatedBy";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_BY)
  private UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy;

  public static final String SERIALIZED_NAME_LAST_UPDATED_DATE_TIME = "lastUpdatedDateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_DATE_TIME)
  private OffsetDateTime lastUpdatedDateTime;

  public static final String SERIALIZED_NAME_LEAD_SOURCE = "leadSource";
  @SerializedName(SERIALIZED_NAME_LEAD_SOURCE)
  private ModelWithName leadSource;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NUMBER = "number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private Long number;

  public static final String SERIALIZED_NAME_ORDER_NUMBER = "orderNumber";
  @SerializedName(SERIALIZED_NAME_ORDER_NUMBER)
  private String orderNumber;

  public static final String SERIALIZED_NAME_OUR_REFERENCE = "ourReference";
  @SerializedName(SERIALIZED_NAME_OUR_REFERENCE)
  private String ourReference;

  public static final String SERIALIZED_NAME_PAYMENT_TERM = "paymentTerm";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TERM)
  private Integer paymentTerm;

  public static final String SERIALIZED_NAME_PRICELIST = "pricelist";
  @SerializedName(SERIALIZED_NAME_PRICELIST)
  private ProjectPricelistSubModel pricelist;

  public static final String SERIALIZED_NAME_PROBABILITY = "probability";
  @SerializedName(SERIALIZED_NAME_PROBABILITY)
  private Integer probability;

  public static final String SERIALIZED_NAME_PROJECT_OWNER = "projectOwner";
  @SerializedName(SERIALIZED_NAME_PROJECT_OWNER)
  private UserWithFirstNameLastNameAndPhotoFileModel projectOwner;

  public static final String SERIALIZED_NAME_PROJECT_STATUS = "projectStatus";
  @SerializedName(SERIALIZED_NAME_PROJECT_STATUS)
  private ProjectStatusSubModel projectStatus;

  public static final String SERIALIZED_NAME_ROOT_PHASE = "rootPhase";
  @SerializedName(SERIALIZED_NAME_ROOT_PHASE)
  private ModelWithName rootPhase;

  public static final String SERIALIZED_NAME_SALES_PERSON = "salesPerson";
  @SerializedName(SERIALIZED_NAME_SALES_PERSON)
  private UserWithFirstNameLastNameAndPhotoFileModel salesPerson;

  public static final String SERIALIZED_NAME_SALES_STATUS = "salesStatus";
  @SerializedName(SERIALIZED_NAME_SALES_STATUS)
  private SalesStatusSubModel salesStatus;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private LocalDate startDate;

  public static final String SERIALIZED_NAME_USE_OVERTIME_MULTIPLIERS = "useOvertimeMultipliers";
  @SerializedName(SERIALIZED_NAME_USE_OVERTIME_MULTIPLIERS)
  private Boolean useOvertimeMultipliers = true;

  public static final String SERIALIZED_NAME_USE_PRODUCTS_FROM_SETTING = "useProductsFromSetting";
  @SerializedName(SERIALIZED_NAME_USE_PRODUCTS_FROM_SETTING)
  private Boolean useProductsFromSetting = true;

  public static final String SERIALIZED_NAME_USE_WORK_TYPES_FROM_SETTING = "useWorkTypesFromSetting";
  @SerializedName(SERIALIZED_NAME_USE_WORK_TYPES_FROM_SETTING)
  private Boolean useWorkTypesFromSetting = true;

  public static final String SERIALIZED_NAME_YOUR_REFERENCE = "yourReference";
  @SerializedName(SERIALIZED_NAME_YOUR_REFERENCE)
  private String yourReference;

  public ProjectOutputModel() {
  }

  public ProjectOutputModel(
     OffsetDateTime createdDateTime, 
     String guid, 
     OffsetDateTime lastUpdatedDateTime
  ) {
    this();
    this.createdDateTime = createdDateTime;
    this.guid = guid;
    this.lastUpdatedDateTime = lastUpdatedDateTime;
  }

  public ProjectOutputModel billingContact(UserWithFirstNameLastNameAndPhotoFileModel billingContact) {
    this.billingContact = billingContact;
    return this;
  }

  /**
   * Get billingContact
   * @return billingContact
   */
  @javax.annotation.Nullable
  public UserWithFirstNameLastNameAndPhotoFileModel getBillingContact() {
    return billingContact;
  }

  public void setBillingContact(UserWithFirstNameLastNameAndPhotoFileModel billingContact) {
    this.billingContact = billingContact;
  }


  public ProjectOutputModel businessUnit(BusinessUnitSubModel businessUnit) {
    this.businessUnit = businessUnit;
    return this;
  }

  /**
   * Get businessUnit
   * @return businessUnit
   */
  @javax.annotation.Nullable
  public BusinessUnitSubModel getBusinessUnit() {
    return businessUnit;
  }

  public void setBusinessUnit(BusinessUnitSubModel businessUnit) {
    this.businessUnit = businessUnit;
  }


  public ProjectOutputModel calculatedCompletionPercentage(Integer calculatedCompletionPercentage) {
    this.calculatedCompletionPercentage = calculatedCompletionPercentage;
    return this;
  }

  /**
   * Get calculatedCompletionPercentage
   * @return calculatedCompletionPercentage
   */
  @javax.annotation.Nullable
  public Integer getCalculatedCompletionPercentage() {
    return calculatedCompletionPercentage;
  }

  public void setCalculatedCompletionPercentage(Integer calculatedCompletionPercentage) {
    this.calculatedCompletionPercentage = calculatedCompletionPercentage;
  }


  public ProjectOutputModel closedDate(LocalDate closedDate) {
    this.closedDate = closedDate;
    return this;
  }

  /**
   * Get closedDate
   * @return closedDate
   */
  @javax.annotation.Nullable
  public LocalDate getClosedDate() {
    return closedDate;
  }

  public void setClosedDate(LocalDate closedDate) {
    this.closedDate = closedDate;
  }


  public ProjectOutputModel completionEstimatePercentage(Integer completionEstimatePercentage) {
    this.completionEstimatePercentage = completionEstimatePercentage;
    return this;
  }

  /**
   * Get completionEstimatePercentage
   * @return completionEstimatePercentage
   */
  @javax.annotation.Nullable
  public Integer getCompletionEstimatePercentage() {
    return completionEstimatePercentage;
  }

  public void setCompletionEstimatePercentage(Integer completionEstimatePercentage) {
    this.completionEstimatePercentage = completionEstimatePercentage;
  }


  public ProjectOutputModel costCenter(ProjectCostCenterSubModel costCenter) {
    this.costCenter = costCenter;
    return this;
  }

  /**
   * Get costCenter
   * @return costCenter
   */
  @javax.annotation.Nullable
  public ProjectCostCenterSubModel getCostCenter() {
    return costCenter;
  }

  public void setCostCenter(ProjectCostCenterSubModel costCenter) {
    this.costCenter = costCenter;
  }


  public ProjectOutputModel createdBy(UserWithFirstNameLastNameAndPhotoFileModel createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public UserWithFirstNameLastNameAndPhotoFileModel getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(UserWithFirstNameLastNameAndPhotoFileModel createdBy) {
    this.createdBy = createdBy;
  }


  /**
   * Get createdDateTime
   * @return createdDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDateTime() {
    return createdDateTime;
  }



  public ProjectOutputModel currency(CurrencySubModel2 currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  public CurrencySubModel2 getCurrency() {
    return currency;
  }

  public void setCurrency(CurrencySubModel2 currency) {
    this.currency = currency;
  }


  public ProjectOutputModel customer(ProjectCustomerSubModel customer) {
    this.customer = customer;
    return this;
  }

  /**
   * Get customer
   * @return customer
   */
  @javax.annotation.Nullable
  public ProjectCustomerSubModel getCustomer() {
    return customer;
  }

  public void setCustomer(ProjectCustomerSubModel customer) {
    this.customer = customer;
  }


  public ProjectOutputModel customerContact(CustomerContactSubModel customerContact) {
    this.customerContact = customerContact;
    return this;
  }

  /**
   * Get customerContact
   * @return customerContact
   */
  @javax.annotation.Nullable
  public CustomerContactSubModel getCustomerContact() {
    return customerContact;
  }

  public void setCustomerContact(CustomerContactSubModel customerContact) {
    this.customerContact = customerContact;
  }


  public ProjectOutputModel deadline(LocalDate deadline) {
    this.deadline = deadline;
    return this;
  }

  /**
   * Get deadline
   * @return deadline
   */
  @javax.annotation.Nullable
  public LocalDate getDeadline() {
    return deadline;
  }

  public void setDeadline(LocalDate deadline) {
    this.deadline = deadline;
  }


  public ProjectOutputModel defaultWorkType(ModelWithName defaultWorkType) {
    this.defaultWorkType = defaultWorkType;
    return this;
  }

  /**
   * Get defaultWorkType
   * @return defaultWorkType
   */
  @javax.annotation.Nullable
  public ModelWithName getDefaultWorkType() {
    return defaultWorkType;
  }

  public void setDefaultWorkType(ModelWithName defaultWorkType) {
    this.defaultWorkType = defaultWorkType;
  }


  public ProjectOutputModel description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ProjectOutputModel expectedOrderDate(LocalDate expectedOrderDate) {
    this.expectedOrderDate = expectedOrderDate;
    return this;
  }

  /**
   * Get expectedOrderDate
   * @return expectedOrderDate
   */
  @javax.annotation.Nullable
  public LocalDate getExpectedOrderDate() {
    return expectedOrderDate;
  }

  public void setExpectedOrderDate(LocalDate expectedOrderDate) {
    this.expectedOrderDate = expectedOrderDate;
  }


  public ProjectOutputModel expectedValue(MoneyOutputModel expectedValue) {
    this.expectedValue = expectedValue;
    return this;
  }

  /**
   * Get expectedValue
   * @return expectedValue
   */
  @javax.annotation.Nullable
  public MoneyOutputModel getExpectedValue() {
    return expectedValue;
  }

  public void setExpectedValue(MoneyOutputModel expectedValue) {
    this.expectedValue = expectedValue;
  }


  /**
   * Get guid
   * @return guid
   */
  @javax.annotation.Nullable
  public String getGuid() {
    return guid;
  }



  public ProjectOutputModel internalName(String internalName) {
    this.internalName = internalName;
    return this;
  }

  /**
   * Get internalName
   * @return internalName
   */
  @javax.annotation.Nullable
  public String getInternalName() {
    return internalName;
  }

  public void setInternalName(String internalName) {
    this.internalName = internalName;
  }


  public ProjectOutputModel invoiceNotes(String invoiceNotes) {
    this.invoiceNotes = invoiceNotes;
    return this;
  }

  /**
   * Get invoiceNotes
   * @return invoiceNotes
   */
  @javax.annotation.Nullable
  public String getInvoiceNotes() {
    return invoiceNotes;
  }

  public void setInvoiceNotes(String invoiceNotes) {
    this.invoiceNotes = invoiceNotes;
  }


  public ProjectOutputModel invoiceTemplate(ProjectInvoiceTemplateSubModel invoiceTemplate) {
    this.invoiceTemplate = invoiceTemplate;
    return this;
  }

  /**
   * Get invoiceTemplate
   * @return invoiceTemplate
   */
  @javax.annotation.Nullable
  public ProjectInvoiceTemplateSubModel getInvoiceTemplate() {
    return invoiceTemplate;
  }

  public void setInvoiceTemplate(ProjectInvoiceTemplateSubModel invoiceTemplate) {
    this.invoiceTemplate = invoiceTemplate;
  }


  public ProjectOutputModel isClosed(Boolean isClosed) {
    this.isClosed = isClosed;
    return this;
  }

  /**
   * Get isClosed
   * @return isClosed
   */
  @javax.annotation.Nullable
  public Boolean getIsClosed() {
    return isClosed;
  }

  public void setIsClosed(Boolean isClosed) {
    this.isClosed = isClosed;
  }


  public ProjectOutputModel isDailyAllowanceBillable(Boolean isDailyAllowanceBillable) {
    this.isDailyAllowanceBillable = isDailyAllowanceBillable;
    return this;
  }

  /**
   * Get isDailyAllowanceBillable
   * @return isDailyAllowanceBillable
   */
  @javax.annotation.Nullable
  public Boolean getIsDailyAllowanceBillable() {
    return isDailyAllowanceBillable;
  }

  public void setIsDailyAllowanceBillable(Boolean isDailyAllowanceBillable) {
    this.isDailyAllowanceBillable = isDailyAllowanceBillable;
  }


  public ProjectOutputModel isInternal(Boolean isInternal) {
    this.isInternal = isInternal;
    return this;
  }

  /**
   * Get isInternal
   * @return isInternal
   */
  @javax.annotation.Nullable
  public Boolean getIsInternal() {
    return isInternal;
  }

  public void setIsInternal(Boolean isInternal) {
    this.isInternal = isInternal;
  }


  public ProjectOutputModel isJoiningAllowed(Boolean isJoiningAllowed) {
    this.isJoiningAllowed = isJoiningAllowed;
    return this;
  }

  /**
   * Get isJoiningAllowed
   * @return isJoiningAllowed
   */
  @javax.annotation.Nullable
  public Boolean getIsJoiningAllowed() {
    return isJoiningAllowed;
  }

  public void setIsJoiningAllowed(Boolean isJoiningAllowed) {
    this.isJoiningAllowed = isJoiningAllowed;
  }


  public ProjectOutputModel isMileageBillable(Boolean isMileageBillable) {
    this.isMileageBillable = isMileageBillable;
    return this;
  }

  /**
   * Get isMileageBillable
   * @return isMileageBillable
   */
  @javax.annotation.Nullable
  public Boolean getIsMileageBillable() {
    return isMileageBillable;
  }

  public void setIsMileageBillable(Boolean isMileageBillable) {
    this.isMileageBillable = isMileageBillable;
  }


  public ProjectOutputModel isOtherTravelExpensesBillable(Boolean isOtherTravelExpensesBillable) {
    this.isOtherTravelExpensesBillable = isOtherTravelExpensesBillable;
    return this;
  }

  /**
   * Get isOtherTravelExpensesBillable
   * @return isOtherTravelExpensesBillable
   */
  @javax.annotation.Nullable
  public Boolean getIsOtherTravelExpensesBillable() {
    return isOtherTravelExpensesBillable;
  }

  public void setIsOtherTravelExpensesBillable(Boolean isOtherTravelExpensesBillable) {
    this.isOtherTravelExpensesBillable = isOtherTravelExpensesBillable;
  }


  public ProjectOutputModel keywords(List<ModelWithName> keywords) {
    this.keywords = keywords;
    return this;
  }

  public ProjectOutputModel addKeywordsItem(ModelWithName keywordsItem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<>();
    }
    this.keywords.add(keywordsItem);
    return this;
  }

  /**
   * Get keywords
   * @return keywords
   */
  @javax.annotation.Nullable
  public List<ModelWithName> getKeywords() {
    return keywords;
  }

  public void setKeywords(List<ModelWithName> keywords) {
    this.keywords = keywords;
  }


  public ProjectOutputModel lastUpdatedBy(UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
    return this;
  }

  /**
   * Get lastUpdatedBy
   * @return lastUpdatedBy
   */
  @javax.annotation.Nullable
  public UserWithFirstNameLastNameAndPhotoFileModel getLastUpdatedBy() {
    return lastUpdatedBy;
  }

  public void setLastUpdatedBy(UserWithFirstNameLastNameAndPhotoFileModel lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
  }


  /**
   * Get lastUpdatedDateTime
   * @return lastUpdatedDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedDateTime() {
    return lastUpdatedDateTime;
  }



  public ProjectOutputModel leadSource(ModelWithName leadSource) {
    this.leadSource = leadSource;
    return this;
  }

  /**
   * Get leadSource
   * @return leadSource
   */
  @javax.annotation.Nullable
  public ModelWithName getLeadSource() {
    return leadSource;
  }

  public void setLeadSource(ModelWithName leadSource) {
    this.leadSource = leadSource;
  }


  public ProjectOutputModel name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ProjectOutputModel number(Long number) {
    this.number = number;
    return this;
  }

  /**
   * Get number
   * @return number
   */
  @javax.annotation.Nullable
  public Long getNumber() {
    return number;
  }

  public void setNumber(Long number) {
    this.number = number;
  }


  public ProjectOutputModel orderNumber(String orderNumber) {
    this.orderNumber = orderNumber;
    return this;
  }

  /**
   * Get orderNumber
   * @return orderNumber
   */
  @javax.annotation.Nullable
  public String getOrderNumber() {
    return orderNumber;
  }

  public void setOrderNumber(String orderNumber) {
    this.orderNumber = orderNumber;
  }


  public ProjectOutputModel ourReference(String ourReference) {
    this.ourReference = ourReference;
    return this;
  }

  /**
   * Get ourReference
   * @return ourReference
   */
  @javax.annotation.Nullable
  public String getOurReference() {
    return ourReference;
  }

  public void setOurReference(String ourReference) {
    this.ourReference = ourReference;
  }


  public ProjectOutputModel paymentTerm(Integer paymentTerm) {
    this.paymentTerm = paymentTerm;
    return this;
  }

  /**
   * Get paymentTerm
   * @return paymentTerm
   */
  @javax.annotation.Nullable
  public Integer getPaymentTerm() {
    return paymentTerm;
  }

  public void setPaymentTerm(Integer paymentTerm) {
    this.paymentTerm = paymentTerm;
  }


  public ProjectOutputModel pricelist(ProjectPricelistSubModel pricelist) {
    this.pricelist = pricelist;
    return this;
  }

  /**
   * Get pricelist
   * @return pricelist
   */
  @javax.annotation.Nullable
  public ProjectPricelistSubModel getPricelist() {
    return pricelist;
  }

  public void setPricelist(ProjectPricelistSubModel pricelist) {
    this.pricelist = pricelist;
  }


  public ProjectOutputModel probability(Integer probability) {
    this.probability = probability;
    return this;
  }

  /**
   * Get probability
   * @return probability
   */
  @javax.annotation.Nullable
  public Integer getProbability() {
    return probability;
  }

  public void setProbability(Integer probability) {
    this.probability = probability;
  }


  public ProjectOutputModel projectOwner(UserWithFirstNameLastNameAndPhotoFileModel projectOwner) {
    this.projectOwner = projectOwner;
    return this;
  }

  /**
   * Get projectOwner
   * @return projectOwner
   */
  @javax.annotation.Nullable
  public UserWithFirstNameLastNameAndPhotoFileModel getProjectOwner() {
    return projectOwner;
  }

  public void setProjectOwner(UserWithFirstNameLastNameAndPhotoFileModel projectOwner) {
    this.projectOwner = projectOwner;
  }


  public ProjectOutputModel projectStatus(ProjectStatusSubModel projectStatus) {
    this.projectStatus = projectStatus;
    return this;
  }

  /**
   * Get projectStatus
   * @return projectStatus
   */
  @javax.annotation.Nullable
  public ProjectStatusSubModel getProjectStatus() {
    return projectStatus;
  }

  public void setProjectStatus(ProjectStatusSubModel projectStatus) {
    this.projectStatus = projectStatus;
  }


  public ProjectOutputModel rootPhase(ModelWithName rootPhase) {
    this.rootPhase = rootPhase;
    return this;
  }

  /**
   * Get rootPhase
   * @return rootPhase
   */
  @javax.annotation.Nullable
  public ModelWithName getRootPhase() {
    return rootPhase;
  }

  public void setRootPhase(ModelWithName rootPhase) {
    this.rootPhase = rootPhase;
  }


  public ProjectOutputModel salesPerson(UserWithFirstNameLastNameAndPhotoFileModel salesPerson) {
    this.salesPerson = salesPerson;
    return this;
  }

  /**
   * Get salesPerson
   * @return salesPerson
   */
  @javax.annotation.Nullable
  public UserWithFirstNameLastNameAndPhotoFileModel getSalesPerson() {
    return salesPerson;
  }

  public void setSalesPerson(UserWithFirstNameLastNameAndPhotoFileModel salesPerson) {
    this.salesPerson = salesPerson;
  }


  public ProjectOutputModel salesStatus(SalesStatusSubModel salesStatus) {
    this.salesStatus = salesStatus;
    return this;
  }

  /**
   * Get salesStatus
   * @return salesStatus
   */
  @javax.annotation.Nullable
  public SalesStatusSubModel getSalesStatus() {
    return salesStatus;
  }

  public void setSalesStatus(SalesStatusSubModel salesStatus) {
    this.salesStatus = salesStatus;
  }


  public ProjectOutputModel startDate(LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nullable
  public LocalDate getStartDate() {
    return startDate;
  }

  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }


  public ProjectOutputModel useOvertimeMultipliers(Boolean useOvertimeMultipliers) {
    this.useOvertimeMultipliers = useOvertimeMultipliers;
    return this;
  }

  /**
   * Get useOvertimeMultipliers
   * @return useOvertimeMultipliers
   */
  @javax.annotation.Nullable
  public Boolean getUseOvertimeMultipliers() {
    return useOvertimeMultipliers;
  }

  public void setUseOvertimeMultipliers(Boolean useOvertimeMultipliers) {
    this.useOvertimeMultipliers = useOvertimeMultipliers;
  }


  public ProjectOutputModel useProductsFromSetting(Boolean useProductsFromSetting) {
    this.useProductsFromSetting = useProductsFromSetting;
    return this;
  }

  /**
   * Get useProductsFromSetting
   * @return useProductsFromSetting
   */
  @javax.annotation.Nullable
  public Boolean getUseProductsFromSetting() {
    return useProductsFromSetting;
  }

  public void setUseProductsFromSetting(Boolean useProductsFromSetting) {
    this.useProductsFromSetting = useProductsFromSetting;
  }


  public ProjectOutputModel useWorkTypesFromSetting(Boolean useWorkTypesFromSetting) {
    this.useWorkTypesFromSetting = useWorkTypesFromSetting;
    return this;
  }

  /**
   * Get useWorkTypesFromSetting
   * @return useWorkTypesFromSetting
   */
  @javax.annotation.Nullable
  public Boolean getUseWorkTypesFromSetting() {
    return useWorkTypesFromSetting;
  }

  public void setUseWorkTypesFromSetting(Boolean useWorkTypesFromSetting) {
    this.useWorkTypesFromSetting = useWorkTypesFromSetting;
  }


  public ProjectOutputModel yourReference(String yourReference) {
    this.yourReference = yourReference;
    return this;
  }

  /**
   * Get yourReference
   * @return yourReference
   */
  @javax.annotation.Nullable
  public String getYourReference() {
    return yourReference;
  }

  public void setYourReference(String yourReference) {
    this.yourReference = yourReference;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectOutputModel projectOutputModel = (ProjectOutputModel) o;
    return Objects.equals(this.billingContact, projectOutputModel.billingContact) &&
        Objects.equals(this.businessUnit, projectOutputModel.businessUnit) &&
        Objects.equals(this.calculatedCompletionPercentage, projectOutputModel.calculatedCompletionPercentage) &&
        Objects.equals(this.closedDate, projectOutputModel.closedDate) &&
        Objects.equals(this.completionEstimatePercentage, projectOutputModel.completionEstimatePercentage) &&
        Objects.equals(this.costCenter, projectOutputModel.costCenter) &&
        Objects.equals(this.createdBy, projectOutputModel.createdBy) &&
        Objects.equals(this.createdDateTime, projectOutputModel.createdDateTime) &&
        Objects.equals(this.currency, projectOutputModel.currency) &&
        Objects.equals(this.customer, projectOutputModel.customer) &&
        Objects.equals(this.customerContact, projectOutputModel.customerContact) &&
        Objects.equals(this.deadline, projectOutputModel.deadline) &&
        Objects.equals(this.defaultWorkType, projectOutputModel.defaultWorkType) &&
        Objects.equals(this.description, projectOutputModel.description) &&
        Objects.equals(this.expectedOrderDate, projectOutputModel.expectedOrderDate) &&
        Objects.equals(this.expectedValue, projectOutputModel.expectedValue) &&
        Objects.equals(this.guid, projectOutputModel.guid) &&
        Objects.equals(this.internalName, projectOutputModel.internalName) &&
        Objects.equals(this.invoiceNotes, projectOutputModel.invoiceNotes) &&
        Objects.equals(this.invoiceTemplate, projectOutputModel.invoiceTemplate) &&
        Objects.equals(this.isClosed, projectOutputModel.isClosed) &&
        Objects.equals(this.isDailyAllowanceBillable, projectOutputModel.isDailyAllowanceBillable) &&
        Objects.equals(this.isInternal, projectOutputModel.isInternal) &&
        Objects.equals(this.isJoiningAllowed, projectOutputModel.isJoiningAllowed) &&
        Objects.equals(this.isMileageBillable, projectOutputModel.isMileageBillable) &&
        Objects.equals(this.isOtherTravelExpensesBillable, projectOutputModel.isOtherTravelExpensesBillable) &&
        Objects.equals(this.keywords, projectOutputModel.keywords) &&
        Objects.equals(this.lastUpdatedBy, projectOutputModel.lastUpdatedBy) &&
        Objects.equals(this.lastUpdatedDateTime, projectOutputModel.lastUpdatedDateTime) &&
        Objects.equals(this.leadSource, projectOutputModel.leadSource) &&
        Objects.equals(this.name, projectOutputModel.name) &&
        Objects.equals(this.number, projectOutputModel.number) &&
        Objects.equals(this.orderNumber, projectOutputModel.orderNumber) &&
        Objects.equals(this.ourReference, projectOutputModel.ourReference) &&
        Objects.equals(this.paymentTerm, projectOutputModel.paymentTerm) &&
        Objects.equals(this.pricelist, projectOutputModel.pricelist) &&
        Objects.equals(this.probability, projectOutputModel.probability) &&
        Objects.equals(this.projectOwner, projectOutputModel.projectOwner) &&
        Objects.equals(this.projectStatus, projectOutputModel.projectStatus) &&
        Objects.equals(this.rootPhase, projectOutputModel.rootPhase) &&
        Objects.equals(this.salesPerson, projectOutputModel.salesPerson) &&
        Objects.equals(this.salesStatus, projectOutputModel.salesStatus) &&
        Objects.equals(this.startDate, projectOutputModel.startDate) &&
        Objects.equals(this.useOvertimeMultipliers, projectOutputModel.useOvertimeMultipliers) &&
        Objects.equals(this.useProductsFromSetting, projectOutputModel.useProductsFromSetting) &&
        Objects.equals(this.useWorkTypesFromSetting, projectOutputModel.useWorkTypesFromSetting) &&
        Objects.equals(this.yourReference, projectOutputModel.yourReference);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(billingContact, businessUnit, calculatedCompletionPercentage, closedDate, completionEstimatePercentage, costCenter, createdBy, createdDateTime, currency, customer, customerContact, deadline, defaultWorkType, description, expectedOrderDate, expectedValue, guid, internalName, invoiceNotes, invoiceTemplate, isClosed, isDailyAllowanceBillable, isInternal, isJoiningAllowed, isMileageBillable, isOtherTravelExpensesBillable, keywords, lastUpdatedBy, lastUpdatedDateTime, leadSource, name, number, orderNumber, ourReference, paymentTerm, pricelist, probability, projectOwner, projectStatus, rootPhase, salesPerson, salesStatus, startDate, useOvertimeMultipliers, useProductsFromSetting, useWorkTypesFromSetting, yourReference);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectOutputModel {\n");
    sb.append("    billingContact: ").append(toIndentedString(billingContact)).append("\n");
    sb.append("    businessUnit: ").append(toIndentedString(businessUnit)).append("\n");
    sb.append("    calculatedCompletionPercentage: ").append(toIndentedString(calculatedCompletionPercentage)).append("\n");
    sb.append("    closedDate: ").append(toIndentedString(closedDate)).append("\n");
    sb.append("    completionEstimatePercentage: ").append(toIndentedString(completionEstimatePercentage)).append("\n");
    sb.append("    costCenter: ").append(toIndentedString(costCenter)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdDateTime: ").append(toIndentedString(createdDateTime)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    customerContact: ").append(toIndentedString(customerContact)).append("\n");
    sb.append("    deadline: ").append(toIndentedString(deadline)).append("\n");
    sb.append("    defaultWorkType: ").append(toIndentedString(defaultWorkType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    expectedOrderDate: ").append(toIndentedString(expectedOrderDate)).append("\n");
    sb.append("    expectedValue: ").append(toIndentedString(expectedValue)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    internalName: ").append(toIndentedString(internalName)).append("\n");
    sb.append("    invoiceNotes: ").append(toIndentedString(invoiceNotes)).append("\n");
    sb.append("    invoiceTemplate: ").append(toIndentedString(invoiceTemplate)).append("\n");
    sb.append("    isClosed: ").append(toIndentedString(isClosed)).append("\n");
    sb.append("    isDailyAllowanceBillable: ").append(toIndentedString(isDailyAllowanceBillable)).append("\n");
    sb.append("    isInternal: ").append(toIndentedString(isInternal)).append("\n");
    sb.append("    isJoiningAllowed: ").append(toIndentedString(isJoiningAllowed)).append("\n");
    sb.append("    isMileageBillable: ").append(toIndentedString(isMileageBillable)).append("\n");
    sb.append("    isOtherTravelExpensesBillable: ").append(toIndentedString(isOtherTravelExpensesBillable)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    lastUpdatedBy: ").append(toIndentedString(lastUpdatedBy)).append("\n");
    sb.append("    lastUpdatedDateTime: ").append(toIndentedString(lastUpdatedDateTime)).append("\n");
    sb.append("    leadSource: ").append(toIndentedString(leadSource)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    ourReference: ").append(toIndentedString(ourReference)).append("\n");
    sb.append("    paymentTerm: ").append(toIndentedString(paymentTerm)).append("\n");
    sb.append("    pricelist: ").append(toIndentedString(pricelist)).append("\n");
    sb.append("    probability: ").append(toIndentedString(probability)).append("\n");
    sb.append("    projectOwner: ").append(toIndentedString(projectOwner)).append("\n");
    sb.append("    projectStatus: ").append(toIndentedString(projectStatus)).append("\n");
    sb.append("    rootPhase: ").append(toIndentedString(rootPhase)).append("\n");
    sb.append("    salesPerson: ").append(toIndentedString(salesPerson)).append("\n");
    sb.append("    salesStatus: ").append(toIndentedString(salesStatus)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    useOvertimeMultipliers: ").append(toIndentedString(useOvertimeMultipliers)).append("\n");
    sb.append("    useProductsFromSetting: ").append(toIndentedString(useProductsFromSetting)).append("\n");
    sb.append("    useWorkTypesFromSetting: ").append(toIndentedString(useWorkTypesFromSetting)).append("\n");
    sb.append("    yourReference: ").append(toIndentedString(yourReference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("billingContact");
    openapiFields.add("businessUnit");
    openapiFields.add("calculatedCompletionPercentage");
    openapiFields.add("closedDate");
    openapiFields.add("completionEstimatePercentage");
    openapiFields.add("costCenter");
    openapiFields.add("createdBy");
    openapiFields.add("createdDateTime");
    openapiFields.add("currency");
    openapiFields.add("customer");
    openapiFields.add("customerContact");
    openapiFields.add("deadline");
    openapiFields.add("defaultWorkType");
    openapiFields.add("description");
    openapiFields.add("expectedOrderDate");
    openapiFields.add("expectedValue");
    openapiFields.add("guid");
    openapiFields.add("internalName");
    openapiFields.add("invoiceNotes");
    openapiFields.add("invoiceTemplate");
    openapiFields.add("isClosed");
    openapiFields.add("isDailyAllowanceBillable");
    openapiFields.add("isInternal");
    openapiFields.add("isJoiningAllowed");
    openapiFields.add("isMileageBillable");
    openapiFields.add("isOtherTravelExpensesBillable");
    openapiFields.add("keywords");
    openapiFields.add("lastUpdatedBy");
    openapiFields.add("lastUpdatedDateTime");
    openapiFields.add("leadSource");
    openapiFields.add("name");
    openapiFields.add("number");
    openapiFields.add("orderNumber");
    openapiFields.add("ourReference");
    openapiFields.add("paymentTerm");
    openapiFields.add("pricelist");
    openapiFields.add("probability");
    openapiFields.add("projectOwner");
    openapiFields.add("projectStatus");
    openapiFields.add("rootPhase");
    openapiFields.add("salesPerson");
    openapiFields.add("salesStatus");
    openapiFields.add("startDate");
    openapiFields.add("useOvertimeMultipliers");
    openapiFields.add("useProductsFromSetting");
    openapiFields.add("useWorkTypesFromSetting");
    openapiFields.add("yourReference");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProjectOutputModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProjectOutputModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProjectOutputModel is not found in the empty JSON string", ProjectOutputModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProjectOutputModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProjectOutputModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ProjectOutputModel.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `billingContact`
      if (jsonObj.get("billingContact") != null && !jsonObj.get("billingContact").isJsonNull()) {
        UserWithFirstNameLastNameAndPhotoFileModel.validateJsonElement(jsonObj.get("billingContact"));
      }
      // validate the optional field `businessUnit`
      if (jsonObj.get("businessUnit") != null && !jsonObj.get("businessUnit").isJsonNull()) {
        BusinessUnitSubModel.validateJsonElement(jsonObj.get("businessUnit"));
      }
      // validate the optional field `costCenter`
      if (jsonObj.get("costCenter") != null && !jsonObj.get("costCenter").isJsonNull()) {
        ProjectCostCenterSubModel.validateJsonElement(jsonObj.get("costCenter"));
      }
      // validate the optional field `createdBy`
      if (jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) {
        UserWithFirstNameLastNameAndPhotoFileModel.validateJsonElement(jsonObj.get("createdBy"));
      }
      // validate the optional field `currency`
      if (jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) {
        CurrencySubModel2.validateJsonElement(jsonObj.get("currency"));
      }
      // validate the optional field `customer`
      if (jsonObj.get("customer") != null && !jsonObj.get("customer").isJsonNull()) {
        ProjectCustomerSubModel.validateJsonElement(jsonObj.get("customer"));
      }
      // validate the optional field `customerContact`
      if (jsonObj.get("customerContact") != null && !jsonObj.get("customerContact").isJsonNull()) {
        CustomerContactSubModel.validateJsonElement(jsonObj.get("customerContact"));
      }
      // validate the optional field `defaultWorkType`
      if (jsonObj.get("defaultWorkType") != null && !jsonObj.get("defaultWorkType").isJsonNull()) {
        ModelWithName.validateJsonElement(jsonObj.get("defaultWorkType"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `expectedValue`
      if (jsonObj.get("expectedValue") != null && !jsonObj.get("expectedValue").isJsonNull()) {
        MoneyOutputModel.validateJsonElement(jsonObj.get("expectedValue"));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      if ((jsonObj.get("internalName") != null && !jsonObj.get("internalName").isJsonNull()) && !jsonObj.get("internalName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `internalName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("internalName").toString()));
      }
      if ((jsonObj.get("invoiceNotes") != null && !jsonObj.get("invoiceNotes").isJsonNull()) && !jsonObj.get("invoiceNotes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invoiceNotes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invoiceNotes").toString()));
      }
      // validate the optional field `invoiceTemplate`
      if (jsonObj.get("invoiceTemplate") != null && !jsonObj.get("invoiceTemplate").isJsonNull()) {
        ProjectInvoiceTemplateSubModel.validateJsonElement(jsonObj.get("invoiceTemplate"));
      }
      if (jsonObj.get("keywords") != null && !jsonObj.get("keywords").isJsonNull()) {
        JsonArray jsonArraykeywords = jsonObj.getAsJsonArray("keywords");
        if (jsonArraykeywords != null) {
          // ensure the json data is an array
          if (!jsonObj.get("keywords").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `keywords` to be an array in the JSON string but got `%s`", jsonObj.get("keywords").toString()));
          }

          // validate the optional field `keywords` (array)
          for (int i = 0; i < jsonArraykeywords.size(); i++) {
            ModelWithName.validateJsonElement(jsonArraykeywords.get(i));
          };
        }
      }
      // validate the optional field `lastUpdatedBy`
      if (jsonObj.get("lastUpdatedBy") != null && !jsonObj.get("lastUpdatedBy").isJsonNull()) {
        UserWithFirstNameLastNameAndPhotoFileModel.validateJsonElement(jsonObj.get("lastUpdatedBy"));
      }
      // validate the optional field `leadSource`
      if (jsonObj.get("leadSource") != null && !jsonObj.get("leadSource").isJsonNull()) {
        ModelWithName.validateJsonElement(jsonObj.get("leadSource"));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("orderNumber") != null && !jsonObj.get("orderNumber").isJsonNull()) && !jsonObj.get("orderNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderNumber").toString()));
      }
      if ((jsonObj.get("ourReference") != null && !jsonObj.get("ourReference").isJsonNull()) && !jsonObj.get("ourReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ourReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ourReference").toString()));
      }
      // validate the optional field `pricelist`
      if (jsonObj.get("pricelist") != null && !jsonObj.get("pricelist").isJsonNull()) {
        ProjectPricelistSubModel.validateJsonElement(jsonObj.get("pricelist"));
      }
      // validate the optional field `projectOwner`
      if (jsonObj.get("projectOwner") != null && !jsonObj.get("projectOwner").isJsonNull()) {
        UserWithFirstNameLastNameAndPhotoFileModel.validateJsonElement(jsonObj.get("projectOwner"));
      }
      // validate the optional field `projectStatus`
      if (jsonObj.get("projectStatus") != null && !jsonObj.get("projectStatus").isJsonNull()) {
        ProjectStatusSubModel.validateJsonElement(jsonObj.get("projectStatus"));
      }
      // validate the optional field `rootPhase`
      if (jsonObj.get("rootPhase") != null && !jsonObj.get("rootPhase").isJsonNull()) {
        ModelWithName.validateJsonElement(jsonObj.get("rootPhase"));
      }
      // validate the optional field `salesPerson`
      if (jsonObj.get("salesPerson") != null && !jsonObj.get("salesPerson").isJsonNull()) {
        UserWithFirstNameLastNameAndPhotoFileModel.validateJsonElement(jsonObj.get("salesPerson"));
      }
      // validate the optional field `salesStatus`
      if (jsonObj.get("salesStatus") != null && !jsonObj.get("salesStatus").isJsonNull()) {
        SalesStatusSubModel.validateJsonElement(jsonObj.get("salesStatus"));
      }
      if ((jsonObj.get("yourReference") != null && !jsonObj.get("yourReference").isJsonNull()) && !jsonObj.get("yourReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `yourReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("yourReference").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProjectOutputModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProjectOutputModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProjectOutputModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProjectOutputModel.class));

       return (TypeAdapter<T>) new TypeAdapter<ProjectOutputModel>() {
           @Override
           public void write(JsonWriter out, ProjectOutputModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProjectOutputModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProjectOutputModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProjectOutputModel
   * @throws IOException if the JSON string is invalid with respect to ProjectOutputModel
   */
  public static ProjectOutputModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProjectOutputModel.class);
  }

  /**
   * Convert an instance of ProjectOutputModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

