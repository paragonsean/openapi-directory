/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.LicenseUserType;
import org.openapitools.client.model.SalesProgress;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ResourceAllocationCriteriaModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:00.992903-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ResourceAllocationCriteriaModel {
  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_INCLUDE_ABSENCES = "includeAbsences";
  @SerializedName(SERIALIZED_NAME_INCLUDE_ABSENCES)
  private Boolean includeAbsences;

  public static final String SERIALIZED_NAME_PHASE_GUIDS = "phaseGuids";
  @SerializedName(SERIALIZED_NAME_PHASE_GUIDS)
  private List<String> phaseGuids;

  public static final String SERIALIZED_NAME_PROJECT_BUSINESS_UNIT_GUIDS = "projectBusinessUnitGuids";
  @SerializedName(SERIALIZED_NAME_PROJECT_BUSINESS_UNIT_GUIDS)
  private List<String> projectBusinessUnitGuids;

  public static final String SERIALIZED_NAME_PROJECT_GUIDS = "projectGuids";
  @SerializedName(SERIALIZED_NAME_PROJECT_GUIDS)
  private List<String> projectGuids;

  public static final String SERIALIZED_NAME_PROJECT_MANAGER_USER_GUIDS = "projectManagerUserGuids";
  @SerializedName(SERIALIZED_NAME_PROJECT_MANAGER_USER_GUIDS)
  private List<String> projectManagerUserGuids;

  public static final String SERIALIZED_NAME_PROJECT_STATUS_TYPE_GUIDS = "projectStatusTypeGuids";
  @SerializedName(SERIALIZED_NAME_PROJECT_STATUS_TYPE_GUIDS)
  private List<String> projectStatusTypeGuids;

  public static final String SERIALIZED_NAME_PROJECT_TAG_GUIDS = "projectTagGuids";
  @SerializedName(SERIALIZED_NAME_PROJECT_TAG_GUIDS)
  private List<String> projectTagGuids;

  public static final String SERIALIZED_NAME_RESOURCE_ALLOCATION_GUIDS = "resourceAllocationGuids";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ALLOCATION_GUIDS)
  private List<String> resourceAllocationGuids;

  public static final String SERIALIZED_NAME_SALES_PROGRESSES = "salesProgresses";
  @SerializedName(SERIALIZED_NAME_SALES_PROGRESSES)
  private List<SalesProgress> salesProgresses;

  public static final String SERIALIZED_NAME_SALES_STATUS_TYPE_GUIDS = "salesStatusTypeGuids";
  @SerializedName(SERIALIZED_NAME_SALES_STATUS_TYPE_GUIDS)
  private List<String> salesStatusTypeGuids;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_SUPERIOR_USER_GUIDS = "superiorUserGuids";
  @SerializedName(SERIALIZED_NAME_SUPERIOR_USER_GUIDS)
  private List<String> superiorUserGuids;

  public static final String SERIALIZED_NAME_USE_SALES_PROBABILITY = "useSalesProbability";
  @SerializedName(SERIALIZED_NAME_USE_SALES_PROBABILITY)
  private Boolean useSalesProbability = true;

  public static final String SERIALIZED_NAME_USER_BUSINESS_UNIT_GUIDS = "userBusinessUnitGuids";
  @SerializedName(SERIALIZED_NAME_USER_BUSINESS_UNIT_GUIDS)
  private List<String> userBusinessUnitGuids;

  public static final String SERIALIZED_NAME_USER_GUIDS = "userGuids";
  @SerializedName(SERIALIZED_NAME_USER_GUIDS)
  private List<String> userGuids;

  public static final String SERIALIZED_NAME_USER_LICENSE_TYPES = "userLicenseTypes";
  @SerializedName(SERIALIZED_NAME_USER_LICENSE_TYPES)
  private List<LicenseUserType> userLicenseTypes;

  public static final String SERIALIZED_NAME_USER_TAG_GUIDS = "userTagGuids";
  @SerializedName(SERIALIZED_NAME_USER_TAG_GUIDS)
  private List<String> userTagGuids;

  public ResourceAllocationCriteriaModel() {
  }

  public ResourceAllocationCriteriaModel endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Get endDate
   * @return endDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public ResourceAllocationCriteriaModel includeAbsences(Boolean includeAbsences) {
    this.includeAbsences = includeAbsences;
    return this;
  }

  /**
   * Get includeAbsences
   * @return includeAbsences
   */
  @javax.annotation.Nullable
  public Boolean getIncludeAbsences() {
    return includeAbsences;
  }

  public void setIncludeAbsences(Boolean includeAbsences) {
    this.includeAbsences = includeAbsences;
  }


  public ResourceAllocationCriteriaModel phaseGuids(List<String> phaseGuids) {
    this.phaseGuids = phaseGuids;
    return this;
  }

  public ResourceAllocationCriteriaModel addPhaseGuidsItem(String phaseGuidsItem) {
    if (this.phaseGuids == null) {
      this.phaseGuids = new ArrayList<>();
    }
    this.phaseGuids.add(phaseGuidsItem);
    return this;
  }

  /**
   * Get phaseGuids
   * @return phaseGuids
   */
  @javax.annotation.Nullable
  public List<String> getPhaseGuids() {
    return phaseGuids;
  }

  public void setPhaseGuids(List<String> phaseGuids) {
    this.phaseGuids = phaseGuids;
  }


  public ResourceAllocationCriteriaModel projectBusinessUnitGuids(List<String> projectBusinessUnitGuids) {
    this.projectBusinessUnitGuids = projectBusinessUnitGuids;
    return this;
  }

  public ResourceAllocationCriteriaModel addProjectBusinessUnitGuidsItem(String projectBusinessUnitGuidsItem) {
    if (this.projectBusinessUnitGuids == null) {
      this.projectBusinessUnitGuids = new ArrayList<>();
    }
    this.projectBusinessUnitGuids.add(projectBusinessUnitGuidsItem);
    return this;
  }

  /**
   * Get projectBusinessUnitGuids
   * @return projectBusinessUnitGuids
   */
  @javax.annotation.Nullable
  public List<String> getProjectBusinessUnitGuids() {
    return projectBusinessUnitGuids;
  }

  public void setProjectBusinessUnitGuids(List<String> projectBusinessUnitGuids) {
    this.projectBusinessUnitGuids = projectBusinessUnitGuids;
  }


  public ResourceAllocationCriteriaModel projectGuids(List<String> projectGuids) {
    this.projectGuids = projectGuids;
    return this;
  }

  public ResourceAllocationCriteriaModel addProjectGuidsItem(String projectGuidsItem) {
    if (this.projectGuids == null) {
      this.projectGuids = new ArrayList<>();
    }
    this.projectGuids.add(projectGuidsItem);
    return this;
  }

  /**
   * Get projectGuids
   * @return projectGuids
   */
  @javax.annotation.Nullable
  public List<String> getProjectGuids() {
    return projectGuids;
  }

  public void setProjectGuids(List<String> projectGuids) {
    this.projectGuids = projectGuids;
  }


  public ResourceAllocationCriteriaModel projectManagerUserGuids(List<String> projectManagerUserGuids) {
    this.projectManagerUserGuids = projectManagerUserGuids;
    return this;
  }

  public ResourceAllocationCriteriaModel addProjectManagerUserGuidsItem(String projectManagerUserGuidsItem) {
    if (this.projectManagerUserGuids == null) {
      this.projectManagerUserGuids = new ArrayList<>();
    }
    this.projectManagerUserGuids.add(projectManagerUserGuidsItem);
    return this;
  }

  /**
   * Get projectManagerUserGuids
   * @return projectManagerUserGuids
   */
  @javax.annotation.Nullable
  public List<String> getProjectManagerUserGuids() {
    return projectManagerUserGuids;
  }

  public void setProjectManagerUserGuids(List<String> projectManagerUserGuids) {
    this.projectManagerUserGuids = projectManagerUserGuids;
  }


  public ResourceAllocationCriteriaModel projectStatusTypeGuids(List<String> projectStatusTypeGuids) {
    this.projectStatusTypeGuids = projectStatusTypeGuids;
    return this;
  }

  public ResourceAllocationCriteriaModel addProjectStatusTypeGuidsItem(String projectStatusTypeGuidsItem) {
    if (this.projectStatusTypeGuids == null) {
      this.projectStatusTypeGuids = new ArrayList<>();
    }
    this.projectStatusTypeGuids.add(projectStatusTypeGuidsItem);
    return this;
  }

  /**
   * Get projectStatusTypeGuids
   * @return projectStatusTypeGuids
   */
  @javax.annotation.Nullable
  public List<String> getProjectStatusTypeGuids() {
    return projectStatusTypeGuids;
  }

  public void setProjectStatusTypeGuids(List<String> projectStatusTypeGuids) {
    this.projectStatusTypeGuids = projectStatusTypeGuids;
  }


  public ResourceAllocationCriteriaModel projectTagGuids(List<String> projectTagGuids) {
    this.projectTagGuids = projectTagGuids;
    return this;
  }

  public ResourceAllocationCriteriaModel addProjectTagGuidsItem(String projectTagGuidsItem) {
    if (this.projectTagGuids == null) {
      this.projectTagGuids = new ArrayList<>();
    }
    this.projectTagGuids.add(projectTagGuidsItem);
    return this;
  }

  /**
   * Get projectTagGuids
   * @return projectTagGuids
   */
  @javax.annotation.Nullable
  public List<String> getProjectTagGuids() {
    return projectTagGuids;
  }

  public void setProjectTagGuids(List<String> projectTagGuids) {
    this.projectTagGuids = projectTagGuids;
  }


  public ResourceAllocationCriteriaModel resourceAllocationGuids(List<String> resourceAllocationGuids) {
    this.resourceAllocationGuids = resourceAllocationGuids;
    return this;
  }

  public ResourceAllocationCriteriaModel addResourceAllocationGuidsItem(String resourceAllocationGuidsItem) {
    if (this.resourceAllocationGuids == null) {
      this.resourceAllocationGuids = new ArrayList<>();
    }
    this.resourceAllocationGuids.add(resourceAllocationGuidsItem);
    return this;
  }

  /**
   * Get resourceAllocationGuids
   * @return resourceAllocationGuids
   */
  @javax.annotation.Nullable
  public List<String> getResourceAllocationGuids() {
    return resourceAllocationGuids;
  }

  public void setResourceAllocationGuids(List<String> resourceAllocationGuids) {
    this.resourceAllocationGuids = resourceAllocationGuids;
  }


  public ResourceAllocationCriteriaModel salesProgresses(List<SalesProgress> salesProgresses) {
    this.salesProgresses = salesProgresses;
    return this;
  }

  public ResourceAllocationCriteriaModel addSalesProgressesItem(SalesProgress salesProgressesItem) {
    if (this.salesProgresses == null) {
      this.salesProgresses = new ArrayList<>();
    }
    this.salesProgresses.add(salesProgressesItem);
    return this;
  }

  /**
   * Get salesProgresses
   * @return salesProgresses
   */
  @javax.annotation.Nullable
  public List<SalesProgress> getSalesProgresses() {
    return salesProgresses;
  }

  public void setSalesProgresses(List<SalesProgress> salesProgresses) {
    this.salesProgresses = salesProgresses;
  }


  public ResourceAllocationCriteriaModel salesStatusTypeGuids(List<String> salesStatusTypeGuids) {
    this.salesStatusTypeGuids = salesStatusTypeGuids;
    return this;
  }

  public ResourceAllocationCriteriaModel addSalesStatusTypeGuidsItem(String salesStatusTypeGuidsItem) {
    if (this.salesStatusTypeGuids == null) {
      this.salesStatusTypeGuids = new ArrayList<>();
    }
    this.salesStatusTypeGuids.add(salesStatusTypeGuidsItem);
    return this;
  }

  /**
   * Get salesStatusTypeGuids
   * @return salesStatusTypeGuids
   */
  @javax.annotation.Nullable
  public List<String> getSalesStatusTypeGuids() {
    return salesStatusTypeGuids;
  }

  public void setSalesStatusTypeGuids(List<String> salesStatusTypeGuids) {
    this.salesStatusTypeGuids = salesStatusTypeGuids;
  }


  public ResourceAllocationCriteriaModel startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public ResourceAllocationCriteriaModel superiorUserGuids(List<String> superiorUserGuids) {
    this.superiorUserGuids = superiorUserGuids;
    return this;
  }

  public ResourceAllocationCriteriaModel addSuperiorUserGuidsItem(String superiorUserGuidsItem) {
    if (this.superiorUserGuids == null) {
      this.superiorUserGuids = new ArrayList<>();
    }
    this.superiorUserGuids.add(superiorUserGuidsItem);
    return this;
  }

  /**
   * Get superiorUserGuids
   * @return superiorUserGuids
   */
  @javax.annotation.Nullable
  public List<String> getSuperiorUserGuids() {
    return superiorUserGuids;
  }

  public void setSuperiorUserGuids(List<String> superiorUserGuids) {
    this.superiorUserGuids = superiorUserGuids;
  }


  public ResourceAllocationCriteriaModel useSalesProbability(Boolean useSalesProbability) {
    this.useSalesProbability = useSalesProbability;
    return this;
  }

  /**
   * Get useSalesProbability
   * @return useSalesProbability
   */
  @javax.annotation.Nullable
  public Boolean getUseSalesProbability() {
    return useSalesProbability;
  }

  public void setUseSalesProbability(Boolean useSalesProbability) {
    this.useSalesProbability = useSalesProbability;
  }


  public ResourceAllocationCriteriaModel userBusinessUnitGuids(List<String> userBusinessUnitGuids) {
    this.userBusinessUnitGuids = userBusinessUnitGuids;
    return this;
  }

  public ResourceAllocationCriteriaModel addUserBusinessUnitGuidsItem(String userBusinessUnitGuidsItem) {
    if (this.userBusinessUnitGuids == null) {
      this.userBusinessUnitGuids = new ArrayList<>();
    }
    this.userBusinessUnitGuids.add(userBusinessUnitGuidsItem);
    return this;
  }

  /**
   * Get userBusinessUnitGuids
   * @return userBusinessUnitGuids
   */
  @javax.annotation.Nullable
  public List<String> getUserBusinessUnitGuids() {
    return userBusinessUnitGuids;
  }

  public void setUserBusinessUnitGuids(List<String> userBusinessUnitGuids) {
    this.userBusinessUnitGuids = userBusinessUnitGuids;
  }


  public ResourceAllocationCriteriaModel userGuids(List<String> userGuids) {
    this.userGuids = userGuids;
    return this;
  }

  public ResourceAllocationCriteriaModel addUserGuidsItem(String userGuidsItem) {
    if (this.userGuids == null) {
      this.userGuids = new ArrayList<>();
    }
    this.userGuids.add(userGuidsItem);
    return this;
  }

  /**
   * Get userGuids
   * @return userGuids
   */
  @javax.annotation.Nullable
  public List<String> getUserGuids() {
    return userGuids;
  }

  public void setUserGuids(List<String> userGuids) {
    this.userGuids = userGuids;
  }


  public ResourceAllocationCriteriaModel userLicenseTypes(List<LicenseUserType> userLicenseTypes) {
    this.userLicenseTypes = userLicenseTypes;
    return this;
  }

  public ResourceAllocationCriteriaModel addUserLicenseTypesItem(LicenseUserType userLicenseTypesItem) {
    if (this.userLicenseTypes == null) {
      this.userLicenseTypes = new ArrayList<>();
    }
    this.userLicenseTypes.add(userLicenseTypesItem);
    return this;
  }

  /**
   * Get userLicenseTypes
   * @return userLicenseTypes
   */
  @javax.annotation.Nullable
  public List<LicenseUserType> getUserLicenseTypes() {
    return userLicenseTypes;
  }

  public void setUserLicenseTypes(List<LicenseUserType> userLicenseTypes) {
    this.userLicenseTypes = userLicenseTypes;
  }


  public ResourceAllocationCriteriaModel userTagGuids(List<String> userTagGuids) {
    this.userTagGuids = userTagGuids;
    return this;
  }

  public ResourceAllocationCriteriaModel addUserTagGuidsItem(String userTagGuidsItem) {
    if (this.userTagGuids == null) {
      this.userTagGuids = new ArrayList<>();
    }
    this.userTagGuids.add(userTagGuidsItem);
    return this;
  }

  /**
   * Get userTagGuids
   * @return userTagGuids
   */
  @javax.annotation.Nullable
  public List<String> getUserTagGuids() {
    return userTagGuids;
  }

  public void setUserTagGuids(List<String> userTagGuids) {
    this.userTagGuids = userTagGuids;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceAllocationCriteriaModel resourceAllocationCriteriaModel = (ResourceAllocationCriteriaModel) o;
    return Objects.equals(this.endDate, resourceAllocationCriteriaModel.endDate) &&
        Objects.equals(this.includeAbsences, resourceAllocationCriteriaModel.includeAbsences) &&
        Objects.equals(this.phaseGuids, resourceAllocationCriteriaModel.phaseGuids) &&
        Objects.equals(this.projectBusinessUnitGuids, resourceAllocationCriteriaModel.projectBusinessUnitGuids) &&
        Objects.equals(this.projectGuids, resourceAllocationCriteriaModel.projectGuids) &&
        Objects.equals(this.projectManagerUserGuids, resourceAllocationCriteriaModel.projectManagerUserGuids) &&
        Objects.equals(this.projectStatusTypeGuids, resourceAllocationCriteriaModel.projectStatusTypeGuids) &&
        Objects.equals(this.projectTagGuids, resourceAllocationCriteriaModel.projectTagGuids) &&
        Objects.equals(this.resourceAllocationGuids, resourceAllocationCriteriaModel.resourceAllocationGuids) &&
        Objects.equals(this.salesProgresses, resourceAllocationCriteriaModel.salesProgresses) &&
        Objects.equals(this.salesStatusTypeGuids, resourceAllocationCriteriaModel.salesStatusTypeGuids) &&
        Objects.equals(this.startDate, resourceAllocationCriteriaModel.startDate) &&
        Objects.equals(this.superiorUserGuids, resourceAllocationCriteriaModel.superiorUserGuids) &&
        Objects.equals(this.useSalesProbability, resourceAllocationCriteriaModel.useSalesProbability) &&
        Objects.equals(this.userBusinessUnitGuids, resourceAllocationCriteriaModel.userBusinessUnitGuids) &&
        Objects.equals(this.userGuids, resourceAllocationCriteriaModel.userGuids) &&
        Objects.equals(this.userLicenseTypes, resourceAllocationCriteriaModel.userLicenseTypes) &&
        Objects.equals(this.userTagGuids, resourceAllocationCriteriaModel.userTagGuids);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(endDate, includeAbsences, phaseGuids, projectBusinessUnitGuids, projectGuids, projectManagerUserGuids, projectStatusTypeGuids, projectTagGuids, resourceAllocationGuids, salesProgresses, salesStatusTypeGuids, startDate, superiorUserGuids, useSalesProbability, userBusinessUnitGuids, userGuids, userLicenseTypes, userTagGuids);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceAllocationCriteriaModel {\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    includeAbsences: ").append(toIndentedString(includeAbsences)).append("\n");
    sb.append("    phaseGuids: ").append(toIndentedString(phaseGuids)).append("\n");
    sb.append("    projectBusinessUnitGuids: ").append(toIndentedString(projectBusinessUnitGuids)).append("\n");
    sb.append("    projectGuids: ").append(toIndentedString(projectGuids)).append("\n");
    sb.append("    projectManagerUserGuids: ").append(toIndentedString(projectManagerUserGuids)).append("\n");
    sb.append("    projectStatusTypeGuids: ").append(toIndentedString(projectStatusTypeGuids)).append("\n");
    sb.append("    projectTagGuids: ").append(toIndentedString(projectTagGuids)).append("\n");
    sb.append("    resourceAllocationGuids: ").append(toIndentedString(resourceAllocationGuids)).append("\n");
    sb.append("    salesProgresses: ").append(toIndentedString(salesProgresses)).append("\n");
    sb.append("    salesStatusTypeGuids: ").append(toIndentedString(salesStatusTypeGuids)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    superiorUserGuids: ").append(toIndentedString(superiorUserGuids)).append("\n");
    sb.append("    useSalesProbability: ").append(toIndentedString(useSalesProbability)).append("\n");
    sb.append("    userBusinessUnitGuids: ").append(toIndentedString(userBusinessUnitGuids)).append("\n");
    sb.append("    userGuids: ").append(toIndentedString(userGuids)).append("\n");
    sb.append("    userLicenseTypes: ").append(toIndentedString(userLicenseTypes)).append("\n");
    sb.append("    userTagGuids: ").append(toIndentedString(userTagGuids)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("endDate");
    openapiFields.add("includeAbsences");
    openapiFields.add("phaseGuids");
    openapiFields.add("projectBusinessUnitGuids");
    openapiFields.add("projectGuids");
    openapiFields.add("projectManagerUserGuids");
    openapiFields.add("projectStatusTypeGuids");
    openapiFields.add("projectTagGuids");
    openapiFields.add("resourceAllocationGuids");
    openapiFields.add("salesProgresses");
    openapiFields.add("salesStatusTypeGuids");
    openapiFields.add("startDate");
    openapiFields.add("superiorUserGuids");
    openapiFields.add("useSalesProbability");
    openapiFields.add("userBusinessUnitGuids");
    openapiFields.add("userGuids");
    openapiFields.add("userLicenseTypes");
    openapiFields.add("userTagGuids");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ResourceAllocationCriteriaModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ResourceAllocationCriteriaModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResourceAllocationCriteriaModel is not found in the empty JSON string", ResourceAllocationCriteriaModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ResourceAllocationCriteriaModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ResourceAllocationCriteriaModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("phaseGuids") != null && !jsonObj.get("phaseGuids").isJsonNull() && !jsonObj.get("phaseGuids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `phaseGuids` to be an array in the JSON string but got `%s`", jsonObj.get("phaseGuids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("projectBusinessUnitGuids") != null && !jsonObj.get("projectBusinessUnitGuids").isJsonNull() && !jsonObj.get("projectBusinessUnitGuids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectBusinessUnitGuids` to be an array in the JSON string but got `%s`", jsonObj.get("projectBusinessUnitGuids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("projectGuids") != null && !jsonObj.get("projectGuids").isJsonNull() && !jsonObj.get("projectGuids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectGuids` to be an array in the JSON string but got `%s`", jsonObj.get("projectGuids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("projectManagerUserGuids") != null && !jsonObj.get("projectManagerUserGuids").isJsonNull() && !jsonObj.get("projectManagerUserGuids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectManagerUserGuids` to be an array in the JSON string but got `%s`", jsonObj.get("projectManagerUserGuids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("projectStatusTypeGuids") != null && !jsonObj.get("projectStatusTypeGuids").isJsonNull() && !jsonObj.get("projectStatusTypeGuids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectStatusTypeGuids` to be an array in the JSON string but got `%s`", jsonObj.get("projectStatusTypeGuids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("projectTagGuids") != null && !jsonObj.get("projectTagGuids").isJsonNull() && !jsonObj.get("projectTagGuids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectTagGuids` to be an array in the JSON string but got `%s`", jsonObj.get("projectTagGuids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("resourceAllocationGuids") != null && !jsonObj.get("resourceAllocationGuids").isJsonNull() && !jsonObj.get("resourceAllocationGuids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceAllocationGuids` to be an array in the JSON string but got `%s`", jsonObj.get("resourceAllocationGuids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("salesProgresses") != null && !jsonObj.get("salesProgresses").isJsonNull() && !jsonObj.get("salesProgresses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `salesProgresses` to be an array in the JSON string but got `%s`", jsonObj.get("salesProgresses").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("salesStatusTypeGuids") != null && !jsonObj.get("salesStatusTypeGuids").isJsonNull() && !jsonObj.get("salesStatusTypeGuids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `salesStatusTypeGuids` to be an array in the JSON string but got `%s`", jsonObj.get("salesStatusTypeGuids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("superiorUserGuids") != null && !jsonObj.get("superiorUserGuids").isJsonNull() && !jsonObj.get("superiorUserGuids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `superiorUserGuids` to be an array in the JSON string but got `%s`", jsonObj.get("superiorUserGuids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("userBusinessUnitGuids") != null && !jsonObj.get("userBusinessUnitGuids").isJsonNull() && !jsonObj.get("userBusinessUnitGuids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `userBusinessUnitGuids` to be an array in the JSON string but got `%s`", jsonObj.get("userBusinessUnitGuids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("userGuids") != null && !jsonObj.get("userGuids").isJsonNull() && !jsonObj.get("userGuids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `userGuids` to be an array in the JSON string but got `%s`", jsonObj.get("userGuids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("userLicenseTypes") != null && !jsonObj.get("userLicenseTypes").isJsonNull() && !jsonObj.get("userLicenseTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `userLicenseTypes` to be an array in the JSON string but got `%s`", jsonObj.get("userLicenseTypes").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("userTagGuids") != null && !jsonObj.get("userTagGuids").isJsonNull() && !jsonObj.get("userTagGuids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `userTagGuids` to be an array in the JSON string but got `%s`", jsonObj.get("userTagGuids").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResourceAllocationCriteriaModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResourceAllocationCriteriaModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResourceAllocationCriteriaModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResourceAllocationCriteriaModel.class));

       return (TypeAdapter<T>) new TypeAdapter<ResourceAllocationCriteriaModel>() {
           @Override
           public void write(JsonWriter out, ResourceAllocationCriteriaModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ResourceAllocationCriteriaModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ResourceAllocationCriteriaModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ResourceAllocationCriteriaModel
   * @throws IOException if the JSON string is invalid with respect to ResourceAllocationCriteriaModel
   */
  public static ResourceAllocationCriteriaModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResourceAllocationCriteriaModel.class);
  }

  /**
   * Convert an instance of ResourceAllocationCriteriaModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

