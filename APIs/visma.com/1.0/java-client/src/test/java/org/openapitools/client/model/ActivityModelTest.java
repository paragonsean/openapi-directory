/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ActivityActivityType;
import org.openapitools.client.model.ActivityCustomer;
import org.openapitools.client.model.ActivityOwnerModel;
import org.openapitools.client.model.ActivityPhase;
import org.openapitools.client.model.ActivityRecurrenceModel;
import org.openapitools.client.model.ModelWithName;
import org.openapitools.client.model.RecurrenceType;
import org.openapitools.client.model.UserWithFirstNameLastNameAndPhotoFileModel;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ActivityModel
 */
public class ActivityModelTest {
    private final ActivityModel model = new ActivityModel();

    /**
     * Model tests for ActivityModel
     */
    @Test
    public void testActivityModel() {
        // TODO: test ActivityModel
    }

    /**
     * Test the property 'activityType'
     */
    @Test
    public void activityTypeTest() {
        // TODO: test activityType
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'createdDateTime'
     */
    @Test
    public void createdDateTimeTest() {
        // TODO: test createdDateTime
    }

    /**
     * Test the property 'customer'
     */
    @Test
    public void customerTest() {
        // TODO: test customer
    }

    /**
     * Test the property 'endDateTime'
     */
    @Test
    public void endDateTimeTest() {
        // TODO: test endDateTime
    }

    /**
     * Test the property 'guid'
     */
    @Test
    public void guidTest() {
        // TODO: test guid
    }

    /**
     * Test the property 'hasDuration'
     */
    @Test
    public void hasDurationTest() {
        // TODO: test hasDuration
    }

    /**
     * Test the property 'hasHours'
     */
    @Test
    public void hasHoursTest() {
        // TODO: test hasHours
    }

    /**
     * Test the property 'isAllDay'
     */
    @Test
    public void isAllDayTest() {
        // TODO: test isAllDay
    }

    /**
     * Test the property 'isClosed'
     */
    @Test
    public void isClosedTest() {
        // TODO: test isClosed
    }

    /**
     * Test the property 'isUnassigned'
     */
    @Test
    public void isUnassignedTest() {
        // TODO: test isUnassigned
    }

    /**
     * Test the property 'lastUpdatedBy'
     */
    @Test
    public void lastUpdatedByTest() {
        // TODO: test lastUpdatedBy
    }

    /**
     * Test the property 'lastUpdatedDateTime'
     */
    @Test
    public void lastUpdatedDateTimeTest() {
        // TODO: test lastUpdatedDateTime
    }

    /**
     * Test the property 'location'
     */
    @Test
    public void locationTest() {
        // TODO: test location
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'notes'
     */
    @Test
    public void notesTest() {
        // TODO: test notes
    }

    /**
     * Test the property 'ownerUser'
     */
    @Test
    public void ownerUserTest() {
        // TODO: test ownerUser
    }

    /**
     * Test the property 'phase'
     */
    @Test
    public void phaseTest() {
        // TODO: test phase
    }

    /**
     * Test the property 'projectTaskStatus'
     */
    @Test
    public void projectTaskStatusTest() {
        // TODO: test projectTaskStatus
    }

    /**
     * Test the property 'recurrence'
     */
    @Test
    public void recurrenceTest() {
        // TODO: test recurrence
    }

    /**
     * Test the property 'recurrenceParentActivityGuid'
     */
    @Test
    public void recurrenceParentActivityGuidTest() {
        // TODO: test recurrenceParentActivityGuid
    }

    /**
     * Test the property 'recurrenceRule'
     */
    @Test
    public void recurrenceRuleTest() {
        // TODO: test recurrenceRule
    }

    /**
     * Test the property 'recurrenceType'
     */
    @Test
    public void recurrenceTypeTest() {
        // TODO: test recurrenceType
    }

    /**
     * Test the property 'startDateTime'
     */
    @Test
    public void startDateTimeTest() {
        // TODO: test startDateTime
    }

}
