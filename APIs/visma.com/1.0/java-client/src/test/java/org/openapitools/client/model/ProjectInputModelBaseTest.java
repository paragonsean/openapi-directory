/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.client.model.InvoiceTemplateSubModel;
import org.openapitools.client.model.MoneyInputModelWithNullableAmount;
import org.openapitools.client.model.SimpleInputModel;
import org.openapitools.client.model.SimpleInputRequiredModel;
import org.openapitools.client.model.SimpleProjectStatusInputModel;
import org.openapitools.client.model.SimpleSalesStatusInputModel;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ProjectInputModelBase
 */
public class ProjectInputModelBaseTest {
    private final ProjectInputModelBase model = new ProjectInputModelBase();

    /**
     * Model tests for ProjectInputModelBase
     */
    @Test
    public void testProjectInputModelBase() {
        // TODO: test ProjectInputModelBase
    }

    /**
     * Test the property 'billingContact'
     */
    @Test
    public void billingContactTest() {
        // TODO: test billingContact
    }

    /**
     * Test the property 'businessUnit'
     */
    @Test
    public void businessUnitTest() {
        // TODO: test businessUnit
    }

    /**
     * Test the property 'completionEstimatePercentage'
     */
    @Test
    public void completionEstimatePercentageTest() {
        // TODO: test completionEstimatePercentage
    }

    /**
     * Test the property 'costCenter'
     */
    @Test
    public void costCenterTest() {
        // TODO: test costCenter
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'customer'
     */
    @Test
    public void customerTest() {
        // TODO: test customer
    }

    /**
     * Test the property 'customerContact'
     */
    @Test
    public void customerContactTest() {
        // TODO: test customerContact
    }

    /**
     * Test the property 'deadline'
     */
    @Test
    public void deadlineTest() {
        // TODO: test deadline
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'expectedOrderDate'
     */
    @Test
    public void expectedOrderDateTest() {
        // TODO: test expectedOrderDate
    }

    /**
     * Test the property 'expectedValue'
     */
    @Test
    public void expectedValueTest() {
        // TODO: test expectedValue
    }

    /**
     * Test the property 'internalName'
     */
    @Test
    public void internalNameTest() {
        // TODO: test internalName
    }

    /**
     * Test the property 'invoiceNotes'
     */
    @Test
    public void invoiceNotesTest() {
        // TODO: test invoiceNotes
    }

    /**
     * Test the property 'invoiceTemplate'
     */
    @Test
    public void invoiceTemplateTest() {
        // TODO: test invoiceTemplate
    }

    /**
     * Test the property 'isClosed'
     */
    @Test
    public void isClosedTest() {
        // TODO: test isClosed
    }

    /**
     * Test the property 'isInternal'
     */
    @Test
    public void isInternalTest() {
        // TODO: test isInternal
    }

    /**
     * Test the property 'isJoiningAllowed'
     */
    @Test
    public void isJoiningAllowedTest() {
        // TODO: test isJoiningAllowed
    }

    /**
     * Test the property 'leadSource'
     */
    @Test
    public void leadSourceTest() {
        // TODO: test leadSource
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'number'
     */
    @Test
    public void numberTest() {
        // TODO: test number
    }

    /**
     * Test the property 'orderNumber'
     */
    @Test
    public void orderNumberTest() {
        // TODO: test orderNumber
    }

    /**
     * Test the property 'ourReference'
     */
    @Test
    public void ourReferenceTest() {
        // TODO: test ourReference
    }

    /**
     * Test the property 'paymentTerm'
     */
    @Test
    public void paymentTermTest() {
        // TODO: test paymentTerm
    }

    /**
     * Test the property 'probability'
     */
    @Test
    public void probabilityTest() {
        // TODO: test probability
    }

    /**
     * Test the property 'projectOwner'
     */
    @Test
    public void projectOwnerTest() {
        // TODO: test projectOwner
    }

    /**
     * Test the property 'projectStatus'
     */
    @Test
    public void projectStatusTest() {
        // TODO: test projectStatus
    }

    /**
     * Test the property 'salesPerson'
     */
    @Test
    public void salesPersonTest() {
        // TODO: test salesPerson
    }

    /**
     * Test the property 'salesStatus'
     */
    @Test
    public void salesStatusTest() {
        // TODO: test salesStatus
    }

    /**
     * Test the property 'startDate'
     */
    @Test
    public void startDateTest() {
        // TODO: test startDate
    }

    /**
     * Test the property 'useOvertimeMultipliers'
     */
    @Test
    public void useOvertimeMultipliersTest() {
        // TODO: test useOvertimeMultipliers
    }

    /**
     * Test the property 'useProductsFromSetting'
     */
    @Test
    public void useProductsFromSettingTest() {
        // TODO: test useProductsFromSetting
    }

    /**
     * Test the property 'useWorktypesFromSetting'
     */
    @Test
    public void useWorktypesFromSettingTest() {
        // TODO: test useWorktypesFromSetting
    }

    /**
     * Test the property 'yourReference'
     */
    @Test
    public void yourReferenceTest() {
        // TODO: test yourReference
    }

}
