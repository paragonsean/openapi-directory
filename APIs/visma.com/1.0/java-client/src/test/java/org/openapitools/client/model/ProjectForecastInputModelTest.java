/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.MoneyInputModelWithNullableAmount;
import org.openapitools.client.model.SimpleInputRequiredModel;
import org.openapitools.client.model.UserWithFirstNameLastNameAndPhotoFileModel;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ProjectForecastInputModel
 */
public class ProjectForecastInputModelTest {
    private final ProjectForecastInputModel model = new ProjectForecastInputModel();

    /**
     * Model tests for ProjectForecastInputModel
     */
    @Test
    public void testProjectForecastInputModel() {
        // TODO: test ProjectForecastInputModel
    }

    /**
     * Test the property 'billingForecast'
     */
    @Test
    public void billingForecastTest() {
        // TODO: test billingForecast
    }

    /**
     * Test the property 'billingForecastNotes'
     */
    @Test
    public void billingForecastNotesTest() {
        // TODO: test billingForecastNotes
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'createdDateTime'
     */
    @Test
    public void createdDateTimeTest() {
        // TODO: test createdDateTime
    }

    /**
     * Test the property 'expenseForecast'
     */
    @Test
    public void expenseForecastTest() {
        // TODO: test expenseForecast
    }

    /**
     * Test the property 'expenseForecastNotes'
     */
    @Test
    public void expenseForecastNotesTest() {
        // TODO: test expenseForecastNotes
    }

    /**
     * Test the property 'guid'
     */
    @Test
    public void guidTest() {
        // TODO: test guid
    }

    /**
     * Test the property 'laborExpenseForecast'
     */
    @Test
    public void laborExpenseForecastTest() {
        // TODO: test laborExpenseForecast
    }

    /**
     * Test the property 'laborExpenseForecastNotes'
     */
    @Test
    public void laborExpenseForecastNotesTest() {
        // TODO: test laborExpenseForecastNotes
    }

    /**
     * Test the property 'lastUpdatedBy'
     */
    @Test
    public void lastUpdatedByTest() {
        // TODO: test lastUpdatedBy
    }

    /**
     * Test the property 'lastUpdatedDateTime'
     */
    @Test
    public void lastUpdatedDateTimeTest() {
        // TODO: test lastUpdatedDateTime
    }

    /**
     * Test the property 'month'
     */
    @Test
    public void monthTest() {
        // TODO: test month
    }

    /**
     * Test the property 'project'
     */
    @Test
    public void projectTest() {
        // TODO: test project
    }

    /**
     * Test the property 'revenueForecast'
     */
    @Test
    public void revenueForecastTest() {
        // TODO: test revenueForecast
    }

    /**
     * Test the property 'revenueForecastNotes'
     */
    @Test
    public void revenueForecastNotesTest() {
        // TODO: test revenueForecastNotes
    }

    /**
     * Test the property 'year'
     */
    @Test
    public void yearTest() {
        // TODO: test year
    }

}
