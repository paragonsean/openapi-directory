/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.client.model.ModelBaseWithRequiredGuid;
import org.openapitools.client.model.ModelWithName;
import org.openapitools.client.model.PhaseStatusInputModel;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PhaseInputModel
 */
public class PhaseInputModelTest {
    private final PhaseInputModel model = new PhaseInputModel();

    /**
     * Model tests for PhaseInputModel
     */
    @Test
    public void testPhaseInputModel() {
        // TODO: test PhaseInputModel
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'deadline'
     */
    @Test
    public void deadlineTest() {
        // TODO: test deadline
    }

    /**
     * Test the property 'defaultWorkType'
     */
    @Test
    public void defaultWorkTypeTest() {
        // TODO: test defaultWorkType
    }

    /**
     * Test the property 'isClosed'
     */
    @Test
    public void isClosedTest() {
        // TODO: test isClosed
    }

    /**
     * Test the property 'isCompleted'
     */
    @Test
    public void isCompletedTest() {
        // TODO: test isCompleted
    }

    /**
     * Test the property 'isLocked'
     */
    @Test
    public void isLockedTest() {
        // TODO: test isLocked
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'originalDeadline'
     */
    @Test
    public void originalDeadlineTest() {
        // TODO: test originalDeadline
    }

    /**
     * Test the property 'originalStartDate'
     */
    @Test
    public void originalStartDateTest() {
        // TODO: test originalStartDate
    }

    /**
     * Test the property 'originalWorkHoursEstimate'
     */
    @Test
    public void originalWorkHoursEstimateTest() {
        // TODO: test originalWorkHoursEstimate
    }

    /**
     * Test the property 'parentPhase'
     */
    @Test
    public void parentPhaseTest() {
        // TODO: test parentPhase
    }

    /**
     * Test the property 'phaseStatus'
     */
    @Test
    public void phaseStatusTest() {
        // TODO: test phaseStatus
    }

    /**
     * Test the property 'project'
     */
    @Test
    public void projectTest() {
        // TODO: test project
    }

    /**
     * Test the property 'sortOrder'
     */
    @Test
    public void sortOrderTest() {
        // TODO: test sortOrder
    }

    /**
     * Test the property 'startDate'
     */
    @Test
    public void startDateTest() {
        // TODO: test startDate
    }

    /**
     * Test the property 'workHoursEstimate'
     */
    @Test
    public void workHoursEstimateTest() {
        // TODO: test workHoursEstimate
    }

}
