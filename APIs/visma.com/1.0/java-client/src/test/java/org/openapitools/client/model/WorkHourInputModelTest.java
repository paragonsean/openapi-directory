/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.MoneyInputModel;
import org.openapitools.client.model.SimpleInputModel;
import org.openapitools.client.model.SimpleInputRequiredModel;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for WorkHourInputModel
 */
public class WorkHourInputModelTest {
    private final WorkHourInputModel model = new WorkHourInputModel();

    /**
     * Model tests for WorkHourInputModel
     */
    @Test
    public void testWorkHourInputModel() {
        // TODO: test WorkHourInputModel
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'endTime'
     */
    @Test
    public void endTimeTest() {
        // TODO: test endTime
    }

    /**
     * Test the property 'eventDate'
     */
    @Test
    public void eventDateTest() {
        // TODO: test eventDate
    }

    /**
     * Test the property 'invoice'
     */
    @Test
    public void invoiceTest() {
        // TODO: test invoice
    }

    /**
     * Test the property 'invoiceQuantity'
     */
    @Test
    public void invoiceQuantityTest() {
        // TODO: test invoiceQuantity
    }

    /**
     * Test the property 'invoiceRowComment'
     */
    @Test
    public void invoiceRowCommentTest() {
        // TODO: test invoiceRowComment
    }

    /**
     * Test the property 'invoiceRowDescription'
     */
    @Test
    public void invoiceRowDescriptionTest() {
        // TODO: test invoiceRowDescription
    }

    /**
     * Test the property 'isApproved'
     */
    @Test
    public void isApprovedTest() {
        // TODO: test isApproved
    }

    /**
     * Test the property 'isBillable'
     */
    @Test
    public void isBillableTest() {
        // TODO: test isBillable
    }

    /**
     * Test the property 'overtime'
     */
    @Test
    public void overtimeTest() {
        // TODO: test overtime
    }

    /**
     * Test the property 'phase'
     */
    @Test
    public void phaseTest() {
        // TODO: test phase
    }

    /**
     * Test the property 'plannedInvoiceQuantity'
     */
    @Test
    public void plannedInvoiceQuantityTest() {
        // TODO: test plannedInvoiceQuantity
    }

    /**
     * Test the property 'quantity'
     */
    @Test
    public void quantityTest() {
        // TODO: test quantity
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'unitPrice'
     */
    @Test
    public void unitPriceTest() {
        // TODO: test unitPrice
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

    /**
     * Test the property 'workType'
     */
    @Test
    public void workTypeTest() {
        // TODO: test workType
    }

}
