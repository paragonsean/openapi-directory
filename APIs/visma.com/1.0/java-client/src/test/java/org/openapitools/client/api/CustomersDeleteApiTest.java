/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ExceptionModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomersDeleteApi
 */
@Disabled
public class CustomersDeleteApiTest {

    private final CustomersDeleteApi api = new CustomersDeleteApi();

    /**
     * Delete an address.
     *
     * Returns: No Content (204) if succeeded. Not found (404) if address can&#39;t be found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addressesDeleteAddressTest() throws ApiException {
        String guid = null;
        api.addressesDeleteAddress(guid);
        // TODO: test validations
    }

    /**
     * Deletes contact&#39;s communication.
     *
     * Returns: No Content (204) if succeeded.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contactCommunicationsDeleteContactCommunicationTest() throws ApiException {
        String guid = null;
        api.contactCommunicationsDeleteContactCommunication(guid);
        // TODO: test validations
    }

    /**
     * Deletes a contact.
     *
     * Returns: No Content (204) if succeeded.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contactsDeleteContactTest() throws ApiException {
        String guid = null;
        api.contactsDeleteContact(guid);
        // TODO: test validations
    }

    /**
     * Deletes a customer country setting.
     *
     * Returns: No Content (204) if succeeded. Not found (404) if customer country setting can&#39;t be found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerCountrySettingsDeleteCustomerCountrySettingTest() throws ApiException {
        String guid = null;
        api.customerCountrySettingsDeleteCustomerCountrySetting(guid);
        // TODO: test validations
    }

    /**
     * Deletes a customer custom value.
     *
     * Returns: No Content (204) if succeeded.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerCustomValuesDeleteCustomerCustomValueTest() throws ApiException {
        String guid = null;
        api.customerCustomValuesDeleteCustomerCustomValue(guid);
        // TODO: test validations
    }

    /**
     * Deletes a customer market segment.
     *
     * Returns: No Content (204) if succeeded. Not found (404) if customer market segment can&#39;t be found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerMarketSegmentsDeleteCustomerMarketSegmentTest() throws ApiException {
        String guid = null;
        api.customerMarketSegmentsDeleteCustomerMarketSegment(guid);
        // TODO: test validations
    }

    /**
     * Deletes a customer.
     *
     * Returns: No Content (204) if succeeded.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customersDeleteCustomerTest() throws ApiException {
        String guid = null;
        api.customersDeleteCustomer(guid);
        // TODO: test validations
    }

    /**
     * Delete a keyword from the contact
     *
     * Returns: No Content (204) if succeeded. Not found (404) if the keyword or the link can&#39;t be found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void keywordsDeleteContactKeywordTest() throws ApiException {
        String contactGuid = null;
        String guid = null;
        api.keywordsDeleteContactKeyword(contactGuid, guid);
        // TODO: test validations
    }

    /**
     * Deletes a customer sales note.
     *
     * Returns: No Content (204) if succeeded. OK (200) if note has child notes and can&#39;t be deleted. It is marked as IsDeleted &#x3D; true. Not found (404) if note can&#39;t be found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void salesNotesDeleteCustomerSalesNoteTest() throws ApiException {
        String guid = null;
        api.salesNotesDeleteCustomerSalesNote(guid);
        // TODO: test validations
    }

}
