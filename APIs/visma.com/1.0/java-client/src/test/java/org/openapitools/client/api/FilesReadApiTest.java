/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ExceptionModel;
import java.io.File;
import org.openapitools.client.model.FileKeywordModel;
import org.openapitools.client.model.FileModel;
import org.openapitools.client.model.InvoiceFileModel;
import org.openapitools.client.model.InvoicePdfGetOptions;
import org.openapitools.client.model.InvoiceType;
import org.openapitools.client.model.KeyValuePairOfStringAndSortDirection;
import java.time.OffsetDateTime;
import org.openapitools.client.model.ProjectFileModel;
import org.openapitools.client.model.ProjectTravelExpenseFileModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FilesReadApi
 */
@Disabled
public class FilesReadApiTest {

    private final FilesReadApi api = new FilesReadApi();

    /**
     * Get file data by ID.
     *
     * Returns binary data, which contains content with type given in Content-Type header.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileDataGetDataForFileTest() throws ApiException {
        String guid = null;
        File response = api.fileDataGetDataForFile(guid);
        // TODO: test validations
    }

    /**
     * Get file by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void filesGetFileTest() throws ApiException {
        String guid = null;
        Boolean includeDataInResponse = null;
        FileModel response = api.filesGetFile(guid, includeDataInResponse);
        // TODO: test validations
    }

    /**
     * Get invoice file by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void filesGetInvoiceFileTest() throws ApiException {
        String guid = null;
        InvoiceFileModel response = api.filesGetInvoiceFile(guid);
        // TODO: test validations
    }

    /**
     * Get all files of a invoice by its id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void filesGetInvoiceFilesTest() throws ApiException {
        String invoiceGuid = null;
        Integer firstRow = null;
        Integer rowCount = null;
        List<InvoiceFileModel> response = api.filesGetInvoiceFiles(invoiceGuid, firstRow, rowCount);
        // TODO: test validations
    }

    /**
     * Get project file by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void filesGetProjectFileTest() throws ApiException {
        String guid = null;
        ProjectFileModel response = api.filesGetProjectFile(guid);
        // TODO: test validations
    }

    /**
     * Get all files of a project by its id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void filesGetProjectFilesTest() throws ApiException {
        String projectGuid = null;
        Integer firstRow = null;
        Integer rowCount = null;
        List<KeyValuePairOfStringAndSortDirection> sortings = null;
        List<ProjectFileModel> response = api.filesGetProjectFiles(projectGuid, firstRow, rowCount, sortings);
        // TODO: test validations
    }

    /**
     * Get travel expense file by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void filesGetTravelExpenseFileTest() throws ApiException {
        String guid = null;
        ProjectTravelExpenseFileModel response = api.filesGetTravelExpenseFile(guid);
        // TODO: test validations
    }

    /**
     * Get all files of a travel expense by its id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void filesGetTravelExpenseFilesTest() throws ApiException {
        String projectTravelExpenseGuid = null;
        Integer firstRow = null;
        Integer rowCount = null;
        List<ProjectTravelExpenseFileModel> response = api.filesGetTravelExpenseFiles(projectTravelExpenseGuid, firstRow, rowCount);
        // TODO: test validations
    }

    /**
     * Get all files of all travel expenses of the user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void filesGetUsersTravelExpensesFilesTest() throws ApiException {
        String userGuid = null;
        Integer firstRow = null;
        Integer rowCount = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        List<ProjectTravelExpenseFileModel> response = api.filesGetUsersTravelExpensesFiles(userGuid, firstRow, rowCount, startDate, endDate);
        // TODO: test validations
    }

    /**
     * Get all the keywords for file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void keywordsGetFileKeywordsTest() throws ApiException {
        String fileGuid = null;
        Boolean active = null;
        List<KeyValuePairOfStringAndSortDirection> sortings = null;
        List<FileKeywordModel> response = api.keywordsGetFileKeywords(fileGuid, active, sortings);
        // TODO: test validations
    }

    /**
     * Get an invoice PDF.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pdfGetInvoicePdfTest() throws ApiException {
        String guid = null;
        InvoiceType invoiceType = null;
        InvoicePdfGetOptions pdfGetOptions = null;
        File response = api.pdfGetInvoicePdf(guid, invoiceType, pdfGetOptions);
        // TODO: test validations
    }

    /**
     * Get a travel reimbursement PDF.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pdfGetTravelReimbursementPdfTest() throws ApiException {
        String guid = null;
        File response = api.pdfGetTravelReimbursementPdf(guid);
        // TODO: test validations
    }

}
