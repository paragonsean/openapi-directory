/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.InvoiceGrouping;
import org.openapitools.client.model.InvoiceSkin;
import org.openapitools.client.model.UserWithFirstNameLastNameAndPhotoFileModel;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for InvoiceSettingsOutputModel
 */
public class InvoiceSettingsOutputModelTest {
    private final InvoiceSettingsOutputModel model = new InvoiceSettingsOutputModel();

    /**
     * Model tests for InvoiceSettingsOutputModel
     */
    @Test
    public void testInvoiceSettingsOutputModel() {
        // TODO: test InvoiceSettingsOutputModel
    }

    /**
     * Test the property 'categorySortOrder'
     */
    @Test
    public void categorySortOrderTest() {
        // TODO: test categorySortOrder
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'createdDateTime'
     */
    @Test
    public void createdDateTimeTest() {
        // TODO: test createdDateTime
    }

    /**
     * Test the property 'entryDate'
     */
    @Test
    public void entryDateTest() {
        // TODO: test entryDate
    }

    /**
     * Test the property 'guid'
     */
    @Test
    public void guidTest() {
        // TODO: test guid
    }

    /**
     * Test the property 'isReverseCharged'
     */
    @Test
    public void isReverseChargedTest() {
        // TODO: test isReverseCharged
    }

    /**
     * Test the property 'lastUpdatedBy'
     */
    @Test
    public void lastUpdatedByTest() {
        // TODO: test lastUpdatedBy
    }

    /**
     * Test the property 'lastUpdatedDateTime'
     */
    @Test
    public void lastUpdatedDateTimeTest() {
        // TODO: test lastUpdatedDateTime
    }

    /**
     * Test the property 'paymentDate'
     */
    @Test
    public void paymentDateTest() {
        // TODO: test paymentDate
    }

    /**
     * Test the property 'projectFeeDescriptionFormat'
     */
    @Test
    public void projectFeeDescriptionFormatTest() {
        // TODO: test projectFeeDescriptionFormat
    }

    /**
     * Test the property 'projectFeeGrouping'
     */
    @Test
    public void projectFeeGroupingTest() {
        // TODO: test projectFeeGrouping
    }

    /**
     * Test the property 'projectFeePrimaryGroupBy'
     */
    @Test
    public void projectFeePrimaryGroupByTest() {
        // TODO: test projectFeePrimaryGroupBy
    }

    /**
     * Test the property 'projectFeeSecondaryGroupBy'
     */
    @Test
    public void projectFeeSecondaryGroupByTest() {
        // TODO: test projectFeeSecondaryGroupBy
    }

    /**
     * Test the property 'projectTravelExpenseDescriptionFormat'
     */
    @Test
    public void projectTravelExpenseDescriptionFormatTest() {
        // TODO: test projectTravelExpenseDescriptionFormat
    }

    /**
     * Test the property 'projectTravelExpenseGrouping'
     */
    @Test
    public void projectTravelExpenseGroupingTest() {
        // TODO: test projectTravelExpenseGrouping
    }

    /**
     * Test the property 'projectTravelExpensePrimaryGroupBy'
     */
    @Test
    public void projectTravelExpensePrimaryGroupByTest() {
        // TODO: test projectTravelExpensePrimaryGroupBy
    }

    /**
     * Test the property 'projectTravelExpenseSecondaryGroupBy'
     */
    @Test
    public void projectTravelExpenseSecondaryGroupByTest() {
        // TODO: test projectTravelExpenseSecondaryGroupBy
    }

    /**
     * Test the property 'reverseChargeDescription'
     */
    @Test
    public void reverseChargeDescriptionTest() {
        // TODO: test reverseChargeDescription
    }

    /**
     * Test the property 'showAttachmentPriceExcludingValueAddedTax'
     */
    @Test
    public void showAttachmentPriceExcludingValueAddedTaxTest() {
        // TODO: test showAttachmentPriceExcludingValueAddedTax
    }

    /**
     * Test the property 'showAttachmentQuantity'
     */
    @Test
    public void showAttachmentQuantityTest() {
        // TODO: test showAttachmentQuantity
    }

    /**
     * Test the property 'showAttachmentUnit'
     */
    @Test
    public void showAttachmentUnitTest() {
        // TODO: test showAttachmentUnit
    }

    /**
     * Test the property 'showAttachmentUnitPrice'
     */
    @Test
    public void showAttachmentUnitPriceTest() {
        // TODO: test showAttachmentUnitPrice
    }

    /**
     * Test the property 'showAttachmentValueAddedTax'
     */
    @Test
    public void showAttachmentValueAddedTaxTest() {
        // TODO: test showAttachmentValueAddedTax
    }

    /**
     * Test the property 'showCategories'
     */
    @Test
    public void showCategoriesTest() {
        // TODO: test showCategories
    }

    /**
     * Test the property 'showFooter'
     */
    @Test
    public void showFooterTest() {
        // TODO: test showFooter
    }

    /**
     * Test the property 'showLogoAndTitle'
     */
    @Test
    public void showLogoAndTitleTest() {
        // TODO: test showLogoAndTitle
    }

    /**
     * Test the property 'showPriceExcludingValueAddedTax'
     */
    @Test
    public void showPriceExcludingValueAddedTaxTest() {
        // TODO: test showPriceExcludingValueAddedTax
    }

    /**
     * Test the property 'showQuantity'
     */
    @Test
    public void showQuantityTest() {
        // TODO: test showQuantity
    }

    /**
     * Test the property 'showReferenceNumber'
     */
    @Test
    public void showReferenceNumberTest() {
        // TODO: test showReferenceNumber
    }

    /**
     * Test the property 'showUnit'
     */
    @Test
    public void showUnitTest() {
        // TODO: test showUnit
    }

    /**
     * Test the property 'showUnitPrice'
     */
    @Test
    public void showUnitPriceTest() {
        // TODO: test showUnitPrice
    }

    /**
     * Test the property 'showValueAddedTax'
     */
    @Test
    public void showValueAddedTaxTest() {
        // TODO: test showValueAddedTax
    }

    /**
     * Test the property 'style'
     */
    @Test
    public void styleTest() {
        // TODO: test style
    }

    /**
     * Test the property 'workHourDescriptionFormat'
     */
    @Test
    public void workHourDescriptionFormatTest() {
        // TODO: test workHourDescriptionFormat
    }

    /**
     * Test the property 'workHourGrouping'
     */
    @Test
    public void workHourGroupingTest() {
        // TODO: test workHourGrouping
    }

    /**
     * Test the property 'workHourPrimaryGroupBy'
     */
    @Test
    public void workHourPrimaryGroupByTest() {
        // TODO: test workHourPrimaryGroupBy
    }

    /**
     * Test the property 'workHourSecondaryGroupBy'
     */
    @Test
    public void workHourSecondaryGroupByTest() {
        // TODO: test workHourSecondaryGroupBy
    }

}
