/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ExceptionModel;
import org.openapitools.client.model.OrganizationDetailsOutputModel;
import org.openapitools.client.model.PatchOperation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrganizationWriteApi
 */
@Disabled
public class OrganizationWriteApiTest {

    private final OrganizationWriteApi api = new OrganizationWriteApi();

    /**
     * Update (Patch) a organization details or a part of it
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organizationDetailsPatchOrganizationDetailsTest() throws ApiException {
        List<PatchOperation> patchOperation = null;
        OrganizationDetailsOutputModel response = api.organizationDetailsPatchOrganizationDetails(patchOperation);
        // TODO: test validations
    }

}
