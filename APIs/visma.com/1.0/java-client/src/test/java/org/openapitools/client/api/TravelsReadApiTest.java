/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DeletedProjectTravelExpenseModel;
import org.openapitools.client.model.ExceptionModel;
import org.openapitools.client.model.ExpensesClass;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapitools.client.model.ProjectTravelExpenseOutputModel;
import org.openapitools.client.model.TravelReimbursementOutputModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TravelsReadApi
 */
@Disabled
public class TravelsReadApiTest {

    private final TravelsReadApi api = new TravelsReadApi();

    /**
     * Get the deleted project travel expenses.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void projectTravelExpensesGetDeletedProjectTravelExpensesTest() throws ApiException {
        String pageToken = null;
        Integer rowCount = null;
        List<String> projectGuid = null;
        List<String> userGuid = null;
        OffsetDateTime deletedSince = null;
        List<DeletedProjectTravelExpenseModel> response = api.projectTravelExpensesGetDeletedProjectTravelExpenses(pageToken, rowCount, projectGuid, userGuid, deletedSince);
        // TODO: test validations
    }

    /**
     * Get project travel expense by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void projectTravelExpensesGetProjectTravelExpenseTest() throws ApiException {
        String guid = null;
        ProjectTravelExpenseOutputModel response = api.projectTravelExpensesGetProjectTravelExpense(guid);
        // TODO: test validations
    }

    /**
     * Get the project travel expenses.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void projectTravelExpensesGetProjectTravelExpensesTest() throws ApiException {
        String pageToken = null;
        Integer rowCount = null;
        OffsetDateTime changedSince = null;
        List<ProjectTravelExpenseOutputModel> response = api.projectTravelExpensesGetProjectTravelExpenses(pageToken, rowCount, changedSince);
        // TODO: test validations
    }

    /**
     * Get all the project travel expenses for a project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void projectTravelExpensesGetProjectTravelExpensesForProjectTest() throws ApiException {
        String projectGuid = null;
        Boolean isBillable = null;
        Boolean isBilled = null;
        OffsetDateTime invoiceableDate = null;
        String pageToken = null;
        Integer rowCount = null;
        Boolean isBillablePeriodInFuture = null;
        ExpensesClass expenseClass = null;
        List<ProjectTravelExpenseOutputModel> response = api.projectTravelExpensesGetProjectTravelExpensesForProject(projectGuid, isBillable, isBilled, invoiceableDate, pageToken, rowCount, isBillablePeriodInFuture, expenseClass);
        // TODO: test validations
    }

    /**
     * Get all the project travel expenses for a travel reimbursement
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void projectTravelExpensesGetProjectTravelExpensesForTravelReimbursementTest() throws ApiException {
        String travelReimbursementGuid = null;
        String pageToken = null;
        Integer rowCount = null;
        ExpensesClass expenseClass = null;
        List<ProjectTravelExpenseOutputModel> response = api.projectTravelExpensesGetProjectTravelExpensesForTravelReimbursement(travelReimbursementGuid, pageToken, rowCount, expenseClass);
        // TODO: test validations
    }

    /**
     * Get all the project travel expenses for a user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void projectTravelExpensesGetProjectTravelExpensesForUserTest() throws ApiException {
        String userGuid = null;
        LocalDate startDate = null;
        LocalDate endDate = null;
        String pageToken = null;
        Integer rowCount = null;
        ExpensesClass expenseClass = null;
        Boolean isReimbursed = null;
        Boolean isTravelReimbursementRequired = null;
        String travelReimbursementGuid = null;
        String costCurrencyGuid = null;
        List<ProjectTravelExpenseOutputModel> response = api.projectTravelExpensesGetProjectTravelExpensesForUser(userGuid, startDate, endDate, pageToken, rowCount, expenseClass, isReimbursed, isTravelReimbursementRequired, travelReimbursementGuid, costCurrencyGuid);
        // TODO: test validations
    }

    /**
     * Get travel reimbursement by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void travelReimbursementsGetTravelReimbursementTest() throws ApiException {
        String guid = null;
        TravelReimbursementOutputModel response = api.travelReimbursementsGetTravelReimbursement(guid);
        // TODO: test validations
    }

    /**
     * Get travel reimbursements.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void travelReimbursementsGetTravelReimbursementsTest() throws ApiException {
        String pageToken = null;
        Integer rowCount = null;
        OffsetDateTime changedSince = null;
        List<String> travelReimbursementStatusGuids = null;
        List<TravelReimbursementOutputModel> response = api.travelReimbursementsGetTravelReimbursements(pageToken, rowCount, changedSince, travelReimbursementStatusGuids);
        // TODO: test validations
    }

}
