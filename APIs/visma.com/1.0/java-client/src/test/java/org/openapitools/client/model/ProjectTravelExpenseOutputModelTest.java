/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.InvoiceSubModel;
import org.openapitools.client.model.ModelBaseWithRequiredGuid;
import org.openapitools.client.model.ModelWithName;
import org.openapitools.client.model.MoneyOutputModel;
import org.openapitools.client.model.ProjectTravelExpenseBillingScheduleType;
import org.openapitools.client.model.ProjectTravelExpenseProjectSubModel;
import org.openapitools.client.model.TravelExpenseSubModel;
import org.openapitools.client.model.TravelReimbursementSubModel;
import org.openapitools.client.model.UserRequiredSubModel;
import org.openapitools.client.model.UserWithFirstNameLastNameAndPhotoFileModel;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ProjectTravelExpenseOutputModel
 */
public class ProjectTravelExpenseOutputModelTest {
    private final ProjectTravelExpenseOutputModel model = new ProjectTravelExpenseOutputModel();

    /**
     * Model tests for ProjectTravelExpenseOutputModel
     */
    @Test
    public void testProjectTravelExpenseOutputModel() {
        // TODO: test ProjectTravelExpenseOutputModel
    }

    /**
     * Test the property 'attachmentCount'
     */
    @Test
    public void attachmentCountTest() {
        // TODO: test attachmentCount
    }

    /**
     * Test the property 'billingDependencyPhase'
     */
    @Test
    public void billingDependencyPhaseTest() {
        // TODO: test billingDependencyPhase
    }

    /**
     * Test the property 'billingSchedule'
     */
    @Test
    public void billingScheduleTest() {
        // TODO: test billingSchedule
    }

    /**
     * Test the property 'costAccount'
     */
    @Test
    public void costAccountTest() {
        // TODO: test costAccount
    }

    /**
     * Test the property 'costCenter'
     */
    @Test
    public void costCenterTest() {
        // TODO: test costCenter
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'createdDateTime'
     */
    @Test
    public void createdDateTimeTest() {
        // TODO: test createdDateTime
    }

    /**
     * Test the property 'customer'
     */
    @Test
    public void customerTest() {
        // TODO: test customer
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'eventDate'
     */
    @Test
    public void eventDateTest() {
        // TODO: test eventDate
    }

    /**
     * Test the property 'guid'
     */
    @Test
    public void guidTest() {
        // TODO: test guid
    }

    /**
     * Test the property 'invoice'
     */
    @Test
    public void invoiceTest() {
        // TODO: test invoice
    }

    /**
     * Test the property 'invoiceQuantity'
     */
    @Test
    public void invoiceQuantityTest() {
        // TODO: test invoiceQuantity
    }

    /**
     * Test the property 'invoiceRowComment'
     */
    @Test
    public void invoiceRowCommentTest() {
        // TODO: test invoiceRowComment
    }

    /**
     * Test the property 'invoiceRowDescription'
     */
    @Test
    public void invoiceRowDescriptionTest() {
        // TODO: test invoiceRowDescription
    }

    /**
     * Test the property 'invoiceRowGuid'
     */
    @Test
    public void invoiceRowGuidTest() {
        // TODO: test invoiceRowGuid
    }

    /**
     * Test the property 'isBillable'
     */
    @Test
    public void isBillableTest() {
        // TODO: test isBillable
    }

    /**
     * Test the property 'lastUpdatedBy'
     */
    @Test
    public void lastUpdatedByTest() {
        // TODO: test lastUpdatedBy
    }

    /**
     * Test the property 'lastUpdatedDateTime'
     */
    @Test
    public void lastUpdatedDateTimeTest() {
        // TODO: test lastUpdatedDateTime
    }

    /**
     * Test the property 'measurementUnit'
     */
    @Test
    public void measurementUnitTest() {
        // TODO: test measurementUnit
    }

    /**
     * Test the property 'phase'
     */
    @Test
    public void phaseTest() {
        // TODO: test phase
    }

    /**
     * Test the property 'plannedBillingDate'
     */
    @Test
    public void plannedBillingDateTest() {
        // TODO: test plannedBillingDate
    }

    /**
     * Test the property 'project'
     */
    @Test
    public void projectTest() {
        // TODO: test project
    }

    /**
     * Test the property 'purchaseVatRate'
     */
    @Test
    public void purchaseVatRateTest() {
        // TODO: test purchaseVatRate
    }

    /**
     * Test the property 'quantity'
     */
    @Test
    public void quantityTest() {
        // TODO: test quantity
    }

    /**
     * Test the property 'salesAccount'
     */
    @Test
    public void salesAccountTest() {
        // TODO: test salesAccount
    }

    /**
     * Test the property 'travelEndTime'
     */
    @Test
    public void travelEndTimeTest() {
        // TODO: test travelEndTime
    }

    /**
     * Test the property 'travelExpense'
     */
    @Test
    public void travelExpenseTest() {
        // TODO: test travelExpense
    }

    /**
     * Test the property 'travelReimbursement'
     */
    @Test
    public void travelReimbursementTest() {
        // TODO: test travelReimbursement
    }

    /**
     * Test the property 'travelReimbursementRequired'
     */
    @Test
    public void travelReimbursementRequiredTest() {
        // TODO: test travelReimbursementRequired
    }

    /**
     * Test the property 'travelStartTime'
     */
    @Test
    public void travelStartTimeTest() {
        // TODO: test travelStartTime
    }

    /**
     * Test the property 'unitCost'
     */
    @Test
    public void unitCostTest() {
        // TODO: test unitCost
    }

    /**
     * Test the property 'unitCostExcludingPurchaseVat'
     */
    @Test
    public void unitCostExcludingPurchaseVatTest() {
        // TODO: test unitCostExcludingPurchaseVat
    }

    /**
     * Test the property 'unitPrice'
     */
    @Test
    public void unitPriceTest() {
        // TODO: test unitPrice
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

    /**
     * Test the property 'vatRate'
     */
    @Test
    public void vatRateTest() {
        // TODO: test vatRate
    }

}
