/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CurrencySubModel;
import org.openapitools.client.model.FormattingCultureSubModel2;
import org.openapitools.client.model.FreeTextModel2;
import org.openapitools.client.model.InvoiceCustomerSubModel;
import org.openapitools.client.model.InvoiceLanguageSubModel;
import org.openapitools.client.model.InvoiceProjectSubModel;
import org.openapitools.client.model.InvoiceReceiverAddressSubModel;
import org.openapitools.client.model.InvoiceSenderAddressSubModel;
import org.openapitools.client.model.InvoiceStatusSubModel;
import org.openapitools.client.model.ModelWithName;
import org.openapitools.client.model.MoneyOutputModel;
import org.openapitools.client.model.RelatedInvoiceSubModel;
import org.openapitools.client.model.UserWithFirstNameLastNameAndPhotoFileModel;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for InvoiceOutputModel
 */
public class InvoiceOutputModelTest {
    private final InvoiceOutputModel model = new InvoiceOutputModel();

    /**
     * Model tests for InvoiceOutputModel
     */
    @Test
    public void testInvoiceOutputModel() {
        // TODO: test InvoiceOutputModel
    }

    /**
     * Test the property 'billingCustomer'
     */
    @Test
    public void billingCustomerTest() {
        // TODO: test billingCustomer
    }

    /**
     * Test the property 'canBeDeleted'
     */
    @Test
    public void canBeDeletedTest() {
        // TODO: test canBeDeleted
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'createdDateTime'
     */
    @Test
    public void createdDateTimeTest() {
        // TODO: test createdDateTime
    }

    /**
     * Test the property 'creditNoteInvoice'
     */
    @Test
    public void creditNoteInvoiceTest() {
        // TODO: test creditNoteInvoice
    }

    /**
     * Test the property 'culture'
     */
    @Test
    public void cultureTest() {
        // TODO: test culture
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'currencyRate'
     */
    @Test
    public void currencyRateTest() {
        // TODO: test currencyRate
    }

    /**
     * Test the property 'customer'
     */
    @Test
    public void customerTest() {
        // TODO: test customer
    }

    /**
     * Test the property 'date'
     */
    @Test
    public void dateTest() {
        // TODO: test date
    }

    /**
     * Test the property 'dueDate'
     */
    @Test
    public void dueDateTest() {
        // TODO: test dueDate
    }

    /**
     * Test the property 'entryDate'
     */
    @Test
    public void entryDateTest() {
        // TODO: test entryDate
    }

    /**
     * Test the property 'flatRatesTotalExcludingTax'
     */
    @Test
    public void flatRatesTotalExcludingTaxTest() {
        // TODO: test flatRatesTotalExcludingTax
    }

    /**
     * Test the property 'freeText1'
     */
    @Test
    public void freeText1Test() {
        // TODO: test freeText1
    }

    /**
     * Test the property 'freeText2'
     */
    @Test
    public void freeText2Test() {
        // TODO: test freeText2
    }

    /**
     * Test the property 'guid'
     */
    @Test
    public void guidTest() {
        // TODO: test guid
    }

    /**
     * Test the property 'invoiceNumberBusinessUnitGuid'
     */
    @Test
    public void invoiceNumberBusinessUnitGuidTest() {
        // TODO: test invoiceNumberBusinessUnitGuid
    }

    /**
     * Test the property 'invoiceTemplate'
     */
    @Test
    public void invoiceTemplateTest() {
        // TODO: test invoiceTemplate
    }

    /**
     * Test the property 'isCreditNote'
     */
    @Test
    public void isCreditNoteTest() {
        // TODO: test isCreditNote
    }

    /**
     * Test the property 'language'
     */
    @Test
    public void languageTest() {
        // TODO: test language
    }

    /**
     * Test the property 'lastUpdatedBy'
     */
    @Test
    public void lastUpdatedByTest() {
        // TODO: test lastUpdatedBy
    }

    /**
     * Test the property 'lastUpdatedDateTime'
     */
    @Test
    public void lastUpdatedDateTimeTest() {
        // TODO: test lastUpdatedDateTime
    }

    /**
     * Test the property 'notes'
     */
    @Test
    public void notesTest() {
        // TODO: test notes
    }

    /**
     * Test the property 'number'
     */
    @Test
    public void numberTest() {
        // TODO: test number
    }

    /**
     * Test the property 'orderNumber'
     */
    @Test
    public void orderNumberTest() {
        // TODO: test orderNumber
    }

    /**
     * Test the property 'ourReference'
     */
    @Test
    public void ourReferenceTest() {
        // TODO: test ourReference
    }

    /**
     * Test the property 'overdueInterest'
     */
    @Test
    public void overdueInterestTest() {
        // TODO: test overdueInterest
    }

    /**
     * Test the property 'paymentDate'
     */
    @Test
    public void paymentDateTest() {
        // TODO: test paymentDate
    }

    /**
     * Test the property 'paymentTerm'
     */
    @Test
    public void paymentTermTest() {
        // TODO: test paymentTerm
    }

    /**
     * Test the property 'projectFeesTotalExcludingTax'
     */
    @Test
    public void projectFeesTotalExcludingTaxTest() {
        // TODO: test projectFeesTotalExcludingTax
    }

    /**
     * Test the property 'projectTravelExpensesTotalExcludingTax'
     */
    @Test
    public void projectTravelExpensesTotalExcludingTaxTest() {
        // TODO: test projectTravelExpensesTotalExcludingTax
    }

    /**
     * Test the property 'projects'
     */
    @Test
    public void projectsTest() {
        // TODO: test projects
    }

    /**
     * Test the property 'receiverAddress'
     */
    @Test
    public void receiverAddressTest() {
        // TODO: test receiverAddress
    }

    /**
     * Test the property 'receiverContactEmail'
     */
    @Test
    public void receiverContactEmailTest() {
        // TODO: test receiverContactEmail
    }

    /**
     * Test the property 'receiverContactGuid'
     */
    @Test
    public void receiverContactGuidTest() {
        // TODO: test receiverContactGuid
    }

    /**
     * Test the property 'receiverContactName'
     */
    @Test
    public void receiverContactNameTest() {
        // TODO: test receiverContactName
    }

    /**
     * Test the property 'receiverCustomerName'
     */
    @Test
    public void receiverCustomerNameTest() {
        // TODO: test receiverCustomerName
    }

    /**
     * Test the property 'receiverKvkNumber'
     */
    @Test
    public void receiverKvkNumberTest() {
        // TODO: test receiverKvkNumber
    }

    /**
     * Test the property 'receiverVatNumber'
     */
    @Test
    public void receiverVatNumberTest() {
        // TODO: test receiverVatNumber
    }

    /**
     * Test the property 'referenceNumber'
     */
    @Test
    public void referenceNumberTest() {
        // TODO: test referenceNumber
    }

    /**
     * Test the property 'reimburseInvoice'
     */
    @Test
    public void reimburseInvoiceTest() {
        // TODO: test reimburseInvoice
    }

    /**
     * Test the property 'senderAddress'
     */
    @Test
    public void senderAddressTest() {
        // TODO: test senderAddress
    }

    /**
     * Test the property 'senderContactGuid'
     */
    @Test
    public void senderContactGuidTest() {
        // TODO: test senderContactGuid
    }

    /**
     * Test the property 'senderContactName'
     */
    @Test
    public void senderContactNameTest() {
        // TODO: test senderContactName
    }

    /**
     * Test the property 'senderKvkNumber'
     */
    @Test
    public void senderKvkNumberTest() {
        // TODO: test senderKvkNumber
    }

    /**
     * Test the property 'senderName'
     */
    @Test
    public void senderNameTest() {
        // TODO: test senderName
    }

    /**
     * Test the property 'senderVatNumber'
     */
    @Test
    public void senderVatNumberTest() {
        // TODO: test senderVatNumber
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'totalExcludingTax'
     */
    @Test
    public void totalExcludingTaxTest() {
        // TODO: test totalExcludingTax
    }

    /**
     * Test the property 'totalIncludingTax'
     */
    @Test
    public void totalIncludingTaxTest() {
        // TODO: test totalIncludingTax
    }

    /**
     * Test the property 'totalTax'
     */
    @Test
    public void totalTaxTest() {
        // TODO: test totalTax
    }

    /**
     * Test the property 'workHourValueAddedTax'
     */
    @Test
    public void workHourValueAddedTaxTest() {
        // TODO: test workHourValueAddedTax
    }

    /**
     * Test the property 'workHoursQuantity'
     */
    @Test
    public void workHoursQuantityTest() {
        // TODO: test workHoursQuantity
    }

    /**
     * Test the property 'workHoursTotalExcludingTax'
     */
    @Test
    public void workHoursTotalExcludingTaxTest() {
        // TODO: test workHoursTotalExcludingTax
    }

    /**
     * Test the property 'yourReference'
     */
    @Test
    public void yourReferenceTest() {
        // TODO: test yourReference
    }

}
