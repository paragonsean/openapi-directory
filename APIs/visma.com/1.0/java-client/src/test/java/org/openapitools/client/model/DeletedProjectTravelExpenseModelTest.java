/*
 * Severa Public Rest API Documentation
 * The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.    You need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.    After authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.    The access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.    
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ModelBaseReadOnly;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DeletedProjectTravelExpenseModel
 */
public class DeletedProjectTravelExpenseModelTest {
    private final DeletedProjectTravelExpenseModel model = new DeletedProjectTravelExpenseModel();

    /**
     * Model tests for DeletedProjectTravelExpenseModel
     */
    @Test
    public void testDeletedProjectTravelExpenseModel() {
        // TODO: test DeletedProjectTravelExpenseModel
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'createdDateTime'
     */
    @Test
    public void createdDateTimeTest() {
        // TODO: test createdDateTime
    }

    /**
     * Test the property 'customer'
     */
    @Test
    public void customerTest() {
        // TODO: test customer
    }

    /**
     * Test the property 'deletedDateTime'
     */
    @Test
    public void deletedDateTimeTest() {
        // TODO: test deletedDateTime
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'eventDate'
     */
    @Test
    public void eventDateTest() {
        // TODO: test eventDate
    }

    /**
     * Test the property 'guid'
     */
    @Test
    public void guidTest() {
        // TODO: test guid
    }

    /**
     * Test the property 'lastUpdatedBy'
     */
    @Test
    public void lastUpdatedByTest() {
        // TODO: test lastUpdatedBy
    }

    /**
     * Test the property 'lastUpdatedDateTime'
     */
    @Test
    public void lastUpdatedDateTimeTest() {
        // TODO: test lastUpdatedDateTime
    }

    /**
     * Test the property 'measurementUnit'
     */
    @Test
    public void measurementUnitTest() {
        // TODO: test measurementUnit
    }

    /**
     * Test the property 'phase'
     */
    @Test
    public void phaseTest() {
        // TODO: test phase
    }

    /**
     * Test the property 'project'
     */
    @Test
    public void projectTest() {
        // TODO: test project
    }

    /**
     * Test the property 'quantity'
     */
    @Test
    public void quantityTest() {
        // TODO: test quantity
    }

    /**
     * Test the property 'travelEndTime'
     */
    @Test
    public void travelEndTimeTest() {
        // TODO: test travelEndTime
    }

    /**
     * Test the property 'travelExpense'
     */
    @Test
    public void travelExpenseTest() {
        // TODO: test travelExpense
    }

    /**
     * Test the property 'travelStartTime'
     */
    @Test
    public void travelStartTimeTest() {
        // TODO: test travelStartTime
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

}
