/*
 * Article Rewriter and Article Extractor API
 * Spinbot.net propose a new solution based on high technologies for faster article spinner and extractor that you will love to use it. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: admin@spinbot.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Return the user credit information.
     *
     * Return the user credit information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInfoTest() throws ApiException {
        String key = null;
        Object response = api.getInfo(key);
        // TODO: test validations
    }

    /**
     * Extracting the main article of the given URL.
     *
     * Extracting the main article of the given URL. The response is in JSON format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postArticleTest() throws ApiException {
        String key = null;
        String url = null;
        String fasterMode = null;
        Object response = api.postArticle(key, url, fasterMode);
        // TODO: test validations
    }

    /**
     * Human readable auto rewrite your article.
     *
     * Human readable auto rewrite your article. The response is in JSON format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postPrettySpinnerTest() throws ApiException {
        String key = null;
        String text = null;
        String keep = null;
        String accuracy = null;
        Object response = api.postPrettySpinner(key, text, keep, accuracy);
        // TODO: test validations
    }

    /**
     * Rewriting (spinning) your input article.
     *
     * Rewriting (spinning) you input article. The response is in JSON format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postSpinnerTest() throws ApiException {
        String key = null;
        String text = null;
        Object response = api.postSpinner(key, text);
        // TODO: test validations
    }

    /**
     * Generate Spintax format for the input article
     *
     * Generate Spintax format for the input article, so you can rewrite it yourself. The response is in JSON format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postSpintaxTest() throws ApiException {
        String key = null;
        String text = null;
        String fullMode = null;
        Object response = api.postSpintax(key, text, fullMode);
        // TODO: test validations
    }

}
