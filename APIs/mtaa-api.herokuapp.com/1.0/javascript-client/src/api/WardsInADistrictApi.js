/**
 * Mtaa API Documentation
 * Mtaa A simple REST API to access Tanzania's location information,With mtaa API you can easily query and integrate all the location in tanzania from region level to streets from your programming language of your your choice
 *
 * The version of the OpenAPI document: 1.0
 * Contact: isaackeinstein@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* WardsInADistrict service.
* @module api/WardsInADistrictApi
* @version 1.0
*/
export default class WardsInADistrictApi {

    /**
    * Constructs a new WardsInADistrictApi. 
    * @alias module:api/WardsInADistrictApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the wardsInADistrict operation.
     * @callback module:api/WardsInADistrictApi~wardsInADistrictCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns all wards in a district
     * Returns all wards in a  specified district and district postcode
     * @param {String} country Country name in lowercase eg( tanzania)
     * @param {String} region Name of the region eg (Mbeya)
     * @param {String} district Name of the District eg (Rungwe)
     * @param {module:api/WardsInADistrictApi~wardsInADistrictCallback} callback The callback function, accepting three arguments: error, data, response
     */
    wardsInADistrict(country, region, district, callback) {
      let postBody = null;
      // verify the required parameter 'country' is set
      if (country === undefined || country === null) {
        throw new Error("Missing the required parameter 'country' when calling wardsInADistrict");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling wardsInADistrict");
      }
      // verify the required parameter 'district' is set
      if (district === undefined || district === null) {
        throw new Error("Missing the required parameter 'district' when calling wardsInADistrict");
      }

      let pathParams = {
        'country': country,
        'region': region,
        'district': district
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/{country}/{region}/{district}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
