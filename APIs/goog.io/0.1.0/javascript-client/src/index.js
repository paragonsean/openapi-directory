/**
 * goog.io | Unoffical Google Search API
 * # Intoduction  This is the OpenAPI V3 documentation for https://api.goog.io  An API to perform Google Searches. Extremely fast and accurate. Zero proxies. Clean USA IPs.  Simple to use API, but advance enough to support special parameters such as languages, country and geographic locality.  Googio is the ultimate search API for Google Searches, Google News, and Google SERP. # Docs  > An Unofficial Google Search API  An API to perform Google Searches. Extremely fast and accurate. Zero proxies. Clean USA IPs.  Simple to use API, but advance enough to support special parameters such as languages, country and geographic locality.  # Example Code   Check out [Github repo](https://github.com/googio/googio_examples) for example code for calling the API with various languages.  # Authentication  ### API Key  Optional API key for authenticated access. Note that we use \"API key\" interchangably in these docs.  Authenticated requests must include an `apikey` header containing your subscription's API Key.  | Security Schema Type | Header Name | Example Token | | --- | --- | --- | | API Key | `apikey` | c5bfb018-ab46-4e61-9271-4ec7e9c04a6e |  In the following example, `YOU_APIKEY` represents the auth token for your account.  ``` curl --header 'apikey: YOU_APIKEY' ```  You can view and manage your API keys in the [Dashboard](/dashboard).  Be sure to keep your API keys secure. Do not share them in publicly accessible areas such as GitHub, client-side code, and so forth.  Also note that all API requests must be made over **HTTPS**. Calls made over plain HTTP will attempt to be automatically upgraded to HTTPS, though this use cases is discouraged.   ## Rate Limits  API requests may be rate limited depending on your subscription plan and traffic patterns. The following response headers will be present in these cases:  | Header | Description | | ------ | ----------- | | `X-RateLimit-Limit` | The maximum number of requests that the consumer is permitted to make. | | `X-RateLimit-Remaining` | The number of requests remaining in the current rate limit window. | | `X-RateLimit-Reset` | The time at which the current rate limit window resets in UTC epoch seconds. |  When the rate limit is **exceeded**, an error is returned with the status \"**429 Too Many Requests**\":  ```json {   \"error\": {     \"code\": \"too_many_requests\",     \"message\": \"Rate limit exceeded\"   } } ```    ## Errors  This API uses conventional HTTP response codes to indicate the success or failure of API requests. In general: Codes in the `2xx` range indicate success. Codes in the `4xx` range indicate an error that failed given the information provided (e.g., a required parameter was omitted, endpoint not found, etc.). Codes in the `5xx` range indicate an error with our API (these are rare).   
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@goog.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Crawl200Response from './model/Crawl200Response';
import GetTheStatusOfTheAPIService200Response from './model/GetTheStatusOfTheAPIService200Response';
import HTTPValidationError from './model/HTTPValidationError';
import Images200Response from './model/Images200Response';
import Images200ResponseImageResultsInner from './model/Images200ResponseImageResultsInner';
import Images200ResponseImageResultsInnerImage from './model/Images200ResponseImageResultsInnerImage';
import Images200ResponseImageResultsInnerLink from './model/Images200ResponseImageResultsInnerLink';
import News200Response from './model/News200Response';
import News200ResponseEntriesInner from './model/News200ResponseEntriesInner';
import News200ResponseFeed from './model/News200ResponseFeed';
import Search200Response from './model/Search200Response';
import Search200ResponseResultsInner from './model/Search200ResponseResultsInner';
import Serp200Response from './model/Serp200Response';
import SerpData from './model/SerpData';
import ValidationError from './model/ValidationError';
import DefaultApi from './api/DefaultApi';


/**
* # Intoduction  This is the OpenAPI V3 documentation for https://api.goog.io  An API to perform Google Searches. Extremely fast and accurate. Zero proxies. Clean USA IPs.  Simple to use API, but advance enough to support special parameters such as languages, country and geographic locality.  Googio is the ultimate search API for Google Searches, Google News, and Google SERP. # Docs  &gt; An Unofficial Google Search API  An API to perform Google Searches. Extremely fast and accurate. Zero proxies. Clean USA IPs.  Simple to use API, but advance enough to support special parameters such as languages, country and geographic locality.  # Example Code   Check out [Github repo](https://github.com/googio/googio_examples) for example code for calling the API with various languages.  # Authentication  ### API Key  Optional API key for authenticated access. Note that we use \&quot;API key\&quot; interchangably in these docs.  Authenticated requests must include an &#x60;apikey&#x60; header containing your subscription&#39;s API Key.  | Security Schema Type | Header Name | Example Token | | --- | --- | --- | | API Key | &#x60;apikey&#x60; | c5bfb018-ab46-4e61-9271-4ec7e9c04a6e |  In the following example, &#x60;YOU_APIKEY&#x60; represents the auth token for your account.  &#x60;&#x60;&#x60; curl --header &#39;apikey: YOU_APIKEY&#39; &#x60;&#x60;&#x60;  You can view and manage your API keys in the [Dashboard](/dashboard).  Be sure to keep your API keys secure. Do not share them in publicly accessible areas such as GitHub, client-side code, and so forth.  Also note that all API requests must be made over **HTTPS**. Calls made over plain HTTP will attempt to be automatically upgraded to HTTPS, though this use cases is discouraged.   ## Rate Limits  API requests may be rate limited depending on your subscription plan and traffic patterns. The following response headers will be present in these cases:  | Header | Description | | ------ | ----------- | | &#x60;X-RateLimit-Limit&#x60; | The maximum number of requests that the consumer is permitted to make. | | &#x60;X-RateLimit-Remaining&#x60; | The number of requests remaining in the current rate limit window. | | &#x60;X-RateLimit-Reset&#x60; | The time at which the current rate limit window resets in UTC epoch seconds. |  When the rate limit is **exceeded**, an error is returned with the status \&quot;**429 Too Many Requests**\&quot;:  &#x60;&#x60;&#x60;json {   \&quot;error\&quot;: {     \&quot;code\&quot;: \&quot;too_many_requests\&quot;,     \&quot;message\&quot;: \&quot;Rate limit exceeded\&quot;   } } &#x60;&#x60;&#x60;    ## Errors  This API uses conventional HTTP response codes to indicate the success or failure of API requests. In general: Codes in the &#x60;2xx&#x60; range indicate success. Codes in the &#x60;4xx&#x60; range indicate an error that failed given the information provided (e.g., a required parameter was omitted, endpoint not found, etc.). Codes in the &#x60;5xx&#x60; range indicate an error with our API (these are rare).   .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GoogIoUnofficalGoogleSearchApi = require('index'); // See note below*.
* var xxxSvc = new GoogIoUnofficalGoogleSearchApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GoogIoUnofficalGoogleSearchApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GoogIoUnofficalGoogleSearchApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GoogIoUnofficalGoogleSearchApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Crawl200Response model constructor.
     * @property {module:model/Crawl200Response}
     */
    Crawl200Response,

    /**
     * The GetTheStatusOfTheAPIService200Response model constructor.
     * @property {module:model/GetTheStatusOfTheAPIService200Response}
     */
    GetTheStatusOfTheAPIService200Response,

    /**
     * The HTTPValidationError model constructor.
     * @property {module:model/HTTPValidationError}
     */
    HTTPValidationError,

    /**
     * The Images200Response model constructor.
     * @property {module:model/Images200Response}
     */
    Images200Response,

    /**
     * The Images200ResponseImageResultsInner model constructor.
     * @property {module:model/Images200ResponseImageResultsInner}
     */
    Images200ResponseImageResultsInner,

    /**
     * The Images200ResponseImageResultsInnerImage model constructor.
     * @property {module:model/Images200ResponseImageResultsInnerImage}
     */
    Images200ResponseImageResultsInnerImage,

    /**
     * The Images200ResponseImageResultsInnerLink model constructor.
     * @property {module:model/Images200ResponseImageResultsInnerLink}
     */
    Images200ResponseImageResultsInnerLink,

    /**
     * The News200Response model constructor.
     * @property {module:model/News200Response}
     */
    News200Response,

    /**
     * The News200ResponseEntriesInner model constructor.
     * @property {module:model/News200ResponseEntriesInner}
     */
    News200ResponseEntriesInner,

    /**
     * The News200ResponseFeed model constructor.
     * @property {module:model/News200ResponseFeed}
     */
    News200ResponseFeed,

    /**
     * The Search200Response model constructor.
     * @property {module:model/Search200Response}
     */
    Search200Response,

    /**
     * The Search200ResponseResultsInner model constructor.
     * @property {module:model/Search200ResponseResultsInner}
     */
    Search200ResponseResultsInner,

    /**
     * The Serp200Response model constructor.
     * @property {module:model/Serp200Response}
     */
    Serp200Response,

    /**
     * The SerpData model constructor.
     * @property {module:model/SerpData}
     */
    SerpData,

    /**
     * The ValidationError model constructor.
     * @property {module:model/ValidationError}
     */
    ValidationError,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
