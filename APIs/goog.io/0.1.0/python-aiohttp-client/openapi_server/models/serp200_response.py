# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Serp200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, position: int=None, query: str=None, searched_results: int=None, website: str=None):
        """Serp200Response - a model defined in OpenAPI

        :param position: The position of this Serp200Response.
        :param query: The query of this Serp200Response.
        :param searched_results: The searched_results of this Serp200Response.
        :param website: The website of this Serp200Response.
        """
        self.openapi_types = {
            'position': int,
            'query': str,
            'searched_results': int,
            'website': str
        }

        self.attribute_map = {
            'position': 'position',
            'query': 'query',
            'searched_results': 'searched_results',
            'website': 'website'
        }

        self._position = position
        self._query = query
        self._searched_results = searched_results
        self._website = website

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Serp200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The serp_200_response of this Serp200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def position(self):
        """Gets the position of this Serp200Response.


        :return: The position of this Serp200Response.
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this Serp200Response.


        :param position: The position of this Serp200Response.
        :type position: int
        """

        self._position = position

    @property
    def query(self):
        """Gets the query of this Serp200Response.


        :return: The query of this Serp200Response.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this Serp200Response.


        :param query: The query of this Serp200Response.
        :type query: str
        """

        self._query = query

    @property
    def searched_results(self):
        """Gets the searched_results of this Serp200Response.


        :return: The searched_results of this Serp200Response.
        :rtype: int
        """
        return self._searched_results

    @searched_results.setter
    def searched_results(self, searched_results):
        """Sets the searched_results of this Serp200Response.


        :param searched_results: The searched_results of this Serp200Response.
        :type searched_results: int
        """

        self._searched_results = searched_results

    @property
    def website(self):
        """Gets the website of this Serp200Response.


        :return: The website of this Serp200Response.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this Serp200Response.


        :param website: The website of this Serp200Response.
        :type website: str
        """

        self._website = website
