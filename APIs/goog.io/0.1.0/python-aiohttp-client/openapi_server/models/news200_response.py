# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.news200_response_entries_inner import News200ResponseEntriesInner
from openapi_server.models.news200_response_feed import News200ResponseFeed
from openapi_server import util


class News200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entries: List[News200ResponseEntriesInner]=None, feed: News200ResponseFeed=None):
        """News200Response - a model defined in OpenAPI

        :param entries: The entries of this News200Response.
        :param feed: The feed of this News200Response.
        """
        self.openapi_types = {
            'entries': List[News200ResponseEntriesInner],
            'feed': News200ResponseFeed
        }

        self.attribute_map = {
            'entries': 'entries',
            'feed': 'feed'
        }

        self._entries = entries
        self._feed = feed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'News200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The News_200_response of this News200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entries(self):
        """Gets the entries of this News200Response.


        :return: The entries of this News200Response.
        :rtype: List[News200ResponseEntriesInner]
        """
        return self._entries

    @entries.setter
    def entries(self, entries):
        """Sets the entries of this News200Response.


        :param entries: The entries of this News200Response.
        :type entries: List[News200ResponseEntriesInner]
        """

        self._entries = entries

    @property
    def feed(self):
        """Gets the feed of this News200Response.


        :return: The feed of this News200Response.
        :rtype: News200ResponseFeed
        """
        return self._feed

    @feed.setter
    def feed(self, feed):
        """Sets the feed of this News200Response.


        :param feed: The feed of this News200Response.
        :type feed: News200ResponseFeed
        """

        self._feed = feed
