# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Crawl200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, answer: str=None, results: List[str]=None, total: str=None):
        """Crawl200Response - a model defined in OpenAPI

        :param answer: The answer of this Crawl200Response.
        :param results: The results of this Crawl200Response.
        :param total: The total of this Crawl200Response.
        """
        self.openapi_types = {
            'answer': str,
            'results': List[str],
            'total': str
        }

        self.attribute_map = {
            'answer': 'answer',
            'results': 'results',
            'total': 'total'
        }

        self._answer = answer
        self._results = results
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Crawl200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Crawl_200_response of this Crawl200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answer(self):
        """Gets the answer of this Crawl200Response.


        :return: The answer of this Crawl200Response.
        :rtype: str
        """
        return self._answer

    @answer.setter
    def answer(self, answer):
        """Sets the answer of this Crawl200Response.


        :param answer: The answer of this Crawl200Response.
        :type answer: str
        """

        self._answer = answer

    @property
    def results(self):
        """Gets the results of this Crawl200Response.


        :return: The results of this Crawl200Response.
        :rtype: List[str]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this Crawl200Response.


        :param results: The results of this Crawl200Response.
        :type results: List[str]
        """

        self._results = results

    @property
    def total(self):
        """Gets the total of this Crawl200Response.


        :return: The total of this Crawl200Response.
        :rtype: str
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this Crawl200Response.


        :param total: The total of this Crawl200Response.
        :type total: str
        """

        self._total = total
