# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.document_response_detailed_paragraphs_inner import DocumentResponseDetailedParagraphsInner
from openapi_server.models.document_response_detailed_scan_settings import DocumentResponseDetailedScanSettings
from openapi_server.models.stats import Stats
from openapi_server import util


class DocumentResponseDetailed(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, completed: datetime=None, eta: datetime=None, id: int=None, paragraphs: List[DocumentResponseDetailedParagraphsInner]=None, scan_settings: DocumentResponseDetailedScanSettings=None, started: datetime=None, stats: Stats=None, title: str=None):
        """DocumentResponseDetailed - a model defined in OpenAPI

        :param completed: The completed of this DocumentResponseDetailed.
        :param eta: The eta of this DocumentResponseDetailed.
        :param id: The id of this DocumentResponseDetailed.
        :param paragraphs: The paragraphs of this DocumentResponseDetailed.
        :param scan_settings: The scan_settings of this DocumentResponseDetailed.
        :param started: The started of this DocumentResponseDetailed.
        :param stats: The stats of this DocumentResponseDetailed.
        :param title: The title of this DocumentResponseDetailed.
        """
        self.openapi_types = {
            'completed': datetime,
            'eta': datetime,
            'id': int,
            'paragraphs': List[DocumentResponseDetailedParagraphsInner],
            'scan_settings': DocumentResponseDetailedScanSettings,
            'started': datetime,
            'stats': Stats,
            'title': str
        }

        self.attribute_map = {
            'completed': 'completed',
            'eta': 'eta',
            'id': 'id',
            'paragraphs': 'paragraphs',
            'scan_settings': 'scanSettings',
            'started': 'started',
            'stats': 'stats',
            'title': 'title'
        }

        self._completed = completed
        self._eta = eta
        self._id = id
        self._paragraphs = paragraphs
        self._scan_settings = scan_settings
        self._started = started
        self._stats = stats
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentResponseDetailed':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DocumentResponseDetailed of this DocumentResponseDetailed.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def completed(self):
        """Gets the completed of this DocumentResponseDetailed.


        :return: The completed of this DocumentResponseDetailed.
        :rtype: datetime
        """
        return self._completed

    @completed.setter
    def completed(self, completed):
        """Sets the completed of this DocumentResponseDetailed.


        :param completed: The completed of this DocumentResponseDetailed.
        :type completed: datetime
        """

        self._completed = completed

    @property
    def eta(self):
        """Gets the eta of this DocumentResponseDetailed.


        :return: The eta of this DocumentResponseDetailed.
        :rtype: datetime
        """
        return self._eta

    @eta.setter
    def eta(self, eta):
        """Sets the eta of this DocumentResponseDetailed.


        :param eta: The eta of this DocumentResponseDetailed.
        :type eta: datetime
        """

        self._eta = eta

    @property
    def id(self):
        """Gets the id of this DocumentResponseDetailed.


        :return: The id of this DocumentResponseDetailed.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DocumentResponseDetailed.


        :param id: The id of this DocumentResponseDetailed.
        :type id: int
        """

        self._id = id

    @property
    def paragraphs(self):
        """Gets the paragraphs of this DocumentResponseDetailed.


        :return: The paragraphs of this DocumentResponseDetailed.
        :rtype: List[DocumentResponseDetailedParagraphsInner]
        """
        return self._paragraphs

    @paragraphs.setter
    def paragraphs(self, paragraphs):
        """Sets the paragraphs of this DocumentResponseDetailed.


        :param paragraphs: The paragraphs of this DocumentResponseDetailed.
        :type paragraphs: List[DocumentResponseDetailedParagraphsInner]
        """

        self._paragraphs = paragraphs

    @property
    def scan_settings(self):
        """Gets the scan_settings of this DocumentResponseDetailed.


        :return: The scan_settings of this DocumentResponseDetailed.
        :rtype: DocumentResponseDetailedScanSettings
        """
        return self._scan_settings

    @scan_settings.setter
    def scan_settings(self, scan_settings):
        """Sets the scan_settings of this DocumentResponseDetailed.


        :param scan_settings: The scan_settings of this DocumentResponseDetailed.
        :type scan_settings: DocumentResponseDetailedScanSettings
        """

        self._scan_settings = scan_settings

    @property
    def started(self):
        """Gets the started of this DocumentResponseDetailed.


        :return: The started of this DocumentResponseDetailed.
        :rtype: datetime
        """
        return self._started

    @started.setter
    def started(self, started):
        """Sets the started of this DocumentResponseDetailed.


        :param started: The started of this DocumentResponseDetailed.
        :type started: datetime
        """

        self._started = started

    @property
    def stats(self):
        """Gets the stats of this DocumentResponseDetailed.


        :return: The stats of this DocumentResponseDetailed.
        :rtype: Stats
        """
        return self._stats

    @stats.setter
    def stats(self, stats):
        """Sets the stats of this DocumentResponseDetailed.


        :param stats: The stats of this DocumentResponseDetailed.
        :type stats: Stats
        """

        self._stats = stats

    @property
    def title(self):
        """Gets the title of this DocumentResponseDetailed.


        :return: The title of this DocumentResponseDetailed.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this DocumentResponseDetailed.


        :param title: The title of this DocumentResponseDetailed.
        :type title: str
        """

        self._title = title
