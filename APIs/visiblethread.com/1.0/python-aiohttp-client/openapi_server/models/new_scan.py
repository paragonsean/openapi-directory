# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.new_scan_scan_settings import NewScanScanSettings
from openapi_server.models.new_scan_web_urls_inner import NewScanWebUrlsInner
from openapi_server import util


class NewScan(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scan_settings: NewScanScanSettings=None, title: str=None, web_urls: List[NewScanWebUrlsInner]=None):
        """NewScan - a model defined in OpenAPI

        :param scan_settings: The scan_settings of this NewScan.
        :param title: The title of this NewScan.
        :param web_urls: The web_urls of this NewScan.
        """
        self.openapi_types = {
            'scan_settings': NewScanScanSettings,
            'title': str,
            'web_urls': List[NewScanWebUrlsInner]
        }

        self.attribute_map = {
            'scan_settings': 'scanSettings',
            'title': 'title',
            'web_urls': 'webUrls'
        }

        self._scan_settings = scan_settings
        self._title = title
        self._web_urls = web_urls

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NewScan':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NewScan of this NewScan.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scan_settings(self):
        """Gets the scan_settings of this NewScan.


        :return: The scan_settings of this NewScan.
        :rtype: NewScanScanSettings
        """
        return self._scan_settings

    @scan_settings.setter
    def scan_settings(self, scan_settings):
        """Sets the scan_settings of this NewScan.


        :param scan_settings: The scan_settings of this NewScan.
        :type scan_settings: NewScanScanSettings
        """

        self._scan_settings = scan_settings

    @property
    def title(self):
        """Gets the title of this NewScan.


        :return: The title of this NewScan.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this NewScan.


        :param title: The title of this NewScan.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")

        self._title = title

    @property
    def web_urls(self):
        """Gets the web_urls of this NewScan.


        :return: The web_urls of this NewScan.
        :rtype: List[NewScanWebUrlsInner]
        """
        return self._web_urls

    @web_urls.setter
    def web_urls(self, web_urls):
        """Sets the web_urls of this NewScan.


        :param web_urls: The web_urls of this NewScan.
        :type web_urls: List[NewScanWebUrlsInner]
        """
        if web_urls is None:
            raise ValueError("Invalid value for `web_urls`, must not be `None`")

        self._web_urls = web_urls
