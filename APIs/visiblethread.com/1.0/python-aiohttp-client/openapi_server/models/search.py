# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Search(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dict_id: int=None, doc_id: int=None):
        """Search - a model defined in OpenAPI

        :param dict_id: The dict_id of this Search.
        :param doc_id: The doc_id of this Search.
        """
        self.openapi_types = {
            'dict_id': int,
            'doc_id': int
        }

        self.attribute_map = {
            'dict_id': 'dictId',
            'doc_id': 'docId'
        }

        self._dict_id = dict_id
        self._doc_id = doc_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Search':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Search of this Search.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dict_id(self):
        """Gets the dict_id of this Search.


        :return: The dict_id of this Search.
        :rtype: int
        """
        return self._dict_id

    @dict_id.setter
    def dict_id(self, dict_id):
        """Sets the dict_id of this Search.


        :param dict_id: The dict_id of this Search.
        :type dict_id: int
        """
        if dict_id is None:
            raise ValueError("Invalid value for `dict_id`, must not be `None`")

        self._dict_id = dict_id

    @property
    def doc_id(self):
        """Gets the doc_id of this Search.


        :return: The doc_id of this Search.
        :rtype: int
        """
        return self._doc_id

    @doc_id.setter
    def doc_id(self, doc_id):
        """Sets the doc_id of this Search.


        :param doc_id: The doc_id of this Search.
        :type doc_id: int
        """
        if doc_id is None:
            raise ValueError("Invalid value for `doc_id`, must not be `None`")

        self._doc_id = doc_id
