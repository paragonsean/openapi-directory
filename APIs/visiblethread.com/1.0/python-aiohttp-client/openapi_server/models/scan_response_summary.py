# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.scan_summary import ScanSummary
from openapi_server import util


class ScanResponseSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, completed: datetime=None, eta: datetime=None, id: int=None, scan: ScanSummary=None, started: datetime=None):
        """ScanResponseSummary - a model defined in OpenAPI

        :param completed: The completed of this ScanResponseSummary.
        :param eta: The eta of this ScanResponseSummary.
        :param id: The id of this ScanResponseSummary.
        :param scan: The scan of this ScanResponseSummary.
        :param started: The started of this ScanResponseSummary.
        """
        self.openapi_types = {
            'completed': datetime,
            'eta': datetime,
            'id': int,
            'scan': ScanSummary,
            'started': datetime
        }

        self.attribute_map = {
            'completed': 'completed',
            'eta': 'eta',
            'id': 'id',
            'scan': 'scan',
            'started': 'started'
        }

        self._completed = completed
        self._eta = eta
        self._id = id
        self._scan = scan
        self._started = started

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScanResponseSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScanResponseSummary of this ScanResponseSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def completed(self):
        """Gets the completed of this ScanResponseSummary.


        :return: The completed of this ScanResponseSummary.
        :rtype: datetime
        """
        return self._completed

    @completed.setter
    def completed(self, completed):
        """Sets the completed of this ScanResponseSummary.


        :param completed: The completed of this ScanResponseSummary.
        :type completed: datetime
        """

        self._completed = completed

    @property
    def eta(self):
        """Gets the eta of this ScanResponseSummary.


        :return: The eta of this ScanResponseSummary.
        :rtype: datetime
        """
        return self._eta

    @eta.setter
    def eta(self, eta):
        """Sets the eta of this ScanResponseSummary.


        :param eta: The eta of this ScanResponseSummary.
        :type eta: datetime
        """

        self._eta = eta

    @property
    def id(self):
        """Gets the id of this ScanResponseSummary.


        :return: The id of this ScanResponseSummary.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ScanResponseSummary.


        :param id: The id of this ScanResponseSummary.
        :type id: int
        """

        self._id = id

    @property
    def scan(self):
        """Gets the scan of this ScanResponseSummary.


        :return: The scan of this ScanResponseSummary.
        :rtype: ScanSummary
        """
        return self._scan

    @scan.setter
    def scan(self, scan):
        """Sets the scan of this ScanResponseSummary.


        :param scan: The scan of this ScanResponseSummary.
        :type scan: ScanSummary
        """

        self._scan = scan

    @property
    def started(self):
        """Gets the started of this ScanResponseSummary.


        :return: The started of this ScanResponseSummary.
        :rtype: datetime
        """
        return self._started

    @started.setter
    def started(self, started):
        """Sets the started of this ScanResponseSummary.


        :param started: The started of this ScanResponseSummary.
        :type started: datetime
        """

        self._started = started
