# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NewScanScanSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, long_sentence_word_count: int=None, very_long_sentence_word_count: int=None):
        """NewScanScanSettings - a model defined in OpenAPI

        :param long_sentence_word_count: The long_sentence_word_count of this NewScanScanSettings.
        :param very_long_sentence_word_count: The very_long_sentence_word_count of this NewScanScanSettings.
        """
        self.openapi_types = {
            'long_sentence_word_count': int,
            'very_long_sentence_word_count': int
        }

        self.attribute_map = {
            'long_sentence_word_count': 'longSentenceWordCount',
            'very_long_sentence_word_count': 'veryLongSentenceWordCount'
        }

        self._long_sentence_word_count = long_sentence_word_count
        self._very_long_sentence_word_count = very_long_sentence_word_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NewScanScanSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NewScan_scanSettings of this NewScanScanSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def long_sentence_word_count(self):
        """Gets the long_sentence_word_count of this NewScanScanSettings.


        :return: The long_sentence_word_count of this NewScanScanSettings.
        :rtype: int
        """
        return self._long_sentence_word_count

    @long_sentence_word_count.setter
    def long_sentence_word_count(self, long_sentence_word_count):
        """Sets the long_sentence_word_count of this NewScanScanSettings.


        :param long_sentence_word_count: The long_sentence_word_count of this NewScanScanSettings.
        :type long_sentence_word_count: int
        """

        self._long_sentence_word_count = long_sentence_word_count

    @property
    def very_long_sentence_word_count(self):
        """Gets the very_long_sentence_word_count of this NewScanScanSettings.


        :return: The very_long_sentence_word_count of this NewScanScanSettings.
        :rtype: int
        """
        return self._very_long_sentence_word_count

    @very_long_sentence_word_count.setter
    def very_long_sentence_word_count(self, very_long_sentence_word_count):
        """Sets the very_long_sentence_word_count of this NewScanScanSettings.


        :param very_long_sentence_word_count: The very_long_sentence_word_count of this NewScanScanSettings.
        :type very_long_sentence_word_count: int
        """

        self._very_long_sentence_word_count = very_long_sentence_word_count
