# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.adverbs_inner import AdverbsInner
from openapi_server.models.hidden_verbs_inner import HiddenVerbsInner
from openapi_server.models.long_sentences_inner import LongSentencesInner
from openapi_server.models.passives_inner import PassivesInner
from openapi_server.models.very_long_sentences_inner import VeryLongSentencesInner
from openapi_server import util


class DocumentResponseDetailedParagraphsInnerStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adverbs: List[List[AdverbsInner]]=None, hidden_verbs: List[List[HiddenVerbsInner]]=None, long_sentences: List[List[LongSentencesInner]]=None, passives: List[List[PassivesInner]]=None, very_long_sentences: List[List[VeryLongSentencesInner]]=None):
        """DocumentResponseDetailedParagraphsInnerStats - a model defined in OpenAPI

        :param adverbs: The adverbs of this DocumentResponseDetailedParagraphsInnerStats.
        :param hidden_verbs: The hidden_verbs of this DocumentResponseDetailedParagraphsInnerStats.
        :param long_sentences: The long_sentences of this DocumentResponseDetailedParagraphsInnerStats.
        :param passives: The passives of this DocumentResponseDetailedParagraphsInnerStats.
        :param very_long_sentences: The very_long_sentences of this DocumentResponseDetailedParagraphsInnerStats.
        """
        self.openapi_types = {
            'adverbs': List[List[AdverbsInner]],
            'hidden_verbs': List[List[HiddenVerbsInner]],
            'long_sentences': List[List[LongSentencesInner]],
            'passives': List[List[PassivesInner]],
            'very_long_sentences': List[List[VeryLongSentencesInner]]
        }

        self.attribute_map = {
            'adverbs': 'adverbs',
            'hidden_verbs': 'hiddenVerbs',
            'long_sentences': 'longSentences',
            'passives': 'passives',
            'very_long_sentences': 'veryLongSentences'
        }

        self._adverbs = adverbs
        self._hidden_verbs = hidden_verbs
        self._long_sentences = long_sentences
        self._passives = passives
        self._very_long_sentences = very_long_sentences

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentResponseDetailedParagraphsInnerStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DocumentResponseDetailed_paragraphs_inner_stats of this DocumentResponseDetailedParagraphsInnerStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adverbs(self):
        """Gets the adverbs of this DocumentResponseDetailedParagraphsInnerStats.


        :return: The adverbs of this DocumentResponseDetailedParagraphsInnerStats.
        :rtype: List[List[AdverbsInner]]
        """
        return self._adverbs

    @adverbs.setter
    def adverbs(self, adverbs):
        """Sets the adverbs of this DocumentResponseDetailedParagraphsInnerStats.


        :param adverbs: The adverbs of this DocumentResponseDetailedParagraphsInnerStats.
        :type adverbs: List[List[AdverbsInner]]
        """

        self._adverbs = adverbs

    @property
    def hidden_verbs(self):
        """Gets the hidden_verbs of this DocumentResponseDetailedParagraphsInnerStats.


        :return: The hidden_verbs of this DocumentResponseDetailedParagraphsInnerStats.
        :rtype: List[List[HiddenVerbsInner]]
        """
        return self._hidden_verbs

    @hidden_verbs.setter
    def hidden_verbs(self, hidden_verbs):
        """Sets the hidden_verbs of this DocumentResponseDetailedParagraphsInnerStats.


        :param hidden_verbs: The hidden_verbs of this DocumentResponseDetailedParagraphsInnerStats.
        :type hidden_verbs: List[List[HiddenVerbsInner]]
        """

        self._hidden_verbs = hidden_verbs

    @property
    def long_sentences(self):
        """Gets the long_sentences of this DocumentResponseDetailedParagraphsInnerStats.


        :return: The long_sentences of this DocumentResponseDetailedParagraphsInnerStats.
        :rtype: List[List[LongSentencesInner]]
        """
        return self._long_sentences

    @long_sentences.setter
    def long_sentences(self, long_sentences):
        """Sets the long_sentences of this DocumentResponseDetailedParagraphsInnerStats.


        :param long_sentences: The long_sentences of this DocumentResponseDetailedParagraphsInnerStats.
        :type long_sentences: List[List[LongSentencesInner]]
        """

        self._long_sentences = long_sentences

    @property
    def passives(self):
        """Gets the passives of this DocumentResponseDetailedParagraphsInnerStats.


        :return: The passives of this DocumentResponseDetailedParagraphsInnerStats.
        :rtype: List[List[PassivesInner]]
        """
        return self._passives

    @passives.setter
    def passives(self, passives):
        """Sets the passives of this DocumentResponseDetailedParagraphsInnerStats.


        :param passives: The passives of this DocumentResponseDetailedParagraphsInnerStats.
        :type passives: List[List[PassivesInner]]
        """

        self._passives = passives

    @property
    def very_long_sentences(self):
        """Gets the very_long_sentences of this DocumentResponseDetailedParagraphsInnerStats.


        :return: The very_long_sentences of this DocumentResponseDetailedParagraphsInnerStats.
        :rtype: List[List[VeryLongSentencesInner]]
        """
        return self._very_long_sentences

    @very_long_sentences.setter
    def very_long_sentences(self, very_long_sentences):
        """Sets the very_long_sentences of this DocumentResponseDetailedParagraphsInnerStats.


        :param very_long_sentences: The very_long_sentences of this DocumentResponseDetailedParagraphsInnerStats.
        :type very_long_sentences: List[List[VeryLongSentencesInner]]
        """

        self._very_long_sentences = very_long_sentences
