/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CleverCloudApi);
  }
}(this, function(expect, CleverCloudApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CleverCloudApi.GithubApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GithubApi', function() {
    describe('deleteGithubLink_0', function() {
      it('should call deleteGithubLink_0 successfully', function(done) {
        //uncomment below and update the code to test deleteGithubLink_0
        //instance.deleteGithubLink_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGithubApplications_1', function() {
      it('should call getGithubApplications_1 successfully', function(done) {
        //uncomment below and update the code to test getGithubApplications_1
        //instance.getGithubApplications_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGithubCallback_0', function() {
      it('should call getGithubCallback_0 successfully', function(done) {
        //uncomment below and update the code to test getGithubCallback_0
        //instance.getGithubCallback_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGithubEmails_0', function() {
      it('should call getGithubEmails_0 successfully', function(done) {
        //uncomment below and update the code to test getGithubEmails_0
        //instance.getGithubEmails_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGithubKeys_0', function() {
      it('should call getGithubKeys_0 successfully', function(done) {
        //uncomment below and update the code to test getGithubKeys_0
        //instance.getGithubKeys_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGithubLink_0', function() {
      it('should call getGithubLink_0 successfully', function(done) {
        //uncomment below and update the code to test getGithubLink_0
        //instance.getGithubLink_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGithubLogin_0', function() {
      it('should call getGithubLogin_0 successfully', function(done) {
        //uncomment below and update the code to test getGithubLogin_0
        //instance.getGithubLogin_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGithubSignup_0', function() {
      it('should call getGithubSignup_0 successfully', function(done) {
        //uncomment below and update the code to test getGithubSignup_0
        //instance.getGithubSignup_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGithubUsername_0', function() {
      it('should call getGithubUsername_0 successfully', function(done) {
        //uncomment below and update the code to test getGithubUsername_0
        //instance.getGithubUsername_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGithub_0', function() {
      it('should call getGithub_0 successfully', function(done) {
        //uncomment below and update the code to test getGithub_0
        //instance.getGithub_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postGithubRedeploy_0', function() {
      it('should call postGithubRedeploy_0 successfully', function(done) {
        //uncomment below and update the code to test postGithubRedeploy_0
        //instance.postGithubRedeploy_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postGithubSignup_0', function() {
      it('should call postGithubSignup_0 successfully', function(done) {
        //uncomment below and update the code to test postGithubSignup_0
        //instance.postGithubSignup_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
