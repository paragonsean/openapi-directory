/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CleverCloudApi);
  }
}(this, function(expect, CleverCloudApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CleverCloudApi.SupernovaInstanceView();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SupernovaInstanceView', function() {
    it('should create an instance of SupernovaInstanceView', function() {
      // uncomment below and update the code to test SupernovaInstanceView
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be.a(CleverCloudApi.SupernovaInstanceView);
    });

    it('should have the property appId (base name: "appId")', function() {
      // uncomment below and update the code to test the property appId
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property appPort (base name: "appPort")', function() {
      // uncomment below and update the code to test the property appPort
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property commitId (base name: "commitId")', function() {
      // uncomment below and update the code to test the property commitId
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property deployId (base name: "deployId")', function() {
      // uncomment below and update the code to test the property deployId
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property deployNumber (base name: "deployNumber")', function() {
      // uncomment below and update the code to test the property deployNumber
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property flavor (base name: "flavor")', function() {
      // uncomment below and update the code to test the property flavor
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property hv (base name: "hv")', function() {
      // uncomment below and update the code to test the property hv
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property image (base name: "image")', function() {
      // uncomment below and update the code to test the property image
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property instanceNumber (base name: "instanceNumber")', function() {
      // uncomment below and update the code to test the property instanceNumber
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property internalIP (base name: "internalIP")', function() {
      // uncomment below and update the code to test the property internalIP
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property ip (base name: "ip")', function() {
      // uncomment below and update the code to test the property ip
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property ownerId (base name: "ownerId")', function() {
      // uncomment below and update the code to test the property ownerId
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property sshPort (base name: "sshPort")', function() {
      // uncomment below and update the code to test the property sshPort
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property uuid (base name: "uuid")', function() {
      // uncomment below and update the code to test the property uuid
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property zabbixPort (base name: "zabbixPort")', function() {
      // uncomment below and update the code to test the property zabbixPort
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

    it('should have the property zone (base name: "zone")', function() {
      // uncomment below and update the code to test the property zone
      //var instance = new CleverCloudApi.SupernovaInstanceView();
      //expect(instance).to.be();
    });

  });

}));
