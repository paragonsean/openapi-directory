/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CleverCloudApi);
  }
}(this, function(expect, CleverCloudApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CleverCloudApi.Application();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Application', function() {
    it('should create an instance of Application', function() {
      // uncomment below and update the code to test Application
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be.a(CleverCloudApi.Application);
    });

    it('should have the property archived (base name: "archived")', function() {
      // uncomment below and update the code to test the property archived
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property branch (base name: "branch")', function() {
      // uncomment below and update the code to test the property branch
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property buildFlavor (base name: "buildFlavor")', function() {
      // uncomment below and update the code to test the property buildFlavor
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property cancelOnPush (base name: "cancelOnPush")', function() {
      // uncomment below and update the code to test the property cancelOnPush
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property commitId (base name: "commitId")', function() {
      // uncomment below and update the code to test the property commitId
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property creationDate (base name: "creationDate")', function() {
      // uncomment below and update the code to test the property creationDate
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property deployUrl (base name: "deployUrl")', function() {
      // uncomment below and update the code to test the property deployUrl
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property deployment (base name: "deployment")', function() {
      // uncomment below and update the code to test the property deployment
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property favourite (base name: "favourite")', function() {
      // uncomment below and update the code to test the property favourite
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property homogeneous (base name: "homogeneous")', function() {
      // uncomment below and update the code to test the property homogeneous
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property instance (base name: "instance")', function() {
      // uncomment below and update the code to test the property instance
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property lastDeploy (base name: "last_deploy")', function() {
      // uncomment below and update the code to test the property lastDeploy
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property ownerId (base name: "ownerId")', function() {
      // uncomment below and update the code to test the property ownerId
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property separateBuild (base name: "separateBuild")', function() {
      // uncomment below and update the code to test the property separateBuild
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property stickySessions (base name: "stickySessions")', function() {
      // uncomment below and update the code to test the property stickySessions
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property vhosts (base name: "vhosts")', function() {
      // uncomment below and update the code to test the property vhosts
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property webhookSecret (base name: "webhookSecret")', function() {
      // uncomment below and update the code to test the property webhookSecret
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property webhookUrl (base name: "webhookUrl")', function() {
      // uncomment below and update the code to test the property webhookUrl
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

    it('should have the property zone (base name: "zone")', function() {
      // uncomment below and update the code to test the property zone
      //var instance = new CleverCloudApi.Application();
      //expect(instance).to.be();
    });

  });

}));
