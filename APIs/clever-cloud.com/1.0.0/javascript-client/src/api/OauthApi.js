/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Rights from '../model/Rights';

/**
* Oauth service.
* @module api/OauthApi
* @version 1.0.0
*/
export default class OauthApi {

    /**
    * Constructs a new OauthApi. 
    * @alias module:api/OauthApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getOauthAuthorize_0 operation.
     * @callback module:api/OauthApi~getOauthAuthorize_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [oauthToken] 
     * @param {String} [cookie] 
     * @param {module:api/OauthApi~getOauthAuthorize_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    getOauthAuthorize_0(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'oauth_token': opts['oauthToken']
      };
      let headerParams = {
        'Cookie': opts['cookie']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/oauth/authorize', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOauthRights_0 operation.
     * @callback module:api/OauthApi~getOauthRights_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Rights} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/OauthApi~getOauthRights_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Rights}
     */
    getOauthRights_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Rights;
      return this.apiClient.callApi(
        '/oauth/rights', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the oauthAccessTokenQueryPost_0 operation.
     * @callback module:api/OauthApi~oauthAccessTokenQueryPost_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [oauthConsumerKey] 
     * @param {String} [oauthToken] 
     * @param {String} [oauthSignatureMethod] 
     * @param {String} [oauthSignature] 
     * @param {String} [oauthTimestamp] 
     * @param {String} [oauthNonce] 
     * @param {String} [oauthVersion] 
     * @param {String} [oauthVerifier] 
     * @param {String} [oauthCallback] 
     * @param {String} [oauthTokenSecret] 
     * @param {String} [oauthCallbackConfirmed] 
     * @param {module:api/OauthApi~oauthAccessTokenQueryPost_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    oauthAccessTokenQueryPost_0(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'oauth_consumer_key': opts['oauthConsumerKey'],
        'oauth_token': opts['oauthToken'],
        'oauth_signature_method': opts['oauthSignatureMethod'],
        'oauth_signature': opts['oauthSignature'],
        'oauth_timestamp': opts['oauthTimestamp'],
        'oauth_nonce': opts['oauthNonce'],
        'oauth_version': opts['oauthVersion'],
        'oauth_verifier': opts['oauthVerifier'],
        'oauth_callback': opts['oauthCallback'],
        'oauth_token_secret': opts['oauthTokenSecret'],
        'oauth_callback_confirmed': opts['oauthCallbackConfirmed']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/oauth/access_token_query', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the oauthRequestTokenQueryPost_0 operation.
     * @callback module:api/OauthApi~oauthRequestTokenQueryPost_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [oauthConsumerKey] 
     * @param {String} [oauthToken] 
     * @param {String} [oauthSignatureMethod] 
     * @param {String} [oauthSignature] 
     * @param {String} [oauthTimestamp] 
     * @param {String} [oauthNonce] 
     * @param {String} [oauthVersion] 
     * @param {String} [oauthVerifier] 
     * @param {String} [oauthCallback] 
     * @param {String} [oauthTokenSecret] 
     * @param {String} [oauthCallbackConfirmed] 
     * @param {module:api/OauthApi~oauthRequestTokenQueryPost_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    oauthRequestTokenQueryPost_0(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'oauth_consumer_key': opts['oauthConsumerKey'],
        'oauth_token': opts['oauthToken'],
        'oauth_signature_method': opts['oauthSignatureMethod'],
        'oauth_signature': opts['oauthSignature'],
        'oauth_timestamp': opts['oauthTimestamp'],
        'oauth_nonce': opts['oauthNonce'],
        'oauth_version': opts['oauthVersion'],
        'oauth_verifier': opts['oauthVerifier'],
        'oauth_callback': opts['oauthCallback'],
        'oauth_token_secret': opts['oauthTokenSecret'],
        'oauth_callback_confirmed': opts['oauthCallbackConfirmed']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/oauth/request_token_query', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postOauthAccessToken_0 operation.
     * @callback module:api/OauthApi~postOauthAccessToken_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [oauthConsumerKey] 
     * @param {String} [oauthToken] 
     * @param {String} [oauthSignatureMethod] 
     * @param {String} [oauthSignature] 
     * @param {String} [oauthTimestamp] 
     * @param {String} [oauthNonce] 
     * @param {String} [oauthVersion] 
     * @param {String} [oauthVerifier] 
     * @param {String} [oauthCallback] 
     * @param {String} [oauthTokenSecret] 
     * @param {String} [oauthCallbackConfirmed] 
     * @param {module:api/OauthApi~postOauthAccessToken_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    postOauthAccessToken_0(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'oauth_consumer_key': opts['oauthConsumerKey'],
        'oauth_token': opts['oauthToken'],
        'oauth_signature_method': opts['oauthSignatureMethod'],
        'oauth_signature': opts['oauthSignature'],
        'oauth_timestamp': opts['oauthTimestamp'],
        'oauth_nonce': opts['oauthNonce'],
        'oauth_version': opts['oauthVersion'],
        'oauth_verifier': opts['oauthVerifier'],
        'oauth_callback': opts['oauthCallback'],
        'oauth_token_secret': opts['oauthTokenSecret'],
        'oauth_callback_confirmed': opts['oauthCallbackConfirmed']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/oauth/access_token', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postOauthAuthorize_0 operation.
     * @callback module:api/OauthApi~postOauthAuthorize_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [almighty] 
     * @param {String} [accessOrganisations] 
     * @param {String} [manageOrganisations] 
     * @param {String} [manageOrganisationsServices] 
     * @param {String} [manageOrganisationsApplications] 
     * @param {String} [manageOrganisationsMembers] 
     * @param {String} [accessOrganisationsBills] 
     * @param {String} [accessOrganisationsCreditCount] 
     * @param {String} [accessOrganisationsConsumptionStatistics] 
     * @param {String} [accessPersonalInformation] 
     * @param {String} [managePersonalInformation] 
     * @param {String} [manageSshKeys] 
     * @param {String} [manageServices] 
     * @param {String} [manageApplications] 
     * @param {String} [accessBills] 
     * @param {String} [accessCreditCount] 
     * @param {String} [accessConsumptionStatistics] 
     * @param {String} [cookie] 
     * @param {module:api/OauthApi~postOauthAuthorize_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    postOauthAuthorize_0(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'almighty': opts['almighty'],
        'access_organisations': opts['accessOrganisations'],
        'manage_organisations': opts['manageOrganisations'],
        'manage_organisations_services': opts['manageOrganisationsServices'],
        'manage_organisations_applications': opts['manageOrganisationsApplications'],
        'manage_organisations_members': opts['manageOrganisationsMembers'],
        'access_organisations_bills': opts['accessOrganisationsBills'],
        'access_organisations_credit_count': opts['accessOrganisationsCreditCount'],
        'access_organisations_consumption_statistics': opts['accessOrganisationsConsumptionStatistics'],
        'access_personal_information': opts['accessPersonalInformation'],
        'manage_personal_information': opts['managePersonalInformation'],
        'manage_ssh_keys': opts['manageSshKeys'],
        'manage_services': opts['manageServices'],
        'manage_applications': opts['manageApplications'],
        'access_bills': opts['accessBills'],
        'access_credit_count': opts['accessCreditCount'],
        'access_consumption_statistics': opts['accessConsumptionStatistics']
      };
      let headerParams = {
        'Cookie': opts['cookie']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/oauth/authorize', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postOauthRequestToken_0 operation.
     * @callback module:api/OauthApi~postOauthRequestToken_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [oauthConsumerKey] 
     * @param {String} [oauthToken] 
     * @param {String} [oauthSignatureMethod] 
     * @param {String} [oauthSignature] 
     * @param {String} [oauthTimestamp] 
     * @param {String} [oauthNonce] 
     * @param {String} [oauthVersion] 
     * @param {String} [oauthVerifier] 
     * @param {String} [oauthCallback] 
     * @param {String} [oauthTokenSecret] 
     * @param {String} [oauthCallbackConfirmed] 
     * @param {module:api/OauthApi~postOauthRequestToken_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    postOauthRequestToken_0(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'oauth_consumer_key': opts['oauthConsumerKey'],
        'oauth_token': opts['oauthToken'],
        'oauth_signature_method': opts['oauthSignatureMethod'],
        'oauth_signature': opts['oauthSignature'],
        'oauth_timestamp': opts['oauthTimestamp'],
        'oauth_nonce': opts['oauthNonce'],
        'oauth_version': opts['oauthVersion'],
        'oauth_verifier': opts['oauthVerifier'],
        'oauth_callback': opts['oauthCallback'],
        'oauth_token_secret': opts['oauthTokenSecret'],
        'oauth_callback_confirmed': opts['oauthCallbackConfirmed']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/oauth/request_token', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
