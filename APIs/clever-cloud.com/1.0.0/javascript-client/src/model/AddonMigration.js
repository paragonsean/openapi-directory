/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AddonMigration model module.
 * @module model/AddonMigration
 * @version 1.0.0
 */
class AddonMigration {
    /**
     * Constructs a new <code>AddonMigration</code>.
     * @alias module:model/AddonMigration
     */
    constructor() { 
        
        AddonMigration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddonMigration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddonMigration} obj Optional instance to populate.
     * @return {module:model/AddonMigration} The populated <code>AddonMigration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddonMigration();

            if (data.hasOwnProperty('addon_id')) {
                obj['addon_id'] = ApiClient.convertToType(data['addon_id'], 'String');
            }
            if (data.hasOwnProperty('callback_url')) {
                obj['callback_url'] = ApiClient.convertToType(data['callback_url'], 'String');
            }
            if (data.hasOwnProperty('database')) {
                obj['database'] = ApiClient.convertToType(data['database'], 'String');
            }
            if (data.hasOwnProperty('database_user')) {
                obj['database_user'] = ApiClient.convertToType(data['database_user'], 'String');
            }
            if (data.hasOwnProperty('dump_restore_finished_date')) {
                obj['dump_restore_finished_date'] = ApiClient.convertToType(data['dump_restore_finished_date'], 'String');
            }
            if (data.hasOwnProperty('dump_restore_start_date')) {
                obj['dump_restore_start_date'] = ApiClient.convertToType(data['dump_restore_start_date'], 'String');
            }
            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'String');
            }
            if (data.hasOwnProperty('exit_message')) {
                obj['exit_message'] = ApiClient.convertToType(data['exit_message'], 'String');
            }
            if (data.hasOwnProperty('hostname')) {
                obj['hostname'] = ApiClient.convertToType(data['hostname'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('last_state_update_date')) {
                obj['last_state_update_date'] = ApiClient.convertToType(data['last_state_update_date'], 'String');
            }
            if (data.hasOwnProperty('new_cluster_id')) {
                obj['new_cluster_id'] = ApiClient.convertToType(data['new_cluster_id'], 'String');
            }
            if (data.hasOwnProperty('new_cluster_label')) {
                obj['new_cluster_label'] = ApiClient.convertToType(data['new_cluster_label'], 'String');
            }
            if (data.hasOwnProperty('new_instance_id')) {
                obj['new_instance_id'] = ApiClient.convertToType(data['new_instance_id'], 'String');
            }
            if (data.hasOwnProperty('new_plan')) {
                obj['new_plan'] = ApiClient.convertToType(data['new_plan'], 'String');
            }
            if (data.hasOwnProperty('new_recipient_hostname')) {
                obj['new_recipient_hostname'] = ApiClient.convertToType(data['new_recipient_hostname'], 'String');
            }
            if (data.hasOwnProperty('new_zone')) {
                obj['new_zone'] = ApiClient.convertToType(data['new_zone'], 'String');
            }
            if (data.hasOwnProperty('old_cluster_id')) {
                obj['old_cluster_id'] = ApiClient.convertToType(data['old_cluster_id'], 'String');
            }
            if (data.hasOwnProperty('old_cluster_label')) {
                obj['old_cluster_label'] = ApiClient.convertToType(data['old_cluster_label'], 'String');
            }
            if (data.hasOwnProperty('old_instance_id')) {
                obj['old_instance_id'] = ApiClient.convertToType(data['old_instance_id'], 'String');
            }
            if (data.hasOwnProperty('old_plan')) {
                obj['old_plan'] = ApiClient.convertToType(data['old_plan'], 'String');
            }
            if (data.hasOwnProperty('old_recipient_hostname')) {
                obj['old_recipient_hostname'] = ApiClient.convertToType(data['old_recipient_hostname'], 'String');
            }
            if (data.hasOwnProperty('old_zone')) {
                obj['old_zone'] = ApiClient.convertToType(data['old_zone'], 'String');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ApiClient.convertToType(data['port'], 'Number');
            }
            if (data.hasOwnProperty('request_date')) {
                obj['request_date'] = ApiClient.convertToType(data['request_date'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddonMigration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddonMigration</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['addon_id'] && !(typeof data['addon_id'] === 'string' || data['addon_id'] instanceof String)) {
            throw new Error("Expected the field `addon_id` to be a primitive type in the JSON string but got " + data['addon_id']);
        }
        // ensure the json data is a string
        if (data['callback_url'] && !(typeof data['callback_url'] === 'string' || data['callback_url'] instanceof String)) {
            throw new Error("Expected the field `callback_url` to be a primitive type in the JSON string but got " + data['callback_url']);
        }
        // ensure the json data is a string
        if (data['database'] && !(typeof data['database'] === 'string' || data['database'] instanceof String)) {
            throw new Error("Expected the field `database` to be a primitive type in the JSON string but got " + data['database']);
        }
        // ensure the json data is a string
        if (data['database_user'] && !(typeof data['database_user'] === 'string' || data['database_user'] instanceof String)) {
            throw new Error("Expected the field `database_user` to be a primitive type in the JSON string but got " + data['database_user']);
        }
        // ensure the json data is a string
        if (data['dump_restore_finished_date'] && !(typeof data['dump_restore_finished_date'] === 'string' || data['dump_restore_finished_date'] instanceof String)) {
            throw new Error("Expected the field `dump_restore_finished_date` to be a primitive type in the JSON string but got " + data['dump_restore_finished_date']);
        }
        // ensure the json data is a string
        if (data['dump_restore_start_date'] && !(typeof data['dump_restore_start_date'] === 'string' || data['dump_restore_start_date'] instanceof String)) {
            throw new Error("Expected the field `dump_restore_start_date` to be a primitive type in the JSON string but got " + data['dump_restore_start_date']);
        }
        // ensure the json data is a string
        if (data['end_date'] && !(typeof data['end_date'] === 'string' || data['end_date'] instanceof String)) {
            throw new Error("Expected the field `end_date` to be a primitive type in the JSON string but got " + data['end_date']);
        }
        // ensure the json data is a string
        if (data['exit_message'] && !(typeof data['exit_message'] === 'string' || data['exit_message'] instanceof String)) {
            throw new Error("Expected the field `exit_message` to be a primitive type in the JSON string but got " + data['exit_message']);
        }
        // ensure the json data is a string
        if (data['hostname'] && !(typeof data['hostname'] === 'string' || data['hostname'] instanceof String)) {
            throw new Error("Expected the field `hostname` to be a primitive type in the JSON string but got " + data['hostname']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['last_state_update_date'] && !(typeof data['last_state_update_date'] === 'string' || data['last_state_update_date'] instanceof String)) {
            throw new Error("Expected the field `last_state_update_date` to be a primitive type in the JSON string but got " + data['last_state_update_date']);
        }
        // ensure the json data is a string
        if (data['new_cluster_id'] && !(typeof data['new_cluster_id'] === 'string' || data['new_cluster_id'] instanceof String)) {
            throw new Error("Expected the field `new_cluster_id` to be a primitive type in the JSON string but got " + data['new_cluster_id']);
        }
        // ensure the json data is a string
        if (data['new_cluster_label'] && !(typeof data['new_cluster_label'] === 'string' || data['new_cluster_label'] instanceof String)) {
            throw new Error("Expected the field `new_cluster_label` to be a primitive type in the JSON string but got " + data['new_cluster_label']);
        }
        // ensure the json data is a string
        if (data['new_instance_id'] && !(typeof data['new_instance_id'] === 'string' || data['new_instance_id'] instanceof String)) {
            throw new Error("Expected the field `new_instance_id` to be a primitive type in the JSON string but got " + data['new_instance_id']);
        }
        // ensure the json data is a string
        if (data['new_plan'] && !(typeof data['new_plan'] === 'string' || data['new_plan'] instanceof String)) {
            throw new Error("Expected the field `new_plan` to be a primitive type in the JSON string but got " + data['new_plan']);
        }
        // ensure the json data is a string
        if (data['new_recipient_hostname'] && !(typeof data['new_recipient_hostname'] === 'string' || data['new_recipient_hostname'] instanceof String)) {
            throw new Error("Expected the field `new_recipient_hostname` to be a primitive type in the JSON string but got " + data['new_recipient_hostname']);
        }
        // ensure the json data is a string
        if (data['new_zone'] && !(typeof data['new_zone'] === 'string' || data['new_zone'] instanceof String)) {
            throw new Error("Expected the field `new_zone` to be a primitive type in the JSON string but got " + data['new_zone']);
        }
        // ensure the json data is a string
        if (data['old_cluster_id'] && !(typeof data['old_cluster_id'] === 'string' || data['old_cluster_id'] instanceof String)) {
            throw new Error("Expected the field `old_cluster_id` to be a primitive type in the JSON string but got " + data['old_cluster_id']);
        }
        // ensure the json data is a string
        if (data['old_cluster_label'] && !(typeof data['old_cluster_label'] === 'string' || data['old_cluster_label'] instanceof String)) {
            throw new Error("Expected the field `old_cluster_label` to be a primitive type in the JSON string but got " + data['old_cluster_label']);
        }
        // ensure the json data is a string
        if (data['old_instance_id'] && !(typeof data['old_instance_id'] === 'string' || data['old_instance_id'] instanceof String)) {
            throw new Error("Expected the field `old_instance_id` to be a primitive type in the JSON string but got " + data['old_instance_id']);
        }
        // ensure the json data is a string
        if (data['old_plan'] && !(typeof data['old_plan'] === 'string' || data['old_plan'] instanceof String)) {
            throw new Error("Expected the field `old_plan` to be a primitive type in the JSON string but got " + data['old_plan']);
        }
        // ensure the json data is a string
        if (data['old_recipient_hostname'] && !(typeof data['old_recipient_hostname'] === 'string' || data['old_recipient_hostname'] instanceof String)) {
            throw new Error("Expected the field `old_recipient_hostname` to be a primitive type in the JSON string but got " + data['old_recipient_hostname']);
        }
        // ensure the json data is a string
        if (data['old_zone'] && !(typeof data['old_zone'] === 'string' || data['old_zone'] instanceof String)) {
            throw new Error("Expected the field `old_zone` to be a primitive type in the JSON string but got " + data['old_zone']);
        }
        // ensure the json data is a string
        if (data['request_date'] && !(typeof data['request_date'] === 'string' || data['request_date'] instanceof String)) {
            throw new Error("Expected the field `request_date` to be a primitive type in the JSON string but got " + data['request_date']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * @member {String} addon_id
 */
AddonMigration.prototype['addon_id'] = undefined;

/**
 * @member {String} callback_url
 */
AddonMigration.prototype['callback_url'] = undefined;

/**
 * @member {String} database
 */
AddonMigration.prototype['database'] = undefined;

/**
 * @member {String} database_user
 */
AddonMigration.prototype['database_user'] = undefined;

/**
 * @member {String} dump_restore_finished_date
 */
AddonMigration.prototype['dump_restore_finished_date'] = undefined;

/**
 * @member {String} dump_restore_start_date
 */
AddonMigration.prototype['dump_restore_start_date'] = undefined;

/**
 * @member {String} end_date
 */
AddonMigration.prototype['end_date'] = undefined;

/**
 * @member {String} exit_message
 */
AddonMigration.prototype['exit_message'] = undefined;

/**
 * @member {String} hostname
 */
AddonMigration.prototype['hostname'] = undefined;

/**
 * @member {String} id
 */
AddonMigration.prototype['id'] = undefined;

/**
 * @member {String} kind
 */
AddonMigration.prototype['kind'] = undefined;

/**
 * @member {String} last_state_update_date
 */
AddonMigration.prototype['last_state_update_date'] = undefined;

/**
 * @member {String} new_cluster_id
 */
AddonMigration.prototype['new_cluster_id'] = undefined;

/**
 * @member {String} new_cluster_label
 */
AddonMigration.prototype['new_cluster_label'] = undefined;

/**
 * @member {String} new_instance_id
 */
AddonMigration.prototype['new_instance_id'] = undefined;

/**
 * @member {String} new_plan
 */
AddonMigration.prototype['new_plan'] = undefined;

/**
 * @member {String} new_recipient_hostname
 */
AddonMigration.prototype['new_recipient_hostname'] = undefined;

/**
 * @member {String} new_zone
 */
AddonMigration.prototype['new_zone'] = undefined;

/**
 * @member {String} old_cluster_id
 */
AddonMigration.prototype['old_cluster_id'] = undefined;

/**
 * @member {String} old_cluster_label
 */
AddonMigration.prototype['old_cluster_label'] = undefined;

/**
 * @member {String} old_instance_id
 */
AddonMigration.prototype['old_instance_id'] = undefined;

/**
 * @member {String} old_plan
 */
AddonMigration.prototype['old_plan'] = undefined;

/**
 * @member {String} old_recipient_hostname
 */
AddonMigration.prototype['old_recipient_hostname'] = undefined;

/**
 * @member {String} old_zone
 */
AddonMigration.prototype['old_zone'] = undefined;

/**
 * @member {Number} port
 */
AddonMigration.prototype['port'] = undefined;

/**
 * @member {String} request_date
 */
AddonMigration.prototype['request_date'] = undefined;

/**
 * @member {String} state
 */
AddonMigration.prototype['state'] = undefined;






export default AddonMigration;

