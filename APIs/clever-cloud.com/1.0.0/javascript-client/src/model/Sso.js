/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Sso model module.
 * @module model/Sso
 * @version 1.0.0
 */
class Sso {
    /**
     * Constructs a new <code>Sso</code>.
     * @alias module:model/Sso
     * @param email {String} 
     * @param id {String} 
     * @param navData {String} 
     * @param timestamp {Date} 
     * @param token {String} 
     * @param url {String} 
     */
    constructor(email, id, navData, timestamp, token, url) { 
        
        Sso.initialize(this, email, id, navData, timestamp, token, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, email, id, navData, timestamp, token, url) { 
        obj['email'] = email;
        obj['id'] = id;
        obj['nav-data'] = navData;
        obj['timestamp'] = timestamp;
        obj['token'] = token;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>Sso</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Sso} obj Optional instance to populate.
     * @return {module:model/Sso} The populated <code>Sso</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Sso();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('nav-data')) {
                obj['nav-data'] = ApiClient.convertToType(data['nav-data'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Sso</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Sso</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Sso.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['nav-data'] && !(typeof data['nav-data'] === 'string' || data['nav-data'] instanceof String)) {
            throw new Error("Expected the field `nav-data` to be a primitive type in the JSON string but got " + data['nav-data']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

Sso.RequiredProperties = ["email", "id", "nav-data", "timestamp", "token", "url"];

/**
 * @member {String} email
 */
Sso.prototype['email'] = undefined;

/**
 * @member {String} id
 */
Sso.prototype['id'] = undefined;

/**
 * @member {String} nav-data
 */
Sso.prototype['nav-data'] = undefined;

/**
 * @member {Date} timestamp
 */
Sso.prototype['timestamp'] = undefined;

/**
 * @member {String} token
 */
Sso.prototype['token'] = undefined;

/**
 * @member {String} url
 */
Sso.prototype['url'] = undefined;






export default Sso;

