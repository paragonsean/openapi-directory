/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SummaryOrganisationsInner from './SummaryOrganisationsInner';
import SummaryUser from './SummaryUser';

/**
 * The Summary model module.
 * @module model/Summary
 * @version 1.0.0
 */
class Summary {
    /**
     * Constructs a new <code>Summary</code>.
     * @alias module:model/Summary
     * @param organisations {Array.<module:model/SummaryOrganisationsInner>} 
     * @param user {module:model/SummaryUser} 
     */
    constructor(organisations, user) { 
        
        Summary.initialize(this, organisations, user);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, organisations, user) { 
        obj['organisations'] = organisations;
        obj['user'] = user;
    }

    /**
     * Constructs a <code>Summary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Summary} obj Optional instance to populate.
     * @return {module:model/Summary} The populated <code>Summary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Summary();

            if (data.hasOwnProperty('organisations')) {
                obj['organisations'] = ApiClient.convertToType(data['organisations'], [SummaryOrganisationsInner]);
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = SummaryUser.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Summary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Summary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Summary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['organisations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['organisations'])) {
                throw new Error("Expected the field `organisations` to be an array in the JSON data but got " + data['organisations']);
            }
            // validate the optional field `organisations` (array)
            for (const item of data['organisations']) {
                SummaryOrganisationsInner.validateJSON(item);
            };
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          SummaryUser.validateJSON(data['user']);
        }

        return true;
    }


}

Summary.RequiredProperties = ["organisations", "user"];

/**
 * @member {Array.<module:model/SummaryOrganisationsInner>} organisations
 */
Summary.prototype['organisations'] = undefined;

/**
 * @member {module:model/SummaryUser} user
 */
Summary.prototype['user'] = undefined;






export default Summary;

