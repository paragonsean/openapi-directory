# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConsoConso(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conso: str=None, _date: str=None):
        """ConsoConso - a model defined in OpenAPI

        :param conso: The conso of this ConsoConso.
        :param _date: The _date of this ConsoConso.
        """
        self.openapi_types = {
            'conso': str,
            '_date': str
        }

        self.attribute_map = {
            'conso': 'conso',
            '_date': 'date'
        }

        self._conso = conso
        self.__date = _date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConsoConso':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Conso_conso of this ConsoConso.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conso(self):
        """Gets the conso of this ConsoConso.

        One day consumption

        :return: The conso of this ConsoConso.
        :rtype: str
        """
        return self._conso

    @conso.setter
    def conso(self, conso):
        """Sets the conso of this ConsoConso.

        One day consumption

        :param conso: The conso of this ConsoConso.
        :type conso: str
        """
        if conso is None:
            raise ValueError("Invalid value for `conso`, must not be `None`")

        self._conso = conso

    @property
    def _date(self):
        """Gets the _date of this ConsoConso.


        :return: The _date of this ConsoConso.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this ConsoConso.


        :param _date: The _date of this ConsoConso.
        :type _date: str
        """
        if _date is None:
            raise ValueError("Invalid value for `_date`, must not be `None`")

        self.__date = _date
