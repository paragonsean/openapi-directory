# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddonMigration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, addon_id: str=None, callback_url: str=None, database: str=None, database_user: str=None, dump_restore_finished_date: str=None, dump_restore_start_date: str=None, end_date: str=None, exit_message: str=None, hostname: str=None, id: str=None, kind: str=None, last_state_update_date: str=None, new_cluster_id: str=None, new_cluster_label: str=None, new_instance_id: str=None, new_plan: str=None, new_recipient_hostname: str=None, new_zone: str=None, old_cluster_id: str=None, old_cluster_label: str=None, old_instance_id: str=None, old_plan: str=None, old_recipient_hostname: str=None, old_zone: str=None, port: float=None, request_date: str=None, state: str=None):
        """AddonMigration - a model defined in OpenAPI

        :param addon_id: The addon_id of this AddonMigration.
        :param callback_url: The callback_url of this AddonMigration.
        :param database: The database of this AddonMigration.
        :param database_user: The database_user of this AddonMigration.
        :param dump_restore_finished_date: The dump_restore_finished_date of this AddonMigration.
        :param dump_restore_start_date: The dump_restore_start_date of this AddonMigration.
        :param end_date: The end_date of this AddonMigration.
        :param exit_message: The exit_message of this AddonMigration.
        :param hostname: The hostname of this AddonMigration.
        :param id: The id of this AddonMigration.
        :param kind: The kind of this AddonMigration.
        :param last_state_update_date: The last_state_update_date of this AddonMigration.
        :param new_cluster_id: The new_cluster_id of this AddonMigration.
        :param new_cluster_label: The new_cluster_label of this AddonMigration.
        :param new_instance_id: The new_instance_id of this AddonMigration.
        :param new_plan: The new_plan of this AddonMigration.
        :param new_recipient_hostname: The new_recipient_hostname of this AddonMigration.
        :param new_zone: The new_zone of this AddonMigration.
        :param old_cluster_id: The old_cluster_id of this AddonMigration.
        :param old_cluster_label: The old_cluster_label of this AddonMigration.
        :param old_instance_id: The old_instance_id of this AddonMigration.
        :param old_plan: The old_plan of this AddonMigration.
        :param old_recipient_hostname: The old_recipient_hostname of this AddonMigration.
        :param old_zone: The old_zone of this AddonMigration.
        :param port: The port of this AddonMigration.
        :param request_date: The request_date of this AddonMigration.
        :param state: The state of this AddonMigration.
        """
        self.openapi_types = {
            'addon_id': str,
            'callback_url': str,
            'database': str,
            'database_user': str,
            'dump_restore_finished_date': str,
            'dump_restore_start_date': str,
            'end_date': str,
            'exit_message': str,
            'hostname': str,
            'id': str,
            'kind': str,
            'last_state_update_date': str,
            'new_cluster_id': str,
            'new_cluster_label': str,
            'new_instance_id': str,
            'new_plan': str,
            'new_recipient_hostname': str,
            'new_zone': str,
            'old_cluster_id': str,
            'old_cluster_label': str,
            'old_instance_id': str,
            'old_plan': str,
            'old_recipient_hostname': str,
            'old_zone': str,
            'port': float,
            'request_date': str,
            'state': str
        }

        self.attribute_map = {
            'addon_id': 'addon_id',
            'callback_url': 'callback_url',
            'database': 'database',
            'database_user': 'database_user',
            'dump_restore_finished_date': 'dump_restore_finished_date',
            'dump_restore_start_date': 'dump_restore_start_date',
            'end_date': 'end_date',
            'exit_message': 'exit_message',
            'hostname': 'hostname',
            'id': 'id',
            'kind': 'kind',
            'last_state_update_date': 'last_state_update_date',
            'new_cluster_id': 'new_cluster_id',
            'new_cluster_label': 'new_cluster_label',
            'new_instance_id': 'new_instance_id',
            'new_plan': 'new_plan',
            'new_recipient_hostname': 'new_recipient_hostname',
            'new_zone': 'new_zone',
            'old_cluster_id': 'old_cluster_id',
            'old_cluster_label': 'old_cluster_label',
            'old_instance_id': 'old_instance_id',
            'old_plan': 'old_plan',
            'old_recipient_hostname': 'old_recipient_hostname',
            'old_zone': 'old_zone',
            'port': 'port',
            'request_date': 'request_date',
            'state': 'state'
        }

        self._addon_id = addon_id
        self._callback_url = callback_url
        self._database = database
        self._database_user = database_user
        self._dump_restore_finished_date = dump_restore_finished_date
        self._dump_restore_start_date = dump_restore_start_date
        self._end_date = end_date
        self._exit_message = exit_message
        self._hostname = hostname
        self._id = id
        self._kind = kind
        self._last_state_update_date = last_state_update_date
        self._new_cluster_id = new_cluster_id
        self._new_cluster_label = new_cluster_label
        self._new_instance_id = new_instance_id
        self._new_plan = new_plan
        self._new_recipient_hostname = new_recipient_hostname
        self._new_zone = new_zone
        self._old_cluster_id = old_cluster_id
        self._old_cluster_label = old_cluster_label
        self._old_instance_id = old_instance_id
        self._old_plan = old_plan
        self._old_recipient_hostname = old_recipient_hostname
        self._old_zone = old_zone
        self._port = port
        self._request_date = request_date
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddonMigration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddonMigration of this AddonMigration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def addon_id(self):
        """Gets the addon_id of this AddonMigration.


        :return: The addon_id of this AddonMigration.
        :rtype: str
        """
        return self._addon_id

    @addon_id.setter
    def addon_id(self, addon_id):
        """Sets the addon_id of this AddonMigration.


        :param addon_id: The addon_id of this AddonMigration.
        :type addon_id: str
        """

        self._addon_id = addon_id

    @property
    def callback_url(self):
        """Gets the callback_url of this AddonMigration.


        :return: The callback_url of this AddonMigration.
        :rtype: str
        """
        return self._callback_url

    @callback_url.setter
    def callback_url(self, callback_url):
        """Sets the callback_url of this AddonMigration.


        :param callback_url: The callback_url of this AddonMigration.
        :type callback_url: str
        """

        self._callback_url = callback_url

    @property
    def database(self):
        """Gets the database of this AddonMigration.


        :return: The database of this AddonMigration.
        :rtype: str
        """
        return self._database

    @database.setter
    def database(self, database):
        """Sets the database of this AddonMigration.


        :param database: The database of this AddonMigration.
        :type database: str
        """

        self._database = database

    @property
    def database_user(self):
        """Gets the database_user of this AddonMigration.


        :return: The database_user of this AddonMigration.
        :rtype: str
        """
        return self._database_user

    @database_user.setter
    def database_user(self, database_user):
        """Sets the database_user of this AddonMigration.


        :param database_user: The database_user of this AddonMigration.
        :type database_user: str
        """

        self._database_user = database_user

    @property
    def dump_restore_finished_date(self):
        """Gets the dump_restore_finished_date of this AddonMigration.


        :return: The dump_restore_finished_date of this AddonMigration.
        :rtype: str
        """
        return self._dump_restore_finished_date

    @dump_restore_finished_date.setter
    def dump_restore_finished_date(self, dump_restore_finished_date):
        """Sets the dump_restore_finished_date of this AddonMigration.


        :param dump_restore_finished_date: The dump_restore_finished_date of this AddonMigration.
        :type dump_restore_finished_date: str
        """

        self._dump_restore_finished_date = dump_restore_finished_date

    @property
    def dump_restore_start_date(self):
        """Gets the dump_restore_start_date of this AddonMigration.


        :return: The dump_restore_start_date of this AddonMigration.
        :rtype: str
        """
        return self._dump_restore_start_date

    @dump_restore_start_date.setter
    def dump_restore_start_date(self, dump_restore_start_date):
        """Sets the dump_restore_start_date of this AddonMigration.


        :param dump_restore_start_date: The dump_restore_start_date of this AddonMigration.
        :type dump_restore_start_date: str
        """

        self._dump_restore_start_date = dump_restore_start_date

    @property
    def end_date(self):
        """Gets the end_date of this AddonMigration.


        :return: The end_date of this AddonMigration.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this AddonMigration.


        :param end_date: The end_date of this AddonMigration.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def exit_message(self):
        """Gets the exit_message of this AddonMigration.


        :return: The exit_message of this AddonMigration.
        :rtype: str
        """
        return self._exit_message

    @exit_message.setter
    def exit_message(self, exit_message):
        """Sets the exit_message of this AddonMigration.


        :param exit_message: The exit_message of this AddonMigration.
        :type exit_message: str
        """

        self._exit_message = exit_message

    @property
    def hostname(self):
        """Gets the hostname of this AddonMigration.


        :return: The hostname of this AddonMigration.
        :rtype: str
        """
        return self._hostname

    @hostname.setter
    def hostname(self, hostname):
        """Sets the hostname of this AddonMigration.


        :param hostname: The hostname of this AddonMigration.
        :type hostname: str
        """

        self._hostname = hostname

    @property
    def id(self):
        """Gets the id of this AddonMigration.


        :return: The id of this AddonMigration.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AddonMigration.


        :param id: The id of this AddonMigration.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this AddonMigration.


        :return: The kind of this AddonMigration.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this AddonMigration.


        :param kind: The kind of this AddonMigration.
        :type kind: str
        """

        self._kind = kind

    @property
    def last_state_update_date(self):
        """Gets the last_state_update_date of this AddonMigration.


        :return: The last_state_update_date of this AddonMigration.
        :rtype: str
        """
        return self._last_state_update_date

    @last_state_update_date.setter
    def last_state_update_date(self, last_state_update_date):
        """Sets the last_state_update_date of this AddonMigration.


        :param last_state_update_date: The last_state_update_date of this AddonMigration.
        :type last_state_update_date: str
        """

        self._last_state_update_date = last_state_update_date

    @property
    def new_cluster_id(self):
        """Gets the new_cluster_id of this AddonMigration.


        :return: The new_cluster_id of this AddonMigration.
        :rtype: str
        """
        return self._new_cluster_id

    @new_cluster_id.setter
    def new_cluster_id(self, new_cluster_id):
        """Sets the new_cluster_id of this AddonMigration.


        :param new_cluster_id: The new_cluster_id of this AddonMigration.
        :type new_cluster_id: str
        """

        self._new_cluster_id = new_cluster_id

    @property
    def new_cluster_label(self):
        """Gets the new_cluster_label of this AddonMigration.


        :return: The new_cluster_label of this AddonMigration.
        :rtype: str
        """
        return self._new_cluster_label

    @new_cluster_label.setter
    def new_cluster_label(self, new_cluster_label):
        """Sets the new_cluster_label of this AddonMigration.


        :param new_cluster_label: The new_cluster_label of this AddonMigration.
        :type new_cluster_label: str
        """

        self._new_cluster_label = new_cluster_label

    @property
    def new_instance_id(self):
        """Gets the new_instance_id of this AddonMigration.


        :return: The new_instance_id of this AddonMigration.
        :rtype: str
        """
        return self._new_instance_id

    @new_instance_id.setter
    def new_instance_id(self, new_instance_id):
        """Sets the new_instance_id of this AddonMigration.


        :param new_instance_id: The new_instance_id of this AddonMigration.
        :type new_instance_id: str
        """

        self._new_instance_id = new_instance_id

    @property
    def new_plan(self):
        """Gets the new_plan of this AddonMigration.


        :return: The new_plan of this AddonMigration.
        :rtype: str
        """
        return self._new_plan

    @new_plan.setter
    def new_plan(self, new_plan):
        """Sets the new_plan of this AddonMigration.


        :param new_plan: The new_plan of this AddonMigration.
        :type new_plan: str
        """

        self._new_plan = new_plan

    @property
    def new_recipient_hostname(self):
        """Gets the new_recipient_hostname of this AddonMigration.


        :return: The new_recipient_hostname of this AddonMigration.
        :rtype: str
        """
        return self._new_recipient_hostname

    @new_recipient_hostname.setter
    def new_recipient_hostname(self, new_recipient_hostname):
        """Sets the new_recipient_hostname of this AddonMigration.


        :param new_recipient_hostname: The new_recipient_hostname of this AddonMigration.
        :type new_recipient_hostname: str
        """

        self._new_recipient_hostname = new_recipient_hostname

    @property
    def new_zone(self):
        """Gets the new_zone of this AddonMigration.


        :return: The new_zone of this AddonMigration.
        :rtype: str
        """
        return self._new_zone

    @new_zone.setter
    def new_zone(self, new_zone):
        """Sets the new_zone of this AddonMigration.


        :param new_zone: The new_zone of this AddonMigration.
        :type new_zone: str
        """

        self._new_zone = new_zone

    @property
    def old_cluster_id(self):
        """Gets the old_cluster_id of this AddonMigration.


        :return: The old_cluster_id of this AddonMigration.
        :rtype: str
        """
        return self._old_cluster_id

    @old_cluster_id.setter
    def old_cluster_id(self, old_cluster_id):
        """Sets the old_cluster_id of this AddonMigration.


        :param old_cluster_id: The old_cluster_id of this AddonMigration.
        :type old_cluster_id: str
        """

        self._old_cluster_id = old_cluster_id

    @property
    def old_cluster_label(self):
        """Gets the old_cluster_label of this AddonMigration.


        :return: The old_cluster_label of this AddonMigration.
        :rtype: str
        """
        return self._old_cluster_label

    @old_cluster_label.setter
    def old_cluster_label(self, old_cluster_label):
        """Sets the old_cluster_label of this AddonMigration.


        :param old_cluster_label: The old_cluster_label of this AddonMigration.
        :type old_cluster_label: str
        """

        self._old_cluster_label = old_cluster_label

    @property
    def old_instance_id(self):
        """Gets the old_instance_id of this AddonMigration.


        :return: The old_instance_id of this AddonMigration.
        :rtype: str
        """
        return self._old_instance_id

    @old_instance_id.setter
    def old_instance_id(self, old_instance_id):
        """Sets the old_instance_id of this AddonMigration.


        :param old_instance_id: The old_instance_id of this AddonMigration.
        :type old_instance_id: str
        """

        self._old_instance_id = old_instance_id

    @property
    def old_plan(self):
        """Gets the old_plan of this AddonMigration.


        :return: The old_plan of this AddonMigration.
        :rtype: str
        """
        return self._old_plan

    @old_plan.setter
    def old_plan(self, old_plan):
        """Sets the old_plan of this AddonMigration.


        :param old_plan: The old_plan of this AddonMigration.
        :type old_plan: str
        """

        self._old_plan = old_plan

    @property
    def old_recipient_hostname(self):
        """Gets the old_recipient_hostname of this AddonMigration.


        :return: The old_recipient_hostname of this AddonMigration.
        :rtype: str
        """
        return self._old_recipient_hostname

    @old_recipient_hostname.setter
    def old_recipient_hostname(self, old_recipient_hostname):
        """Sets the old_recipient_hostname of this AddonMigration.


        :param old_recipient_hostname: The old_recipient_hostname of this AddonMigration.
        :type old_recipient_hostname: str
        """

        self._old_recipient_hostname = old_recipient_hostname

    @property
    def old_zone(self):
        """Gets the old_zone of this AddonMigration.


        :return: The old_zone of this AddonMigration.
        :rtype: str
        """
        return self._old_zone

    @old_zone.setter
    def old_zone(self, old_zone):
        """Sets the old_zone of this AddonMigration.


        :param old_zone: The old_zone of this AddonMigration.
        :type old_zone: str
        """

        self._old_zone = old_zone

    @property
    def port(self):
        """Gets the port of this AddonMigration.


        :return: The port of this AddonMigration.
        :rtype: float
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this AddonMigration.


        :param port: The port of this AddonMigration.
        :type port: float
        """

        self._port = port

    @property
    def request_date(self):
        """Gets the request_date of this AddonMigration.


        :return: The request_date of this AddonMigration.
        :rtype: str
        """
        return self._request_date

    @request_date.setter
    def request_date(self, request_date):
        """Sets the request_date of this AddonMigration.


        :param request_date: The request_date of this AddonMigration.
        :type request_date: str
        """

        self._request_date = request_date

    @property
    def state(self):
        """Gets the state of this AddonMigration.


        :return: The state of this AddonMigration.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this AddonMigration.


        :param state: The state of this AddonMigration.
        :type state: str
        """

        self._state = state
