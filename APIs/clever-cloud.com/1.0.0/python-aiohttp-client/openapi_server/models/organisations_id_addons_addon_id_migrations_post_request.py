# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrganisationsIdAddonsAddonIdMigrationsPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, plan_id: str=None, region: str=None):
        """OrganisationsIdAddonsAddonIdMigrationsPostRequest - a model defined in OpenAPI

        :param plan_id: The plan_id of this OrganisationsIdAddonsAddonIdMigrationsPostRequest.
        :param region: The region of this OrganisationsIdAddonsAddonIdMigrationsPostRequest.
        """
        self.openapi_types = {
            'plan_id': str,
            'region': str
        }

        self.attribute_map = {
            'plan_id': 'planId',
            'region': 'region'
        }

        self._plan_id = plan_id
        self._region = region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrganisationsIdAddonsAddonIdMigrationsPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _organisations__id__addons__addonId__migrations_post_request of this OrganisationsIdAddonsAddonIdMigrationsPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def plan_id(self):
        """Gets the plan_id of this OrganisationsIdAddonsAddonIdMigrationsPostRequest.

        Id of the new plan. E.g. \"plan_acddc485-79c2-4c6b-a617-c92a06c0cb0b\"

        :return: The plan_id of this OrganisationsIdAddonsAddonIdMigrationsPostRequest.
        :rtype: str
        """
        return self._plan_id

    @plan_id.setter
    def plan_id(self, plan_id):
        """Sets the plan_id of this OrganisationsIdAddonsAddonIdMigrationsPostRequest.

        Id of the new plan. E.g. \"plan_acddc485-79c2-4c6b-a617-c92a06c0cb0b\"

        :param plan_id: The plan_id of this OrganisationsIdAddonsAddonIdMigrationsPostRequest.
        :type plan_id: str
        """

        self._plan_id = plan_id

    @property
    def region(self):
        """Gets the region of this OrganisationsIdAddonsAddonIdMigrationsPostRequest.

        New region. E.g. \"EU\", \"US\", \"Par2\"

        :return: The region of this OrganisationsIdAddonsAddonIdMigrationsPostRequest.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this OrganisationsIdAddonsAddonIdMigrationsPostRequest.

        New region. E.g. \"EU\", \"US\", \"Par2\"

        :param region: The region of this OrganisationsIdAddonsAddonIdMigrationsPostRequest.
        :type region: str
        """

        self._region = region
