openapi: 3.0.0
info:
  contact:
    x-twitter: clever_cloud
  description: Public API for managing Clever-Cloud data and products
  title: Clever-Cloud API
  version: 1.0.0
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://twitter.com/clever_cloud/profile_image?size=original
  x-origin:
  - format: openapi
    url: https://www.clever-cloud.com/doc/api/swagger.json
    version: "3.0"
  x-providerName: clever-cloud.com
servers:
- url: https://api.clever-cloud.com/v2
paths:
  //openapi:
    get:
      responses:
        "200":
          description: The swagger documenting this API in yaml format.
      tags:
      - all
      x-accepts:
      - application/json
  //openapi.{type}: {}
  /application/{appId}/environment:
    get:
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Status 200
      tags:
      - all
      x-accepts:
      - application/json
    put:
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Status 200
      tags:
      - all
      x-accepts:
      - application/json
  /authorize:
    post:
      description: Handled by our API.
      operationId: postAuthorize
      responses:
        "200":
          description: authorize
      tags:
      - all
      x-accepts:
      - application/json
  /events/event-socket:
    get:
      description: "Retrieve events as they come through a websocket connection. To\
        \ have authorization, you have to send a `{ \"message_type\": \"oauth\", \"\
        authorization\": \"oauth authorization string\" }` message"
      responses:
        default:
          description: <No description>
      tags:
      - all
      - events
      x-accepts:
      - application/json
  /github:
    get:
      operationId: getGithub
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction_Id'
          description: startGithub
      tags:
      - all
      - github
      x-accepts:
      - application/json
  /github/applications:
    get:
      operationId: getGithubApplications
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          description: getGithubApplications
      tags:
      - all
      - applications
      - github
      x-accepts:
      - application/json
  /github/callback:
    get:
      operationId: getGithubCallback
      parameters:
      - explode: true
        in: query
        name: code
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: error
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: error_description
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: error_uri
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: Cookie
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: githubCallback
      tags:
      - all
      - github
      x-accepts:
      - application/json
  /github/emails:
    get:
      operationId: getGithubEmails
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: getGithubEmails
      tags:
      - all
      - github
      x-accepts:
      - '*/*'
  /github/keys:
    get:
      operationId: getGithubKeys
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Key'
                type: array
          description: getGithubKeys
      tags:
      - all
      - github
      x-accepts:
      - application/json
  /github/link:
    delete:
      operationId: deleteGithubLink
      responses:
        "200":
          description: unlinkGithub
      tags:
      - all
      - github
      x-accepts:
      - application/json
    get:
      operationId: getGithubLink
      parameters:
      - description: From GET /github
        explode: true
        in: query
        name: transactionId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: redirectUrl
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: linkGithub
      tags:
      - all
      - github
      x-accepts:
      - application/json
  /github/login:
    get:
      operationId: getGithubLogin
      parameters:
      - explode: true
        in: query
        name: redirectUrl
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: fromAuthorize
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: githubLogin
      tags:
      - all
      - github
      x-accepts:
      - application/json
  /github/redeploy:
    post:
      operationId: postGithubRedeploy
      parameters:
      - explode: false
        in: header
        name: User-Agent
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Github-Event
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Hub-Signature
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: redeployApp
      tags:
      - all
      - github
      x-accepts:
      - application/json
  /github/signup:
    get:
      operationId: getGithubSignup
      parameters:
      - explode: true
        in: query
        name: redirectUrl
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: fromAuthorize
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: githubSignup
      tags:
      - all
      - github
      x-accepts:
      - application/json
    post:
      operationId: postGithubSignup
      parameters:
      - explode: true
        in: query
        name: transactionId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: otherId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: otherEmail
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: password
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: autoLink
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: terms
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: finsihGithubSignup
      tags:
      - all
      - github
      x-accepts:
      - application/json
  /github/username:
    get:
      operationId: getGithubUsername
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: getGithubUsername
      tags:
      - all
      - github
      x-accepts:
      - '*/*'
  /logs-socket/{appId}:
    get:
      description: WebSocket to get logs for :appID. Optional queryString arg bind_to_es=true
        to bind WS on log storage and not real time AMQP broker
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      x-accepts:
      - application/json
  /logs/drains:
    get:
      description: Fetch all the logs drains (ccadmin dedicated route)
      responses:
        default:
          description: <No description>
      tags:
      - all
      - logs
      x-accepts:
      - application/json
  /logs/drains/{drainId}:
    put:
      description: Fetch all the logs drains (ccadmin dedicated route)
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: drainId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      - logs
      x-accepts:
      - application/json
  /logs/logs-chunked/{appId}:
    get:
      description: "Retrieve logs as they come through a chunked, never-ending response"
      parameters:
      - description: Application Id
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: Tell the user-agent to download the body as a file
        explode: true
        in: query
        name: download
        required: false
        schema:
          type: boolean
        style: form
      responses:
        default:
          description: <No description>
      tags:
      - all
      - logs
      x-accepts:
      - application/json
  /logs/logs-socket/{appId}:
    get:
      description: "Retrieve logs as they come through a websocket connection. To\
        \ have authorization, you have to send a `{ \"message_type\": \"oauth\", \"\
        authorization\": \"oauth authorization string\" }` message"
      parameters:
      - description: Application Id
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: Only fetch logs newer than this (ISO-8601 formatted) date
        explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: A pattern to filter with
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Only fetch logs emitted by this deployment
        explode: true
        in: query
        name: deployment_id
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          description: <No description>
      tags:
      - all
      - logs
      x-accepts:
      - application/json
  /logs/{appId}:
    get:
      description: Fetch the logs for a given application
      parameters:
      - description: Application Id
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: Number of lines to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Logs order
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "Lowest bound for logs date, ISO 8601"
        explode: true
        in: query
        name: after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Highest bounds for logs date, ISO 8601"
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: A pattern to filter with
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Only fetch logs emitted by this deployment
        explode: true
        in: query
        name: deployment_id
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          description: <No description>
      tags:
      - all
      - logs
      x-accepts:
      - application/json
  /logs/{appId}/drains:
    get:
      description: Fetch the logs drains for a given application
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      - logs
      x-accepts:
      - application/json
    post:
      description: Add a log drain for a given application
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      - logs
      x-accepts:
      - application/json
  /logs/{appId}/drains/:idOrUrl:
    delete:
      description: Delete the logs drain by id or url for a given application
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      - logs
      x-accepts:
      - application/json
    get:
      description: Fetch the logs drain by id or url for a given application
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      - logs
      x-accepts:
      - application/json
  /logs/{appId}/sse:
    get:
      description: "Retrieve logs as they come through a sse connection. To have authorization,\
        \ you have to add `authorization=oAuthAuthorizationString` as query param."
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      - logs
      x-accepts:
      - application/json
  /newsfeeds/blog:
    get:
      operationId: getNewsfeedsBlog
      responses:
        "200":
          description: getBlogFeed
      tags:
      - all
      x-accepts:
      - application/json
  /newsfeeds/engineering:
    get:
      operationId: getNewsfeedEngineering
      responses:
        "200":
          description: getEngineeringFeed
      tags:
      - all
      x-accepts:
      - application/json
  /notifications/emailhooks/{ownerId}:
    get:
      description: list created e-mail hooks
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      x-accepts:
      - application/json
    post:
      description: create a hook for e-mail notifications
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      x-accepts:
      - application/json
  /notifications/emailhooks/{ownerId}/:id:
    delete:
      description: delete an e-mail hook
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      x-accepts:
      - application/json
    put:
      description: edit an e-mail hook
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      x-accepts:
      - application/json
  /notifications/info/events:
    get:
      description: list available events
      responses:
        default:
          description: <No description>
      tags:
      - all
      - events
      x-accepts:
      - application/json
  /notifications/info/webhookformats:
    get:
      description: list available webhook formats
      responses:
        default:
          description: <No description>
      tags:
      - all
      x-accepts:
      - application/json
  /notifications/webhooks/{ownerId}:
    get:
      description: list created hooks
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      x-accepts:
      - application/json
    post:
      description: create a hook for notifications
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      x-accepts:
      - application/json
  /notifications/webhooks/{ownerId}/:id:
    delete:
      description: delete a hook
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      x-accepts:
      - application/json
    put:
      description: edit a hook
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      x-accepts:
      - application/json
  /oauth/access_token:
    post:
      operationId: postOauthAccessToken
      parameters:
      - explode: true
        in: query
        name: oauth_consumer_key
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_signature_method
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_signature
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_timestamp
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_nonce
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_version
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_verifier
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_callback
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_token_secret
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_callback_confirmed
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: postAccessTokenRequest
      tags:
      - all
      - oauth
      x-accepts:
      - application/json
  /oauth/access_token_query:
    post:
      parameters:
      - explode: true
        in: query
        name: oauth_consumer_key
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_signature_method
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_signature
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_timestamp
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_nonce
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_version
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_verifier
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_callback
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_token_secret
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_callback_confirmed
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - oauth
      x-accepts:
      - application/json
  /oauth/authorize:
    get:
      operationId: getOauthAuthorize
      parameters:
      - explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: Cookie
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: authorizeForm
      tags:
      - all
      - oauth
      x-accepts:
      - application/json
    post:
      operationId: postOauthAuthorize
      parameters:
      - explode: true
        in: query
        name: almighty
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: access_organisations
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: manage_organisations
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: manage_organisations_services
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: manage_organisations_applications
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: manage_organisations_members
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: access_organisations_bills
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: access_organisations_credit_count
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: access_organisations_consumption_statistics
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: access_personal_information
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: manage_personal_information
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: manage_ssh_keys
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: manage_services
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: manage_applications
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: access_bills
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: access_credit_count
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: access_consumption_statistics
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: Cookie
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: authorizeToken
      tags:
      - all
      - oauth
      x-accepts:
      - application/json
  /oauth/request_token:
    post:
      operationId: postOauthRequestToken
      parameters:
      - explode: true
        in: query
        name: oauth_consumer_key
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_signature_method
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_signature
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_timestamp
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_nonce
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_version
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_verifier
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_callback
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_token_secret
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_callback_confirmed
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: postReqTokenRequest
      tags:
      - all
      - oauth
      x-accepts:
      - application/json
  /oauth/request_token_query:
    post:
      parameters:
      - explode: true
        in: query
        name: oauth_consumer_key
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_signature_method
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_signature
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_timestamp
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_nonce
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_version
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_verifier
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_callback
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_token_secret
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_callback_confirmed
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - oauth
      x-accepts:
      - application/json
  /oauth/rights:
    get:
      operationId: getOauthRights
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rights'
          description: getAvailableRights
      tags:
      - all
      - oauth
      x-accepts:
      - application/json
  /openapi.{type}:
    get:
      description: "Get the swagger for this API as {type}. Type can be either \"\
        yml\" or \"json\"."
      parameters:
      - explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: "This API swagger documentation in {type} format."
      summary: "Get the swagger for this API as {type}"
      tags:
      - all
      x-accepts:
      - application/json
  /organisations:
    get:
      operationId: getOrganisations
      parameters:
      - explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organisation'
                type: array
          description: getUserOrganisations
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
    post:
      operationId: postOrganisations
      requestBody:
        $ref: '#/components/requestBodies/WannabeOrganisation'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Organisation'
          description: createOrganisation
      tags:
      - all
      - organisations
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /organisations/{id}:
    delete:
      operationId: deleteOrganisationsId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteOrganisation
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
    get:
      operationId: getOrganisationsId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
          description: getOrganisation
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
    put:
      operationId: putOrganisationsId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeOrganisation'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Organisation'
          description: editOrganisation
      tags:
      - all
      - organisations
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /organisations/{id}/addonproviders:
    get:
      operationId: getOrganisationsIdAddonproviders
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Provider'
                type: array
          description: Get all informations about all providers.
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
    post:
      operationId: postOrganisationsIdAddonproviders
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeAddonProvider'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Provider'
          description: createProvider
      tags:
      - all
      - organisations
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /organisations/{id}/addonproviders/{providerId}:
    delete:
      description: "Remove a given add-on provider. providerId must be owned by organisation\
        \ {id}."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: If the deletion was successful.
        "403":
          content:
            application/json:
              examples:
                response:
                  value: "{\"type\":\"error\",\"id\":6200,\"message\":\"You do not\
                    \ belong to this organisation so you cannot access it\"}"
              schema:
                $ref: '#/components/schemas/Error'
          description: "If user has no access to organisation {id} or provider or\
            \ if there still are add-ons of this provider."
        "404":
          description: If no such organisation/provider exists.
      summary: Remove an add-on provider
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
    get:
      operationId: getOrganisationsIdAddonprovidersProviderId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
          description: Get all informations about given provider.
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
    put:
      operationId: putOrganisationsIdAddonprovidersProviderId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeAddonProvider'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Provider'
          description: updateProviderInfos
      tags:
      - all
      - organisations
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /organisations/{id}/addonproviders/{providerId}/features:
    get:
      operationId: getOrganisationsIdAddonprovidersProviderIdFeatures
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Feature'
                type: array
          description: getProviderFeatures
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
    post:
      operationId: postOrganisationsIdAddonprovidersProviderIdFeatures
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeFeature'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Feature'
          description: addProviderFeature
      tags:
      - all
      - organisations
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /organisations/{id}/addonproviders/{providerId}/features/{featureId}:
    delete:
      operationId: deleteOrganisationsIdAddonprovidersProviderIdFeaturesFeatureId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteProviderFeature
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/addonproviders/{providerId}/plans:
    get:
      operationId: getOrganisationsIdAddonprovidersProviderIdPlans
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Plan'
                type: array
          description: getProviderPlans
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
    post:
      operationId: postOrganisationsIdAddonprovidersProviderIdPlans
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabePlan'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Plan'
          description: addProviderPlan
      tags:
      - all
      - organisations
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /organisations/{id}/addonproviders/{providerId}/plans/{planId}:
    delete:
      operationId: deleteOrganisationsIdAddonprovidersProviderIdPlansPlanId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteProviderPlan
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
    get:
      operationId: getOrganisationsIdAddonprovidersProviderIdPlansPlanId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: getProviderPlan
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
    put:
      operationId: putOrganisationsIdAddonprovidersProviderIdPlansPlanId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabePlan'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Plan'
          description: editProviderPlan
      tags:
      - all
      - organisations
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /organisations/{id}/addonproviders/{providerId}/plans/{planId}/features/{featureName}:
    delete:
      operationId: deleteOrganisationsIdAddonprovidersProviderIdPlansPlanIdFeaturesFeatureName
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: featureName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteProviderPlanFeature
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
    put:
      operationId: putOrganisationsIdAddonprovidersProviderIdPlansPlanIdFeaturesFeatureName
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: featureName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabePlanFeature'
        required: true
      responses:
        "200":
          description: editProviderPlanFeature
      tags:
      - all
      - organisations
      x-content-type: application/json
      x-accepts:
      - application/json
  /organisations/{id}/addonproviders/{providerId}/sso:
    get:
      operationId: getOrganisationsIdAddonsAddonIdSso
      parameters:
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonProviderSso'
          description: getSSOData
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/addonproviders/{providerId}/tags:
    get:
      operationId: getOrganisationsIdAddonprovidersProviderIdTags
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: getProviderTags
      tags:
      - all
      - organisations
      x-accepts:
      - '*/*'
  /organisations/{id}/addonproviders/{providerId}/testers:
    post:
      operationId: postOrganisationsIdAddonprovidersProviderIdTesters
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: addBetaTester
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/addons:
    get:
      operationId: getOrganisationsIdAddons
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Addon'
                type: array
          description: getAddons
      tags:
      - all
      - addons
      - organisations
      x-accepts:
      - application/json
    post:
      operationId: postOrganisationsIdAddons
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeAddon'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Addon'
          description: provisionAddon
      tags:
      - all
      - addons
      - organisations
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /organisations/{id}/addons/preorders:
    post:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeAddon'
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - addons
      - organisations
      x-content-type: application/json
      x-accepts:
      - application/json
  /organisations/{id}/addons/{addonId}:
    delete:
      operationId: deleteOrganisationsIdAddonsAddonId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deprovisionAddon
      tags:
      - all
      - addons
      - organisations
      x-accepts:
      - application/json
    get:
      operationId: getOrganisationsIdAddonsAddonId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addon'
          description: getAddon
      tags:
      - all
      - addons
      - organisations
      x-accepts:
      - application/json
    put:
      operationId: putOrganisationsIdAddonsAddonId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeAddon'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Addon'
          description: Update addon information
      tags:
      - all
      - addons
      - organisations
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /organisations/{id}/addons/{addonId}/applications:
    get:
      operationId: getOrganisationsIdAddonsAddonIdApplications
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          description: getApplicationsLinkedToAddon
      tags:
      - all
      - addons
      - applications
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/addons/{addonId}/env:
    get:
      operationId: getOrganisationsIdAddonsAddonIdEnv
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ListEnv'
                type: array
          description: getAddonEnv
      tags:
      - all
      - addons
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/addons/{addonId}/instances:
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: deploymentId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: withDeleted
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                description: List of instances.
                items:
                  $ref: '#/components/schemas/SupernovaInstanceView'
                type: array
          description: The instance list
      summary: List instances for this add-on.
      tags:
      - all
      - addons
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/addons/{addonId}/instances/{instanceId}:
    get:
      parameters:
      - explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupernovaInstanceView'
          description: An instance
      summary: "Get a specific instance for {addonId}"
      tags:
      - all
      - addons
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/addons/{addonId}/migrations:
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value: "{\n   \"id\": \"<UUID>\",\n   \"addon_id\": \"addon_<uuid>\"\
                    ,\n   \"kind\": \"SHARED_TO_SHARED|SHARED_TO_DEDICATED|DEDICATED_TO_DEDICATED|DEDICATED_TO_SHARED\"\
                    ,\n   \"state\": \"??\",\n   \"hostname\": \"db.hostname\",\n\
                    \   \"database\": \"dbname\",\n   \"port\": 5432,\n   \"database_user\"\
                    : \"username\",\n   \"callback_url\": \"https://api.clever-cloud.com/v2/…\
                    \",\n   \"old_cluster_id\": \"acddc485-79c2-4c6b-a617-c92a06c0cb0b\"\
                    ,\n   \"old_cluster_label\": \"par2-01\",\n   \"old_instance_id\"\
                    : \"acddc485-79c2-4c6b-a617-c92a06c0cb0b\",\n   \"old_plan\":\
                    \ \"s\",\n   \"old_zone\": \"par2\",\n   \"old_recipient_hostname\"\
                    : \"postgresql-sdc-par2-clevercloud.services.clever-cloud.com\"\
                    , \n   \"new_cluster_id\": \"acddc485-79c2-4c6b-a617-c92a06c0cb0b\"\
                    ,\n   \"new_cluster_label\": \"par2-02\",\n   \"new_instance_id\"\
                    : \"acddc485-79c2-4c6b-a617-c92a06c0cb0b\",\n   \"new_plan\":\
                    \ \"m\",\n   \"new_zone\": \"par3\",\n   \"new_recipient_hostname\"\
                    : \"postgresql-sdc-par3-clevercloud.services.clever-cloud.com\"\
                    , \n   \"request_date\": \"2018-10-31T10:00:23Z\",\n   \"last_state_update_date\"\
                    :  \"2018-10-31T10:00:23Z\",\n   \"dump_restore_start_date\":\
                    \  \"2018-10-31T10:00:23Z\",\n   \"dump_restore_finished_date\"\
                    :  \"2018-10-31T10:00:23Z\",\n   \"end_date\":  \"2018-10-31T10:00:23Z\"\
                    ,\n   \"exit_message\": \"Success\" \n}"
              schema:
                items:
                  $ref: '#/components/schemas/AddonMigration'
                type: array
          description: List of migrations
      summary: Get past migrations from add-on.
      tags:
      - all
      - addons
      - organisations
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_organisations__id__addons__addonId__migrations_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                description: The output of the POST to the add-on API.
                type: object
          description: Migration has started.
      summary: Start a new add-on migration
      tags:
      - all
      - addons
      - organisations
      x-content-type: application/json
      x-accepts:
      - application/json
  /organisations/{id}/addons/{addonId}/migrations/{migrationId}:
    get:
      parameters:
      - explode: false
        in: path
        name: migrationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonMigration'
          description: The migration object
      summary: Get a given migration
      tags:
      - all
      - addons
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/addons/{addonId}/sso:
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sso'
          description: getSSOData
      tags:
      - all
      - addons
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/addons/{addonId}/tags:
    get:
      operationId: getOrganisationsIdAddonsAddonIdTags
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: getAddonTags
      tags:
      - all
      - addons
      - organisations
      x-accepts:
      - '*/*'
  /organisations/{id}/addons/{addonId}/tags/{tag}:
    delete:
      operationId: deleteOrganisationsIdAddonsAddonIdTagsTag
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteAddonTag
      tags:
      - all
      - addons
      - organisations
      x-accepts:
      - application/json
    put:
      operationId: putOrganisationsIdAddonsAddonIdTagsTag
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Body'
      responses:
        "200":
          description: addAddonTag
      tags:
      - all
      - addons
      - organisations
      x-content-type: application/json
      x-accepts:
      - application/json
  /organisations/{id}/applications:
    get:
      operationId: getOrganisationsIdApplications
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          description: getAllApplications
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
    post:
      description: "Creates an application. If you want to create a Github app, you\
        \ need to replace the oauthApp field with what you will find here: https://github.com/CleverCloud/doc.clever-cloud.com/issues/179"
      operationId: postOrganisationsIdApplications
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeApplication'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Application'
          description: addApplication
      tags:
      - all
      - applications
      - organisations
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /organisations/{id}/applications/{appId}:
    delete:
      operationId: deleteOrganisationsIdApplicationsAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteApplication
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
    get:
      operationId: getOrganisationsIdApplicationsAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: getApplication
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
    put:
      operationId: putOrganisationsIdApplicationsAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeApplication'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Application'
          description: editApplication
      tags:
      - all
      - applications
      - organisations
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /organisations/{id}/applications/{appId}/addons:
    get:
      operationId: getOrganisationsIdApplicationsAppIdAddons
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Addon'
                type: array
          description: getAddonsLinkedToApplication
      tags:
      - all
      - addons
      - applications
      - organisations
      x-accepts:
      - application/json
    post:
      operationId: postOrganisationsIdApplicationsAppIdAddons
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Body'
      responses:
        "200":
          description: linkAddonToApplication
      tags:
      - all
      - addons
      - applications
      - organisations
      x-content-type: application/json
      x-accepts:
      - application/json
  /organisations/{id}/applications/{appId}/addons/env:
    get:
      operationId: getOrganisationsIdApplicationsAppIdAddonsEnv
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Env'
                type: array
          description: getEnvOfAddonsLinkedToApplication
      tags:
      - all
      - addons
      - applications
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/applications/{appId}/addons/{addonId}:
    delete:
      operationId: deleteOrganisationsIdApplicationsAppIdAddonsAddonId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: unlinkAddonFromApplication
      tags:
      - all
      - addons
      - applications
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/applications/{appId}/branch:
    put:
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/applications/{appId}/branches:
    get:
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/applications/{appId}/buildflavor:
    put:
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/applications/{appId}/dependencies:
    get:
      operationId: getOrganisationsIdApplicationsAppIdDependencies
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          description: getApplicationDependencies
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/applications/{appId}/dependencies/env:
    get:
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/LinkedAppEnv'
                type: array
          description: Get env variables defined by application dependencies
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - '*/*'
  /organisations/{id}/applications/{appId}/dependencies/{dependencyId}:
    delete:
      operationId: deleteOrganisationsIdApplicationsAppIdDependenciesDependencyId
      parameters:
      - explode: false
        in: path
        name: dependencyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteApplicationDependency
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
    put:
      operationId: putOrganisationsIdApplicationsAppIdDependenciesDependencyId
      parameters:
      - explode: false
        in: path
        name: dependencyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Body'
      responses:
        "200":
          description: addApplicationDependency
      tags:
      - all
      - applications
      - organisations
      x-content-type: application/json
      x-accepts:
      - application/json
  /organisations/{id}/applications/{appId}/dependents:
    get:
      operationId: getOrganisationsIdApplicationsAppIdDependents
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          description: getApplicationDependents
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/applications/{appId}/deployments:
    get:
      operationId: getOrganisationsIdApplicationsAppIdDeployments
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: action
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Deployment'
                type: array
          description: getApplicationDeploymentsForOrga
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/applications/{appId}/deployments/{deploymentId}:
    get:
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deploymentId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/applications/{appId}/deployments/{deploymentId}/instances:
    delete:
      operationId: deleteOrganisationsIdApplicationsAppIdDeploymentsDeploymentIdInstances
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deploymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: getApplicationDeploymentsForOrga
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/applications/{appId}/env:
    get:
      operationId: getOrganisationsIdApplicationsAppIdEnv
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ListEnv'
                type: array
          description: getApplicationEnv
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
    put:
      operationId: putOrganisationsIdApplicationsAppIdEnv
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeEnv'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListEnv'
          description: editApplicationEnvironment
      tags:
      - all
      - applications
      - organisations
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /organisations/{id}/applications/{appId}/env/{envName}:
    delete:
      operationId: deleteOrganisationsIdApplicationsAppIdEnvEnvName
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: envName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: removeApplicationEnv
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
    put:
      operationId: putOrganisationsIdApplicationsAppIdEnvEnvName
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: envName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeEnv'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListEnv'
          description: editApplicationEnv
      tags:
      - all
      - applications
      - organisations
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /organisations/{id}/applications/{appId}/exposed_env:
    get:
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
    put:
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/applications/{appId}/instances:
    delete:
      operationId: deleteOrganisationsIdApplicationsAppIdInstances
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: undeployApplication
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
    get:
      operationId: getOrganisationsIdApplicationsAppIdInstances
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppInstance'
                type: array
          description: getApplicationInstances
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
    post:
      operationId: postOrganisationsIdApplicationsAppIdInstances
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: commit
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: redeployApplication
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/applications/{appId}/instances/{instanceId}:
    get:
      parameters:
      - explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/applications/{appId}/tags:
    get:
      operationId: getOrganisationsIdApplicationsAppIdTags
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: getApplicationTags
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - '*/*'
  /organisations/{id}/applications/{appId}/tags/{tag}:
    delete:
      operationId: deleteOrganisationsIdApplicationsAppIdTagsTag
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteApplicationTag
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
    put:
      operationId: putOrganisationsIdApplicationsAppIdTagsTag
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Body'
      responses:
        "200":
          description: addApplicationTag
      tags:
      - all
      - applications
      - organisations
      x-content-type: application/json
      x-accepts:
      - application/json
  /organisations/{id}/applications/{appId}/vhosts:
    get:
      operationId: getOrganisationsIdApplicationsAppIdVhosts
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Vhost'
                type: array
          description: getVhosts
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/applications/{appId}/vhosts/favourite:
    delete:
      operationId: deleteOrganisationsIdApplicationsAppIdVhostsFavourite
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: unmarkFavouriteVhost
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
    get:
      operationId: getOrganisationsIdApplicationsAppIdVhostsFavourite
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vhost'
          description: getFavouriteVhost
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
    put:
      operationId: putOrganisationsIdApplicationsAppIdVhostsFavourite
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Vhost'
      responses:
        "200":
          description: markFavouriteVhost
      tags:
      - all
      - applications
      - organisations
      x-content-type: application/json
      x-accepts:
      - application/json
  /organisations/{id}/applications/{appId}/vhosts/{domain}:
    delete:
      operationId: deleteOrganisationsIdApplicationsAppIdVhostsDomain
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: removeVhost
      tags:
      - all
      - applications
      - organisations
      x-accepts:
      - application/json
    put:
      operationId: putOrganisationsIdApplicationsAppIdVhostsDomain
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Vhost'
      responses:
        "200":
          description: addVhost
      tags:
      - all
      - applications
      - organisations
      x-content-type: application/json
      x-accepts:
      - application/json
  /organisations/{id}/avatar:
    put:
      description: "If you want to upload an image from your computer, send the image\
        \ in the body of the request without anything else."
      operationId: putOrganisationsIdAvatar
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: |-
            setOrgaAvatar
            setOrgaAvatarFromSource
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/consumers:
    get:
      operationId: getOrganisationsIdConsumers
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Consumer'
                type: array
          description: getConsumers
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
    post:
      operationId: postOrganisationsIdConsumers
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeConsumer'
      responses:
        "200":
          description: createConsumer
      tags:
      - all
      - organisations
      x-content-type: application/json
      x-accepts:
      - application/json
  /organisations/{id}/consumers/{key}:
    delete:
      operationId: deleteOrganisationsIdConsumersKey
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteConsumer
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
    get:
      operationId: getOrganisationsIdConsumersKey
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consumer'
          description: getConsumer
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
    put:
      operationId: putOrganisationsIdConsumersKey
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeConsumer'
      responses:
        "200":
          description: PUT the same data as in POST.
      tags:
      - all
      - organisations
      x-content-type: application/json
      x-accepts:
      - application/json
  /organisations/{id}/consumers/{key}/secret:
    get:
      operationId: getOrganisationsIdConsumersKeySecret
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: getConsumerSecret
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/consumptions:
    get:
      operationId: getOrganisationsIdConsumptions
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: appId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conso'
          description: getAmount
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/credits:
    get:
      operationId: getOrganisationsIdCredits
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credits'
          description: getAmount
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/deployments:
    get:
      operationId: getOrganisationsIdDeployments
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentSummary'
          description: getDeploymentsForAllApps
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/instances:
    get:
      operationId: getOrganisationsIdInstances
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: getInstancesForAllApps
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/members:
    get:
      operationId: getOrganisationsIdMembers
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Member'
                type: array
          description: getOrganisationMembers
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
    post:
      operationId: postOrganisationsIdMembers
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: invitationKey
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/WannabeMember'
      responses:
        "200":
          description: addOrganisationMember
      tags:
      - all
      - organisations
      x-content-type: application/json
      x-accepts:
      - application/json
  /organisations/{id}/members/{userId}:
    delete:
      operationId: deleteOrganisationsIdMembersUserId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: removeOrganisationMember
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
    put:
      operationId: putOrganisationsIdMembersUserId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeMember'
      responses:
        "200":
          description: editOrganisationMember
      tags:
      - all
      - organisations
      x-content-type: application/json
      x-accepts:
      - application/json
  /organisations/{id}/payment-info:
    get:
      operationId: getOrganisationsIdPaymentInfo
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: getPaymentInfo
      tags:
      - all
      - organisations
      x-accepts:
      - application/json
  /organisations/{id}/payments/billings:
    get:
      operationId: getOrganisationsIdPaymentsBillings
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: getInvoices
      tags:
      - all
      - organisations
      - payments
      x-accepts:
      - application/json
    post:
      operationId: postOrganisationsIdPaymentsBillings
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: buyDrops
      tags:
      - all
      - organisations
      - payments
      x-accepts:
      - application/json
  /organisations/{id}/payments/billings/unpaid:
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - organisations
      - payments
      x-accepts:
      - application/json
  /organisations/{id}/payments/billings/{bid}:
    delete:
      operationId: deleteOrganisationsIdPaymentsBillingsBid
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deletePurchaseOrder
      tags:
      - all
      - organisations
      - payments
      x-accepts:
      - application/json
    get:
      operationId: getOrganisationsIdPaymentsBillingsBid
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: getInvoice
      tags:
      - all
      - organisations
      - payments
      x-accepts:
      - application/json
    put:
      operationId: putOrganisationsIdPaymentsBillingsBid
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: choosePaymentProvider
      tags:
      - all
      - organisations
      - payments
      x-accepts:
      - application/json
  /organisations/{id}/payments/billings/{bid}.pdf:
    get:
      operationId: getOrganisationsIdPaymentsBillingsBidPdf
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: getPdfInvoice
      tags:
      - all
      - organisations
      - payments
      x-accepts:
      - application/json
  /organisations/{id}/payments/fullprice/{price}:
    get:
      operationId: getOrganisationsIdPaymentsFullPricePrice
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: price
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: priceWithTax
      tags:
      - all
      - organisations
      - payments
      x-accepts:
      - application/json
  /organisations/{id}/payments/methods:
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - organisations
      - payments
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Body'
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - organisations
      - payments
      x-content-type: application/json
      x-accepts:
      - application/json
  /organisations/{id}/payments/methods/default:
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - organisations
      - payments
      x-accepts:
      - application/json
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentData'
        required: true
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - organisations
      - payments
      x-content-type: application/json
      x-accepts:
      - application/json
  /organisations/{id}/payments/methods/{mId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: mId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - organisations
      - payments
      x-accepts:
      - application/json
  /organisations/{id}/payments/monthlyinvoice:
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - organisations
      - payments
      x-accepts:
      - application/json
  /organisations/{id}/payments/monthlyinvoice/maxcredit:
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - organisations
      - payments
      x-accepts:
      - application/json
  /organisations/{id}/payments/recurring:
    delete:
      operationId: deleteOrganisationsIdPaymentsRecurring
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteRecurrentPayment
      tags:
      - all
      - organisations
      - payments
      x-accepts:
      - application/json
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - organisations
      - payments
      x-accepts:
      - application/json
  /password_forgotten:
    get:
      operationId: getPasswordForgotten
      responses:
        "200":
          description: getPasswordForgottenForm
      tags:
      - all
      - password_forgotten
      x-accepts:
      - application/json
    post:
      operationId: postPasswordForgotten
      parameters:
      - explode: true
        in: query
        name: login
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: drop_tokens
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: TesterPass
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: askForPasswordResetViaForm
      tags:
      - all
      - password_forgotten
      x-accepts:
      - application/json
  /password_forgotten/{key}:
    get:
      operationId: getPasswordForgottenKey
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: confirmPasswordResetRequest
      tags:
      - all
      - password_forgotten
      x-accepts:
      - application/json
    post:
      operationId: postPasswordForgottenKey
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: pass
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pass2
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: resetPasswordForgotten
      tags:
      - all
      - password_forgotten
      x-accepts:
      - application/json
  /payments/assets/pay_button/{token}/button.png:
    get:
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - payments
      x-accepts:
      - application/json
  /payments/coupons/{name}:
    get:
      operationId: getPaymentsCouponsName
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: getCoupon
      tags:
      - all
      - payments
      x-accepts:
      - application/json
  /payments/providers:
    get:
      operationId: getPaymentsProviders
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Payment_Provider'
                type: array
          description: getAvailablePaymentProviders
      tags:
      - all
      - payments
      x-accepts:
      - application/json
  /payments/tokens/stripe:
    get:
      operationId: getPaymentsTokensStripe
      responses:
        "200":
          description: getStripeToken
      tags:
      - all
      - payments
      x-accepts:
      - application/json
  /payments/{bid}/end/stripe:
    post:
      parameters:
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: endPaymentWithStripe
      tags:
      - all
      - payments
      x-accepts:
      - application/json
  /products/addonproviders:
    get:
      operationId: getProductsAddonProviders
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Provider'
                type: array
          description: getAddonProviders
      tags:
      - all
      - products
      x-accepts:
      - application/json
  /products/addonproviders/{provider_id}:
    get:
      operationId: getProductsAddonProvidersProviderId
      parameters:
      - explode: false
        in: path
        name: provider_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
          description: getAddonProvider
      tags:
      - all
      - products
      x-accepts:
      - application/json
  /products/addonproviders/{provider_id}/versions:
    get:
      parameters:
      - explode: false
        in: path
        name: provider_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - products
      x-accepts:
      - application/json
  /products/countries:
    get:
      operationId: getProductsCountries
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: getCountries
      tags:
      - all
      - products
      x-accepts:
      - application/json
  /products/countrycodes:
    get:
      operationId: getProductsCountrycodes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: getCountryCodes
      tags:
      - all
      - products
      x-accepts:
      - application/json
  /products/instances:
    get:
      operationId: getProductsInstances
      parameters:
      - explode: true
        in: query
        name: for
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Instance'
                type: array
          description: getAvailableInstances
      tags:
      - all
      - products
      x-accepts:
      - application/json
  /products/instances/{type}-{version}:
    get:
      operationId: getProductsInstancesTypeVersion
      parameters:
      - explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: for
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: app
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
          description: getAvailableInstance
      tags:
      - all
      - products
      x-accepts:
      - application/json
  /products/mfa_kinds:
    get:
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - products
      x-accepts:
      - application/json
  /products/packages:
    get:
      operationId: getProductsPackages
      parameters:
      - explode: true
        in: query
        name: coupon
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: orgaId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: currency
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: getAvailablePackages
      tags:
      - all
      - products
      x-accepts:
      - application/json
  /products/prices:
    get:
      operationId: getProductsPrices
      responses:
        "200":
          description: getExchangeRates
      tags:
      - all
      - products
      x-accepts:
      - application/json
  /products/zones:
    get:
      operationId: getProductsZones
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Zone'
                type: array
          description: getZones
      tags:
      - all
      - products
      x-accepts:
      - application/json
  /self:
    delete:
      operationId: deleteSelf
      responses:
        "200":
          description: deleteUser
      tags:
      - all
      - self
      x-accepts:
      - application/json
    get:
      description: Get information about yourself
      operationId: getSelf
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: getUser
      summary: ""
      tags:
      - all
      - self
      x-accepts:
      - application/json
    put:
      operationId: putSelf
      requestBody:
        $ref: '#/components/requestBodies/WannabeUser'
      responses:
        "200":
          description: editUser
      tags:
      - all
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/addons:
    get:
      description: Get all the addons
      operationId: getSelfAddons
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Addon'
                type: array
          description: getAddons
      summary: Addon
      tags:
      - all
      - addons
      - self
      x-accepts:
      - application/json
    post:
      operationId: postSelfAddons
      requestBody:
        $ref: '#/components/requestBodies/WannabeAddon'
      responses:
        "200":
          description: provisionAddon
      tags:
      - all
      - addons
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/addons/preorders:
    post:
      requestBody:
        $ref: '#/components/requestBodies/WannabeAddon'
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - addons
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/addons/{addonId}:
    delete:
      operationId: deleteSelfAddonsAddonId
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deprovisionAddon
      tags:
      - all
      - addons
      - self
      x-accepts:
      - application/json
    get:
      description: Get a specific addon
      operationId: getSelfAddonsAddonId
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addon'
          description: getAddon
      summary: Specific addon
      tags:
      - all
      - addons
      - self
      x-accepts:
      - application/json
    put:
      operationId: putSelfAddonsAddonId
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeAddon'
      responses:
        "200":
          description: Update addon informations
      tags:
      - all
      - addons
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/addons/{addonId}/applications:
    get:
      operationId: getSelfAddonsAddonIdApplications
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          description: getApplicationsLinkedToAddon
      tags:
      - all
      - addons
      - applications
      - self
      x-accepts:
      - application/json
  /self/addons/{addonId}/env:
    get:
      operationId: getSelfAddonsAddonIdEnv
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ListEnv'
                type: array
          description: getAddonEnv
      tags:
      - all
      - addons
      - self
      x-accepts:
      - application/json
  /self/addons/{addonId}/plan:
    put:
      operationId: putSelfAddonsAddonIdPlan
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabePlan'
      responses:
        "200":
          description: Update plan of an add-on.
      tags:
      - all
      - addons
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/addons/{addonId}/sso:
    get:
      operationId: getSelfAddonsAddonIdSso
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sso'
          description: getSSOData
      tags:
      - all
      - addons
      - self
      x-accepts:
      - application/json
  /self/addons/{addonId}/tags:
    get:
      operationId: getSelfAddonsAddonIdTags
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: getAddonTags
      tags:
      - all
      - addons
      - self
      x-accepts:
      - '*/*'
  /self/addons/{addonId}/tags/{tag}:
    delete:
      operationId: deleteSelfAddonsAddonIdTagsTag
      parameters:
      - explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteAddonTag
      tags:
      - all
      - addons
      - self
      x-accepts:
      - application/json
    put:
      operationId: putSelfAddonsAddonIdTagsTag
      parameters:
      - explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Body'
      responses:
        "200":
          description: addAddonTag
      tags:
      - all
      - addons
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/applications:
    get:
      operationId: getSelfApplications
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          description: getApplications
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
    post:
      description: "Creates an application. If you want to create a Github app, you\
        \ need to replace the oauthApp field with what you will find here: https://github.com/CleverCloud/doc.clever-cloud.com/issues/179"
      operationId: postSelfApplications
      requestBody:
        $ref: '#/components/requestBodies/WannabeApplication'
      responses:
        "200":
          description: addApplication
      tags:
      - all
      - applications
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/applications/{appId}:
    delete:
      operationId: deleteSelfApplicationsAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteApplication
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
    get:
      operationId: getSelfApplicationsAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: getApplication
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
    put:
      operationId: putSelfApplicationsAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeApplication'
      responses:
        "200":
          description: editApplication
      tags:
      - all
      - applications
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/applications/{appId}/addons:
    get:
      operationId: getSelfApplicationsAppIdAddons
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Addon'
                type: array
          description: getAddonsLinkedToApplication
      tags:
      - all
      - addons
      - applications
      - self
      x-accepts:
      - application/json
    post:
      operationId: postSelfApplicationsAppIdAddons
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Body'
      responses:
        "200":
          description: linkAddonToApplication
      tags:
      - all
      - addons
      - applications
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/applications/{appId}/addons/env:
    get:
      operationId: getSelfApplicationsAppIdAddonsEnv
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Env'
                type: array
          description: getEnvOfAddonsLinkedToApplication
      tags:
      - all
      - addons
      - applications
      - self
      x-accepts:
      - application/json
  /self/applications/{appId}/addons/{addonId}:
    delete:
      operationId: deleteSelfApplicationsAppIdAddonsAddonId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: unlinkAddonFromApplication
      tags:
      - all
      - addons
      - applications
      - self
      x-accepts:
      - application/json
  /self/applications/{appId}/branch:
    put:
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
  /self/applications/{appId}/branches:
    get:
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
  /self/applications/{appId}/buildflavor:
    put:
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
  /self/applications/{appId}/dependencies:
    get:
      operationId: getSelfApplicationsAppIdDependencies
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          description: getApplicationDependencies
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
  /self/applications/{appId}/dependencies/env:
    get:
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/LinkedAppEnv'
                type: array
          description: Get env variables defined by application dependencies
      tags:
      - all
      - applications
      - self
      x-accepts:
      - '*/*'
  /self/applications/{appId}/dependencies/{dependencyId}:
    delete:
      operationId: deleteSelfApplicationsAppIdDependenciesDependencyId
      parameters:
      - explode: false
        in: path
        name: dependencyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteApplicationDependency
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
    put:
      operationId: getSelfApplicationsAppIdDependenciesDependencyId
      parameters:
      - explode: false
        in: path
        name: dependencyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeApplication'
      responses:
        "200":
          description: addApplicationDependency
      tags:
      - all
      - applications
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/applications/{appId}/dependents:
    get:
      operationId: getSelfApplicationsAppIdDependents
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          description: getApplicationDependents
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
  /self/applications/{appId}/deployments:
    get:
      operationId: getSelfApplicationsAppIdDeployments
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: action
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Deployment'
                type: array
          description: getApplicationDeployments
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
  /self/applications/{appId}/deployments/{deploymentId}:
    get:
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deploymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
  /self/applications/{appId}/deployments/{deploymentId}/instances:
    delete:
      operationId: deleteSelfApplicationsAppIdDeploymentsDeploymentIdInstances
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deploymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: cancelDeploy
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
  /self/applications/{appId}/env:
    get:
      operationId: getSelfApplicationsAppIdEnv
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ListEnv'
                type: array
          description: editApplicationEnv
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
    put:
      operationId: putSelfApplicationsAppIdEnv
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeEnv'
      responses:
        "200":
          description: editApplicationEnvironment
      tags:
      - all
      - applications
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/applications/{appId}/env/{envName}:
    delete:
      operationId: deleteSelfApplicationsAppIdEnvEnvName
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: envName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: removeApplicationEnv
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
    put:
      operationId: putSelfApplicationsAppIdEnvEnvName
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: envName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeEnv'
      responses:
        "200":
          description: editApplicationEnv
      tags:
      - all
      - applications
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/applications/{appId}/exposed_env:
    get:
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
    put:
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
  /self/applications/{appId}/instances:
    delete:
      operationId: deleteSelfApplicationsAppIdInstances
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: undeployApplication
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
    get:
      operationId: getSelfApplicationsAppIdInstances
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Instance'
                type: array
          description: getApplicationInstances
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
    post:
      operationId: postSelfApplicationsAppIdInstances
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: commit
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: redeployApplication
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
  /self/applications/{appId}/instances/{instanceId}:
    get:
      parameters:
      - explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
  /self/applications/{appId}/tags:
    get:
      operationId: getSelfApplicationsAppIdTags
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: getApplicationTags
      tags:
      - all
      - applications
      - self
      x-accepts:
      - '*/*'
  /self/applications/{appId}/tags/{tag}:
    delete:
      operationId: deleteSelfApplicationsAppIdTagsTag
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteApplicationTag
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
    put:
      operationId: putSelfApplicationsAppIdTagsTag
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Body'
      responses:
        "200":
          description: addApplicationTag
      tags:
      - all
      - applications
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/applications/{appId}/vhosts:
    get:
      operationId: getSelfApplicationsAppIdVhosts
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Vhost'
                type: array
          description: getVhosts
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
  /self/applications/{appId}/vhosts/favourite:
    delete:
      operationId: deleteSelfApplicationsAppIdVhostsFavourite
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: unmarkFavouriteVhost
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
    get:
      operationId: getSelfApplicationsAppIdVhostsFavourite
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vhost'
          description: getFavouriteVhost
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
    put:
      operationId: putSelfApplicationsAppIdVhostsFavourite
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Vhost'
      responses:
        "200":
          description: markFavouriteVhost
      tags:
      - all
      - applications
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/applications/{appId}/vhosts/{domain}:
    delete:
      operationId: deleteSelfApplicationsAppIdVhostsDomain
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: removeVhost
      tags:
      - all
      - applications
      - self
      x-accepts:
      - application/json
    put:
      operationId: putSelfApplicationsAppIdVhostsDomain
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Vhost'
      responses:
        "200":
          description: addVhost
      tags:
      - all
      - applications
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/avatar:
    put:
      operationId: putSelfAvatar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Avatar'
        required: true
      responses:
        "200":
          description: |-
            setUserAvatar
            setUserAvatarFromSource
      tags:
      - all
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/change_password:
    put:
      operationId: putSelfChangePassword
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Change_Password'
          description: changeUserPassword
      tags:
      - all
      - self
      x-accepts:
      - application/json
  /self/cli_tokens:
    get:
      parameters:
      - explode: true
        in: query
        name: cli_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - self
      x-accepts:
      - application/json
  /self/confirmation_email:
    get:
      operationId: getSelfConfirmationEmail
      responses:
        "200":
          description: getConfirmationEmail
      tags:
      - all
      - self
      x-accepts:
      - application/json
  /self/consumers:
    get:
      operationId: getSelfConsumers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Consumer'
                type: array
          description: getConsumers
      tags:
      - all
      - self
      x-accepts:
      - application/json
    post:
      operationId: postSelfConsumers
      requestBody:
        $ref: '#/components/requestBodies/WannabeConsumer'
      responses:
        "200":
          description: createConsumer
      tags:
      - all
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/consumers/{key}:
    delete:
      operationId: deleteSelfConsumersKey
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteConsumer
      tags:
      - all
      - self
      x-accepts:
      - application/json
    get:
      operationId: getSelfConsumersKey
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consumer'
          description: getConsumer
      tags:
      - all
      - self
      x-accepts:
      - application/json
    put:
      operationId: putSelfConsumersKey
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/WannabeConsumer'
      responses:
        "200":
          description: PUT same consumer data as in POST.
      tags:
      - all
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/consumers/{key}/secret:
    get:
      operationId: getSelfConsumersKeySecret
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: getConsumerSecret
      tags:
      - all
      - self
      x-accepts:
      - application/json
  /self/consumptions:
    get:
      operationId: getSelfConsumptions
      parameters:
      - explode: true
        in: query
        name: appId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conso'
          description: getConsumptions
      tags:
      - all
      - self
      x-accepts:
      - application/json
  /self/credits:
    get:
      operationId: getSelfCredits
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credits'
          description: getAmount
      tags:
      - all
      - self
      x-accepts:
      - application/json
  /self/emails:
    get:
      operationId: getSelfEmails
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: getEmailAddresses
      tags:
      - all
      - self
      x-accepts:
      - '*/*'
  /self/emails/{email}:
    delete:
      operationId: deleteSelfEmailsEmail
      parameters:
      - explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: removeEmailAddress
      tags:
      - all
      - self
      x-accepts:
      - application/json
    put:
      operationId: putSelfEmailsEmail
      parameters:
      - explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Body'
      responses:
        "200":
          description: addEmailAddress
      tags:
      - all
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/id:
    get:
      operationId: getSelfId
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: getId
      tags:
      - all
      - self
      x-accepts:
      - '*/*'
  /self/instances:
    get:
      operationId: getSelfInstances
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Instance'
                type: array
          description: getInstancesForAllApps
      tags:
      - all
      - self
      x-accepts:
      - application/json
  /self/keys:
    get:
      operationId: getSelfKeys
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Key'
                type: array
          description: getSshKeys
      tags:
      - all
      - self
      x-accepts:
      - application/json
  /self/keys/{key}:
    delete:
      operationId: deleteSelfKeysKey
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: removeSshKey
      tags:
      - all
      - self
      x-accepts:
      - application/json
    put:
      operationId: putSelfKeysKey
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Body'
      responses:
        "200":
          description: addSshKey
      tags:
      - all
      - self
      x-content-type: application/json
      x-accepts:
      - application/json
  /self/mfa/{kind}:
    delete:
      parameters:
      - explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - self
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - self
      x-accepts:
      - application/json
    put:
      parameters:
      - explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - self
      x-accepts:
      - application/json
  /self/mfa/{kind}/backupcodes:
    get:
      parameters:
      - explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - self
      x-accepts:
      - application/json
  /self/mfa/{kind}/confirmation:
    post:
      parameters:
      - explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - self
      x-accepts:
      - application/json
  /self/payment-info:
    get:
      operationId: getSelfPaymentInfo
      responses:
        "200":
          description: getPaymentInfo
      tags:
      - all
      - self
      x-accepts:
      - application/json
  /self/payments/billings:
    get:
      operationId: getSelfPaymentsBillings
      responses:
        "200":
          description: getInvoices
      tags:
      - all
      - payments
      - self
      x-accepts:
      - application/json
    post:
      operationId: postSelfPaymentsBillings
      responses:
        "200":
          description: buyDrops
      tags:
      - all
      - payments
      - self
      x-accepts:
      - application/json
  /self/payments/billings/{bid}:
    delete:
      operationId: deleteSelfPaymentsBillingsBid
      parameters:
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deletePurchaseOrder
      tags:
      - all
      - payments
      - self
      x-accepts:
      - application/json
    get:
      operationId: getSelfPaymentsBillingsBid
      parameters:
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: getInvoice
      tags:
      - all
      - payments
      - self
      x-accepts:
      - application/json
    put:
      operationId: putSelfPaymentsBillingsBid
      parameters:
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: choosePaymentProvider
      tags:
      - all
      - payments
      - self
      x-accepts:
      - application/json
  /self/payments/billings/{bid}.pdf:
    get:
      operationId: getSelfPaymentsBillingsBidPdf
      parameters:
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: getPdfInvoice
      tags:
      - all
      - payments
      - self
      x-accepts:
      - application/json
  /self/payments/fullprice/{price}:
    get:
      operationId: getSelfPaymentsFullpricePrice
      parameters:
      - explode: false
        in: path
        name: price
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: priceWithTax
      tags:
      - all
      - payments
      - self
      x-accepts:
      - application/json
  /self/payments/methods:
    get:
      operationId: getSelfPaymentsMethods
      responses:
        "200":
          description: getUserPaymentMethods
      tags:
      - all
      - payments
      - self
      x-accepts:
      - application/json
    post:
      operationId: postSelfPaymentsMethods
      responses:
        "200":
          description: addUserMethod
      tags:
      - all
      - payments
      - self
      x-accepts:
      - application/json
  /self/payments/methods/default:
    get:
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - payments
      - self
      x-accepts:
      - application/json
    put:
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - payments
      - self
      x-accepts:
      - application/json
  /self/payments/methods/{mId}:
    delete:
      operationId: deleteSelfPaymentsMethodsMId
      parameters:
      - explode: false
        in: path
        name: mId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteUserCard
      tags:
      - all
      - payments
      - self
      x-accepts:
      - application/json
  /self/payments/monthlyinvoice:
    get:
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - payments
      - self
      x-accepts:
      - application/json
  /self/payments/monthlyinvoice/maxcredit:
    put:
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - payments
      - self
      x-accepts:
      - application/json
  /self/payments/recurring:
    delete:
      operationId: deleteSelfPaymentsRecurring
      responses:
        "200":
          description: deleteRecurrentPayment
      tags:
      - all
      - payments
      - self
      x-accepts:
      - application/json
    get:
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - payments
      - self
      x-accepts:
      - application/json
  /self/payments/tokens/stripe:
    get:
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - payments
      - self
      x-accepts:
      - application/json
  /self/tokens:
    delete:
      operationId: deleteSelfTokens
      responses:
        "200":
          description: revokeAllTokens
      tags:
      - all
      - self
      x-accepts:
      - application/json
    get:
      operationId: getSelfTokens
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Token'
                type: array
          description: getSelfTokens
      tags:
      - all
      - self
      x-accepts:
      - application/json
  /self/tokens/{token}:
    delete:
      operationId: deleteSelfTokensToken
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: revokeToken
      tags:
      - all
      - self
      x-accepts:
      - application/json
  /self/validate_email:
    get:
      operationId: getSelfValidateEmail
      parameters:
      - explode: true
        in: query
        name: validationKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: validateEmail
      tags:
      - all
      - self
      x-accepts:
      - application/json
  /summary:
    get:
      operationId: getSummary
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Summary'
          description: getSummary
      tags:
      - all
      x-accepts:
      - application/json
  /users:
    post:
      operationId: postUsers
      parameters:
      - explode: true
        in: query
        name: invitationKey
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: addonBetaInvitationKey
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pass
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: url_next
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: terms
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/WannabeUser'
      responses:
        "200":
          description: |-
            createUser
            createUserFromForm
      tags:
      - all
      - users
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}:
    get:
      operationId: getUsersId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: getUser
      tags:
      - all
      - users
      x-accepts:
      - application/json
  /users/{id}/applications:
    get:
      operationId: getUsersIdApplications
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          description: getApplications
      tags:
      - all
      - applications
      - users
      x-accepts:
      - application/json
  /users/{userId}/git-info:
    get:
      operationId: getUsersUserIdGitInfo
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: getGitInfo
      tags:
      - all
      - users
      x-accepts:
      - application/json
  /v2/providers/addon-matomo/resources:
    post:
      operationId: createMatomo
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ProvisionRequest'
      responses:
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Function1RequestContextFutureRouteResult'
          description: default response
      summary: Create Matomo addon
      tags:
      - all
      x-function: createMatomo
      x-service: addon
      x-content-type: '*/*'
      x-accepts:
      - '*/*'
  /v2/providers/addon-matomo/resources/{matomoId}:
    delete:
      operationId: deleteMatomo
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: matomoId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/deleteMatomo'
      responses:
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Function1RequestContextFutureRouteResult'
          description: default response
      summary: Delete Matomo addon
      tags:
      - all
      x-function: deleteMatomo
      x-service: addon
      x-content-type: '*/*'
      x-accepts:
      - '*/*'
  /v3/logs/{appId}:
    get:
      description: Fetch the logs for a given application
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      - logs
      x-accepts:
      - application/json
  /v3/logs/{appId}/drains:
    get:
      description: Fetch the logs drains for a given application
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      - logs
      x-accepts:
      - application/json
    post:
      description: Add a log drain for a given application
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      - logs
      x-accepts:
      - application/json
  /v3/logs/{appId}/drains/:idOrUrl:
    delete:
      description: Delete the logs drain by id or url for a given application
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      - logs
      x-accepts:
      - application/json
    get:
      description: Fetch the logs drain by id or url for a given application
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      - logs
      x-accepts:
      - application/json
  /v3/logs/{appId}/logs-chunked:
    get:
      description: "Retrieve logs as they come through a chunked, never-ending response"
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      - logs
      x-accepts:
      - application/json
  /v3/logs/{appId}/logs-socket:
    get:
      description: "Retrieve logs as they come through a websocket connection. To\
        \ have authorization, you have to send a `{ \"message_type\": \"oauth\", \"\
        authorization\": \"oauth authorization string\" }` message"
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: <No description>
      tags:
      - all
      - logs
      x-accepts:
      - application/json
  /v4/addon-providers/addon-matomo/addons/{matomoId}:
    get:
      operationId: getMatomo
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: matomoId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/deleteMatomo'
      responses:
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Function1RequestContextFutureRouteResult'
          description: default response
      summary: Get Matomo addon
      tags:
      - all
      - addons
      x-function: getMatomo
      x-service: addon
      x-content-type: '*/*'
      x-accepts:
      - '*/*'
  /v4/addon-providers/addon-matomo/token/validate:
    get:
      operationId: getMatomoKTokenValidation
      parameters:
      - description: Environment variable injected on the app with 'KEYCLOAK_TOKEN'
          name
        explode: true
        in: query
        name: keycloakToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/deleteMatomo'
      responses:
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Function1RequestContextFutureRouteResult'
          description: default response
      summary: Validate a keycloak token
      tags:
      - all
      x-function: getMatomoVHosts
      x-service: addon
      x-content-type: '*/*'
      x-accepts:
      - '*/*'
  /v4/addon-providers/config-provider/addons/{configurationProviderId}:
    get:
      operationId: getConfigProvider
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: configurationProviderId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/deleteMatomo'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonConfigProviderView'
          description: requested config provider object
        "401":
          description: ""
      security:
      - {}
      summary: Get Addon provider configuration
      tags:
      - all
      - addons
      x-function: getConfigProvider
      x-service: addon
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /v4/addon-providers/config-provider/addons/{configurationProviderId}/env:
    get:
      operationId: getConfigProviderEnv
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: configurationProviderId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/deleteMatomo'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnvVar'
                type: array
          description: config provider environment variables
        "401":
          description: ""
      security:
      - {}
      summary: Get provider's addon environment
      tags:
      - all
      - addons
      x-function: getConfigProviderEnv
      x-service: addon
      x-content-type: '*/*'
      x-accepts:
      - application/json
    put:
      operationId: updateConfigProviderEnv
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: configurationProviderId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/WannabeEnvVar'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnvVar'
                type: array
          description: updated config providers environment variables
        "401":
          description: ""
      security:
      - {}
      summary: Update provider's addon environment
      tags:
      - all
      - addons
      x-function: updateConfigProviderEnv
      x-service: addon
      x-content-type: application/json
      x-accepts:
      - application/json
  /v4/networkgroups/organisations/{ownerId}/networkgroups:
    get:
      description: Lists Network Groups from an owner.
      operationId: listNetworkGroups
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/listNetworkGroups'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NetworkGroup'
                type: array
          description: Success
        "401":
          description: ""
      security:
      - {}
      summary: List Network Groups
      tags:
      - all
      - organisations
      - networkgroups
      x-function: listNetworkGroups
      x-service: networkGroup
      x-content-type: '*/*'
      x-accepts:
      - application/json
    post:
      description: Creates a Network Group.
      operationId: createNetworkGroup
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeNetworkGroup'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkGroup'
          description: Success
        "400":
          description: ""
        "401":
          description: ""
        "409":
          content:
            text/plain; charset=UTF-8:
              examples:
                NetworkGroupLabelAlreadyTaken:
                  $ref: '#/components/examples/NetworkGroupLabelAlreadyTaken'
              schema:
                type: string
          description: Conflict
      security:
      - {}
      summary: Create Network Group
      tags:
      - all
      - organisations
      - networkgroups
      x-function: createNetworkGroup
      x-service: networkGroup
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/plain; charset=UTF-8
  /v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}:
    delete:
      description: Deletes a Network Group.
      operationId: deleteNetworkGroup
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: networkGroupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/listNetworkGroups'
      responses:
        "204":
          description: Success
        "401":
          description: ""
        "404":
          description: ""
      security:
      - {}
      summary: Delete Network Group
      tags:
      - all
      - organisations
      - networkgroups
      x-function: deleteNetworkGroup
      x-service: networkGroup
      x-content-type: '*/*'
      x-accepts:
      - application/json
    get:
      description: Gets details of a Network Group.
      operationId: getNetworkGroup
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: networkGroupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/listNetworkGroups'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkGroup'
          description: Success
        "401":
          description: ""
        "404":
          description: ""
      security:
      - {}
      summary: Get Network Group
      tags:
      - all
      - organisations
      - networkgroups
      x-function: getNetworkGroup
      x-service: networkGroup
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/external-peers:
    post:
      description: Adds an external peer to a Network Group.
      operationId: createNetworkGroupExternalPeer
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: networkGroupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeExternalPeer'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Peer'
          description: Success
        "400":
          content:
            text/plain; charset=UTF-8:
              schema:
                type: string
          description: Bad Request
        "401":
          description: ""
        "404":
          description: ""
      security:
      - {}
      summary: Add external peer
      tags:
      - all
      - organisations
      - networkgroups
      x-function: createNetworkGroupExternalPeer
      x-service: networkGroup
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/plain; charset=UTF-8
  /v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/external-peers/{peerId}:
    delete:
      description: Removes an external peer from a Network Group.
      operationId: deleteNetworkGroupExternalPeer
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: networkGroupId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: peerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/listNetworkGroups'
      responses:
        "204":
          description: Success
        "401":
          description: ""
      security:
      - {}
      summary: Remove external peer
      tags:
      - all
      - organisations
      - networkgroups
      x-function: deleteNetworkGroupExternalPeer
      x-service: networkGroup
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/members:
    get:
      description: Lists members in a Network Group.
      operationId: listNetworkGroupMembers
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: networkGroupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/listNetworkGroups'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/schema1'
                type: array
          description: Success
        "401":
          description: ""
        "404":
          description: ""
      security:
      - {}
      summary: List members
      tags:
      - all
      - organisations
      - networkgroups
      x-function: listNetworkGroupMembers
      x-service: networkGroup
      x-content-type: '*/*'
      x-accepts:
      - application/json
    post:
      description: Adds a member to a Network Group.
      operationId: createNetworkGroupMember
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: networkGroupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schema2'
      responses:
        "202":
          description: ""
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
      security:
      - {}
      summary: Add member
      tags:
      - all
      - organisations
      - networkgroups
      x-function: createNetworkGroupMember
      x-service: networkGroup
      x-content-type: application/json
      x-accepts:
      - application/json
  /v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/members/{memberId}:
    delete:
      description: Removes a member from a Network Group.
      operationId: deleteNetworkGroupMember
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: networkGroupId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: memberId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/listNetworkGroups'
      responses:
        "204":
          description: Success
        "401":
          description: ""
      security:
      - {}
      summary: Remove member
      tags:
      - all
      - organisations
      - networkgroups
      x-function: deleteNetworkGroupMember
      x-service: networkGroup
      x-content-type: '*/*'
      x-accepts:
      - application/json
    get:
      description: Gets details of a Network Group member.
      operationId: getNetworkGroupMember
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: networkGroupId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: memberId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/listNetworkGroups'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schema1'
          description: Success
        "401":
          description: ""
        "404":
          description: ""
      security:
      - {}
      summary: Get member
      tags:
      - all
      - organisations
      - networkgroups
      x-function: getNetworkGroupMember
      x-service: networkGroup
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/peers:
    get:
      description: Lists peers in a Network Group.
      operationId: listNetworkGroupPeers
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: networkGroupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/listNetworkGroups'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Peer'
                type: array
          description: Success
        "401":
          description: ""
        "404":
          description: ""
      security:
      - {}
      summary: List peers
      tags:
      - all
      - organisations
      - networkgroups
      x-function: listNetworkGroupPeers
      x-service: networkGroup
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/peers/{peerId}:
    delete:
      description: Removes a peer from a Network Group.
      operationId: deleteNetworkGroupPeer
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: networkGroupId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: peerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/listNetworkGroups'
      responses:
        "204":
          description: Success
        "401":
          description: ""
      security:
      - {}
      summary: Remove peer
      tags:
      - all
      - organisations
      - networkgroups
      x-function: deleteNetworkGroupPeer
      x-service: networkGroup
      x-content-type: '*/*'
      x-accepts:
      - application/json
    get:
      description: Gets details of a Network Group peer.
      operationId: getNetworkGroupPeer
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: networkGroupId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: peerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/listNetworkGroups'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Peer'
          description: Success
        "401":
          description: ""
        "404":
          description: ""
      security:
      - {}
      summary: Get peer
      tags:
      - all
      - organisations
      - networkgroups
      x-function: getNetworkGroupPeer
      x-service: networkGroup
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/peers/{peerId}/wireguard/configuration:
    get:
      description: Gets the current WireGuard® tunnel configuration file for a Network
        Group peer.
      operationId: getNetworkGroupWireGuardConfiguration
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: networkGroupId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: peerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/listNetworkGroups'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WireGuardConfiguration'
          description: Success
        "401":
          description: ""
        "404":
          description: ""
      security:
      - {}
      summary: Get WireGuard® configuration
      tags:
      - all
      - organisations
      - networkgroups
      x-function: getNetworkGroupWireGuardConfiguration
      x-service: networkGroup
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/peers/{peerId}/wireguard/configuration/stream:
    get:
      description: Gets the current WireGuard® tunnel configuration file for a Network
        Group peer as a Server Sent Event.
      operationId: getNetworkGroupWireGuardConfigurationStream
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: networkGroupId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: peerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/listNetworkGroups'
      responses:
        "200":
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/WireGuardConfiguration'
          description: Success
        "401":
          description: ""
        "404":
          description: ""
      security:
      - {}
      summary: Get WireGuard® configuration
      tags:
      - all
      - organisations
      - networkgroups
      x-function: getNetworkGroupWireGuardConfigurationStream
      x-service: networkGroup
      x-content-type: '*/*'
      x-accepts:
      - text/event-stream
  /v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/stream:
    get:
      description: Retrieves the current Network Group details as a Server Sent Event.
      operationId: getNetworkGroupStream
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: networkGroupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/listNetworkGroups'
      responses:
        "200":
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/NetworkGroup'
          description: Success
        "401":
          description: ""
        "404":
          description: ""
      security:
      - {}
      summary: Network Group SSE
      tags:
      - all
      - organisations
      - networkgroups
      x-function: getNetworkGroupStream
      x-service: networkGroup
      x-content-type: '*/*'
      x-accepts:
      - text/event-stream
  /vendor//addons:
    post:
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - addons
      - vendor
      x-accepts:
      - application/json
  /vendor//apps/{addonId}/logscollector:
    get:
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - vendor
      x-accepts:
      - application/json
  /vendor/apps:
    get:
      operationId: getVendorApps
      parameters:
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          description: listApps
      tags:
      - all
      - vendor
      x-accepts:
      - application/json
  /vendor/apps/{addonId}:
    get:
      operationId: getVendorAppsAddonId
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: getApplicationInfo
      tags:
      - all
      - vendor
      x-accepts:
      - application/json
    put:
      operationId: putVendorAppsAddonId
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: editApplicationConfiguration
      tags:
      - all
      - vendor
      x-accepts:
      - application/json
  /vendor/apps/{addonId}/consumptions:
    post:
      operationId: postVendorBillingOwnerId
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeAddonBilling'
        required: true
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - vendor
      x-content-type: application/json
      x-accepts:
      - application/json
  /vendor/apps/{addonId}/migration_callback:
    put:
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: plan_id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: region
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Status 200
      tags:
      - all
      - vendor
      x-accepts:
      - application/json
components:
  examples:
    NetworkGroupLabelAlreadyTaken: {}
  requestBodies:
    Body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Body'
      required: true
    Vhost:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Vhost'
      required: true
    WannabeAddon:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WannabeAddon'
      required: true
    WannabeAddonProvider:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WannabeAddonProvider'
      required: true
    WannabeApplication:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WannabeApplication'
      required: true
    WannabeConsumer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WannabeConsumer'
      required: true
    WannabeEnv:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WannabeEnv'
      required: true
    WannabeMember:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WannabeMember'
      required: true
    WannabeOrganisation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WannabeOrganisation'
      required: true
    WannabePlan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WannabePlan'
      required: true
    WannabeUser:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WannabeUser'
      required: true
    deleteMatomo:
      content:
        '*/*':
          schema:
            type: string
    listNetworkGroups:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/OVDHttpRequestContext'
  responses:
    Accepted:
      description: ""
    BadRequest:
      description: ""
    MemberNotFound:
      description: ""
    NetworkGroupNotFound:
      description: ""
    PeerNotFound:
      description: ""
    Unauthorized:
      description: ""
  schemas:
    Addon:
      description: An addon
      example:
        provider:
          website: website
          regions:
          - regions
          - regions
          twitterName: twitterName
          canUpgrade: false
          logoUrl: logoUrl
          googlePlusName: googlePlusName
          features:
          - name: name
            type: type
            value: value
          - name: name
            type: type
            value: value
          supportEmail: supportEmail
          plans:
          - features:
            - name: name
              type: type
              value: value
            - name: name
              type: type
              value: value
            price: 0
            name: name
            id: id
            slug: slug
          - features:
            - name: name
              type: type
              value: value
            - name: name
              type: type
              value: value
            price: 0
            name: name
            id: id
            slug: slug
          name: name
          shortDesc: shortDesc
          id: id
          analyticsId: analyticsId
          longDesc: longDesc
          openInNewTab: false
          status: status
        name: name
        id: id
        creationDate: 2000-01-23
        realId: realId
        region: region
        configKeys:
        - configKeys
        - configKeys
        plan:
          features:
          - name: name
            type: type
            value: value
          - name: name
            type: type
            value: value
          price: 0
          name: name
          id: id
          slug: slug
      properties:
        configKeys:
          description: Environments variables link to the addon.
          items:
            type: string
          type: array
        creationDate:
          description: The creation timestamp of the addon
          format: date
          type: string
        id:
          description: "`addon_${uuid}`"
          type: string
        name:
          type: string
        plan:
          $ref: '#/components/schemas/Plan'
        provider:
          $ref: '#/components/schemas/Provider'
        realId:
          description: "`${provider}_${uuid2}`"
          type: string
        region:
          type: string
      required:
      - configKeys
      - creationDate
      - id
      - name
      - plan
      - provider
      - realId
      - region
      type: object
    AddonConfigProviderView: {}
    AddonMigration:
      example: "{\n   \"id\": \"<UUID>\",\n   \"addon_id\": \"addon_<uuid>\",\n  \
        \ \"kind\": \"SHARED_TO_SHARED|SHARED_TO_DEDICATED|DEDICATED_TO_DEDICATED|DEDICATED_TO_SHARED\"\
        ,\n   \"state\": \"RUNNING|FAILED|RECOVERING|RECOVERED|OK\",\n   \"hostname\"\
        : \"db.hostname\",\n   \"database\": \"dbname\",\n   \"port\": 5432,\n   \"\
        database_user\": \"username\",\n   \"callback_url\": \"https://api.clever-cloud.com/v2/…\
        \",\n   \"old_cluster_id\": \"acddc485-79c2-4c6b-a617-c92a06c0cb0b\",\n  \
        \ \"old_cluster_label\": \"par2-01\",\n   \"old_instance_id\": \"acddc485-79c2-4c6b-a617-c92a06c0cb0b\"\
        ,\n   \"old_plan\": \"s\",\n   \"old_zone\": \"par2\",\n   \"old_recipient_hostname\"\
        : \"postgresql-sdc-par2-clevercloud.services.clever-cloud.com\", \n   \"new_cluster_id\"\
        : \"acddc485-79c2-4c6b-a617-c92a06c0cb0b\",\n   \"new_cluster_label\": \"\
        par2-02\",\n   \"new_instance_id\": \"acddc485-79c2-4c6b-a617-c92a06c0cb0b\"\
        ,\n   \"new_plan\": \"m\",\n   \"new_zone\": \"par3\",\n   \"new_recipient_hostname\"\
        : \"postgresql-sdc-par3-clevercloud.services.clever-cloud.com\", \n   \"request_date\"\
        : \"2018-10-31T10:00:23Z\",\n   \"last_state_update_date\":  \"2018-10-31T10:00:23Z\"\
        ,\n   \"dump_restore_start_date\":  \"2018-10-31T10:00:23Z\",\n   \"dump_restore_finished_date\"\
        :  \"2018-10-31T10:00:23Z\",\n   \"end_date\":  \"2018-10-31T10:00:23Z\",\n\
        \   \"exit_message\": \"Success\" \n}"
      properties:
        addon_id:
          type: string
        callback_url:
          type: string
        database:
          type: string
        database_user:
          type: string
        dump_restore_finished_date:
          type: string
        dump_restore_start_date:
          type: string
        end_date:
          type: string
        exit_message:
          type: string
        hostname:
          type: string
        id:
          type: string
        kind:
          type: string
        last_state_update_date:
          type: string
        new_cluster_id:
          type: string
        new_cluster_label:
          type: string
        new_instance_id:
          type: string
        new_plan:
          type: string
        new_recipient_hostname:
          type: string
        new_zone:
          type: string
        old_cluster_id:
          type: string
        old_cluster_label:
          type: string
        old_instance_id:
          type: string
        old_plan:
          type: string
        old_recipient_hostname:
          type: string
        old_zone:
          type: string
        port:
          type: number
        request_date:
          type: string
        state:
          type: string
      type: object
    AddonProviderSso:
      example:
        macaroon: macaroon
        url: url
      properties:
        macaroon:
          type: string
        url:
          type: string
      required:
      - macaroon
      - url
      type: object
    AppInstance:
      example:
        flavor:
          disk: 6
          mem: 1
          cpus: 0
          microservice: false
          price: 5.637376656633329
          available: false
          name: name
          nice: 5.962133916683182
        deployNumber: 6
        appId: appId
        ip: ip
        commit: commit
        appPort: 0
        id: id
        state: state
      properties:
        appId:
          type: string
        appPort:
          format: int32
          type: integer
        commit:
          type: string
        deployNumber:
          format: int32
          type: integer
        flavor:
          $ref: '#/components/schemas/Flavor'
        id:
          type: string
        ip:
          type: string
        state:
          type: string
      type: object
    Application:
      example:
        buildFlavor:
          disk: 6
          mem: 1
          cpus: 0
          microservice: false
          price: 5.637376656633329
          available: false
          name: name
          nice: 5.962133916683182
        deployUrl: deployUrl
        instance:
          flavors:
          - disk: 6
            mem: 1
            cpus: 0
            microservice: false
            price: 5.637376656633329
            available: false
            name: name
            nice: 5.962133916683182
          - disk: 6
            mem: 1
            cpus: 0
            microservice: false
            price: 5.637376656633329
            available: false
            name: name
            nice: 5.962133916683182
          maxAllowedInstances: 2
          minInstances: 9
          buildFlavor:
            disk: 6
            mem: 1
            cpus: 0
            microservice: false
            price: 5.637376656633329
            available: false
            name: name
            nice: 5.962133916683182
          description: description
          instanceAndVersion: instanceAndVersion
          type: type
          version: version
          enabled: false
          minFlavor:
            disk: 6
            mem: 1
            cpus: 0
            microservice: false
            price: 5.637376656633329
            available: false
            name: name
            nice: 5.962133916683182
          tags:
          - tags
          - tags
          deployments:
          - deployments
          - deployments
          comingSoon: false
          maxFlavor:
            disk: 6
            mem: 1
            cpus: 0
            microservice: false
            price: 5.637376656633329
            available: false
            name: name
            nice: 5.962133916683182
          name: name
          variant:
            name: name
            logo: logo
            id: id
            deployType: deployType
            slug: slug
          defaultFlavor:
            disk: 6
            mem: 1
            cpus: 0
            microservice: false
            price: 5.637376656633329
            available: false
            name: name
            nice: 5.962133916683182
          maxInstances: 7
          defaultEnv: "{}"
        cancelOnPush: false
        description: description
        commitId: commitId
        creationDate: 2000-01-23
        favourite: false
        ownerId: ownerId
        branch: branch
        webhookSecret: webhookSecret
        webhookUrl: webhookUrl
        separateBuild: false
        homogeneous: false
        archived: false
        stickySessions: false
        zone: zone
        name: name
        id: id
        state: state
        vhosts:
        - fqdn: fqdn
        - fqdn: fqdn
        last_deploy: 3
        deployment:
          repoState: repoState
          httpUrl: httpUrl
          type: type
          shutdownable: false
          url: url
      properties:
        archived:
          default: false
          type: boolean
        branch:
          type: string
        buildFlavor:
          $ref: '#/components/schemas/Flavor'
        cancelOnPush:
          default: false
          type: boolean
        commitId:
          type: string
        creationDate:
          format: date
          type: string
        deployUrl:
          type: string
        deployment:
          $ref: '#/components/schemas/Deployment'
        description:
          type: string
        favourite:
          default: false
          type: boolean
        homogeneous:
          default: false
          type: boolean
        id:
          type: string
        instance:
          $ref: '#/components/schemas/Instance'
        last_deploy:
          format: int32
          type: integer
        name:
          type: string
        ownerId:
          type: string
        separateBuild:
          default: false
          type: boolean
        state:
          type: string
        stickySessions:
          default: false
          type: boolean
        vhosts:
          items:
            $ref: '#/components/schemas/Vhost'
          type: array
        webhookSecret:
          type: string
        webhookUrl:
          type: string
        zone:
          description: '`par` ou `mtl`'
          type: string
      required:
      - archived
      - branch
      - buildFlavor
      - cancelOnPush
      - commitId
      - creationDate
      - deployUrl
      - deployment
      - description
      - favourite
      - homogeneous
      - id
      - instance
      - last_deploy
      - name
      - ownerId
      - separateBuild
      - state
      - stickySessions
      - vhosts
      - webhookSecret
      - webhookUrl
      - zone
      type: object
    Avatar:
      description: "If you want to upload an image from your computer, send the image\
        \ in the body of the request without anything else."
      example:
        source:
          source: source
          value:
            url: url
      properties:
        source:
          $ref: '#/components/schemas/Avatar_source'
      required:
      - source
      type: object
    Body:
      example:
        body: body
      properties:
        body:
          type: string
      required:
      - body
      type: object
    Change_Password:
      example:
        oldPassword: oldPassword
        newPassword: newPassword
      properties:
        newPassword:
          type: string
        oldPassword:
          type: string
      required:
      - newPassword
      - oldPassword
      type: object
    Conso:
      example:
        appId: appId
        conso:
          date: date
          conso: conso
      properties:
        appId:
          type: string
        conso:
          $ref: '#/components/schemas/Conso_conso'
      required:
      - appId
      - conso
      type: object
    Consumer:
      example:
        baseUrl: baseUrl
        rights:
          manage_organisations: false
          access_organisations_credit_count: false
          manage_applications: false
          almighty: false
          manage_ssh_keys: false
          access_organisations: false
          access_organisations_consumption_statistics: false
          access_consumption_statistics: false
          manage_services: false
          manage_organisations_applications: false
          manage_personal_information: false
          manage_organisations_members: false
          access_personal_information: false
          manage_organisations_services: false
          access_bills: false
          access_organisations_bills: false
          access_credit_count: false
        name: name
        description: description
        key: key
        picture: picture
        url: url
      properties:
        baseUrl:
          type: string
        description:
          type: string
        key:
          type: string
        name:
          type: string
        picture:
          type: string
        rights:
          $ref: '#/components/schemas/ConsumerRights'
        url:
          type: string
      required:
      - baseUrl
      - description
      - name
      - rights
      - url
      type: object
    ConsumerRights:
      example:
        manage_organisations: false
        access_organisations_credit_count: false
        manage_applications: false
        almighty: false
        manage_ssh_keys: false
        access_organisations: false
        access_organisations_consumption_statistics: false
        access_consumption_statistics: false
        manage_services: false
        manage_organisations_applications: false
        manage_personal_information: false
        manage_organisations_members: false
        access_personal_information: false
        manage_organisations_services: false
        access_bills: false
        access_organisations_bills: false
        access_credit_count: false
      properties:
        access_bills:
          default: false
          type: boolean
        access_consumption_statistics:
          default: false
          type: boolean
        access_credit_count:
          default: false
          type: boolean
        access_organisations:
          default: false
          type: boolean
        access_organisations_bills:
          default: false
          type: boolean
        access_organisations_consumption_statistics:
          default: false
          type: boolean
        access_organisations_credit_count:
          default: false
          type: boolean
        access_personal_information:
          default: false
          type: boolean
        almighty:
          default: false
          type: boolean
        manage_applications:
          default: false
          type: boolean
        manage_organisations:
          default: false
          type: boolean
        manage_organisations_applications:
          default: false
          type: boolean
        manage_organisations_members:
          default: false
          type: boolean
        manage_organisations_services:
          default: false
          type: boolean
        manage_personal_information:
          default: false
          type: boolean
        manage_services:
          default: false
          type: boolean
        manage_ssh_keys:
          default: false
          type: boolean
      type: object
    Country:
      example:
        code: code
        name: name
      properties:
        code:
          description: Code ISO 3166
          type: string
        name:
          type: string
      required:
      - code
      - name
      type: object
    Credits:
      example:
        count: 0.8008282
        dropPrice:
          currency: currency
          value: 6.0274563
        ownerId: ownerId
      properties:
        count:
          format: float
          type: number
        dropPrice:
          $ref: '#/components/schemas/Credits_dropPrice'
        ownerId:
          type: string
      required:
      - count
      - dropPrice
      - ownerId
      type: object
    Deployment:
      example:
        repoState: repoState
        httpUrl: httpUrl
        type: type
        shutdownable: false
        url: url
      properties:
        httpUrl:
          type: string
        repoState:
          type: string
        shutdownable:
          default: false
          type: boolean
        type:
          type: string
        url:
          type: string
      required:
      - repoState
      - shutdownable
      - type
      - url
      type: object
    DeploymentSummary:
      example:
        '{app_id}':
        - date: 2000-01-23
          instances: 6
          author:
            name: name
            id: id
          commit: commit
          action: action
          cause: cause
          id: 0
          state: state
          uuid: uuid
        - date: 2000-01-23
          instances: 6
          author:
            name: name
            id: id
          commit: commit
          action: action
          cause: cause
          id: 0
          state: state
          uuid: uuid
      properties:
        '{app_id}':
          items:
            $ref: '#/components/schemas/DeploymentView'
          type: array
      type: object
    DeploymentView:
      example:
        date: 2000-01-23
        instances: 6
        author:
          name: name
          id: id
        commit: commit
        action: action
        cause: cause
        id: 0
        state: state
        uuid: uuid
      properties:
        action:
          type: string
        author:
          $ref: '#/components/schemas/DeploymentView_author'
        cause:
          type: string
        commit:
          type: string
        date:
          format: date
          type: string
        id:
          format: int64
          type: integer
        instances:
          format: int64
          type: integer
        state:
          type: string
        uuid:
          type: string
      required:
      - action
      - cause
      - commit
      - date
      - id
      - instances
      - state
      - uuid
      type: object
    Env:
      example:
        addon_name: addon_name
        provider_id: provider_id
        env:
        - name: name
          value: value
        - name: name
          value: value
        addon_id: addon_id
      properties:
        addon_id:
          type: string
        addon_name:
          type: string
        env:
          items:
            $ref: '#/components/schemas/WannabeEnv'
          type: array
        provider_id:
          type: string
      required:
      - addon_id
      - addon_name
      - env
      - provider_id
      type: object
    EnvVar: {}
    Error:
      example: "{\"id\":6200,\"type\":\"error\",\"message\":\"You do not belong to\
        \ this organisation so you cannot access it\"}"
      properties:
        id:
          description: Unique numeric id of this error type. Eg. id = 10 is "Serialization
            failed".
          type: number
        message:
          description: Description of the error.
          type: string
        type:
          description: Value should be "error"
          type: string
      type: object
    Feature:
      example:
        name: name
        type: type
        value: value
      properties:
        name:
          description: The name of the properties
          type: string
        type:
          description: The type of the feature
          type: string
        value:
          description: The value of the feature
          type: string
      required:
      - name
      - type
      - value
      type: object
    Flavor:
      example:
        disk: 6
        mem: 1
        cpus: 0
        microservice: false
        price: 5.637376656633329
        available: false
        name: name
        nice: 5.962133916683182
      properties:
        available:
          default: false
          type: boolean
        cpus:
          format: int32
          type: integer
        disk:
          format: int32
          type: integer
        mem:
          format: int32
          type: integer
        microservice:
          default: false
          type: boolean
        name:
          type: string
        nice:
          format: double
          type: number
        price:
          format: double
          type: number
      required:
      - cpus
      - mem
      - name
      - price
      type: object
    Function1RequestContextFutureRouteResult: {}
    Instance:
      example:
        flavors:
        - disk: 6
          mem: 1
          cpus: 0
          microservice: false
          price: 5.637376656633329
          available: false
          name: name
          nice: 5.962133916683182
        - disk: 6
          mem: 1
          cpus: 0
          microservice: false
          price: 5.637376656633329
          available: false
          name: name
          nice: 5.962133916683182
        maxAllowedInstances: 2
        minInstances: 9
        buildFlavor:
          disk: 6
          mem: 1
          cpus: 0
          microservice: false
          price: 5.637376656633329
          available: false
          name: name
          nice: 5.962133916683182
        description: description
        instanceAndVersion: instanceAndVersion
        type: type
        version: version
        enabled: false
        minFlavor:
          disk: 6
          mem: 1
          cpus: 0
          microservice: false
          price: 5.637376656633329
          available: false
          name: name
          nice: 5.962133916683182
        tags:
        - tags
        - tags
        deployments:
        - deployments
        - deployments
        comingSoon: false
        maxFlavor:
          disk: 6
          mem: 1
          cpus: 0
          microservice: false
          price: 5.637376656633329
          available: false
          name: name
          nice: 5.962133916683182
        name: name
        variant:
          name: name
          logo: logo
          id: id
          deployType: deployType
          slug: slug
        defaultFlavor:
          disk: 6
          mem: 1
          cpus: 0
          microservice: false
          price: 5.637376656633329
          available: false
          name: name
          nice: 5.962133916683182
        maxInstances: 7
        defaultEnv: "{}"
      properties:
        buildFlavor:
          $ref: '#/components/schemas/Flavor'
        comingSoon:
          default: false
          type: boolean
        defaultEnv:
          type: object
        defaultFlavor:
          $ref: '#/components/schemas/Flavor'
        deployments:
          items:
            type: string
          type: array
        description:
          type: string
        enabled:
          default: false
          type: boolean
        flavors:
          items:
            $ref: '#/components/schemas/Flavor'
          type: array
        instanceAndVersion:
          type: string
        maxAllowedInstances:
          format: int32
          type: integer
        maxFlavor:
          $ref: '#/components/schemas/Flavor'
        maxInstances:
          format: int32
          type: integer
        minFlavor:
          $ref: '#/components/schemas/Flavor'
        minInstances:
          format: int32
          type: integer
        name:
          type: string
        tags:
          items:
            type: string
          type: array
        type:
          type: string
        variant:
          $ref: '#/components/schemas/Variant'
        version:
          type: string
      required:
      - defaultEnv
      - flavors
      - instanceAndVersion
      - maxAllowedInstances
      - maxFlavor
      - maxInstances
      - minFlavor
      - minInstances
      - type
      - variant
      - version
      type: object
    Key:
      example:
        fingerprint: fingerprint
        name: name
        key: key
      properties:
        fingerprint:
          type: string
        key:
          type: string
        name:
          description: ""
          type: string
      required:
      - fingerprint
      - key
      - name
      type: object
    LinkedAppEnv:
      example:
        app_name: app_name
        env:
        - name: name
          value: value
        - name: name
          value: value
        app_id: app_id
      properties:
        app_id:
          type: string
        app_name:
          type: string
        env:
          items:
            $ref: '#/components/schemas/WannabeEnv'
          type: array
      required:
      - app_id
      - app_name
      - env
      type: object
    ListEnv:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    Map:
      type: object
    Member:
      $ref: '#/components/schemas/schema1'
    NetworkGroup: {}
    OVDHttpRequestContext: {}
    Organisation:
      example:
        zipcode: zipcode
        country: country
        address: address
        city: city
        VAT: VAT
        name: name
        description: description
        vatState: vatState
        company: company
        avatar: avatar
        id: id
      properties:
        VAT:
          type: string
        address:
          type: string
        avatar:
          type: string
        city:
          type: string
        company:
          type: string
        country:
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
        vatState:
          type: string
        zipcode:
          type: string
      required:
      - VAT
      - address
      - avatar
      - city
      - company
      - country
      - description
      - id
      - name
      - vatState
      - zipcode
      type: object
    PaymentData:
      example:
        deviceData: deviceData
        type: NEW_CARD
        token: token
      properties:
        deviceData:
          type: string
        token:
          type: string
        type:
          enum:
          - NEW_CARD
          - EXISTING_CARD
          type: string
      required:
      - token
      - type
      type: object
    Payment_Provider:
      example:
        imgUrl: imgUrl
        comingSoon: false
        name: name
        title: title
      properties:
        comingSoon:
          default: false
          type: boolean
        imgUrl:
          type: string
        name:
          type: string
        title:
          type: string
      required:
      - comingSoon
      - imgUrl
      - name
      - title
      type: object
    Peer: {}
    Plan:
      example:
        features:
        - name: name
          type: type
          value: value
        - name: name
          type: type
          value: value
        price: 0
        name: name
        id: id
        slug: slug
      properties:
        features:
          description: The list of the feature in the addon
          items:
            $ref: '#/components/schemas/Feature'
          type: array
        id:
          description: "`plan_${uuid}`"
          type: string
        name:
          description: Name of the pan
          type: string
        price:
          format: int32
          type: integer
        slug:
          type: string
      required:
      - features
      - id
      - name
      - price
      - slug
      type: object
    Provider:
      description: A provider
      example:
        website: website
        regions:
        - regions
        - regions
        twitterName: twitterName
        canUpgrade: false
        logoUrl: logoUrl
        googlePlusName: googlePlusName
        features:
        - name: name
          type: type
          value: value
        - name: name
          type: type
          value: value
        supportEmail: supportEmail
        plans:
        - features:
          - name: name
            type: type
            value: value
          - name: name
            type: type
            value: value
          price: 0
          name: name
          id: id
          slug: slug
        - features:
          - name: name
            type: type
            value: value
          - name: name
            type: type
            value: value
          price: 0
          name: name
          id: id
          slug: slug
        name: name
        shortDesc: shortDesc
        id: id
        analyticsId: analyticsId
        longDesc: longDesc
        openInNewTab: false
        status: status
      properties:
        analyticsId:
          description: The id of the analytics page link to this addon
          type: string
        canUpgrade:
          default: false
          description: Can the addon be upgraded
          type: boolean
        features:
          items:
            $ref: '#/components/schemas/Feature'
          type: array
        googlePlusName:
          description: The name of the google + page link to this addon (could be
            empty)
          type: string
        id:
          description: The id of the provider
          type: string
        logoUrl:
          description: The url of the addon's logo
          type: string
        longDesc:
          description: A less concise description of the addon
          type: string
        name:
          type: string
        openInNewTab:
          default: false
          description: Does the addon panel need to be open in a new tab
          type: boolean
        plans:
          items:
            $ref: '#/components/schemas/Plan'
          type: array
        regions:
          description: The differents regions where the addon is available
          items:
            type: string
          type: array
        shortDesc:
          description: A short description of the addon
          type: string
        status:
          description: "The status of this addon (RELEASE, BETA, ...)"
          type: string
        supportEmail:
          description: The mail to contact in case of issue with this addon
          type: string
        twitterName:
          description: The name of the user to contact on twitter for this addon (could
            be empty)
          type: string
        website:
          description: "The website of the provider. If the addon is developped by\
            \ clever-cloud, the site is \"http://www.clever-cloud.com/\""
          type: string
      required:
      - analyticsId
      - canUpgrade
      - googlePlusName
      - id
      - logoUrl
      - longDesc
      - name
      - openInNewTab
      - regions
      - shortDesc
      - status
      - supportEmail
      - twitterName
      - website
      type: object
    ProvisionRequest: {}
    Rights:
      example:
        name: name
        description: description
      properties:
        description:
          type: string
        name:
          type: string
      required:
      - description
      - name
      type: object
    Secret:
      example:
        secret: secret
        value: value
      properties:
        secret:
          type: string
        value:
          type: string
      required:
      - secret
      - value
      type: object
    Sso:
      example:
        nav-data: nav-data
        id: id
        email: email
        url: url
        timestamp: 2000-01-23
        token: token
      properties:
        email:
          type: string
        id:
          type: string
        nav-data:
          type: string
        timestamp:
          format: date
          type: string
        token:
          type: string
        url:
          type: string
      required:
      - email
      - id
      - nav-data
      - timestamp
      - token
      - url
      type: object
    Summary:
      example:
        organisations:
        - role: role
          addons:
          - providerId: providerId
            name: name
            id: id
            logoUrl: logoUrl
          - providerId: providerId
            name: name
            id: id
            logoUrl: logoUrl
          name: name
          consumers:
          - name: name
            key: key
            picture: picture
          - name: name
            key: key
            picture: picture
          avatar: avatar
          id: id
          providers:
          - providers
          - providers
          applications:
          - archived: false
            instanceType: instanceType
            commit: commit
            name: name
            id: id
            state: state
            variantSlug: variantSlug
            instanceVariant: instanceVariant
          - archived: false
            instanceType: instanceType
            commit: commit
            name: name
            id: id
            state: state
            variantSlug: variantSlug
            instanceVariant: instanceVariant
        - role: role
          addons:
          - providerId: providerId
            name: name
            id: id
            logoUrl: logoUrl
          - providerId: providerId
            name: name
            id: id
            logoUrl: logoUrl
          name: name
          consumers:
          - name: name
            key: key
            picture: picture
          - name: name
            key: key
            picture: picture
          avatar: avatar
          id: id
          providers:
          - providers
          - providers
          applications:
          - archived: false
            instanceType: instanceType
            commit: commit
            name: name
            id: id
            state: state
            variantSlug: variantSlug
            instanceVariant: instanceVariant
          - archived: false
            instanceType: instanceType
            commit: commit
            name: name
            id: id
            state: state
            variantSlug: variantSlug
            instanceVariant: instanceVariant
        user:
          addons:
          - providerId: providerId
            name: name
            id: id
            logoUrl: logoUrl
          - providerId: providerId
            name: name
            id: id
            logoUrl: logoUrl
          name: name
          admin: false
          consumers:
          - name: name
            key: key
            picture: picture
          - name: name
            key: key
            picture: picture
          avatar: avatar
          id: id
          lang: lang
          applications:
          - archived: false
            instanceType: instanceType
            commit: commit
            name: name
            id: id
            state: state
            variantSlug: variantSlug
            instanceVariant: instanceVariant
          - archived: false
            instanceType: instanceType
            commit: commit
            name: name
            id: id
            state: state
            variantSlug: variantSlug
            instanceVariant: instanceVariant
      properties:
        organisations:
          items:
            $ref: '#/components/schemas/Summary_organisations_inner'
          type: array
        user:
          $ref: '#/components/schemas/Summary_user'
      required:
      - organisations
      - user
      type: object
    SupernovaInstanceView:
      example: |-
        {
          "uuid": "19d21edb-a343-49e7-8aa6-9d87c7e272b8",
          "displayName": "Sizzling spewpa",
          "appId": "app_2b5ad0bb-4bd7-4180-80b9-0459e98364f3",
          "ownerId": "orga_0d221ceb-1b50-4994-a8d9-babb3cceef02",
          "flavor": {
            "name": "nano",
            "mem": 512,
            "cpus": 1,
            "price": 0.1431844215
          },
          "ip": "65.10.142.94",
          "appPort": 18605,
          "zabbixPort": 28605,
          "sshPort": 48605,
          "hv": "hv-par2-049",
          "image": "java-20181029",
          "state": "UP",
          "commitId": "43a4ba1726e26f039654dcd3916f61c612802947",
          "deployNumber": 107,
          "deployId": "deployment_cad0cf75-38e2-4dc8-b1be-ea869862bb69",
          "source": "apps",
          "zone": "par",
          "internalIP": "10.6.123.92",
          "createdAt": 1540921810532,
          "instanceNumber": 0
        }
      properties:
        appId:
          description: Identifier of running app/add-on
          type: string
        appPort:
          description: Port of the HV that's redirected to 8080 on VM
          type: number
        commitId:
          type: string
        createdAt:
          description: Integer unix timestamp
          type: number
        deployId:
          type: string
        deployNumber:
          type: number
        displayName:
          description: Generated PokéName. This name is generated from the uuid.
          type: string
        flavor:
          $ref: '#/components/schemas/SupernovaInstanceView_flavor'
        hv:
          description: String name of hv.
          type: string
        image:
          description: "Base system image. E.g. java-20181030, node-20180912…"
          type: string
        instanceNumber:
          type: number
        internalIP:
          type: string
        ip:
          description: Public IP of the HV
          type: string
        ownerId:
          description: Identifier of the owner of the app/add-on running
          type: string
        source:
          description: "Who/what started this instance? E.g. \"app\", \"cli\""
          type: string
        sshPort:
          description: Port of the HV that's redirected to 22 on VM
          type: number
        state:
          type: string
        uuid:
          type: string
        zabbixPort:
          description: Port of the HV that's redirected to 10050 on VM
          type: number
        zone:
          type: string
      required:
      - appPort
      - flavor
      - hv
      - image
      - ip
      - source
      - uuid
      - zabbixPort
      type: object
    Token:
      example:
        lastUtilisation: lastUtilisation
        rights:
          name: name
          description: description
        creationDate: 0
        consumer:
          baseUrl: baseUrl
          rights:
            manage_organisations: false
            access_organisations_credit_count: false
            manage_applications: false
            almighty: false
            manage_ssh_keys: false
            access_organisations: false
            access_organisations_consumption_statistics: false
            access_consumption_statistics: false
            manage_services: false
            manage_organisations_applications: false
            manage_personal_information: false
            manage_organisations_members: false
            access_personal_information: false
            manage_organisations_services: false
            access_bills: false
            access_organisations_bills: false
            access_credit_count: false
          name: name
          description: description
          key: key
          picture: picture
          url: url
        token: token
      properties:
        consumer:
          $ref: '#/components/schemas/Consumer'
        creationDate:
          format: int32
          type: integer
        lastUtilisation:
          type: string
        rights:
          $ref: '#/components/schemas/Rights'
        token:
          type: string
      required:
      - consumer
      - creationDate
      - lastUtilisation
      - rights
      - token
      type: object
    Transaction_Id:
      description: A simple transaction id
      example:
        transactionId: transactionId
      properties:
        transactionId:
          description: The transaction Id
          type: string
      required:
      - transactionId
      type: object
    URL:
      description: Must be a valid HTTP URL
      example:
        url: url
      properties:
        url:
          type: string
      required:
      - url
      type: object
    User:
      description: A user representation
      example:
        canPay: false
        country: country
        address: address
        city: city
        admin: false
        avatar: avatar
        hasPassword: false
        oauthApps:
        - oauthApps
        - oauthApps
        creationDate: 0
        zipcode: zipcode
        phone: phone
        preferredMFA: preferredMFA
        name: name
        id: id
        lang: lang
        emailValidated: false
        email: email
      properties:
        address:
          description: The address of the user
          type: string
        admin:
          default: false
          description: Is the user an administrator ?
          type: boolean
        avatar:
          description: The location of the user's avatar
          type: string
        canPay:
          default: false
          description: Does the user can pay ?
          type: boolean
        city:
          description: The city of the user
          type: string
        country:
          description: The country of the user
          type: string
        creationDate:
          description: The creation timestamp of the user
          format: int64
          type: integer
        email:
          description: The email of the user
          type: string
        emailValidated:
          default: false
          description: Does the user email is validate
          type: boolean
        hasPassword:
          default: false
          type: boolean
        id:
          description: "The id of the user : `user_${uuid}`"
          type: string
        lang:
          description: The lang of the user
          type: string
        name:
          description: The name of the user
          type: string
        oauthApps:
          description: The list of token oauth
          items:
            type: string
          type: array
        phone:
          description: The phone of the user
          type: string
        preferredMFA:
          type: string
        zipcode:
          description: The zipcode of the user
          type: string
      required:
      - address
      - admin
      - avatar
      - canPay
      - city
      - country
      - creationDate
      - email
      - emailValidated
      - id
      - lang
      - name
      - oauthApps
      - phone
      - zipcode
      type: object
    Variant:
      example:
        name: name
        logo: logo
        id: id
        deployType: deployType
        slug: slug
      properties:
        deployType:
          type: string
        id:
          type: string
        logo:
          type: string
        name:
          type: string
        slug:
          type: string
      required:
      - deployType
      - id
      - logo
      - name
      - slug
      type: object
    Vhost:
      example:
        fqdn: fqdn
      properties:
        fqdn:
          type: string
      required:
      - fqdn
      type: object
    WannabeAddon:
      example:
        providerId: providerId
        name: name
        payment:
          deviceData: deviceData
          type: NEW_CARD
          token: token
        region: region
        plan: plan
      properties:
        name:
          type: string
        payment:
          $ref: '#/components/schemas/PaymentData'
        plan:
          type: string
        providerId:
          description: ""
          type: string
        region:
          type: string
      required:
      - name
      - payment
      - plan
      - providerId
      - region
      type: object
    WannabeAddonBilling:
      example:
        cost: 0.8008281904610115
      properties:
        cost:
          format: double
          type: number
      required:
      - cost
      type: object
    WannabeAddonProvider:
      example:
        name: name
        api:
          password: password
          regions:
          - regions
          - regions
          test:
            base_url: base_url
            sso_url: sso_url
          config_vars:
          - config_vars
          - config_vars
          production:
            base_url: base_url
            sso_url: sso_url
          sso_salt: sso_salt
        id: id
      properties:
        api:
          $ref: '#/components/schemas/WannabeAddonProviderAPI'
        id:
          type: string
        name:
          type: string
      required:
      - api
      - id
      - name
      type: object
    WannabeAddonProviderAPI:
      example:
        password: password
        regions:
        - regions
        - regions
        test:
          base_url: base_url
          sso_url: sso_url
        config_vars:
        - config_vars
        - config_vars
        production:
          base_url: base_url
          sso_url: sso_url
        sso_salt: sso_salt
      properties:
        config_vars:
          items:
            type: string
          type: array
        password:
          type: string
        production:
          $ref: '#/components/schemas/WannabeAddonProviderAPIUrl'
        regions:
          items:
            type: string
          type: array
        sso_salt:
          type: string
        test:
          $ref: '#/components/schemas/WannabeAddonProviderAPIUrl'
      required:
      - config_vars
      - password
      - sso_salt
      type: object
    WannabeAddonProviderAPIUrl:
      example:
        base_url: base_url
        sso_url: sso_url
      properties:
        base_url:
          type: string
        sso_url:
          type: string
      required:
      - base_url
      - sso_url
      type: object
    WannabeApplication:
      example:
        minInstances: 6
        oauthAppId: oauthAppId
        oauthService: oauthService
        instanceType: instanceType
        cancelOnPush: false
        description: description
        favourite: false
        enabled: false
        shutdownable: false
        deploy: deploy
        instanceVariant: instanceVariant
        minFlavor: minFlavor
        separateBuild: false
        tags:
        - tags
        - tags
        homogeneous: false
        archived: false
        oauthApp:
          owner: owner
          name: name
        instanceVersion: instanceVersion
        stickySessions: false
        zone: zone
        maxFlavor: maxFlavor
        name: name
        maxInstances: 0
      properties:
        archived:
          default: false
          type: boolean
        cancelOnPush:
          default: false
          type: boolean
        deploy:
          type: string
        description:
          type: string
        enabled:
          default: false
          type: boolean
        favourite:
          default: false
          type: boolean
        homogeneous:
          default: false
          type: boolean
        instanceType:
          type: string
        instanceVariant:
          type: string
        instanceVersion:
          type: string
        maxFlavor:
          type: string
        maxInstances:
          format: int32
          type: integer
        minFlavor:
          type: string
        minInstances:
          format: int32
          type: integer
        name:
          type: string
        oauthApp:
          $ref: '#/components/schemas/WannabeOauthApp'
        oauthAppId:
          type: string
        oauthService:
          type: string
        separateBuild:
          default: false
          type: boolean
        shutdownable:
          default: false
          type: boolean
        stickySessions:
          default: false
          type: boolean
        tags:
          items:
            type: string
          type: array
        zone:
          type: string
      required:
      - deploy
      - enabled
      - maxInstances
      - minInstances
      - name
      - zone
      type: object
    WannabeConsumer:
      example:
        baseUrl:
          url: url
        rights:
          right: right
          activated: false
        name: name
        description: description
        picture: picture
        url:
          url: url
      properties:
        baseUrl:
          $ref: '#/components/schemas/URL'
        description:
          type: string
        name:
          type: string
        picture:
          description: ""
          type: string
        rights:
          $ref: '#/components/schemas/WannabeConsumer_rights'
        url:
          $ref: '#/components/schemas/URL'
      required:
      - baseUrl
      - name
      - rights
      - url
      type: object
    WannabeEnv:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      required:
      - name
      - value
      type: object
    WannabeEnvVar: {}
    WannabeExternalPeer: {}
    WannabeFeature:
      example:
        name: name
        type: type
      properties:
        name:
          type: string
        type:
          description: "BOOLEAN, INTERVAL, FILESIZE, NUMBER, PERCENTAGE"
          type: string
      required:
      - name
      - type
      type: object
    WannabeMember:
      $ref: '#/components/schemas/schema2'
    WannabeNetworkGroup: {}
    WannabeOauthApp:
      example:
        owner: owner
        name: name
      properties:
        name:
          type: string
        owner:
          type: string
      type: object
    WannabeOrganisation:
      example:
        zipcode: zipcode
        country: country
        address: address
        city: city
        VAT: VAT
        name: name
        description: description
        company: company
      properties:
        VAT:
          type: string
        address:
          description: The address of the organisation.
          type: string
        city:
          description: The city of the organisation.
          type: string
        company:
          description: The company's name of the organisation.
          type: string
        country:
          description: The country of the organisation.
          type: string
        description:
          description: The description of the organisation.
          type: string
        name:
          description: The name of the organisation.
          type: string
        zipcode:
          description: The zipcode of the city's organisation.
          type: string
      required:
      - description
      - name
      type: object
    WannabePlan:
      example:
        features:
        - name: name
          type: type
          value: value
        - name: name
          type: type
          value: value
        price: 0
        name: name
        slug: slug
      properties:
        features:
          items:
            $ref: '#/components/schemas/WannabePlanFeature'
          type: array
        name:
          type: string
        price:
          format: int64
          type: integer
        slug:
          type: string
      required:
      - features
      - name
      - price
      - slug
      type: object
    WannabePlanFeature:
      example:
        name: name
        type: type
        value: value
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
      required:
      - name
      - type
      - value
      type: object
    WannabeUser:
      description: ""
      example:
        zipcode: zipcode
        country: country
        password: password
        address: address
        city: city
        phone: phone
        terms: false
        name: name
        lang: lang
        email: email
      properties:
        address:
          type: string
        city:
          type: string
        country:
          type: string
        email:
          description: ""
          type: string
        lang:
          type: string
        name:
          type: string
        password:
          type: string
        phone:
          type: string
        terms:
          default: false
          type: boolean
        zipcode:
          type: string
      required:
      - email
      - password
      - terms
      type: object
    WireGuardConfiguration: {}
    Zone:
      example:
        internal: false
        correspondingRegion: correspondingRegion
        name: name
      properties:
        correspondingRegion:
          type: string
        internal:
          default: false
          type: boolean
        name:
          type: string
      required:
      - correspondingRegion
      - internal
      - name
      type: object
    schema1:
      example:
        role: role
        member:
          name: name
          avatar: avatar
          id: id
          email: email
        job: job
      properties:
        job:
          type: string
        member:
          $ref: '#/components/schemas/schema1_member'
        role:
          type: string
      required:
      - job
      - member
      - role
      type: object
    schema2:
      properties:
        email:
          type: string
        job:
          type: string
        role:
          type: string
      required:
      - email
      - role
      type: object
    _organisations__id__addons__addonId__migrations_post_request:
      properties:
        planId:
          description: Id of the new plan. E.g. "plan_acddc485-79c2-4c6b-a617-c92a06c0cb0b"
          type: string
        region:
          description: "New region. E.g. \"EU\", \"US\", \"Par2\""
          type: string
      type: object
    Avatar_source:
      description: ""
      example:
        source: source
        value:
          url: url
      properties:
        source:
          description: github or gravatar
          type: string
        value:
          $ref: '#/components/schemas/URL'
      required:
      - source
      - value
      type: object
    Conso_conso:
      example:
        date: date
        conso: conso
      properties:
        conso:
          description: One day consumption
          type: string
        date:
          type: string
      required:
      - conso
      - date
      type: object
    Credits_dropPrice:
      example:
        currency: currency
        value: 6.0274563
      properties:
        currency:
          type: string
        value:
          format: float
          type: number
      required:
      - currency
      - value
      type: object
    DeploymentView_author:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    Summary_organisations_inner_addons_inner:
      example:
        providerId: providerId
        name: name
        id: id
        logoUrl: logoUrl
      properties:
        id:
          type: string
        logoUrl:
          type: string
        name:
          type: string
        providerId:
          type: string
      type: object
    Summary_organisations_inner_applications_inner:
      example:
        archived: false
        instanceType: instanceType
        commit: commit
        name: name
        id: id
        state: state
        variantSlug: variantSlug
        instanceVariant: instanceVariant
      properties:
        archived:
          default: false
          type: boolean
        commit:
          type: string
        id:
          type: string
        instanceType:
          type: string
        instanceVariant:
          type: string
        name:
          type: string
        state:
          type: string
        variantSlug:
          type: string
      type: object
    Summary_organisations_inner_consumers_inner:
      example:
        name: name
        key: key
        picture: picture
      properties:
        key:
          type: string
        name:
          type: string
        picture:
          type: string
      type: object
    Summary_organisations_inner:
      example:
        role: role
        addons:
        - providerId: providerId
          name: name
          id: id
          logoUrl: logoUrl
        - providerId: providerId
          name: name
          id: id
          logoUrl: logoUrl
        name: name
        consumers:
        - name: name
          key: key
          picture: picture
        - name: name
          key: key
          picture: picture
        avatar: avatar
        id: id
        providers:
        - providers
        - providers
        applications:
        - archived: false
          instanceType: instanceType
          commit: commit
          name: name
          id: id
          state: state
          variantSlug: variantSlug
          instanceVariant: instanceVariant
        - archived: false
          instanceType: instanceType
          commit: commit
          name: name
          id: id
          state: state
          variantSlug: variantSlug
          instanceVariant: instanceVariant
      properties:
        addons:
          items:
            $ref: '#/components/schemas/Summary_organisations_inner_addons_inner'
          type: array
        applications:
          items:
            $ref: '#/components/schemas/Summary_organisations_inner_applications_inner'
          type: array
        avatar:
          type: string
        consumers:
          items:
            $ref: '#/components/schemas/Summary_organisations_inner_consumers_inner'
          type: array
        id:
          type: string
        name:
          type: string
        providers:
          items:
            type: string
          type: array
        role:
          type: string
      type: object
    Summary_user:
      example:
        addons:
        - providerId: providerId
          name: name
          id: id
          logoUrl: logoUrl
        - providerId: providerId
          name: name
          id: id
          logoUrl: logoUrl
        name: name
        admin: false
        consumers:
        - name: name
          key: key
          picture: picture
        - name: name
          key: key
          picture: picture
        avatar: avatar
        id: id
        lang: lang
        applications:
        - archived: false
          instanceType: instanceType
          commit: commit
          name: name
          id: id
          state: state
          variantSlug: variantSlug
          instanceVariant: instanceVariant
        - archived: false
          instanceType: instanceType
          commit: commit
          name: name
          id: id
          state: state
          variantSlug: variantSlug
          instanceVariant: instanceVariant
      properties:
        addons:
          items:
            $ref: '#/components/schemas/Summary_organisations_inner_addons_inner'
          type: array
        admin:
          default: false
          type: boolean
        applications:
          items:
            $ref: '#/components/schemas/Summary_organisations_inner_applications_inner'
          type: array
        avatar:
          type: string
        consumers:
          items:
            $ref: '#/components/schemas/Summary_organisations_inner_consumers_inner'
          type: array
        id:
          type: string
        lang:
          type: string
        name:
          type: string
      required:
      - addons
      - admin
      - applications
      - avatar
      - id
      - lang
      - name
      type: object
    SupernovaInstanceView_flavor:
      description: "The instance \"flavor\": memory, cpu, disk size…"
      properties:
        cpus:
          type: number
        mem:
          type: number
        name:
          description: Name of flavor. For indication only.
          type: string
        price:
          type: number
      type: object
    WannabeConsumer_rights:
      example:
        right: right
        activated: false
      properties:
        activated:
          default: false
          type: boolean
        right:
          type: string
      required:
      - activated
      - right
      type: object
    schema1_member:
      example:
        name: name
        avatar: avatar
        id: id
        email: email
      properties:
        avatar:
          type: string
        email:
          type: string
        id:
          type: string
        name:
          type: string
      required:
      - email
      - id
      type: object

