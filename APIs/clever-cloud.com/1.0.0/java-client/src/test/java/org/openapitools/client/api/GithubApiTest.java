/*
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Application;
import org.openapitools.client.model.Key;
import org.openapitools.client.model.TransactionId;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GithubApi
 */
@Disabled
public class GithubApiTest {

    private final GithubApi api = new GithubApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteGithubLink_0Test() throws ApiException {
        api.deleteGithubLink_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGithubApplications_1Test() throws ApiException {
        List<Application> response = api.getGithubApplications_1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGithubCallback_0Test() throws ApiException {
        String code = null;
        String state = null;
        String error = null;
        String errorDescription = null;
        String errorUri = null;
        String cookie = null;
        api.getGithubCallback_0(code, state, error, errorDescription, errorUri, cookie);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGithubEmails_0Test() throws ApiException {
        List<String> response = api.getGithubEmails_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGithubKeys_0Test() throws ApiException {
        List<Key> response = api.getGithubKeys_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGithubLink_0Test() throws ApiException {
        String transactionId = null;
        String redirectUrl = null;
        api.getGithubLink_0(transactionId, redirectUrl);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGithubLogin_0Test() throws ApiException {
        String redirectUrl = null;
        String fromAuthorize = null;
        api.getGithubLogin_0(redirectUrl, fromAuthorize);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGithubSignup_0Test() throws ApiException {
        String redirectUrl = null;
        String fromAuthorize = null;
        api.getGithubSignup_0(redirectUrl, fromAuthorize);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGithubUsername_0Test() throws ApiException {
        String response = api.getGithubUsername_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGithub_0Test() throws ApiException {
        TransactionId response = api.getGithub_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postGithubRedeploy_0Test() throws ApiException {
        String userAgent = null;
        String xGithubEvent = null;
        String xHubSignature = null;
        api.postGithubRedeploy_0(userAgent, xGithubEvent, xHubSignature);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postGithubSignup_0Test() throws ApiException {
        String transactionId = null;
        String name = null;
        String otherId = null;
        String otherEmail = null;
        String password = null;
        String autoLink = null;
        String terms = null;
        api.postGithubSignup_0(transactionId, name, otherId, otherEmail, password, autoLink, terms);
        // TODO: test validations
    }

}
