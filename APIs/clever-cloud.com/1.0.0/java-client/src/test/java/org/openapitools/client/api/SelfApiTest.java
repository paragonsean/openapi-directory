/*
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Addon;
import org.openapitools.client.model.Application;
import org.openapitools.client.model.Avatar;
import org.openapitools.client.model.Body;
import org.openapitools.client.model.ChangePassword;
import org.openapitools.client.model.Conso;
import org.openapitools.client.model.Consumer;
import org.openapitools.client.model.Credits;
import org.openapitools.client.model.Deployment;
import org.openapitools.client.model.Env;
import org.openapitools.client.model.Instance;
import org.openapitools.client.model.Key;
import org.openapitools.client.model.LinkedAppEnv;
import org.openapitools.client.model.ListEnv;
import org.openapitools.client.model.Secret;
import org.openapitools.client.model.Sso;
import org.openapitools.client.model.Token;
import org.openapitools.client.model.User;
import org.openapitools.client.model.Vhost;
import org.openapitools.client.model.WannabeAddon;
import org.openapitools.client.model.WannabeApplication;
import org.openapitools.client.model.WannabeConsumer;
import org.openapitools.client.model.WannabeEnv;
import org.openapitools.client.model.WannabePlan;
import org.openapitools.client.model.WannabeUser;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SelfApi
 */
@Disabled
public class SelfApiTest {

    private final SelfApi api = new SelfApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfAddonsAddonIdTagsTag_1Test() throws ApiException {
        String tag = null;
        String addonId = null;
        api.deleteSelfAddonsAddonIdTagsTag_1(tag, addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfAddonsAddonId_1Test() throws ApiException {
        String addonId = null;
        api.deleteSelfAddonsAddonId_1(addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppIdAddonsAddonId_2Test() throws ApiException {
        String appId = null;
        String addonId = null;
        api.deleteSelfApplicationsAppIdAddonsAddonId_2(appId, addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppIdDependenciesDependencyId_1Test() throws ApiException {
        String dependencyId = null;
        String appId = null;
        api.deleteSelfApplicationsAppIdDependenciesDependencyId_1(dependencyId, appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppIdDeploymentsDeploymentIdInstances_1Test() throws ApiException {
        String appId = null;
        String deploymentId = null;
        api.deleteSelfApplicationsAppIdDeploymentsDeploymentIdInstances_1(appId, deploymentId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppIdEnvEnvName_1Test() throws ApiException {
        String appId = null;
        String envName = null;
        api.deleteSelfApplicationsAppIdEnvEnvName_1(appId, envName);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppIdInstances_1Test() throws ApiException {
        String appId = null;
        api.deleteSelfApplicationsAppIdInstances_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppIdTagsTag_1Test() throws ApiException {
        String appId = null;
        String tag = null;
        api.deleteSelfApplicationsAppIdTagsTag_1(appId, tag);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppIdVhostsDomain_1Test() throws ApiException {
        String appId = null;
        String domain = null;
        api.deleteSelfApplicationsAppIdVhostsDomain_1(appId, domain);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppIdVhostsFavourite_1Test() throws ApiException {
        String appId = null;
        api.deleteSelfApplicationsAppIdVhostsFavourite_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppId_1Test() throws ApiException {
        String appId = null;
        api.deleteSelfApplicationsAppId_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfConsumersKey_0Test() throws ApiException {
        String key = null;
        api.deleteSelfConsumersKey_0(key);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfEmailsEmail_0Test() throws ApiException {
        String email = null;
        api.deleteSelfEmailsEmail_0(email);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfKeysKey_0Test() throws ApiException {
        String key = null;
        api.deleteSelfKeysKey_0(key);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfPaymentsBillingsBid_1Test() throws ApiException {
        String bid = null;
        api.deleteSelfPaymentsBillingsBid_1(bid);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfPaymentsMethodsMId_1Test() throws ApiException {
        String mId = null;
        api.deleteSelfPaymentsMethodsMId_1(mId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfPaymentsRecurring_1Test() throws ApiException {
        api.deleteSelfPaymentsRecurring_1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfTokensToken_0Test() throws ApiException {
        String token = null;
        api.deleteSelfTokensToken_0(token);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfTokens_0Test() throws ApiException {
        api.deleteSelfTokens_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelf_0Test() throws ApiException {
        api.deleteSelf_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfAddonsAddonIdApplications_2Test() throws ApiException {
        String addonId = null;
        List<Application> response = api.getSelfAddonsAddonIdApplications_2(addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfAddonsAddonIdEnv_1Test() throws ApiException {
        String addonId = null;
        List<ListEnv> response = api.getSelfAddonsAddonIdEnv_1(addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfAddonsAddonIdSso_1Test() throws ApiException {
        String addonId = null;
        Sso response = api.getSelfAddonsAddonIdSso_1(addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfAddonsAddonIdTags_1Test() throws ApiException {
        String addonId = null;
        List<String> response = api.getSelfAddonsAddonIdTags_1(addonId);
        // TODO: test validations
    }

    /**
     * Specific addon
     *
     * Get a specific addon
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfAddonsAddonId_1Test() throws ApiException {
        String addonId = null;
        Addon response = api.getSelfAddonsAddonId_1(addonId);
        // TODO: test validations
    }

    /**
     * Addon
     *
     * Get all the addons
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfAddons_1Test() throws ApiException {
        List<Addon> response = api.getSelfAddons_1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdAddonsEnv_2Test() throws ApiException {
        String appId = null;
        List<Env> response = api.getSelfApplicationsAppIdAddonsEnv_2(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdAddons_2Test() throws ApiException {
        String appId = null;
        List<Addon> response = api.getSelfApplicationsAppIdAddons_2(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdDependenciesDependencyId_1Test() throws ApiException {
        String dependencyId = null;
        String appId = null;
        WannabeApplication wannabeApplication = null;
        api.getSelfApplicationsAppIdDependenciesDependencyId_1(dependencyId, appId, wannabeApplication);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdDependencies_1Test() throws ApiException {
        String appId = null;
        List<Application> response = api.getSelfApplicationsAppIdDependencies_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdDependents_1Test() throws ApiException {
        String appId = null;
        List<Application> response = api.getSelfApplicationsAppIdDependents_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdDeployments_1Test() throws ApiException {
        String appId = null;
        String limit = null;
        String offset = null;
        String action = null;
        List<Deployment> response = api.getSelfApplicationsAppIdDeployments_1(appId, limit, offset, action);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdEnv_1Test() throws ApiException {
        String appId = null;
        List<ListEnv> response = api.getSelfApplicationsAppIdEnv_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdInstances_1Test() throws ApiException {
        String appId = null;
        List<Instance> response = api.getSelfApplicationsAppIdInstances_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdTags_1Test() throws ApiException {
        String appId = null;
        List<String> response = api.getSelfApplicationsAppIdTags_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdVhostsFavourite_1Test() throws ApiException {
        String appId = null;
        Vhost response = api.getSelfApplicationsAppIdVhostsFavourite_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdVhosts_1Test() throws ApiException {
        String appId = null;
        List<Vhost> response = api.getSelfApplicationsAppIdVhosts_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppId_1Test() throws ApiException {
        String appId = null;
        Application response = api.getSelfApplicationsAppId_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplications_1Test() throws ApiException {
        List<Application> response = api.getSelfApplications_1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfConfirmationEmail_0Test() throws ApiException {
        api.getSelfConfirmationEmail_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfConsumersKeySecret_0Test() throws ApiException {
        String key = null;
        Secret response = api.getSelfConsumersKeySecret_0(key);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfConsumersKey_0Test() throws ApiException {
        String key = null;
        Consumer response = api.getSelfConsumersKey_0(key);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfConsumers_0Test() throws ApiException {
        List<Consumer> response = api.getSelfConsumers_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfConsumptions_0Test() throws ApiException {
        String appId = null;
        String from = null;
        String to = null;
        Conso response = api.getSelfConsumptions_0(appId, from, to);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfCredits_0Test() throws ApiException {
        Credits response = api.getSelfCredits_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfEmails_0Test() throws ApiException {
        List<String> response = api.getSelfEmails_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfId_0Test() throws ApiException {
        String response = api.getSelfId_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfInstances_0Test() throws ApiException {
        List<Instance> response = api.getSelfInstances_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfKeys_0Test() throws ApiException {
        List<Key> response = api.getSelfKeys_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfPaymentInfo_0Test() throws ApiException {
        api.getSelfPaymentInfo_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfPaymentsBillingsBidPdf_1Test() throws ApiException {
        String bid = null;
        String token = null;
        api.getSelfPaymentsBillingsBidPdf_1(bid, token);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfPaymentsBillingsBid_1Test() throws ApiException {
        String bid = null;
        api.getSelfPaymentsBillingsBid_1(bid);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfPaymentsBillings_1Test() throws ApiException {
        api.getSelfPaymentsBillings_1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfPaymentsFullpricePrice_1Test() throws ApiException {
        String price = null;
        api.getSelfPaymentsFullpricePrice_1(price);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfPaymentsMethods_1Test() throws ApiException {
        api.getSelfPaymentsMethods_1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfTokens_0Test() throws ApiException {
        List<Token> response = api.getSelfTokens_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfValidateEmail_0Test() throws ApiException {
        String validationKey = null;
        api.getSelfValidateEmail_0(validationKey);
        // TODO: test validations
    }

    /**
     * 
     *
     * Get information about yourself
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelf_0Test() throws ApiException {
        User response = api.getSelf_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postSelfAddons_1Test() throws ApiException {
        WannabeAddon wannabeAddon = null;
        api.postSelfAddons_1(wannabeAddon);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postSelfApplicationsAppIdAddons_2Test() throws ApiException {
        String appId = null;
        Body body = null;
        api.postSelfApplicationsAppIdAddons_2(appId, body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postSelfApplicationsAppIdInstances_1Test() throws ApiException {
        String appId = null;
        String commit = null;
        api.postSelfApplicationsAppIdInstances_1(appId, commit);
        // TODO: test validations
    }

    /**
     * Creates an application. If you want to create a Github app, you need to replace the oauthApp field with what you will find here: https://github.com/CleverCloud/doc.clever-cloud.com/issues/179
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postSelfApplications_1Test() throws ApiException {
        WannabeApplication wannabeApplication = null;
        api.postSelfApplications_1(wannabeApplication);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postSelfConsumers_0Test() throws ApiException {
        WannabeConsumer wannabeConsumer = null;
        api.postSelfConsumers_0(wannabeConsumer);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postSelfPaymentsBillings_1Test() throws ApiException {
        api.postSelfPaymentsBillings_1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postSelfPaymentsMethods_1Test() throws ApiException {
        api.postSelfPaymentsMethods_1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfAddonsAddonIdPlan_1Test() throws ApiException {
        String addonId = null;
        WannabePlan wannabePlan = null;
        api.putSelfAddonsAddonIdPlan_1(addonId, wannabePlan);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfAddonsAddonIdTagsTag_1Test() throws ApiException {
        String tag = null;
        String addonId = null;
        Body body = null;
        api.putSelfAddonsAddonIdTagsTag_1(tag, addonId, body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfAddonsAddonId_1Test() throws ApiException {
        String addonId = null;
        WannabeAddon wannabeAddon = null;
        api.putSelfAddonsAddonId_1(addonId, wannabeAddon);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfApplicationsAppIdEnvEnvName_1Test() throws ApiException {
        String appId = null;
        String envName = null;
        WannabeEnv wannabeEnv = null;
        api.putSelfApplicationsAppIdEnvEnvName_1(appId, envName, wannabeEnv);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfApplicationsAppIdEnv_1Test() throws ApiException {
        String appId = null;
        WannabeEnv wannabeEnv = null;
        api.putSelfApplicationsAppIdEnv_1(appId, wannabeEnv);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfApplicationsAppIdTagsTag_1Test() throws ApiException {
        String appId = null;
        String tag = null;
        Body body = null;
        api.putSelfApplicationsAppIdTagsTag_1(appId, tag, body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfApplicationsAppIdVhostsDomain_1Test() throws ApiException {
        String appId = null;
        String domain = null;
        Vhost vhost = null;
        api.putSelfApplicationsAppIdVhostsDomain_1(appId, domain, vhost);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfApplicationsAppIdVhostsFavourite_1Test() throws ApiException {
        String appId = null;
        Vhost vhost = null;
        api.putSelfApplicationsAppIdVhostsFavourite_1(appId, vhost);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfApplicationsAppId_1Test() throws ApiException {
        String appId = null;
        WannabeApplication wannabeApplication = null;
        api.putSelfApplicationsAppId_1(appId, wannabeApplication);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfAvatar_0Test() throws ApiException {
        Avatar avatar = null;
        api.putSelfAvatar_0(avatar);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfChangePassword_0Test() throws ApiException {
        ChangePassword response = api.putSelfChangePassword_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfConsumersKey_0Test() throws ApiException {
        String key = null;
        WannabeConsumer wannabeConsumer = null;
        api.putSelfConsumersKey_0(key, wannabeConsumer);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfEmailsEmail_0Test() throws ApiException {
        String email = null;
        Body body = null;
        api.putSelfEmailsEmail_0(email, body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfKeysKey_0Test() throws ApiException {
        String key = null;
        Body body = null;
        api.putSelfKeysKey_0(key, body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfPaymentsBillingsBid_1Test() throws ApiException {
        String bid = null;
        api.putSelfPaymentsBillingsBid_1(bid);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelf_0Test() throws ApiException {
        WannabeUser wannabeUser = null;
        api.putSelf_0(wannabeUser);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfAddonsPreordersPost_1Test() throws ApiException {
        WannabeAddon wannabeAddon = null;
        api.selfAddonsPreordersPost_1(wannabeAddon);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfApplicationsAppIdBranchPut_1Test() throws ApiException {
        String appId = null;
        api.selfApplicationsAppIdBranchPut_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfApplicationsAppIdBranchesGet_1Test() throws ApiException {
        String appId = null;
        api.selfApplicationsAppIdBranchesGet_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfApplicationsAppIdBuildflavorPut_1Test() throws ApiException {
        String appId = null;
        api.selfApplicationsAppIdBuildflavorPut_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfApplicationsAppIdDependenciesEnvGet_1Test() throws ApiException {
        String appId = null;
        List<LinkedAppEnv> response = api.selfApplicationsAppIdDependenciesEnvGet_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfApplicationsAppIdDeploymentsDeploymentIdGet_1Test() throws ApiException {
        String appId = null;
        String deploymentId = null;
        api.selfApplicationsAppIdDeploymentsDeploymentIdGet_1(appId, deploymentId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfApplicationsAppIdExposedEnvGet_1Test() throws ApiException {
        String appId = null;
        api.selfApplicationsAppIdExposedEnvGet_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfApplicationsAppIdExposedEnvPut_1Test() throws ApiException {
        String appId = null;
        api.selfApplicationsAppIdExposedEnvPut_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfApplicationsAppIdInstancesInstanceIdGet_1Test() throws ApiException {
        String instanceId = null;
        String appId = null;
        api.selfApplicationsAppIdInstancesInstanceIdGet_1(instanceId, appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfCliTokensGet_0Test() throws ApiException {
        String cliToken = null;
        api.selfCliTokensGet_0(cliToken);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfMfaKindBackupcodesGet_0Test() throws ApiException {
        String kind = null;
        api.selfMfaKindBackupcodesGet_0(kind);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfMfaKindConfirmationPost_0Test() throws ApiException {
        String kind = null;
        api.selfMfaKindConfirmationPost_0(kind);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfMfaKindDelete_0Test() throws ApiException {
        String kind = null;
        api.selfMfaKindDelete_0(kind);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfMfaKindPost_0Test() throws ApiException {
        String kind = null;
        api.selfMfaKindPost_0(kind);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfMfaKindPut_0Test() throws ApiException {
        String kind = null;
        api.selfMfaKindPut_0(kind);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfPaymentsMethodsDefaultGet_1Test() throws ApiException {
        api.selfPaymentsMethodsDefaultGet_1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfPaymentsMethodsDefaultPut_1Test() throws ApiException {
        api.selfPaymentsMethodsDefaultPut_1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfPaymentsMonthlyinvoiceGet_1Test() throws ApiException {
        api.selfPaymentsMonthlyinvoiceGet_1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfPaymentsMonthlyinvoiceMaxcreditPut_1Test() throws ApiException {
        api.selfPaymentsMonthlyinvoiceMaxcreditPut_1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfPaymentsRecurringGet_1Test() throws ApiException {
        api.selfPaymentsRecurringGet_1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfPaymentsTokensStripeGet_1Test() throws ApiException {
        api.selfPaymentsTokensStripeGet_1();
        // TODO: test validations
    }

}
