/*
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Addon;
import org.openapitools.client.model.AppInstance;
import org.openapitools.client.model.Application;
import org.openapitools.client.model.Body;
import org.openapitools.client.model.Deployment;
import org.openapitools.client.model.Env;
import org.openapitools.client.model.Instance;
import org.openapitools.client.model.LinkedAppEnv;
import org.openapitools.client.model.ListEnv;
import org.openapitools.client.model.Vhost;
import org.openapitools.client.model.WannabeApplication;
import org.openapitools.client.model.WannabeEnv;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApplicationsApi
 */
@Disabled
public class ApplicationsApiTest {

    private final ApplicationsApi api = new ApplicationsApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganisationsIdApplicationsAppIdAddonsAddonId_1Test() throws ApiException {
        String id = null;
        String appId = null;
        String addonId = null;
        api.deleteOrganisationsIdApplicationsAppIdAddonsAddonId_1(id, appId, addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganisationsIdApplicationsAppIdDependenciesDependencyId_0Test() throws ApiException {
        String dependencyId = null;
        String appId = null;
        String id = null;
        api.deleteOrganisationsIdApplicationsAppIdDependenciesDependencyId_0(dependencyId, appId, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganisationsIdApplicationsAppIdDeploymentsDeploymentIdInstances_0Test() throws ApiException {
        String id = null;
        String appId = null;
        String deploymentId = null;
        api.deleteOrganisationsIdApplicationsAppIdDeploymentsDeploymentIdInstances_0(id, appId, deploymentId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganisationsIdApplicationsAppIdEnvEnvName_0Test() throws ApiException {
        String id = null;
        String appId = null;
        String envName = null;
        api.deleteOrganisationsIdApplicationsAppIdEnvEnvName_0(id, appId, envName);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganisationsIdApplicationsAppIdInstances_0Test() throws ApiException {
        String id = null;
        String appId = null;
        api.deleteOrganisationsIdApplicationsAppIdInstances_0(id, appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganisationsIdApplicationsAppIdTagsTag_0Test() throws ApiException {
        String id = null;
        String appId = null;
        String tag = null;
        api.deleteOrganisationsIdApplicationsAppIdTagsTag_0(id, appId, tag);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganisationsIdApplicationsAppIdVhostsDomain_0Test() throws ApiException {
        String id = null;
        String appId = null;
        String domain = null;
        api.deleteOrganisationsIdApplicationsAppIdVhostsDomain_0(id, appId, domain);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganisationsIdApplicationsAppIdVhostsFavourite_0Test() throws ApiException {
        String id = null;
        String appId = null;
        api.deleteOrganisationsIdApplicationsAppIdVhostsFavourite_0(id, appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganisationsIdApplicationsAppId_0Test() throws ApiException {
        String id = null;
        String appId = null;
        api.deleteOrganisationsIdApplicationsAppId_0(id, appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppIdAddonsAddonId_1Test() throws ApiException {
        String appId = null;
        String addonId = null;
        api.deleteSelfApplicationsAppIdAddonsAddonId_1(appId, addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppIdDependenciesDependencyId_0Test() throws ApiException {
        String dependencyId = null;
        String appId = null;
        api.deleteSelfApplicationsAppIdDependenciesDependencyId_0(dependencyId, appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppIdDeploymentsDeploymentIdInstances_0Test() throws ApiException {
        String appId = null;
        String deploymentId = null;
        api.deleteSelfApplicationsAppIdDeploymentsDeploymentIdInstances_0(appId, deploymentId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppIdEnvEnvName_0Test() throws ApiException {
        String appId = null;
        String envName = null;
        api.deleteSelfApplicationsAppIdEnvEnvName_0(appId, envName);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppIdInstances_0Test() throws ApiException {
        String appId = null;
        api.deleteSelfApplicationsAppIdInstances_0(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppIdTagsTag_0Test() throws ApiException {
        String appId = null;
        String tag = null;
        api.deleteSelfApplicationsAppIdTagsTag_0(appId, tag);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppIdVhostsDomain_0Test() throws ApiException {
        String appId = null;
        String domain = null;
        api.deleteSelfApplicationsAppIdVhostsDomain_0(appId, domain);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppIdVhostsFavourite_0Test() throws ApiException {
        String appId = null;
        api.deleteSelfApplicationsAppIdVhostsFavourite_0(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppId_0Test() throws ApiException {
        String appId = null;
        api.deleteSelfApplicationsAppId_0(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGithubApplications_0Test() throws ApiException {
        List<Application> response = api.getGithubApplications_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdAddonsAddonIdApplications_1Test() throws ApiException {
        String id = null;
        String addonId = null;
        List<Application> response = api.getOrganisationsIdAddonsAddonIdApplications_1(id, addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdApplicationsAppIdAddonsEnv_1Test() throws ApiException {
        String id = null;
        String appId = null;
        List<Env> response = api.getOrganisationsIdApplicationsAppIdAddonsEnv_1(id, appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdApplicationsAppIdAddons_1Test() throws ApiException {
        String id = null;
        String appId = null;
        List<Addon> response = api.getOrganisationsIdApplicationsAppIdAddons_1(id, appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdApplicationsAppIdDependencies_0Test() throws ApiException {
        String appId = null;
        String id = null;
        List<Application> response = api.getOrganisationsIdApplicationsAppIdDependencies_0(appId, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdApplicationsAppIdDependents_0Test() throws ApiException {
        String appId = null;
        String id = null;
        List<Application> response = api.getOrganisationsIdApplicationsAppIdDependents_0(appId, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdApplicationsAppIdDeployments_0Test() throws ApiException {
        String id = null;
        String appId = null;
        String limit = null;
        String offset = null;
        String action = null;
        List<Deployment> response = api.getOrganisationsIdApplicationsAppIdDeployments_0(id, appId, limit, offset, action);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdApplicationsAppIdEnv_0Test() throws ApiException {
        String id = null;
        String appId = null;
        List<ListEnv> response = api.getOrganisationsIdApplicationsAppIdEnv_0(id, appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdApplicationsAppIdInstances_0Test() throws ApiException {
        String id = null;
        String appId = null;
        List<AppInstance> response = api.getOrganisationsIdApplicationsAppIdInstances_0(id, appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdApplicationsAppIdTags_0Test() throws ApiException {
        String id = null;
        String appId = null;
        List<String> response = api.getOrganisationsIdApplicationsAppIdTags_0(id, appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdApplicationsAppIdVhostsFavourite_0Test() throws ApiException {
        String id = null;
        String appId = null;
        Vhost response = api.getOrganisationsIdApplicationsAppIdVhostsFavourite_0(id, appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdApplicationsAppIdVhosts_0Test() throws ApiException {
        String id = null;
        String appId = null;
        List<Vhost> response = api.getOrganisationsIdApplicationsAppIdVhosts_0(id, appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdApplicationsAppId_0Test() throws ApiException {
        String id = null;
        String appId = null;
        Application response = api.getOrganisationsIdApplicationsAppId_0(id, appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdApplications_0Test() throws ApiException {
        String id = null;
        List<Application> response = api.getOrganisationsIdApplications_0(id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfAddonsAddonIdApplications_1Test() throws ApiException {
        String addonId = null;
        List<Application> response = api.getSelfAddonsAddonIdApplications_1(addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdAddonsEnv_1Test() throws ApiException {
        String appId = null;
        List<Env> response = api.getSelfApplicationsAppIdAddonsEnv_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdAddons_1Test() throws ApiException {
        String appId = null;
        List<Addon> response = api.getSelfApplicationsAppIdAddons_1(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdDependenciesDependencyId_0Test() throws ApiException {
        String dependencyId = null;
        String appId = null;
        WannabeApplication wannabeApplication = null;
        api.getSelfApplicationsAppIdDependenciesDependencyId_0(dependencyId, appId, wannabeApplication);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdDependencies_0Test() throws ApiException {
        String appId = null;
        List<Application> response = api.getSelfApplicationsAppIdDependencies_0(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdDependents_0Test() throws ApiException {
        String appId = null;
        List<Application> response = api.getSelfApplicationsAppIdDependents_0(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdDeployments_0Test() throws ApiException {
        String appId = null;
        String limit = null;
        String offset = null;
        String action = null;
        List<Deployment> response = api.getSelfApplicationsAppIdDeployments_0(appId, limit, offset, action);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdEnv_0Test() throws ApiException {
        String appId = null;
        List<ListEnv> response = api.getSelfApplicationsAppIdEnv_0(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdInstances_0Test() throws ApiException {
        String appId = null;
        List<Instance> response = api.getSelfApplicationsAppIdInstances_0(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdTags_0Test() throws ApiException {
        String appId = null;
        List<String> response = api.getSelfApplicationsAppIdTags_0(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdVhostsFavourite_0Test() throws ApiException {
        String appId = null;
        Vhost response = api.getSelfApplicationsAppIdVhostsFavourite_0(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdVhosts_0Test() throws ApiException {
        String appId = null;
        List<Vhost> response = api.getSelfApplicationsAppIdVhosts_0(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppId_0Test() throws ApiException {
        String appId = null;
        Application response = api.getSelfApplicationsAppId_0(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplications_0Test() throws ApiException {
        List<Application> response = api.getSelfApplications_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUsersIdApplications_0Test() throws ApiException {
        String id = null;
        List<Application> response = api.getUsersIdApplications_0(id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organisationsIdApplicationsAppIdBranchPut_0Test() throws ApiException {
        String appId = null;
        String id = null;
        api.organisationsIdApplicationsAppIdBranchPut_0(appId, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organisationsIdApplicationsAppIdBranchesGet_0Test() throws ApiException {
        String appId = null;
        String id = null;
        api.organisationsIdApplicationsAppIdBranchesGet_0(appId, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organisationsIdApplicationsAppIdBuildflavorPut_0Test() throws ApiException {
        String appId = null;
        String id = null;
        api.organisationsIdApplicationsAppIdBuildflavorPut_0(appId, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organisationsIdApplicationsAppIdDependenciesEnvGet_0Test() throws ApiException {
        String appId = null;
        String id = null;
        List<LinkedAppEnv> response = api.organisationsIdApplicationsAppIdDependenciesEnvGet_0(appId, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organisationsIdApplicationsAppIdDeploymentsDeploymentIdGet_0Test() throws ApiException {
        String appId = null;
        String deploymentId = null;
        String id = null;
        api.organisationsIdApplicationsAppIdDeploymentsDeploymentIdGet_0(appId, deploymentId, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organisationsIdApplicationsAppIdExposedEnvGet_0Test() throws ApiException {
        String appId = null;
        String id = null;
        api.organisationsIdApplicationsAppIdExposedEnvGet_0(appId, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organisationsIdApplicationsAppIdExposedEnvPut_0Test() throws ApiException {
        String appId = null;
        String id = null;
        api.organisationsIdApplicationsAppIdExposedEnvPut_0(appId, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organisationsIdApplicationsAppIdInstancesInstanceIdGet_0Test() throws ApiException {
        String instanceId = null;
        String appId = null;
        String id = null;
        api.organisationsIdApplicationsAppIdInstancesInstanceIdGet_0(instanceId, appId, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postOrganisationsIdApplicationsAppIdAddons_1Test() throws ApiException {
        String id = null;
        String appId = null;
        Body body = null;
        api.postOrganisationsIdApplicationsAppIdAddons_1(id, appId, body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postOrganisationsIdApplicationsAppIdInstances_0Test() throws ApiException {
        String id = null;
        String appId = null;
        String commit = null;
        api.postOrganisationsIdApplicationsAppIdInstances_0(id, appId, commit);
        // TODO: test validations
    }

    /**
     * Creates an application. If you want to create a Github app, you need to replace the oauthApp field with what you will find here: https://github.com/CleverCloud/doc.clever-cloud.com/issues/179
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postOrganisationsIdApplications_0Test() throws ApiException {
        String id = null;
        WannabeApplication wannabeApplication = null;
        Application response = api.postOrganisationsIdApplications_0(id, wannabeApplication);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postSelfApplicationsAppIdAddons_1Test() throws ApiException {
        String appId = null;
        Body body = null;
        api.postSelfApplicationsAppIdAddons_1(appId, body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postSelfApplicationsAppIdInstances_0Test() throws ApiException {
        String appId = null;
        String commit = null;
        api.postSelfApplicationsAppIdInstances_0(appId, commit);
        // TODO: test validations
    }

    /**
     * Creates an application. If you want to create a Github app, you need to replace the oauthApp field with what you will find here: https://github.com/CleverCloud/doc.clever-cloud.com/issues/179
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postSelfApplications_0Test() throws ApiException {
        WannabeApplication wannabeApplication = null;
        api.postSelfApplications_0(wannabeApplication);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putOrganisationsIdApplicationsAppIdDependenciesDependencyId_0Test() throws ApiException {
        String dependencyId = null;
        String appId = null;
        String id = null;
        Body body = null;
        api.putOrganisationsIdApplicationsAppIdDependenciesDependencyId_0(dependencyId, appId, id, body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putOrganisationsIdApplicationsAppIdEnvEnvName_0Test() throws ApiException {
        String id = null;
        String appId = null;
        String envName = null;
        WannabeEnv wannabeEnv = null;
        ListEnv response = api.putOrganisationsIdApplicationsAppIdEnvEnvName_0(id, appId, envName, wannabeEnv);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putOrganisationsIdApplicationsAppIdEnv_0Test() throws ApiException {
        String id = null;
        String appId = null;
        WannabeEnv wannabeEnv = null;
        ListEnv response = api.putOrganisationsIdApplicationsAppIdEnv_0(id, appId, wannabeEnv);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putOrganisationsIdApplicationsAppIdTagsTag_0Test() throws ApiException {
        String id = null;
        String appId = null;
        String tag = null;
        Body body = null;
        api.putOrganisationsIdApplicationsAppIdTagsTag_0(id, appId, tag, body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putOrganisationsIdApplicationsAppIdVhostsDomain_0Test() throws ApiException {
        String id = null;
        String appId = null;
        String domain = null;
        Vhost vhost = null;
        api.putOrganisationsIdApplicationsAppIdVhostsDomain_0(id, appId, domain, vhost);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putOrganisationsIdApplicationsAppIdVhostsFavourite_0Test() throws ApiException {
        String id = null;
        String appId = null;
        Vhost vhost = null;
        api.putOrganisationsIdApplicationsAppIdVhostsFavourite_0(id, appId, vhost);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putOrganisationsIdApplicationsAppId_0Test() throws ApiException {
        String id = null;
        String appId = null;
        WannabeApplication wannabeApplication = null;
        Application response = api.putOrganisationsIdApplicationsAppId_0(id, appId, wannabeApplication);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfApplicationsAppIdEnvEnvName_0Test() throws ApiException {
        String appId = null;
        String envName = null;
        WannabeEnv wannabeEnv = null;
        api.putSelfApplicationsAppIdEnvEnvName_0(appId, envName, wannabeEnv);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfApplicationsAppIdEnv_0Test() throws ApiException {
        String appId = null;
        WannabeEnv wannabeEnv = null;
        api.putSelfApplicationsAppIdEnv_0(appId, wannabeEnv);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfApplicationsAppIdTagsTag_0Test() throws ApiException {
        String appId = null;
        String tag = null;
        Body body = null;
        api.putSelfApplicationsAppIdTagsTag_0(appId, tag, body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfApplicationsAppIdVhostsDomain_0Test() throws ApiException {
        String appId = null;
        String domain = null;
        Vhost vhost = null;
        api.putSelfApplicationsAppIdVhostsDomain_0(appId, domain, vhost);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfApplicationsAppIdVhostsFavourite_0Test() throws ApiException {
        String appId = null;
        Vhost vhost = null;
        api.putSelfApplicationsAppIdVhostsFavourite_0(appId, vhost);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfApplicationsAppId_0Test() throws ApiException {
        String appId = null;
        WannabeApplication wannabeApplication = null;
        api.putSelfApplicationsAppId_0(appId, wannabeApplication);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfApplicationsAppIdBranchPut_0Test() throws ApiException {
        String appId = null;
        api.selfApplicationsAppIdBranchPut_0(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfApplicationsAppIdBranchesGet_0Test() throws ApiException {
        String appId = null;
        api.selfApplicationsAppIdBranchesGet_0(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfApplicationsAppIdBuildflavorPut_0Test() throws ApiException {
        String appId = null;
        api.selfApplicationsAppIdBuildflavorPut_0(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfApplicationsAppIdDependenciesEnvGet_0Test() throws ApiException {
        String appId = null;
        List<LinkedAppEnv> response = api.selfApplicationsAppIdDependenciesEnvGet_0(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfApplicationsAppIdDeploymentsDeploymentIdGet_0Test() throws ApiException {
        String appId = null;
        String deploymentId = null;
        api.selfApplicationsAppIdDeploymentsDeploymentIdGet_0(appId, deploymentId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfApplicationsAppIdExposedEnvGet_0Test() throws ApiException {
        String appId = null;
        api.selfApplicationsAppIdExposedEnvGet_0(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfApplicationsAppIdExposedEnvPut_0Test() throws ApiException {
        String appId = null;
        api.selfApplicationsAppIdExposedEnvPut_0(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfApplicationsAppIdInstancesInstanceIdGet_0Test() throws ApiException {
        String instanceId = null;
        String appId = null;
        api.selfApplicationsAppIdInstancesInstanceIdGet_0(instanceId, appId);
        // TODO: test validations
    }

}
