/*
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Country;
import org.openapitools.client.model.Instance;
import org.openapitools.client.model.Provider;
import org.openapitools.client.model.Zone;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductsApi
 */
@Disabled
public class ProductsApiTest {

    private final ProductsApi api = new ProductsApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProductsAddonProvidersProviderId_0Test() throws ApiException {
        String providerId = null;
        Provider response = api.getProductsAddonProvidersProviderId_0(providerId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProductsAddonProviders_0Test() throws ApiException {
        List<Provider> response = api.getProductsAddonProviders_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProductsCountries_0Test() throws ApiException {
        Country response = api.getProductsCountries_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProductsCountrycodes_0Test() throws ApiException {
        Country response = api.getProductsCountrycodes_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProductsInstancesTypeVersion_0Test() throws ApiException {
        String type = null;
        String version = null;
        String _for = null;
        String app = null;
        Instance response = api.getProductsInstancesTypeVersion_0(type, version, _for, app);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProductsInstances_0Test() throws ApiException {
        String _for = null;
        List<Instance> response = api.getProductsInstances_0(_for);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProductsPackages_0Test() throws ApiException {
        String coupon = null;
        String orgaId = null;
        String currency = null;
        api.getProductsPackages_0(coupon, orgaId, currency);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProductsPrices_0Test() throws ApiException {
        api.getProductsPrices_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProductsZones_0Test() throws ApiException {
        List<Zone> response = api.getProductsZones_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productsAddonprovidersProviderIdVersionsGet_0Test() throws ApiException {
        String providerId = null;
        api.productsAddonprovidersProviderIdVersionsGet_0(providerId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productsMfaKindsGet_0Test() throws ApiException {
        api.productsMfaKindsGet_0();
        // TODO: test validations
    }

}
