/*
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Addon;
import org.openapitools.client.model.AddonMigration;
import org.openapitools.client.model.Application;
import org.openapitools.client.model.Body;
import org.openapitools.client.model.Env;
import org.openapitools.client.model.ListEnv;
import org.openapitools.client.model.OrganisationsIdAddonsAddonIdMigrationsPostRequest;
import org.openapitools.client.model.Sso;
import org.openapitools.client.model.SupernovaInstanceView;
import org.openapitools.client.model.WannabeAddon;
import org.openapitools.client.model.WannabePlan;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AddonsApi
 */
@Disabled
public class AddonsApiTest {

    private final AddonsApi api = new AddonsApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganisationsIdAddonsAddonIdTagsTag_0Test() throws ApiException {
        String id = null;
        String tag = null;
        String addonId = null;
        api.deleteOrganisationsIdAddonsAddonIdTagsTag_0(id, tag, addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganisationsIdAddonsAddonId_0Test() throws ApiException {
        String id = null;
        String addonId = null;
        api.deleteOrganisationsIdAddonsAddonId_0(id, addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganisationsIdApplicationsAppIdAddonsAddonId_0Test() throws ApiException {
        String id = null;
        String appId = null;
        String addonId = null;
        api.deleteOrganisationsIdApplicationsAppIdAddonsAddonId_0(id, appId, addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfAddonsAddonIdTagsTag_0Test() throws ApiException {
        String tag = null;
        String addonId = null;
        api.deleteSelfAddonsAddonIdTagsTag_0(tag, addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfAddonsAddonId_0Test() throws ApiException {
        String addonId = null;
        api.deleteSelfAddonsAddonId_0(addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSelfApplicationsAppIdAddonsAddonId_0Test() throws ApiException {
        String appId = null;
        String addonId = null;
        api.deleteSelfApplicationsAppIdAddonsAddonId_0(appId, addonId);
        // TODO: test validations
    }

    /**
     * Get provider&#39;s addon environment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConfigProviderEnv_0Test() throws ApiException {
        String configurationProviderId = null;
        String body = null;
        List<Object> response = api.getConfigProviderEnv_0(configurationProviderId, body);
        // TODO: test validations
    }

    /**
     * Get Addon provider configuration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConfigProvider_0Test() throws ApiException {
        String configurationProviderId = null;
        String body = null;
        Object response = api.getConfigProvider_0(configurationProviderId, body);
        // TODO: test validations
    }

    /**
     * Get Matomo addon
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMatomo_0Test() throws ApiException {
        String matomoId = null;
        String body = null;
        Object response = api.getMatomo_0(matomoId, body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdAddonsAddonIdApplications_0Test() throws ApiException {
        String id = null;
        String addonId = null;
        List<Application> response = api.getOrganisationsIdAddonsAddonIdApplications_0(id, addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdAddonsAddonIdEnv_0Test() throws ApiException {
        String id = null;
        String addonId = null;
        List<ListEnv> response = api.getOrganisationsIdAddonsAddonIdEnv_0(id, addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdAddonsAddonIdTags_0Test() throws ApiException {
        String id = null;
        String addonId = null;
        List<String> response = api.getOrganisationsIdAddonsAddonIdTags_0(id, addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdAddonsAddonId_0Test() throws ApiException {
        String id = null;
        String addonId = null;
        Addon response = api.getOrganisationsIdAddonsAddonId_0(id, addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdAddons_0Test() throws ApiException {
        String id = null;
        List<Addon> response = api.getOrganisationsIdAddons_0(id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdApplicationsAppIdAddonsEnv_0Test() throws ApiException {
        String id = null;
        String appId = null;
        List<Env> response = api.getOrganisationsIdApplicationsAppIdAddonsEnv_0(id, appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisationsIdApplicationsAppIdAddons_0Test() throws ApiException {
        String id = null;
        String appId = null;
        List<Addon> response = api.getOrganisationsIdApplicationsAppIdAddons_0(id, appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfAddonsAddonIdApplications_0Test() throws ApiException {
        String addonId = null;
        List<Application> response = api.getSelfAddonsAddonIdApplications_0(addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfAddonsAddonIdEnv_0Test() throws ApiException {
        String addonId = null;
        List<ListEnv> response = api.getSelfAddonsAddonIdEnv_0(addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfAddonsAddonIdSso_0Test() throws ApiException {
        String addonId = null;
        Sso response = api.getSelfAddonsAddonIdSso_0(addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfAddonsAddonIdTags_0Test() throws ApiException {
        String addonId = null;
        List<String> response = api.getSelfAddonsAddonIdTags_0(addonId);
        // TODO: test validations
    }

    /**
     * Specific addon
     *
     * Get a specific addon
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfAddonsAddonId_0Test() throws ApiException {
        String addonId = null;
        Addon response = api.getSelfAddonsAddonId_0(addonId);
        // TODO: test validations
    }

    /**
     * Addon
     *
     * Get all the addons
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfAddons_0Test() throws ApiException {
        List<Addon> response = api.getSelfAddons_0();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdAddonsEnv_0Test() throws ApiException {
        String appId = null;
        List<Env> response = api.getSelfApplicationsAppIdAddonsEnv_0(appId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfApplicationsAppIdAddons_0Test() throws ApiException {
        String appId = null;
        List<Addon> response = api.getSelfApplicationsAppIdAddons_0(appId);
        // TODO: test validations
    }

    /**
     * List instances for this add-on.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organisationsIdAddonsAddonIdInstancesGet_0Test() throws ApiException {
        String id = null;
        String addonId = null;
        String deploymentId = null;
        String withDeleted = null;
        List<SupernovaInstanceView> response = api.organisationsIdAddonsAddonIdInstancesGet_0(id, addonId, deploymentId, withDeleted);
        // TODO: test validations
    }

    /**
     * Get a specific instance for {addonId}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organisationsIdAddonsAddonIdInstancesInstanceIdGet_0Test() throws ApiException {
        String instanceId = null;
        String id = null;
        String addonId = null;
        SupernovaInstanceView response = api.organisationsIdAddonsAddonIdInstancesInstanceIdGet_0(instanceId, id, addonId);
        // TODO: test validations
    }

    /**
     * Get past migrations from add-on.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organisationsIdAddonsAddonIdMigrationsGet_0Test() throws ApiException {
        String id = null;
        String addonId = null;
        List<AddonMigration> response = api.organisationsIdAddonsAddonIdMigrationsGet_0(id, addonId);
        // TODO: test validations
    }

    /**
     * Get a given migration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organisationsIdAddonsAddonIdMigrationsMigrationIdGet_0Test() throws ApiException {
        String migrationId = null;
        String id = null;
        String addonId = null;
        AddonMigration response = api.organisationsIdAddonsAddonIdMigrationsMigrationIdGet_0(migrationId, id, addonId);
        // TODO: test validations
    }

    /**
     * Start a new add-on migration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organisationsIdAddonsAddonIdMigrationsPost_0Test() throws ApiException {
        String id = null;
        String addonId = null;
        OrganisationsIdAddonsAddonIdMigrationsPostRequest organisationsIdAddonsAddonIdMigrationsPostRequest = null;
        Object response = api.organisationsIdAddonsAddonIdMigrationsPost_0(id, addonId, organisationsIdAddonsAddonIdMigrationsPostRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organisationsIdAddonsAddonIdSsoGet_0Test() throws ApiException {
        String id = null;
        String addonId = null;
        Sso response = api.organisationsIdAddonsAddonIdSsoGet_0(id, addonId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organisationsIdAddonsPreordersPost_0Test() throws ApiException {
        String id = null;
        WannabeAddon wannabeAddon = null;
        api.organisationsIdAddonsPreordersPost_0(id, wannabeAddon);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postOrganisationsIdAddons_0Test() throws ApiException {
        String id = null;
        WannabeAddon wannabeAddon = null;
        Addon response = api.postOrganisationsIdAddons_0(id, wannabeAddon);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postOrganisationsIdApplicationsAppIdAddons_0Test() throws ApiException {
        String id = null;
        String appId = null;
        Body body = null;
        api.postOrganisationsIdApplicationsAppIdAddons_0(id, appId, body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postSelfAddons_0Test() throws ApiException {
        WannabeAddon wannabeAddon = null;
        api.postSelfAddons_0(wannabeAddon);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postSelfApplicationsAppIdAddons_0Test() throws ApiException {
        String appId = null;
        Body body = null;
        api.postSelfApplicationsAppIdAddons_0(appId, body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putOrganisationsIdAddonsAddonIdTagsTag_0Test() throws ApiException {
        String id = null;
        String tag = null;
        String addonId = null;
        Body body = null;
        api.putOrganisationsIdAddonsAddonIdTagsTag_0(id, tag, addonId, body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putOrganisationsIdAddonsAddonId_0Test() throws ApiException {
        String id = null;
        String addonId = null;
        WannabeAddon wannabeAddon = null;
        Addon response = api.putOrganisationsIdAddonsAddonId_0(id, addonId, wannabeAddon);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfAddonsAddonIdPlan_0Test() throws ApiException {
        String addonId = null;
        WannabePlan wannabePlan = null;
        api.putSelfAddonsAddonIdPlan_0(addonId, wannabePlan);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfAddonsAddonIdTagsTag_0Test() throws ApiException {
        String tag = null;
        String addonId = null;
        Body body = null;
        api.putSelfAddonsAddonIdTagsTag_0(tag, addonId, body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putSelfAddonsAddonId_0Test() throws ApiException {
        String addonId = null;
        WannabeAddon wannabeAddon = null;
        api.putSelfAddonsAddonId_0(addonId, wannabeAddon);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void selfAddonsPreordersPost_0Test() throws ApiException {
        WannabeAddon wannabeAddon = null;
        api.selfAddonsPreordersPost_0(wannabeAddon);
        // TODO: test validations
    }

    /**
     * Update provider&#39;s addon environment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateConfigProviderEnv_0Test() throws ApiException {
        String configurationProviderId = null;
        List<Object> requestBody = null;
        List<Object> response = api.updateConfigProviderEnv_0(configurationProviderId, requestBody);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vendorAddonsPost_0Test() throws ApiException {
        api.vendorAddonsPost_0();
        // TODO: test validations
    }

}
