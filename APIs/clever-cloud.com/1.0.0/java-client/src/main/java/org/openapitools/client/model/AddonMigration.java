/*
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AddonMigration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:56:19.318125-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AddonMigration {
  public static final String SERIALIZED_NAME_ADDON_ID = "addon_id";
  @SerializedName(SERIALIZED_NAME_ADDON_ID)
  private String addonId;

  public static final String SERIALIZED_NAME_CALLBACK_URL = "callback_url";
  @SerializedName(SERIALIZED_NAME_CALLBACK_URL)
  private String callbackUrl;

  public static final String SERIALIZED_NAME_DATABASE = "database";
  @SerializedName(SERIALIZED_NAME_DATABASE)
  private String database;

  public static final String SERIALIZED_NAME_DATABASE_USER = "database_user";
  @SerializedName(SERIALIZED_NAME_DATABASE_USER)
  private String databaseUser;

  public static final String SERIALIZED_NAME_DUMP_RESTORE_FINISHED_DATE = "dump_restore_finished_date";
  @SerializedName(SERIALIZED_NAME_DUMP_RESTORE_FINISHED_DATE)
  private String dumpRestoreFinishedDate;

  public static final String SERIALIZED_NAME_DUMP_RESTORE_START_DATE = "dump_restore_start_date";
  @SerializedName(SERIALIZED_NAME_DUMP_RESTORE_START_DATE)
  private String dumpRestoreStartDate;

  public static final String SERIALIZED_NAME_END_DATE = "end_date";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  public static final String SERIALIZED_NAME_EXIT_MESSAGE = "exit_message";
  @SerializedName(SERIALIZED_NAME_EXIT_MESSAGE)
  private String exitMessage;

  public static final String SERIALIZED_NAME_HOSTNAME = "hostname";
  @SerializedName(SERIALIZED_NAME_HOSTNAME)
  private String hostname;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public static final String SERIALIZED_NAME_LAST_STATE_UPDATE_DATE = "last_state_update_date";
  @SerializedName(SERIALIZED_NAME_LAST_STATE_UPDATE_DATE)
  private String lastStateUpdateDate;

  public static final String SERIALIZED_NAME_NEW_CLUSTER_ID = "new_cluster_id";
  @SerializedName(SERIALIZED_NAME_NEW_CLUSTER_ID)
  private String newClusterId;

  public static final String SERIALIZED_NAME_NEW_CLUSTER_LABEL = "new_cluster_label";
  @SerializedName(SERIALIZED_NAME_NEW_CLUSTER_LABEL)
  private String newClusterLabel;

  public static final String SERIALIZED_NAME_NEW_INSTANCE_ID = "new_instance_id";
  @SerializedName(SERIALIZED_NAME_NEW_INSTANCE_ID)
  private String newInstanceId;

  public static final String SERIALIZED_NAME_NEW_PLAN = "new_plan";
  @SerializedName(SERIALIZED_NAME_NEW_PLAN)
  private String newPlan;

  public static final String SERIALIZED_NAME_NEW_RECIPIENT_HOSTNAME = "new_recipient_hostname";
  @SerializedName(SERIALIZED_NAME_NEW_RECIPIENT_HOSTNAME)
  private String newRecipientHostname;

  public static final String SERIALIZED_NAME_NEW_ZONE = "new_zone";
  @SerializedName(SERIALIZED_NAME_NEW_ZONE)
  private String newZone;

  public static final String SERIALIZED_NAME_OLD_CLUSTER_ID = "old_cluster_id";
  @SerializedName(SERIALIZED_NAME_OLD_CLUSTER_ID)
  private String oldClusterId;

  public static final String SERIALIZED_NAME_OLD_CLUSTER_LABEL = "old_cluster_label";
  @SerializedName(SERIALIZED_NAME_OLD_CLUSTER_LABEL)
  private String oldClusterLabel;

  public static final String SERIALIZED_NAME_OLD_INSTANCE_ID = "old_instance_id";
  @SerializedName(SERIALIZED_NAME_OLD_INSTANCE_ID)
  private String oldInstanceId;

  public static final String SERIALIZED_NAME_OLD_PLAN = "old_plan";
  @SerializedName(SERIALIZED_NAME_OLD_PLAN)
  private String oldPlan;

  public static final String SERIALIZED_NAME_OLD_RECIPIENT_HOSTNAME = "old_recipient_hostname";
  @SerializedName(SERIALIZED_NAME_OLD_RECIPIENT_HOSTNAME)
  private String oldRecipientHostname;

  public static final String SERIALIZED_NAME_OLD_ZONE = "old_zone";
  @SerializedName(SERIALIZED_NAME_OLD_ZONE)
  private String oldZone;

  public static final String SERIALIZED_NAME_PORT = "port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private BigDecimal port;

  public static final String SERIALIZED_NAME_REQUEST_DATE = "request_date";
  @SerializedName(SERIALIZED_NAME_REQUEST_DATE)
  private String requestDate;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public AddonMigration() {
  }

  public AddonMigration addonId(String addonId) {
    this.addonId = addonId;
    return this;
  }

  /**
   * Get addonId
   * @return addonId
   */
  @javax.annotation.Nullable
  public String getAddonId() {
    return addonId;
  }

  public void setAddonId(String addonId) {
    this.addonId = addonId;
  }


  public AddonMigration callbackUrl(String callbackUrl) {
    this.callbackUrl = callbackUrl;
    return this;
  }

  /**
   * Get callbackUrl
   * @return callbackUrl
   */
  @javax.annotation.Nullable
  public String getCallbackUrl() {
    return callbackUrl;
  }

  public void setCallbackUrl(String callbackUrl) {
    this.callbackUrl = callbackUrl;
  }


  public AddonMigration database(String database) {
    this.database = database;
    return this;
  }

  /**
   * Get database
   * @return database
   */
  @javax.annotation.Nullable
  public String getDatabase() {
    return database;
  }

  public void setDatabase(String database) {
    this.database = database;
  }


  public AddonMigration databaseUser(String databaseUser) {
    this.databaseUser = databaseUser;
    return this;
  }

  /**
   * Get databaseUser
   * @return databaseUser
   */
  @javax.annotation.Nullable
  public String getDatabaseUser() {
    return databaseUser;
  }

  public void setDatabaseUser(String databaseUser) {
    this.databaseUser = databaseUser;
  }


  public AddonMigration dumpRestoreFinishedDate(String dumpRestoreFinishedDate) {
    this.dumpRestoreFinishedDate = dumpRestoreFinishedDate;
    return this;
  }

  /**
   * Get dumpRestoreFinishedDate
   * @return dumpRestoreFinishedDate
   */
  @javax.annotation.Nullable
  public String getDumpRestoreFinishedDate() {
    return dumpRestoreFinishedDate;
  }

  public void setDumpRestoreFinishedDate(String dumpRestoreFinishedDate) {
    this.dumpRestoreFinishedDate = dumpRestoreFinishedDate;
  }


  public AddonMigration dumpRestoreStartDate(String dumpRestoreStartDate) {
    this.dumpRestoreStartDate = dumpRestoreStartDate;
    return this;
  }

  /**
   * Get dumpRestoreStartDate
   * @return dumpRestoreStartDate
   */
  @javax.annotation.Nullable
  public String getDumpRestoreStartDate() {
    return dumpRestoreStartDate;
  }

  public void setDumpRestoreStartDate(String dumpRestoreStartDate) {
    this.dumpRestoreStartDate = dumpRestoreStartDate;
  }


  public AddonMigration endDate(String endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Get endDate
   * @return endDate
   */
  @javax.annotation.Nullable
  public String getEndDate() {
    return endDate;
  }

  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }


  public AddonMigration exitMessage(String exitMessage) {
    this.exitMessage = exitMessage;
    return this;
  }

  /**
   * Get exitMessage
   * @return exitMessage
   */
  @javax.annotation.Nullable
  public String getExitMessage() {
    return exitMessage;
  }

  public void setExitMessage(String exitMessage) {
    this.exitMessage = exitMessage;
  }


  public AddonMigration hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

  /**
   * Get hostname
   * @return hostname
   */
  @javax.annotation.Nullable
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }


  public AddonMigration id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public AddonMigration kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Get kind
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public AddonMigration lastStateUpdateDate(String lastStateUpdateDate) {
    this.lastStateUpdateDate = lastStateUpdateDate;
    return this;
  }

  /**
   * Get lastStateUpdateDate
   * @return lastStateUpdateDate
   */
  @javax.annotation.Nullable
  public String getLastStateUpdateDate() {
    return lastStateUpdateDate;
  }

  public void setLastStateUpdateDate(String lastStateUpdateDate) {
    this.lastStateUpdateDate = lastStateUpdateDate;
  }


  public AddonMigration newClusterId(String newClusterId) {
    this.newClusterId = newClusterId;
    return this;
  }

  /**
   * Get newClusterId
   * @return newClusterId
   */
  @javax.annotation.Nullable
  public String getNewClusterId() {
    return newClusterId;
  }

  public void setNewClusterId(String newClusterId) {
    this.newClusterId = newClusterId;
  }


  public AddonMigration newClusterLabel(String newClusterLabel) {
    this.newClusterLabel = newClusterLabel;
    return this;
  }

  /**
   * Get newClusterLabel
   * @return newClusterLabel
   */
  @javax.annotation.Nullable
  public String getNewClusterLabel() {
    return newClusterLabel;
  }

  public void setNewClusterLabel(String newClusterLabel) {
    this.newClusterLabel = newClusterLabel;
  }


  public AddonMigration newInstanceId(String newInstanceId) {
    this.newInstanceId = newInstanceId;
    return this;
  }

  /**
   * Get newInstanceId
   * @return newInstanceId
   */
  @javax.annotation.Nullable
  public String getNewInstanceId() {
    return newInstanceId;
  }

  public void setNewInstanceId(String newInstanceId) {
    this.newInstanceId = newInstanceId;
  }


  public AddonMigration newPlan(String newPlan) {
    this.newPlan = newPlan;
    return this;
  }

  /**
   * Get newPlan
   * @return newPlan
   */
  @javax.annotation.Nullable
  public String getNewPlan() {
    return newPlan;
  }

  public void setNewPlan(String newPlan) {
    this.newPlan = newPlan;
  }


  public AddonMigration newRecipientHostname(String newRecipientHostname) {
    this.newRecipientHostname = newRecipientHostname;
    return this;
  }

  /**
   * Get newRecipientHostname
   * @return newRecipientHostname
   */
  @javax.annotation.Nullable
  public String getNewRecipientHostname() {
    return newRecipientHostname;
  }

  public void setNewRecipientHostname(String newRecipientHostname) {
    this.newRecipientHostname = newRecipientHostname;
  }


  public AddonMigration newZone(String newZone) {
    this.newZone = newZone;
    return this;
  }

  /**
   * Get newZone
   * @return newZone
   */
  @javax.annotation.Nullable
  public String getNewZone() {
    return newZone;
  }

  public void setNewZone(String newZone) {
    this.newZone = newZone;
  }


  public AddonMigration oldClusterId(String oldClusterId) {
    this.oldClusterId = oldClusterId;
    return this;
  }

  /**
   * Get oldClusterId
   * @return oldClusterId
   */
  @javax.annotation.Nullable
  public String getOldClusterId() {
    return oldClusterId;
  }

  public void setOldClusterId(String oldClusterId) {
    this.oldClusterId = oldClusterId;
  }


  public AddonMigration oldClusterLabel(String oldClusterLabel) {
    this.oldClusterLabel = oldClusterLabel;
    return this;
  }

  /**
   * Get oldClusterLabel
   * @return oldClusterLabel
   */
  @javax.annotation.Nullable
  public String getOldClusterLabel() {
    return oldClusterLabel;
  }

  public void setOldClusterLabel(String oldClusterLabel) {
    this.oldClusterLabel = oldClusterLabel;
  }


  public AddonMigration oldInstanceId(String oldInstanceId) {
    this.oldInstanceId = oldInstanceId;
    return this;
  }

  /**
   * Get oldInstanceId
   * @return oldInstanceId
   */
  @javax.annotation.Nullable
  public String getOldInstanceId() {
    return oldInstanceId;
  }

  public void setOldInstanceId(String oldInstanceId) {
    this.oldInstanceId = oldInstanceId;
  }


  public AddonMigration oldPlan(String oldPlan) {
    this.oldPlan = oldPlan;
    return this;
  }

  /**
   * Get oldPlan
   * @return oldPlan
   */
  @javax.annotation.Nullable
  public String getOldPlan() {
    return oldPlan;
  }

  public void setOldPlan(String oldPlan) {
    this.oldPlan = oldPlan;
  }


  public AddonMigration oldRecipientHostname(String oldRecipientHostname) {
    this.oldRecipientHostname = oldRecipientHostname;
    return this;
  }

  /**
   * Get oldRecipientHostname
   * @return oldRecipientHostname
   */
  @javax.annotation.Nullable
  public String getOldRecipientHostname() {
    return oldRecipientHostname;
  }

  public void setOldRecipientHostname(String oldRecipientHostname) {
    this.oldRecipientHostname = oldRecipientHostname;
  }


  public AddonMigration oldZone(String oldZone) {
    this.oldZone = oldZone;
    return this;
  }

  /**
   * Get oldZone
   * @return oldZone
   */
  @javax.annotation.Nullable
  public String getOldZone() {
    return oldZone;
  }

  public void setOldZone(String oldZone) {
    this.oldZone = oldZone;
  }


  public AddonMigration port(BigDecimal port) {
    this.port = port;
    return this;
  }

  /**
   * Get port
   * @return port
   */
  @javax.annotation.Nullable
  public BigDecimal getPort() {
    return port;
  }

  public void setPort(BigDecimal port) {
    this.port = port;
  }


  public AddonMigration requestDate(String requestDate) {
    this.requestDate = requestDate;
    return this;
  }

  /**
   * Get requestDate
   * @return requestDate
   */
  @javax.annotation.Nullable
  public String getRequestDate() {
    return requestDate;
  }

  public void setRequestDate(String requestDate) {
    this.requestDate = requestDate;
  }


  public AddonMigration state(String state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddonMigration addonMigration = (AddonMigration) o;
    return Objects.equals(this.addonId, addonMigration.addonId) &&
        Objects.equals(this.callbackUrl, addonMigration.callbackUrl) &&
        Objects.equals(this.database, addonMigration.database) &&
        Objects.equals(this.databaseUser, addonMigration.databaseUser) &&
        Objects.equals(this.dumpRestoreFinishedDate, addonMigration.dumpRestoreFinishedDate) &&
        Objects.equals(this.dumpRestoreStartDate, addonMigration.dumpRestoreStartDate) &&
        Objects.equals(this.endDate, addonMigration.endDate) &&
        Objects.equals(this.exitMessage, addonMigration.exitMessage) &&
        Objects.equals(this.hostname, addonMigration.hostname) &&
        Objects.equals(this.id, addonMigration.id) &&
        Objects.equals(this.kind, addonMigration.kind) &&
        Objects.equals(this.lastStateUpdateDate, addonMigration.lastStateUpdateDate) &&
        Objects.equals(this.newClusterId, addonMigration.newClusterId) &&
        Objects.equals(this.newClusterLabel, addonMigration.newClusterLabel) &&
        Objects.equals(this.newInstanceId, addonMigration.newInstanceId) &&
        Objects.equals(this.newPlan, addonMigration.newPlan) &&
        Objects.equals(this.newRecipientHostname, addonMigration.newRecipientHostname) &&
        Objects.equals(this.newZone, addonMigration.newZone) &&
        Objects.equals(this.oldClusterId, addonMigration.oldClusterId) &&
        Objects.equals(this.oldClusterLabel, addonMigration.oldClusterLabel) &&
        Objects.equals(this.oldInstanceId, addonMigration.oldInstanceId) &&
        Objects.equals(this.oldPlan, addonMigration.oldPlan) &&
        Objects.equals(this.oldRecipientHostname, addonMigration.oldRecipientHostname) &&
        Objects.equals(this.oldZone, addonMigration.oldZone) &&
        Objects.equals(this.port, addonMigration.port) &&
        Objects.equals(this.requestDate, addonMigration.requestDate) &&
        Objects.equals(this.state, addonMigration.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addonId, callbackUrl, database, databaseUser, dumpRestoreFinishedDate, dumpRestoreStartDate, endDate, exitMessage, hostname, id, kind, lastStateUpdateDate, newClusterId, newClusterLabel, newInstanceId, newPlan, newRecipientHostname, newZone, oldClusterId, oldClusterLabel, oldInstanceId, oldPlan, oldRecipientHostname, oldZone, port, requestDate, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddonMigration {\n");
    sb.append("    addonId: ").append(toIndentedString(addonId)).append("\n");
    sb.append("    callbackUrl: ").append(toIndentedString(callbackUrl)).append("\n");
    sb.append("    database: ").append(toIndentedString(database)).append("\n");
    sb.append("    databaseUser: ").append(toIndentedString(databaseUser)).append("\n");
    sb.append("    dumpRestoreFinishedDate: ").append(toIndentedString(dumpRestoreFinishedDate)).append("\n");
    sb.append("    dumpRestoreStartDate: ").append(toIndentedString(dumpRestoreStartDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    exitMessage: ").append(toIndentedString(exitMessage)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    lastStateUpdateDate: ").append(toIndentedString(lastStateUpdateDate)).append("\n");
    sb.append("    newClusterId: ").append(toIndentedString(newClusterId)).append("\n");
    sb.append("    newClusterLabel: ").append(toIndentedString(newClusterLabel)).append("\n");
    sb.append("    newInstanceId: ").append(toIndentedString(newInstanceId)).append("\n");
    sb.append("    newPlan: ").append(toIndentedString(newPlan)).append("\n");
    sb.append("    newRecipientHostname: ").append(toIndentedString(newRecipientHostname)).append("\n");
    sb.append("    newZone: ").append(toIndentedString(newZone)).append("\n");
    sb.append("    oldClusterId: ").append(toIndentedString(oldClusterId)).append("\n");
    sb.append("    oldClusterLabel: ").append(toIndentedString(oldClusterLabel)).append("\n");
    sb.append("    oldInstanceId: ").append(toIndentedString(oldInstanceId)).append("\n");
    sb.append("    oldPlan: ").append(toIndentedString(oldPlan)).append("\n");
    sb.append("    oldRecipientHostname: ").append(toIndentedString(oldRecipientHostname)).append("\n");
    sb.append("    oldZone: ").append(toIndentedString(oldZone)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    requestDate: ").append(toIndentedString(requestDate)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addon_id");
    openapiFields.add("callback_url");
    openapiFields.add("database");
    openapiFields.add("database_user");
    openapiFields.add("dump_restore_finished_date");
    openapiFields.add("dump_restore_start_date");
    openapiFields.add("end_date");
    openapiFields.add("exit_message");
    openapiFields.add("hostname");
    openapiFields.add("id");
    openapiFields.add("kind");
    openapiFields.add("last_state_update_date");
    openapiFields.add("new_cluster_id");
    openapiFields.add("new_cluster_label");
    openapiFields.add("new_instance_id");
    openapiFields.add("new_plan");
    openapiFields.add("new_recipient_hostname");
    openapiFields.add("new_zone");
    openapiFields.add("old_cluster_id");
    openapiFields.add("old_cluster_label");
    openapiFields.add("old_instance_id");
    openapiFields.add("old_plan");
    openapiFields.add("old_recipient_hostname");
    openapiFields.add("old_zone");
    openapiFields.add("port");
    openapiFields.add("request_date");
    openapiFields.add("state");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AddonMigration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AddonMigration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AddonMigration is not found in the empty JSON string", AddonMigration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AddonMigration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AddonMigration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("addon_id") != null && !jsonObj.get("addon_id").isJsonNull()) && !jsonObj.get("addon_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addon_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addon_id").toString()));
      }
      if ((jsonObj.get("callback_url") != null && !jsonObj.get("callback_url").isJsonNull()) && !jsonObj.get("callback_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `callback_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("callback_url").toString()));
      }
      if ((jsonObj.get("database") != null && !jsonObj.get("database").isJsonNull()) && !jsonObj.get("database").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `database` to be a primitive type in the JSON string but got `%s`", jsonObj.get("database").toString()));
      }
      if ((jsonObj.get("database_user") != null && !jsonObj.get("database_user").isJsonNull()) && !jsonObj.get("database_user").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `database_user` to be a primitive type in the JSON string but got `%s`", jsonObj.get("database_user").toString()));
      }
      if ((jsonObj.get("dump_restore_finished_date") != null && !jsonObj.get("dump_restore_finished_date").isJsonNull()) && !jsonObj.get("dump_restore_finished_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dump_restore_finished_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dump_restore_finished_date").toString()));
      }
      if ((jsonObj.get("dump_restore_start_date") != null && !jsonObj.get("dump_restore_start_date").isJsonNull()) && !jsonObj.get("dump_restore_start_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dump_restore_start_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dump_restore_start_date").toString()));
      }
      if ((jsonObj.get("end_date") != null && !jsonObj.get("end_date").isJsonNull()) && !jsonObj.get("end_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `end_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("end_date").toString()));
      }
      if ((jsonObj.get("exit_message") != null && !jsonObj.get("exit_message").isJsonNull()) && !jsonObj.get("exit_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `exit_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("exit_message").toString()));
      }
      if ((jsonObj.get("hostname") != null && !jsonObj.get("hostname").isJsonNull()) && !jsonObj.get("hostname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hostname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hostname").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      if ((jsonObj.get("last_state_update_date") != null && !jsonObj.get("last_state_update_date").isJsonNull()) && !jsonObj.get("last_state_update_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_state_update_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_state_update_date").toString()));
      }
      if ((jsonObj.get("new_cluster_id") != null && !jsonObj.get("new_cluster_id").isJsonNull()) && !jsonObj.get("new_cluster_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `new_cluster_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("new_cluster_id").toString()));
      }
      if ((jsonObj.get("new_cluster_label") != null && !jsonObj.get("new_cluster_label").isJsonNull()) && !jsonObj.get("new_cluster_label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `new_cluster_label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("new_cluster_label").toString()));
      }
      if ((jsonObj.get("new_instance_id") != null && !jsonObj.get("new_instance_id").isJsonNull()) && !jsonObj.get("new_instance_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `new_instance_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("new_instance_id").toString()));
      }
      if ((jsonObj.get("new_plan") != null && !jsonObj.get("new_plan").isJsonNull()) && !jsonObj.get("new_plan").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `new_plan` to be a primitive type in the JSON string but got `%s`", jsonObj.get("new_plan").toString()));
      }
      if ((jsonObj.get("new_recipient_hostname") != null && !jsonObj.get("new_recipient_hostname").isJsonNull()) && !jsonObj.get("new_recipient_hostname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `new_recipient_hostname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("new_recipient_hostname").toString()));
      }
      if ((jsonObj.get("new_zone") != null && !jsonObj.get("new_zone").isJsonNull()) && !jsonObj.get("new_zone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `new_zone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("new_zone").toString()));
      }
      if ((jsonObj.get("old_cluster_id") != null && !jsonObj.get("old_cluster_id").isJsonNull()) && !jsonObj.get("old_cluster_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `old_cluster_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("old_cluster_id").toString()));
      }
      if ((jsonObj.get("old_cluster_label") != null && !jsonObj.get("old_cluster_label").isJsonNull()) && !jsonObj.get("old_cluster_label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `old_cluster_label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("old_cluster_label").toString()));
      }
      if ((jsonObj.get("old_instance_id") != null && !jsonObj.get("old_instance_id").isJsonNull()) && !jsonObj.get("old_instance_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `old_instance_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("old_instance_id").toString()));
      }
      if ((jsonObj.get("old_plan") != null && !jsonObj.get("old_plan").isJsonNull()) && !jsonObj.get("old_plan").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `old_plan` to be a primitive type in the JSON string but got `%s`", jsonObj.get("old_plan").toString()));
      }
      if ((jsonObj.get("old_recipient_hostname") != null && !jsonObj.get("old_recipient_hostname").isJsonNull()) && !jsonObj.get("old_recipient_hostname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `old_recipient_hostname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("old_recipient_hostname").toString()));
      }
      if ((jsonObj.get("old_zone") != null && !jsonObj.get("old_zone").isJsonNull()) && !jsonObj.get("old_zone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `old_zone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("old_zone").toString()));
      }
      if ((jsonObj.get("request_date") != null && !jsonObj.get("request_date").isJsonNull()) && !jsonObj.get("request_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `request_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("request_date").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AddonMigration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AddonMigration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AddonMigration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AddonMigration.class));

       return (TypeAdapter<T>) new TypeAdapter<AddonMigration>() {
           @Override
           public void write(JsonWriter out, AddonMigration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AddonMigration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AddonMigration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AddonMigration
   * @throws IOException if the JSON string is invalid with respect to AddonMigration
   */
  public static AddonMigration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AddonMigration.class);
  }

  /**
   * Convert an instance of AddonMigration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

