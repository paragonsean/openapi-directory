/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWannabeConsumer_rights.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWannabeConsumer_rights::OAIWannabeConsumer_rights(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWannabeConsumer_rights::OAIWannabeConsumer_rights() {
    this->initializeModel();
}

OAIWannabeConsumer_rights::~OAIWannabeConsumer_rights() {}

void OAIWannabeConsumer_rights::initializeModel() {

    m_activated_isSet = false;
    m_activated_isValid = false;

    m_right_isSet = false;
    m_right_isValid = false;
}

void OAIWannabeConsumer_rights::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWannabeConsumer_rights::fromJsonObject(QJsonObject json) {

    m_activated_isValid = ::OpenAPI::fromJsonValue(m_activated, json[QString("activated")]);
    m_activated_isSet = !json[QString("activated")].isNull() && m_activated_isValid;

    m_right_isValid = ::OpenAPI::fromJsonValue(m_right, json[QString("right")]);
    m_right_isSet = !json[QString("right")].isNull() && m_right_isValid;
}

QString OAIWannabeConsumer_rights::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWannabeConsumer_rights::asJsonObject() const {
    QJsonObject obj;
    if (m_activated_isSet) {
        obj.insert(QString("activated"), ::OpenAPI::toJsonValue(m_activated));
    }
    if (m_right_isSet) {
        obj.insert(QString("right"), ::OpenAPI::toJsonValue(m_right));
    }
    return obj;
}

bool OAIWannabeConsumer_rights::isActivated() const {
    return m_activated;
}
void OAIWannabeConsumer_rights::setActivated(const bool &activated) {
    m_activated = activated;
    m_activated_isSet = true;
}

bool OAIWannabeConsumer_rights::is_activated_Set() const{
    return m_activated_isSet;
}

bool OAIWannabeConsumer_rights::is_activated_Valid() const{
    return m_activated_isValid;
}

QString OAIWannabeConsumer_rights::getRight() const {
    return m_right;
}
void OAIWannabeConsumer_rights::setRight(const QString &right) {
    m_right = right;
    m_right_isSet = true;
}

bool OAIWannabeConsumer_rights::is_right_Set() const{
    return m_right_isSet;
}

bool OAIWannabeConsumer_rights::is_right_Valid() const{
    return m_right_isValid;
}

bool OAIWannabeConsumer_rights::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_right_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWannabeConsumer_rights::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_activated_isValid && m_right_isValid && true;
}

} // namespace OpenAPI
