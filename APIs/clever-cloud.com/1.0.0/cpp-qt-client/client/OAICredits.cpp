/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredits.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredits::OAICredits(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredits::OAICredits() {
    this->initializeModel();
}

OAICredits::~OAICredits() {}

void OAICredits::initializeModel() {

    m_count_isSet = false;
    m_count_isValid = false;

    m_drop_price_isSet = false;
    m_drop_price_isValid = false;

    m_owner_id_isSet = false;
    m_owner_id_isValid = false;
}

void OAICredits::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredits::fromJsonObject(QJsonObject json) {

    m_count_isValid = ::OpenAPI::fromJsonValue(m_count, json[QString("count")]);
    m_count_isSet = !json[QString("count")].isNull() && m_count_isValid;

    m_drop_price_isValid = ::OpenAPI::fromJsonValue(m_drop_price, json[QString("dropPrice")]);
    m_drop_price_isSet = !json[QString("dropPrice")].isNull() && m_drop_price_isValid;

    m_owner_id_isValid = ::OpenAPI::fromJsonValue(m_owner_id, json[QString("ownerId")]);
    m_owner_id_isSet = !json[QString("ownerId")].isNull() && m_owner_id_isValid;
}

QString OAICredits::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredits::asJsonObject() const {
    QJsonObject obj;
    if (m_count_isSet) {
        obj.insert(QString("count"), ::OpenAPI::toJsonValue(m_count));
    }
    if (m_drop_price.isSet()) {
        obj.insert(QString("dropPrice"), ::OpenAPI::toJsonValue(m_drop_price));
    }
    if (m_owner_id_isSet) {
        obj.insert(QString("ownerId"), ::OpenAPI::toJsonValue(m_owner_id));
    }
    return obj;
}

float OAICredits::getCount() const {
    return m_count;
}
void OAICredits::setCount(const float &count) {
    m_count = count;
    m_count_isSet = true;
}

bool OAICredits::is_count_Set() const{
    return m_count_isSet;
}

bool OAICredits::is_count_Valid() const{
    return m_count_isValid;
}

OAICredits_dropPrice OAICredits::getDropPrice() const {
    return m_drop_price;
}
void OAICredits::setDropPrice(const OAICredits_dropPrice &drop_price) {
    m_drop_price = drop_price;
    m_drop_price_isSet = true;
}

bool OAICredits::is_drop_price_Set() const{
    return m_drop_price_isSet;
}

bool OAICredits::is_drop_price_Valid() const{
    return m_drop_price_isValid;
}

QString OAICredits::getOwnerId() const {
    return m_owner_id;
}
void OAICredits::setOwnerId(const QString &owner_id) {
    m_owner_id = owner_id;
    m_owner_id_isSet = true;
}

bool OAICredits::is_owner_id_Set() const{
    return m_owner_id_isSet;
}

bool OAICredits::is_owner_id_Valid() const{
    return m_owner_id_isValid;
}

bool OAICredits::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_drop_price.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredits::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_count_isValid && m_drop_price_isValid && m_owner_id_isValid && true;
}

} // namespace OpenAPI
