/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddonProviderSso.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddonProviderSso::OAIAddonProviderSso(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddonProviderSso::OAIAddonProviderSso() {
    this->initializeModel();
}

OAIAddonProviderSso::~OAIAddonProviderSso() {}

void OAIAddonProviderSso::initializeModel() {

    m_macaroon_isSet = false;
    m_macaroon_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIAddonProviderSso::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddonProviderSso::fromJsonObject(QJsonObject json) {

    m_macaroon_isValid = ::OpenAPI::fromJsonValue(m_macaroon, json[QString("macaroon")]);
    m_macaroon_isSet = !json[QString("macaroon")].isNull() && m_macaroon_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIAddonProviderSso::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddonProviderSso::asJsonObject() const {
    QJsonObject obj;
    if (m_macaroon_isSet) {
        obj.insert(QString("macaroon"), ::OpenAPI::toJsonValue(m_macaroon));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIAddonProviderSso::getMacaroon() const {
    return m_macaroon;
}
void OAIAddonProviderSso::setMacaroon(const QString &macaroon) {
    m_macaroon = macaroon;
    m_macaroon_isSet = true;
}

bool OAIAddonProviderSso::is_macaroon_Set() const{
    return m_macaroon_isSet;
}

bool OAIAddonProviderSso::is_macaroon_Valid() const{
    return m_macaroon_isValid;
}

QString OAIAddonProviderSso::getUrl() const {
    return m_url;
}
void OAIAddonProviderSso::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIAddonProviderSso::is_url_Set() const{
    return m_url_isSet;
}

bool OAIAddonProviderSso::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIAddonProviderSso::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_macaroon_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddonProviderSso::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_macaroon_isValid && m_url_isValid && true;
}

} // namespace OpenAPI
