/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAISelfApi_H
#define OAI_OAISelfApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIAddon.h"
#include "OAIApplication.h"
#include "OAIAvatar.h"
#include "OAIBody.h"
#include "OAIChange_Password.h"
#include "OAIConso.h"
#include "OAIConsumer.h"
#include "OAICredits.h"
#include "OAIDeployment.h"
#include "OAIEnv.h"
#include "OAIInstance.h"
#include "OAIKey.h"
#include "OAILinkedAppEnv.h"
#include "OAIListEnv.h"
#include "OAISecret.h"
#include "OAISso.h"
#include "OAIToken.h"
#include "OAIUser.h"
#include "OAIVhost.h"
#include "OAIWannabeAddon.h"
#include "OAIWannabeApplication.h"
#include "OAIWannabeConsumer.h"
#include "OAIWannabeEnv.h"
#include "OAIWannabePlan.h"
#include "OAIWannabeUser.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAISelfApi : public QObject {
    Q_OBJECT

public:
    OAISelfApi(const int timeOut = 0);
    ~OAISelfApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  tag QString [required]
    * @param[in]  addon_id QString [required]
    */
    virtual void deleteSelfAddonsAddonIdTagsTag(const QString &tag, const QString &addon_id);

    /**
    * @param[in]  addon_id QString [required]
    */
    virtual void deleteSelfAddonsAddonId(const QString &addon_id);

    /**
    * @param[in]  app_id QString [required]
    * @param[in]  addon_id QString [required]
    */
    virtual void deleteSelfApplicationsAppIdAddonsAddonId(const QString &app_id, const QString &addon_id);

    /**
    * @param[in]  dependency_id QString [required]
    * @param[in]  app_id QString [required]
    */
    virtual void deleteSelfApplicationsAppIdDependenciesDependencyId(const QString &dependency_id, const QString &app_id);

    /**
    * @param[in]  app_id QString [required]
    * @param[in]  deployment_id QString [required]
    */
    virtual void deleteSelfApplicationsAppIdDeploymentsDeploymentIdInstances(const QString &app_id, const QString &deployment_id);

    /**
    * @param[in]  app_id QString [required]
    * @param[in]  env_name QString [required]
    */
    virtual void deleteSelfApplicationsAppIdEnvEnvName(const QString &app_id, const QString &env_name);

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void deleteSelfApplicationsAppIdInstances(const QString &app_id);

    /**
    * @param[in]  app_id QString [required]
    * @param[in]  tag QString [required]
    */
    virtual void deleteSelfApplicationsAppIdTagsTag(const QString &app_id, const QString &tag);

    /**
    * @param[in]  app_id QString [required]
    * @param[in]  domain QString [required]
    */
    virtual void deleteSelfApplicationsAppIdVhostsDomain(const QString &app_id, const QString &domain);

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void deleteSelfApplicationsAppIdVhostsFavourite(const QString &app_id);

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void deleteSelfApplicationsAppId(const QString &app_id);

    /**
    * @param[in]  key QString [required]
    */
    virtual void deleteSelfConsumersKey(const QString &key);

    /**
    * @param[in]  email QString [required]
    */
    virtual void deleteSelfEmailsEmail(const QString &email);

    /**
    * @param[in]  key QString [required]
    */
    virtual void deleteSelfKeysKey(const QString &key);

    /**
    * @param[in]  bid QString [required]
    */
    virtual void deleteSelfPaymentsBillingsBid(const QString &bid);

    /**
    * @param[in]  m_id QString [required]
    */
    virtual void deleteSelfPaymentsMethodsMId(const QString &m_id);


    virtual void deleteSelfPaymentsRecurring();

    /**
    * @param[in]  token QString [required]
    */
    virtual void deleteSelfTokensToken(const QString &token);


    virtual void deleteSelfTokens();


    virtual void deleteSelf();

    /**
    * @param[in]  addon_id QString [required]
    */
    virtual void getSelfAddonsAddonIdApplications(const QString &addon_id);

    /**
    * @param[in]  addon_id QString [required]
    */
    virtual void getSelfAddonsAddonIdEnv(const QString &addon_id);

    /**
    * @param[in]  addon_id QString [required]
    */
    virtual void getSelfAddonsAddonIdSso(const QString &addon_id);

    /**
    * @param[in]  addon_id QString [required]
    */
    virtual void getSelfAddonsAddonIdTags(const QString &addon_id);

    /**
    * @param[in]  addon_id QString [required]
    */
    virtual void getSelfAddonsAddonId(const QString &addon_id);


    virtual void getSelfAddons();

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void getSelfApplicationsAppIdAddonsEnv(const QString &app_id);

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void getSelfApplicationsAppIdAddons(const QString &app_id);

    /**
    * @param[in]  dependency_id QString [required]
    * @param[in]  app_id QString [required]
    * @param[in]  oai_wannabe_application OAIWannabeApplication [required]
    */
    virtual void getSelfApplicationsAppIdDependenciesDependencyId(const QString &dependency_id, const QString &app_id, const OAIWannabeApplication &oai_wannabe_application);

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void getSelfApplicationsAppIdDependencies(const QString &app_id);

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void getSelfApplicationsAppIdDependents(const QString &app_id);

    /**
    * @param[in]  app_id QString [required]
    * @param[in]  limit QString [optional]
    * @param[in]  offset QString [optional]
    * @param[in]  action QString [optional]
    */
    virtual void getSelfApplicationsAppIdDeployments(const QString &app_id, const ::OpenAPI::OptionalParam<QString> &limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &offset = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void getSelfApplicationsAppIdEnv(const QString &app_id);

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void getSelfApplicationsAppIdInstances(const QString &app_id);

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void getSelfApplicationsAppIdTags(const QString &app_id);

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void getSelfApplicationsAppIdVhostsFavourite(const QString &app_id);

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void getSelfApplicationsAppIdVhosts(const QString &app_id);

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void getSelfApplicationsAppId(const QString &app_id);


    virtual void getSelfApplications();


    virtual void getSelfConfirmationEmail();

    /**
    * @param[in]  key QString [required]
    */
    virtual void getSelfConsumersKeySecret(const QString &key);

    /**
    * @param[in]  key QString [required]
    */
    virtual void getSelfConsumersKey(const QString &key);


    virtual void getSelfConsumers();

    /**
    * @param[in]  app_id QString [optional]
    * @param[in]  from QString [optional]
    * @param[in]  to QString [optional]
    */
    virtual void getSelfConsumptions(const ::OpenAPI::OptionalParam<QString> &app_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &from = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &to = ::OpenAPI::OptionalParam<QString>());


    virtual void getSelfCredits();


    virtual void getSelfEmails();


    virtual void getSelfId();


    virtual void getSelfInstances();


    virtual void getSelfKeys();


    virtual void getSelfPaymentInfo();

    /**
    * @param[in]  bid QString [required]
    * @param[in]  token QString [optional]
    */
    virtual void getSelfPaymentsBillingsBidPdf(const QString &bid, const ::OpenAPI::OptionalParam<QString> &token = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  bid QString [required]
    */
    virtual void getSelfPaymentsBillingsBid(const QString &bid);


    virtual void getSelfPaymentsBillings();

    /**
    * @param[in]  price QString [required]
    */
    virtual void getSelfPaymentsFullpricePrice(const QString &price);


    virtual void getSelfPaymentsMethods();


    virtual void getSelfTokens();

    /**
    * @param[in]  validation_key QString [optional]
    */
    virtual void getSelfValidateEmail(const ::OpenAPI::OptionalParam<QString> &validation_key = ::OpenAPI::OptionalParam<QString>());


    virtual void getSelf();

    /**
    * @param[in]  oai_wannabe_addon OAIWannabeAddon [required]
    */
    virtual void postSelfAddons(const OAIWannabeAddon &oai_wannabe_addon);

    /**
    * @param[in]  app_id QString [required]
    * @param[in]  oai_body OAIBody [required]
    */
    virtual void postSelfApplicationsAppIdAddons(const QString &app_id, const OAIBody &oai_body);

    /**
    * @param[in]  app_id QString [required]
    * @param[in]  commit QString [optional]
    */
    virtual void postSelfApplicationsAppIdInstances(const QString &app_id, const ::OpenAPI::OptionalParam<QString> &commit = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  oai_wannabe_application OAIWannabeApplication [required]
    */
    virtual void postSelfApplications(const OAIWannabeApplication &oai_wannabe_application);

    /**
    * @param[in]  oai_wannabe_consumer OAIWannabeConsumer [required]
    */
    virtual void postSelfConsumers(const OAIWannabeConsumer &oai_wannabe_consumer);


    virtual void postSelfPaymentsBillings();


    virtual void postSelfPaymentsMethods();

    /**
    * @param[in]  addon_id QString [required]
    * @param[in]  oai_wannabe_plan OAIWannabePlan [required]
    */
    virtual void putSelfAddonsAddonIdPlan(const QString &addon_id, const OAIWannabePlan &oai_wannabe_plan);

    /**
    * @param[in]  tag QString [required]
    * @param[in]  addon_id QString [required]
    * @param[in]  oai_body OAIBody [required]
    */
    virtual void putSelfAddonsAddonIdTagsTag(const QString &tag, const QString &addon_id, const OAIBody &oai_body);

    /**
    * @param[in]  addon_id QString [required]
    * @param[in]  oai_wannabe_addon OAIWannabeAddon [required]
    */
    virtual void putSelfAddonsAddonId(const QString &addon_id, const OAIWannabeAddon &oai_wannabe_addon);

    /**
    * @param[in]  app_id QString [required]
    * @param[in]  env_name QString [required]
    * @param[in]  oai_wannabe_env OAIWannabeEnv [required]
    */
    virtual void putSelfApplicationsAppIdEnvEnvName(const QString &app_id, const QString &env_name, const OAIWannabeEnv &oai_wannabe_env);

    /**
    * @param[in]  app_id QString [required]
    * @param[in]  oai_wannabe_env OAIWannabeEnv [required]
    */
    virtual void putSelfApplicationsAppIdEnv(const QString &app_id, const OAIWannabeEnv &oai_wannabe_env);

    /**
    * @param[in]  app_id QString [required]
    * @param[in]  tag QString [required]
    * @param[in]  oai_body OAIBody [required]
    */
    virtual void putSelfApplicationsAppIdTagsTag(const QString &app_id, const QString &tag, const OAIBody &oai_body);

    /**
    * @param[in]  app_id QString [required]
    * @param[in]  domain QString [required]
    * @param[in]  oai_vhost OAIVhost [required]
    */
    virtual void putSelfApplicationsAppIdVhostsDomain(const QString &app_id, const QString &domain, const OAIVhost &oai_vhost);

    /**
    * @param[in]  app_id QString [required]
    * @param[in]  oai_vhost OAIVhost [required]
    */
    virtual void putSelfApplicationsAppIdVhostsFavourite(const QString &app_id, const OAIVhost &oai_vhost);

    /**
    * @param[in]  app_id QString [required]
    * @param[in]  oai_wannabe_application OAIWannabeApplication [required]
    */
    virtual void putSelfApplicationsAppId(const QString &app_id, const OAIWannabeApplication &oai_wannabe_application);

    /**
    * @param[in]  oai_avatar OAIAvatar [required]
    */
    virtual void putSelfAvatar(const OAIAvatar &oai_avatar);


    virtual void putSelfChangePassword();

    /**
    * @param[in]  key QString [required]
    * @param[in]  oai_wannabe_consumer OAIWannabeConsumer [required]
    */
    virtual void putSelfConsumersKey(const QString &key, const OAIWannabeConsumer &oai_wannabe_consumer);

    /**
    * @param[in]  email QString [required]
    * @param[in]  oai_body OAIBody [required]
    */
    virtual void putSelfEmailsEmail(const QString &email, const OAIBody &oai_body);

    /**
    * @param[in]  key QString [required]
    * @param[in]  oai_body OAIBody [required]
    */
    virtual void putSelfKeysKey(const QString &key, const OAIBody &oai_body);

    /**
    * @param[in]  bid QString [required]
    */
    virtual void putSelfPaymentsBillingsBid(const QString &bid);

    /**
    * @param[in]  oai_wannabe_user OAIWannabeUser [required]
    */
    virtual void putSelf(const OAIWannabeUser &oai_wannabe_user);

    /**
    * @param[in]  oai_wannabe_addon OAIWannabeAddon [required]
    */
    virtual void selfAddonsPreordersPost(const OAIWannabeAddon &oai_wannabe_addon);

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void selfApplicationsAppIdBranchPut(const QString &app_id);

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void selfApplicationsAppIdBranchesGet(const QString &app_id);

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void selfApplicationsAppIdBuildflavorPut(const QString &app_id);

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void selfApplicationsAppIdDependenciesEnvGet(const QString &app_id);

    /**
    * @param[in]  app_id QString [required]
    * @param[in]  deployment_id QString [required]
    */
    virtual void selfApplicationsAppIdDeploymentsDeploymentIdGet(const QString &app_id, const QString &deployment_id);

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void selfApplicationsAppIdExposedEnvGet(const QString &app_id);

    /**
    * @param[in]  app_id QString [required]
    */
    virtual void selfApplicationsAppIdExposedEnvPut(const QString &app_id);

    /**
    * @param[in]  instance_id QString [required]
    * @param[in]  app_id QString [required]
    */
    virtual void selfApplicationsAppIdInstancesInstanceIdGet(const QString &instance_id, const QString &app_id);

    /**
    * @param[in]  cli_token QString [optional]
    */
    virtual void selfCliTokensGet(const ::OpenAPI::OptionalParam<QString> &cli_token = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  kind QString [required]
    */
    virtual void selfMfaKindBackupcodesGet(const QString &kind);

    /**
    * @param[in]  kind QString [required]
    */
    virtual void selfMfaKindConfirmationPost(const QString &kind);

    /**
    * @param[in]  kind QString [required]
    */
    virtual void selfMfaKindDelete(const QString &kind);

    /**
    * @param[in]  kind QString [required]
    */
    virtual void selfMfaKindPost(const QString &kind);

    /**
    * @param[in]  kind QString [required]
    */
    virtual void selfMfaKindPut(const QString &kind);


    virtual void selfPaymentsMethodsDefaultGet();


    virtual void selfPaymentsMethodsDefaultPut();


    virtual void selfPaymentsMonthlyinvoiceGet();


    virtual void selfPaymentsMonthlyinvoiceMaxcreditPut();


    virtual void selfPaymentsRecurringGet();


    virtual void selfPaymentsTokensStripeGet();


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void deleteSelfAddonsAddonIdTagsTagCallback(OAIHttpRequestWorker *worker);
    void deleteSelfAddonsAddonIdCallback(OAIHttpRequestWorker *worker);
    void deleteSelfApplicationsAppIdAddonsAddonIdCallback(OAIHttpRequestWorker *worker);
    void deleteSelfApplicationsAppIdDependenciesDependencyIdCallback(OAIHttpRequestWorker *worker);
    void deleteSelfApplicationsAppIdDeploymentsDeploymentIdInstancesCallback(OAIHttpRequestWorker *worker);
    void deleteSelfApplicationsAppIdEnvEnvNameCallback(OAIHttpRequestWorker *worker);
    void deleteSelfApplicationsAppIdInstancesCallback(OAIHttpRequestWorker *worker);
    void deleteSelfApplicationsAppIdTagsTagCallback(OAIHttpRequestWorker *worker);
    void deleteSelfApplicationsAppIdVhostsDomainCallback(OAIHttpRequestWorker *worker);
    void deleteSelfApplicationsAppIdVhostsFavouriteCallback(OAIHttpRequestWorker *worker);
    void deleteSelfApplicationsAppIdCallback(OAIHttpRequestWorker *worker);
    void deleteSelfConsumersKeyCallback(OAIHttpRequestWorker *worker);
    void deleteSelfEmailsEmailCallback(OAIHttpRequestWorker *worker);
    void deleteSelfKeysKeyCallback(OAIHttpRequestWorker *worker);
    void deleteSelfPaymentsBillingsBidCallback(OAIHttpRequestWorker *worker);
    void deleteSelfPaymentsMethodsMIdCallback(OAIHttpRequestWorker *worker);
    void deleteSelfPaymentsRecurringCallback(OAIHttpRequestWorker *worker);
    void deleteSelfTokensTokenCallback(OAIHttpRequestWorker *worker);
    void deleteSelfTokensCallback(OAIHttpRequestWorker *worker);
    void deleteSelfCallback(OAIHttpRequestWorker *worker);
    void getSelfAddonsAddonIdApplicationsCallback(OAIHttpRequestWorker *worker);
    void getSelfAddonsAddonIdEnvCallback(OAIHttpRequestWorker *worker);
    void getSelfAddonsAddonIdSsoCallback(OAIHttpRequestWorker *worker);
    void getSelfAddonsAddonIdTagsCallback(OAIHttpRequestWorker *worker);
    void getSelfAddonsAddonIdCallback(OAIHttpRequestWorker *worker);
    void getSelfAddonsCallback(OAIHttpRequestWorker *worker);
    void getSelfApplicationsAppIdAddonsEnvCallback(OAIHttpRequestWorker *worker);
    void getSelfApplicationsAppIdAddonsCallback(OAIHttpRequestWorker *worker);
    void getSelfApplicationsAppIdDependenciesDependencyIdCallback(OAIHttpRequestWorker *worker);
    void getSelfApplicationsAppIdDependenciesCallback(OAIHttpRequestWorker *worker);
    void getSelfApplicationsAppIdDependentsCallback(OAIHttpRequestWorker *worker);
    void getSelfApplicationsAppIdDeploymentsCallback(OAIHttpRequestWorker *worker);
    void getSelfApplicationsAppIdEnvCallback(OAIHttpRequestWorker *worker);
    void getSelfApplicationsAppIdInstancesCallback(OAIHttpRequestWorker *worker);
    void getSelfApplicationsAppIdTagsCallback(OAIHttpRequestWorker *worker);
    void getSelfApplicationsAppIdVhostsFavouriteCallback(OAIHttpRequestWorker *worker);
    void getSelfApplicationsAppIdVhostsCallback(OAIHttpRequestWorker *worker);
    void getSelfApplicationsAppIdCallback(OAIHttpRequestWorker *worker);
    void getSelfApplicationsCallback(OAIHttpRequestWorker *worker);
    void getSelfConfirmationEmailCallback(OAIHttpRequestWorker *worker);
    void getSelfConsumersKeySecretCallback(OAIHttpRequestWorker *worker);
    void getSelfConsumersKeyCallback(OAIHttpRequestWorker *worker);
    void getSelfConsumersCallback(OAIHttpRequestWorker *worker);
    void getSelfConsumptionsCallback(OAIHttpRequestWorker *worker);
    void getSelfCreditsCallback(OAIHttpRequestWorker *worker);
    void getSelfEmailsCallback(OAIHttpRequestWorker *worker);
    void getSelfIdCallback(OAIHttpRequestWorker *worker);
    void getSelfInstancesCallback(OAIHttpRequestWorker *worker);
    void getSelfKeysCallback(OAIHttpRequestWorker *worker);
    void getSelfPaymentInfoCallback(OAIHttpRequestWorker *worker);
    void getSelfPaymentsBillingsBidPdfCallback(OAIHttpRequestWorker *worker);
    void getSelfPaymentsBillingsBidCallback(OAIHttpRequestWorker *worker);
    void getSelfPaymentsBillingsCallback(OAIHttpRequestWorker *worker);
    void getSelfPaymentsFullpricePriceCallback(OAIHttpRequestWorker *worker);
    void getSelfPaymentsMethodsCallback(OAIHttpRequestWorker *worker);
    void getSelfTokensCallback(OAIHttpRequestWorker *worker);
    void getSelfValidateEmailCallback(OAIHttpRequestWorker *worker);
    void getSelfCallback(OAIHttpRequestWorker *worker);
    void postSelfAddonsCallback(OAIHttpRequestWorker *worker);
    void postSelfApplicationsAppIdAddonsCallback(OAIHttpRequestWorker *worker);
    void postSelfApplicationsAppIdInstancesCallback(OAIHttpRequestWorker *worker);
    void postSelfApplicationsCallback(OAIHttpRequestWorker *worker);
    void postSelfConsumersCallback(OAIHttpRequestWorker *worker);
    void postSelfPaymentsBillingsCallback(OAIHttpRequestWorker *worker);
    void postSelfPaymentsMethodsCallback(OAIHttpRequestWorker *worker);
    void putSelfAddonsAddonIdPlanCallback(OAIHttpRequestWorker *worker);
    void putSelfAddonsAddonIdTagsTagCallback(OAIHttpRequestWorker *worker);
    void putSelfAddonsAddonIdCallback(OAIHttpRequestWorker *worker);
    void putSelfApplicationsAppIdEnvEnvNameCallback(OAIHttpRequestWorker *worker);
    void putSelfApplicationsAppIdEnvCallback(OAIHttpRequestWorker *worker);
    void putSelfApplicationsAppIdTagsTagCallback(OAIHttpRequestWorker *worker);
    void putSelfApplicationsAppIdVhostsDomainCallback(OAIHttpRequestWorker *worker);
    void putSelfApplicationsAppIdVhostsFavouriteCallback(OAIHttpRequestWorker *worker);
    void putSelfApplicationsAppIdCallback(OAIHttpRequestWorker *worker);
    void putSelfAvatarCallback(OAIHttpRequestWorker *worker);
    void putSelfChangePasswordCallback(OAIHttpRequestWorker *worker);
    void putSelfConsumersKeyCallback(OAIHttpRequestWorker *worker);
    void putSelfEmailsEmailCallback(OAIHttpRequestWorker *worker);
    void putSelfKeysKeyCallback(OAIHttpRequestWorker *worker);
    void putSelfPaymentsBillingsBidCallback(OAIHttpRequestWorker *worker);
    void putSelfCallback(OAIHttpRequestWorker *worker);
    void selfAddonsPreordersPostCallback(OAIHttpRequestWorker *worker);
    void selfApplicationsAppIdBranchPutCallback(OAIHttpRequestWorker *worker);
    void selfApplicationsAppIdBranchesGetCallback(OAIHttpRequestWorker *worker);
    void selfApplicationsAppIdBuildflavorPutCallback(OAIHttpRequestWorker *worker);
    void selfApplicationsAppIdDependenciesEnvGetCallback(OAIHttpRequestWorker *worker);
    void selfApplicationsAppIdDeploymentsDeploymentIdGetCallback(OAIHttpRequestWorker *worker);
    void selfApplicationsAppIdExposedEnvGetCallback(OAIHttpRequestWorker *worker);
    void selfApplicationsAppIdExposedEnvPutCallback(OAIHttpRequestWorker *worker);
    void selfApplicationsAppIdInstancesInstanceIdGetCallback(OAIHttpRequestWorker *worker);
    void selfCliTokensGetCallback(OAIHttpRequestWorker *worker);
    void selfMfaKindBackupcodesGetCallback(OAIHttpRequestWorker *worker);
    void selfMfaKindConfirmationPostCallback(OAIHttpRequestWorker *worker);
    void selfMfaKindDeleteCallback(OAIHttpRequestWorker *worker);
    void selfMfaKindPostCallback(OAIHttpRequestWorker *worker);
    void selfMfaKindPutCallback(OAIHttpRequestWorker *worker);
    void selfPaymentsMethodsDefaultGetCallback(OAIHttpRequestWorker *worker);
    void selfPaymentsMethodsDefaultPutCallback(OAIHttpRequestWorker *worker);
    void selfPaymentsMonthlyinvoiceGetCallback(OAIHttpRequestWorker *worker);
    void selfPaymentsMonthlyinvoiceMaxcreditPutCallback(OAIHttpRequestWorker *worker);
    void selfPaymentsRecurringGetCallback(OAIHttpRequestWorker *worker);
    void selfPaymentsTokensStripeGetCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void deleteSelfAddonsAddonIdTagsTagSignal();
    void deleteSelfAddonsAddonIdSignal();
    void deleteSelfApplicationsAppIdAddonsAddonIdSignal();
    void deleteSelfApplicationsAppIdDependenciesDependencyIdSignal();
    void deleteSelfApplicationsAppIdDeploymentsDeploymentIdInstancesSignal();
    void deleteSelfApplicationsAppIdEnvEnvNameSignal();
    void deleteSelfApplicationsAppIdInstancesSignal();
    void deleteSelfApplicationsAppIdTagsTagSignal();
    void deleteSelfApplicationsAppIdVhostsDomainSignal();
    void deleteSelfApplicationsAppIdVhostsFavouriteSignal();
    void deleteSelfApplicationsAppIdSignal();
    void deleteSelfConsumersKeySignal();
    void deleteSelfEmailsEmailSignal();
    void deleteSelfKeysKeySignal();
    void deleteSelfPaymentsBillingsBidSignal();
    void deleteSelfPaymentsMethodsMIdSignal();
    void deleteSelfPaymentsRecurringSignal();
    void deleteSelfTokensTokenSignal();
    void deleteSelfTokensSignal();
    void deleteSelfSignal();
    void getSelfAddonsAddonIdApplicationsSignal(QList<OAIApplication> summary);
    void getSelfAddonsAddonIdEnvSignal(QList<OAIListEnv> summary);
    void getSelfAddonsAddonIdSsoSignal(OAISso summary);
    void getSelfAddonsAddonIdTagsSignal(QList<QString> summary);
    void getSelfAddonsAddonIdSignal(OAIAddon summary);
    void getSelfAddonsSignal(QList<OAIAddon> summary);
    void getSelfApplicationsAppIdAddonsEnvSignal(QList<OAIEnv> summary);
    void getSelfApplicationsAppIdAddonsSignal(QList<OAIAddon> summary);
    void getSelfApplicationsAppIdDependenciesDependencyIdSignal();
    void getSelfApplicationsAppIdDependenciesSignal(QList<OAIApplication> summary);
    void getSelfApplicationsAppIdDependentsSignal(QList<OAIApplication> summary);
    void getSelfApplicationsAppIdDeploymentsSignal(QList<OAIDeployment> summary);
    void getSelfApplicationsAppIdEnvSignal(QList<OAIListEnv> summary);
    void getSelfApplicationsAppIdInstancesSignal(QList<OAIInstance> summary);
    void getSelfApplicationsAppIdTagsSignal(QList<QString> summary);
    void getSelfApplicationsAppIdVhostsFavouriteSignal(OAIVhost summary);
    void getSelfApplicationsAppIdVhostsSignal(QList<OAIVhost> summary);
    void getSelfApplicationsAppIdSignal(OAIApplication summary);
    void getSelfApplicationsSignal(QList<OAIApplication> summary);
    void getSelfConfirmationEmailSignal();
    void getSelfConsumersKeySecretSignal(OAISecret summary);
    void getSelfConsumersKeySignal(OAIConsumer summary);
    void getSelfConsumersSignal(QList<OAIConsumer> summary);
    void getSelfConsumptionsSignal(OAIConso summary);
    void getSelfCreditsSignal(OAICredits summary);
    void getSelfEmailsSignal(QList<QString> summary);
    void getSelfIdSignal(QString summary);
    void getSelfInstancesSignal(QList<OAIInstance> summary);
    void getSelfKeysSignal(QList<OAIKey> summary);
    void getSelfPaymentInfoSignal();
    void getSelfPaymentsBillingsBidPdfSignal();
    void getSelfPaymentsBillingsBidSignal();
    void getSelfPaymentsBillingsSignal();
    void getSelfPaymentsFullpricePriceSignal();
    void getSelfPaymentsMethodsSignal();
    void getSelfTokensSignal(QList<OAIToken> summary);
    void getSelfValidateEmailSignal();
    void getSelfSignal(OAIUser summary);
    void postSelfAddonsSignal();
    void postSelfApplicationsAppIdAddonsSignal();
    void postSelfApplicationsAppIdInstancesSignal();
    void postSelfApplicationsSignal();
    void postSelfConsumersSignal();
    void postSelfPaymentsBillingsSignal();
    void postSelfPaymentsMethodsSignal();
    void putSelfAddonsAddonIdPlanSignal();
    void putSelfAddonsAddonIdTagsTagSignal();
    void putSelfAddonsAddonIdSignal();
    void putSelfApplicationsAppIdEnvEnvNameSignal();
    void putSelfApplicationsAppIdEnvSignal();
    void putSelfApplicationsAppIdTagsTagSignal();
    void putSelfApplicationsAppIdVhostsDomainSignal();
    void putSelfApplicationsAppIdVhostsFavouriteSignal();
    void putSelfApplicationsAppIdSignal();
    void putSelfAvatarSignal();
    void putSelfChangePasswordSignal(OAIChange_Password summary);
    void putSelfConsumersKeySignal();
    void putSelfEmailsEmailSignal();
    void putSelfKeysKeySignal();
    void putSelfPaymentsBillingsBidSignal();
    void putSelfSignal();
    void selfAddonsPreordersPostSignal();
    void selfApplicationsAppIdBranchPutSignal();
    void selfApplicationsAppIdBranchesGetSignal();
    void selfApplicationsAppIdBuildflavorPutSignal();
    void selfApplicationsAppIdDependenciesEnvGetSignal(QList<OAILinkedAppEnv> summary);
    void selfApplicationsAppIdDeploymentsDeploymentIdGetSignal();
    void selfApplicationsAppIdExposedEnvGetSignal();
    void selfApplicationsAppIdExposedEnvPutSignal();
    void selfApplicationsAppIdInstancesInstanceIdGetSignal();
    void selfCliTokensGetSignal();
    void selfMfaKindBackupcodesGetSignal();
    void selfMfaKindConfirmationPostSignal();
    void selfMfaKindDeleteSignal();
    void selfMfaKindPostSignal();
    void selfMfaKindPutSignal();
    void selfPaymentsMethodsDefaultGetSignal();
    void selfPaymentsMethodsDefaultPutSignal();
    void selfPaymentsMonthlyinvoiceGetSignal();
    void selfPaymentsMonthlyinvoiceMaxcreditPutSignal();
    void selfPaymentsRecurringGetSignal();
    void selfPaymentsTokensStripeGetSignal();


    void deleteSelfAddonsAddonIdTagsTagSignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfAddonsAddonIdSignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfApplicationsAppIdAddonsAddonIdSignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfApplicationsAppIdDependenciesDependencyIdSignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfApplicationsAppIdDeploymentsDeploymentIdInstancesSignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfApplicationsAppIdEnvEnvNameSignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfApplicationsAppIdInstancesSignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfApplicationsAppIdTagsTagSignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfApplicationsAppIdVhostsDomainSignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfApplicationsAppIdVhostsFavouriteSignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfApplicationsAppIdSignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfConsumersKeySignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfEmailsEmailSignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfKeysKeySignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfPaymentsBillingsBidSignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfPaymentsMethodsMIdSignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfPaymentsRecurringSignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfTokensTokenSignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfTokensSignalFull(OAIHttpRequestWorker *worker);
    void deleteSelfSignalFull(OAIHttpRequestWorker *worker);
    void getSelfAddonsAddonIdApplicationsSignalFull(OAIHttpRequestWorker *worker, QList<OAIApplication> summary);
    void getSelfAddonsAddonIdEnvSignalFull(OAIHttpRequestWorker *worker, QList<OAIListEnv> summary);
    void getSelfAddonsAddonIdSsoSignalFull(OAIHttpRequestWorker *worker, OAISso summary);
    void getSelfAddonsAddonIdTagsSignalFull(OAIHttpRequestWorker *worker, QList<QString> summary);
    void getSelfAddonsAddonIdSignalFull(OAIHttpRequestWorker *worker, OAIAddon summary);
    void getSelfAddonsSignalFull(OAIHttpRequestWorker *worker, QList<OAIAddon> summary);
    void getSelfApplicationsAppIdAddonsEnvSignalFull(OAIHttpRequestWorker *worker, QList<OAIEnv> summary);
    void getSelfApplicationsAppIdAddonsSignalFull(OAIHttpRequestWorker *worker, QList<OAIAddon> summary);
    void getSelfApplicationsAppIdDependenciesDependencyIdSignalFull(OAIHttpRequestWorker *worker);
    void getSelfApplicationsAppIdDependenciesSignalFull(OAIHttpRequestWorker *worker, QList<OAIApplication> summary);
    void getSelfApplicationsAppIdDependentsSignalFull(OAIHttpRequestWorker *worker, QList<OAIApplication> summary);
    void getSelfApplicationsAppIdDeploymentsSignalFull(OAIHttpRequestWorker *worker, QList<OAIDeployment> summary);
    void getSelfApplicationsAppIdEnvSignalFull(OAIHttpRequestWorker *worker, QList<OAIListEnv> summary);
    void getSelfApplicationsAppIdInstancesSignalFull(OAIHttpRequestWorker *worker, QList<OAIInstance> summary);
    void getSelfApplicationsAppIdTagsSignalFull(OAIHttpRequestWorker *worker, QList<QString> summary);
    void getSelfApplicationsAppIdVhostsFavouriteSignalFull(OAIHttpRequestWorker *worker, OAIVhost summary);
    void getSelfApplicationsAppIdVhostsSignalFull(OAIHttpRequestWorker *worker, QList<OAIVhost> summary);
    void getSelfApplicationsAppIdSignalFull(OAIHttpRequestWorker *worker, OAIApplication summary);
    void getSelfApplicationsSignalFull(OAIHttpRequestWorker *worker, QList<OAIApplication> summary);
    void getSelfConfirmationEmailSignalFull(OAIHttpRequestWorker *worker);
    void getSelfConsumersKeySecretSignalFull(OAIHttpRequestWorker *worker, OAISecret summary);
    void getSelfConsumersKeySignalFull(OAIHttpRequestWorker *worker, OAIConsumer summary);
    void getSelfConsumersSignalFull(OAIHttpRequestWorker *worker, QList<OAIConsumer> summary);
    void getSelfConsumptionsSignalFull(OAIHttpRequestWorker *worker, OAIConso summary);
    void getSelfCreditsSignalFull(OAIHttpRequestWorker *worker, OAICredits summary);
    void getSelfEmailsSignalFull(OAIHttpRequestWorker *worker, QList<QString> summary);
    void getSelfIdSignalFull(OAIHttpRequestWorker *worker, QString summary);
    void getSelfInstancesSignalFull(OAIHttpRequestWorker *worker, QList<OAIInstance> summary);
    void getSelfKeysSignalFull(OAIHttpRequestWorker *worker, QList<OAIKey> summary);
    void getSelfPaymentInfoSignalFull(OAIHttpRequestWorker *worker);
    void getSelfPaymentsBillingsBidPdfSignalFull(OAIHttpRequestWorker *worker);
    void getSelfPaymentsBillingsBidSignalFull(OAIHttpRequestWorker *worker);
    void getSelfPaymentsBillingsSignalFull(OAIHttpRequestWorker *worker);
    void getSelfPaymentsFullpricePriceSignalFull(OAIHttpRequestWorker *worker);
    void getSelfPaymentsMethodsSignalFull(OAIHttpRequestWorker *worker);
    void getSelfTokensSignalFull(OAIHttpRequestWorker *worker, QList<OAIToken> summary);
    void getSelfValidateEmailSignalFull(OAIHttpRequestWorker *worker);
    void getSelfSignalFull(OAIHttpRequestWorker *worker, OAIUser summary);
    void postSelfAddonsSignalFull(OAIHttpRequestWorker *worker);
    void postSelfApplicationsAppIdAddonsSignalFull(OAIHttpRequestWorker *worker);
    void postSelfApplicationsAppIdInstancesSignalFull(OAIHttpRequestWorker *worker);
    void postSelfApplicationsSignalFull(OAIHttpRequestWorker *worker);
    void postSelfConsumersSignalFull(OAIHttpRequestWorker *worker);
    void postSelfPaymentsBillingsSignalFull(OAIHttpRequestWorker *worker);
    void postSelfPaymentsMethodsSignalFull(OAIHttpRequestWorker *worker);
    void putSelfAddonsAddonIdPlanSignalFull(OAIHttpRequestWorker *worker);
    void putSelfAddonsAddonIdTagsTagSignalFull(OAIHttpRequestWorker *worker);
    void putSelfAddonsAddonIdSignalFull(OAIHttpRequestWorker *worker);
    void putSelfApplicationsAppIdEnvEnvNameSignalFull(OAIHttpRequestWorker *worker);
    void putSelfApplicationsAppIdEnvSignalFull(OAIHttpRequestWorker *worker);
    void putSelfApplicationsAppIdTagsTagSignalFull(OAIHttpRequestWorker *worker);
    void putSelfApplicationsAppIdVhostsDomainSignalFull(OAIHttpRequestWorker *worker);
    void putSelfApplicationsAppIdVhostsFavouriteSignalFull(OAIHttpRequestWorker *worker);
    void putSelfApplicationsAppIdSignalFull(OAIHttpRequestWorker *worker);
    void putSelfAvatarSignalFull(OAIHttpRequestWorker *worker);
    void putSelfChangePasswordSignalFull(OAIHttpRequestWorker *worker, OAIChange_Password summary);
    void putSelfConsumersKeySignalFull(OAIHttpRequestWorker *worker);
    void putSelfEmailsEmailSignalFull(OAIHttpRequestWorker *worker);
    void putSelfKeysKeySignalFull(OAIHttpRequestWorker *worker);
    void putSelfPaymentsBillingsBidSignalFull(OAIHttpRequestWorker *worker);
    void putSelfSignalFull(OAIHttpRequestWorker *worker);
    void selfAddonsPreordersPostSignalFull(OAIHttpRequestWorker *worker);
    void selfApplicationsAppIdBranchPutSignalFull(OAIHttpRequestWorker *worker);
    void selfApplicationsAppIdBranchesGetSignalFull(OAIHttpRequestWorker *worker);
    void selfApplicationsAppIdBuildflavorPutSignalFull(OAIHttpRequestWorker *worker);
    void selfApplicationsAppIdDependenciesEnvGetSignalFull(OAIHttpRequestWorker *worker, QList<OAILinkedAppEnv> summary);
    void selfApplicationsAppIdDeploymentsDeploymentIdGetSignalFull(OAIHttpRequestWorker *worker);
    void selfApplicationsAppIdExposedEnvGetSignalFull(OAIHttpRequestWorker *worker);
    void selfApplicationsAppIdExposedEnvPutSignalFull(OAIHttpRequestWorker *worker);
    void selfApplicationsAppIdInstancesInstanceIdGetSignalFull(OAIHttpRequestWorker *worker);
    void selfCliTokensGetSignalFull(OAIHttpRequestWorker *worker);
    void selfMfaKindBackupcodesGetSignalFull(OAIHttpRequestWorker *worker);
    void selfMfaKindConfirmationPostSignalFull(OAIHttpRequestWorker *worker);
    void selfMfaKindDeleteSignalFull(OAIHttpRequestWorker *worker);
    void selfMfaKindPostSignalFull(OAIHttpRequestWorker *worker);
    void selfMfaKindPutSignalFull(OAIHttpRequestWorker *worker);
    void selfPaymentsMethodsDefaultGetSignalFull(OAIHttpRequestWorker *worker);
    void selfPaymentsMethodsDefaultPutSignalFull(OAIHttpRequestWorker *worker);
    void selfPaymentsMonthlyinvoiceGetSignalFull(OAIHttpRequestWorker *worker);
    void selfPaymentsMonthlyinvoiceMaxcreditPutSignalFull(OAIHttpRequestWorker *worker);
    void selfPaymentsRecurringGetSignalFull(OAIHttpRequestWorker *worker);
    void selfPaymentsTokensStripeGetSignalFull(OAIHttpRequestWorker *worker);

    Q_DECL_DEPRECATED_X("Use deleteSelfAddonsAddonIdTagsTagSignalError() instead")
    void deleteSelfAddonsAddonIdTagsTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfAddonsAddonIdTagsTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfAddonsAddonIdSignalError() instead")
    void deleteSelfAddonsAddonIdSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfAddonsAddonIdSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfApplicationsAppIdAddonsAddonIdSignalError() instead")
    void deleteSelfApplicationsAppIdAddonsAddonIdSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfApplicationsAppIdAddonsAddonIdSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfApplicationsAppIdDependenciesDependencyIdSignalError() instead")
    void deleteSelfApplicationsAppIdDependenciesDependencyIdSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfApplicationsAppIdDependenciesDependencyIdSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfApplicationsAppIdDeploymentsDeploymentIdInstancesSignalError() instead")
    void deleteSelfApplicationsAppIdDeploymentsDeploymentIdInstancesSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfApplicationsAppIdDeploymentsDeploymentIdInstancesSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfApplicationsAppIdEnvEnvNameSignalError() instead")
    void deleteSelfApplicationsAppIdEnvEnvNameSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfApplicationsAppIdEnvEnvNameSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfApplicationsAppIdInstancesSignalError() instead")
    void deleteSelfApplicationsAppIdInstancesSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfApplicationsAppIdInstancesSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfApplicationsAppIdTagsTagSignalError() instead")
    void deleteSelfApplicationsAppIdTagsTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfApplicationsAppIdTagsTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfApplicationsAppIdVhostsDomainSignalError() instead")
    void deleteSelfApplicationsAppIdVhostsDomainSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfApplicationsAppIdVhostsDomainSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfApplicationsAppIdVhostsFavouriteSignalError() instead")
    void deleteSelfApplicationsAppIdVhostsFavouriteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfApplicationsAppIdVhostsFavouriteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfApplicationsAppIdSignalError() instead")
    void deleteSelfApplicationsAppIdSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfApplicationsAppIdSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfConsumersKeySignalError() instead")
    void deleteSelfConsumersKeySignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfConsumersKeySignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfEmailsEmailSignalError() instead")
    void deleteSelfEmailsEmailSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfEmailsEmailSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfKeysKeySignalError() instead")
    void deleteSelfKeysKeySignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfKeysKeySignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfPaymentsBillingsBidSignalError() instead")
    void deleteSelfPaymentsBillingsBidSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfPaymentsBillingsBidSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfPaymentsMethodsMIdSignalError() instead")
    void deleteSelfPaymentsMethodsMIdSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfPaymentsMethodsMIdSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfPaymentsRecurringSignalError() instead")
    void deleteSelfPaymentsRecurringSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfPaymentsRecurringSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfTokensTokenSignalError() instead")
    void deleteSelfTokensTokenSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfTokensTokenSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfTokensSignalError() instead")
    void deleteSelfTokensSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfTokensSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfSignalError() instead")
    void deleteSelfSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfAddonsAddonIdApplicationsSignalError() instead")
    void getSelfAddonsAddonIdApplicationsSignalE(QList<OAIApplication> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfAddonsAddonIdApplicationsSignalError(QList<OAIApplication> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfAddonsAddonIdEnvSignalError() instead")
    void getSelfAddonsAddonIdEnvSignalE(QList<OAIListEnv> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfAddonsAddonIdEnvSignalError(QList<OAIListEnv> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfAddonsAddonIdSsoSignalError() instead")
    void getSelfAddonsAddonIdSsoSignalE(OAISso summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfAddonsAddonIdSsoSignalError(OAISso summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfAddonsAddonIdTagsSignalError() instead")
    void getSelfAddonsAddonIdTagsSignalE(QList<QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfAddonsAddonIdTagsSignalError(QList<QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfAddonsAddonIdSignalError() instead")
    void getSelfAddonsAddonIdSignalE(OAIAddon summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfAddonsAddonIdSignalError(OAIAddon summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfAddonsSignalError() instead")
    void getSelfAddonsSignalE(QList<OAIAddon> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfAddonsSignalError(QList<OAIAddon> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdAddonsEnvSignalError() instead")
    void getSelfApplicationsAppIdAddonsEnvSignalE(QList<OAIEnv> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdAddonsEnvSignalError(QList<OAIEnv> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdAddonsSignalError() instead")
    void getSelfApplicationsAppIdAddonsSignalE(QList<OAIAddon> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdAddonsSignalError(QList<OAIAddon> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdDependenciesDependencyIdSignalError() instead")
    void getSelfApplicationsAppIdDependenciesDependencyIdSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdDependenciesDependencyIdSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdDependenciesSignalError() instead")
    void getSelfApplicationsAppIdDependenciesSignalE(QList<OAIApplication> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdDependenciesSignalError(QList<OAIApplication> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdDependentsSignalError() instead")
    void getSelfApplicationsAppIdDependentsSignalE(QList<OAIApplication> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdDependentsSignalError(QList<OAIApplication> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdDeploymentsSignalError() instead")
    void getSelfApplicationsAppIdDeploymentsSignalE(QList<OAIDeployment> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdDeploymentsSignalError(QList<OAIDeployment> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdEnvSignalError() instead")
    void getSelfApplicationsAppIdEnvSignalE(QList<OAIListEnv> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdEnvSignalError(QList<OAIListEnv> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdInstancesSignalError() instead")
    void getSelfApplicationsAppIdInstancesSignalE(QList<OAIInstance> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdInstancesSignalError(QList<OAIInstance> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdTagsSignalError() instead")
    void getSelfApplicationsAppIdTagsSignalE(QList<QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdTagsSignalError(QList<QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdVhostsFavouriteSignalError() instead")
    void getSelfApplicationsAppIdVhostsFavouriteSignalE(OAIVhost summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdVhostsFavouriteSignalError(OAIVhost summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdVhostsSignalError() instead")
    void getSelfApplicationsAppIdVhostsSignalE(QList<OAIVhost> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdVhostsSignalError(QList<OAIVhost> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdSignalError() instead")
    void getSelfApplicationsAppIdSignalE(OAIApplication summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdSignalError(OAIApplication summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsSignalError() instead")
    void getSelfApplicationsSignalE(QList<OAIApplication> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsSignalError(QList<OAIApplication> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfConfirmationEmailSignalError() instead")
    void getSelfConfirmationEmailSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfConfirmationEmailSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfConsumersKeySecretSignalError() instead")
    void getSelfConsumersKeySecretSignalE(OAISecret summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfConsumersKeySecretSignalError(OAISecret summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfConsumersKeySignalError() instead")
    void getSelfConsumersKeySignalE(OAIConsumer summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfConsumersKeySignalError(OAIConsumer summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfConsumersSignalError() instead")
    void getSelfConsumersSignalE(QList<OAIConsumer> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfConsumersSignalError(QList<OAIConsumer> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfConsumptionsSignalError() instead")
    void getSelfConsumptionsSignalE(OAIConso summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfConsumptionsSignalError(OAIConso summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfCreditsSignalError() instead")
    void getSelfCreditsSignalE(OAICredits summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfCreditsSignalError(OAICredits summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfEmailsSignalError() instead")
    void getSelfEmailsSignalE(QList<QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfEmailsSignalError(QList<QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfIdSignalError() instead")
    void getSelfIdSignalE(QString summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfIdSignalError(QString summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfInstancesSignalError() instead")
    void getSelfInstancesSignalE(QList<OAIInstance> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfInstancesSignalError(QList<OAIInstance> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfKeysSignalError() instead")
    void getSelfKeysSignalE(QList<OAIKey> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfKeysSignalError(QList<OAIKey> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfPaymentInfoSignalError() instead")
    void getSelfPaymentInfoSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfPaymentInfoSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfPaymentsBillingsBidPdfSignalError() instead")
    void getSelfPaymentsBillingsBidPdfSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfPaymentsBillingsBidPdfSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfPaymentsBillingsBidSignalError() instead")
    void getSelfPaymentsBillingsBidSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfPaymentsBillingsBidSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfPaymentsBillingsSignalError() instead")
    void getSelfPaymentsBillingsSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfPaymentsBillingsSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfPaymentsFullpricePriceSignalError() instead")
    void getSelfPaymentsFullpricePriceSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfPaymentsFullpricePriceSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfPaymentsMethodsSignalError() instead")
    void getSelfPaymentsMethodsSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfPaymentsMethodsSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfTokensSignalError() instead")
    void getSelfTokensSignalE(QList<OAIToken> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfTokensSignalError(QList<OAIToken> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfValidateEmailSignalError() instead")
    void getSelfValidateEmailSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfValidateEmailSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfSignalError() instead")
    void getSelfSignalE(OAIUser summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfSignalError(OAIUser summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use postSelfAddonsSignalError() instead")
    void postSelfAddonsSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void postSelfAddonsSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use postSelfApplicationsAppIdAddonsSignalError() instead")
    void postSelfApplicationsAppIdAddonsSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void postSelfApplicationsAppIdAddonsSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use postSelfApplicationsAppIdInstancesSignalError() instead")
    void postSelfApplicationsAppIdInstancesSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void postSelfApplicationsAppIdInstancesSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use postSelfApplicationsSignalError() instead")
    void postSelfApplicationsSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void postSelfApplicationsSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use postSelfConsumersSignalError() instead")
    void postSelfConsumersSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void postSelfConsumersSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use postSelfPaymentsBillingsSignalError() instead")
    void postSelfPaymentsBillingsSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void postSelfPaymentsBillingsSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use postSelfPaymentsMethodsSignalError() instead")
    void postSelfPaymentsMethodsSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void postSelfPaymentsMethodsSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfAddonsAddonIdPlanSignalError() instead")
    void putSelfAddonsAddonIdPlanSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfAddonsAddonIdPlanSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfAddonsAddonIdTagsTagSignalError() instead")
    void putSelfAddonsAddonIdTagsTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfAddonsAddonIdTagsTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfAddonsAddonIdSignalError() instead")
    void putSelfAddonsAddonIdSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfAddonsAddonIdSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfApplicationsAppIdEnvEnvNameSignalError() instead")
    void putSelfApplicationsAppIdEnvEnvNameSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfApplicationsAppIdEnvEnvNameSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfApplicationsAppIdEnvSignalError() instead")
    void putSelfApplicationsAppIdEnvSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfApplicationsAppIdEnvSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfApplicationsAppIdTagsTagSignalError() instead")
    void putSelfApplicationsAppIdTagsTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfApplicationsAppIdTagsTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfApplicationsAppIdVhostsDomainSignalError() instead")
    void putSelfApplicationsAppIdVhostsDomainSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfApplicationsAppIdVhostsDomainSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfApplicationsAppIdVhostsFavouriteSignalError() instead")
    void putSelfApplicationsAppIdVhostsFavouriteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfApplicationsAppIdVhostsFavouriteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfApplicationsAppIdSignalError() instead")
    void putSelfApplicationsAppIdSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfApplicationsAppIdSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfAvatarSignalError() instead")
    void putSelfAvatarSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfAvatarSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfChangePasswordSignalError() instead")
    void putSelfChangePasswordSignalE(OAIChange_Password summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfChangePasswordSignalError(OAIChange_Password summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfConsumersKeySignalError() instead")
    void putSelfConsumersKeySignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfConsumersKeySignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfEmailsEmailSignalError() instead")
    void putSelfEmailsEmailSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfEmailsEmailSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfKeysKeySignalError() instead")
    void putSelfKeysKeySignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfKeysKeySignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfPaymentsBillingsBidSignalError() instead")
    void putSelfPaymentsBillingsBidSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfPaymentsBillingsBidSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfSignalError() instead")
    void putSelfSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfAddonsPreordersPostSignalError() instead")
    void selfAddonsPreordersPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfAddonsPreordersPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfApplicationsAppIdBranchPutSignalError() instead")
    void selfApplicationsAppIdBranchPutSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfApplicationsAppIdBranchPutSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfApplicationsAppIdBranchesGetSignalError() instead")
    void selfApplicationsAppIdBranchesGetSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfApplicationsAppIdBranchesGetSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfApplicationsAppIdBuildflavorPutSignalError() instead")
    void selfApplicationsAppIdBuildflavorPutSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfApplicationsAppIdBuildflavorPutSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfApplicationsAppIdDependenciesEnvGetSignalError() instead")
    void selfApplicationsAppIdDependenciesEnvGetSignalE(QList<OAILinkedAppEnv> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void selfApplicationsAppIdDependenciesEnvGetSignalError(QList<OAILinkedAppEnv> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfApplicationsAppIdDeploymentsDeploymentIdGetSignalError() instead")
    void selfApplicationsAppIdDeploymentsDeploymentIdGetSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfApplicationsAppIdDeploymentsDeploymentIdGetSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfApplicationsAppIdExposedEnvGetSignalError() instead")
    void selfApplicationsAppIdExposedEnvGetSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfApplicationsAppIdExposedEnvGetSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfApplicationsAppIdExposedEnvPutSignalError() instead")
    void selfApplicationsAppIdExposedEnvPutSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfApplicationsAppIdExposedEnvPutSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfApplicationsAppIdInstancesInstanceIdGetSignalError() instead")
    void selfApplicationsAppIdInstancesInstanceIdGetSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfApplicationsAppIdInstancesInstanceIdGetSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfCliTokensGetSignalError() instead")
    void selfCliTokensGetSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfCliTokensGetSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfMfaKindBackupcodesGetSignalError() instead")
    void selfMfaKindBackupcodesGetSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfMfaKindBackupcodesGetSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfMfaKindConfirmationPostSignalError() instead")
    void selfMfaKindConfirmationPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfMfaKindConfirmationPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfMfaKindDeleteSignalError() instead")
    void selfMfaKindDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfMfaKindDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfMfaKindPostSignalError() instead")
    void selfMfaKindPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfMfaKindPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfMfaKindPutSignalError() instead")
    void selfMfaKindPutSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfMfaKindPutSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfPaymentsMethodsDefaultGetSignalError() instead")
    void selfPaymentsMethodsDefaultGetSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfPaymentsMethodsDefaultGetSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfPaymentsMethodsDefaultPutSignalError() instead")
    void selfPaymentsMethodsDefaultPutSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfPaymentsMethodsDefaultPutSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfPaymentsMonthlyinvoiceGetSignalError() instead")
    void selfPaymentsMonthlyinvoiceGetSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfPaymentsMonthlyinvoiceGetSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfPaymentsMonthlyinvoiceMaxcreditPutSignalError() instead")
    void selfPaymentsMonthlyinvoiceMaxcreditPutSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfPaymentsMonthlyinvoiceMaxcreditPutSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfPaymentsRecurringGetSignalError() instead")
    void selfPaymentsRecurringGetSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfPaymentsRecurringGetSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfPaymentsTokensStripeGetSignalError() instead")
    void selfPaymentsTokensStripeGetSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void selfPaymentsTokensStripeGetSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use deleteSelfAddonsAddonIdTagsTagSignalErrorFull() instead")
    void deleteSelfAddonsAddonIdTagsTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfAddonsAddonIdTagsTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfAddonsAddonIdSignalErrorFull() instead")
    void deleteSelfAddonsAddonIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfAddonsAddonIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfApplicationsAppIdAddonsAddonIdSignalErrorFull() instead")
    void deleteSelfApplicationsAppIdAddonsAddonIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfApplicationsAppIdAddonsAddonIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfApplicationsAppIdDependenciesDependencyIdSignalErrorFull() instead")
    void deleteSelfApplicationsAppIdDependenciesDependencyIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfApplicationsAppIdDependenciesDependencyIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfApplicationsAppIdDeploymentsDeploymentIdInstancesSignalErrorFull() instead")
    void deleteSelfApplicationsAppIdDeploymentsDeploymentIdInstancesSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfApplicationsAppIdDeploymentsDeploymentIdInstancesSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfApplicationsAppIdEnvEnvNameSignalErrorFull() instead")
    void deleteSelfApplicationsAppIdEnvEnvNameSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfApplicationsAppIdEnvEnvNameSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfApplicationsAppIdInstancesSignalErrorFull() instead")
    void deleteSelfApplicationsAppIdInstancesSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfApplicationsAppIdInstancesSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfApplicationsAppIdTagsTagSignalErrorFull() instead")
    void deleteSelfApplicationsAppIdTagsTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfApplicationsAppIdTagsTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfApplicationsAppIdVhostsDomainSignalErrorFull() instead")
    void deleteSelfApplicationsAppIdVhostsDomainSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfApplicationsAppIdVhostsDomainSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfApplicationsAppIdVhostsFavouriteSignalErrorFull() instead")
    void deleteSelfApplicationsAppIdVhostsFavouriteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfApplicationsAppIdVhostsFavouriteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfApplicationsAppIdSignalErrorFull() instead")
    void deleteSelfApplicationsAppIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfApplicationsAppIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfConsumersKeySignalErrorFull() instead")
    void deleteSelfConsumersKeySignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfConsumersKeySignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfEmailsEmailSignalErrorFull() instead")
    void deleteSelfEmailsEmailSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfEmailsEmailSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfKeysKeySignalErrorFull() instead")
    void deleteSelfKeysKeySignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfKeysKeySignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfPaymentsBillingsBidSignalErrorFull() instead")
    void deleteSelfPaymentsBillingsBidSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfPaymentsBillingsBidSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfPaymentsMethodsMIdSignalErrorFull() instead")
    void deleteSelfPaymentsMethodsMIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfPaymentsMethodsMIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfPaymentsRecurringSignalErrorFull() instead")
    void deleteSelfPaymentsRecurringSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfPaymentsRecurringSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfTokensTokenSignalErrorFull() instead")
    void deleteSelfTokensTokenSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfTokensTokenSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfTokensSignalErrorFull() instead")
    void deleteSelfTokensSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfTokensSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSelfSignalErrorFull() instead")
    void deleteSelfSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSelfSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfAddonsAddonIdApplicationsSignalErrorFull() instead")
    void getSelfAddonsAddonIdApplicationsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfAddonsAddonIdApplicationsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfAddonsAddonIdEnvSignalErrorFull() instead")
    void getSelfAddonsAddonIdEnvSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfAddonsAddonIdEnvSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfAddonsAddonIdSsoSignalErrorFull() instead")
    void getSelfAddonsAddonIdSsoSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfAddonsAddonIdSsoSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfAddonsAddonIdTagsSignalErrorFull() instead")
    void getSelfAddonsAddonIdTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfAddonsAddonIdTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfAddonsAddonIdSignalErrorFull() instead")
    void getSelfAddonsAddonIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfAddonsAddonIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfAddonsSignalErrorFull() instead")
    void getSelfAddonsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfAddonsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdAddonsEnvSignalErrorFull() instead")
    void getSelfApplicationsAppIdAddonsEnvSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdAddonsEnvSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdAddonsSignalErrorFull() instead")
    void getSelfApplicationsAppIdAddonsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdAddonsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdDependenciesDependencyIdSignalErrorFull() instead")
    void getSelfApplicationsAppIdDependenciesDependencyIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdDependenciesDependencyIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdDependenciesSignalErrorFull() instead")
    void getSelfApplicationsAppIdDependenciesSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdDependenciesSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdDependentsSignalErrorFull() instead")
    void getSelfApplicationsAppIdDependentsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdDependentsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdDeploymentsSignalErrorFull() instead")
    void getSelfApplicationsAppIdDeploymentsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdDeploymentsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdEnvSignalErrorFull() instead")
    void getSelfApplicationsAppIdEnvSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdEnvSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdInstancesSignalErrorFull() instead")
    void getSelfApplicationsAppIdInstancesSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdInstancesSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdTagsSignalErrorFull() instead")
    void getSelfApplicationsAppIdTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdVhostsFavouriteSignalErrorFull() instead")
    void getSelfApplicationsAppIdVhostsFavouriteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdVhostsFavouriteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdVhostsSignalErrorFull() instead")
    void getSelfApplicationsAppIdVhostsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdVhostsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsAppIdSignalErrorFull() instead")
    void getSelfApplicationsAppIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsAppIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfApplicationsSignalErrorFull() instead")
    void getSelfApplicationsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfApplicationsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfConfirmationEmailSignalErrorFull() instead")
    void getSelfConfirmationEmailSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfConfirmationEmailSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfConsumersKeySecretSignalErrorFull() instead")
    void getSelfConsumersKeySecretSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfConsumersKeySecretSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfConsumersKeySignalErrorFull() instead")
    void getSelfConsumersKeySignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfConsumersKeySignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfConsumersSignalErrorFull() instead")
    void getSelfConsumersSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfConsumersSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfConsumptionsSignalErrorFull() instead")
    void getSelfConsumptionsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfConsumptionsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfCreditsSignalErrorFull() instead")
    void getSelfCreditsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfCreditsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfEmailsSignalErrorFull() instead")
    void getSelfEmailsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfEmailsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfIdSignalErrorFull() instead")
    void getSelfIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfInstancesSignalErrorFull() instead")
    void getSelfInstancesSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfInstancesSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfKeysSignalErrorFull() instead")
    void getSelfKeysSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfKeysSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfPaymentInfoSignalErrorFull() instead")
    void getSelfPaymentInfoSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfPaymentInfoSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfPaymentsBillingsBidPdfSignalErrorFull() instead")
    void getSelfPaymentsBillingsBidPdfSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfPaymentsBillingsBidPdfSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfPaymentsBillingsBidSignalErrorFull() instead")
    void getSelfPaymentsBillingsBidSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfPaymentsBillingsBidSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfPaymentsBillingsSignalErrorFull() instead")
    void getSelfPaymentsBillingsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfPaymentsBillingsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfPaymentsFullpricePriceSignalErrorFull() instead")
    void getSelfPaymentsFullpricePriceSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfPaymentsFullpricePriceSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfPaymentsMethodsSignalErrorFull() instead")
    void getSelfPaymentsMethodsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfPaymentsMethodsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfTokensSignalErrorFull() instead")
    void getSelfTokensSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfTokensSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfValidateEmailSignalErrorFull() instead")
    void getSelfValidateEmailSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfValidateEmailSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSelfSignalErrorFull() instead")
    void getSelfSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSelfSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use postSelfAddonsSignalErrorFull() instead")
    void postSelfAddonsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void postSelfAddonsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use postSelfApplicationsAppIdAddonsSignalErrorFull() instead")
    void postSelfApplicationsAppIdAddonsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void postSelfApplicationsAppIdAddonsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use postSelfApplicationsAppIdInstancesSignalErrorFull() instead")
    void postSelfApplicationsAppIdInstancesSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void postSelfApplicationsAppIdInstancesSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use postSelfApplicationsSignalErrorFull() instead")
    void postSelfApplicationsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void postSelfApplicationsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use postSelfConsumersSignalErrorFull() instead")
    void postSelfConsumersSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void postSelfConsumersSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use postSelfPaymentsBillingsSignalErrorFull() instead")
    void postSelfPaymentsBillingsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void postSelfPaymentsBillingsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use postSelfPaymentsMethodsSignalErrorFull() instead")
    void postSelfPaymentsMethodsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void postSelfPaymentsMethodsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfAddonsAddonIdPlanSignalErrorFull() instead")
    void putSelfAddonsAddonIdPlanSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfAddonsAddonIdPlanSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfAddonsAddonIdTagsTagSignalErrorFull() instead")
    void putSelfAddonsAddonIdTagsTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfAddonsAddonIdTagsTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfAddonsAddonIdSignalErrorFull() instead")
    void putSelfAddonsAddonIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfAddonsAddonIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfApplicationsAppIdEnvEnvNameSignalErrorFull() instead")
    void putSelfApplicationsAppIdEnvEnvNameSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfApplicationsAppIdEnvEnvNameSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfApplicationsAppIdEnvSignalErrorFull() instead")
    void putSelfApplicationsAppIdEnvSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfApplicationsAppIdEnvSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfApplicationsAppIdTagsTagSignalErrorFull() instead")
    void putSelfApplicationsAppIdTagsTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfApplicationsAppIdTagsTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfApplicationsAppIdVhostsDomainSignalErrorFull() instead")
    void putSelfApplicationsAppIdVhostsDomainSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfApplicationsAppIdVhostsDomainSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfApplicationsAppIdVhostsFavouriteSignalErrorFull() instead")
    void putSelfApplicationsAppIdVhostsFavouriteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfApplicationsAppIdVhostsFavouriteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfApplicationsAppIdSignalErrorFull() instead")
    void putSelfApplicationsAppIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfApplicationsAppIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfAvatarSignalErrorFull() instead")
    void putSelfAvatarSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfAvatarSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfChangePasswordSignalErrorFull() instead")
    void putSelfChangePasswordSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfChangePasswordSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfConsumersKeySignalErrorFull() instead")
    void putSelfConsumersKeySignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfConsumersKeySignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfEmailsEmailSignalErrorFull() instead")
    void putSelfEmailsEmailSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfEmailsEmailSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfKeysKeySignalErrorFull() instead")
    void putSelfKeysKeySignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfKeysKeySignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfPaymentsBillingsBidSignalErrorFull() instead")
    void putSelfPaymentsBillingsBidSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfPaymentsBillingsBidSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSelfSignalErrorFull() instead")
    void putSelfSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putSelfSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfAddonsPreordersPostSignalErrorFull() instead")
    void selfAddonsPreordersPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfAddonsPreordersPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfApplicationsAppIdBranchPutSignalErrorFull() instead")
    void selfApplicationsAppIdBranchPutSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfApplicationsAppIdBranchPutSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfApplicationsAppIdBranchesGetSignalErrorFull() instead")
    void selfApplicationsAppIdBranchesGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfApplicationsAppIdBranchesGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfApplicationsAppIdBuildflavorPutSignalErrorFull() instead")
    void selfApplicationsAppIdBuildflavorPutSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfApplicationsAppIdBuildflavorPutSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfApplicationsAppIdDependenciesEnvGetSignalErrorFull() instead")
    void selfApplicationsAppIdDependenciesEnvGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfApplicationsAppIdDependenciesEnvGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfApplicationsAppIdDeploymentsDeploymentIdGetSignalErrorFull() instead")
    void selfApplicationsAppIdDeploymentsDeploymentIdGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfApplicationsAppIdDeploymentsDeploymentIdGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfApplicationsAppIdExposedEnvGetSignalErrorFull() instead")
    void selfApplicationsAppIdExposedEnvGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfApplicationsAppIdExposedEnvGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfApplicationsAppIdExposedEnvPutSignalErrorFull() instead")
    void selfApplicationsAppIdExposedEnvPutSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfApplicationsAppIdExposedEnvPutSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfApplicationsAppIdInstancesInstanceIdGetSignalErrorFull() instead")
    void selfApplicationsAppIdInstancesInstanceIdGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfApplicationsAppIdInstancesInstanceIdGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfCliTokensGetSignalErrorFull() instead")
    void selfCliTokensGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfCliTokensGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfMfaKindBackupcodesGetSignalErrorFull() instead")
    void selfMfaKindBackupcodesGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfMfaKindBackupcodesGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfMfaKindConfirmationPostSignalErrorFull() instead")
    void selfMfaKindConfirmationPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfMfaKindConfirmationPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfMfaKindDeleteSignalErrorFull() instead")
    void selfMfaKindDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfMfaKindDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfMfaKindPostSignalErrorFull() instead")
    void selfMfaKindPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfMfaKindPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfMfaKindPutSignalErrorFull() instead")
    void selfMfaKindPutSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfMfaKindPutSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfPaymentsMethodsDefaultGetSignalErrorFull() instead")
    void selfPaymentsMethodsDefaultGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfPaymentsMethodsDefaultGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfPaymentsMethodsDefaultPutSignalErrorFull() instead")
    void selfPaymentsMethodsDefaultPutSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfPaymentsMethodsDefaultPutSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfPaymentsMonthlyinvoiceGetSignalErrorFull() instead")
    void selfPaymentsMonthlyinvoiceGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfPaymentsMonthlyinvoiceGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfPaymentsMonthlyinvoiceMaxcreditPutSignalErrorFull() instead")
    void selfPaymentsMonthlyinvoiceMaxcreditPutSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfPaymentsMonthlyinvoiceMaxcreditPutSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfPaymentsRecurringGetSignalErrorFull() instead")
    void selfPaymentsRecurringGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfPaymentsRecurringGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use selfPaymentsTokensStripeGetSignalErrorFull() instead")
    void selfPaymentsTokensStripeGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void selfPaymentsTokensStripeGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
