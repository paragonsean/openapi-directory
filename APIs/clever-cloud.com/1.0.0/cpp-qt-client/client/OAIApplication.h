/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplication.h
 *
 * 
 */

#ifndef OAIApplication_H
#define OAIApplication_H

#include <QJsonObject>

#include "OAIDeployment.h"
#include "OAIFlavor.h"
#include "OAIInstance.h"
#include "OAIVhost.h"
#include <QDate>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFlavor;
class OAIDeployment;
class OAIInstance;
class OAIVhost;

class OAIApplication : public OAIObject {
public:
    OAIApplication();
    OAIApplication(QString json);
    ~OAIApplication() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isArchived() const;
    void setArchived(const bool &archived);
    bool is_archived_Set() const;
    bool is_archived_Valid() const;

    QString getBranch() const;
    void setBranch(const QString &branch);
    bool is_branch_Set() const;
    bool is_branch_Valid() const;

    OAIFlavor getBuildFlavor() const;
    void setBuildFlavor(const OAIFlavor &build_flavor);
    bool is_build_flavor_Set() const;
    bool is_build_flavor_Valid() const;

    bool isCancelOnPush() const;
    void setCancelOnPush(const bool &cancel_on_push);
    bool is_cancel_on_push_Set() const;
    bool is_cancel_on_push_Valid() const;

    QString getCommitId() const;
    void setCommitId(const QString &commit_id);
    bool is_commit_id_Set() const;
    bool is_commit_id_Valid() const;

    QDate getCreationDate() const;
    void setCreationDate(const QDate &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QString getDeployUrl() const;
    void setDeployUrl(const QString &deploy_url);
    bool is_deploy_url_Set() const;
    bool is_deploy_url_Valid() const;

    OAIDeployment getDeployment() const;
    void setDeployment(const OAIDeployment &deployment);
    bool is_deployment_Set() const;
    bool is_deployment_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isFavourite() const;
    void setFavourite(const bool &favourite);
    bool is_favourite_Set() const;
    bool is_favourite_Valid() const;

    bool isHomogeneous() const;
    void setHomogeneous(const bool &homogeneous);
    bool is_homogeneous_Set() const;
    bool is_homogeneous_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIInstance getInstance() const;
    void setInstance(const OAIInstance &instance);
    bool is_instance_Set() const;
    bool is_instance_Valid() const;

    qint32 getLastDeploy() const;
    void setLastDeploy(const qint32 &last_deploy);
    bool is_last_deploy_Set() const;
    bool is_last_deploy_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOwnerId() const;
    void setOwnerId(const QString &owner_id);
    bool is_owner_id_Set() const;
    bool is_owner_id_Valid() const;

    bool isSeparateBuild() const;
    void setSeparateBuild(const bool &separate_build);
    bool is_separate_build_Set() const;
    bool is_separate_build_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    bool isStickySessions() const;
    void setStickySessions(const bool &sticky_sessions);
    bool is_sticky_sessions_Set() const;
    bool is_sticky_sessions_Valid() const;

    QList<OAIVhost> getVhosts() const;
    void setVhosts(const QList<OAIVhost> &vhosts);
    bool is_vhosts_Set() const;
    bool is_vhosts_Valid() const;

    QString getWebhookSecret() const;
    void setWebhookSecret(const QString &webhook_secret);
    bool is_webhook_secret_Set() const;
    bool is_webhook_secret_Valid() const;

    QString getWebhookUrl() const;
    void setWebhookUrl(const QString &webhook_url);
    bool is_webhook_url_Set() const;
    bool is_webhook_url_Valid() const;

    QString getZone() const;
    void setZone(const QString &zone);
    bool is_zone_Set() const;
    bool is_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_archived;
    bool m_archived_isSet;
    bool m_archived_isValid;

    QString m_branch;
    bool m_branch_isSet;
    bool m_branch_isValid;

    OAIFlavor m_build_flavor;
    bool m_build_flavor_isSet;
    bool m_build_flavor_isValid;

    bool m_cancel_on_push;
    bool m_cancel_on_push_isSet;
    bool m_cancel_on_push_isValid;

    QString m_commit_id;
    bool m_commit_id_isSet;
    bool m_commit_id_isValid;

    QDate m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QString m_deploy_url;
    bool m_deploy_url_isSet;
    bool m_deploy_url_isValid;

    OAIDeployment m_deployment;
    bool m_deployment_isSet;
    bool m_deployment_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_favourite;
    bool m_favourite_isSet;
    bool m_favourite_isValid;

    bool m_homogeneous;
    bool m_homogeneous_isSet;
    bool m_homogeneous_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIInstance m_instance;
    bool m_instance_isSet;
    bool m_instance_isValid;

    qint32 m_last_deploy;
    bool m_last_deploy_isSet;
    bool m_last_deploy_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_owner_id;
    bool m_owner_id_isSet;
    bool m_owner_id_isValid;

    bool m_separate_build;
    bool m_separate_build_isSet;
    bool m_separate_build_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    bool m_sticky_sessions;
    bool m_sticky_sessions_isSet;
    bool m_sticky_sessions_isValid;

    QList<OAIVhost> m_vhosts;
    bool m_vhosts_isSet;
    bool m_vhosts_isValid;

    QString m_webhook_secret;
    bool m_webhook_secret_isSet;
    bool m_webhook_secret_isValid;

    QString m_webhook_url;
    bool m_webhook_url_isSet;
    bool m_webhook_url_isValid;

    QString m_zone;
    bool m_zone_isSet;
    bool m_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplication)

#endif // OAIApplication_H
