/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISummary_organisations_inner_applications_inner.h
 *
 * 
 */

#ifndef OAISummary_organisations_inner_applications_inner_H
#define OAISummary_organisations_inner_applications_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISummary_organisations_inner_applications_inner : public OAIObject {
public:
    OAISummary_organisations_inner_applications_inner();
    OAISummary_organisations_inner_applications_inner(QString json);
    ~OAISummary_organisations_inner_applications_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isArchived() const;
    void setArchived(const bool &archived);
    bool is_archived_Set() const;
    bool is_archived_Valid() const;

    QString getCommit() const;
    void setCommit(const QString &commit);
    bool is_commit_Set() const;
    bool is_commit_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    QString getInstanceVariant() const;
    void setInstanceVariant(const QString &instance_variant);
    bool is_instance_variant_Set() const;
    bool is_instance_variant_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getVariantSlug() const;
    void setVariantSlug(const QString &variant_slug);
    bool is_variant_slug_Set() const;
    bool is_variant_slug_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_archived;
    bool m_archived_isSet;
    bool m_archived_isValid;

    QString m_commit;
    bool m_commit_isSet;
    bool m_commit_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    QString m_instance_variant;
    bool m_instance_variant_isSet;
    bool m_instance_variant_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_variant_slug;
    bool m_variant_slug_isSet;
    bool m_variant_slug_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISummary_organisations_inner_applications_inner)

#endif // OAISummary_organisations_inner_applications_inner_H
