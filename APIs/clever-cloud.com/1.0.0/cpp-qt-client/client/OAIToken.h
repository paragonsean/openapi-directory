/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIToken.h
 *
 * 
 */

#ifndef OAIToken_H
#define OAIToken_H

#include <QJsonObject>

#include "OAIConsumer.h"
#include "OAIRights.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConsumer;
class OAIRights;

class OAIToken : public OAIObject {
public:
    OAIToken();
    OAIToken(QString json);
    ~OAIToken() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConsumer getConsumer() const;
    void setConsumer(const OAIConsumer &consumer);
    bool is_consumer_Set() const;
    bool is_consumer_Valid() const;

    qint32 getCreationDate() const;
    void setCreationDate(const qint32 &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QString getLastUtilisation() const;
    void setLastUtilisation(const QString &last_utilisation);
    bool is_last_utilisation_Set() const;
    bool is_last_utilisation_Valid() const;

    OAIRights getRights() const;
    void setRights(const OAIRights &rights);
    bool is_rights_Set() const;
    bool is_rights_Valid() const;

    QString getToken() const;
    void setToken(const QString &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConsumer m_consumer;
    bool m_consumer_isSet;
    bool m_consumer_isValid;

    qint32 m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QString m_last_utilisation;
    bool m_last_utilisation_isSet;
    bool m_last_utilisation_isValid;

    OAIRights m_rights;
    bool m_rights_isSet;
    bool m_rights_isValid;

    QString m_token;
    bool m_token_isSet;
    bool m_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIToken)

#endif // OAIToken_H
