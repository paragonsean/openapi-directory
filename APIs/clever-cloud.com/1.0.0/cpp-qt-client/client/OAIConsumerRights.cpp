/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConsumerRights.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConsumerRights::OAIConsumerRights(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConsumerRights::OAIConsumerRights() {
    this->initializeModel();
}

OAIConsumerRights::~OAIConsumerRights() {}

void OAIConsumerRights::initializeModel() {

    m_access_bills_isSet = false;
    m_access_bills_isValid = false;

    m_access_consumption_statistics_isSet = false;
    m_access_consumption_statistics_isValid = false;

    m_access_credit_count_isSet = false;
    m_access_credit_count_isValid = false;

    m_access_organisations_isSet = false;
    m_access_organisations_isValid = false;

    m_access_organisations_bills_isSet = false;
    m_access_organisations_bills_isValid = false;

    m_access_organisations_consumption_statistics_isSet = false;
    m_access_organisations_consumption_statistics_isValid = false;

    m_access_organisations_credit_count_isSet = false;
    m_access_organisations_credit_count_isValid = false;

    m_access_personal_information_isSet = false;
    m_access_personal_information_isValid = false;

    m_almighty_isSet = false;
    m_almighty_isValid = false;

    m_manage_applications_isSet = false;
    m_manage_applications_isValid = false;

    m_manage_organisations_isSet = false;
    m_manage_organisations_isValid = false;

    m_manage_organisations_applications_isSet = false;
    m_manage_organisations_applications_isValid = false;

    m_manage_organisations_members_isSet = false;
    m_manage_organisations_members_isValid = false;

    m_manage_organisations_services_isSet = false;
    m_manage_organisations_services_isValid = false;

    m_manage_personal_information_isSet = false;
    m_manage_personal_information_isValid = false;

    m_manage_services_isSet = false;
    m_manage_services_isValid = false;

    m_manage_ssh_keys_isSet = false;
    m_manage_ssh_keys_isValid = false;
}

void OAIConsumerRights::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConsumerRights::fromJsonObject(QJsonObject json) {

    m_access_bills_isValid = ::OpenAPI::fromJsonValue(m_access_bills, json[QString("access_bills")]);
    m_access_bills_isSet = !json[QString("access_bills")].isNull() && m_access_bills_isValid;

    m_access_consumption_statistics_isValid = ::OpenAPI::fromJsonValue(m_access_consumption_statistics, json[QString("access_consumption_statistics")]);
    m_access_consumption_statistics_isSet = !json[QString("access_consumption_statistics")].isNull() && m_access_consumption_statistics_isValid;

    m_access_credit_count_isValid = ::OpenAPI::fromJsonValue(m_access_credit_count, json[QString("access_credit_count")]);
    m_access_credit_count_isSet = !json[QString("access_credit_count")].isNull() && m_access_credit_count_isValid;

    m_access_organisations_isValid = ::OpenAPI::fromJsonValue(m_access_organisations, json[QString("access_organisations")]);
    m_access_organisations_isSet = !json[QString("access_organisations")].isNull() && m_access_organisations_isValid;

    m_access_organisations_bills_isValid = ::OpenAPI::fromJsonValue(m_access_organisations_bills, json[QString("access_organisations_bills")]);
    m_access_organisations_bills_isSet = !json[QString("access_organisations_bills")].isNull() && m_access_organisations_bills_isValid;

    m_access_organisations_consumption_statistics_isValid = ::OpenAPI::fromJsonValue(m_access_organisations_consumption_statistics, json[QString("access_organisations_consumption_statistics")]);
    m_access_organisations_consumption_statistics_isSet = !json[QString("access_organisations_consumption_statistics")].isNull() && m_access_organisations_consumption_statistics_isValid;

    m_access_organisations_credit_count_isValid = ::OpenAPI::fromJsonValue(m_access_organisations_credit_count, json[QString("access_organisations_credit_count")]);
    m_access_organisations_credit_count_isSet = !json[QString("access_organisations_credit_count")].isNull() && m_access_organisations_credit_count_isValid;

    m_access_personal_information_isValid = ::OpenAPI::fromJsonValue(m_access_personal_information, json[QString("access_personal_information")]);
    m_access_personal_information_isSet = !json[QString("access_personal_information")].isNull() && m_access_personal_information_isValid;

    m_almighty_isValid = ::OpenAPI::fromJsonValue(m_almighty, json[QString("almighty")]);
    m_almighty_isSet = !json[QString("almighty")].isNull() && m_almighty_isValid;

    m_manage_applications_isValid = ::OpenAPI::fromJsonValue(m_manage_applications, json[QString("manage_applications")]);
    m_manage_applications_isSet = !json[QString("manage_applications")].isNull() && m_manage_applications_isValid;

    m_manage_organisations_isValid = ::OpenAPI::fromJsonValue(m_manage_organisations, json[QString("manage_organisations")]);
    m_manage_organisations_isSet = !json[QString("manage_organisations")].isNull() && m_manage_organisations_isValid;

    m_manage_organisations_applications_isValid = ::OpenAPI::fromJsonValue(m_manage_organisations_applications, json[QString("manage_organisations_applications")]);
    m_manage_organisations_applications_isSet = !json[QString("manage_organisations_applications")].isNull() && m_manage_organisations_applications_isValid;

    m_manage_organisations_members_isValid = ::OpenAPI::fromJsonValue(m_manage_organisations_members, json[QString("manage_organisations_members")]);
    m_manage_organisations_members_isSet = !json[QString("manage_organisations_members")].isNull() && m_manage_organisations_members_isValid;

    m_manage_organisations_services_isValid = ::OpenAPI::fromJsonValue(m_manage_organisations_services, json[QString("manage_organisations_services")]);
    m_manage_organisations_services_isSet = !json[QString("manage_organisations_services")].isNull() && m_manage_organisations_services_isValid;

    m_manage_personal_information_isValid = ::OpenAPI::fromJsonValue(m_manage_personal_information, json[QString("manage_personal_information")]);
    m_manage_personal_information_isSet = !json[QString("manage_personal_information")].isNull() && m_manage_personal_information_isValid;

    m_manage_services_isValid = ::OpenAPI::fromJsonValue(m_manage_services, json[QString("manage_services")]);
    m_manage_services_isSet = !json[QString("manage_services")].isNull() && m_manage_services_isValid;

    m_manage_ssh_keys_isValid = ::OpenAPI::fromJsonValue(m_manage_ssh_keys, json[QString("manage_ssh_keys")]);
    m_manage_ssh_keys_isSet = !json[QString("manage_ssh_keys")].isNull() && m_manage_ssh_keys_isValid;
}

QString OAIConsumerRights::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConsumerRights::asJsonObject() const {
    QJsonObject obj;
    if (m_access_bills_isSet) {
        obj.insert(QString("access_bills"), ::OpenAPI::toJsonValue(m_access_bills));
    }
    if (m_access_consumption_statistics_isSet) {
        obj.insert(QString("access_consumption_statistics"), ::OpenAPI::toJsonValue(m_access_consumption_statistics));
    }
    if (m_access_credit_count_isSet) {
        obj.insert(QString("access_credit_count"), ::OpenAPI::toJsonValue(m_access_credit_count));
    }
    if (m_access_organisations_isSet) {
        obj.insert(QString("access_organisations"), ::OpenAPI::toJsonValue(m_access_organisations));
    }
    if (m_access_organisations_bills_isSet) {
        obj.insert(QString("access_organisations_bills"), ::OpenAPI::toJsonValue(m_access_organisations_bills));
    }
    if (m_access_organisations_consumption_statistics_isSet) {
        obj.insert(QString("access_organisations_consumption_statistics"), ::OpenAPI::toJsonValue(m_access_organisations_consumption_statistics));
    }
    if (m_access_organisations_credit_count_isSet) {
        obj.insert(QString("access_organisations_credit_count"), ::OpenAPI::toJsonValue(m_access_organisations_credit_count));
    }
    if (m_access_personal_information_isSet) {
        obj.insert(QString("access_personal_information"), ::OpenAPI::toJsonValue(m_access_personal_information));
    }
    if (m_almighty_isSet) {
        obj.insert(QString("almighty"), ::OpenAPI::toJsonValue(m_almighty));
    }
    if (m_manage_applications_isSet) {
        obj.insert(QString("manage_applications"), ::OpenAPI::toJsonValue(m_manage_applications));
    }
    if (m_manage_organisations_isSet) {
        obj.insert(QString("manage_organisations"), ::OpenAPI::toJsonValue(m_manage_organisations));
    }
    if (m_manage_organisations_applications_isSet) {
        obj.insert(QString("manage_organisations_applications"), ::OpenAPI::toJsonValue(m_manage_organisations_applications));
    }
    if (m_manage_organisations_members_isSet) {
        obj.insert(QString("manage_organisations_members"), ::OpenAPI::toJsonValue(m_manage_organisations_members));
    }
    if (m_manage_organisations_services_isSet) {
        obj.insert(QString("manage_organisations_services"), ::OpenAPI::toJsonValue(m_manage_organisations_services));
    }
    if (m_manage_personal_information_isSet) {
        obj.insert(QString("manage_personal_information"), ::OpenAPI::toJsonValue(m_manage_personal_information));
    }
    if (m_manage_services_isSet) {
        obj.insert(QString("manage_services"), ::OpenAPI::toJsonValue(m_manage_services));
    }
    if (m_manage_ssh_keys_isSet) {
        obj.insert(QString("manage_ssh_keys"), ::OpenAPI::toJsonValue(m_manage_ssh_keys));
    }
    return obj;
}

bool OAIConsumerRights::isAccessBills() const {
    return m_access_bills;
}
void OAIConsumerRights::setAccessBills(const bool &access_bills) {
    m_access_bills = access_bills;
    m_access_bills_isSet = true;
}

bool OAIConsumerRights::is_access_bills_Set() const{
    return m_access_bills_isSet;
}

bool OAIConsumerRights::is_access_bills_Valid() const{
    return m_access_bills_isValid;
}

bool OAIConsumerRights::isAccessConsumptionStatistics() const {
    return m_access_consumption_statistics;
}
void OAIConsumerRights::setAccessConsumptionStatistics(const bool &access_consumption_statistics) {
    m_access_consumption_statistics = access_consumption_statistics;
    m_access_consumption_statistics_isSet = true;
}

bool OAIConsumerRights::is_access_consumption_statistics_Set() const{
    return m_access_consumption_statistics_isSet;
}

bool OAIConsumerRights::is_access_consumption_statistics_Valid() const{
    return m_access_consumption_statistics_isValid;
}

bool OAIConsumerRights::isAccessCreditCount() const {
    return m_access_credit_count;
}
void OAIConsumerRights::setAccessCreditCount(const bool &access_credit_count) {
    m_access_credit_count = access_credit_count;
    m_access_credit_count_isSet = true;
}

bool OAIConsumerRights::is_access_credit_count_Set() const{
    return m_access_credit_count_isSet;
}

bool OAIConsumerRights::is_access_credit_count_Valid() const{
    return m_access_credit_count_isValid;
}

bool OAIConsumerRights::isAccessOrganisations() const {
    return m_access_organisations;
}
void OAIConsumerRights::setAccessOrganisations(const bool &access_organisations) {
    m_access_organisations = access_organisations;
    m_access_organisations_isSet = true;
}

bool OAIConsumerRights::is_access_organisations_Set() const{
    return m_access_organisations_isSet;
}

bool OAIConsumerRights::is_access_organisations_Valid() const{
    return m_access_organisations_isValid;
}

bool OAIConsumerRights::isAccessOrganisationsBills() const {
    return m_access_organisations_bills;
}
void OAIConsumerRights::setAccessOrganisationsBills(const bool &access_organisations_bills) {
    m_access_organisations_bills = access_organisations_bills;
    m_access_organisations_bills_isSet = true;
}

bool OAIConsumerRights::is_access_organisations_bills_Set() const{
    return m_access_organisations_bills_isSet;
}

bool OAIConsumerRights::is_access_organisations_bills_Valid() const{
    return m_access_organisations_bills_isValid;
}

bool OAIConsumerRights::isAccessOrganisationsConsumptionStatistics() const {
    return m_access_organisations_consumption_statistics;
}
void OAIConsumerRights::setAccessOrganisationsConsumptionStatistics(const bool &access_organisations_consumption_statistics) {
    m_access_organisations_consumption_statistics = access_organisations_consumption_statistics;
    m_access_organisations_consumption_statistics_isSet = true;
}

bool OAIConsumerRights::is_access_organisations_consumption_statistics_Set() const{
    return m_access_organisations_consumption_statistics_isSet;
}

bool OAIConsumerRights::is_access_organisations_consumption_statistics_Valid() const{
    return m_access_organisations_consumption_statistics_isValid;
}

bool OAIConsumerRights::isAccessOrganisationsCreditCount() const {
    return m_access_organisations_credit_count;
}
void OAIConsumerRights::setAccessOrganisationsCreditCount(const bool &access_organisations_credit_count) {
    m_access_organisations_credit_count = access_organisations_credit_count;
    m_access_organisations_credit_count_isSet = true;
}

bool OAIConsumerRights::is_access_organisations_credit_count_Set() const{
    return m_access_organisations_credit_count_isSet;
}

bool OAIConsumerRights::is_access_organisations_credit_count_Valid() const{
    return m_access_organisations_credit_count_isValid;
}

bool OAIConsumerRights::isAccessPersonalInformation() const {
    return m_access_personal_information;
}
void OAIConsumerRights::setAccessPersonalInformation(const bool &access_personal_information) {
    m_access_personal_information = access_personal_information;
    m_access_personal_information_isSet = true;
}

bool OAIConsumerRights::is_access_personal_information_Set() const{
    return m_access_personal_information_isSet;
}

bool OAIConsumerRights::is_access_personal_information_Valid() const{
    return m_access_personal_information_isValid;
}

bool OAIConsumerRights::isAlmighty() const {
    return m_almighty;
}
void OAIConsumerRights::setAlmighty(const bool &almighty) {
    m_almighty = almighty;
    m_almighty_isSet = true;
}

bool OAIConsumerRights::is_almighty_Set() const{
    return m_almighty_isSet;
}

bool OAIConsumerRights::is_almighty_Valid() const{
    return m_almighty_isValid;
}

bool OAIConsumerRights::isManageApplications() const {
    return m_manage_applications;
}
void OAIConsumerRights::setManageApplications(const bool &manage_applications) {
    m_manage_applications = manage_applications;
    m_manage_applications_isSet = true;
}

bool OAIConsumerRights::is_manage_applications_Set() const{
    return m_manage_applications_isSet;
}

bool OAIConsumerRights::is_manage_applications_Valid() const{
    return m_manage_applications_isValid;
}

bool OAIConsumerRights::isManageOrganisations() const {
    return m_manage_organisations;
}
void OAIConsumerRights::setManageOrganisations(const bool &manage_organisations) {
    m_manage_organisations = manage_organisations;
    m_manage_organisations_isSet = true;
}

bool OAIConsumerRights::is_manage_organisations_Set() const{
    return m_manage_organisations_isSet;
}

bool OAIConsumerRights::is_manage_organisations_Valid() const{
    return m_manage_organisations_isValid;
}

bool OAIConsumerRights::isManageOrganisationsApplications() const {
    return m_manage_organisations_applications;
}
void OAIConsumerRights::setManageOrganisationsApplications(const bool &manage_organisations_applications) {
    m_manage_organisations_applications = manage_organisations_applications;
    m_manage_organisations_applications_isSet = true;
}

bool OAIConsumerRights::is_manage_organisations_applications_Set() const{
    return m_manage_organisations_applications_isSet;
}

bool OAIConsumerRights::is_manage_organisations_applications_Valid() const{
    return m_manage_organisations_applications_isValid;
}

bool OAIConsumerRights::isManageOrganisationsMembers() const {
    return m_manage_organisations_members;
}
void OAIConsumerRights::setManageOrganisationsMembers(const bool &manage_organisations_members) {
    m_manage_organisations_members = manage_organisations_members;
    m_manage_organisations_members_isSet = true;
}

bool OAIConsumerRights::is_manage_organisations_members_Set() const{
    return m_manage_organisations_members_isSet;
}

bool OAIConsumerRights::is_manage_organisations_members_Valid() const{
    return m_manage_organisations_members_isValid;
}

bool OAIConsumerRights::isManageOrganisationsServices() const {
    return m_manage_organisations_services;
}
void OAIConsumerRights::setManageOrganisationsServices(const bool &manage_organisations_services) {
    m_manage_organisations_services = manage_organisations_services;
    m_manage_organisations_services_isSet = true;
}

bool OAIConsumerRights::is_manage_organisations_services_Set() const{
    return m_manage_organisations_services_isSet;
}

bool OAIConsumerRights::is_manage_organisations_services_Valid() const{
    return m_manage_organisations_services_isValid;
}

bool OAIConsumerRights::isManagePersonalInformation() const {
    return m_manage_personal_information;
}
void OAIConsumerRights::setManagePersonalInformation(const bool &manage_personal_information) {
    m_manage_personal_information = manage_personal_information;
    m_manage_personal_information_isSet = true;
}

bool OAIConsumerRights::is_manage_personal_information_Set() const{
    return m_manage_personal_information_isSet;
}

bool OAIConsumerRights::is_manage_personal_information_Valid() const{
    return m_manage_personal_information_isValid;
}

bool OAIConsumerRights::isManageServices() const {
    return m_manage_services;
}
void OAIConsumerRights::setManageServices(const bool &manage_services) {
    m_manage_services = manage_services;
    m_manage_services_isSet = true;
}

bool OAIConsumerRights::is_manage_services_Set() const{
    return m_manage_services_isSet;
}

bool OAIConsumerRights::is_manage_services_Valid() const{
    return m_manage_services_isValid;
}

bool OAIConsumerRights::isManageSshKeys() const {
    return m_manage_ssh_keys;
}
void OAIConsumerRights::setManageSshKeys(const bool &manage_ssh_keys) {
    m_manage_ssh_keys = manage_ssh_keys;
    m_manage_ssh_keys_isSet = true;
}

bool OAIConsumerRights::is_manage_ssh_keys_Set() const{
    return m_manage_ssh_keys_isSet;
}

bool OAIConsumerRights::is_manage_ssh_keys_Valid() const{
    return m_manage_ssh_keys_isValid;
}

bool OAIConsumerRights::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_bills_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_access_consumption_statistics_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_access_credit_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_access_organisations_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_access_organisations_bills_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_access_organisations_consumption_statistics_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_access_organisations_credit_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_access_personal_information_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_almighty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manage_applications_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manage_organisations_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manage_organisations_applications_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manage_organisations_members_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manage_organisations_services_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manage_personal_information_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manage_services_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manage_ssh_keys_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConsumerRights::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
