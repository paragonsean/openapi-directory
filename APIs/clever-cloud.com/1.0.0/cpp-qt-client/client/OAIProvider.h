/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProvider.h
 *
 * A provider
 */

#ifndef OAIProvider_H
#define OAIProvider_H

#include <QJsonObject>

#include "OAIFeature.h"
#include "OAIPlan.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFeature;
class OAIPlan;

class OAIProvider : public OAIObject {
public:
    OAIProvider();
    OAIProvider(QString json);
    ~OAIProvider() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnalyticsId() const;
    void setAnalyticsId(const QString &analytics_id);
    bool is_analytics_id_Set() const;
    bool is_analytics_id_Valid() const;

    bool isCanUpgrade() const;
    void setCanUpgrade(const bool &can_upgrade);
    bool is_can_upgrade_Set() const;
    bool is_can_upgrade_Valid() const;

    QList<OAIFeature> getFeatures() const;
    void setFeatures(const QList<OAIFeature> &features);
    bool is_features_Set() const;
    bool is_features_Valid() const;

    QString getGooglePlusName() const;
    void setGooglePlusName(const QString &google_plus_name);
    bool is_google_plus_name_Set() const;
    bool is_google_plus_name_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLogoUrl() const;
    void setLogoUrl(const QString &logo_url);
    bool is_logo_url_Set() const;
    bool is_logo_url_Valid() const;

    QString getLongDesc() const;
    void setLongDesc(const QString &long_desc);
    bool is_long_desc_Set() const;
    bool is_long_desc_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isOpenInNewTab() const;
    void setOpenInNewTab(const bool &open_in_new_tab);
    bool is_open_in_new_tab_Set() const;
    bool is_open_in_new_tab_Valid() const;

    QList<OAIPlan> getPlans() const;
    void setPlans(const QList<OAIPlan> &plans);
    bool is_plans_Set() const;
    bool is_plans_Valid() const;

    QList<QString> getRegions() const;
    void setRegions(const QList<QString> &regions);
    bool is_regions_Set() const;
    bool is_regions_Valid() const;

    QString getShortDesc() const;
    void setShortDesc(const QString &short_desc);
    bool is_short_desc_Set() const;
    bool is_short_desc_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getSupportEmail() const;
    void setSupportEmail(const QString &support_email);
    bool is_support_email_Set() const;
    bool is_support_email_Valid() const;

    QString getTwitterName() const;
    void setTwitterName(const QString &twitter_name);
    bool is_twitter_name_Set() const;
    bool is_twitter_name_Valid() const;

    QString getWebsite() const;
    void setWebsite(const QString &website);
    bool is_website_Set() const;
    bool is_website_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_analytics_id;
    bool m_analytics_id_isSet;
    bool m_analytics_id_isValid;

    bool m_can_upgrade;
    bool m_can_upgrade_isSet;
    bool m_can_upgrade_isValid;

    QList<OAIFeature> m_features;
    bool m_features_isSet;
    bool m_features_isValid;

    QString m_google_plus_name;
    bool m_google_plus_name_isSet;
    bool m_google_plus_name_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_logo_url;
    bool m_logo_url_isSet;
    bool m_logo_url_isValid;

    QString m_long_desc;
    bool m_long_desc_isSet;
    bool m_long_desc_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_open_in_new_tab;
    bool m_open_in_new_tab_isSet;
    bool m_open_in_new_tab_isValid;

    QList<OAIPlan> m_plans;
    bool m_plans_isSet;
    bool m_plans_isValid;

    QList<QString> m_regions;
    bool m_regions_isSet;
    bool m_regions_isValid;

    QString m_short_desc;
    bool m_short_desc_isSet;
    bool m_short_desc_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_support_email;
    bool m_support_email_isSet;
    bool m_support_email_isValid;

    QString m_twitter_name;
    bool m_twitter_name_isSet;
    bool m_twitter_name_isValid;

    QString m_website;
    bool m_website_isSet;
    bool m_website_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProvider)

#endif // OAIProvider_H
