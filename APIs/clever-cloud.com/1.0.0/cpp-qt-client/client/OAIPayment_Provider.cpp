/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPayment_Provider.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPayment_Provider::OAIPayment_Provider(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPayment_Provider::OAIPayment_Provider() {
    this->initializeModel();
}

OAIPayment_Provider::~OAIPayment_Provider() {}

void OAIPayment_Provider::initializeModel() {

    m_coming_soon_isSet = false;
    m_coming_soon_isValid = false;

    m_img_url_isSet = false;
    m_img_url_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIPayment_Provider::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPayment_Provider::fromJsonObject(QJsonObject json) {

    m_coming_soon_isValid = ::OpenAPI::fromJsonValue(m_coming_soon, json[QString("comingSoon")]);
    m_coming_soon_isSet = !json[QString("comingSoon")].isNull() && m_coming_soon_isValid;

    m_img_url_isValid = ::OpenAPI::fromJsonValue(m_img_url, json[QString("imgUrl")]);
    m_img_url_isSet = !json[QString("imgUrl")].isNull() && m_img_url_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIPayment_Provider::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPayment_Provider::asJsonObject() const {
    QJsonObject obj;
    if (m_coming_soon_isSet) {
        obj.insert(QString("comingSoon"), ::OpenAPI::toJsonValue(m_coming_soon));
    }
    if (m_img_url_isSet) {
        obj.insert(QString("imgUrl"), ::OpenAPI::toJsonValue(m_img_url));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

bool OAIPayment_Provider::isComingSoon() const {
    return m_coming_soon;
}
void OAIPayment_Provider::setComingSoon(const bool &coming_soon) {
    m_coming_soon = coming_soon;
    m_coming_soon_isSet = true;
}

bool OAIPayment_Provider::is_coming_soon_Set() const{
    return m_coming_soon_isSet;
}

bool OAIPayment_Provider::is_coming_soon_Valid() const{
    return m_coming_soon_isValid;
}

QString OAIPayment_Provider::getImgUrl() const {
    return m_img_url;
}
void OAIPayment_Provider::setImgUrl(const QString &img_url) {
    m_img_url = img_url;
    m_img_url_isSet = true;
}

bool OAIPayment_Provider::is_img_url_Set() const{
    return m_img_url_isSet;
}

bool OAIPayment_Provider::is_img_url_Valid() const{
    return m_img_url_isValid;
}

QString OAIPayment_Provider::getName() const {
    return m_name;
}
void OAIPayment_Provider::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPayment_Provider::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPayment_Provider::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIPayment_Provider::getTitle() const {
    return m_title;
}
void OAIPayment_Provider::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIPayment_Provider::is_title_Set() const{
    return m_title_isSet;
}

bool OAIPayment_Provider::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIPayment_Provider::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_coming_soon_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_img_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPayment_Provider::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_coming_soon_isValid && m_img_url_isValid && m_name_isValid && m_title_isValid && true;
}

} // namespace OpenAPI
