/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISchema2.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISchema2::OAISchema2(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISchema2::OAISchema2() {
    this->initializeModel();
}

OAISchema2::~OAISchema2() {}

void OAISchema2::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_job_isSet = false;
    m_job_isValid = false;

    m_role_isSet = false;
    m_role_isValid = false;
}

void OAISchema2::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISchema2::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_job_isValid = ::OpenAPI::fromJsonValue(m_job, json[QString("job")]);
    m_job_isSet = !json[QString("job")].isNull() && m_job_isValid;

    m_role_isValid = ::OpenAPI::fromJsonValue(m_role, json[QString("role")]);
    m_role_isSet = !json[QString("role")].isNull() && m_role_isValid;
}

QString OAISchema2::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISchema2::asJsonObject() const {
    QJsonObject obj;
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_job_isSet) {
        obj.insert(QString("job"), ::OpenAPI::toJsonValue(m_job));
    }
    if (m_role_isSet) {
        obj.insert(QString("role"), ::OpenAPI::toJsonValue(m_role));
    }
    return obj;
}

QString OAISchema2::getEmail() const {
    return m_email;
}
void OAISchema2::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAISchema2::is_email_Set() const{
    return m_email_isSet;
}

bool OAISchema2::is_email_Valid() const{
    return m_email_isValid;
}

QString OAISchema2::getJob() const {
    return m_job;
}
void OAISchema2::setJob(const QString &job) {
    m_job = job;
    m_job_isSet = true;
}

bool OAISchema2::is_job_Set() const{
    return m_job_isSet;
}

bool OAISchema2::is_job_Valid() const{
    return m_job_isValid;
}

QString OAISchema2::getRole() const {
    return m_role;
}
void OAISchema2::setRole(const QString &role) {
    m_role = role;
    m_role_isSet = true;
}

bool OAISchema2::is_role_Set() const{
    return m_role_isSet;
}

bool OAISchema2::is_role_Valid() const{
    return m_role_isValid;
}

bool OAISchema2::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISchema2::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_email_isValid && m_role_isValid && true;
}

} // namespace OpenAPI
