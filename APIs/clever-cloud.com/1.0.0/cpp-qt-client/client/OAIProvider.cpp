/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProvider.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProvider::OAIProvider(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProvider::OAIProvider() {
    this->initializeModel();
}

OAIProvider::~OAIProvider() {}

void OAIProvider::initializeModel() {

    m_analytics_id_isSet = false;
    m_analytics_id_isValid = false;

    m_can_upgrade_isSet = false;
    m_can_upgrade_isValid = false;

    m_features_isSet = false;
    m_features_isValid = false;

    m_google_plus_name_isSet = false;
    m_google_plus_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_logo_url_isSet = false;
    m_logo_url_isValid = false;

    m_long_desc_isSet = false;
    m_long_desc_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_open_in_new_tab_isSet = false;
    m_open_in_new_tab_isValid = false;

    m_plans_isSet = false;
    m_plans_isValid = false;

    m_regions_isSet = false;
    m_regions_isValid = false;

    m_short_desc_isSet = false;
    m_short_desc_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_support_email_isSet = false;
    m_support_email_isValid = false;

    m_twitter_name_isSet = false;
    m_twitter_name_isValid = false;

    m_website_isSet = false;
    m_website_isValid = false;
}

void OAIProvider::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProvider::fromJsonObject(QJsonObject json) {

    m_analytics_id_isValid = ::OpenAPI::fromJsonValue(m_analytics_id, json[QString("analyticsId")]);
    m_analytics_id_isSet = !json[QString("analyticsId")].isNull() && m_analytics_id_isValid;

    m_can_upgrade_isValid = ::OpenAPI::fromJsonValue(m_can_upgrade, json[QString("canUpgrade")]);
    m_can_upgrade_isSet = !json[QString("canUpgrade")].isNull() && m_can_upgrade_isValid;

    m_features_isValid = ::OpenAPI::fromJsonValue(m_features, json[QString("features")]);
    m_features_isSet = !json[QString("features")].isNull() && m_features_isValid;

    m_google_plus_name_isValid = ::OpenAPI::fromJsonValue(m_google_plus_name, json[QString("googlePlusName")]);
    m_google_plus_name_isSet = !json[QString("googlePlusName")].isNull() && m_google_plus_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_logo_url_isValid = ::OpenAPI::fromJsonValue(m_logo_url, json[QString("logoUrl")]);
    m_logo_url_isSet = !json[QString("logoUrl")].isNull() && m_logo_url_isValid;

    m_long_desc_isValid = ::OpenAPI::fromJsonValue(m_long_desc, json[QString("longDesc")]);
    m_long_desc_isSet = !json[QString("longDesc")].isNull() && m_long_desc_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_open_in_new_tab_isValid = ::OpenAPI::fromJsonValue(m_open_in_new_tab, json[QString("openInNewTab")]);
    m_open_in_new_tab_isSet = !json[QString("openInNewTab")].isNull() && m_open_in_new_tab_isValid;

    m_plans_isValid = ::OpenAPI::fromJsonValue(m_plans, json[QString("plans")]);
    m_plans_isSet = !json[QString("plans")].isNull() && m_plans_isValid;

    m_regions_isValid = ::OpenAPI::fromJsonValue(m_regions, json[QString("regions")]);
    m_regions_isSet = !json[QString("regions")].isNull() && m_regions_isValid;

    m_short_desc_isValid = ::OpenAPI::fromJsonValue(m_short_desc, json[QString("shortDesc")]);
    m_short_desc_isSet = !json[QString("shortDesc")].isNull() && m_short_desc_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_support_email_isValid = ::OpenAPI::fromJsonValue(m_support_email, json[QString("supportEmail")]);
    m_support_email_isSet = !json[QString("supportEmail")].isNull() && m_support_email_isValid;

    m_twitter_name_isValid = ::OpenAPI::fromJsonValue(m_twitter_name, json[QString("twitterName")]);
    m_twitter_name_isSet = !json[QString("twitterName")].isNull() && m_twitter_name_isValid;

    m_website_isValid = ::OpenAPI::fromJsonValue(m_website, json[QString("website")]);
    m_website_isSet = !json[QString("website")].isNull() && m_website_isValid;
}

QString OAIProvider::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProvider::asJsonObject() const {
    QJsonObject obj;
    if (m_analytics_id_isSet) {
        obj.insert(QString("analyticsId"), ::OpenAPI::toJsonValue(m_analytics_id));
    }
    if (m_can_upgrade_isSet) {
        obj.insert(QString("canUpgrade"), ::OpenAPI::toJsonValue(m_can_upgrade));
    }
    if (m_features.size() > 0) {
        obj.insert(QString("features"), ::OpenAPI::toJsonValue(m_features));
    }
    if (m_google_plus_name_isSet) {
        obj.insert(QString("googlePlusName"), ::OpenAPI::toJsonValue(m_google_plus_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_logo_url_isSet) {
        obj.insert(QString("logoUrl"), ::OpenAPI::toJsonValue(m_logo_url));
    }
    if (m_long_desc_isSet) {
        obj.insert(QString("longDesc"), ::OpenAPI::toJsonValue(m_long_desc));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_open_in_new_tab_isSet) {
        obj.insert(QString("openInNewTab"), ::OpenAPI::toJsonValue(m_open_in_new_tab));
    }
    if (m_plans.size() > 0) {
        obj.insert(QString("plans"), ::OpenAPI::toJsonValue(m_plans));
    }
    if (m_regions.size() > 0) {
        obj.insert(QString("regions"), ::OpenAPI::toJsonValue(m_regions));
    }
    if (m_short_desc_isSet) {
        obj.insert(QString("shortDesc"), ::OpenAPI::toJsonValue(m_short_desc));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_support_email_isSet) {
        obj.insert(QString("supportEmail"), ::OpenAPI::toJsonValue(m_support_email));
    }
    if (m_twitter_name_isSet) {
        obj.insert(QString("twitterName"), ::OpenAPI::toJsonValue(m_twitter_name));
    }
    if (m_website_isSet) {
        obj.insert(QString("website"), ::OpenAPI::toJsonValue(m_website));
    }
    return obj;
}

QString OAIProvider::getAnalyticsId() const {
    return m_analytics_id;
}
void OAIProvider::setAnalyticsId(const QString &analytics_id) {
    m_analytics_id = analytics_id;
    m_analytics_id_isSet = true;
}

bool OAIProvider::is_analytics_id_Set() const{
    return m_analytics_id_isSet;
}

bool OAIProvider::is_analytics_id_Valid() const{
    return m_analytics_id_isValid;
}

bool OAIProvider::isCanUpgrade() const {
    return m_can_upgrade;
}
void OAIProvider::setCanUpgrade(const bool &can_upgrade) {
    m_can_upgrade = can_upgrade;
    m_can_upgrade_isSet = true;
}

bool OAIProvider::is_can_upgrade_Set() const{
    return m_can_upgrade_isSet;
}

bool OAIProvider::is_can_upgrade_Valid() const{
    return m_can_upgrade_isValid;
}

QList<OAIFeature> OAIProvider::getFeatures() const {
    return m_features;
}
void OAIProvider::setFeatures(const QList<OAIFeature> &features) {
    m_features = features;
    m_features_isSet = true;
}

bool OAIProvider::is_features_Set() const{
    return m_features_isSet;
}

bool OAIProvider::is_features_Valid() const{
    return m_features_isValid;
}

QString OAIProvider::getGooglePlusName() const {
    return m_google_plus_name;
}
void OAIProvider::setGooglePlusName(const QString &google_plus_name) {
    m_google_plus_name = google_plus_name;
    m_google_plus_name_isSet = true;
}

bool OAIProvider::is_google_plus_name_Set() const{
    return m_google_plus_name_isSet;
}

bool OAIProvider::is_google_plus_name_Valid() const{
    return m_google_plus_name_isValid;
}

QString OAIProvider::getId() const {
    return m_id;
}
void OAIProvider::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIProvider::is_id_Set() const{
    return m_id_isSet;
}

bool OAIProvider::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIProvider::getLogoUrl() const {
    return m_logo_url;
}
void OAIProvider::setLogoUrl(const QString &logo_url) {
    m_logo_url = logo_url;
    m_logo_url_isSet = true;
}

bool OAIProvider::is_logo_url_Set() const{
    return m_logo_url_isSet;
}

bool OAIProvider::is_logo_url_Valid() const{
    return m_logo_url_isValid;
}

QString OAIProvider::getLongDesc() const {
    return m_long_desc;
}
void OAIProvider::setLongDesc(const QString &long_desc) {
    m_long_desc = long_desc;
    m_long_desc_isSet = true;
}

bool OAIProvider::is_long_desc_Set() const{
    return m_long_desc_isSet;
}

bool OAIProvider::is_long_desc_Valid() const{
    return m_long_desc_isValid;
}

QString OAIProvider::getName() const {
    return m_name;
}
void OAIProvider::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIProvider::is_name_Set() const{
    return m_name_isSet;
}

bool OAIProvider::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIProvider::isOpenInNewTab() const {
    return m_open_in_new_tab;
}
void OAIProvider::setOpenInNewTab(const bool &open_in_new_tab) {
    m_open_in_new_tab = open_in_new_tab;
    m_open_in_new_tab_isSet = true;
}

bool OAIProvider::is_open_in_new_tab_Set() const{
    return m_open_in_new_tab_isSet;
}

bool OAIProvider::is_open_in_new_tab_Valid() const{
    return m_open_in_new_tab_isValid;
}

QList<OAIPlan> OAIProvider::getPlans() const {
    return m_plans;
}
void OAIProvider::setPlans(const QList<OAIPlan> &plans) {
    m_plans = plans;
    m_plans_isSet = true;
}

bool OAIProvider::is_plans_Set() const{
    return m_plans_isSet;
}

bool OAIProvider::is_plans_Valid() const{
    return m_plans_isValid;
}

QList<QString> OAIProvider::getRegions() const {
    return m_regions;
}
void OAIProvider::setRegions(const QList<QString> &regions) {
    m_regions = regions;
    m_regions_isSet = true;
}

bool OAIProvider::is_regions_Set() const{
    return m_regions_isSet;
}

bool OAIProvider::is_regions_Valid() const{
    return m_regions_isValid;
}

QString OAIProvider::getShortDesc() const {
    return m_short_desc;
}
void OAIProvider::setShortDesc(const QString &short_desc) {
    m_short_desc = short_desc;
    m_short_desc_isSet = true;
}

bool OAIProvider::is_short_desc_Set() const{
    return m_short_desc_isSet;
}

bool OAIProvider::is_short_desc_Valid() const{
    return m_short_desc_isValid;
}

QString OAIProvider::getStatus() const {
    return m_status;
}
void OAIProvider::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIProvider::is_status_Set() const{
    return m_status_isSet;
}

bool OAIProvider::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIProvider::getSupportEmail() const {
    return m_support_email;
}
void OAIProvider::setSupportEmail(const QString &support_email) {
    m_support_email = support_email;
    m_support_email_isSet = true;
}

bool OAIProvider::is_support_email_Set() const{
    return m_support_email_isSet;
}

bool OAIProvider::is_support_email_Valid() const{
    return m_support_email_isValid;
}

QString OAIProvider::getTwitterName() const {
    return m_twitter_name;
}
void OAIProvider::setTwitterName(const QString &twitter_name) {
    m_twitter_name = twitter_name;
    m_twitter_name_isSet = true;
}

bool OAIProvider::is_twitter_name_Set() const{
    return m_twitter_name_isSet;
}

bool OAIProvider::is_twitter_name_Valid() const{
    return m_twitter_name_isValid;
}

QString OAIProvider::getWebsite() const {
    return m_website;
}
void OAIProvider::setWebsite(const QString &website) {
    m_website = website;
    m_website_isSet = true;
}

bool OAIProvider::is_website_Set() const{
    return m_website_isSet;
}

bool OAIProvider::is_website_Valid() const{
    return m_website_isValid;
}

bool OAIProvider::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_analytics_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_upgrade_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_features.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_google_plus_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_long_desc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_open_in_new_tab_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_plans.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_regions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_desc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_support_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_twitter_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_website_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProvider::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_analytics_id_isValid && m_can_upgrade_isValid && m_google_plus_name_isValid && m_id_isValid && m_logo_url_isValid && m_long_desc_isValid && m_name_isValid && m_open_in_new_tab_isValid && m_regions_isValid && m_short_desc_isValid && m_status_isValid && m_support_email_isValid && m_twitter_name_isValid && m_website_isValid && true;
}

} // namespace OpenAPI
