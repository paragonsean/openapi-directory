/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser.h
 *
 * A user representation
 */

#ifndef OAIUser_H
#define OAIUser_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUser : public OAIObject {
public:
    OAIUser();
    OAIUser(QString json);
    ~OAIUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    bool isAdmin() const;
    void setAdmin(const bool &admin);
    bool is_admin_Set() const;
    bool is_admin_Valid() const;

    QString getAvatar() const;
    void setAvatar(const QString &avatar);
    bool is_avatar_Set() const;
    bool is_avatar_Valid() const;

    bool isCanPay() const;
    void setCanPay(const bool &can_pay);
    bool is_can_pay_Set() const;
    bool is_can_pay_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    qint64 getCreationDate() const;
    void setCreationDate(const qint64 &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    bool isEmailValidated() const;
    void setEmailValidated(const bool &email_validated);
    bool is_email_validated_Set() const;
    bool is_email_validated_Valid() const;

    bool isHasPassword() const;
    void setHasPassword(const bool &has_password);
    bool is_has_password_Set() const;
    bool is_has_password_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLang() const;
    void setLang(const QString &lang);
    bool is_lang_Set() const;
    bool is_lang_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getOauthApps() const;
    void setOauthApps(const QList<QString> &oauth_apps);
    bool is_oauth_apps_Set() const;
    bool is_oauth_apps_Valid() const;

    QString getPhone() const;
    void setPhone(const QString &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    QString getPreferredMfa() const;
    void setPreferredMfa(const QString &preferred_mfa);
    bool is_preferred_mfa_Set() const;
    bool is_preferred_mfa_Valid() const;

    QString getZipcode() const;
    void setZipcode(const QString &zipcode);
    bool is_zipcode_Set() const;
    bool is_zipcode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    bool m_admin;
    bool m_admin_isSet;
    bool m_admin_isValid;

    QString m_avatar;
    bool m_avatar_isSet;
    bool m_avatar_isValid;

    bool m_can_pay;
    bool m_can_pay_isSet;
    bool m_can_pay_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    qint64 m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    bool m_email_validated;
    bool m_email_validated_isSet;
    bool m_email_validated_isValid;

    bool m_has_password;
    bool m_has_password_isSet;
    bool m_has_password_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_lang;
    bool m_lang_isSet;
    bool m_lang_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_oauth_apps;
    bool m_oauth_apps_isSet;
    bool m_oauth_apps_isValid;

    QString m_phone;
    bool m_phone_isSet;
    bool m_phone_isValid;

    QString m_preferred_mfa;
    bool m_preferred_mfa_isSet;
    bool m_preferred_mfa_isValid;

    QString m_zipcode;
    bool m_zipcode_isSet;
    bool m_zipcode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser)

#endif // OAIUser_H
