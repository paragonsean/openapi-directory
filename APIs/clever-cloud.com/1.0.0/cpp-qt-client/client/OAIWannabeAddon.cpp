/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWannabeAddon.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWannabeAddon::OAIWannabeAddon(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWannabeAddon::OAIWannabeAddon() {
    this->initializeModel();
}

OAIWannabeAddon::~OAIWannabeAddon() {}

void OAIWannabeAddon::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_payment_isSet = false;
    m_payment_isValid = false;

    m_plan_isSet = false;
    m_plan_isValid = false;

    m_provider_id_isSet = false;
    m_provider_id_isValid = false;

    m_region_isSet = false;
    m_region_isValid = false;
}

void OAIWannabeAddon::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWannabeAddon::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_payment_isValid = ::OpenAPI::fromJsonValue(m_payment, json[QString("payment")]);
    m_payment_isSet = !json[QString("payment")].isNull() && m_payment_isValid;

    m_plan_isValid = ::OpenAPI::fromJsonValue(m_plan, json[QString("plan")]);
    m_plan_isSet = !json[QString("plan")].isNull() && m_plan_isValid;

    m_provider_id_isValid = ::OpenAPI::fromJsonValue(m_provider_id, json[QString("providerId")]);
    m_provider_id_isSet = !json[QString("providerId")].isNull() && m_provider_id_isValid;

    m_region_isValid = ::OpenAPI::fromJsonValue(m_region, json[QString("region")]);
    m_region_isSet = !json[QString("region")].isNull() && m_region_isValid;
}

QString OAIWannabeAddon::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWannabeAddon::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_payment.isSet()) {
        obj.insert(QString("payment"), ::OpenAPI::toJsonValue(m_payment));
    }
    if (m_plan_isSet) {
        obj.insert(QString("plan"), ::OpenAPI::toJsonValue(m_plan));
    }
    if (m_provider_id_isSet) {
        obj.insert(QString("providerId"), ::OpenAPI::toJsonValue(m_provider_id));
    }
    if (m_region_isSet) {
        obj.insert(QString("region"), ::OpenAPI::toJsonValue(m_region));
    }
    return obj;
}

QString OAIWannabeAddon::getName() const {
    return m_name;
}
void OAIWannabeAddon::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIWannabeAddon::is_name_Set() const{
    return m_name_isSet;
}

bool OAIWannabeAddon::is_name_Valid() const{
    return m_name_isValid;
}

OAIPaymentData OAIWannabeAddon::getPayment() const {
    return m_payment;
}
void OAIWannabeAddon::setPayment(const OAIPaymentData &payment) {
    m_payment = payment;
    m_payment_isSet = true;
}

bool OAIWannabeAddon::is_payment_Set() const{
    return m_payment_isSet;
}

bool OAIWannabeAddon::is_payment_Valid() const{
    return m_payment_isValid;
}

QString OAIWannabeAddon::getPlan() const {
    return m_plan;
}
void OAIWannabeAddon::setPlan(const QString &plan) {
    m_plan = plan;
    m_plan_isSet = true;
}

bool OAIWannabeAddon::is_plan_Set() const{
    return m_plan_isSet;
}

bool OAIWannabeAddon::is_plan_Valid() const{
    return m_plan_isValid;
}

QString OAIWannabeAddon::getProviderId() const {
    return m_provider_id;
}
void OAIWannabeAddon::setProviderId(const QString &provider_id) {
    m_provider_id = provider_id;
    m_provider_id_isSet = true;
}

bool OAIWannabeAddon::is_provider_id_Set() const{
    return m_provider_id_isSet;
}

bool OAIWannabeAddon::is_provider_id_Valid() const{
    return m_provider_id_isValid;
}

QString OAIWannabeAddon::getRegion() const {
    return m_region;
}
void OAIWannabeAddon::setRegion(const QString &region) {
    m_region = region;
    m_region_isSet = true;
}

bool OAIWannabeAddon::is_region_Set() const{
    return m_region_isSet;
}

bool OAIWannabeAddon::is_region_Valid() const{
    return m_region_isValid;
}

bool OAIWannabeAddon::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_plan_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWannabeAddon::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_payment_isValid && m_plan_isValid && m_provider_id_isValid && m_region_isValid && true;
}

} // namespace OpenAPI
