# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.album_primary_genres import AlbumPrimaryGenres
from openapi_server.models.album_secondary_genres import AlbumSecondaryGenres
from openapi_server import util


class Album(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, album_copyright: str=None, album_coverart_100x100: str=None, album_coverart_350x350: str=None, album_coverart_500x500: str=None, album_coverart_800x800: str=None, album_edit_url: str=None, album_id: float=None, album_label: str=None, album_mbid: str=None, album_name: str=None, album_pline: str=None, album_rating: float=None, album_release_date: str=None, album_release_type: str=None, album_track_count: float=None, album_vanity_id: str=None, artist_id: float=None, artist_name: str=None, primary_genres: AlbumPrimaryGenres=None, restricted: float=None, secondary_genres: AlbumSecondaryGenres=None, updated_time: str=None):
        """Album - a model defined in OpenAPI

        :param album_copyright: The album_copyright of this Album.
        :param album_coverart_100x100: The album_coverart_100x100 of this Album.
        :param album_coverart_350x350: The album_coverart_350x350 of this Album.
        :param album_coverart_500x500: The album_coverart_500x500 of this Album.
        :param album_coverart_800x800: The album_coverart_800x800 of this Album.
        :param album_edit_url: The album_edit_url of this Album.
        :param album_id: The album_id of this Album.
        :param album_label: The album_label of this Album.
        :param album_mbid: The album_mbid of this Album.
        :param album_name: The album_name of this Album.
        :param album_pline: The album_pline of this Album.
        :param album_rating: The album_rating of this Album.
        :param album_release_date: The album_release_date of this Album.
        :param album_release_type: The album_release_type of this Album.
        :param album_track_count: The album_track_count of this Album.
        :param album_vanity_id: The album_vanity_id of this Album.
        :param artist_id: The artist_id of this Album.
        :param artist_name: The artist_name of this Album.
        :param primary_genres: The primary_genres of this Album.
        :param restricted: The restricted of this Album.
        :param secondary_genres: The secondary_genres of this Album.
        :param updated_time: The updated_time of this Album.
        """
        self.openapi_types = {
            'album_copyright': str,
            'album_coverart_100x100': str,
            'album_coverart_350x350': str,
            'album_coverart_500x500': str,
            'album_coverart_800x800': str,
            'album_edit_url': str,
            'album_id': float,
            'album_label': str,
            'album_mbid': str,
            'album_name': str,
            'album_pline': str,
            'album_rating': float,
            'album_release_date': str,
            'album_release_type': str,
            'album_track_count': float,
            'album_vanity_id': str,
            'artist_id': float,
            'artist_name': str,
            'primary_genres': AlbumPrimaryGenres,
            'restricted': float,
            'secondary_genres': AlbumSecondaryGenres,
            'updated_time': str
        }

        self.attribute_map = {
            'album_copyright': 'album_copyright',
            'album_coverart_100x100': 'album_coverart_100x100',
            'album_coverart_350x350': 'album_coverart_350x350',
            'album_coverart_500x500': 'album_coverart_500x500',
            'album_coverart_800x800': 'album_coverart_800x800',
            'album_edit_url': 'album_edit_url',
            'album_id': 'album_id',
            'album_label': 'album_label',
            'album_mbid': 'album_mbid',
            'album_name': 'album_name',
            'album_pline': 'album_pline',
            'album_rating': 'album_rating',
            'album_release_date': 'album_release_date',
            'album_release_type': 'album_release_type',
            'album_track_count': 'album_track_count',
            'album_vanity_id': 'album_vanity_id',
            'artist_id': 'artist_id',
            'artist_name': 'artist_name',
            'primary_genres': 'primary_genres',
            'restricted': 'restricted',
            'secondary_genres': 'secondary_genres',
            'updated_time': 'updated_time'
        }

        self._album_copyright = album_copyright
        self._album_coverart_100x100 = album_coverart_100x100
        self._album_coverart_350x350 = album_coverart_350x350
        self._album_coverart_500x500 = album_coverart_500x500
        self._album_coverart_800x800 = album_coverart_800x800
        self._album_edit_url = album_edit_url
        self._album_id = album_id
        self._album_label = album_label
        self._album_mbid = album_mbid
        self._album_name = album_name
        self._album_pline = album_pline
        self._album_rating = album_rating
        self._album_release_date = album_release_date
        self._album_release_type = album_release_type
        self._album_track_count = album_track_count
        self._album_vanity_id = album_vanity_id
        self._artist_id = artist_id
        self._artist_name = artist_name
        self._primary_genres = primary_genres
        self._restricted = restricted
        self._secondary_genres = secondary_genres
        self._updated_time = updated_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Album':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Album of this Album.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def album_copyright(self):
        """Gets the album_copyright of this Album.

        

        :return: The album_copyright of this Album.
        :rtype: str
        """
        return self._album_copyright

    @album_copyright.setter
    def album_copyright(self, album_copyright):
        """Sets the album_copyright of this Album.

        

        :param album_copyright: The album_copyright of this Album.
        :type album_copyright: str
        """

        self._album_copyright = album_copyright

    @property
    def album_coverart_100x100(self):
        """Gets the album_coverart_100x100 of this Album.

        

        :return: The album_coverart_100x100 of this Album.
        :rtype: str
        """
        return self._album_coverart_100x100

    @album_coverart_100x100.setter
    def album_coverart_100x100(self, album_coverart_100x100):
        """Sets the album_coverart_100x100 of this Album.

        

        :param album_coverart_100x100: The album_coverart_100x100 of this Album.
        :type album_coverart_100x100: str
        """

        self._album_coverart_100x100 = album_coverart_100x100

    @property
    def album_coverart_350x350(self):
        """Gets the album_coverart_350x350 of this Album.

        

        :return: The album_coverart_350x350 of this Album.
        :rtype: str
        """
        return self._album_coverart_350x350

    @album_coverart_350x350.setter
    def album_coverart_350x350(self, album_coverart_350x350):
        """Sets the album_coverart_350x350 of this Album.

        

        :param album_coverart_350x350: The album_coverart_350x350 of this Album.
        :type album_coverart_350x350: str
        """

        self._album_coverart_350x350 = album_coverart_350x350

    @property
    def album_coverart_500x500(self):
        """Gets the album_coverart_500x500 of this Album.

        

        :return: The album_coverart_500x500 of this Album.
        :rtype: str
        """
        return self._album_coverart_500x500

    @album_coverart_500x500.setter
    def album_coverart_500x500(self, album_coverart_500x500):
        """Sets the album_coverart_500x500 of this Album.

        

        :param album_coverart_500x500: The album_coverart_500x500 of this Album.
        :type album_coverart_500x500: str
        """

        self._album_coverart_500x500 = album_coverart_500x500

    @property
    def album_coverart_800x800(self):
        """Gets the album_coverart_800x800 of this Album.

        

        :return: The album_coverart_800x800 of this Album.
        :rtype: str
        """
        return self._album_coverart_800x800

    @album_coverart_800x800.setter
    def album_coverart_800x800(self, album_coverart_800x800):
        """Sets the album_coverart_800x800 of this Album.

        

        :param album_coverart_800x800: The album_coverart_800x800 of this Album.
        :type album_coverart_800x800: str
        """

        self._album_coverart_800x800 = album_coverart_800x800

    @property
    def album_edit_url(self):
        """Gets the album_edit_url of this Album.

        

        :return: The album_edit_url of this Album.
        :rtype: str
        """
        return self._album_edit_url

    @album_edit_url.setter
    def album_edit_url(self, album_edit_url):
        """Sets the album_edit_url of this Album.

        

        :param album_edit_url: The album_edit_url of this Album.
        :type album_edit_url: str
        """

        self._album_edit_url = album_edit_url

    @property
    def album_id(self):
        """Gets the album_id of this Album.

        

        :return: The album_id of this Album.
        :rtype: float
        """
        return self._album_id

    @album_id.setter
    def album_id(self, album_id):
        """Sets the album_id of this Album.

        

        :param album_id: The album_id of this Album.
        :type album_id: float
        """

        self._album_id = album_id

    @property
    def album_label(self):
        """Gets the album_label of this Album.

        

        :return: The album_label of this Album.
        :rtype: str
        """
        return self._album_label

    @album_label.setter
    def album_label(self, album_label):
        """Sets the album_label of this Album.

        

        :param album_label: The album_label of this Album.
        :type album_label: str
        """

        self._album_label = album_label

    @property
    def album_mbid(self):
        """Gets the album_mbid of this Album.

        

        :return: The album_mbid of this Album.
        :rtype: str
        """
        return self._album_mbid

    @album_mbid.setter
    def album_mbid(self, album_mbid):
        """Sets the album_mbid of this Album.

        

        :param album_mbid: The album_mbid of this Album.
        :type album_mbid: str
        """

        self._album_mbid = album_mbid

    @property
    def album_name(self):
        """Gets the album_name of this Album.

        

        :return: The album_name of this Album.
        :rtype: str
        """
        return self._album_name

    @album_name.setter
    def album_name(self, album_name):
        """Sets the album_name of this Album.

        

        :param album_name: The album_name of this Album.
        :type album_name: str
        """

        self._album_name = album_name

    @property
    def album_pline(self):
        """Gets the album_pline of this Album.

        

        :return: The album_pline of this Album.
        :rtype: str
        """
        return self._album_pline

    @album_pline.setter
    def album_pline(self, album_pline):
        """Sets the album_pline of this Album.

        

        :param album_pline: The album_pline of this Album.
        :type album_pline: str
        """

        self._album_pline = album_pline

    @property
    def album_rating(self):
        """Gets the album_rating of this Album.

        

        :return: The album_rating of this Album.
        :rtype: float
        """
        return self._album_rating

    @album_rating.setter
    def album_rating(self, album_rating):
        """Sets the album_rating of this Album.

        

        :param album_rating: The album_rating of this Album.
        :type album_rating: float
        """

        self._album_rating = album_rating

    @property
    def album_release_date(self):
        """Gets the album_release_date of this Album.

        

        :return: The album_release_date of this Album.
        :rtype: str
        """
        return self._album_release_date

    @album_release_date.setter
    def album_release_date(self, album_release_date):
        """Sets the album_release_date of this Album.

        

        :param album_release_date: The album_release_date of this Album.
        :type album_release_date: str
        """

        self._album_release_date = album_release_date

    @property
    def album_release_type(self):
        """Gets the album_release_type of this Album.

        

        :return: The album_release_type of this Album.
        :rtype: str
        """
        return self._album_release_type

    @album_release_type.setter
    def album_release_type(self, album_release_type):
        """Sets the album_release_type of this Album.

        

        :param album_release_type: The album_release_type of this Album.
        :type album_release_type: str
        """

        self._album_release_type = album_release_type

    @property
    def album_track_count(self):
        """Gets the album_track_count of this Album.

        

        :return: The album_track_count of this Album.
        :rtype: float
        """
        return self._album_track_count

    @album_track_count.setter
    def album_track_count(self, album_track_count):
        """Sets the album_track_count of this Album.

        

        :param album_track_count: The album_track_count of this Album.
        :type album_track_count: float
        """

        self._album_track_count = album_track_count

    @property
    def album_vanity_id(self):
        """Gets the album_vanity_id of this Album.

        

        :return: The album_vanity_id of this Album.
        :rtype: str
        """
        return self._album_vanity_id

    @album_vanity_id.setter
    def album_vanity_id(self, album_vanity_id):
        """Sets the album_vanity_id of this Album.

        

        :param album_vanity_id: The album_vanity_id of this Album.
        :type album_vanity_id: str
        """

        self._album_vanity_id = album_vanity_id

    @property
    def artist_id(self):
        """Gets the artist_id of this Album.

        

        :return: The artist_id of this Album.
        :rtype: float
        """
        return self._artist_id

    @artist_id.setter
    def artist_id(self, artist_id):
        """Sets the artist_id of this Album.

        

        :param artist_id: The artist_id of this Album.
        :type artist_id: float
        """

        self._artist_id = artist_id

    @property
    def artist_name(self):
        """Gets the artist_name of this Album.

        

        :return: The artist_name of this Album.
        :rtype: str
        """
        return self._artist_name

    @artist_name.setter
    def artist_name(self, artist_name):
        """Sets the artist_name of this Album.

        

        :param artist_name: The artist_name of this Album.
        :type artist_name: str
        """

        self._artist_name = artist_name

    @property
    def primary_genres(self):
        """Gets the primary_genres of this Album.


        :return: The primary_genres of this Album.
        :rtype: AlbumPrimaryGenres
        """
        return self._primary_genres

    @primary_genres.setter
    def primary_genres(self, primary_genres):
        """Sets the primary_genres of this Album.


        :param primary_genres: The primary_genres of this Album.
        :type primary_genres: AlbumPrimaryGenres
        """

        self._primary_genres = primary_genres

    @property
    def restricted(self):
        """Gets the restricted of this Album.

        

        :return: The restricted of this Album.
        :rtype: float
        """
        return self._restricted

    @restricted.setter
    def restricted(self, restricted):
        """Sets the restricted of this Album.

        

        :param restricted: The restricted of this Album.
        :type restricted: float
        """

        self._restricted = restricted

    @property
    def secondary_genres(self):
        """Gets the secondary_genres of this Album.


        :return: The secondary_genres of this Album.
        :rtype: AlbumSecondaryGenres
        """
        return self._secondary_genres

    @secondary_genres.setter
    def secondary_genres(self, secondary_genres):
        """Sets the secondary_genres of this Album.


        :param secondary_genres: The secondary_genres of this Album.
        :type secondary_genres: AlbumSecondaryGenres
        """

        self._secondary_genres = secondary_genres

    @property
    def updated_time(self):
        """Gets the updated_time of this Album.

        

        :return: The updated_time of this Album.
        :rtype: str
        """
        return self._updated_time

    @updated_time.setter
    def updated_time(self, updated_time):
        """Sets the updated_time of this Album.

        

        :param updated_time: The updated_time of this Album.
        :type updated_time: str
        """

        self._updated_time = updated_time
