# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AlbumTracksGetGet200ResponseMessageHeader(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, available: float=None, execute_time: float=None, status_code: float=None):
        """AlbumTracksGetGet200ResponseMessageHeader - a model defined in OpenAPI

        :param available: The available of this AlbumTracksGetGet200ResponseMessageHeader.
        :param execute_time: The execute_time of this AlbumTracksGetGet200ResponseMessageHeader.
        :param status_code: The status_code of this AlbumTracksGetGet200ResponseMessageHeader.
        """
        self.openapi_types = {
            'available': float,
            'execute_time': float,
            'status_code': float
        }

        self.attribute_map = {
            'available': 'available',
            'execute_time': 'execute_time',
            'status_code': 'status_code'
        }

        self._available = available
        self._execute_time = execute_time
        self._status_code = status_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlbumTracksGetGet200ResponseMessageHeader':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _album_tracks_get_get_200_response_message_header of this AlbumTracksGetGet200ResponseMessageHeader.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available(self):
        """Gets the available of this AlbumTracksGetGet200ResponseMessageHeader.

        

        :return: The available of this AlbumTracksGetGet200ResponseMessageHeader.
        :rtype: float
        """
        return self._available

    @available.setter
    def available(self, available):
        """Sets the available of this AlbumTracksGetGet200ResponseMessageHeader.

        

        :param available: The available of this AlbumTracksGetGet200ResponseMessageHeader.
        :type available: float
        """

        self._available = available

    @property
    def execute_time(self):
        """Gets the execute_time of this AlbumTracksGetGet200ResponseMessageHeader.

        

        :return: The execute_time of this AlbumTracksGetGet200ResponseMessageHeader.
        :rtype: float
        """
        return self._execute_time

    @execute_time.setter
    def execute_time(self, execute_time):
        """Sets the execute_time of this AlbumTracksGetGet200ResponseMessageHeader.

        

        :param execute_time: The execute_time of this AlbumTracksGetGet200ResponseMessageHeader.
        :type execute_time: float
        """

        self._execute_time = execute_time

    @property
    def status_code(self):
        """Gets the status_code of this AlbumTracksGetGet200ResponseMessageHeader.

        

        :return: The status_code of this AlbumTracksGetGet200ResponseMessageHeader.
        :rtype: float
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this AlbumTracksGetGet200ResponseMessageHeader.

        

        :param status_code: The status_code of this AlbumTracksGetGet200ResponseMessageHeader.
        :type status_code: float
        """

        self._status_code = status_code
