# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AlbumPrimaryGenresMusicGenreListInnerMusicGenre(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, music_genre_id: float=None, music_genre_name: str=None, music_genre_name_extended: str=None, music_genre_parent_id: float=None, music_genre_vanity: str=None):
        """AlbumPrimaryGenresMusicGenreListInnerMusicGenre - a model defined in OpenAPI

        :param music_genre_id: The music_genre_id of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.
        :param music_genre_name: The music_genre_name of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.
        :param music_genre_name_extended: The music_genre_name_extended of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.
        :param music_genre_parent_id: The music_genre_parent_id of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.
        :param music_genre_vanity: The music_genre_vanity of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.
        """
        self.openapi_types = {
            'music_genre_id': float,
            'music_genre_name': str,
            'music_genre_name_extended': str,
            'music_genre_parent_id': float,
            'music_genre_vanity': str
        }

        self.attribute_map = {
            'music_genre_id': 'music_genre_id',
            'music_genre_name': 'music_genre_name',
            'music_genre_name_extended': 'music_genre_name_extended',
            'music_genre_parent_id': 'music_genre_parent_id',
            'music_genre_vanity': 'music_genre_vanity'
        }

        self._music_genre_id = music_genre_id
        self._music_genre_name = music_genre_name
        self._music_genre_name_extended = music_genre_name_extended
        self._music_genre_parent_id = music_genre_parent_id
        self._music_genre_vanity = music_genre_vanity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlbumPrimaryGenresMusicGenreListInnerMusicGenre':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Album_primary_genres_music_genre_list_inner_music_genre of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def music_genre_id(self):
        """Gets the music_genre_id of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.

        

        :return: The music_genre_id of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.
        :rtype: float
        """
        return self._music_genre_id

    @music_genre_id.setter
    def music_genre_id(self, music_genre_id):
        """Sets the music_genre_id of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.

        

        :param music_genre_id: The music_genre_id of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.
        :type music_genre_id: float
        """

        self._music_genre_id = music_genre_id

    @property
    def music_genre_name(self):
        """Gets the music_genre_name of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.

        

        :return: The music_genre_name of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.
        :rtype: str
        """
        return self._music_genre_name

    @music_genre_name.setter
    def music_genre_name(self, music_genre_name):
        """Sets the music_genre_name of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.

        

        :param music_genre_name: The music_genre_name of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.
        :type music_genre_name: str
        """

        self._music_genre_name = music_genre_name

    @property
    def music_genre_name_extended(self):
        """Gets the music_genre_name_extended of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.

        

        :return: The music_genre_name_extended of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.
        :rtype: str
        """
        return self._music_genre_name_extended

    @music_genre_name_extended.setter
    def music_genre_name_extended(self, music_genre_name_extended):
        """Sets the music_genre_name_extended of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.

        

        :param music_genre_name_extended: The music_genre_name_extended of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.
        :type music_genre_name_extended: str
        """

        self._music_genre_name_extended = music_genre_name_extended

    @property
    def music_genre_parent_id(self):
        """Gets the music_genre_parent_id of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.

        

        :return: The music_genre_parent_id of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.
        :rtype: float
        """
        return self._music_genre_parent_id

    @music_genre_parent_id.setter
    def music_genre_parent_id(self, music_genre_parent_id):
        """Sets the music_genre_parent_id of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.

        

        :param music_genre_parent_id: The music_genre_parent_id of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.
        :type music_genre_parent_id: float
        """

        self._music_genre_parent_id = music_genre_parent_id

    @property
    def music_genre_vanity(self):
        """Gets the music_genre_vanity of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.

        

        :return: The music_genre_vanity of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.
        :rtype: str
        """
        return self._music_genre_vanity

    @music_genre_vanity.setter
    def music_genre_vanity(self, music_genre_vanity):
        """Sets the music_genre_vanity of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.

        

        :param music_genre_vanity: The music_genre_vanity of this AlbumPrimaryGenresMusicGenreListInnerMusicGenre.
        :type music_genre_vanity: str
        """

        self._music_genre_vanity = music_genre_vanity
