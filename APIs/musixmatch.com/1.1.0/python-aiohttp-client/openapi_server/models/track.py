# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.album_primary_genres import AlbumPrimaryGenres
from openapi_server import util


class Track(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, album_coverart_100x100: str=None, album_coverart_350x350: str=None, album_coverart_500x500: str=None, album_coverart_800x800: str=None, album_id: float=None, album_name: str=None, artist_id: float=None, artist_mbid: str=None, artist_name: str=None, commontrack_id: float=None, commontrack_vanity_id: str=None, explicit: float=None, first_release_date: str=None, has_lyrics: float=None, has_subtitles: float=None, instrumental: float=None, lyrics_id: float=None, num_favourite: float=None, primary_genres: AlbumPrimaryGenres=None, restricted: float=None, secondary_genres: AlbumPrimaryGenres=None, subtitle_id: float=None, track_edit_url: str=None, track_id: float=None, track_isrc: str=None, track_length: float=None, track_mbid: str=None, track_name: str=None, track_name_translation_list: List[str]=None, track_rating: float=None, track_share_url: str=None, track_soundcloud_id: float=None, track_spotify_id: str=None, track_xboxmusic_id: str=None, updated_time: str=None):
        """Track - a model defined in OpenAPI

        :param album_coverart_100x100: The album_coverart_100x100 of this Track.
        :param album_coverart_350x350: The album_coverart_350x350 of this Track.
        :param album_coverart_500x500: The album_coverart_500x500 of this Track.
        :param album_coverart_800x800: The album_coverart_800x800 of this Track.
        :param album_id: The album_id of this Track.
        :param album_name: The album_name of this Track.
        :param artist_id: The artist_id of this Track.
        :param artist_mbid: The artist_mbid of this Track.
        :param artist_name: The artist_name of this Track.
        :param commontrack_id: The commontrack_id of this Track.
        :param commontrack_vanity_id: The commontrack_vanity_id of this Track.
        :param explicit: The explicit of this Track.
        :param first_release_date: The first_release_date of this Track.
        :param has_lyrics: The has_lyrics of this Track.
        :param has_subtitles: The has_subtitles of this Track.
        :param instrumental: The instrumental of this Track.
        :param lyrics_id: The lyrics_id of this Track.
        :param num_favourite: The num_favourite of this Track.
        :param primary_genres: The primary_genres of this Track.
        :param restricted: The restricted of this Track.
        :param secondary_genres: The secondary_genres of this Track.
        :param subtitle_id: The subtitle_id of this Track.
        :param track_edit_url: The track_edit_url of this Track.
        :param track_id: The track_id of this Track.
        :param track_isrc: The track_isrc of this Track.
        :param track_length: The track_length of this Track.
        :param track_mbid: The track_mbid of this Track.
        :param track_name: The track_name of this Track.
        :param track_name_translation_list: The track_name_translation_list of this Track.
        :param track_rating: The track_rating of this Track.
        :param track_share_url: The track_share_url of this Track.
        :param track_soundcloud_id: The track_soundcloud_id of this Track.
        :param track_spotify_id: The track_spotify_id of this Track.
        :param track_xboxmusic_id: The track_xboxmusic_id of this Track.
        :param updated_time: The updated_time of this Track.
        """
        self.openapi_types = {
            'album_coverart_100x100': str,
            'album_coverart_350x350': str,
            'album_coverart_500x500': str,
            'album_coverart_800x800': str,
            'album_id': float,
            'album_name': str,
            'artist_id': float,
            'artist_mbid': str,
            'artist_name': str,
            'commontrack_id': float,
            'commontrack_vanity_id': str,
            'explicit': float,
            'first_release_date': str,
            'has_lyrics': float,
            'has_subtitles': float,
            'instrumental': float,
            'lyrics_id': float,
            'num_favourite': float,
            'primary_genres': AlbumPrimaryGenres,
            'restricted': float,
            'secondary_genres': AlbumPrimaryGenres,
            'subtitle_id': float,
            'track_edit_url': str,
            'track_id': float,
            'track_isrc': str,
            'track_length': float,
            'track_mbid': str,
            'track_name': str,
            'track_name_translation_list': List[str],
            'track_rating': float,
            'track_share_url': str,
            'track_soundcloud_id': float,
            'track_spotify_id': str,
            'track_xboxmusic_id': str,
            'updated_time': str
        }

        self.attribute_map = {
            'album_coverart_100x100': 'album_coverart_100x100',
            'album_coverart_350x350': 'album_coverart_350x350',
            'album_coverart_500x500': 'album_coverart_500x500',
            'album_coverart_800x800': 'album_coverart_800x800',
            'album_id': 'album_id',
            'album_name': 'album_name',
            'artist_id': 'artist_id',
            'artist_mbid': 'artist_mbid',
            'artist_name': 'artist_name',
            'commontrack_id': 'commontrack_id',
            'commontrack_vanity_id': 'commontrack_vanity_id',
            'explicit': 'explicit',
            'first_release_date': 'first_release_date',
            'has_lyrics': 'has_lyrics',
            'has_subtitles': 'has_subtitles',
            'instrumental': 'instrumental',
            'lyrics_id': 'lyrics_id',
            'num_favourite': 'num_favourite',
            'primary_genres': 'primary_genres',
            'restricted': 'restricted',
            'secondary_genres': 'secondary_genres',
            'subtitle_id': 'subtitle_id',
            'track_edit_url': 'track_edit_url',
            'track_id': 'track_id',
            'track_isrc': 'track_isrc',
            'track_length': 'track_length',
            'track_mbid': 'track_mbid',
            'track_name': 'track_name',
            'track_name_translation_list': 'track_name_translation_list',
            'track_rating': 'track_rating',
            'track_share_url': 'track_share_url',
            'track_soundcloud_id': 'track_soundcloud_id',
            'track_spotify_id': 'track_spotify_id',
            'track_xboxmusic_id': 'track_xboxmusic_id',
            'updated_time': 'updated_time'
        }

        self._album_coverart_100x100 = album_coverart_100x100
        self._album_coverart_350x350 = album_coverart_350x350
        self._album_coverart_500x500 = album_coverart_500x500
        self._album_coverart_800x800 = album_coverart_800x800
        self._album_id = album_id
        self._album_name = album_name
        self._artist_id = artist_id
        self._artist_mbid = artist_mbid
        self._artist_name = artist_name
        self._commontrack_id = commontrack_id
        self._commontrack_vanity_id = commontrack_vanity_id
        self._explicit = explicit
        self._first_release_date = first_release_date
        self._has_lyrics = has_lyrics
        self._has_subtitles = has_subtitles
        self._instrumental = instrumental
        self._lyrics_id = lyrics_id
        self._num_favourite = num_favourite
        self._primary_genres = primary_genres
        self._restricted = restricted
        self._secondary_genres = secondary_genres
        self._subtitle_id = subtitle_id
        self._track_edit_url = track_edit_url
        self._track_id = track_id
        self._track_isrc = track_isrc
        self._track_length = track_length
        self._track_mbid = track_mbid
        self._track_name = track_name
        self._track_name_translation_list = track_name_translation_list
        self._track_rating = track_rating
        self._track_share_url = track_share_url
        self._track_soundcloud_id = track_soundcloud_id
        self._track_spotify_id = track_spotify_id
        self._track_xboxmusic_id = track_xboxmusic_id
        self._updated_time = updated_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Track':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Track of this Track.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def album_coverart_100x100(self):
        """Gets the album_coverart_100x100 of this Track.

        

        :return: The album_coverart_100x100 of this Track.
        :rtype: str
        """
        return self._album_coverart_100x100

    @album_coverart_100x100.setter
    def album_coverart_100x100(self, album_coverart_100x100):
        """Sets the album_coverart_100x100 of this Track.

        

        :param album_coverart_100x100: The album_coverart_100x100 of this Track.
        :type album_coverart_100x100: str
        """

        self._album_coverart_100x100 = album_coverart_100x100

    @property
    def album_coverart_350x350(self):
        """Gets the album_coverart_350x350 of this Track.

        

        :return: The album_coverart_350x350 of this Track.
        :rtype: str
        """
        return self._album_coverart_350x350

    @album_coverart_350x350.setter
    def album_coverart_350x350(self, album_coverart_350x350):
        """Sets the album_coverart_350x350 of this Track.

        

        :param album_coverart_350x350: The album_coverart_350x350 of this Track.
        :type album_coverart_350x350: str
        """

        self._album_coverart_350x350 = album_coverart_350x350

    @property
    def album_coverart_500x500(self):
        """Gets the album_coverart_500x500 of this Track.

        

        :return: The album_coverart_500x500 of this Track.
        :rtype: str
        """
        return self._album_coverart_500x500

    @album_coverart_500x500.setter
    def album_coverart_500x500(self, album_coverart_500x500):
        """Sets the album_coverart_500x500 of this Track.

        

        :param album_coverart_500x500: The album_coverart_500x500 of this Track.
        :type album_coverart_500x500: str
        """

        self._album_coverart_500x500 = album_coverart_500x500

    @property
    def album_coverart_800x800(self):
        """Gets the album_coverart_800x800 of this Track.

        

        :return: The album_coverart_800x800 of this Track.
        :rtype: str
        """
        return self._album_coverart_800x800

    @album_coverart_800x800.setter
    def album_coverart_800x800(self, album_coverart_800x800):
        """Sets the album_coverart_800x800 of this Track.

        

        :param album_coverart_800x800: The album_coverart_800x800 of this Track.
        :type album_coverart_800x800: str
        """

        self._album_coverart_800x800 = album_coverart_800x800

    @property
    def album_id(self):
        """Gets the album_id of this Track.

        

        :return: The album_id of this Track.
        :rtype: float
        """
        return self._album_id

    @album_id.setter
    def album_id(self, album_id):
        """Sets the album_id of this Track.

        

        :param album_id: The album_id of this Track.
        :type album_id: float
        """

        self._album_id = album_id

    @property
    def album_name(self):
        """Gets the album_name of this Track.

        

        :return: The album_name of this Track.
        :rtype: str
        """
        return self._album_name

    @album_name.setter
    def album_name(self, album_name):
        """Sets the album_name of this Track.

        

        :param album_name: The album_name of this Track.
        :type album_name: str
        """

        self._album_name = album_name

    @property
    def artist_id(self):
        """Gets the artist_id of this Track.

        

        :return: The artist_id of this Track.
        :rtype: float
        """
        return self._artist_id

    @artist_id.setter
    def artist_id(self, artist_id):
        """Sets the artist_id of this Track.

        

        :param artist_id: The artist_id of this Track.
        :type artist_id: float
        """

        self._artist_id = artist_id

    @property
    def artist_mbid(self):
        """Gets the artist_mbid of this Track.

        

        :return: The artist_mbid of this Track.
        :rtype: str
        """
        return self._artist_mbid

    @artist_mbid.setter
    def artist_mbid(self, artist_mbid):
        """Sets the artist_mbid of this Track.

        

        :param artist_mbid: The artist_mbid of this Track.
        :type artist_mbid: str
        """

        self._artist_mbid = artist_mbid

    @property
    def artist_name(self):
        """Gets the artist_name of this Track.

        

        :return: The artist_name of this Track.
        :rtype: str
        """
        return self._artist_name

    @artist_name.setter
    def artist_name(self, artist_name):
        """Sets the artist_name of this Track.

        

        :param artist_name: The artist_name of this Track.
        :type artist_name: str
        """

        self._artist_name = artist_name

    @property
    def commontrack_id(self):
        """Gets the commontrack_id of this Track.

        

        :return: The commontrack_id of this Track.
        :rtype: float
        """
        return self._commontrack_id

    @commontrack_id.setter
    def commontrack_id(self, commontrack_id):
        """Sets the commontrack_id of this Track.

        

        :param commontrack_id: The commontrack_id of this Track.
        :type commontrack_id: float
        """

        self._commontrack_id = commontrack_id

    @property
    def commontrack_vanity_id(self):
        """Gets the commontrack_vanity_id of this Track.

        

        :return: The commontrack_vanity_id of this Track.
        :rtype: str
        """
        return self._commontrack_vanity_id

    @commontrack_vanity_id.setter
    def commontrack_vanity_id(self, commontrack_vanity_id):
        """Sets the commontrack_vanity_id of this Track.

        

        :param commontrack_vanity_id: The commontrack_vanity_id of this Track.
        :type commontrack_vanity_id: str
        """

        self._commontrack_vanity_id = commontrack_vanity_id

    @property
    def explicit(self):
        """Gets the explicit of this Track.

        

        :return: The explicit of this Track.
        :rtype: float
        """
        return self._explicit

    @explicit.setter
    def explicit(self, explicit):
        """Sets the explicit of this Track.

        

        :param explicit: The explicit of this Track.
        :type explicit: float
        """

        self._explicit = explicit

    @property
    def first_release_date(self):
        """Gets the first_release_date of this Track.

        

        :return: The first_release_date of this Track.
        :rtype: str
        """
        return self._first_release_date

    @first_release_date.setter
    def first_release_date(self, first_release_date):
        """Sets the first_release_date of this Track.

        

        :param first_release_date: The first_release_date of this Track.
        :type first_release_date: str
        """

        self._first_release_date = first_release_date

    @property
    def has_lyrics(self):
        """Gets the has_lyrics of this Track.

        

        :return: The has_lyrics of this Track.
        :rtype: float
        """
        return self._has_lyrics

    @has_lyrics.setter
    def has_lyrics(self, has_lyrics):
        """Sets the has_lyrics of this Track.

        

        :param has_lyrics: The has_lyrics of this Track.
        :type has_lyrics: float
        """

        self._has_lyrics = has_lyrics

    @property
    def has_subtitles(self):
        """Gets the has_subtitles of this Track.

        

        :return: The has_subtitles of this Track.
        :rtype: float
        """
        return self._has_subtitles

    @has_subtitles.setter
    def has_subtitles(self, has_subtitles):
        """Sets the has_subtitles of this Track.

        

        :param has_subtitles: The has_subtitles of this Track.
        :type has_subtitles: float
        """

        self._has_subtitles = has_subtitles

    @property
    def instrumental(self):
        """Gets the instrumental of this Track.

        

        :return: The instrumental of this Track.
        :rtype: float
        """
        return self._instrumental

    @instrumental.setter
    def instrumental(self, instrumental):
        """Sets the instrumental of this Track.

        

        :param instrumental: The instrumental of this Track.
        :type instrumental: float
        """

        self._instrumental = instrumental

    @property
    def lyrics_id(self):
        """Gets the lyrics_id of this Track.

        

        :return: The lyrics_id of this Track.
        :rtype: float
        """
        return self._lyrics_id

    @lyrics_id.setter
    def lyrics_id(self, lyrics_id):
        """Sets the lyrics_id of this Track.

        

        :param lyrics_id: The lyrics_id of this Track.
        :type lyrics_id: float
        """

        self._lyrics_id = lyrics_id

    @property
    def num_favourite(self):
        """Gets the num_favourite of this Track.

        

        :return: The num_favourite of this Track.
        :rtype: float
        """
        return self._num_favourite

    @num_favourite.setter
    def num_favourite(self, num_favourite):
        """Sets the num_favourite of this Track.

        

        :param num_favourite: The num_favourite of this Track.
        :type num_favourite: float
        """

        self._num_favourite = num_favourite

    @property
    def primary_genres(self):
        """Gets the primary_genres of this Track.


        :return: The primary_genres of this Track.
        :rtype: AlbumPrimaryGenres
        """
        return self._primary_genres

    @primary_genres.setter
    def primary_genres(self, primary_genres):
        """Sets the primary_genres of this Track.


        :param primary_genres: The primary_genres of this Track.
        :type primary_genres: AlbumPrimaryGenres
        """

        self._primary_genres = primary_genres

    @property
    def restricted(self):
        """Gets the restricted of this Track.

        

        :return: The restricted of this Track.
        :rtype: float
        """
        return self._restricted

    @restricted.setter
    def restricted(self, restricted):
        """Sets the restricted of this Track.

        

        :param restricted: The restricted of this Track.
        :type restricted: float
        """

        self._restricted = restricted

    @property
    def secondary_genres(self):
        """Gets the secondary_genres of this Track.


        :return: The secondary_genres of this Track.
        :rtype: AlbumPrimaryGenres
        """
        return self._secondary_genres

    @secondary_genres.setter
    def secondary_genres(self, secondary_genres):
        """Sets the secondary_genres of this Track.


        :param secondary_genres: The secondary_genres of this Track.
        :type secondary_genres: AlbumPrimaryGenres
        """

        self._secondary_genres = secondary_genres

    @property
    def subtitle_id(self):
        """Gets the subtitle_id of this Track.

        

        :return: The subtitle_id of this Track.
        :rtype: float
        """
        return self._subtitle_id

    @subtitle_id.setter
    def subtitle_id(self, subtitle_id):
        """Sets the subtitle_id of this Track.

        

        :param subtitle_id: The subtitle_id of this Track.
        :type subtitle_id: float
        """

        self._subtitle_id = subtitle_id

    @property
    def track_edit_url(self):
        """Gets the track_edit_url of this Track.

        

        :return: The track_edit_url of this Track.
        :rtype: str
        """
        return self._track_edit_url

    @track_edit_url.setter
    def track_edit_url(self, track_edit_url):
        """Sets the track_edit_url of this Track.

        

        :param track_edit_url: The track_edit_url of this Track.
        :type track_edit_url: str
        """

        self._track_edit_url = track_edit_url

    @property
    def track_id(self):
        """Gets the track_id of this Track.

        

        :return: The track_id of this Track.
        :rtype: float
        """
        return self._track_id

    @track_id.setter
    def track_id(self, track_id):
        """Sets the track_id of this Track.

        

        :param track_id: The track_id of this Track.
        :type track_id: float
        """

        self._track_id = track_id

    @property
    def track_isrc(self):
        """Gets the track_isrc of this Track.

        

        :return: The track_isrc of this Track.
        :rtype: str
        """
        return self._track_isrc

    @track_isrc.setter
    def track_isrc(self, track_isrc):
        """Sets the track_isrc of this Track.

        

        :param track_isrc: The track_isrc of this Track.
        :type track_isrc: str
        """

        self._track_isrc = track_isrc

    @property
    def track_length(self):
        """Gets the track_length of this Track.

        

        :return: The track_length of this Track.
        :rtype: float
        """
        return self._track_length

    @track_length.setter
    def track_length(self, track_length):
        """Sets the track_length of this Track.

        

        :param track_length: The track_length of this Track.
        :type track_length: float
        """

        self._track_length = track_length

    @property
    def track_mbid(self):
        """Gets the track_mbid of this Track.

        

        :return: The track_mbid of this Track.
        :rtype: str
        """
        return self._track_mbid

    @track_mbid.setter
    def track_mbid(self, track_mbid):
        """Sets the track_mbid of this Track.

        

        :param track_mbid: The track_mbid of this Track.
        :type track_mbid: str
        """

        self._track_mbid = track_mbid

    @property
    def track_name(self):
        """Gets the track_name of this Track.

        

        :return: The track_name of this Track.
        :rtype: str
        """
        return self._track_name

    @track_name.setter
    def track_name(self, track_name):
        """Sets the track_name of this Track.

        

        :param track_name: The track_name of this Track.
        :type track_name: str
        """

        self._track_name = track_name

    @property
    def track_name_translation_list(self):
        """Gets the track_name_translation_list of this Track.


        :return: The track_name_translation_list of this Track.
        :rtype: List[str]
        """
        return self._track_name_translation_list

    @track_name_translation_list.setter
    def track_name_translation_list(self, track_name_translation_list):
        """Sets the track_name_translation_list of this Track.


        :param track_name_translation_list: The track_name_translation_list of this Track.
        :type track_name_translation_list: List[str]
        """

        self._track_name_translation_list = track_name_translation_list

    @property
    def track_rating(self):
        """Gets the track_rating of this Track.

        

        :return: The track_rating of this Track.
        :rtype: float
        """
        return self._track_rating

    @track_rating.setter
    def track_rating(self, track_rating):
        """Sets the track_rating of this Track.

        

        :param track_rating: The track_rating of this Track.
        :type track_rating: float
        """

        self._track_rating = track_rating

    @property
    def track_share_url(self):
        """Gets the track_share_url of this Track.

        

        :return: The track_share_url of this Track.
        :rtype: str
        """
        return self._track_share_url

    @track_share_url.setter
    def track_share_url(self, track_share_url):
        """Sets the track_share_url of this Track.

        

        :param track_share_url: The track_share_url of this Track.
        :type track_share_url: str
        """

        self._track_share_url = track_share_url

    @property
    def track_soundcloud_id(self):
        """Gets the track_soundcloud_id of this Track.

        

        :return: The track_soundcloud_id of this Track.
        :rtype: float
        """
        return self._track_soundcloud_id

    @track_soundcloud_id.setter
    def track_soundcloud_id(self, track_soundcloud_id):
        """Sets the track_soundcloud_id of this Track.

        

        :param track_soundcloud_id: The track_soundcloud_id of this Track.
        :type track_soundcloud_id: float
        """

        self._track_soundcloud_id = track_soundcloud_id

    @property
    def track_spotify_id(self):
        """Gets the track_spotify_id of this Track.

        

        :return: The track_spotify_id of this Track.
        :rtype: str
        """
        return self._track_spotify_id

    @track_spotify_id.setter
    def track_spotify_id(self, track_spotify_id):
        """Sets the track_spotify_id of this Track.

        

        :param track_spotify_id: The track_spotify_id of this Track.
        :type track_spotify_id: str
        """

        self._track_spotify_id = track_spotify_id

    @property
    def track_xboxmusic_id(self):
        """Gets the track_xboxmusic_id of this Track.

        

        :return: The track_xboxmusic_id of this Track.
        :rtype: str
        """
        return self._track_xboxmusic_id

    @track_xboxmusic_id.setter
    def track_xboxmusic_id(self, track_xboxmusic_id):
        """Sets the track_xboxmusic_id of this Track.

        

        :param track_xboxmusic_id: The track_xboxmusic_id of this Track.
        :type track_xboxmusic_id: str
        """

        self._track_xboxmusic_id = track_xboxmusic_id

    @property
    def updated_time(self):
        """Gets the updated_time of this Track.

        

        :return: The updated_time of this Track.
        :rtype: str
        """
        return self._updated_time

    @updated_time.setter
    def updated_time(self, updated_time):
        """Sets the updated_time of this Track.

        

        :param updated_time: The updated_time of this Track.
        :type updated_time: str
        """

        self._updated_time = updated_time
