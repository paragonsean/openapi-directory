/*
 * Netlify's API documentation
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * The version of the OpenAPI document: 2.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.Submission;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SubmissionApi
 */
@Disabled
public class SubmissionApiTest {

    private final SubmissionApi api = new SubmissionApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSubmissionTest() throws ApiException {
        String submissionId = null;
        api.deleteSubmission(submissionId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFormSubmissionTest() throws ApiException {
        String submissionId = null;
        String query = null;
        Integer page = null;
        Integer perPage = null;
        List<Submission> response = api.listFormSubmission(submissionId, query, page, perPage);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFormSubmissionsTest() throws ApiException {
        String formId = null;
        Integer page = null;
        Integer perPage = null;
        List<Submission> response = api.listFormSubmissions(formId, page, perPage);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSiteSubmissionsTest() throws ApiException {
        String siteId = null;
        Integer page = null;
        Integer perPage = null;
        List<Submission> response = api.listSiteSubmissions(siteId, page, perPage);
        // TODO: test validations
    }

}
