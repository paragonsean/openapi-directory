/*
 * Netlify's API documentation
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * The version of the OpenAPI document: 2.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BuildHook;
import org.openapitools.client.model.BuildHookSetup;
import org.openapitools.client.model.Error;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BuildHookApi
 */
@Disabled
public class BuildHookApiTest {

    private final BuildHookApi api = new BuildHookApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSiteBuildHookTest() throws ApiException {
        String siteId = null;
        BuildHookSetup buildHook = null;
        BuildHook response = api.createSiteBuildHook(siteId, buildHook);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSiteBuildHookTest() throws ApiException {
        String siteId = null;
        String id = null;
        api.deleteSiteBuildHook(siteId, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSiteBuildHookTest() throws ApiException {
        String siteId = null;
        String id = null;
        BuildHook response = api.getSiteBuildHook(siteId, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSiteBuildHooksTest() throws ApiException {
        String siteId = null;
        List<BuildHook> response = api.listSiteBuildHooks(siteId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSiteBuildHookTest() throws ApiException {
        String siteId = null;
        String id = null;
        BuildHookSetup buildHook = null;
        api.updateSiteBuildHook(siteId, id, buildHook);
        // TODO: test validations
    }

}
