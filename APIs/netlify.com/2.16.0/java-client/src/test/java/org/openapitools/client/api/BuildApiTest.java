/*
 * Netlify's API documentation
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * The version of the OpenAPI document: 2.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Build;
import org.openapitools.client.model.BuildSetup;
import org.openapitools.client.model.BuildStatus;
import org.openapitools.client.model.Error;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BuildApi
 */
@Disabled
public class BuildApiTest {

    private final BuildApi api = new BuildApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSiteBuildTest() throws ApiException {
        String siteId = null;
        BuildSetup build = null;
        Build response = api.createSiteBuild(siteId, build);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccountBuildStatusTest() throws ApiException {
        String accountId = null;
        List<BuildStatus> response = api.getAccountBuildStatus(accountId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSiteBuildTest() throws ApiException {
        String buildId = null;
        Build response = api.getSiteBuild(buildId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSiteBuildsTest() throws ApiException {
        String siteId = null;
        Integer page = null;
        Integer perPage = null;
        List<Build> response = api.listSiteBuilds(siteId, page, perPage);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notifyBuildStartTest() throws ApiException {
        String buildId = null;
        api.notifyBuildStart(buildId);
        // TODO: test validations
    }

}
