/*
 * Netlify's API documentation
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * The version of the OpenAPI document: 2.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccountAddMemberSetup;
import org.openapitools.client.model.AccountUpdateMemberSetup;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.Member;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MemberApi
 */
@Disabled
public class MemberApiTest {

    private final MemberApi api = new MemberApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addMemberToAccountTest() throws ApiException {
        String accountSlug = null;
        AccountAddMemberSetup accountAddMemberSetup = null;
        List<Member> response = api.addMemberToAccount(accountSlug, accountAddMemberSetup);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccountMemberTest() throws ApiException {
        String accountSlug = null;
        String memberId = null;
        Member response = api.getAccountMember(accountSlug, memberId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMembersForAccountTest() throws ApiException {
        String accountSlug = null;
        List<Member> response = api.listMembersForAccount(accountSlug);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeAccountMemberTest() throws ApiException {
        String accountSlug = null;
        String memberId = null;
        api.removeAccountMember(accountSlug, memberId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAccountMemberTest() throws ApiException {
        String accountSlug = null;
        String memberId = null;
        AccountUpdateMemberSetup accountUpdateMemberSetup = null;
        Member response = api.updateAccountMember(accountSlug, memberId, accountUpdateMemberSetup);
        // TODO: test validations
    }

}
