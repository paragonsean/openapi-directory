/*
 * Netlify's API documentation
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * The version of the OpenAPI document: 2.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.MinifyOptions;
import org.openapitools.client.model.SiteProcessingSettingsHtml;
import org.openapitools.client.model.SiteProcessingSettingsImages;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SiteProcessingSettings
 */
public class SiteProcessingSettingsTest {
    private final SiteProcessingSettings model = new SiteProcessingSettings();

    /**
     * Model tests for SiteProcessingSettings
     */
    @Test
    public void testSiteProcessingSettings() {
        // TODO: test SiteProcessingSettings
    }

    /**
     * Test the property 'css'
     */
    @Test
    public void cssTest() {
        // TODO: test css
    }

    /**
     * Test the property 'html'
     */
    @Test
    public void htmlTest() {
        // TODO: test html
    }

    /**
     * Test the property 'images'
     */
    @Test
    public void imagesTest() {
        // TODO: test images
    }

    /**
     * Test the property 'js'
     */
    @Test
    public void jsTest() {
        // TODO: test js
    }

    /**
     * Test the property 'skip'
     */
    @Test
    public void skipTest() {
        // TODO: test skip
    }

}
