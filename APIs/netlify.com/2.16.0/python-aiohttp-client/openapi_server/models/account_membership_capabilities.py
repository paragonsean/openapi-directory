# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_usage_capability import AccountUsageCapability
from openapi_server import util


class AccountMembershipCapabilities(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, collaborators: AccountUsageCapability=None, sites: AccountUsageCapability=None):
        """AccountMembershipCapabilities - a model defined in OpenAPI

        :param collaborators: The collaborators of this AccountMembershipCapabilities.
        :param sites: The sites of this AccountMembershipCapabilities.
        """
        self.openapi_types = {
            'collaborators': AccountUsageCapability,
            'sites': AccountUsageCapability
        }

        self.attribute_map = {
            'collaborators': 'collaborators',
            'sites': 'sites'
        }

        self._collaborators = collaborators
        self._sites = sites

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountMembershipCapabilities':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The accountMembership_capabilities of this AccountMembershipCapabilities.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def collaborators(self):
        """Gets the collaborators of this AccountMembershipCapabilities.


        :return: The collaborators of this AccountMembershipCapabilities.
        :rtype: AccountUsageCapability
        """
        return self._collaborators

    @collaborators.setter
    def collaborators(self, collaborators):
        """Sets the collaborators of this AccountMembershipCapabilities.


        :param collaborators: The collaborators of this AccountMembershipCapabilities.
        :type collaborators: AccountUsageCapability
        """

        self._collaborators = collaborators

    @property
    def sites(self):
        """Gets the sites of this AccountMembershipCapabilities.


        :return: The sites of this AccountMembershipCapabilities.
        :rtype: AccountUsageCapability
        """
        return self._sites

    @sites.setter
    def sites(self, sites):
        """Sets the sites of this AccountMembershipCapabilities.


        :param sites: The sites of this AccountMembershipCapabilities.
        :type sites: AccountUsageCapability
        """

        self._sites = sites
