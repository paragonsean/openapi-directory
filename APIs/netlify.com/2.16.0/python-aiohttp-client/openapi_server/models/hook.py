# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Hook(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, data: object=None, disabled: bool=None, event: str=None, id: str=None, site_id: str=None, type: str=None, updated_at: str=None):
        """Hook - a model defined in OpenAPI

        :param created_at: The created_at of this Hook.
        :param data: The data of this Hook.
        :param disabled: The disabled of this Hook.
        :param event: The event of this Hook.
        :param id: The id of this Hook.
        :param site_id: The site_id of this Hook.
        :param type: The type of this Hook.
        :param updated_at: The updated_at of this Hook.
        """
        self.openapi_types = {
            'created_at': str,
            'data': object,
            'disabled': bool,
            'event': str,
            'id': str,
            'site_id': str,
            'type': str,
            'updated_at': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'data': 'data',
            'disabled': 'disabled',
            'event': 'event',
            'id': 'id',
            'site_id': 'site_id',
            'type': 'type',
            'updated_at': 'updated_at'
        }

        self._created_at = created_at
        self._data = data
        self._disabled = disabled
        self._event = event
        self._id = id
        self._site_id = site_id
        self._type = type
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Hook':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The hook of this Hook.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this Hook.


        :return: The created_at of this Hook.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Hook.


        :param created_at: The created_at of this Hook.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def data(self):
        """Gets the data of this Hook.


        :return: The data of this Hook.
        :rtype: object
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this Hook.


        :param data: The data of this Hook.
        :type data: object
        """

        self._data = data

    @property
    def disabled(self):
        """Gets the disabled of this Hook.


        :return: The disabled of this Hook.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this Hook.


        :param disabled: The disabled of this Hook.
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def event(self):
        """Gets the event of this Hook.


        :return: The event of this Hook.
        :rtype: str
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this Hook.


        :param event: The event of this Hook.
        :type event: str
        """

        self._event = event

    @property
    def id(self):
        """Gets the id of this Hook.


        :return: The id of this Hook.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Hook.


        :param id: The id of this Hook.
        :type id: str
        """

        self._id = id

    @property
    def site_id(self):
        """Gets the site_id of this Hook.


        :return: The site_id of this Hook.
        :rtype: str
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this Hook.


        :param site_id: The site_id of this Hook.
        :type site_id: str
        """

        self._site_id = site_id

    @property
    def type(self):
        """Gets the type of this Hook.


        :return: The type of this Hook.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Hook.


        :param type: The type of this Hook.
        :type type: str
        """

        self._type = type

    @property
    def updated_at(self):
        """Gets the updated_at of this Hook.


        :return: The updated_at of this Hook.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Hook.


        :param updated_at: The updated_at of this Hook.
        :type updated_at: str
        """

        self._updated_at = updated_at
