# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, capabilities: object=None, description: str=None, id: str=None, monthly_dollar_price: int=None, monthly_seats_addon_dollar_price: int=None, name: str=None, yearly_dollar_price: int=None, yearly_seats_addon_dollar_price: int=None):
        """AccountType - a model defined in OpenAPI

        :param capabilities: The capabilities of this AccountType.
        :param description: The description of this AccountType.
        :param id: The id of this AccountType.
        :param monthly_dollar_price: The monthly_dollar_price of this AccountType.
        :param monthly_seats_addon_dollar_price: The monthly_seats_addon_dollar_price of this AccountType.
        :param name: The name of this AccountType.
        :param yearly_dollar_price: The yearly_dollar_price of this AccountType.
        :param yearly_seats_addon_dollar_price: The yearly_seats_addon_dollar_price of this AccountType.
        """
        self.openapi_types = {
            'capabilities': object,
            'description': str,
            'id': str,
            'monthly_dollar_price': int,
            'monthly_seats_addon_dollar_price': int,
            'name': str,
            'yearly_dollar_price': int,
            'yearly_seats_addon_dollar_price': int
        }

        self.attribute_map = {
            'capabilities': 'capabilities',
            'description': 'description',
            'id': 'id',
            'monthly_dollar_price': 'monthly_dollar_price',
            'monthly_seats_addon_dollar_price': 'monthly_seats_addon_dollar_price',
            'name': 'name',
            'yearly_dollar_price': 'yearly_dollar_price',
            'yearly_seats_addon_dollar_price': 'yearly_seats_addon_dollar_price'
        }

        self._capabilities = capabilities
        self._description = description
        self._id = id
        self._monthly_dollar_price = monthly_dollar_price
        self._monthly_seats_addon_dollar_price = monthly_seats_addon_dollar_price
        self._name = name
        self._yearly_dollar_price = yearly_dollar_price
        self._yearly_seats_addon_dollar_price = yearly_seats_addon_dollar_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The accountType of this AccountType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def capabilities(self):
        """Gets the capabilities of this AccountType.


        :return: The capabilities of this AccountType.
        :rtype: object
        """
        return self._capabilities

    @capabilities.setter
    def capabilities(self, capabilities):
        """Sets the capabilities of this AccountType.


        :param capabilities: The capabilities of this AccountType.
        :type capabilities: object
        """

        self._capabilities = capabilities

    @property
    def description(self):
        """Gets the description of this AccountType.


        :return: The description of this AccountType.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AccountType.


        :param description: The description of this AccountType.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this AccountType.


        :return: The id of this AccountType.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AccountType.


        :param id: The id of this AccountType.
        :type id: str
        """

        self._id = id

    @property
    def monthly_dollar_price(self):
        """Gets the monthly_dollar_price of this AccountType.


        :return: The monthly_dollar_price of this AccountType.
        :rtype: int
        """
        return self._monthly_dollar_price

    @monthly_dollar_price.setter
    def monthly_dollar_price(self, monthly_dollar_price):
        """Sets the monthly_dollar_price of this AccountType.


        :param monthly_dollar_price: The monthly_dollar_price of this AccountType.
        :type monthly_dollar_price: int
        """

        self._monthly_dollar_price = monthly_dollar_price

    @property
    def monthly_seats_addon_dollar_price(self):
        """Gets the monthly_seats_addon_dollar_price of this AccountType.


        :return: The monthly_seats_addon_dollar_price of this AccountType.
        :rtype: int
        """
        return self._monthly_seats_addon_dollar_price

    @monthly_seats_addon_dollar_price.setter
    def monthly_seats_addon_dollar_price(self, monthly_seats_addon_dollar_price):
        """Sets the monthly_seats_addon_dollar_price of this AccountType.


        :param monthly_seats_addon_dollar_price: The monthly_seats_addon_dollar_price of this AccountType.
        :type monthly_seats_addon_dollar_price: int
        """

        self._monthly_seats_addon_dollar_price = monthly_seats_addon_dollar_price

    @property
    def name(self):
        """Gets the name of this AccountType.


        :return: The name of this AccountType.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AccountType.


        :param name: The name of this AccountType.
        :type name: str
        """

        self._name = name

    @property
    def yearly_dollar_price(self):
        """Gets the yearly_dollar_price of this AccountType.


        :return: The yearly_dollar_price of this AccountType.
        :rtype: int
        """
        return self._yearly_dollar_price

    @yearly_dollar_price.setter
    def yearly_dollar_price(self, yearly_dollar_price):
        """Sets the yearly_dollar_price of this AccountType.


        :param yearly_dollar_price: The yearly_dollar_price of this AccountType.
        :type yearly_dollar_price: int
        """

        self._yearly_dollar_price = yearly_dollar_price

    @property
    def yearly_seats_addon_dollar_price(self):
        """Gets the yearly_seats_addon_dollar_price of this AccountType.


        :return: The yearly_seats_addon_dollar_price of this AccountType.
        :rtype: int
        """
        return self._yearly_seats_addon_dollar_price

    @yearly_seats_addon_dollar_price.setter
    def yearly_seats_addon_dollar_price(self, yearly_seats_addon_dollar_price):
        """Sets the yearly_seats_addon_dollar_price of this AccountType.


        :param yearly_seats_addon_dollar_price: The yearly_seats_addon_dollar_price of this AccountType.
        :type yearly_seats_addon_dollar_price: int
        """

        self._yearly_seats_addon_dollar_price = yearly_seats_addon_dollar_price
