# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FunctionSchedule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cron: str=None, name: str=None):
        """FunctionSchedule - a model defined in OpenAPI

        :param cron: The cron of this FunctionSchedule.
        :param name: The name of this FunctionSchedule.
        """
        self.openapi_types = {
            'cron': str,
            'name': str
        }

        self.attribute_map = {
            'cron': 'cron',
            'name': 'name'
        }

        self._cron = cron
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FunctionSchedule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The functionSchedule of this FunctionSchedule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cron(self):
        """Gets the cron of this FunctionSchedule.


        :return: The cron of this FunctionSchedule.
        :rtype: str
        """
        return self._cron

    @cron.setter
    def cron(self, cron):
        """Sets the cron of this FunctionSchedule.


        :param cron: The cron of this FunctionSchedule.
        :type cron: str
        """

        self._cron = cron

    @property
    def name(self):
        """Gets the name of this FunctionSchedule.


        :return: The name of this FunctionSchedule.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this FunctionSchedule.


        :param name: The name of this FunctionSchedule.
        :type name: str
        """

        self._name = name
