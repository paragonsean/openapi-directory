# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MinifyOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bundle: bool=None, minify: bool=None):
        """MinifyOptions - a model defined in OpenAPI

        :param bundle: The bundle of this MinifyOptions.
        :param minify: The minify of this MinifyOptions.
        """
        self.openapi_types = {
            'bundle': bool,
            'minify': bool
        }

        self.attribute_map = {
            'bundle': 'bundle',
            'minify': 'minify'
        }

        self._bundle = bundle
        self._minify = minify

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MinifyOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The minifyOptions of this MinifyOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bundle(self):
        """Gets the bundle of this MinifyOptions.


        :return: The bundle of this MinifyOptions.
        :rtype: bool
        """
        return self._bundle

    @bundle.setter
    def bundle(self, bundle):
        """Sets the bundle of this MinifyOptions.


        :param bundle: The bundle of this MinifyOptions.
        :type bundle: bool
        """

        self._bundle = bundle

    @property
    def minify(self):
        """Gets the minify of this MinifyOptions.


        :return: The minify of this MinifyOptions.
        :rtype: bool
        """
        return self._minify

    @minify.setter
    def minify(self, minify):
        """Sets the minify of this MinifyOptions.


        :param minify: The minify of this MinifyOptions.
        :type minify: bool
        """

        self._minify = minify
