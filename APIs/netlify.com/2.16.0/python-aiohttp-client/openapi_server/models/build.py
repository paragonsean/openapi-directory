# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Build(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, deploy_id: str=None, done: bool=None, error: str=None, id: str=None, sha: str=None):
        """Build - a model defined in OpenAPI

        :param created_at: The created_at of this Build.
        :param deploy_id: The deploy_id of this Build.
        :param done: The done of this Build.
        :param error: The error of this Build.
        :param id: The id of this Build.
        :param sha: The sha of this Build.
        """
        self.openapi_types = {
            'created_at': str,
            'deploy_id': str,
            'done': bool,
            'error': str,
            'id': str,
            'sha': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'deploy_id': 'deploy_id',
            'done': 'done',
            'error': 'error',
            'id': 'id',
            'sha': 'sha'
        }

        self._created_at = created_at
        self._deploy_id = deploy_id
        self._done = done
        self._error = error
        self._id = id
        self._sha = sha

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Build':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The build of this Build.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this Build.


        :return: The created_at of this Build.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Build.


        :param created_at: The created_at of this Build.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def deploy_id(self):
        """Gets the deploy_id of this Build.


        :return: The deploy_id of this Build.
        :rtype: str
        """
        return self._deploy_id

    @deploy_id.setter
    def deploy_id(self, deploy_id):
        """Sets the deploy_id of this Build.


        :param deploy_id: The deploy_id of this Build.
        :type deploy_id: str
        """

        self._deploy_id = deploy_id

    @property
    def done(self):
        """Gets the done of this Build.


        :return: The done of this Build.
        :rtype: bool
        """
        return self._done

    @done.setter
    def done(self, done):
        """Sets the done of this Build.


        :param done: The done of this Build.
        :type done: bool
        """

        self._done = done

    @property
    def error(self):
        """Gets the error of this Build.


        :return: The error of this Build.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this Build.


        :param error: The error of this Build.
        :type error: str
        """

        self._error = error

    @property
    def id(self):
        """Gets the id of this Build.


        :return: The id of this Build.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Build.


        :param id: The id of this Build.
        :type id: str
        """

        self._id = id

    @property
    def sha(self):
        """Gets the sha of this Build.


        :return: The sha of this Build.
        :rtype: str
        """
        return self._sha

    @sha.setter
    def sha(self, sha):
        """Sets the sha of this Build.


        :param sha: The sha of this Build.
        :type sha: str
        """

        self._sha = sha
