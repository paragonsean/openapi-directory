# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Ticket(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authorized: bool=None, client_id: str=None, created_at: str=None, id: str=None):
        """Ticket - a model defined in OpenAPI

        :param authorized: The authorized of this Ticket.
        :param client_id: The client_id of this Ticket.
        :param created_at: The created_at of this Ticket.
        :param id: The id of this Ticket.
        """
        self.openapi_types = {
            'authorized': bool,
            'client_id': str,
            'created_at': str,
            'id': str
        }

        self.attribute_map = {
            'authorized': 'authorized',
            'client_id': 'client_id',
            'created_at': 'created_at',
            'id': 'id'
        }

        self._authorized = authorized
        self._client_id = client_id
        self._created_at = created_at
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Ticket':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ticket of this Ticket.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authorized(self):
        """Gets the authorized of this Ticket.


        :return: The authorized of this Ticket.
        :rtype: bool
        """
        return self._authorized

    @authorized.setter
    def authorized(self, authorized):
        """Sets the authorized of this Ticket.


        :param authorized: The authorized of this Ticket.
        :type authorized: bool
        """

        self._authorized = authorized

    @property
    def client_id(self):
        """Gets the client_id of this Ticket.


        :return: The client_id of this Ticket.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this Ticket.


        :param client_id: The client_id of this Ticket.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def created_at(self):
        """Gets the created_at of this Ticket.


        :return: The created_at of this Ticket.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Ticket.


        :param created_at: The created_at of this Ticket.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this Ticket.


        :return: The id of this Ticket.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Ticket.


        :param id: The id of this Ticket.
        :type id: str
        """

        self._id = id
