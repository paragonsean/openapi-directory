# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_onboarding_progress import UserOnboardingProgress
from openapi_server import util


class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, affiliate_id: str=None, avatar_url: str=None, created_at: str=None, email: str=None, full_name: str=None, id: str=None, last_login: str=None, login_providers: List[str]=None, onboarding_progress: UserOnboardingProgress=None, site_count: int=None, uid: str=None):
        """User - a model defined in OpenAPI

        :param affiliate_id: The affiliate_id of this User.
        :param avatar_url: The avatar_url of this User.
        :param created_at: The created_at of this User.
        :param email: The email of this User.
        :param full_name: The full_name of this User.
        :param id: The id of this User.
        :param last_login: The last_login of this User.
        :param login_providers: The login_providers of this User.
        :param onboarding_progress: The onboarding_progress of this User.
        :param site_count: The site_count of this User.
        :param uid: The uid of this User.
        """
        self.openapi_types = {
            'affiliate_id': str,
            'avatar_url': str,
            'created_at': str,
            'email': str,
            'full_name': str,
            'id': str,
            'last_login': str,
            'login_providers': List[str],
            'onboarding_progress': UserOnboardingProgress,
            'site_count': int,
            'uid': str
        }

        self.attribute_map = {
            'affiliate_id': 'affiliate_id',
            'avatar_url': 'avatar_url',
            'created_at': 'created_at',
            'email': 'email',
            'full_name': 'full_name',
            'id': 'id',
            'last_login': 'last_login',
            'login_providers': 'login_providers',
            'onboarding_progress': 'onboarding_progress',
            'site_count': 'site_count',
            'uid': 'uid'
        }

        self._affiliate_id = affiliate_id
        self._avatar_url = avatar_url
        self._created_at = created_at
        self._email = email
        self._full_name = full_name
        self._id = id
        self._last_login = last_login
        self._login_providers = login_providers
        self._onboarding_progress = onboarding_progress
        self._site_count = site_count
        self._uid = uid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The user of this User.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def affiliate_id(self):
        """Gets the affiliate_id of this User.


        :return: The affiliate_id of this User.
        :rtype: str
        """
        return self._affiliate_id

    @affiliate_id.setter
    def affiliate_id(self, affiliate_id):
        """Sets the affiliate_id of this User.


        :param affiliate_id: The affiliate_id of this User.
        :type affiliate_id: str
        """

        self._affiliate_id = affiliate_id

    @property
    def avatar_url(self):
        """Gets the avatar_url of this User.


        :return: The avatar_url of this User.
        :rtype: str
        """
        return self._avatar_url

    @avatar_url.setter
    def avatar_url(self, avatar_url):
        """Sets the avatar_url of this User.


        :param avatar_url: The avatar_url of this User.
        :type avatar_url: str
        """

        self._avatar_url = avatar_url

    @property
    def created_at(self):
        """Gets the created_at of this User.


        :return: The created_at of this User.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this User.


        :param created_at: The created_at of this User.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def email(self):
        """Gets the email of this User.


        :return: The email of this User.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this User.


        :param email: The email of this User.
        :type email: str
        """

        self._email = email

    @property
    def full_name(self):
        """Gets the full_name of this User.


        :return: The full_name of this User.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this User.


        :param full_name: The full_name of this User.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def id(self):
        """Gets the id of this User.


        :return: The id of this User.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this User.


        :param id: The id of this User.
        :type id: str
        """

        self._id = id

    @property
    def last_login(self):
        """Gets the last_login of this User.


        :return: The last_login of this User.
        :rtype: str
        """
        return self._last_login

    @last_login.setter
    def last_login(self, last_login):
        """Sets the last_login of this User.


        :param last_login: The last_login of this User.
        :type last_login: str
        """

        self._last_login = last_login

    @property
    def login_providers(self):
        """Gets the login_providers of this User.


        :return: The login_providers of this User.
        :rtype: List[str]
        """
        return self._login_providers

    @login_providers.setter
    def login_providers(self, login_providers):
        """Sets the login_providers of this User.


        :param login_providers: The login_providers of this User.
        :type login_providers: List[str]
        """

        self._login_providers = login_providers

    @property
    def onboarding_progress(self):
        """Gets the onboarding_progress of this User.


        :return: The onboarding_progress of this User.
        :rtype: UserOnboardingProgress
        """
        return self._onboarding_progress

    @onboarding_progress.setter
    def onboarding_progress(self, onboarding_progress):
        """Sets the onboarding_progress of this User.


        :param onboarding_progress: The onboarding_progress of this User.
        :type onboarding_progress: UserOnboardingProgress
        """

        self._onboarding_progress = onboarding_progress

    @property
    def site_count(self):
        """Gets the site_count of this User.


        :return: The site_count of this User.
        :rtype: int
        """
        return self._site_count

    @site_count.setter
    def site_count(self, site_count):
        """Sets the site_count of this User.


        :param site_count: The site_count of this User.
        :type site_count: int
        """

        self._site_count = site_count

    @property
    def uid(self):
        """Gets the uid of this User.


        :return: The uid of this User.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this User.


        :param uid: The uid of this User.
        :type uid: str
        """

        self._uid = uid
