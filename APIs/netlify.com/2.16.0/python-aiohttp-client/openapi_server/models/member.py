# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Member(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avatar: str=None, email: str=None, full_name: str=None, id: str=None, role: str=None):
        """Member - a model defined in OpenAPI

        :param avatar: The avatar of this Member.
        :param email: The email of this Member.
        :param full_name: The full_name of this Member.
        :param id: The id of this Member.
        :param role: The role of this Member.
        """
        self.openapi_types = {
            'avatar': str,
            'email': str,
            'full_name': str,
            'id': str,
            'role': str
        }

        self.attribute_map = {
            'avatar': 'avatar',
            'email': 'email',
            'full_name': 'full_name',
            'id': 'id',
            'role': 'role'
        }

        self._avatar = avatar
        self._email = email
        self._full_name = full_name
        self._id = id
        self._role = role

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Member':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The member of this Member.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avatar(self):
        """Gets the avatar of this Member.


        :return: The avatar of this Member.
        :rtype: str
        """
        return self._avatar

    @avatar.setter
    def avatar(self, avatar):
        """Sets the avatar of this Member.


        :param avatar: The avatar of this Member.
        :type avatar: str
        """

        self._avatar = avatar

    @property
    def email(self):
        """Gets the email of this Member.


        :return: The email of this Member.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Member.


        :param email: The email of this Member.
        :type email: str
        """

        self._email = email

    @property
    def full_name(self):
        """Gets the full_name of this Member.


        :return: The full_name of this Member.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this Member.


        :param full_name: The full_name of this Member.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def id(self):
        """Gets the id of this Member.


        :return: The id of this Member.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Member.


        :param id: The id of this Member.
        :type id: str
        """

        self._id = id

    @property
    def role(self):
        """Gets the role of this Member.


        :return: The role of this Member.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this Member.


        :param role: The role of this Member.
        :type role: str
        """

        self._role = role
