# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Asset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_type: str=None, created_at: str=None, creator_id: str=None, id: str=None, key: str=None, name: str=None, site_id: str=None, size: int=None, state: str=None, updated_at: str=None, url: str=None, visibility: str=None):
        """Asset - a model defined in OpenAPI

        :param content_type: The content_type of this Asset.
        :param created_at: The created_at of this Asset.
        :param creator_id: The creator_id of this Asset.
        :param id: The id of this Asset.
        :param key: The key of this Asset.
        :param name: The name of this Asset.
        :param site_id: The site_id of this Asset.
        :param size: The size of this Asset.
        :param state: The state of this Asset.
        :param updated_at: The updated_at of this Asset.
        :param url: The url of this Asset.
        :param visibility: The visibility of this Asset.
        """
        self.openapi_types = {
            'content_type': str,
            'created_at': str,
            'creator_id': str,
            'id': str,
            'key': str,
            'name': str,
            'site_id': str,
            'size': int,
            'state': str,
            'updated_at': str,
            'url': str,
            'visibility': str
        }

        self.attribute_map = {
            'content_type': 'content_type',
            'created_at': 'created_at',
            'creator_id': 'creator_id',
            'id': 'id',
            'key': 'key',
            'name': 'name',
            'site_id': 'site_id',
            'size': 'size',
            'state': 'state',
            'updated_at': 'updated_at',
            'url': 'url',
            'visibility': 'visibility'
        }

        self._content_type = content_type
        self._created_at = created_at
        self._creator_id = creator_id
        self._id = id
        self._key = key
        self._name = name
        self._site_id = site_id
        self._size = size
        self._state = state
        self._updated_at = updated_at
        self._url = url
        self._visibility = visibility

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Asset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The asset of this Asset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_type(self):
        """Gets the content_type of this Asset.


        :return: The content_type of this Asset.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this Asset.


        :param content_type: The content_type of this Asset.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def created_at(self):
        """Gets the created_at of this Asset.


        :return: The created_at of this Asset.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Asset.


        :param created_at: The created_at of this Asset.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def creator_id(self):
        """Gets the creator_id of this Asset.


        :return: The creator_id of this Asset.
        :rtype: str
        """
        return self._creator_id

    @creator_id.setter
    def creator_id(self, creator_id):
        """Sets the creator_id of this Asset.


        :param creator_id: The creator_id of this Asset.
        :type creator_id: str
        """

        self._creator_id = creator_id

    @property
    def id(self):
        """Gets the id of this Asset.


        :return: The id of this Asset.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Asset.


        :param id: The id of this Asset.
        :type id: str
        """

        self._id = id

    @property
    def key(self):
        """Gets the key of this Asset.


        :return: The key of this Asset.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this Asset.


        :param key: The key of this Asset.
        :type key: str
        """

        self._key = key

    @property
    def name(self):
        """Gets the name of this Asset.


        :return: The name of this Asset.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Asset.


        :param name: The name of this Asset.
        :type name: str
        """

        self._name = name

    @property
    def site_id(self):
        """Gets the site_id of this Asset.


        :return: The site_id of this Asset.
        :rtype: str
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this Asset.


        :param site_id: The site_id of this Asset.
        :type site_id: str
        """

        self._site_id = site_id

    @property
    def size(self):
        """Gets the size of this Asset.


        :return: The size of this Asset.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this Asset.


        :param size: The size of this Asset.
        :type size: int
        """

        self._size = size

    @property
    def state(self):
        """Gets the state of this Asset.


        :return: The state of this Asset.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Asset.


        :param state: The state of this Asset.
        :type state: str
        """

        self._state = state

    @property
    def updated_at(self):
        """Gets the updated_at of this Asset.


        :return: The updated_at of this Asset.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Asset.


        :param updated_at: The updated_at of this Asset.
        :type updated_at: str
        """

        self._updated_at = updated_at

    @property
    def url(self):
        """Gets the url of this Asset.


        :return: The url of this Asset.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Asset.


        :param url: The url of this Asset.
        :type url: str
        """

        self._url = url

    @property
    def visibility(self):
        """Gets the visibility of this Asset.


        :return: The visibility of this Asset.
        :rtype: str
        """
        return self._visibility

    @visibility.setter
    def visibility(self, visibility):
        """Sets the visibility of this Asset.


        :param visibility: The visibility of this Asset.
        :type visibility: str
        """

        self._visibility = visibility
