/**
 * Netlify's API documentation
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * The version of the OpenAPI document: 2.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetlifysApiDocumentation);
  }
}(this, function(expect, NetlifysApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetlifysApiDocumentation.AccountType();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccountType', function() {
    it('should create an instance of AccountType', function() {
      // uncomment below and update the code to test AccountType
      //var instance = new NetlifysApiDocumentation.AccountType();
      //expect(instance).to.be.a(NetlifysApiDocumentation.AccountType);
    });

    it('should have the property capabilities (base name: "capabilities")', function() {
      // uncomment below and update the code to test the property capabilities
      //var instance = new NetlifysApiDocumentation.AccountType();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new NetlifysApiDocumentation.AccountType();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new NetlifysApiDocumentation.AccountType();
      //expect(instance).to.be();
    });

    it('should have the property monthlyDollarPrice (base name: "monthly_dollar_price")', function() {
      // uncomment below and update the code to test the property monthlyDollarPrice
      //var instance = new NetlifysApiDocumentation.AccountType();
      //expect(instance).to.be();
    });

    it('should have the property monthlySeatsAddonDollarPrice (base name: "monthly_seats_addon_dollar_price")', function() {
      // uncomment below and update the code to test the property monthlySeatsAddonDollarPrice
      //var instance = new NetlifysApiDocumentation.AccountType();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new NetlifysApiDocumentation.AccountType();
      //expect(instance).to.be();
    });

    it('should have the property yearlyDollarPrice (base name: "yearly_dollar_price")', function() {
      // uncomment below and update the code to test the property yearlyDollarPrice
      //var instance = new NetlifysApiDocumentation.AccountType();
      //expect(instance).to.be();
    });

    it('should have the property yearlySeatsAddonDollarPrice (base name: "yearly_seats_addon_dollar_price")', function() {
      // uncomment below and update the code to test the property yearlySeatsAddonDollarPrice
      //var instance = new NetlifysApiDocumentation.AccountType();
      //expect(instance).to.be();
    });

  });

}));
