/**
 * Netlify's API documentation
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * The version of the OpenAPI document: 2.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BuildLogMsg from '../model/BuildLogMsg';
import Error from '../model/Error';

/**
* BuildLogMsg service.
* @module api/BuildLogMsgApi
* @version 2.16.0
*/
export default class BuildLogMsgApi {

    /**
    * Constructs a new BuildLogMsgApi. 
    * @alias module:api/BuildLogMsgApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the updateSiteBuildLog operation.
     * @callback module:api/BuildLogMsgApi~updateSiteBuildLogCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} buildId 
     * @param {module:model/BuildLogMsg} msg 
     * @param {module:api/BuildLogMsgApi~updateSiteBuildLogCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateSiteBuildLog(buildId, msg, callback) {
      let postBody = msg;
      // verify the required parameter 'buildId' is set
      if (buildId === undefined || buildId === null) {
        throw new Error("Missing the required parameter 'buildId' when calling updateSiteBuildLog");
      }
      // verify the required parameter 'msg' is set
      if (msg === undefined || msg === null) {
        throw new Error("Missing the required parameter 'msg' when calling updateSiteBuildLog");
      }

      let pathParams = {
        'build_id': buildId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['netlifyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/builds/{build_id}/log', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
