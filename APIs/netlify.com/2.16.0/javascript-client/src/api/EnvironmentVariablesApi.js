/**
 * Netlify's API documentation
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * The version of the OpenAPI document: 2.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateEnvVarsRequestInner from '../model/CreateEnvVarsRequestInner';
import EnvVar from '../model/EnvVar';
import Error from '../model/Error';
import SetEnvVarValueRequest from '../model/SetEnvVarValueRequest';

/**
* EnvironmentVariables service.
* @module api/EnvironmentVariablesApi
* @version 2.16.0
*/
export default class EnvironmentVariablesApi {

    /**
    * Constructs a new EnvironmentVariablesApi. 
    * @alias module:api/EnvironmentVariablesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createEnvVars operation.
     * @callback module:api/EnvironmentVariablesApi~createEnvVarsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/EnvVar>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates new environment variables. Granular scopes are available on Pro plans and above.  To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.
     * @param {String} accountId Scope response to account_id
     * @param {Object} opts Optional parameters
     * @param {String} [siteId] If provided, create an environment variable on the site level, not the account level
     * @param {Array.<module:model/CreateEnvVarsRequestInner>} [envVars] 
     * @param {module:api/EnvironmentVariablesApi~createEnvVarsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/EnvVar>}
     */
    createEnvVars(accountId, opts, callback) {
      opts = opts || {};
      let postBody = opts['envVars'];
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling createEnvVars");
      }

      let pathParams = {
        'account_id': accountId
      };
      let queryParams = {
        'site_id': opts['siteId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['netlifyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [EnvVar];
      return this.apiClient.callApi(
        '/accounts/{account_id}/env', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteEnvVar operation.
     * @callback module:api/EnvironmentVariablesApi~deleteEnvVarCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an environment variable. To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.
     * @param {String} accountId Scope response to account_id
     * @param {String} key The environment variable key (case-sensitive)
     * @param {Object} opts Optional parameters
     * @param {String} [siteId] If provided, delete the environment variable from this site
     * @param {module:api/EnvironmentVariablesApi~deleteEnvVarCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteEnvVar(accountId, key, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling deleteEnvVar");
      }
      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling deleteEnvVar");
      }

      let pathParams = {
        'account_id': accountId,
        'key': key
      };
      let queryParams = {
        'site_id': opts['siteId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['netlifyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/accounts/{account_id}/env/{key}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteEnvVarValue operation.
     * @callback module:api/EnvironmentVariablesApi~deleteEnvVarValueCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a specific environment variable value. To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.
     * @param {String} accountId Scope response to account_id
     * @param {String} id The environment variable value's ID
     * @param {String} key The environment variable key name (case-sensitive)
     * @param {Object} opts Optional parameters
     * @param {String} [siteId] If provided, delete the value from an environment variable on this site
     * @param {module:api/EnvironmentVariablesApi~deleteEnvVarValueCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteEnvVarValue(accountId, id, key, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling deleteEnvVarValue");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteEnvVarValue");
      }
      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling deleteEnvVarValue");
      }

      let pathParams = {
        'account_id': accountId,
        'id': id,
        'key': key
      };
      let queryParams = {
        'site_id': opts['siteId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['netlifyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/accounts/{account_id}/env/{key}/value/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getEnvVar operation.
     * @callback module:api/EnvironmentVariablesApi~getEnvVarCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EnvVar} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns an individual environment variable. To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.
     * @param {String} accountId Scope response to account_id
     * @param {String} key The environment variable key (case-sensitive)
     * @param {Object} opts Optional parameters
     * @param {String} [siteId] If provided, return the environment variable for a specific site (no merging is performed)
     * @param {module:api/EnvironmentVariablesApi~getEnvVarCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EnvVar}
     */
    getEnvVar(accountId, key, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling getEnvVar");
      }
      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling getEnvVar");
      }

      let pathParams = {
        'account_id': accountId,
        'key': key
      };
      let queryParams = {
        'site_id': opts['siteId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['netlifyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EnvVar;
      return this.apiClient.callApi(
        '/accounts/{account_id}/env/{key}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getEnvVars operation.
     * @callback module:api/EnvironmentVariablesApi~getEnvVarsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/EnvVar>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns all environment variables for an account or site. An account corresponds to a team in the Netlify UI. To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.
     * @param {String} accountId Scope response to account_id
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [contextName] Filter by deploy context
     * @param {module:model/String} [scope] Filter by scope
     * @param {String} [siteId] If specified, only return environment variables set on this site
     * @param {module:api/EnvironmentVariablesApi~getEnvVarsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/EnvVar>}
     */
    getEnvVars(accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling getEnvVars");
      }

      let pathParams = {
        'account_id': accountId
      };
      let queryParams = {
        'context_name': opts['contextName'],
        'scope': opts['scope'],
        'site_id': opts['siteId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['netlifyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [EnvVar];
      return this.apiClient.callApi(
        '/accounts/{account_id}/env', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setEnvVarValue operation.
     * @callback module:api/EnvironmentVariablesApi~setEnvVarValueCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EnvVar} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates or creates a new value for an existing environment variable. To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.
     * @param {String} accountId Scope response to account_id
     * @param {String} key The existing environment variable key name (case-sensitive)
     * @param {Object} opts Optional parameters
     * @param {String} [siteId] If provided, update an environment variable set on this site
     * @param {module:model/SetEnvVarValueRequest} [envVar] 
     * @param {module:api/EnvironmentVariablesApi~setEnvVarValueCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EnvVar}
     */
    setEnvVarValue(accountId, key, opts, callback) {
      opts = opts || {};
      let postBody = opts['envVar'];
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling setEnvVarValue");
      }
      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling setEnvVarValue");
      }

      let pathParams = {
        'account_id': accountId,
        'key': key
      };
      let queryParams = {
        'site_id': opts['siteId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['netlifyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EnvVar;
      return this.apiClient.callApi(
        '/accounts/{account_id}/env/{key}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateEnvVar operation.
     * @callback module:api/EnvironmentVariablesApi~updateEnvVarCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EnvVar} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an existing environment variable and all of its values. Existing values will be replaced by values provided. To use this endpoint, your site must no longer be using the <a href=\"https://docs.netlify.com/environment-variables/classic-experience/\">classic environment variables experience</a>.  Migrate now with the Netlify UI.
     * @param {String} accountId Scope response to account_id
     * @param {String} key The existing environment variable key name (case-sensitive)
     * @param {Object} opts Optional parameters
     * @param {String} [siteId] If provided, update an environment variable set on this site
     * @param {module:model/CreateEnvVarsRequestInner} [envVar] 
     * @param {module:api/EnvironmentVariablesApi~updateEnvVarCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EnvVar}
     */
    updateEnvVar(accountId, key, opts, callback) {
      opts = opts || {};
      let postBody = opts['envVar'];
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling updateEnvVar");
      }
      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling updateEnvVar");
      }

      let pathParams = {
        'account_id': accountId,
        'key': key
      };
      let queryParams = {
        'site_id': opts['siteId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['netlifyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EnvVar;
      return this.apiClient.callApi(
        '/accounts/{account_id}/env/{key}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
