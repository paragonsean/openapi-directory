/**
 * Netlify's API documentation
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlify’s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * The version of the OpenAPI document: 2.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccessToken from './model/AccessToken';
import AccountAddMemberSetup from './model/AccountAddMemberSetup';
import AccountMembership from './model/AccountMembership';
import AccountMembershipCapabilities from './model/AccountMembershipCapabilities';
import AccountSetup from './model/AccountSetup';
import AccountType from './model/AccountType';
import AccountUpdateMemberSetup from './model/AccountUpdateMemberSetup';
import AccountUpdateSetup from './model/AccountUpdateSetup';
import AccountUsageCapability from './model/AccountUsageCapability';
import Asset from './model/Asset';
import AssetForm from './model/AssetForm';
import AssetPublicSignature from './model/AssetPublicSignature';
import AssetSignature from './model/AssetSignature';
import AuditLog from './model/AuditLog';
import Build from './model/Build';
import BuildHook from './model/BuildHook';
import BuildHookSetup from './model/BuildHookSetup';
import BuildLogMsg from './model/BuildLogMsg';
import BuildSetup from './model/BuildSetup';
import BuildStatus from './model/BuildStatus';
import BuildStatusMinutes from './model/BuildStatusMinutes';
import CreateEnvVarsRequestInner from './model/CreateEnvVarsRequestInner';
import Deploy from './model/Deploy';
import DeployFiles from './model/DeployFiles';
import DeployKey from './model/DeployKey';
import DeploySiteCapabilities from './model/DeploySiteCapabilities';
import DeployedBranch from './model/DeployedBranch';
import DnsRecord from './model/DnsRecord';
import DnsRecordCreate from './model/DnsRecordCreate';
import DnsZone from './model/DnsZone';
import DnsZoneSetup from './model/DnsZoneSetup';
import EnvVar from './model/EnvVar';
import EnvVarUser from './model/EnvVarUser';
import EnvVarValue from './model/EnvVarValue';
import Error from './model/Error';
import File from './model/File';
import Form from './model/Form';
import Function from './model/Function';
import FunctionConfig from './model/FunctionConfig';
import FunctionSchedule from './model/FunctionSchedule';
import Hook from './model/Hook';
import HookType from './model/HookType';
import Member from './model/Member';
import MinifyOptions from './model/MinifyOptions';
import PaymentMethod from './model/PaymentMethod';
import PaymentMethodData from './model/PaymentMethodData';
import Plugin from './model/Plugin';
import PluginParams from './model/PluginParams';
import PluginRun from './model/PluginRun';
import PluginRunData from './model/PluginRunData';
import RepoInfo from './model/RepoInfo';
import Service from './model/Service';
import ServiceInstance from './model/ServiceInstance';
import SetEnvVarValueRequest from './model/SetEnvVarValueRequest';
import Site from './model/Site';
import SiteDefaultHooksData from './model/SiteDefaultHooksData';
import SiteProcessingSettings from './model/SiteProcessingSettings';
import SiteProcessingSettingsHtml from './model/SiteProcessingSettingsHtml';
import SiteProcessingSettingsImages from './model/SiteProcessingSettingsImages';
import SiteSetup from './model/SiteSetup';
import SniCertificate from './model/SniCertificate';
import Snippet from './model/Snippet';
import SplitTest from './model/SplitTest';
import SplitTestSetup from './model/SplitTestSetup';
import Submission from './model/Submission';
import Ticket from './model/Ticket';
import User from './model/User';
import UserOnboardingProgress from './model/UserOnboardingProgress';
import AccessTokenApi from './api/AccessTokenApi';
import AccountMembershipApi from './api/AccountMembershipApi';
import AccountTypeApi from './api/AccountTypeApi';
import AssetApi from './api/AssetApi';
import AssetPublicSignatureApi from './api/AssetPublicSignatureApi';
import AuditLogApi from './api/AuditLogApi';
import BuildApi from './api/BuildApi';
import BuildHookApi from './api/BuildHookApi';
import BuildLogMsgApi from './api/BuildLogMsgApi';
import DeployApi from './api/DeployApi';
import DeployKeyApi from './api/DeployKeyApi';
import DeployedBranchApi from './api/DeployedBranchApi';
import DnsZoneApi from './api/DnsZoneApi';
import EnvironmentVariablesApi from './api/EnvironmentVariablesApi';
import FileApi from './api/FileApi';
import FormApi from './api/FormApi';
import FunctionApi from './api/FunctionApi';
import HookApi from './api/HookApi';
import HookTypeApi from './api/HookTypeApi';
import MemberApi from './api/MemberApi';
import MetadataApi from './api/MetadataApi';
import PaymentMethodApi from './api/PaymentMethodApi';
import ServiceApi from './api/ServiceApi';
import ServiceInstanceApi from './api/ServiceInstanceApi';
import SiteApi from './api/SiteApi';
import SniCertificateApi from './api/SniCertificateApi';
import SnippetApi from './api/SnippetApi';
import SplitTestApi from './api/SplitTestApi';
import SubmissionApi from './api/SubmissionApi';
import TicketApi from './api/TicketApi';
import UserApi from './api/UserApi';
import XInternalApi from './api/XInternalApi';


/**
* Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlify’s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client).<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var NetlifysApiDocumentation = require('index'); // See note below*.
* var xxxSvc = new NetlifysApiDocumentation.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new NetlifysApiDocumentation.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new NetlifysApiDocumentation.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new NetlifysApiDocumentation.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.16.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccessToken model constructor.
     * @property {module:model/AccessToken}
     */
    AccessToken,

    /**
     * The AccountAddMemberSetup model constructor.
     * @property {module:model/AccountAddMemberSetup}
     */
    AccountAddMemberSetup,

    /**
     * The AccountMembership model constructor.
     * @property {module:model/AccountMembership}
     */
    AccountMembership,

    /**
     * The AccountMembershipCapabilities model constructor.
     * @property {module:model/AccountMembershipCapabilities}
     */
    AccountMembershipCapabilities,

    /**
     * The AccountSetup model constructor.
     * @property {module:model/AccountSetup}
     */
    AccountSetup,

    /**
     * The AccountType model constructor.
     * @property {module:model/AccountType}
     */
    AccountType,

    /**
     * The AccountUpdateMemberSetup model constructor.
     * @property {module:model/AccountUpdateMemberSetup}
     */
    AccountUpdateMemberSetup,

    /**
     * The AccountUpdateSetup model constructor.
     * @property {module:model/AccountUpdateSetup}
     */
    AccountUpdateSetup,

    /**
     * The AccountUsageCapability model constructor.
     * @property {module:model/AccountUsageCapability}
     */
    AccountUsageCapability,

    /**
     * The Asset model constructor.
     * @property {module:model/Asset}
     */
    Asset,

    /**
     * The AssetForm model constructor.
     * @property {module:model/AssetForm}
     */
    AssetForm,

    /**
     * The AssetPublicSignature model constructor.
     * @property {module:model/AssetPublicSignature}
     */
    AssetPublicSignature,

    /**
     * The AssetSignature model constructor.
     * @property {module:model/AssetSignature}
     */
    AssetSignature,

    /**
     * The AuditLog model constructor.
     * @property {module:model/AuditLog}
     */
    AuditLog,

    /**
     * The Build model constructor.
     * @property {module:model/Build}
     */
    Build,

    /**
     * The BuildHook model constructor.
     * @property {module:model/BuildHook}
     */
    BuildHook,

    /**
     * The BuildHookSetup model constructor.
     * @property {module:model/BuildHookSetup}
     */
    BuildHookSetup,

    /**
     * The BuildLogMsg model constructor.
     * @property {module:model/BuildLogMsg}
     */
    BuildLogMsg,

    /**
     * The BuildSetup model constructor.
     * @property {module:model/BuildSetup}
     */
    BuildSetup,

    /**
     * The BuildStatus model constructor.
     * @property {module:model/BuildStatus}
     */
    BuildStatus,

    /**
     * The BuildStatusMinutes model constructor.
     * @property {module:model/BuildStatusMinutes}
     */
    BuildStatusMinutes,

    /**
     * The CreateEnvVarsRequestInner model constructor.
     * @property {module:model/CreateEnvVarsRequestInner}
     */
    CreateEnvVarsRequestInner,

    /**
     * The Deploy model constructor.
     * @property {module:model/Deploy}
     */
    Deploy,

    /**
     * The DeployFiles model constructor.
     * @property {module:model/DeployFiles}
     */
    DeployFiles,

    /**
     * The DeployKey model constructor.
     * @property {module:model/DeployKey}
     */
    DeployKey,

    /**
     * The DeploySiteCapabilities model constructor.
     * @property {module:model/DeploySiteCapabilities}
     */
    DeploySiteCapabilities,

    /**
     * The DeployedBranch model constructor.
     * @property {module:model/DeployedBranch}
     */
    DeployedBranch,

    /**
     * The DnsRecord model constructor.
     * @property {module:model/DnsRecord}
     */
    DnsRecord,

    /**
     * The DnsRecordCreate model constructor.
     * @property {module:model/DnsRecordCreate}
     */
    DnsRecordCreate,

    /**
     * The DnsZone model constructor.
     * @property {module:model/DnsZone}
     */
    DnsZone,

    /**
     * The DnsZoneSetup model constructor.
     * @property {module:model/DnsZoneSetup}
     */
    DnsZoneSetup,

    /**
     * The EnvVar model constructor.
     * @property {module:model/EnvVar}
     */
    EnvVar,

    /**
     * The EnvVarUser model constructor.
     * @property {module:model/EnvVarUser}
     */
    EnvVarUser,

    /**
     * The EnvVarValue model constructor.
     * @property {module:model/EnvVarValue}
     */
    EnvVarValue,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The File model constructor.
     * @property {module:model/File}
     */
    File,

    /**
     * The Form model constructor.
     * @property {module:model/Form}
     */
    Form,

    /**
     * The Function model constructor.
     * @property {module:model/Function}
     */
    Function,

    /**
     * The FunctionConfig model constructor.
     * @property {module:model/FunctionConfig}
     */
    FunctionConfig,

    /**
     * The FunctionSchedule model constructor.
     * @property {module:model/FunctionSchedule}
     */
    FunctionSchedule,

    /**
     * The Hook model constructor.
     * @property {module:model/Hook}
     */
    Hook,

    /**
     * The HookType model constructor.
     * @property {module:model/HookType}
     */
    HookType,

    /**
     * The Member model constructor.
     * @property {module:model/Member}
     */
    Member,

    /**
     * The MinifyOptions model constructor.
     * @property {module:model/MinifyOptions}
     */
    MinifyOptions,

    /**
     * The PaymentMethod model constructor.
     * @property {module:model/PaymentMethod}
     */
    PaymentMethod,

    /**
     * The PaymentMethodData model constructor.
     * @property {module:model/PaymentMethodData}
     */
    PaymentMethodData,

    /**
     * The Plugin model constructor.
     * @property {module:model/Plugin}
     */
    Plugin,

    /**
     * The PluginParams model constructor.
     * @property {module:model/PluginParams}
     */
    PluginParams,

    /**
     * The PluginRun model constructor.
     * @property {module:model/PluginRun}
     */
    PluginRun,

    /**
     * The PluginRunData model constructor.
     * @property {module:model/PluginRunData}
     */
    PluginRunData,

    /**
     * The RepoInfo model constructor.
     * @property {module:model/RepoInfo}
     */
    RepoInfo,

    /**
     * The Service model constructor.
     * @property {module:model/Service}
     */
    Service,

    /**
     * The ServiceInstance model constructor.
     * @property {module:model/ServiceInstance}
     */
    ServiceInstance,

    /**
     * The SetEnvVarValueRequest model constructor.
     * @property {module:model/SetEnvVarValueRequest}
     */
    SetEnvVarValueRequest,

    /**
     * The Site model constructor.
     * @property {module:model/Site}
     */
    Site,

    /**
     * The SiteDefaultHooksData model constructor.
     * @property {module:model/SiteDefaultHooksData}
     */
    SiteDefaultHooksData,

    /**
     * The SiteProcessingSettings model constructor.
     * @property {module:model/SiteProcessingSettings}
     */
    SiteProcessingSettings,

    /**
     * The SiteProcessingSettingsHtml model constructor.
     * @property {module:model/SiteProcessingSettingsHtml}
     */
    SiteProcessingSettingsHtml,

    /**
     * The SiteProcessingSettingsImages model constructor.
     * @property {module:model/SiteProcessingSettingsImages}
     */
    SiteProcessingSettingsImages,

    /**
     * The SiteSetup model constructor.
     * @property {module:model/SiteSetup}
     */
    SiteSetup,

    /**
     * The SniCertificate model constructor.
     * @property {module:model/SniCertificate}
     */
    SniCertificate,

    /**
     * The Snippet model constructor.
     * @property {module:model/Snippet}
     */
    Snippet,

    /**
     * The SplitTest model constructor.
     * @property {module:model/SplitTest}
     */
    SplitTest,

    /**
     * The SplitTestSetup model constructor.
     * @property {module:model/SplitTestSetup}
     */
    SplitTestSetup,

    /**
     * The Submission model constructor.
     * @property {module:model/Submission}
     */
    Submission,

    /**
     * The Ticket model constructor.
     * @property {module:model/Ticket}
     */
    Ticket,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserOnboardingProgress model constructor.
     * @property {module:model/UserOnboardingProgress}
     */
    UserOnboardingProgress,

    /**
    * The AccessTokenApi service constructor.
    * @property {module:api/AccessTokenApi}
    */
    AccessTokenApi,

    /**
    * The AccountMembershipApi service constructor.
    * @property {module:api/AccountMembershipApi}
    */
    AccountMembershipApi,

    /**
    * The AccountTypeApi service constructor.
    * @property {module:api/AccountTypeApi}
    */
    AccountTypeApi,

    /**
    * The AssetApi service constructor.
    * @property {module:api/AssetApi}
    */
    AssetApi,

    /**
    * The AssetPublicSignatureApi service constructor.
    * @property {module:api/AssetPublicSignatureApi}
    */
    AssetPublicSignatureApi,

    /**
    * The AuditLogApi service constructor.
    * @property {module:api/AuditLogApi}
    */
    AuditLogApi,

    /**
    * The BuildApi service constructor.
    * @property {module:api/BuildApi}
    */
    BuildApi,

    /**
    * The BuildHookApi service constructor.
    * @property {module:api/BuildHookApi}
    */
    BuildHookApi,

    /**
    * The BuildLogMsgApi service constructor.
    * @property {module:api/BuildLogMsgApi}
    */
    BuildLogMsgApi,

    /**
    * The DeployApi service constructor.
    * @property {module:api/DeployApi}
    */
    DeployApi,

    /**
    * The DeployKeyApi service constructor.
    * @property {module:api/DeployKeyApi}
    */
    DeployKeyApi,

    /**
    * The DeployedBranchApi service constructor.
    * @property {module:api/DeployedBranchApi}
    */
    DeployedBranchApi,

    /**
    * The DnsZoneApi service constructor.
    * @property {module:api/DnsZoneApi}
    */
    DnsZoneApi,

    /**
    * The EnvironmentVariablesApi service constructor.
    * @property {module:api/EnvironmentVariablesApi}
    */
    EnvironmentVariablesApi,

    /**
    * The FileApi service constructor.
    * @property {module:api/FileApi}
    */
    FileApi,

    /**
    * The FormApi service constructor.
    * @property {module:api/FormApi}
    */
    FormApi,

    /**
    * The FunctionApi service constructor.
    * @property {module:api/FunctionApi}
    */
    FunctionApi,

    /**
    * The HookApi service constructor.
    * @property {module:api/HookApi}
    */
    HookApi,

    /**
    * The HookTypeApi service constructor.
    * @property {module:api/HookTypeApi}
    */
    HookTypeApi,

    /**
    * The MemberApi service constructor.
    * @property {module:api/MemberApi}
    */
    MemberApi,

    /**
    * The MetadataApi service constructor.
    * @property {module:api/MetadataApi}
    */
    MetadataApi,

    /**
    * The PaymentMethodApi service constructor.
    * @property {module:api/PaymentMethodApi}
    */
    PaymentMethodApi,

    /**
    * The ServiceApi service constructor.
    * @property {module:api/ServiceApi}
    */
    ServiceApi,

    /**
    * The ServiceInstanceApi service constructor.
    * @property {module:api/ServiceInstanceApi}
    */
    ServiceInstanceApi,

    /**
    * The SiteApi service constructor.
    * @property {module:api/SiteApi}
    */
    SiteApi,

    /**
    * The SniCertificateApi service constructor.
    * @property {module:api/SniCertificateApi}
    */
    SniCertificateApi,

    /**
    * The SnippetApi service constructor.
    * @property {module:api/SnippetApi}
    */
    SnippetApi,

    /**
    * The SplitTestApi service constructor.
    * @property {module:api/SplitTestApi}
    */
    SplitTestApi,

    /**
    * The SubmissionApi service constructor.
    * @property {module:api/SubmissionApi}
    */
    SubmissionApi,

    /**
    * The TicketApi service constructor.
    * @property {module:api/TicketApi}
    */
    TicketApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi,

    /**
    * The XInternalApi service constructor.
    * @property {module:api/XInternalApi}
    */
    XInternalApi
};
