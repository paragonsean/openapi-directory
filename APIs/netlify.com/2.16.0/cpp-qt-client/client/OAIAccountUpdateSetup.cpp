/**
 * Netlify's API documentation
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * The version of the OpenAPI document: 2.16.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountUpdateSetup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountUpdateSetup::OAIAccountUpdateSetup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountUpdateSetup::OAIAccountUpdateSetup() {
    this->initializeModel();
}

OAIAccountUpdateSetup::~OAIAccountUpdateSetup() {}

void OAIAccountUpdateSetup::initializeModel() {

    m_billing_details_isSet = false;
    m_billing_details_isValid = false;

    m_billing_email_isSet = false;
    m_billing_email_isValid = false;

    m_billing_name_isSet = false;
    m_billing_name_isValid = false;

    m_extra_seats_block_isSet = false;
    m_extra_seats_block_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_slug_isSet = false;
    m_slug_isValid = false;

    m_type_id_isSet = false;
    m_type_id_isValid = false;
}

void OAIAccountUpdateSetup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountUpdateSetup::fromJsonObject(QJsonObject json) {

    m_billing_details_isValid = ::OpenAPI::fromJsonValue(m_billing_details, json[QString("billing_details")]);
    m_billing_details_isSet = !json[QString("billing_details")].isNull() && m_billing_details_isValid;

    m_billing_email_isValid = ::OpenAPI::fromJsonValue(m_billing_email, json[QString("billing_email")]);
    m_billing_email_isSet = !json[QString("billing_email")].isNull() && m_billing_email_isValid;

    m_billing_name_isValid = ::OpenAPI::fromJsonValue(m_billing_name, json[QString("billing_name")]);
    m_billing_name_isSet = !json[QString("billing_name")].isNull() && m_billing_name_isValid;

    m_extra_seats_block_isValid = ::OpenAPI::fromJsonValue(m_extra_seats_block, json[QString("extra_seats_block")]);
    m_extra_seats_block_isSet = !json[QString("extra_seats_block")].isNull() && m_extra_seats_block_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_slug_isValid = ::OpenAPI::fromJsonValue(m_slug, json[QString("slug")]);
    m_slug_isSet = !json[QString("slug")].isNull() && m_slug_isValid;

    m_type_id_isValid = ::OpenAPI::fromJsonValue(m_type_id, json[QString("type_id")]);
    m_type_id_isSet = !json[QString("type_id")].isNull() && m_type_id_isValid;
}

QString OAIAccountUpdateSetup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountUpdateSetup::asJsonObject() const {
    QJsonObject obj;
    if (m_billing_details_isSet) {
        obj.insert(QString("billing_details"), ::OpenAPI::toJsonValue(m_billing_details));
    }
    if (m_billing_email_isSet) {
        obj.insert(QString("billing_email"), ::OpenAPI::toJsonValue(m_billing_email));
    }
    if (m_billing_name_isSet) {
        obj.insert(QString("billing_name"), ::OpenAPI::toJsonValue(m_billing_name));
    }
    if (m_extra_seats_block_isSet) {
        obj.insert(QString("extra_seats_block"), ::OpenAPI::toJsonValue(m_extra_seats_block));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_slug_isSet) {
        obj.insert(QString("slug"), ::OpenAPI::toJsonValue(m_slug));
    }
    if (m_type_id_isSet) {
        obj.insert(QString("type_id"), ::OpenAPI::toJsonValue(m_type_id));
    }
    return obj;
}

QString OAIAccountUpdateSetup::getBillingDetails() const {
    return m_billing_details;
}
void OAIAccountUpdateSetup::setBillingDetails(const QString &billing_details) {
    m_billing_details = billing_details;
    m_billing_details_isSet = true;
}

bool OAIAccountUpdateSetup::is_billing_details_Set() const{
    return m_billing_details_isSet;
}

bool OAIAccountUpdateSetup::is_billing_details_Valid() const{
    return m_billing_details_isValid;
}

QString OAIAccountUpdateSetup::getBillingEmail() const {
    return m_billing_email;
}
void OAIAccountUpdateSetup::setBillingEmail(const QString &billing_email) {
    m_billing_email = billing_email;
    m_billing_email_isSet = true;
}

bool OAIAccountUpdateSetup::is_billing_email_Set() const{
    return m_billing_email_isSet;
}

bool OAIAccountUpdateSetup::is_billing_email_Valid() const{
    return m_billing_email_isValid;
}

QString OAIAccountUpdateSetup::getBillingName() const {
    return m_billing_name;
}
void OAIAccountUpdateSetup::setBillingName(const QString &billing_name) {
    m_billing_name = billing_name;
    m_billing_name_isSet = true;
}

bool OAIAccountUpdateSetup::is_billing_name_Set() const{
    return m_billing_name_isSet;
}

bool OAIAccountUpdateSetup::is_billing_name_Valid() const{
    return m_billing_name_isValid;
}

qint32 OAIAccountUpdateSetup::getExtraSeatsBlock() const {
    return m_extra_seats_block;
}
void OAIAccountUpdateSetup::setExtraSeatsBlock(const qint32 &extra_seats_block) {
    m_extra_seats_block = extra_seats_block;
    m_extra_seats_block_isSet = true;
}

bool OAIAccountUpdateSetup::is_extra_seats_block_Set() const{
    return m_extra_seats_block_isSet;
}

bool OAIAccountUpdateSetup::is_extra_seats_block_Valid() const{
    return m_extra_seats_block_isValid;
}

QString OAIAccountUpdateSetup::getName() const {
    return m_name;
}
void OAIAccountUpdateSetup::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAccountUpdateSetup::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAccountUpdateSetup::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIAccountUpdateSetup::getSlug() const {
    return m_slug;
}
void OAIAccountUpdateSetup::setSlug(const QString &slug) {
    m_slug = slug;
    m_slug_isSet = true;
}

bool OAIAccountUpdateSetup::is_slug_Set() const{
    return m_slug_isSet;
}

bool OAIAccountUpdateSetup::is_slug_Valid() const{
    return m_slug_isValid;
}

QString OAIAccountUpdateSetup::getTypeId() const {
    return m_type_id;
}
void OAIAccountUpdateSetup::setTypeId(const QString &type_id) {
    m_type_id = type_id;
    m_type_id_isSet = true;
}

bool OAIAccountUpdateSetup::is_type_id_Set() const{
    return m_type_id_isSet;
}

bool OAIAccountUpdateSetup::is_type_id_Valid() const{
    return m_type_id_isValid;
}

bool OAIAccountUpdateSetup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_billing_details_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extra_seats_block_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_slug_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountUpdateSetup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
