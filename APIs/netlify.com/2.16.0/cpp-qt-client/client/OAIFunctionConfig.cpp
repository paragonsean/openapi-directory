/**
 * Netlify's API documentation
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * The version of the OpenAPI document: 2.16.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFunctionConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFunctionConfig::OAIFunctionConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFunctionConfig::OAIFunctionConfig() {
    this->initializeModel();
}

OAIFunctionConfig::~OAIFunctionConfig() {}

void OAIFunctionConfig::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_generator_isSet = false;
    m_generator_isValid = false;
}

void OAIFunctionConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFunctionConfig::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("display_name")]);
    m_display_name_isSet = !json[QString("display_name")].isNull() && m_display_name_isValid;

    m_generator_isValid = ::OpenAPI::fromJsonValue(m_generator, json[QString("generator")]);
    m_generator_isSet = !json[QString("generator")].isNull() && m_generator_isValid;
}

QString OAIFunctionConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFunctionConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("display_name"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_generator_isSet) {
        obj.insert(QString("generator"), ::OpenAPI::toJsonValue(m_generator));
    }
    return obj;
}

QString OAIFunctionConfig::getDisplayName() const {
    return m_display_name;
}
void OAIFunctionConfig::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIFunctionConfig::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIFunctionConfig::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIFunctionConfig::getGenerator() const {
    return m_generator;
}
void OAIFunctionConfig::setGenerator(const QString &generator) {
    m_generator = generator;
    m_generator_isSet = true;
}

bool OAIFunctionConfig::is_generator_Set() const{
    return m_generator_isSet;
}

bool OAIFunctionConfig::is_generator_Valid() const{
    return m_generator_isValid;
}

bool OAIFunctionConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_generator_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFunctionConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
