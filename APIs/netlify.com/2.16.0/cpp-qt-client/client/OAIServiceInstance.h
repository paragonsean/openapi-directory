/**
 * Netlify's API documentation
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * The version of the OpenAPI document: 2.16.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServiceInstance.h
 *
 * 
 */

#ifndef OAIServiceInstance_H
#define OAIServiceInstance_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServiceInstance : public OAIObject {
public:
    OAIServiceInstance();
    OAIServiceInstance(QString json);
    ~OAIServiceInstance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthUrl() const;
    void setAuthUrl(const QString &auth_url);
    bool is_auth_url_Set() const;
    bool is_auth_url_Valid() const;

    OAIObject getConfig() const;
    void setConfig(const OAIObject &config);
    bool is_config_Set() const;
    bool is_config_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAIObject getEnv() const;
    void setEnv(const OAIObject &env);
    bool is_env_Set() const;
    bool is_env_Valid() const;

    OAIObject getExternalAttributes() const;
    void setExternalAttributes(const OAIObject &external_attributes);
    bool is_external_attributes_Set() const;
    bool is_external_attributes_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getServiceName() const;
    void setServiceName(const QString &service_name);
    bool is_service_name_Set() const;
    bool is_service_name_Valid() const;

    QString getServicePath() const;
    void setServicePath(const QString &service_path);
    bool is_service_path_Set() const;
    bool is_service_path_Valid() const;

    QString getServiceSlug() const;
    void setServiceSlug(const QString &service_slug);
    bool is_service_slug_Set() const;
    bool is_service_slug_Valid() const;

    QList<OAIObject> getSnippets() const;
    void setSnippets(const QList<OAIObject> &snippets);
    bool is_snippets_Set() const;
    bool is_snippets_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_auth_url;
    bool m_auth_url_isSet;
    bool m_auth_url_isValid;

    OAIObject m_config;
    bool m_config_isSet;
    bool m_config_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAIObject m_env;
    bool m_env_isSet;
    bool m_env_isValid;

    OAIObject m_external_attributes;
    bool m_external_attributes_isSet;
    bool m_external_attributes_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_service_name;
    bool m_service_name_isSet;
    bool m_service_name_isValid;

    QString m_service_path;
    bool m_service_path_isSet;
    bool m_service_path_isValid;

    QString m_service_slug;
    bool m_service_slug_isSet;
    bool m_service_slug_isValid;

    QList<OAIObject> m_snippets;
    bool m_snippets_isSet;
    bool m_snippets_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServiceInstance)

#endif // OAIServiceInstance_H
