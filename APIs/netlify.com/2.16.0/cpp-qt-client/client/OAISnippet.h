/**
 * Netlify's API documentation
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * The version of the OpenAPI document: 2.16.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISnippet.h
 *
 * 
 */

#ifndef OAISnippet_H
#define OAISnippet_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISnippet : public OAIObject {
public:
    OAISnippet();
    OAISnippet(QString json);
    ~OAISnippet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGeneral() const;
    void setGeneral(const QString &general);
    bool is_general_Set() const;
    bool is_general_Valid() const;

    QString getGeneralPosition() const;
    void setGeneralPosition(const QString &general_position);
    bool is_general_position_Set() const;
    bool is_general_position_Valid() const;

    QString getGoal() const;
    void setGoal(const QString &goal);
    bool is_goal_Set() const;
    bool is_goal_Valid() const;

    QString getGoalPosition() const;
    void setGoalPosition(const QString &goal_position);
    bool is_goal_position_Set() const;
    bool is_goal_position_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getSiteId() const;
    void setSiteId(const QString &site_id);
    bool is_site_id_Set() const;
    bool is_site_id_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_general;
    bool m_general_isSet;
    bool m_general_isValid;

    QString m_general_position;
    bool m_general_position_isSet;
    bool m_general_position_isValid;

    QString m_goal;
    bool m_goal_isSet;
    bool m_goal_isValid;

    QString m_goal_position;
    bool m_goal_position_isSet;
    bool m_goal_position_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_site_id;
    bool m_site_id_isSet;
    bool m_site_id_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISnippet)

#endif // OAISnippet_H
