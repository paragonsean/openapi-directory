/**
 * Netlify's API documentation
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * The version of the OpenAPI document: 2.16.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPluginRun.h
 *
 * 
 */

#ifndef OAIPluginRun_H
#define OAIPluginRun_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPluginRun : public OAIObject {
public:
    OAIPluginRun();
    OAIPluginRun(QString json);
    ~OAIPluginRun() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPackage() const;
    void setPackage(const QString &package);
    bool is_package_Set() const;
    bool is_package_Valid() const;

    QString getReportingEvent() const;
    void setReportingEvent(const QString &reporting_event);
    bool is_reporting_event_Set() const;
    bool is_reporting_event_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getSummary() const;
    void setSummary(const QString &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QString getDeployId() const;
    void setDeployId(const QString &deploy_id);
    bool is_deploy_id_Set() const;
    bool is_deploy_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_package;
    bool m_package_isSet;
    bool m_package_isValid;

    QString m_reporting_event;
    bool m_reporting_event_isSet;
    bool m_reporting_event_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QString m_deploy_id;
    bool m_deploy_id_isSet;
    bool m_deploy_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPluginRun)

#endif // OAIPluginRun_H
