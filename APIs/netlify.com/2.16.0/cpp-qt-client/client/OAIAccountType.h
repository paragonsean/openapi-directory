/**
 * Netlify's API documentation
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * The version of the OpenAPI document: 2.16.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccountType.h
 *
 * 
 */

#ifndef OAIAccountType_H
#define OAIAccountType_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAccountType : public OAIObject {
public:
    OAIAccountType();
    OAIAccountType(QString json);
    ~OAIAccountType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getCapabilities() const;
    void setCapabilities(const OAIObject &capabilities);
    bool is_capabilities_Set() const;
    bool is_capabilities_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getMonthlyDollarPrice() const;
    void setMonthlyDollarPrice(const qint32 &monthly_dollar_price);
    bool is_monthly_dollar_price_Set() const;
    bool is_monthly_dollar_price_Valid() const;

    qint32 getMonthlySeatsAddonDollarPrice() const;
    void setMonthlySeatsAddonDollarPrice(const qint32 &monthly_seats_addon_dollar_price);
    bool is_monthly_seats_addon_dollar_price_Set() const;
    bool is_monthly_seats_addon_dollar_price_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getYearlyDollarPrice() const;
    void setYearlyDollarPrice(const qint32 &yearly_dollar_price);
    bool is_yearly_dollar_price_Set() const;
    bool is_yearly_dollar_price_Valid() const;

    qint32 getYearlySeatsAddonDollarPrice() const;
    void setYearlySeatsAddonDollarPrice(const qint32 &yearly_seats_addon_dollar_price);
    bool is_yearly_seats_addon_dollar_price_Set() const;
    bool is_yearly_seats_addon_dollar_price_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_capabilities;
    bool m_capabilities_isSet;
    bool m_capabilities_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_monthly_dollar_price;
    bool m_monthly_dollar_price_isSet;
    bool m_monthly_dollar_price_isValid;

    qint32 m_monthly_seats_addon_dollar_price;
    bool m_monthly_seats_addon_dollar_price_isSet;
    bool m_monthly_seats_addon_dollar_price_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_yearly_dollar_price;
    bool m_yearly_dollar_price_isSet;
    bool m_yearly_dollar_price_isValid;

    qint32 m_yearly_seats_addon_dollar_price;
    bool m_yearly_seats_addon_dollar_price_isSet;
    bool m_yearly_seats_addon_dollar_price_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccountType)

#endif // OAIAccountType_H
