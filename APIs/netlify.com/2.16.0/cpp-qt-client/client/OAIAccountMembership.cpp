/**
 * Netlify's API documentation
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * The version of the OpenAPI document: 2.16.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountMembership.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountMembership::OAIAccountMembership(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountMembership::OAIAccountMembership() {
    this->initializeModel();
}

OAIAccountMembership::~OAIAccountMembership() {}

void OAIAccountMembership::initializeModel() {

    m_billing_details_isSet = false;
    m_billing_details_isValid = false;

    m_billing_email_isSet = false;
    m_billing_email_isValid = false;

    m_billing_name_isSet = false;
    m_billing_name_isValid = false;

    m_billing_period_isSet = false;
    m_billing_period_isValid = false;

    m_capabilities_isSet = false;
    m_capabilities_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_owner_ids_isSet = false;
    m_owner_ids_isValid = false;

    m_payment_method_id_isSet = false;
    m_payment_method_id_isValid = false;

    m_roles_allowed_isSet = false;
    m_roles_allowed_isValid = false;

    m_slug_isSet = false;
    m_slug_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_type_id_isSet = false;
    m_type_id_isValid = false;

    m_type_name_isSet = false;
    m_type_name_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAIAccountMembership::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountMembership::fromJsonObject(QJsonObject json) {

    m_billing_details_isValid = ::OpenAPI::fromJsonValue(m_billing_details, json[QString("billing_details")]);
    m_billing_details_isSet = !json[QString("billing_details")].isNull() && m_billing_details_isValid;

    m_billing_email_isValid = ::OpenAPI::fromJsonValue(m_billing_email, json[QString("billing_email")]);
    m_billing_email_isSet = !json[QString("billing_email")].isNull() && m_billing_email_isValid;

    m_billing_name_isValid = ::OpenAPI::fromJsonValue(m_billing_name, json[QString("billing_name")]);
    m_billing_name_isSet = !json[QString("billing_name")].isNull() && m_billing_name_isValid;

    m_billing_period_isValid = ::OpenAPI::fromJsonValue(m_billing_period, json[QString("billing_period")]);
    m_billing_period_isSet = !json[QString("billing_period")].isNull() && m_billing_period_isValid;

    m_capabilities_isValid = ::OpenAPI::fromJsonValue(m_capabilities, json[QString("capabilities")]);
    m_capabilities_isSet = !json[QString("capabilities")].isNull() && m_capabilities_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_owner_ids_isValid = ::OpenAPI::fromJsonValue(m_owner_ids, json[QString("owner_ids")]);
    m_owner_ids_isSet = !json[QString("owner_ids")].isNull() && m_owner_ids_isValid;

    m_payment_method_id_isValid = ::OpenAPI::fromJsonValue(m_payment_method_id, json[QString("payment_method_id")]);
    m_payment_method_id_isSet = !json[QString("payment_method_id")].isNull() && m_payment_method_id_isValid;

    m_roles_allowed_isValid = ::OpenAPI::fromJsonValue(m_roles_allowed, json[QString("roles_allowed")]);
    m_roles_allowed_isSet = !json[QString("roles_allowed")].isNull() && m_roles_allowed_isValid;

    m_slug_isValid = ::OpenAPI::fromJsonValue(m_slug, json[QString("slug")]);
    m_slug_isSet = !json[QString("slug")].isNull() && m_slug_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_type_id_isValid = ::OpenAPI::fromJsonValue(m_type_id, json[QString("type_id")]);
    m_type_id_isSet = !json[QString("type_id")].isNull() && m_type_id_isValid;

    m_type_name_isValid = ::OpenAPI::fromJsonValue(m_type_name, json[QString("type_name")]);
    m_type_name_isSet = !json[QString("type_name")].isNull() && m_type_name_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;
}

QString OAIAccountMembership::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountMembership::asJsonObject() const {
    QJsonObject obj;
    if (m_billing_details_isSet) {
        obj.insert(QString("billing_details"), ::OpenAPI::toJsonValue(m_billing_details));
    }
    if (m_billing_email_isSet) {
        obj.insert(QString("billing_email"), ::OpenAPI::toJsonValue(m_billing_email));
    }
    if (m_billing_name_isSet) {
        obj.insert(QString("billing_name"), ::OpenAPI::toJsonValue(m_billing_name));
    }
    if (m_billing_period_isSet) {
        obj.insert(QString("billing_period"), ::OpenAPI::toJsonValue(m_billing_period));
    }
    if (m_capabilities.isSet()) {
        obj.insert(QString("capabilities"), ::OpenAPI::toJsonValue(m_capabilities));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_owner_ids.size() > 0) {
        obj.insert(QString("owner_ids"), ::OpenAPI::toJsonValue(m_owner_ids));
    }
    if (m_payment_method_id_isSet) {
        obj.insert(QString("payment_method_id"), ::OpenAPI::toJsonValue(m_payment_method_id));
    }
    if (m_roles_allowed.size() > 0) {
        obj.insert(QString("roles_allowed"), ::OpenAPI::toJsonValue(m_roles_allowed));
    }
    if (m_slug_isSet) {
        obj.insert(QString("slug"), ::OpenAPI::toJsonValue(m_slug));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_type_id_isSet) {
        obj.insert(QString("type_id"), ::OpenAPI::toJsonValue(m_type_id));
    }
    if (m_type_name_isSet) {
        obj.insert(QString("type_name"), ::OpenAPI::toJsonValue(m_type_name));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    return obj;
}

QString OAIAccountMembership::getBillingDetails() const {
    return m_billing_details;
}
void OAIAccountMembership::setBillingDetails(const QString &billing_details) {
    m_billing_details = billing_details;
    m_billing_details_isSet = true;
}

bool OAIAccountMembership::is_billing_details_Set() const{
    return m_billing_details_isSet;
}

bool OAIAccountMembership::is_billing_details_Valid() const{
    return m_billing_details_isValid;
}

QString OAIAccountMembership::getBillingEmail() const {
    return m_billing_email;
}
void OAIAccountMembership::setBillingEmail(const QString &billing_email) {
    m_billing_email = billing_email;
    m_billing_email_isSet = true;
}

bool OAIAccountMembership::is_billing_email_Set() const{
    return m_billing_email_isSet;
}

bool OAIAccountMembership::is_billing_email_Valid() const{
    return m_billing_email_isValid;
}

QString OAIAccountMembership::getBillingName() const {
    return m_billing_name;
}
void OAIAccountMembership::setBillingName(const QString &billing_name) {
    m_billing_name = billing_name;
    m_billing_name_isSet = true;
}

bool OAIAccountMembership::is_billing_name_Set() const{
    return m_billing_name_isSet;
}

bool OAIAccountMembership::is_billing_name_Valid() const{
    return m_billing_name_isValid;
}

QString OAIAccountMembership::getBillingPeriod() const {
    return m_billing_period;
}
void OAIAccountMembership::setBillingPeriod(const QString &billing_period) {
    m_billing_period = billing_period;
    m_billing_period_isSet = true;
}

bool OAIAccountMembership::is_billing_period_Set() const{
    return m_billing_period_isSet;
}

bool OAIAccountMembership::is_billing_period_Valid() const{
    return m_billing_period_isValid;
}

OAIAccountMembership_capabilities OAIAccountMembership::getCapabilities() const {
    return m_capabilities;
}
void OAIAccountMembership::setCapabilities(const OAIAccountMembership_capabilities &capabilities) {
    m_capabilities = capabilities;
    m_capabilities_isSet = true;
}

bool OAIAccountMembership::is_capabilities_Set() const{
    return m_capabilities_isSet;
}

bool OAIAccountMembership::is_capabilities_Valid() const{
    return m_capabilities_isValid;
}

QString OAIAccountMembership::getCreatedAt() const {
    return m_created_at;
}
void OAIAccountMembership::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIAccountMembership::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIAccountMembership::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIAccountMembership::getId() const {
    return m_id;
}
void OAIAccountMembership::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAccountMembership::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAccountMembership::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIAccountMembership::getName() const {
    return m_name;
}
void OAIAccountMembership::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAccountMembership::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAccountMembership::is_name_Valid() const{
    return m_name_isValid;
}

QList<QString> OAIAccountMembership::getOwnerIds() const {
    return m_owner_ids;
}
void OAIAccountMembership::setOwnerIds(const QList<QString> &owner_ids) {
    m_owner_ids = owner_ids;
    m_owner_ids_isSet = true;
}

bool OAIAccountMembership::is_owner_ids_Set() const{
    return m_owner_ids_isSet;
}

bool OAIAccountMembership::is_owner_ids_Valid() const{
    return m_owner_ids_isValid;
}

QString OAIAccountMembership::getPaymentMethodId() const {
    return m_payment_method_id;
}
void OAIAccountMembership::setPaymentMethodId(const QString &payment_method_id) {
    m_payment_method_id = payment_method_id;
    m_payment_method_id_isSet = true;
}

bool OAIAccountMembership::is_payment_method_id_Set() const{
    return m_payment_method_id_isSet;
}

bool OAIAccountMembership::is_payment_method_id_Valid() const{
    return m_payment_method_id_isValid;
}

QList<QString> OAIAccountMembership::getRolesAllowed() const {
    return m_roles_allowed;
}
void OAIAccountMembership::setRolesAllowed(const QList<QString> &roles_allowed) {
    m_roles_allowed = roles_allowed;
    m_roles_allowed_isSet = true;
}

bool OAIAccountMembership::is_roles_allowed_Set() const{
    return m_roles_allowed_isSet;
}

bool OAIAccountMembership::is_roles_allowed_Valid() const{
    return m_roles_allowed_isValid;
}

QString OAIAccountMembership::getSlug() const {
    return m_slug;
}
void OAIAccountMembership::setSlug(const QString &slug) {
    m_slug = slug;
    m_slug_isSet = true;
}

bool OAIAccountMembership::is_slug_Set() const{
    return m_slug_isSet;
}

bool OAIAccountMembership::is_slug_Valid() const{
    return m_slug_isValid;
}

QString OAIAccountMembership::getType() const {
    return m_type;
}
void OAIAccountMembership::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIAccountMembership::is_type_Set() const{
    return m_type_isSet;
}

bool OAIAccountMembership::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIAccountMembership::getTypeId() const {
    return m_type_id;
}
void OAIAccountMembership::setTypeId(const QString &type_id) {
    m_type_id = type_id;
    m_type_id_isSet = true;
}

bool OAIAccountMembership::is_type_id_Set() const{
    return m_type_id_isSet;
}

bool OAIAccountMembership::is_type_id_Valid() const{
    return m_type_id_isValid;
}

QString OAIAccountMembership::getTypeName() const {
    return m_type_name;
}
void OAIAccountMembership::setTypeName(const QString &type_name) {
    m_type_name = type_name;
    m_type_name_isSet = true;
}

bool OAIAccountMembership::is_type_name_Set() const{
    return m_type_name_isSet;
}

bool OAIAccountMembership::is_type_name_Valid() const{
    return m_type_name_isValid;
}

QString OAIAccountMembership::getUpdatedAt() const {
    return m_updated_at;
}
void OAIAccountMembership::setUpdatedAt(const QString &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAIAccountMembership::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAIAccountMembership::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAIAccountMembership::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_billing_details_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_capabilities.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_method_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_roles_allowed.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_slug_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountMembership::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
