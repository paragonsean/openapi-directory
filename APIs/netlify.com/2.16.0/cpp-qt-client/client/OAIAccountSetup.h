/**
 * Netlify's API documentation
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * The version of the OpenAPI document: 2.16.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccountSetup.h
 *
 * 
 */

#ifndef OAIAccountSetup_H
#define OAIAccountSetup_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAccountSetup : public OAIObject {
public:
    OAIAccountSetup();
    OAIAccountSetup(QString json);
    ~OAIAccountSetup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getExtraSeatsBlock() const;
    void setExtraSeatsBlock(const qint32 &extra_seats_block);
    bool is_extra_seats_block_Set() const;
    bool is_extra_seats_block_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPaymentMethodId() const;
    void setPaymentMethodId(const QString &payment_method_id);
    bool is_payment_method_id_Set() const;
    bool is_payment_method_id_Valid() const;

    QString getPeriod() const;
    void setPeriod(const QString &period);
    bool is_period_Set() const;
    bool is_period_Valid() const;

    QString getTypeId() const;
    void setTypeId(const QString &type_id);
    bool is_type_id_Set() const;
    bool is_type_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_extra_seats_block;
    bool m_extra_seats_block_isSet;
    bool m_extra_seats_block_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_payment_method_id;
    bool m_payment_method_id_isSet;
    bool m_payment_method_id_isValid;

    QString m_period;
    bool m_period_isSet;
    bool m_period_isValid;

    QString m_type_id;
    bool m_type_id_isSet;
    bool m_type_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccountSetup)

#endif // OAIAccountSetup_H
