/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnumBackgroundCheckFrequency from './EnumBackgroundCheckFrequency';
import EnumBackgroundCheckState from './EnumBackgroundCheckState';
import EnumBackgroundCheckType from './EnumBackgroundCheckType';
import KeyValuePairObject from './KeyValuePairObject';

/**
 * The BackgroundCheckResultObject model module.
 * @module model/BackgroundCheckResultObject
 * @version 1.5.3
 */
class BackgroundCheckResultObject {
    /**
     * Constructs a new <code>BackgroundCheckResultObject</code>.
     * Contains the details of a background check for a given entity. Background checks include Politically Exposed Person (PEP), sanctions lists, watchlists and adverse media.
     * @alias module:model/BackgroundCheckResultObject
     */
    constructor() { 
        
        BackgroundCheckResultObject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BackgroundCheckResultObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackgroundCheckResultObject} obj Optional instance to populate.
     * @return {module:model/BackgroundCheckResultObject} The populated <code>BackgroundCheckResultObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackgroundCheckResultObject();

            if (data.hasOwnProperty('backgroundCheckType')) {
                obj['backgroundCheckType'] = EnumBackgroundCheckType.constructFromObject(data['backgroundCheckType']);
            }
            if (data.hasOwnProperty('checkDetails')) {
                obj['checkDetails'] = ApiClient.convertToType(data['checkDetails'], [KeyValuePairObject]);
            }
            if (data.hasOwnProperty('checkFrequency')) {
                obj['checkFrequency'] = EnumBackgroundCheckFrequency.constructFromObject(data['checkFrequency']);
            }
            if (data.hasOwnProperty('checkId')) {
                obj['checkId'] = ApiClient.convertToType(data['checkId'], 'String');
            }
            if (data.hasOwnProperty('checkPerformedBy')) {
                obj['checkPerformedBy'] = ApiClient.convertToType(data['checkPerformedBy'], 'String');
            }
            if (data.hasOwnProperty('checkSource')) {
                obj['checkSource'] = ApiClient.convertToType(data['checkSource'], 'String');
            }
            if (data.hasOwnProperty('confidenceLevel')) {
                obj['confidenceLevel'] = ApiClient.convertToType(data['confidenceLevel'], 'Number');
            }
            if (data.hasOwnProperty('currentState')) {
                obj['currentState'] = EnumBackgroundCheckState.constructFromObject(data['currentState']);
            }
            if (data.hasOwnProperty('firstCheckDate')) {
                obj['firstCheckDate'] = ApiClient.convertToType(data['firstCheckDate'], 'Date');
            }
            if (data.hasOwnProperty('latestCheckDate')) {
                obj['latestCheckDate'] = ApiClient.convertToType(data['latestCheckDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackgroundCheckResultObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackgroundCheckResultObject</code>.
     */
    static validateJSON(data) {
        if (data['checkDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['checkDetails'])) {
                throw new Error("Expected the field `checkDetails` to be an array in the JSON data but got " + data['checkDetails']);
            }
            // validate the optional field `checkDetails` (array)
            for (const item of data['checkDetails']) {
                KeyValuePairObject.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['checkId'] && !(typeof data['checkId'] === 'string' || data['checkId'] instanceof String)) {
            throw new Error("Expected the field `checkId` to be a primitive type in the JSON string but got " + data['checkId']);
        }
        // ensure the json data is a string
        if (data['checkPerformedBy'] && !(typeof data['checkPerformedBy'] === 'string' || data['checkPerformedBy'] instanceof String)) {
            throw new Error("Expected the field `checkPerformedBy` to be a primitive type in the JSON string but got " + data['checkPerformedBy']);
        }
        // ensure the json data is a string
        if (data['checkSource'] && !(typeof data['checkSource'] === 'string' || data['checkSource'] instanceof String)) {
            throw new Error("Expected the field `checkSource` to be a primitive type in the JSON string but got " + data['checkSource']);
        }

        return true;
    }


}



/**
 * @member {module:model/EnumBackgroundCheckType} backgroundCheckType
 */
BackgroundCheckResultObject.prototype['backgroundCheckType'] = undefined;

/**
 * Any additional notes that may relate to the state. Free form notes that may contain JSON blobs needing further interpretation.
 * @member {Array.<module:model/KeyValuePairObject>} checkDetails
 */
BackgroundCheckResultObject.prototype['checkDetails'] = undefined;

/**
 * @member {module:model/EnumBackgroundCheckFrequency} checkFrequency
 */
BackgroundCheckResultObject.prototype['checkFrequency'] = undefined;

/**
 * Unique identifier for every check/comparison/verification. Make sure you reference this ID whenever updating check details. This ID will also be used when pushing check results back to you.
 * @member {String} checkId
 */
BackgroundCheckResultObject.prototype['checkId'] = undefined;

/**
 * Service provider that performed the check. Basically the name of the connector, without the leading con_ 
 * @member {String} checkPerformedBy
 */
BackgroundCheckResultObject.prototype['checkPerformedBy'] = undefined;

/**
 * Code that can be used to determine the underlying nature or data source of the checks performed. This may or may not be known by the connector, or may be a provider specific type (e.g. type \"O\") 
 * @member {String} checkSource
 */
BackgroundCheckResultObject.prototype['checkSource'] = undefined;

/**
 * Confidence in the current results on a scale of 0 (none) to 100 (as certain as possible). Whole integers only.
 * @member {Number} confidenceLevel
 */
BackgroundCheckResultObject.prototype['confidenceLevel'] = undefined;

/**
 * @member {module:model/EnumBackgroundCheckState} currentState
 */
BackgroundCheckResultObject.prototype['currentState'] = undefined;

/**
 * The date and time the item was first checked.
 * @member {Date} firstCheckDate
 */
BackgroundCheckResultObject.prototype['firstCheckDate'] = undefined;

/**
 * The date and time the item was last checked to provide this result.
 * @member {Date} latestCheckDate
 */
BackgroundCheckResultObject.prototype['latestCheckDate'] = undefined;






export default BackgroundCheckResultObject;

