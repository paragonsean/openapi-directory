/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class EnumMIMEType.
* @enum {}
* @readonly
*/
export default class EnumMIMEType {
    
        /**
         * value: "image/jpeg"
         * @const
         */
        "image/jpeg" = "image/jpeg";

    
        /**
         * value: "image/png"
         * @const
         */
        "image/png" = "image/png";

    
        /**
         * value: "image/gif"
         * @const
         */
        "image/gif" = "image/gif";

    
        /**
         * value: "image/webp"
         * @const
         */
        "image/webp" = "image/webp";

    
        /**
         * value: "image/tiff"
         * @const
         */
        "image/tiff" = "image/tiff";

    
        /**
         * value: "image/bmp"
         * @const
         */
        "image/bmp" = "image/bmp";

    
        /**
         * value: "application/zip"
         * @const
         */
        "application/zip" = "application/zip";

    
        /**
         * value: "application/x-tar"
         * @const
         */
        "application/x-tar" = "application/x-tar";

    
        /**
         * value: "application/x-rar-compressed"
         * @const
         */
        "application/x-rar-compressed" = "application/x-rar-compressed";

    
        /**
         * value: "application/gzip"
         * @const
         */
        "application/gzip" = "application/gzip";

    
        /**
         * value: "application/x-bzip2"
         * @const
         */
        "application/x-bzip2" = "application/x-bzip2";

    
        /**
         * value: "application/x-7z-compressed"
         * @const
         */
        "application/x-7z-compressed" = "application/x-7z-compressed";

    
        /**
         * value: "application/pdf"
         * @const
         */
        "application/pdf" = "application/pdf";

    
        /**
         * value: "application/rtf"
         * @const
         */
        "application/rtf" = "application/rtf";

    
        /**
         * value: "application/postscript"
         * @const
         */
        "application/postscript" = "application/postscript";

    
        /**
         * value: "application/json"
         * @const
         */
        "application/json" = "application/json";

    
        /**
         * value: "audio/mpeg"
         * @const
         */
        "audio/mpeg" = "audio/mpeg";

    
        /**
         * value: "audio/m4a"
         * @const
         */
        "audio/m4a" = "audio/m4a";

    
        /**
         * value: "audio/x-wav"
         * @const
         */
        "audio/x-wav" = "audio/x-wav";

    
        /**
         * value: "audio/amr"
         * @const
         */
        "audio/amr" = "audio/amr";

    
        /**
         * value: "application/msword"
         * @const
         */
        "application/msword" = "application/msword";

    
        /**
         * value: "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
         * @const
         */
        "application/vnd.openxmlformats-officedocument.wordprocessingml.document" = "application/vnd.openxmlformats-officedocument.wordprocessingml.document";

    
        /**
         * value: "application/vnd.ms-excel"
         * @const
         */
        "application/vnd.ms-excel" = "application/vnd.ms-excel";

    
        /**
         * value: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
         * @const
         */
        "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";

    
        /**
         * value: "application/vnd.ms-powerpoint"
         * @const
         */
        "application/vnd.ms-powerpoint" = "application/vnd.ms-powerpoint";

    
        /**
         * value: "application/vnd.openxmlformats-officedocument.presentationml.presentation"
         * @const
         */
        "application/vnd.openxmlformats-officedocument.presentationml.presentation" = "application/vnd.openxmlformats-officedocument.presentationml.presentation";

    
        /**
         * value: "video/mp4"
         * @const
         */
        "video/mp4" = "video/mp4";

    
        /**
         * value: "video/webm"
         * @const
         */
        "video/webm" = "video/webm";

    
        /**
         * value: "video/quicktime"
         * @const
         */
        "video/quicktime" = "video/quicktime";

    
        /**
         * value: "video/x-msvideo"
         * @const
         */
        "video/x-msvideo" = "video/x-msvideo";

    
        /**
         * value: "video/x-ms-wmv"
         * @const
         */
        "video/x-ms-wmv" = "video/x-ms-wmv";

    
        /**
         * value: "video/mpeg"
         * @const
         */
        "video/mpeg" = "video/mpeg";

    

    /**
    * Returns a <code>EnumMIMEType</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/EnumMIMEType} The enum <code>EnumMIMEType</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

