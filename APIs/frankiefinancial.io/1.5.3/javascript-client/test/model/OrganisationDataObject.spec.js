/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FrankieFinancialApi);
  }
}(this, function(expect, FrankieFinancialApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FrankieFinancialApi.OrganisationDataObject();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrganisationDataObject', function() {
    it('should create an instance of OrganisationDataObject', function() {
      // uncomment below and update the code to test OrganisationDataObject
      //var instance = new FrankieFinancialApi.OrganisationDataObject();
      //expect(instance).to.be.a(FrankieFinancialApi.OrganisationDataObject);
    });

    it('should have the property adverseCreditDataPresent (base name: "adverseCreditDataPresent")', function() {
      // uncomment below and update the code to test the property adverseCreditDataPresent
      //var instance = new FrankieFinancialApi.OrganisationDataObject();
      //expect(instance).to.be();
    });

    it('should have the property _class (base name: "class")', function() {
      // uncomment below and update the code to test the property _class
      //var instance = new FrankieFinancialApi.OrganisationDataObject();
      //expect(instance).to.be();
    });

    it('should have the property disclosingEntityIndicator (base name: "disclosingEntityIndicator")', function() {
      // uncomment below and update the code to test the property disclosingEntityIndicator
      //var instance = new FrankieFinancialApi.OrganisationDataObject();
      //expect(instance).to.be();
    });

    it('should have the property includesNonBeneficiallyHeld (base name: "includesNonBeneficiallyHeld")', function() {
      // uncomment below and update the code to test the property includesNonBeneficiallyHeld
      //var instance = new FrankieFinancialApi.OrganisationDataObject();
      //expect(instance).to.be();
    });

    it('should have the property kycCustomerType (base name: "kycCustomerType")', function() {
      // uncomment below and update the code to test the property kycCustomerType
      //var instance = new FrankieFinancialApi.OrganisationDataObject();
      //expect(instance).to.be();
    });

    it('should have the property lastCheckDate (base name: "lastCheckDate")', function() {
      // uncomment below and update the code to test the property lastCheckDate
      //var instance = new FrankieFinancialApi.OrganisationDataObject();
      //expect(instance).to.be();
    });

    it('should have the property ownershipResolved (base name: "ownershipResolved")', function() {
      // uncomment below and update the code to test the property ownershipResolved
      //var instance = new FrankieFinancialApi.OrganisationDataObject();
      //expect(instance).to.be();
    });

    it('should have the property registeredName (base name: "registeredName")', function() {
      // uncomment below and update the code to test the property registeredName
      //var instance = new FrankieFinancialApi.OrganisationDataObject();
      //expect(instance).to.be();
    });

    it('should have the property registration (base name: "registration")', function() {
      // uncomment below and update the code to test the property registration
      //var instance = new FrankieFinancialApi.OrganisationDataObject();
      //expect(instance).to.be();
    });

    it('should have the property shareStructure (base name: "shareStructure")', function() {
      // uncomment below and update the code to test the property shareStructure
      //var instance = new FrankieFinancialApi.OrganisationDataObject();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "startDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instance = new FrankieFinancialApi.OrganisationDataObject();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new FrankieFinancialApi.OrganisationDataObject();
      //expect(instance).to.be();
    });

    it('should have the property subclass (base name: "subclass")', function() {
      // uncomment below and update the code to test the property subclass
      //var instance = new FrankieFinancialApi.OrganisationDataObject();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new FrankieFinancialApi.OrganisationDataObject();
      //expect(instance).to.be();
    });

  });

}));
