/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FrankieFinancialApi);
  }
}(this, function(expect, FrankieFinancialApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FrankieFinancialApi.CompanyProfileDTO();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CompanyProfileDTO', function() {
    it('should create an instance of CompanyProfileDTO', function() {
      // uncomment below and update the code to test CompanyProfileDTO
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be.a(FrankieFinancialApi.CompanyProfileDTO);
    });

    it('should have the property activity (base name: "Activity")', function() {
      // uncomment below and update the code to test the property activity
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property activityDeclaration (base name: "ActivityDeclaration")', function() {
      // uncomment below and update the code to test the property activityDeclaration
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property addresses (base name: "Addresses")', function() {
      // uncomment below and update the code to test the property addresses
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property agentAddress (base name: "AgentAddress")', function() {
      // uncomment below and update the code to test the property agentAddress
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property agentName (base name: "AgentName")', function() {
      // uncomment below and update the code to test the property agentName
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property aliases (base name: "Aliases")', function() {
      // uncomment below and update the code to test the property aliases
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property appointmentDateOfOfficial (base name: "AppointmentDateOfOfficial")', function() {
      // uncomment below and update the code to test the property appointmentDateOfOfficial
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property capital (base name: "Capital")', function() {
      // uncomment below and update the code to test the property capital
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property code (base name: "Code")', function() {
      // uncomment below and update the code to test the property code
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property companyNameInEnglish (base name: "CompanyNameInEnglish")', function() {
      // uncomment below and update the code to test the property companyNameInEnglish
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property date (base name: "Date")', function() {
      // uncomment below and update the code to test the property date
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "Email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property faxNumber (base name: "FaxNumber")', function() {
      // uncomment below and update the code to test the property faxNumber
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property fiscalCode (base name: "FiscalCode")', function() {
      // uncomment below and update the code to test the property fiscalCode
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property foundationDate (base name: "FoundationDate")', function() {
      // uncomment below and update the code to test the property foundationDate
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property functions (base name: "Functions")', function() {
      // uncomment below and update the code to test the property functions
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property headquarters (base name: "Headquarters")', function() {
      // uncomment below and update the code to test the property headquarters
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property keyFigures (base name: "KeyFigures")', function() {
      // uncomment below and update the code to test the property keyFigures
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property lastAnnualAccountDate (base name: "LastAnnualAccountDate")', function() {
      // uncomment below and update the code to test the property lastAnnualAccountDate
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property legalForm (base name: "LegalForm")', function() {
      // uncomment below and update the code to test the property legalForm
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property legalFormDeclaration (base name: "LegalFormDeclaration")', function() {
      // uncomment below and update the code to test the property legalFormDeclaration
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property legalFormDetails (base name: "LegalFormDetails")', function() {
      // uncomment below and update the code to test the property legalFormDetails
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property legalStatus (base name: "LegalStatus")', function() {
      // uncomment below and update the code to test the property legalStatus
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property mailingAddress (base name: "MailingAddress")', function() {
      // uncomment below and update the code to test the property mailingAddress
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property official (base name: "Official")', function() {
      // uncomment below and update the code to test the property official
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property registrationAuthority (base name: "RegistrationAuthority")', function() {
      // uncomment below and update the code to test the property registrationAuthority
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property registrationAuthorityCode (base name: "RegistrationAuthorityCode")', function() {
      // uncomment below and update the code to test the property registrationAuthorityCode
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property registrationDate (base name: "RegistrationDate")', function() {
      // uncomment below and update the code to test the property registrationDate
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property registrationNumber (base name: "RegistrationNumber")', function() {
      // uncomment below and update the code to test the property registrationNumber
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property signingDeclaration (base name: "SigningDeclaration")', function() {
      // uncomment below and update the code to test the property signingDeclaration
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property signingDeclarationDescription (base name: "SigningDeclarationDescription")', function() {
      // uncomment below and update the code to test the property signingDeclarationDescription
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property signingLanguage (base name: "SigningLanguage")', function() {
      // uncomment below and update the code to test the property signingLanguage
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "Source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property stateOfIncorporation (base name: "StateOfIncorporation")', function() {
      // uncomment below and update the code to test the property stateOfIncorporation
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property telephoneNumber (base name: "TelephoneNumber")', function() {
      // uncomment below and update the code to test the property telephoneNumber
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property vatNumber (base name: "VatNumber")', function() {
      // uncomment below and update the code to test the property vatNumber
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property virtualId (base name: "VirtualId")', function() {
      // uncomment below and update the code to test the property virtualId
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property websiteURL (base name: "WebsiteURL")', function() {
      // uncomment below and update the code to test the property websiteURL
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property directorAndShareDetails (base name: "directorAndShareDetails")', function() {
      // uncomment below and update the code to test the property directorAndShareDetails
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

    it('should have the property officers (base name: "officers")', function() {
      // uncomment below and update the code to test the property officers
      //var instance = new FrankieFinancialApi.CompanyProfileDTO();
      //expect(instance).to.be();
    });

  });

}));
