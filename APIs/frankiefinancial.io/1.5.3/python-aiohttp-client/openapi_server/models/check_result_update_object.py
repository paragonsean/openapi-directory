# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enum_check_result_manual_status import EnumCheckResultManualStatus
from openapi_server import util


class CheckResultUpdateObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, check_class_ids: List[str]=None, comment: str=None, status: EnumCheckResultManualStatus=None):
        """CheckResultUpdateObject - a model defined in OpenAPI

        :param check_class_ids: The check_class_ids of this CheckResultUpdateObject.
        :param comment: The comment of this CheckResultUpdateObject.
        :param status: The status of this CheckResultUpdateObject.
        """
        self.openapi_types = {
            'check_class_ids': List[str],
            'comment': str,
            'status': EnumCheckResultManualStatus
        }

        self.attribute_map = {
            'check_class_ids': 'checkClassIds',
            'comment': 'comment',
            'status': 'status'
        }

        self._check_class_ids = check_class_ids
        self._comment = comment
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CheckResultUpdateObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CheckResultUpdateObject of this CheckResultUpdateObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def check_class_ids(self):
        """Gets the check_class_ids of this CheckResultUpdateObject.


        :return: The check_class_ids of this CheckResultUpdateObject.
        :rtype: List[str]
        """
        return self._check_class_ids

    @check_class_ids.setter
    def check_class_ids(self, check_class_ids):
        """Sets the check_class_ids of this CheckResultUpdateObject.


        :param check_class_ids: The check_class_ids of this CheckResultUpdateObject.
        :type check_class_ids: List[str]
        """

        self._check_class_ids = check_class_ids

    @property
    def comment(self):
        """Gets the comment of this CheckResultUpdateObject.


        :return: The comment of this CheckResultUpdateObject.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this CheckResultUpdateObject.


        :param comment: The comment of this CheckResultUpdateObject.
        :type comment: str
        """
        if comment is None:
            raise ValueError("Invalid value for `comment`, must not be `None`")

        self._comment = comment

    @property
    def status(self):
        """Gets the status of this CheckResultUpdateObject.


        :return: The status of this CheckResultUpdateObject.
        :rtype: EnumCheckResultManualStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CheckResultUpdateObject.


        :param status: The status of this CheckResultUpdateObject.
        :type status: EnumCheckResultManualStatus
        """

        self._status = status
