# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnumCheckResultState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    UNCHECKED = 'UNCHECKED'
    CHECKING = 'CHECKING'
    UNPROCESSABLE = 'UNPROCESSABLE'
    NOT_SUPPORTED = 'NOT_SUPPORTED'
    NO_MATCH = 'NO_MATCH'
    CHECKED_PARTIAL_SUCCESS = 'CHECKED_PARTIAL_SUCCESS'
    CHECKED_SUCCESS_WITH_NOTES = 'CHECKED_SUCCESS_WITH_NOTES'
    CHECKED_SUCCESS_CLEAR = 'CHECKED_SUCCESS_CLEAR'
    CHECKED_FAILED = 'CHECKED_FAILED'

    def __init__(self):
        """EnumCheckResultState - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnumCheckResultState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The enumCheckResultState of this EnumCheckResultState.
        """
        return util.deserialize_model(dikt, cls)
