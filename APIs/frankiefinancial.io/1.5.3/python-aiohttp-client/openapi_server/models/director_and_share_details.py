# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.array_of_director import ArrayOfDirector
from openapi_server.models.array_of_psc_details import ArrayOfPSCDetails
from openapi_server.models.array_of_shareholder_details import ArrayOfShareholderDetails
from openapi_server.models.capital_reserves import CapitalReserves
from openapi_server.models.shareholder_summary import ShareholderSummary
from openapi_server import util


class DirectorAndShareDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, persons_of_significant_control: ArrayOfPSCDetails=None, capital_reserves: CapitalReserves=None, directors: ArrayOfDirector=None, share_holder_summary: ShareholderSummary=None, share_holders: ArrayOfShareholderDetails=None):
        """DirectorAndShareDetails - a model defined in OpenAPI

        :param persons_of_significant_control: The persons_of_significant_control of this DirectorAndShareDetails.
        :param capital_reserves: The capital_reserves of this DirectorAndShareDetails.
        :param directors: The directors of this DirectorAndShareDetails.
        :param share_holder_summary: The share_holder_summary of this DirectorAndShareDetails.
        :param share_holders: The share_holders of this DirectorAndShareDetails.
        """
        self.openapi_types = {
            'persons_of_significant_control': ArrayOfPSCDetails,
            'capital_reserves': CapitalReserves,
            'directors': ArrayOfDirector,
            'share_holder_summary': ShareholderSummary,
            'share_holders': ArrayOfShareholderDetails
        }

        self.attribute_map = {
            'persons_of_significant_control': 'PersonsOfSignificantControl',
            'capital_reserves': 'capitalReserves',
            'directors': 'directors',
            'share_holder_summary': 'shareHolderSummary',
            'share_holders': 'shareHolders'
        }

        self._persons_of_significant_control = persons_of_significant_control
        self._capital_reserves = capital_reserves
        self._directors = directors
        self._share_holder_summary = share_holder_summary
        self._share_holders = share_holders

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DirectorAndShareDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DirectorAndShareDetails of this DirectorAndShareDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def persons_of_significant_control(self):
        """Gets the persons_of_significant_control of this DirectorAndShareDetails.


        :return: The persons_of_significant_control of this DirectorAndShareDetails.
        :rtype: ArrayOfPSCDetails
        """
        return self._persons_of_significant_control

    @persons_of_significant_control.setter
    def persons_of_significant_control(self, persons_of_significant_control):
        """Sets the persons_of_significant_control of this DirectorAndShareDetails.


        :param persons_of_significant_control: The persons_of_significant_control of this DirectorAndShareDetails.
        :type persons_of_significant_control: ArrayOfPSCDetails
        """

        self._persons_of_significant_control = persons_of_significant_control

    @property
    def capital_reserves(self):
        """Gets the capital_reserves of this DirectorAndShareDetails.


        :return: The capital_reserves of this DirectorAndShareDetails.
        :rtype: CapitalReserves
        """
        return self._capital_reserves

    @capital_reserves.setter
    def capital_reserves(self, capital_reserves):
        """Sets the capital_reserves of this DirectorAndShareDetails.


        :param capital_reserves: The capital_reserves of this DirectorAndShareDetails.
        :type capital_reserves: CapitalReserves
        """

        self._capital_reserves = capital_reserves

    @property
    def directors(self):
        """Gets the directors of this DirectorAndShareDetails.


        :return: The directors of this DirectorAndShareDetails.
        :rtype: ArrayOfDirector
        """
        return self._directors

    @directors.setter
    def directors(self, directors):
        """Sets the directors of this DirectorAndShareDetails.


        :param directors: The directors of this DirectorAndShareDetails.
        :type directors: ArrayOfDirector
        """

        self._directors = directors

    @property
    def share_holder_summary(self):
        """Gets the share_holder_summary of this DirectorAndShareDetails.


        :return: The share_holder_summary of this DirectorAndShareDetails.
        :rtype: ShareholderSummary
        """
        return self._share_holder_summary

    @share_holder_summary.setter
    def share_holder_summary(self, share_holder_summary):
        """Sets the share_holder_summary of this DirectorAndShareDetails.


        :param share_holder_summary: The share_holder_summary of this DirectorAndShareDetails.
        :type share_holder_summary: ShareholderSummary
        """

        self._share_holder_summary = share_holder_summary

    @property
    def share_holders(self):
        """Gets the share_holders of this DirectorAndShareDetails.


        :return: The share_holders of this DirectorAndShareDetails.
        :rtype: ArrayOfShareholderDetails
        """
        return self._share_holders

    @share_holders.setter
    def share_holders(self, share_holders):
        """Sets the share_holders of this DirectorAndShareDetails.


        :param share_holders: The share_holders of this DirectorAndShareDetails.
        :type share_holders: ArrayOfShareholderDetails
        """

        self._share_holders = share_holders
