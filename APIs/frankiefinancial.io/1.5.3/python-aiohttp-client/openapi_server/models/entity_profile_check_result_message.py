# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EntityProfileCheckResultMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, check_class: str=None, check_type: str=None, code: str=None, message: str=None, result: str=None):
        """EntityProfileCheckResultMessage - a model defined in OpenAPI

        :param check_class: The check_class of this EntityProfileCheckResultMessage.
        :param check_type: The check_type of this EntityProfileCheckResultMessage.
        :param code: The code of this EntityProfileCheckResultMessage.
        :param message: The message of this EntityProfileCheckResultMessage.
        :param result: The result of this EntityProfileCheckResultMessage.
        """
        self.openapi_types = {
            'check_class': str,
            'check_type': str,
            'code': str,
            'message': str,
            'result': str
        }

        self.attribute_map = {
            'check_class': 'checkClass',
            'check_type': 'checkType',
            'code': 'code',
            'message': 'message',
            'result': 'result'
        }

        self._check_class = check_class
        self._check_type = check_type
        self._code = code
        self._message = message
        self._result = result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EntityProfileCheckResultMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EntityProfileCheckResultMessage of this EntityProfileCheckResultMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def check_class(self):
        """Gets the check_class of this EntityProfileCheckResultMessage.

        The class of checks to which this check type belongs. One of: - kyc - aml - fraud - none 

        :return: The check_class of this EntityProfileCheckResultMessage.
        :rtype: str
        """
        return self._check_class

    @check_class.setter
    def check_class(self, check_class):
        """Sets the check_class of this EntityProfileCheckResultMessage.

        The class of checks to which this check type belongs. One of: - kyc - aml - fraud - none 

        :param check_class: The check_class of this EntityProfileCheckResultMessage.
        :type check_class: str
        """

        self._check_class = check_class

    @property
    def check_type(self):
        """Gets the check_type of this EntityProfileCheckResultMessage.

        A single check type that this result message applies to.

        :return: The check_type of this EntityProfileCheckResultMessage.
        :rtype: str
        """
        return self._check_type

    @check_type.setter
    def check_type(self, check_type):
        """Sets the check_type of this EntityProfileCheckResultMessage.

        A single check type that this result message applies to.

        :param check_type: The check_type of this EntityProfileCheckResultMessage.
        :type check_type: str
        """

        self._check_type = check_type

    @property
    def code(self):
        """Gets the code of this EntityProfileCheckResultMessage.

        Alphanumeric code that is unique for each failure message to simplify result processing and display. Values to be decided. 

        :return: The code of this EntityProfileCheckResultMessage.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this EntityProfileCheckResultMessage.

        Alphanumeric code that is unique for each failure message to simplify result processing and display. Values to be decided. 

        :param code: The code of this EntityProfileCheckResultMessage.
        :type code: str
        """

        self._code = code

    @property
    def message(self):
        """Gets the message of this EntityProfileCheckResultMessage.

        Short description of why not passed

        :return: The message of this EntityProfileCheckResultMessage.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this EntityProfileCheckResultMessage.

        Short description of why not passed

        :param message: The message of this EntityProfileCheckResultMessage.
        :type message: str
        """

        self._message = message

    @property
    def result(self):
        """Gets the result of this EntityProfileCheckResultMessage.

        The current state of the check. One of: - PASS - FAIL - UNCHECKED: Not attempted or service not available. For example AML not attempted if KYC fails. - NA: Not required. For example Visa check when there is no visa document and your account configuration indicates the check can be skipped. 

        :return: The result of this EntityProfileCheckResultMessage.
        :rtype: str
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this EntityProfileCheckResultMessage.

        The current state of the check. One of: - PASS - FAIL - UNCHECKED: Not attempted or service not available. For example AML not attempted if KYC fails. - NA: Not required. For example Visa check when there is no visa document and your account configuration indicates the check can be skipped. 

        :param result: The result of this EntityProfileCheckResultMessage.
        :type result: str
        """

        self._result = result
