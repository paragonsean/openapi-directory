# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CapitalReserves(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, capitalreserves: str=None, networth: str=None, paidupequity: str=None, profitlossreserve: str=None, reserves: str=None, revalutationreserve: str=None, shareholderfunds: str=None, sundryreserves: str=None):
        """CapitalReserves - a model defined in OpenAPI

        :param capitalreserves: The capitalreserves of this CapitalReserves.
        :param networth: The networth of this CapitalReserves.
        :param paidupequity: The paidupequity of this CapitalReserves.
        :param profitlossreserve: The profitlossreserve of this CapitalReserves.
        :param reserves: The reserves of this CapitalReserves.
        :param revalutationreserve: The revalutationreserve of this CapitalReserves.
        :param shareholderfunds: The shareholderfunds of this CapitalReserves.
        :param sundryreserves: The sundryreserves of this CapitalReserves.
        """
        self.openapi_types = {
            'capitalreserves': str,
            'networth': str,
            'paidupequity': str,
            'profitlossreserve': str,
            'reserves': str,
            'revalutationreserve': str,
            'shareholderfunds': str,
            'sundryreserves': str
        }

        self.attribute_map = {
            'capitalreserves': 'capitalreserves',
            'networth': 'networth',
            'paidupequity': 'paidupequity',
            'profitlossreserve': 'profitlossreserve',
            'reserves': 'reserves',
            'revalutationreserve': 'revalutationreserve',
            'shareholderfunds': 'shareholderfunds',
            'sundryreserves': 'sundryreserves'
        }

        self._capitalreserves = capitalreserves
        self._networth = networth
        self._paidupequity = paidupequity
        self._profitlossreserve = profitlossreserve
        self._reserves = reserves
        self._revalutationreserve = revalutationreserve
        self._shareholderfunds = shareholderfunds
        self._sundryreserves = sundryreserves

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CapitalReserves':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CapitalReserves of this CapitalReserves.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def capitalreserves(self):
        """Gets the capitalreserves of this CapitalReserves.


        :return: The capitalreserves of this CapitalReserves.
        :rtype: str
        """
        return self._capitalreserves

    @capitalreserves.setter
    def capitalreserves(self, capitalreserves):
        """Sets the capitalreserves of this CapitalReserves.


        :param capitalreserves: The capitalreserves of this CapitalReserves.
        :type capitalreserves: str
        """

        self._capitalreserves = capitalreserves

    @property
    def networth(self):
        """Gets the networth of this CapitalReserves.


        :return: The networth of this CapitalReserves.
        :rtype: str
        """
        return self._networth

    @networth.setter
    def networth(self, networth):
        """Sets the networth of this CapitalReserves.


        :param networth: The networth of this CapitalReserves.
        :type networth: str
        """

        self._networth = networth

    @property
    def paidupequity(self):
        """Gets the paidupequity of this CapitalReserves.


        :return: The paidupequity of this CapitalReserves.
        :rtype: str
        """
        return self._paidupequity

    @paidupequity.setter
    def paidupequity(self, paidupequity):
        """Sets the paidupequity of this CapitalReserves.


        :param paidupequity: The paidupequity of this CapitalReserves.
        :type paidupequity: str
        """

        self._paidupequity = paidupequity

    @property
    def profitlossreserve(self):
        """Gets the profitlossreserve of this CapitalReserves.


        :return: The profitlossreserve of this CapitalReserves.
        :rtype: str
        """
        return self._profitlossreserve

    @profitlossreserve.setter
    def profitlossreserve(self, profitlossreserve):
        """Sets the profitlossreserve of this CapitalReserves.


        :param profitlossreserve: The profitlossreserve of this CapitalReserves.
        :type profitlossreserve: str
        """

        self._profitlossreserve = profitlossreserve

    @property
    def reserves(self):
        """Gets the reserves of this CapitalReserves.


        :return: The reserves of this CapitalReserves.
        :rtype: str
        """
        return self._reserves

    @reserves.setter
    def reserves(self, reserves):
        """Sets the reserves of this CapitalReserves.


        :param reserves: The reserves of this CapitalReserves.
        :type reserves: str
        """

        self._reserves = reserves

    @property
    def revalutationreserve(self):
        """Gets the revalutationreserve of this CapitalReserves.


        :return: The revalutationreserve of this CapitalReserves.
        :rtype: str
        """
        return self._revalutationreserve

    @revalutationreserve.setter
    def revalutationreserve(self, revalutationreserve):
        """Sets the revalutationreserve of this CapitalReserves.


        :param revalutationreserve: The revalutationreserve of this CapitalReserves.
        :type revalutationreserve: str
        """

        self._revalutationreserve = revalutationreserve

    @property
    def shareholderfunds(self):
        """Gets the shareholderfunds of this CapitalReserves.


        :return: The shareholderfunds of this CapitalReserves.
        :rtype: str
        """
        return self._shareholderfunds

    @shareholderfunds.setter
    def shareholderfunds(self, shareholderfunds):
        """Sets the shareholderfunds of this CapitalReserves.


        :param shareholderfunds: The shareholderfunds of this CapitalReserves.
        :type shareholderfunds: str
        """

        self._shareholderfunds = shareholderfunds

    @property
    def sundryreserves(self):
        """Gets the sundryreserves of this CapitalReserves.


        :return: The sundryreserves of this CapitalReserves.
        :rtype: str
        """
        return self._sundryreserves

    @sundryreserves.setter
    def sundryreserves(self, sundryreserves):
        """Sets the sundryreserves of this CapitalReserves.


        :param sundryreserves: The sundryreserves of this CapitalReserves.
        :type sundryreserves: str
        """

        self._sundryreserves = sundryreserves
