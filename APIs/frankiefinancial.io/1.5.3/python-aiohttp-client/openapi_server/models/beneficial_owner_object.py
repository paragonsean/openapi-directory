# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.beneficial_owner_object_percentage_held import BeneficialOwnerObjectPercentageHeld
from openapi_server import util


class BeneficialOwnerObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_id: str=None, percentage_held: BeneficialOwnerObjectPercentageHeld=None):
        """BeneficialOwnerObject - a model defined in OpenAPI

        :param entity_id: The entity_id of this BeneficialOwnerObject.
        :param percentage_held: The percentage_held of this BeneficialOwnerObject.
        """
        self.openapi_types = {
            'entity_id': str,
            'percentage_held': BeneficialOwnerObjectPercentageHeld
        }

        self.attribute_map = {
            'entity_id': 'entityId',
            'percentage_held': 'percentageHeld'
        }

        self._entity_id = entity_id
        self._percentage_held = percentage_held

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BeneficialOwnerObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BeneficialOwnerObject of this BeneficialOwnerObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_id(self):
        """Gets the entity_id of this BeneficialOwnerObject.

        The entityId of the owner. 

        :return: The entity_id of this BeneficialOwnerObject.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this BeneficialOwnerObject.

        The entityId of the owner. 

        :param entity_id: The entity_id of this BeneficialOwnerObject.
        :type entity_id: str
        """

        self._entity_id = entity_id

    @property
    def percentage_held(self):
        """Gets the percentage_held of this BeneficialOwnerObject.


        :return: The percentage_held of this BeneficialOwnerObject.
        :rtype: BeneficialOwnerObjectPercentageHeld
        """
        return self._percentage_held

    @percentage_held.setter
    def percentage_held(self, percentage_held):
        """Sets the percentage_held of this BeneficialOwnerObject.


        :param percentage_held: The percentage_held of this BeneficialOwnerObject.
        :type percentage_held: BeneficialOwnerObjectPercentageHeld
        """

        self._percentage_held = percentage_held
