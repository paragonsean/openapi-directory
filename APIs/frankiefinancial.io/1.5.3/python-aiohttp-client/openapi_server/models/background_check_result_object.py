# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enum_background_check_frequency import EnumBackgroundCheckFrequency
from openapi_server.models.enum_background_check_state import EnumBackgroundCheckState
from openapi_server.models.enum_background_check_type import EnumBackgroundCheckType
from openapi_server.models.key_value_pair_object import KeyValuePairObject
from openapi_server import util


class BackgroundCheckResultObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, background_check_type: EnumBackgroundCheckType=None, check_details: List[KeyValuePairObject]=None, check_frequency: EnumBackgroundCheckFrequency=None, check_id: str=None, check_performed_by: str=None, check_source: str=None, confidence_level: int=None, current_state: EnumBackgroundCheckState=None, first_check_date: datetime=None, latest_check_date: datetime=None):
        """BackgroundCheckResultObject - a model defined in OpenAPI

        :param background_check_type: The background_check_type of this BackgroundCheckResultObject.
        :param check_details: The check_details of this BackgroundCheckResultObject.
        :param check_frequency: The check_frequency of this BackgroundCheckResultObject.
        :param check_id: The check_id of this BackgroundCheckResultObject.
        :param check_performed_by: The check_performed_by of this BackgroundCheckResultObject.
        :param check_source: The check_source of this BackgroundCheckResultObject.
        :param confidence_level: The confidence_level of this BackgroundCheckResultObject.
        :param current_state: The current_state of this BackgroundCheckResultObject.
        :param first_check_date: The first_check_date of this BackgroundCheckResultObject.
        :param latest_check_date: The latest_check_date of this BackgroundCheckResultObject.
        """
        self.openapi_types = {
            'background_check_type': EnumBackgroundCheckType,
            'check_details': List[KeyValuePairObject],
            'check_frequency': EnumBackgroundCheckFrequency,
            'check_id': str,
            'check_performed_by': str,
            'check_source': str,
            'confidence_level': int,
            'current_state': EnumBackgroundCheckState,
            'first_check_date': datetime,
            'latest_check_date': datetime
        }

        self.attribute_map = {
            'background_check_type': 'backgroundCheckType',
            'check_details': 'checkDetails',
            'check_frequency': 'checkFrequency',
            'check_id': 'checkId',
            'check_performed_by': 'checkPerformedBy',
            'check_source': 'checkSource',
            'confidence_level': 'confidenceLevel',
            'current_state': 'currentState',
            'first_check_date': 'firstCheckDate',
            'latest_check_date': 'latestCheckDate'
        }

        self._background_check_type = background_check_type
        self._check_details = check_details
        self._check_frequency = check_frequency
        self._check_id = check_id
        self._check_performed_by = check_performed_by
        self._check_source = check_source
        self._confidence_level = confidence_level
        self._current_state = current_state
        self._first_check_date = first_check_date
        self._latest_check_date = latest_check_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BackgroundCheckResultObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The backgroundCheckResultObject of this BackgroundCheckResultObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def background_check_type(self):
        """Gets the background_check_type of this BackgroundCheckResultObject.


        :return: The background_check_type of this BackgroundCheckResultObject.
        :rtype: EnumBackgroundCheckType
        """
        return self._background_check_type

    @background_check_type.setter
    def background_check_type(self, background_check_type):
        """Sets the background_check_type of this BackgroundCheckResultObject.


        :param background_check_type: The background_check_type of this BackgroundCheckResultObject.
        :type background_check_type: EnumBackgroundCheckType
        """

        self._background_check_type = background_check_type

    @property
    def check_details(self):
        """Gets the check_details of this BackgroundCheckResultObject.

        Any additional notes that may relate to the state. Free form notes that may contain JSON blobs needing further interpretation.

        :return: The check_details of this BackgroundCheckResultObject.
        :rtype: List[KeyValuePairObject]
        """
        return self._check_details

    @check_details.setter
    def check_details(self, check_details):
        """Sets the check_details of this BackgroundCheckResultObject.

        Any additional notes that may relate to the state. Free form notes that may contain JSON blobs needing further interpretation.

        :param check_details: The check_details of this BackgroundCheckResultObject.
        :type check_details: List[KeyValuePairObject]
        """

        self._check_details = check_details

    @property
    def check_frequency(self):
        """Gets the check_frequency of this BackgroundCheckResultObject.


        :return: The check_frequency of this BackgroundCheckResultObject.
        :rtype: EnumBackgroundCheckFrequency
        """
        return self._check_frequency

    @check_frequency.setter
    def check_frequency(self, check_frequency):
        """Sets the check_frequency of this BackgroundCheckResultObject.


        :param check_frequency: The check_frequency of this BackgroundCheckResultObject.
        :type check_frequency: EnumBackgroundCheckFrequency
        """

        self._check_frequency = check_frequency

    @property
    def check_id(self):
        """Gets the check_id of this BackgroundCheckResultObject.

        Unique identifier for every check/comparison/verification. Make sure you reference this ID whenever updating check details. This ID will also be used when pushing check results back to you.

        :return: The check_id of this BackgroundCheckResultObject.
        :rtype: str
        """
        return self._check_id

    @check_id.setter
    def check_id(self, check_id):
        """Sets the check_id of this BackgroundCheckResultObject.

        Unique identifier for every check/comparison/verification. Make sure you reference this ID whenever updating check details. This ID will also be used when pushing check results back to you.

        :param check_id: The check_id of this BackgroundCheckResultObject.
        :type check_id: str
        """

        self._check_id = check_id

    @property
    def check_performed_by(self):
        """Gets the check_performed_by of this BackgroundCheckResultObject.

        Service provider that performed the check. Basically the name of the connector, without the leading con_ 

        :return: The check_performed_by of this BackgroundCheckResultObject.
        :rtype: str
        """
        return self._check_performed_by

    @check_performed_by.setter
    def check_performed_by(self, check_performed_by):
        """Sets the check_performed_by of this BackgroundCheckResultObject.

        Service provider that performed the check. Basically the name of the connector, without the leading con_ 

        :param check_performed_by: The check_performed_by of this BackgroundCheckResultObject.
        :type check_performed_by: str
        """

        self._check_performed_by = check_performed_by

    @property
    def check_source(self):
        """Gets the check_source of this BackgroundCheckResultObject.

        Code that can be used to determine the underlying nature or data source of the checks performed. This may or may not be known by the connector, or may be a provider specific type (e.g. type \"O\") 

        :return: The check_source of this BackgroundCheckResultObject.
        :rtype: str
        """
        return self._check_source

    @check_source.setter
    def check_source(self, check_source):
        """Sets the check_source of this BackgroundCheckResultObject.

        Code that can be used to determine the underlying nature or data source of the checks performed. This may or may not be known by the connector, or may be a provider specific type (e.g. type \"O\") 

        :param check_source: The check_source of this BackgroundCheckResultObject.
        :type check_source: str
        """

        self._check_source = check_source

    @property
    def confidence_level(self):
        """Gets the confidence_level of this BackgroundCheckResultObject.

        Confidence in the current results on a scale of 0 (none) to 100 (as certain as possible). Whole integers only.

        :return: The confidence_level of this BackgroundCheckResultObject.
        :rtype: int
        """
        return self._confidence_level

    @confidence_level.setter
    def confidence_level(self, confidence_level):
        """Sets the confidence_level of this BackgroundCheckResultObject.

        Confidence in the current results on a scale of 0 (none) to 100 (as certain as possible). Whole integers only.

        :param confidence_level: The confidence_level of this BackgroundCheckResultObject.
        :type confidence_level: int
        """
        if confidence_level is not None and confidence_level > 100:
            raise ValueError("Invalid value for `confidence_level`, must be a value less than or equal to `100`")
        if confidence_level is not None and confidence_level < 0:
            raise ValueError("Invalid value for `confidence_level`, must be a value greater than or equal to `0`")

        self._confidence_level = confidence_level

    @property
    def current_state(self):
        """Gets the current_state of this BackgroundCheckResultObject.


        :return: The current_state of this BackgroundCheckResultObject.
        :rtype: EnumBackgroundCheckState
        """
        return self._current_state

    @current_state.setter
    def current_state(self, current_state):
        """Sets the current_state of this BackgroundCheckResultObject.


        :param current_state: The current_state of this BackgroundCheckResultObject.
        :type current_state: EnumBackgroundCheckState
        """

        self._current_state = current_state

    @property
    def first_check_date(self):
        """Gets the first_check_date of this BackgroundCheckResultObject.

        The date and time the item was first checked.

        :return: The first_check_date of this BackgroundCheckResultObject.
        :rtype: datetime
        """
        return self._first_check_date

    @first_check_date.setter
    def first_check_date(self, first_check_date):
        """Sets the first_check_date of this BackgroundCheckResultObject.

        The date and time the item was first checked.

        :param first_check_date: The first_check_date of this BackgroundCheckResultObject.
        :type first_check_date: datetime
        """

        self._first_check_date = first_check_date

    @property
    def latest_check_date(self):
        """Gets the latest_check_date of this BackgroundCheckResultObject.

        The date and time the item was last checked to provide this result.

        :return: The latest_check_date of this BackgroundCheckResultObject.
        :rtype: datetime
        """
        return self._latest_check_date

    @latest_check_date.setter
    def latest_check_date(self, latest_check_date):
        """Sets the latest_check_date of this BackgroundCheckResultObject.

        The date and time the item was last checked to provide this result.

        :param latest_check_date: The latest_check_date of this BackgroundCheckResultObject.
        :type latest_check_date: datetime
        """

        self._latest_check_date = latest_check_date
