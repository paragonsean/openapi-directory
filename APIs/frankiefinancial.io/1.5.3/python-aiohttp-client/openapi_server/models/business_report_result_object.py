# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BusinessReportResultObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document_id: str=None, location: str=None, scan_doc_id: str=None):
        """BusinessReportResultObject - a model defined in OpenAPI

        :param document_id: The document_id of this BusinessReportResultObject.
        :param location: The location of this BusinessReportResultObject.
        :param scan_doc_id: The scan_doc_id of this BusinessReportResultObject.
        """
        self.openapi_types = {
            'document_id': str,
            'location': str,
            'scan_doc_id': str
        }

        self.attribute_map = {
            'document_id': 'documentId',
            'location': 'location',
            'scan_doc_id': 'scanDocId'
        }

        self._document_id = document_id
        self._location = location
        self._scan_doc_id = scan_doc_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BusinessReportResultObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BusinessReportResultObject of this BusinessReportResultObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document_id(self):
        """Gets the document_id of this BusinessReportResultObject.


        :return: The document_id of this BusinessReportResultObject.
        :rtype: str
        """
        return self._document_id

    @document_id.setter
    def document_id(self, document_id):
        """Sets the document_id of this BusinessReportResultObject.


        :param document_id: The document_id of this BusinessReportResultObject.
        :type document_id: str
        """

        self._document_id = document_id

    @property
    def location(self):
        """Gets the location of this BusinessReportResultObject.


        :return: The location of this BusinessReportResultObject.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this BusinessReportResultObject.


        :param location: The location of this BusinessReportResultObject.
        :type location: str
        """

        self._location = location

    @property
    def scan_doc_id(self):
        """Gets the scan_doc_id of this BusinessReportResultObject.


        :return: The scan_doc_id of this BusinessReportResultObject.
        :rtype: str
        """
        return self._scan_doc_id

    @scan_doc_id.setter
    def scan_doc_id(self, scan_doc_id):
        """Sets the scan_doc_id of this BusinessReportResultObject.


        :param scan_doc_id: The scan_doc_id of this BusinessReportResultObject.
        :type scan_doc_id: str
        """

        self._scan_doc_id = scan_doc_id
