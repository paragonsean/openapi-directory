# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActivityDeclarationDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, declaration: str=None, declaration_description: str=None, language: str=None):
        """ActivityDeclarationDTO - a model defined in OpenAPI

        :param declaration: The declaration of this ActivityDeclarationDTO.
        :param declaration_description: The declaration_description of this ActivityDeclarationDTO.
        :param language: The language of this ActivityDeclarationDTO.
        """
        self.openapi_types = {
            'declaration': str,
            'declaration_description': str,
            'language': str
        }

        self.attribute_map = {
            'declaration': 'Declaration',
            'declaration_description': 'DeclarationDescription',
            'language': 'Language'
        }

        self._declaration = declaration
        self._declaration_description = declaration_description
        self._language = language

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityDeclarationDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivityDeclarationDTO of this ActivityDeclarationDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def declaration(self):
        """Gets the declaration of this ActivityDeclarationDTO.


        :return: The declaration of this ActivityDeclarationDTO.
        :rtype: str
        """
        return self._declaration

    @declaration.setter
    def declaration(self, declaration):
        """Sets the declaration of this ActivityDeclarationDTO.


        :param declaration: The declaration of this ActivityDeclarationDTO.
        :type declaration: str
        """

        self._declaration = declaration

    @property
    def declaration_description(self):
        """Gets the declaration_description of this ActivityDeclarationDTO.


        :return: The declaration_description of this ActivityDeclarationDTO.
        :rtype: str
        """
        return self._declaration_description

    @declaration_description.setter
    def declaration_description(self, declaration_description):
        """Sets the declaration_description of this ActivityDeclarationDTO.


        :param declaration_description: The declaration_description of this ActivityDeclarationDTO.
        :type declaration_description: str
        """

        self._declaration_description = declaration_description

    @property
    def language(self):
        """Gets the language of this ActivityDeclarationDTO.


        :return: The language of this ActivityDeclarationDTO.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this ActivityDeclarationDTO.


        :param language: The language of this ActivityDeclarationDTO.
        :type language: str
        """

        self._language = language
