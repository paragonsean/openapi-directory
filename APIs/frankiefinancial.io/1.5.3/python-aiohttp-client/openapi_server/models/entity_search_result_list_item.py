# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.entity_object import EntityObject
from openapi_server.models.search_result_confidence_object import SearchResultConfidenceObject
from openapi_server import util


class EntitySearchResultListItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confidence: SearchResultConfidenceObject=None, document_match_types: List[str]=None, document_name_mismatches: List[str]=None, entity: EntityObject=None, entity_match_types: List[str]=None):
        """EntitySearchResultListItem - a model defined in OpenAPI

        :param confidence: The confidence of this EntitySearchResultListItem.
        :param document_match_types: The document_match_types of this EntitySearchResultListItem.
        :param document_name_mismatches: The document_name_mismatches of this EntitySearchResultListItem.
        :param entity: The entity of this EntitySearchResultListItem.
        :param entity_match_types: The entity_match_types of this EntitySearchResultListItem.
        """
        self.openapi_types = {
            'confidence': SearchResultConfidenceObject,
            'document_match_types': List[str],
            'document_name_mismatches': List[str],
            'entity': EntityObject,
            'entity_match_types': List[str]
        }

        self.attribute_map = {
            'confidence': 'confidence',
            'document_match_types': 'documentMatchTypes',
            'document_name_mismatches': 'documentNameMismatches',
            'entity': 'entity',
            'entity_match_types': 'entityMatchTypes'
        }

        self._confidence = confidence
        self._document_match_types = document_match_types
        self._document_name_mismatches = document_name_mismatches
        self._entity = entity
        self._entity_match_types = entity_match_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EntitySearchResultListItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EntitySearchResultListItem of this EntitySearchResultListItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confidence(self):
        """Gets the confidence of this EntitySearchResultListItem.


        :return: The confidence of this EntitySearchResultListItem.
        :rtype: SearchResultConfidenceObject
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence):
        """Sets the confidence of this EntitySearchResultListItem.


        :param confidence: The confidence of this EntitySearchResultListItem.
        :type confidence: SearchResultConfidenceObject
        """

        self._confidence = confidence

    @property
    def document_match_types(self):
        """Gets the document_match_types of this EntitySearchResultListItem.

        Array of descriptons of document field matches used to score this search. This is a summary for all the documents for the matched entity. 

        :return: The document_match_types of this EntitySearchResultListItem.
        :rtype: List[str]
        """
        return self._document_match_types

    @document_match_types.setter
    def document_match_types(self, document_match_types):
        """Sets the document_match_types of this EntitySearchResultListItem.

        Array of descriptons of document field matches used to score this search. This is a summary for all the documents for the matched entity. 

        :param document_match_types: The document_match_types of this EntitySearchResultListItem.
        :type document_match_types: List[str]
        """

        self._document_match_types = document_match_types

    @property
    def document_name_mismatches(self):
        """Gets the document_name_mismatches of this EntitySearchResultListItem.

        If this entity has any level of name match then this is an array of document IDs for the entity where the document has an entity name and it doesn't match any entity names being sought. 

        :return: The document_name_mismatches of this EntitySearchResultListItem.
        :rtype: List[str]
        """
        return self._document_name_mismatches

    @document_name_mismatches.setter
    def document_name_mismatches(self, document_name_mismatches):
        """Sets the document_name_mismatches of this EntitySearchResultListItem.

        If this entity has any level of name match then this is an array of document IDs for the entity where the document has an entity name and it doesn't match any entity names being sought. 

        :param document_name_mismatches: The document_name_mismatches of this EntitySearchResultListItem.
        :type document_name_mismatches: List[str]
        """

        self._document_name_mismatches = document_name_mismatches

    @property
    def entity(self):
        """Gets the entity of this EntitySearchResultListItem.


        :return: The entity of this EntitySearchResultListItem.
        :rtype: EntityObject
        """
        return self._entity

    @entity.setter
    def entity(self, entity):
        """Sets the entity of this EntitySearchResultListItem.


        :param entity: The entity of this EntitySearchResultListItem.
        :type entity: EntityObject
        """

        self._entity = entity

    @property
    def entity_match_types(self):
        """Gets the entity_match_types of this EntitySearchResultListItem.

        Array of descriptons of entity field matches used to score this search. 

        :return: The entity_match_types of this EntitySearchResultListItem.
        :rtype: List[str]
        """
        return self._entity_match_types

    @entity_match_types.setter
    def entity_match_types(self, entity_match_types):
        """Sets the entity_match_types of this EntitySearchResultListItem.

        Array of descriptons of entity field matches used to score this search. 

        :param entity_match_types: The entity_match_types of this EntitySearchResultListItem.
        :type entity_match_types: List[str]
        """

        self._entity_match_types = entity_match_types
