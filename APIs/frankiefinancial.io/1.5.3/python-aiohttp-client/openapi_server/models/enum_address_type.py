# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnumAddressType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    OTHER = 'OTHER'
    RESIDENTIAL = 'RESIDENTIAL'
    RESIDENTIAL1 = 'RESIDENTIAL1'
    RESIDENTIAL2 = 'RESIDENTIAL2'
    RESIDENTIAL3 = 'RESIDENTIAL3'
    RESIDENTIAL4 = 'RESIDENTIAL4'
    BUSINESS = 'BUSINESS'
    POSTAL = 'POSTAL'
    REGISTERED_OFFICE = 'REGISTERED_OFFICE'
    PLACE_OF_BUSINESS = 'PLACE_OF_BUSINESS'
    OFFICIAL_CORRESPONDANCE = 'OFFICIAL_CORRESPONDANCE'

    def __init__(self):
        """EnumAddressType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnumAddressType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The enumAddressType of this EnumAddressType.
        """
        return util.deserialize_model(dikt, cls)
