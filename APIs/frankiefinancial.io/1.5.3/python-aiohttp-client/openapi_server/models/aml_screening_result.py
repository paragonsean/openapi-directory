# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AMLScreeningResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, check_result: str=None, media_hit_count: int=None):
        """AMLScreeningResult - a model defined in OpenAPI

        :param check_result: The check_result of this AMLScreeningResult.
        :param media_hit_count: The media_hit_count of this AMLScreeningResult.
        """
        self.openapi_types = {
            'check_result': str,
            'media_hit_count': int
        }

        self.attribute_map = {
            'check_result': 'check_result',
            'media_hit_count': 'media_hit_count'
        }

        self._check_result = check_result
        self._media_hit_count = media_hit_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AMLScreeningResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AMLScreeningResult of this AMLScreeningResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def check_result(self):
        """Gets the check_result of this AMLScreeningResult.

        The overall result

        :return: The check_result of this AMLScreeningResult.
        :rtype: str
        """
        return self._check_result

    @check_result.setter
    def check_result(self, check_result):
        """Sets the check_result of this AMLScreeningResult.

        The overall result

        :param check_result: The check_result of this AMLScreeningResult.
        :type check_result: str
        """
        allowed_values = ["NOT_SCREENED", "CLEAR", "POSSIBLE_HIT"]  # noqa: E501
        if check_result not in allowed_values:
            raise ValueError(
                "Invalid value for `check_result` ({0}), must be one of {1}"
                .format(check_result, allowed_values)
            )

        self._check_result = check_result

    @property
    def media_hit_count(self):
        """Gets the media_hit_count of this AMLScreeningResult.

        The number of adverse media hits.

        :return: The media_hit_count of this AMLScreeningResult.
        :rtype: int
        """
        return self._media_hit_count

    @media_hit_count.setter
    def media_hit_count(self, media_hit_count):
        """Sets the media_hit_count of this AMLScreeningResult.

        The number of adverse media hits.

        :param media_hit_count: The media_hit_count of this AMLScreeningResult.
        :type media_hit_count: int
        """

        self._media_hit_count = media_hit_count
