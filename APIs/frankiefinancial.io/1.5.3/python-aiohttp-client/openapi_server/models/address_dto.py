# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.array_of_address_line_dto import ArrayOfAddressLineDTO
from openapi_server import util


class AddressDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_in_one_line: str=None, address_line1: str=None, address_line2: str=None, address_line3: str=None, address_line4: str=None, address_line5: str=None, city_town: str=None, country: str=None, email: str=None, fax_number: str=None, line: ArrayOfAddressLineDTO=None, postcode: str=None, region_state: str=None, telephone_number: str=None, type: str=None, type_code: str=None, website_url: str=None):
        """AddressDTO - a model defined in OpenAPI

        :param address_in_one_line: The address_in_one_line of this AddressDTO.
        :param address_line1: The address_line1 of this AddressDTO.
        :param address_line2: The address_line2 of this AddressDTO.
        :param address_line3: The address_line3 of this AddressDTO.
        :param address_line4: The address_line4 of this AddressDTO.
        :param address_line5: The address_line5 of this AddressDTO.
        :param city_town: The city_town of this AddressDTO.
        :param country: The country of this AddressDTO.
        :param email: The email of this AddressDTO.
        :param fax_number: The fax_number of this AddressDTO.
        :param line: The line of this AddressDTO.
        :param postcode: The postcode of this AddressDTO.
        :param region_state: The region_state of this AddressDTO.
        :param telephone_number: The telephone_number of this AddressDTO.
        :param type: The type of this AddressDTO.
        :param type_code: The type_code of this AddressDTO.
        :param website_url: The website_url of this AddressDTO.
        """
        self.openapi_types = {
            'address_in_one_line': str,
            'address_line1': str,
            'address_line2': str,
            'address_line3': str,
            'address_line4': str,
            'address_line5': str,
            'city_town': str,
            'country': str,
            'email': str,
            'fax_number': str,
            'line': ArrayOfAddressLineDTO,
            'postcode': str,
            'region_state': str,
            'telephone_number': str,
            'type': str,
            'type_code': str,
            'website_url': str
        }

        self.attribute_map = {
            'address_in_one_line': 'AddressInOneLine',
            'address_line1': 'AddressLine1',
            'address_line2': 'AddressLine2',
            'address_line3': 'AddressLine3',
            'address_line4': 'AddressLine4',
            'address_line5': 'AddressLine5',
            'city_town': 'CityTown',
            'country': 'Country',
            'email': 'Email',
            'fax_number': 'FaxNumber',
            'line': 'Line',
            'postcode': 'Postcode',
            'region_state': 'RegionState',
            'telephone_number': 'TelephoneNumber',
            'type': 'Type',
            'type_code': 'TypeCode',
            'website_url': 'WebsiteUrl'
        }

        self._address_in_one_line = address_in_one_line
        self._address_line1 = address_line1
        self._address_line2 = address_line2
        self._address_line3 = address_line3
        self._address_line4 = address_line4
        self._address_line5 = address_line5
        self._city_town = city_town
        self._country = country
        self._email = email
        self._fax_number = fax_number
        self._line = line
        self._postcode = postcode
        self._region_state = region_state
        self._telephone_number = telephone_number
        self._type = type
        self._type_code = type_code
        self._website_url = website_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddressDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddressDTO of this AddressDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_in_one_line(self):
        """Gets the address_in_one_line of this AddressDTO.


        :return: The address_in_one_line of this AddressDTO.
        :rtype: str
        """
        return self._address_in_one_line

    @address_in_one_line.setter
    def address_in_one_line(self, address_in_one_line):
        """Sets the address_in_one_line of this AddressDTO.


        :param address_in_one_line: The address_in_one_line of this AddressDTO.
        :type address_in_one_line: str
        """

        self._address_in_one_line = address_in_one_line

    @property
    def address_line1(self):
        """Gets the address_line1 of this AddressDTO.


        :return: The address_line1 of this AddressDTO.
        :rtype: str
        """
        return self._address_line1

    @address_line1.setter
    def address_line1(self, address_line1):
        """Sets the address_line1 of this AddressDTO.


        :param address_line1: The address_line1 of this AddressDTO.
        :type address_line1: str
        """

        self._address_line1 = address_line1

    @property
    def address_line2(self):
        """Gets the address_line2 of this AddressDTO.


        :return: The address_line2 of this AddressDTO.
        :rtype: str
        """
        return self._address_line2

    @address_line2.setter
    def address_line2(self, address_line2):
        """Sets the address_line2 of this AddressDTO.


        :param address_line2: The address_line2 of this AddressDTO.
        :type address_line2: str
        """

        self._address_line2 = address_line2

    @property
    def address_line3(self):
        """Gets the address_line3 of this AddressDTO.


        :return: The address_line3 of this AddressDTO.
        :rtype: str
        """
        return self._address_line3

    @address_line3.setter
    def address_line3(self, address_line3):
        """Sets the address_line3 of this AddressDTO.


        :param address_line3: The address_line3 of this AddressDTO.
        :type address_line3: str
        """

        self._address_line3 = address_line3

    @property
    def address_line4(self):
        """Gets the address_line4 of this AddressDTO.


        :return: The address_line4 of this AddressDTO.
        :rtype: str
        """
        return self._address_line4

    @address_line4.setter
    def address_line4(self, address_line4):
        """Sets the address_line4 of this AddressDTO.


        :param address_line4: The address_line4 of this AddressDTO.
        :type address_line4: str
        """

        self._address_line4 = address_line4

    @property
    def address_line5(self):
        """Gets the address_line5 of this AddressDTO.


        :return: The address_line5 of this AddressDTO.
        :rtype: str
        """
        return self._address_line5

    @address_line5.setter
    def address_line5(self, address_line5):
        """Sets the address_line5 of this AddressDTO.


        :param address_line5: The address_line5 of this AddressDTO.
        :type address_line5: str
        """

        self._address_line5 = address_line5

    @property
    def city_town(self):
        """Gets the city_town of this AddressDTO.


        :return: The city_town of this AddressDTO.
        :rtype: str
        """
        return self._city_town

    @city_town.setter
    def city_town(self, city_town):
        """Sets the city_town of this AddressDTO.


        :param city_town: The city_town of this AddressDTO.
        :type city_town: str
        """

        self._city_town = city_town

    @property
    def country(self):
        """Gets the country of this AddressDTO.


        :return: The country of this AddressDTO.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this AddressDTO.


        :param country: The country of this AddressDTO.
        :type country: str
        """

        self._country = country

    @property
    def email(self):
        """Gets the email of this AddressDTO.


        :return: The email of this AddressDTO.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this AddressDTO.


        :param email: The email of this AddressDTO.
        :type email: str
        """

        self._email = email

    @property
    def fax_number(self):
        """Gets the fax_number of this AddressDTO.


        :return: The fax_number of this AddressDTO.
        :rtype: str
        """
        return self._fax_number

    @fax_number.setter
    def fax_number(self, fax_number):
        """Sets the fax_number of this AddressDTO.


        :param fax_number: The fax_number of this AddressDTO.
        :type fax_number: str
        """

        self._fax_number = fax_number

    @property
    def line(self):
        """Gets the line of this AddressDTO.


        :return: The line of this AddressDTO.
        :rtype: ArrayOfAddressLineDTO
        """
        return self._line

    @line.setter
    def line(self, line):
        """Sets the line of this AddressDTO.


        :param line: The line of this AddressDTO.
        :type line: ArrayOfAddressLineDTO
        """

        self._line = line

    @property
    def postcode(self):
        """Gets the postcode of this AddressDTO.


        :return: The postcode of this AddressDTO.
        :rtype: str
        """
        return self._postcode

    @postcode.setter
    def postcode(self, postcode):
        """Sets the postcode of this AddressDTO.


        :param postcode: The postcode of this AddressDTO.
        :type postcode: str
        """

        self._postcode = postcode

    @property
    def region_state(self):
        """Gets the region_state of this AddressDTO.


        :return: The region_state of this AddressDTO.
        :rtype: str
        """
        return self._region_state

    @region_state.setter
    def region_state(self, region_state):
        """Sets the region_state of this AddressDTO.


        :param region_state: The region_state of this AddressDTO.
        :type region_state: str
        """

        self._region_state = region_state

    @property
    def telephone_number(self):
        """Gets the telephone_number of this AddressDTO.


        :return: The telephone_number of this AddressDTO.
        :rtype: str
        """
        return self._telephone_number

    @telephone_number.setter
    def telephone_number(self, telephone_number):
        """Sets the telephone_number of this AddressDTO.


        :param telephone_number: The telephone_number of this AddressDTO.
        :type telephone_number: str
        """

        self._telephone_number = telephone_number

    @property
    def type(self):
        """Gets the type of this AddressDTO.


        :return: The type of this AddressDTO.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AddressDTO.


        :param type: The type of this AddressDTO.
        :type type: str
        """

        self._type = type

    @property
    def type_code(self):
        """Gets the type_code of this AddressDTO.


        :return: The type_code of this AddressDTO.
        :rtype: str
        """
        return self._type_code

    @type_code.setter
    def type_code(self, type_code):
        """Sets the type_code of this AddressDTO.


        :param type_code: The type_code of this AddressDTO.
        :type type_code: str
        """

        self._type_code = type_code

    @property
    def website_url(self):
        """Gets the website_url of this AddressDTO.


        :return: The website_url of this AddressDTO.
        :rtype: str
        """
        return self._website_url

    @website_url.setter
    def website_url(self, website_url):
        """Sets the website_url of this AddressDTO.


        :param website_url: The website_url of this AddressDTO.
        :type website_url: str
        """

        self._website_url = website_url
