# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.document_comparison_result_object import DocumentComparisonResultObject
from openapi_server import util


class DocumentCompareResultObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document_comparison_results: DocumentComparisonResultObject=None, request_id: str=None):
        """DocumentCompareResultObject - a model defined in OpenAPI

        :param document_comparison_results: The document_comparison_results of this DocumentCompareResultObject.
        :param request_id: The request_id of this DocumentCompareResultObject.
        """
        self.openapi_types = {
            'document_comparison_results': DocumentComparisonResultObject,
            'request_id': str
        }

        self.attribute_map = {
            'document_comparison_results': 'documentComparisonResults',
            'request_id': 'requestId'
        }

        self._document_comparison_results = document_comparison_results
        self._request_id = request_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentCompareResultObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DocumentCompareResultObject of this DocumentCompareResultObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document_comparison_results(self):
        """Gets the document_comparison_results of this DocumentCompareResultObject.


        :return: The document_comparison_results of this DocumentCompareResultObject.
        :rtype: DocumentComparisonResultObject
        """
        return self._document_comparison_results

    @document_comparison_results.setter
    def document_comparison_results(self, document_comparison_results):
        """Sets the document_comparison_results of this DocumentCompareResultObject.


        :param document_comparison_results: The document_comparison_results of this DocumentCompareResultObject.
        :type document_comparison_results: DocumentComparisonResultObject
        """
        if document_comparison_results is None:
            raise ValueError("Invalid value for `document_comparison_results`, must not be `None`")

        self._document_comparison_results = document_comparison_results

    @property
    def request_id(self):
        """Gets the request_id of this DocumentCompareResultObject.

        Unique identifier for every request. Can be used for tracking down answers with technical support.   Uses the ULID format (a time-based, sortable UUID)  Note: this will be different for every request. 

        :return: The request_id of this DocumentCompareResultObject.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this DocumentCompareResultObject.

        Unique identifier for every request. Can be used for tracking down answers with technical support.   Uses the ULID format (a time-based, sortable UUID)  Note: this will be different for every request. 

        :param request_id: The request_id of this DocumentCompareResultObject.
        :type request_id: str
        """
        if request_id is None:
            raise ValueError("Invalid value for `request_id`, must not be `None`")

        self._request_id = request_id
