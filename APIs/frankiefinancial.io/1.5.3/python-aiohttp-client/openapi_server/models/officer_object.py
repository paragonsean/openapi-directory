# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.court_details_object import CourtDetailsObject
from openapi_server import util


class OfficerObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, appointment_date: date=None, court_details: CourtDetailsObject=None, doc_number: str=None, doc_number_qualifier: str=None, entity_id: str=None, status: str=None, type: str=None, type_description: str=None):
        """OfficerObject - a model defined in OpenAPI

        :param appointment_date: The appointment_date of this OfficerObject.
        :param court_details: The court_details of this OfficerObject.
        :param doc_number: The doc_number of this OfficerObject.
        :param doc_number_qualifier: The doc_number_qualifier of this OfficerObject.
        :param entity_id: The entity_id of this OfficerObject.
        :param status: The status of this OfficerObject.
        :param type: The type of this OfficerObject.
        :param type_description: The type_description of this OfficerObject.
        """
        self.openapi_types = {
            'appointment_date': date,
            'court_details': CourtDetailsObject,
            'doc_number': str,
            'doc_number_qualifier': str,
            'entity_id': str,
            'status': str,
            'type': str,
            'type_description': str
        }

        self.attribute_map = {
            'appointment_date': 'appointmentDate',
            'court_details': 'courtDetails',
            'doc_number': 'docNumber',
            'doc_number_qualifier': 'docNumberQualifier',
            'entity_id': 'entityId',
            'status': 'status',
            'type': 'type',
            'type_description': 'typeDescription'
        }

        self._appointment_date = appointment_date
        self._court_details = court_details
        self._doc_number = doc_number
        self._doc_number_qualifier = doc_number_qualifier
        self._entity_id = entity_id
        self._status = status
        self._type = type
        self._type_description = type_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OfficerObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OfficerObject of this OfficerObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def appointment_date(self):
        """Gets the appointment_date of this OfficerObject.


        :return: The appointment_date of this OfficerObject.
        :rtype: date
        """
        return self._appointment_date

    @appointment_date.setter
    def appointment_date(self, appointment_date):
        """Sets the appointment_date of this OfficerObject.


        :param appointment_date: The appointment_date of this OfficerObject.
        :type appointment_date: date
        """

        self._appointment_date = appointment_date

    @property
    def court_details(self):
        """Gets the court_details of this OfficerObject.


        :return: The court_details of this OfficerObject.
        :rtype: CourtDetailsObject
        """
        return self._court_details

    @court_details.setter
    def court_details(self, court_details):
        """Sets the court_details of this OfficerObject.


        :param court_details: The court_details of this OfficerObject.
        :type court_details: CourtDetailsObject
        """

        self._court_details = court_details

    @property
    def doc_number(self):
        """Gets the doc_number of this OfficerObject.


        :return: The doc_number of this OfficerObject.
        :rtype: str
        """
        return self._doc_number

    @doc_number.setter
    def doc_number(self, doc_number):
        """Sets the doc_number of this OfficerObject.


        :param doc_number: The doc_number of this OfficerObject.
        :type doc_number: str
        """

        self._doc_number = doc_number

    @property
    def doc_number_qualifier(self):
        """Gets the doc_number_qualifier of this OfficerObject.


        :return: The doc_number_qualifier of this OfficerObject.
        :rtype: str
        """
        return self._doc_number_qualifier

    @doc_number_qualifier.setter
    def doc_number_qualifier(self, doc_number_qualifier):
        """Sets the doc_number_qualifier of this OfficerObject.


        :param doc_number_qualifier: The doc_number_qualifier of this OfficerObject.
        :type doc_number_qualifier: str
        """

        self._doc_number_qualifier = doc_number_qualifier

    @property
    def entity_id(self):
        """Gets the entity_id of this OfficerObject.


        :return: The entity_id of this OfficerObject.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this OfficerObject.


        :param entity_id: The entity_id of this OfficerObject.
        :type entity_id: str
        """

        self._entity_id = entity_id

    @property
    def status(self):
        """Gets the status of this OfficerObject.


        :return: The status of this OfficerObject.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this OfficerObject.


        :param status: The status of this OfficerObject.
        :type status: str
        """

        self._status = status

    @property
    def type(self):
        """Gets the type of this OfficerObject.


        :return: The type of this OfficerObject.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OfficerObject.


        :param type: The type of this OfficerObject.
        :type type: str
        """

        self._type = type

    @property
    def type_description(self):
        """Gets the type_description of this OfficerObject.


        :return: The type_description of this OfficerObject.
        :rtype: str
        """
        return self._type_description

    @type_description.setter
    def type_description(self, type_description):
        """Sets the type_description of this OfficerObject.


        :param type_description: The type_description of this OfficerObject.
        :type type_description: str
        """

        self._type_description = type_description
