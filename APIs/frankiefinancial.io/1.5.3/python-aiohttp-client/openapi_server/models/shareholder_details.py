# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ShareholderDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, all_info: str=None, currency: str=None, id: str=None, name: str=None, nationality: str=None, nominal_value: str=None, percentage: str=None, share_class: str=None, share_count: int=None, share_type: str=None, shareholder_type: str=None, total_share_count: int=None, total_share_value: int=None, total_shares: int=None):
        """ShareholderDetails - a model defined in OpenAPI

        :param address: The address of this ShareholderDetails.
        :param all_info: The all_info of this ShareholderDetails.
        :param currency: The currency of this ShareholderDetails.
        :param id: The id of this ShareholderDetails.
        :param name: The name of this ShareholderDetails.
        :param nationality: The nationality of this ShareholderDetails.
        :param nominal_value: The nominal_value of this ShareholderDetails.
        :param percentage: The percentage of this ShareholderDetails.
        :param share_class: The share_class of this ShareholderDetails.
        :param share_count: The share_count of this ShareholderDetails.
        :param share_type: The share_type of this ShareholderDetails.
        :param shareholder_type: The shareholder_type of this ShareholderDetails.
        :param total_share_count: The total_share_count of this ShareholderDetails.
        :param total_share_value: The total_share_value of this ShareholderDetails.
        :param total_shares: The total_shares of this ShareholderDetails.
        """
        self.openapi_types = {
            'address': str,
            'all_info': str,
            'currency': str,
            'id': str,
            'name': str,
            'nationality': str,
            'nominal_value': str,
            'percentage': str,
            'share_class': str,
            'share_count': int,
            'share_type': str,
            'shareholder_type': str,
            'total_share_count': int,
            'total_share_value': int,
            'total_shares': int
        }

        self.attribute_map = {
            'address': 'address',
            'all_info': 'allInfo',
            'currency': 'currency',
            'id': 'id',
            'name': 'name',
            'nationality': 'nationality',
            'nominal_value': 'nominalValue',
            'percentage': 'percentage',
            'share_class': 'shareClass',
            'share_count': 'shareCount',
            'share_type': 'shareType',
            'shareholder_type': 'shareholderType',
            'total_share_count': 'totalShareCount',
            'total_share_value': 'totalShareValue',
            'total_shares': 'totalShares'
        }

        self._address = address
        self._all_info = all_info
        self._currency = currency
        self._id = id
        self._name = name
        self._nationality = nationality
        self._nominal_value = nominal_value
        self._percentage = percentage
        self._share_class = share_class
        self._share_count = share_count
        self._share_type = share_type
        self._shareholder_type = shareholder_type
        self._total_share_count = total_share_count
        self._total_share_value = total_share_value
        self._total_shares = total_shares

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShareholderDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShareholderDetails of this ShareholderDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this ShareholderDetails.


        :return: The address of this ShareholderDetails.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this ShareholderDetails.


        :param address: The address of this ShareholderDetails.
        :type address: str
        """

        self._address = address

    @property
    def all_info(self):
        """Gets the all_info of this ShareholderDetails.


        :return: The all_info of this ShareholderDetails.
        :rtype: str
        """
        return self._all_info

    @all_info.setter
    def all_info(self, all_info):
        """Sets the all_info of this ShareholderDetails.


        :param all_info: The all_info of this ShareholderDetails.
        :type all_info: str
        """

        self._all_info = all_info

    @property
    def currency(self):
        """Gets the currency of this ShareholderDetails.


        :return: The currency of this ShareholderDetails.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this ShareholderDetails.


        :param currency: The currency of this ShareholderDetails.
        :type currency: str
        """

        self._currency = currency

    @property
    def id(self):
        """Gets the id of this ShareholderDetails.


        :return: The id of this ShareholderDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ShareholderDetails.


        :param id: The id of this ShareholderDetails.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ShareholderDetails.


        :return: The name of this ShareholderDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ShareholderDetails.


        :param name: The name of this ShareholderDetails.
        :type name: str
        """

        self._name = name

    @property
    def nationality(self):
        """Gets the nationality of this ShareholderDetails.


        :return: The nationality of this ShareholderDetails.
        :rtype: str
        """
        return self._nationality

    @nationality.setter
    def nationality(self, nationality):
        """Sets the nationality of this ShareholderDetails.


        :param nationality: The nationality of this ShareholderDetails.
        :type nationality: str
        """

        self._nationality = nationality

    @property
    def nominal_value(self):
        """Gets the nominal_value of this ShareholderDetails.


        :return: The nominal_value of this ShareholderDetails.
        :rtype: str
        """
        return self._nominal_value

    @nominal_value.setter
    def nominal_value(self, nominal_value):
        """Sets the nominal_value of this ShareholderDetails.


        :param nominal_value: The nominal_value of this ShareholderDetails.
        :type nominal_value: str
        """

        self._nominal_value = nominal_value

    @property
    def percentage(self):
        """Gets the percentage of this ShareholderDetails.


        :return: The percentage of this ShareholderDetails.
        :rtype: str
        """
        return self._percentage

    @percentage.setter
    def percentage(self, percentage):
        """Sets the percentage of this ShareholderDetails.


        :param percentage: The percentage of this ShareholderDetails.
        :type percentage: str
        """

        self._percentage = percentage

    @property
    def share_class(self):
        """Gets the share_class of this ShareholderDetails.


        :return: The share_class of this ShareholderDetails.
        :rtype: str
        """
        return self._share_class

    @share_class.setter
    def share_class(self, share_class):
        """Sets the share_class of this ShareholderDetails.


        :param share_class: The share_class of this ShareholderDetails.
        :type share_class: str
        """

        self._share_class = share_class

    @property
    def share_count(self):
        """Gets the share_count of this ShareholderDetails.


        :return: The share_count of this ShareholderDetails.
        :rtype: int
        """
        return self._share_count

    @share_count.setter
    def share_count(self, share_count):
        """Sets the share_count of this ShareholderDetails.


        :param share_count: The share_count of this ShareholderDetails.
        :type share_count: int
        """

        self._share_count = share_count

    @property
    def share_type(self):
        """Gets the share_type of this ShareholderDetails.


        :return: The share_type of this ShareholderDetails.
        :rtype: str
        """
        return self._share_type

    @share_type.setter
    def share_type(self, share_type):
        """Sets the share_type of this ShareholderDetails.


        :param share_type: The share_type of this ShareholderDetails.
        :type share_type: str
        """

        self._share_type = share_type

    @property
    def shareholder_type(self):
        """Gets the shareholder_type of this ShareholderDetails.


        :return: The shareholder_type of this ShareholderDetails.
        :rtype: str
        """
        return self._shareholder_type

    @shareholder_type.setter
    def shareholder_type(self, shareholder_type):
        """Sets the shareholder_type of this ShareholderDetails.


        :param shareholder_type: The shareholder_type of this ShareholderDetails.
        :type shareholder_type: str
        """

        self._shareholder_type = shareholder_type

    @property
    def total_share_count(self):
        """Gets the total_share_count of this ShareholderDetails.


        :return: The total_share_count of this ShareholderDetails.
        :rtype: int
        """
        return self._total_share_count

    @total_share_count.setter
    def total_share_count(self, total_share_count):
        """Sets the total_share_count of this ShareholderDetails.


        :param total_share_count: The total_share_count of this ShareholderDetails.
        :type total_share_count: int
        """

        self._total_share_count = total_share_count

    @property
    def total_share_value(self):
        """Gets the total_share_value of this ShareholderDetails.


        :return: The total_share_value of this ShareholderDetails.
        :rtype: int
        """
        return self._total_share_value

    @total_share_value.setter
    def total_share_value(self, total_share_value):
        """Sets the total_share_value of this ShareholderDetails.


        :param total_share_value: The total_share_value of this ShareholderDetails.
        :type total_share_value: int
        """

        self._total_share_value = total_share_value

    @property
    def total_shares(self):
        """Gets the total_shares of this ShareholderDetails.


        :return: The total_shares of this ShareholderDetails.
        :rtype: int
        """
        return self._total_shares

    @total_shares.setter
    def total_shares(self, total_shares):
        """Sets the total_shares of this ShareholderDetails.


        :param total_shares: The total_shares of this ShareholderDetails.
        :type total_shares: int
        """

        self._total_shares = total_shares
