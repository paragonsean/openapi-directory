# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.array_of_company_dto import ArrayOfCompanyDTO
from openapi_server import util


class InternationalBusinessSearchResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, companies: ArrayOfCompanyDTO=None, ib_continuation_key: str=None, ib_response_code: int=None, ib_response_details: str=None, ib_transaction_id: str=None, request_id: str=None):
        """InternationalBusinessSearchResponse - a model defined in OpenAPI

        :param companies: The companies of this InternationalBusinessSearchResponse.
        :param ib_continuation_key: The ib_continuation_key of this InternationalBusinessSearchResponse.
        :param ib_response_code: The ib_response_code of this InternationalBusinessSearchResponse.
        :param ib_response_details: The ib_response_details of this InternationalBusinessSearchResponse.
        :param ib_transaction_id: The ib_transaction_id of this InternationalBusinessSearchResponse.
        :param request_id: The request_id of this InternationalBusinessSearchResponse.
        """
        self.openapi_types = {
            'companies': ArrayOfCompanyDTO,
            'ib_continuation_key': str,
            'ib_response_code': int,
            'ib_response_details': str,
            'ib_transaction_id': str,
            'request_id': str
        }

        self.attribute_map = {
            'companies': 'Companies',
            'ib_continuation_key': 'ibContinuationKey',
            'ib_response_code': 'ibResponseCode',
            'ib_response_details': 'ibResponseDetails',
            'ib_transaction_id': 'ibTransactionId',
            'request_id': 'requestId'
        }

        self._companies = companies
        self._ib_continuation_key = ib_continuation_key
        self._ib_response_code = ib_response_code
        self._ib_response_details = ib_response_details
        self._ib_transaction_id = ib_transaction_id
        self._request_id = request_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InternationalBusinessSearchResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InternationalBusinessSearchResponse of this InternationalBusinessSearchResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def companies(self):
        """Gets the companies of this InternationalBusinessSearchResponse.


        :return: The companies of this InternationalBusinessSearchResponse.
        :rtype: ArrayOfCompanyDTO
        """
        return self._companies

    @companies.setter
    def companies(self, companies):
        """Sets the companies of this InternationalBusinessSearchResponse.


        :param companies: The companies of this InternationalBusinessSearchResponse.
        :type companies: ArrayOfCompanyDTO
        """

        self._companies = companies

    @property
    def ib_continuation_key(self):
        """Gets the ib_continuation_key of this InternationalBusinessSearchResponse.


        :return: The ib_continuation_key of this InternationalBusinessSearchResponse.
        :rtype: str
        """
        return self._ib_continuation_key

    @ib_continuation_key.setter
    def ib_continuation_key(self, ib_continuation_key):
        """Sets the ib_continuation_key of this InternationalBusinessSearchResponse.


        :param ib_continuation_key: The ib_continuation_key of this InternationalBusinessSearchResponse.
        :type ib_continuation_key: str
        """

        self._ib_continuation_key = ib_continuation_key

    @property
    def ib_response_code(self):
        """Gets the ib_response_code of this InternationalBusinessSearchResponse.

        service provider response code

        :return: The ib_response_code of this InternationalBusinessSearchResponse.
        :rtype: int
        """
        return self._ib_response_code

    @ib_response_code.setter
    def ib_response_code(self, ib_response_code):
        """Sets the ib_response_code of this InternationalBusinessSearchResponse.

        service provider response code

        :param ib_response_code: The ib_response_code of this InternationalBusinessSearchResponse.
        :type ib_response_code: int
        """

        self._ib_response_code = ib_response_code

    @property
    def ib_response_details(self):
        """Gets the ib_response_details of this InternationalBusinessSearchResponse.


        :return: The ib_response_details of this InternationalBusinessSearchResponse.
        :rtype: str
        """
        return self._ib_response_details

    @ib_response_details.setter
    def ib_response_details(self, ib_response_details):
        """Sets the ib_response_details of this InternationalBusinessSearchResponse.


        :param ib_response_details: The ib_response_details of this InternationalBusinessSearchResponse.
        :type ib_response_details: str
        """

        self._ib_response_details = ib_response_details

    @property
    def ib_transaction_id(self):
        """Gets the ib_transaction_id of this InternationalBusinessSearchResponse.

        service provider ID

        :return: The ib_transaction_id of this InternationalBusinessSearchResponse.
        :rtype: str
        """
        return self._ib_transaction_id

    @ib_transaction_id.setter
    def ib_transaction_id(self, ib_transaction_id):
        """Sets the ib_transaction_id of this InternationalBusinessSearchResponse.

        service provider ID

        :param ib_transaction_id: The ib_transaction_id of this InternationalBusinessSearchResponse.
        :type ib_transaction_id: str
        """

        self._ib_transaction_id = ib_transaction_id

    @property
    def request_id(self):
        """Gets the request_id of this InternationalBusinessSearchResponse.

        Unique identifier for every request. Can be used for tracking down answers with technical support.   Uses the ULID format (a time-based, sortable UUID)  Note: this will be different for every request. 

        :return: The request_id of this InternationalBusinessSearchResponse.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this InternationalBusinessSearchResponse.

        Unique identifier for every request. Can be used for tracking down answers with technical support.   Uses the ULID format (a time-based, sortable UUID)  Note: this will be different for every request. 

        :param request_id: The request_id of this InternationalBusinessSearchResponse.
        :type request_id: str
        """

        self._request_id = request_id
