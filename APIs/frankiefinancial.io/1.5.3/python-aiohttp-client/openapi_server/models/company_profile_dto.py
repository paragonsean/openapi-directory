# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.array_of_activity_dto import ArrayOfActivityDTO
from openapi_server.models.array_of_activity_declaration_dto import ArrayOfActivityDeclarationDTO
from openapi_server.models.array_of_address_dto import ArrayOfAddressDTO
from openapi_server.models.array_of_capital_dto import ArrayOfCapitalDTO
from openapi_server.models.array_of_string import ArrayOfString
from openapi_server.models.array_of_us_officer_dto import ArrayOfUSOfficerDTO
from openapi_server.models.director_and_share_details import DirectorAndShareDetails
from openapi_server.models.legal_form_dto import LegalFormDTO
from openapi_server import util


class CompanyProfileDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity: ArrayOfActivityDTO=None, activity_declaration: ArrayOfActivityDeclarationDTO=None, addresses: ArrayOfAddressDTO=None, agent_address: str=None, agent_name: str=None, aliases: ArrayOfString=None, appointment_date_of_official: str=None, capital: ArrayOfCapitalDTO=None, code: str=None, company_name_in_english: str=None, _date: str=None, email: str=None, fax_number: str=None, fiscal_code: str=None, foundation_date: str=None, functions: ArrayOfString=None, headquarters: str=None, key_figures: ArrayOfString=None, last_annual_account_date: str=None, legal_form: str=None, legal_form_declaration: str=None, legal_form_details: LegalFormDTO=None, legal_status: str=None, mailing_address: str=None, name: str=None, official: bool=None, registration_authority: str=None, registration_authority_code: str=None, registration_date: str=None, registration_number: str=None, signing_declaration: str=None, signing_declaration_description: str=None, signing_language: str=None, source: str=None, state_of_incorporation: str=None, telephone_number: str=None, vat_number: str=None, virtual_id: str=None, website_url: str=None, director_and_share_details: DirectorAndShareDetails=None, officers: ArrayOfUSOfficerDTO=None):
        """CompanyProfileDTO - a model defined in OpenAPI

        :param activity: The activity of this CompanyProfileDTO.
        :param activity_declaration: The activity_declaration of this CompanyProfileDTO.
        :param addresses: The addresses of this CompanyProfileDTO.
        :param agent_address: The agent_address of this CompanyProfileDTO.
        :param agent_name: The agent_name of this CompanyProfileDTO.
        :param aliases: The aliases of this CompanyProfileDTO.
        :param appointment_date_of_official: The appointment_date_of_official of this CompanyProfileDTO.
        :param capital: The capital of this CompanyProfileDTO.
        :param code: The code of this CompanyProfileDTO.
        :param company_name_in_english: The company_name_in_english of this CompanyProfileDTO.
        :param _date: The _date of this CompanyProfileDTO.
        :param email: The email of this CompanyProfileDTO.
        :param fax_number: The fax_number of this CompanyProfileDTO.
        :param fiscal_code: The fiscal_code of this CompanyProfileDTO.
        :param foundation_date: The foundation_date of this CompanyProfileDTO.
        :param functions: The functions of this CompanyProfileDTO.
        :param headquarters: The headquarters of this CompanyProfileDTO.
        :param key_figures: The key_figures of this CompanyProfileDTO.
        :param last_annual_account_date: The last_annual_account_date of this CompanyProfileDTO.
        :param legal_form: The legal_form of this CompanyProfileDTO.
        :param legal_form_declaration: The legal_form_declaration of this CompanyProfileDTO.
        :param legal_form_details: The legal_form_details of this CompanyProfileDTO.
        :param legal_status: The legal_status of this CompanyProfileDTO.
        :param mailing_address: The mailing_address of this CompanyProfileDTO.
        :param name: The name of this CompanyProfileDTO.
        :param official: The official of this CompanyProfileDTO.
        :param registration_authority: The registration_authority of this CompanyProfileDTO.
        :param registration_authority_code: The registration_authority_code of this CompanyProfileDTO.
        :param registration_date: The registration_date of this CompanyProfileDTO.
        :param registration_number: The registration_number of this CompanyProfileDTO.
        :param signing_declaration: The signing_declaration of this CompanyProfileDTO.
        :param signing_declaration_description: The signing_declaration_description of this CompanyProfileDTO.
        :param signing_language: The signing_language of this CompanyProfileDTO.
        :param source: The source of this CompanyProfileDTO.
        :param state_of_incorporation: The state_of_incorporation of this CompanyProfileDTO.
        :param telephone_number: The telephone_number of this CompanyProfileDTO.
        :param vat_number: The vat_number of this CompanyProfileDTO.
        :param virtual_id: The virtual_id of this CompanyProfileDTO.
        :param website_url: The website_url of this CompanyProfileDTO.
        :param director_and_share_details: The director_and_share_details of this CompanyProfileDTO.
        :param officers: The officers of this CompanyProfileDTO.
        """
        self.openapi_types = {
            'activity': ArrayOfActivityDTO,
            'activity_declaration': ArrayOfActivityDeclarationDTO,
            'addresses': ArrayOfAddressDTO,
            'agent_address': str,
            'agent_name': str,
            'aliases': ArrayOfString,
            'appointment_date_of_official': str,
            'capital': ArrayOfCapitalDTO,
            'code': str,
            'company_name_in_english': str,
            '_date': str,
            'email': str,
            'fax_number': str,
            'fiscal_code': str,
            'foundation_date': str,
            'functions': ArrayOfString,
            'headquarters': str,
            'key_figures': ArrayOfString,
            'last_annual_account_date': str,
            'legal_form': str,
            'legal_form_declaration': str,
            'legal_form_details': LegalFormDTO,
            'legal_status': str,
            'mailing_address': str,
            'name': str,
            'official': bool,
            'registration_authority': str,
            'registration_authority_code': str,
            'registration_date': str,
            'registration_number': str,
            'signing_declaration': str,
            'signing_declaration_description': str,
            'signing_language': str,
            'source': str,
            'state_of_incorporation': str,
            'telephone_number': str,
            'vat_number': str,
            'virtual_id': str,
            'website_url': str,
            'director_and_share_details': DirectorAndShareDetails,
            'officers': ArrayOfUSOfficerDTO
        }

        self.attribute_map = {
            'activity': 'Activity',
            'activity_declaration': 'ActivityDeclaration',
            'addresses': 'Addresses',
            'agent_address': 'AgentAddress',
            'agent_name': 'AgentName',
            'aliases': 'Aliases',
            'appointment_date_of_official': 'AppointmentDateOfOfficial',
            'capital': 'Capital',
            'code': 'Code',
            'company_name_in_english': 'CompanyNameInEnglish',
            '_date': 'Date',
            'email': 'Email',
            'fax_number': 'FaxNumber',
            'fiscal_code': 'FiscalCode',
            'foundation_date': 'FoundationDate',
            'functions': 'Functions',
            'headquarters': 'Headquarters',
            'key_figures': 'KeyFigures',
            'last_annual_account_date': 'LastAnnualAccountDate',
            'legal_form': 'LegalForm',
            'legal_form_declaration': 'LegalFormDeclaration',
            'legal_form_details': 'LegalFormDetails',
            'legal_status': 'LegalStatus',
            'mailing_address': 'MailingAddress',
            'name': 'Name',
            'official': 'Official',
            'registration_authority': 'RegistrationAuthority',
            'registration_authority_code': 'RegistrationAuthorityCode',
            'registration_date': 'RegistrationDate',
            'registration_number': 'RegistrationNumber',
            'signing_declaration': 'SigningDeclaration',
            'signing_declaration_description': 'SigningDeclarationDescription',
            'signing_language': 'SigningLanguage',
            'source': 'Source',
            'state_of_incorporation': 'StateOfIncorporation',
            'telephone_number': 'TelephoneNumber',
            'vat_number': 'VatNumber',
            'virtual_id': 'VirtualId',
            'website_url': 'WebsiteURL',
            'director_and_share_details': 'directorAndShareDetails',
            'officers': 'officers'
        }

        self._activity = activity
        self._activity_declaration = activity_declaration
        self._addresses = addresses
        self._agent_address = agent_address
        self._agent_name = agent_name
        self._aliases = aliases
        self._appointment_date_of_official = appointment_date_of_official
        self._capital = capital
        self._code = code
        self._company_name_in_english = company_name_in_english
        self.__date = _date
        self._email = email
        self._fax_number = fax_number
        self._fiscal_code = fiscal_code
        self._foundation_date = foundation_date
        self._functions = functions
        self._headquarters = headquarters
        self._key_figures = key_figures
        self._last_annual_account_date = last_annual_account_date
        self._legal_form = legal_form
        self._legal_form_declaration = legal_form_declaration
        self._legal_form_details = legal_form_details
        self._legal_status = legal_status
        self._mailing_address = mailing_address
        self._name = name
        self._official = official
        self._registration_authority = registration_authority
        self._registration_authority_code = registration_authority_code
        self._registration_date = registration_date
        self._registration_number = registration_number
        self._signing_declaration = signing_declaration
        self._signing_declaration_description = signing_declaration_description
        self._signing_language = signing_language
        self._source = source
        self._state_of_incorporation = state_of_incorporation
        self._telephone_number = telephone_number
        self._vat_number = vat_number
        self._virtual_id = virtual_id
        self._website_url = website_url
        self._director_and_share_details = director_and_share_details
        self._officers = officers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompanyProfileDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompanyProfileDTO of this CompanyProfileDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity(self):
        """Gets the activity of this CompanyProfileDTO.


        :return: The activity of this CompanyProfileDTO.
        :rtype: ArrayOfActivityDTO
        """
        return self._activity

    @activity.setter
    def activity(self, activity):
        """Sets the activity of this CompanyProfileDTO.


        :param activity: The activity of this CompanyProfileDTO.
        :type activity: ArrayOfActivityDTO
        """

        self._activity = activity

    @property
    def activity_declaration(self):
        """Gets the activity_declaration of this CompanyProfileDTO.


        :return: The activity_declaration of this CompanyProfileDTO.
        :rtype: ArrayOfActivityDeclarationDTO
        """
        return self._activity_declaration

    @activity_declaration.setter
    def activity_declaration(self, activity_declaration):
        """Sets the activity_declaration of this CompanyProfileDTO.


        :param activity_declaration: The activity_declaration of this CompanyProfileDTO.
        :type activity_declaration: ArrayOfActivityDeclarationDTO
        """

        self._activity_declaration = activity_declaration

    @property
    def addresses(self):
        """Gets the addresses of this CompanyProfileDTO.


        :return: The addresses of this CompanyProfileDTO.
        :rtype: ArrayOfAddressDTO
        """
        return self._addresses

    @addresses.setter
    def addresses(self, addresses):
        """Sets the addresses of this CompanyProfileDTO.


        :param addresses: The addresses of this CompanyProfileDTO.
        :type addresses: ArrayOfAddressDTO
        """

        self._addresses = addresses

    @property
    def agent_address(self):
        """Gets the agent_address of this CompanyProfileDTO.


        :return: The agent_address of this CompanyProfileDTO.
        :rtype: str
        """
        return self._agent_address

    @agent_address.setter
    def agent_address(self, agent_address):
        """Sets the agent_address of this CompanyProfileDTO.


        :param agent_address: The agent_address of this CompanyProfileDTO.
        :type agent_address: str
        """

        self._agent_address = agent_address

    @property
    def agent_name(self):
        """Gets the agent_name of this CompanyProfileDTO.


        :return: The agent_name of this CompanyProfileDTO.
        :rtype: str
        """
        return self._agent_name

    @agent_name.setter
    def agent_name(self, agent_name):
        """Sets the agent_name of this CompanyProfileDTO.


        :param agent_name: The agent_name of this CompanyProfileDTO.
        :type agent_name: str
        """

        self._agent_name = agent_name

    @property
    def aliases(self):
        """Gets the aliases of this CompanyProfileDTO.


        :return: The aliases of this CompanyProfileDTO.
        :rtype: ArrayOfString
        """
        return self._aliases

    @aliases.setter
    def aliases(self, aliases):
        """Sets the aliases of this CompanyProfileDTO.


        :param aliases: The aliases of this CompanyProfileDTO.
        :type aliases: ArrayOfString
        """

        self._aliases = aliases

    @property
    def appointment_date_of_official(self):
        """Gets the appointment_date_of_official of this CompanyProfileDTO.


        :return: The appointment_date_of_official of this CompanyProfileDTO.
        :rtype: str
        """
        return self._appointment_date_of_official

    @appointment_date_of_official.setter
    def appointment_date_of_official(self, appointment_date_of_official):
        """Sets the appointment_date_of_official of this CompanyProfileDTO.


        :param appointment_date_of_official: The appointment_date_of_official of this CompanyProfileDTO.
        :type appointment_date_of_official: str
        """

        self._appointment_date_of_official = appointment_date_of_official

    @property
    def capital(self):
        """Gets the capital of this CompanyProfileDTO.


        :return: The capital of this CompanyProfileDTO.
        :rtype: ArrayOfCapitalDTO
        """
        return self._capital

    @capital.setter
    def capital(self, capital):
        """Sets the capital of this CompanyProfileDTO.


        :param capital: The capital of this CompanyProfileDTO.
        :type capital: ArrayOfCapitalDTO
        """

        self._capital = capital

    @property
    def code(self):
        """Gets the code of this CompanyProfileDTO.


        :return: The code of this CompanyProfileDTO.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this CompanyProfileDTO.


        :param code: The code of this CompanyProfileDTO.
        :type code: str
        """

        self._code = code

    @property
    def company_name_in_english(self):
        """Gets the company_name_in_english of this CompanyProfileDTO.


        :return: The company_name_in_english of this CompanyProfileDTO.
        :rtype: str
        """
        return self._company_name_in_english

    @company_name_in_english.setter
    def company_name_in_english(self, company_name_in_english):
        """Sets the company_name_in_english of this CompanyProfileDTO.


        :param company_name_in_english: The company_name_in_english of this CompanyProfileDTO.
        :type company_name_in_english: str
        """

        self._company_name_in_english = company_name_in_english

    @property
    def _date(self):
        """Gets the _date of this CompanyProfileDTO.


        :return: The _date of this CompanyProfileDTO.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this CompanyProfileDTO.


        :param _date: The _date of this CompanyProfileDTO.
        :type _date: str
        """

        self.__date = _date

    @property
    def email(self):
        """Gets the email of this CompanyProfileDTO.


        :return: The email of this CompanyProfileDTO.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this CompanyProfileDTO.


        :param email: The email of this CompanyProfileDTO.
        :type email: str
        """

        self._email = email

    @property
    def fax_number(self):
        """Gets the fax_number of this CompanyProfileDTO.


        :return: The fax_number of this CompanyProfileDTO.
        :rtype: str
        """
        return self._fax_number

    @fax_number.setter
    def fax_number(self, fax_number):
        """Sets the fax_number of this CompanyProfileDTO.


        :param fax_number: The fax_number of this CompanyProfileDTO.
        :type fax_number: str
        """

        self._fax_number = fax_number

    @property
    def fiscal_code(self):
        """Gets the fiscal_code of this CompanyProfileDTO.


        :return: The fiscal_code of this CompanyProfileDTO.
        :rtype: str
        """
        return self._fiscal_code

    @fiscal_code.setter
    def fiscal_code(self, fiscal_code):
        """Sets the fiscal_code of this CompanyProfileDTO.


        :param fiscal_code: The fiscal_code of this CompanyProfileDTO.
        :type fiscal_code: str
        """

        self._fiscal_code = fiscal_code

    @property
    def foundation_date(self):
        """Gets the foundation_date of this CompanyProfileDTO.


        :return: The foundation_date of this CompanyProfileDTO.
        :rtype: str
        """
        return self._foundation_date

    @foundation_date.setter
    def foundation_date(self, foundation_date):
        """Sets the foundation_date of this CompanyProfileDTO.


        :param foundation_date: The foundation_date of this CompanyProfileDTO.
        :type foundation_date: str
        """

        self._foundation_date = foundation_date

    @property
    def functions(self):
        """Gets the functions of this CompanyProfileDTO.


        :return: The functions of this CompanyProfileDTO.
        :rtype: ArrayOfString
        """
        return self._functions

    @functions.setter
    def functions(self, functions):
        """Sets the functions of this CompanyProfileDTO.


        :param functions: The functions of this CompanyProfileDTO.
        :type functions: ArrayOfString
        """

        self._functions = functions

    @property
    def headquarters(self):
        """Gets the headquarters of this CompanyProfileDTO.


        :return: The headquarters of this CompanyProfileDTO.
        :rtype: str
        """
        return self._headquarters

    @headquarters.setter
    def headquarters(self, headquarters):
        """Sets the headquarters of this CompanyProfileDTO.


        :param headquarters: The headquarters of this CompanyProfileDTO.
        :type headquarters: str
        """

        self._headquarters = headquarters

    @property
    def key_figures(self):
        """Gets the key_figures of this CompanyProfileDTO.


        :return: The key_figures of this CompanyProfileDTO.
        :rtype: ArrayOfString
        """
        return self._key_figures

    @key_figures.setter
    def key_figures(self, key_figures):
        """Sets the key_figures of this CompanyProfileDTO.


        :param key_figures: The key_figures of this CompanyProfileDTO.
        :type key_figures: ArrayOfString
        """

        self._key_figures = key_figures

    @property
    def last_annual_account_date(self):
        """Gets the last_annual_account_date of this CompanyProfileDTO.


        :return: The last_annual_account_date of this CompanyProfileDTO.
        :rtype: str
        """
        return self._last_annual_account_date

    @last_annual_account_date.setter
    def last_annual_account_date(self, last_annual_account_date):
        """Sets the last_annual_account_date of this CompanyProfileDTO.


        :param last_annual_account_date: The last_annual_account_date of this CompanyProfileDTO.
        :type last_annual_account_date: str
        """

        self._last_annual_account_date = last_annual_account_date

    @property
    def legal_form(self):
        """Gets the legal_form of this CompanyProfileDTO.


        :return: The legal_form of this CompanyProfileDTO.
        :rtype: str
        """
        return self._legal_form

    @legal_form.setter
    def legal_form(self, legal_form):
        """Sets the legal_form of this CompanyProfileDTO.


        :param legal_form: The legal_form of this CompanyProfileDTO.
        :type legal_form: str
        """

        self._legal_form = legal_form

    @property
    def legal_form_declaration(self):
        """Gets the legal_form_declaration of this CompanyProfileDTO.


        :return: The legal_form_declaration of this CompanyProfileDTO.
        :rtype: str
        """
        return self._legal_form_declaration

    @legal_form_declaration.setter
    def legal_form_declaration(self, legal_form_declaration):
        """Sets the legal_form_declaration of this CompanyProfileDTO.


        :param legal_form_declaration: The legal_form_declaration of this CompanyProfileDTO.
        :type legal_form_declaration: str
        """

        self._legal_form_declaration = legal_form_declaration

    @property
    def legal_form_details(self):
        """Gets the legal_form_details of this CompanyProfileDTO.


        :return: The legal_form_details of this CompanyProfileDTO.
        :rtype: LegalFormDTO
        """
        return self._legal_form_details

    @legal_form_details.setter
    def legal_form_details(self, legal_form_details):
        """Sets the legal_form_details of this CompanyProfileDTO.


        :param legal_form_details: The legal_form_details of this CompanyProfileDTO.
        :type legal_form_details: LegalFormDTO
        """

        self._legal_form_details = legal_form_details

    @property
    def legal_status(self):
        """Gets the legal_status of this CompanyProfileDTO.


        :return: The legal_status of this CompanyProfileDTO.
        :rtype: str
        """
        return self._legal_status

    @legal_status.setter
    def legal_status(self, legal_status):
        """Sets the legal_status of this CompanyProfileDTO.


        :param legal_status: The legal_status of this CompanyProfileDTO.
        :type legal_status: str
        """

        self._legal_status = legal_status

    @property
    def mailing_address(self):
        """Gets the mailing_address of this CompanyProfileDTO.


        :return: The mailing_address of this CompanyProfileDTO.
        :rtype: str
        """
        return self._mailing_address

    @mailing_address.setter
    def mailing_address(self, mailing_address):
        """Sets the mailing_address of this CompanyProfileDTO.


        :param mailing_address: The mailing_address of this CompanyProfileDTO.
        :type mailing_address: str
        """

        self._mailing_address = mailing_address

    @property
    def name(self):
        """Gets the name of this CompanyProfileDTO.


        :return: The name of this CompanyProfileDTO.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CompanyProfileDTO.


        :param name: The name of this CompanyProfileDTO.
        :type name: str
        """

        self._name = name

    @property
    def official(self):
        """Gets the official of this CompanyProfileDTO.


        :return: The official of this CompanyProfileDTO.
        :rtype: bool
        """
        return self._official

    @official.setter
    def official(self, official):
        """Sets the official of this CompanyProfileDTO.


        :param official: The official of this CompanyProfileDTO.
        :type official: bool
        """

        self._official = official

    @property
    def registration_authority(self):
        """Gets the registration_authority of this CompanyProfileDTO.


        :return: The registration_authority of this CompanyProfileDTO.
        :rtype: str
        """
        return self._registration_authority

    @registration_authority.setter
    def registration_authority(self, registration_authority):
        """Sets the registration_authority of this CompanyProfileDTO.


        :param registration_authority: The registration_authority of this CompanyProfileDTO.
        :type registration_authority: str
        """

        self._registration_authority = registration_authority

    @property
    def registration_authority_code(self):
        """Gets the registration_authority_code of this CompanyProfileDTO.


        :return: The registration_authority_code of this CompanyProfileDTO.
        :rtype: str
        """
        return self._registration_authority_code

    @registration_authority_code.setter
    def registration_authority_code(self, registration_authority_code):
        """Sets the registration_authority_code of this CompanyProfileDTO.


        :param registration_authority_code: The registration_authority_code of this CompanyProfileDTO.
        :type registration_authority_code: str
        """

        self._registration_authority_code = registration_authority_code

    @property
    def registration_date(self):
        """Gets the registration_date of this CompanyProfileDTO.


        :return: The registration_date of this CompanyProfileDTO.
        :rtype: str
        """
        return self._registration_date

    @registration_date.setter
    def registration_date(self, registration_date):
        """Sets the registration_date of this CompanyProfileDTO.


        :param registration_date: The registration_date of this CompanyProfileDTO.
        :type registration_date: str
        """

        self._registration_date = registration_date

    @property
    def registration_number(self):
        """Gets the registration_number of this CompanyProfileDTO.


        :return: The registration_number of this CompanyProfileDTO.
        :rtype: str
        """
        return self._registration_number

    @registration_number.setter
    def registration_number(self, registration_number):
        """Sets the registration_number of this CompanyProfileDTO.


        :param registration_number: The registration_number of this CompanyProfileDTO.
        :type registration_number: str
        """

        self._registration_number = registration_number

    @property
    def signing_declaration(self):
        """Gets the signing_declaration of this CompanyProfileDTO.


        :return: The signing_declaration of this CompanyProfileDTO.
        :rtype: str
        """
        return self._signing_declaration

    @signing_declaration.setter
    def signing_declaration(self, signing_declaration):
        """Sets the signing_declaration of this CompanyProfileDTO.


        :param signing_declaration: The signing_declaration of this CompanyProfileDTO.
        :type signing_declaration: str
        """

        self._signing_declaration = signing_declaration

    @property
    def signing_declaration_description(self):
        """Gets the signing_declaration_description of this CompanyProfileDTO.


        :return: The signing_declaration_description of this CompanyProfileDTO.
        :rtype: str
        """
        return self._signing_declaration_description

    @signing_declaration_description.setter
    def signing_declaration_description(self, signing_declaration_description):
        """Sets the signing_declaration_description of this CompanyProfileDTO.


        :param signing_declaration_description: The signing_declaration_description of this CompanyProfileDTO.
        :type signing_declaration_description: str
        """

        self._signing_declaration_description = signing_declaration_description

    @property
    def signing_language(self):
        """Gets the signing_language of this CompanyProfileDTO.


        :return: The signing_language of this CompanyProfileDTO.
        :rtype: str
        """
        return self._signing_language

    @signing_language.setter
    def signing_language(self, signing_language):
        """Sets the signing_language of this CompanyProfileDTO.


        :param signing_language: The signing_language of this CompanyProfileDTO.
        :type signing_language: str
        """

        self._signing_language = signing_language

    @property
    def source(self):
        """Gets the source of this CompanyProfileDTO.


        :return: The source of this CompanyProfileDTO.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this CompanyProfileDTO.


        :param source: The source of this CompanyProfileDTO.
        :type source: str
        """

        self._source = source

    @property
    def state_of_incorporation(self):
        """Gets the state_of_incorporation of this CompanyProfileDTO.


        :return: The state_of_incorporation of this CompanyProfileDTO.
        :rtype: str
        """
        return self._state_of_incorporation

    @state_of_incorporation.setter
    def state_of_incorporation(self, state_of_incorporation):
        """Sets the state_of_incorporation of this CompanyProfileDTO.


        :param state_of_incorporation: The state_of_incorporation of this CompanyProfileDTO.
        :type state_of_incorporation: str
        """

        self._state_of_incorporation = state_of_incorporation

    @property
    def telephone_number(self):
        """Gets the telephone_number of this CompanyProfileDTO.


        :return: The telephone_number of this CompanyProfileDTO.
        :rtype: str
        """
        return self._telephone_number

    @telephone_number.setter
    def telephone_number(self, telephone_number):
        """Sets the telephone_number of this CompanyProfileDTO.


        :param telephone_number: The telephone_number of this CompanyProfileDTO.
        :type telephone_number: str
        """

        self._telephone_number = telephone_number

    @property
    def vat_number(self):
        """Gets the vat_number of this CompanyProfileDTO.


        :return: The vat_number of this CompanyProfileDTO.
        :rtype: str
        """
        return self._vat_number

    @vat_number.setter
    def vat_number(self, vat_number):
        """Sets the vat_number of this CompanyProfileDTO.


        :param vat_number: The vat_number of this CompanyProfileDTO.
        :type vat_number: str
        """

        self._vat_number = vat_number

    @property
    def virtual_id(self):
        """Gets the virtual_id of this CompanyProfileDTO.


        :return: The virtual_id of this CompanyProfileDTO.
        :rtype: str
        """
        return self._virtual_id

    @virtual_id.setter
    def virtual_id(self, virtual_id):
        """Sets the virtual_id of this CompanyProfileDTO.


        :param virtual_id: The virtual_id of this CompanyProfileDTO.
        :type virtual_id: str
        """

        self._virtual_id = virtual_id

    @property
    def website_url(self):
        """Gets the website_url of this CompanyProfileDTO.


        :return: The website_url of this CompanyProfileDTO.
        :rtype: str
        """
        return self._website_url

    @website_url.setter
    def website_url(self, website_url):
        """Sets the website_url of this CompanyProfileDTO.


        :param website_url: The website_url of this CompanyProfileDTO.
        :type website_url: str
        """

        self._website_url = website_url

    @property
    def director_and_share_details(self):
        """Gets the director_and_share_details of this CompanyProfileDTO.


        :return: The director_and_share_details of this CompanyProfileDTO.
        :rtype: DirectorAndShareDetails
        """
        return self._director_and_share_details

    @director_and_share_details.setter
    def director_and_share_details(self, director_and_share_details):
        """Sets the director_and_share_details of this CompanyProfileDTO.


        :param director_and_share_details: The director_and_share_details of this CompanyProfileDTO.
        :type director_and_share_details: DirectorAndShareDetails
        """

        self._director_and_share_details = director_and_share_details

    @property
    def officers(self):
        """Gets the officers of this CompanyProfileDTO.


        :return: The officers of this CompanyProfileDTO.
        :rtype: ArrayOfUSOfficerDTO
        """
        return self._officers

    @officers.setter
    def officers(self, officers):
        """Sets the officers of this CompanyProfileDTO.


        :param officers: The officers of this CompanyProfileDTO.
        :type officers: ArrayOfUSOfficerDTO
        """

        self._officers = officers
