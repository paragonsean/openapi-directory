# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.credit_score_object import CreditScoreObject
from openapi_server import util


class ReportCreditScoreCreditScore(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, abn: str=None, acn: str=None, description: str=None, item_code: str=None, scores: CreditScoreObject=None):
        """ReportCreditScoreCreditScore - a model defined in OpenAPI

        :param abn: The abn of this ReportCreditScoreCreditScore.
        :param acn: The acn of this ReportCreditScoreCreditScore.
        :param description: The description of this ReportCreditScoreCreditScore.
        :param item_code: The item_code of this ReportCreditScoreCreditScore.
        :param scores: The scores of this ReportCreditScoreCreditScore.
        """
        self.openapi_types = {
            'abn': str,
            'acn': str,
            'description': str,
            'item_code': str,
            'scores': CreditScoreObject
        }

        self.attribute_map = {
            'abn': 'abn',
            'acn': 'acn',
            'description': 'description',
            'item_code': 'itemCode',
            'scores': 'scores'
        }

        self._abn = abn
        self._acn = acn
        self._description = description
        self._item_code = item_code
        self._scores = scores

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportCreditScoreCreditScore':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportCreditScore_creditScore of this ReportCreditScoreCreditScore.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def abn(self):
        """Gets the abn of this ReportCreditScoreCreditScore.


        :return: The abn of this ReportCreditScoreCreditScore.
        :rtype: str
        """
        return self._abn

    @abn.setter
    def abn(self, abn):
        """Sets the abn of this ReportCreditScoreCreditScore.


        :param abn: The abn of this ReportCreditScoreCreditScore.
        :type abn: str
        """

        self._abn = abn

    @property
    def acn(self):
        """Gets the acn of this ReportCreditScoreCreditScore.


        :return: The acn of this ReportCreditScoreCreditScore.
        :rtype: str
        """
        return self._acn

    @acn.setter
    def acn(self, acn):
        """Sets the acn of this ReportCreditScoreCreditScore.


        :param acn: The acn of this ReportCreditScoreCreditScore.
        :type acn: str
        """

        self._acn = acn

    @property
    def description(self):
        """Gets the description of this ReportCreditScoreCreditScore.


        :return: The description of this ReportCreditScoreCreditScore.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ReportCreditScoreCreditScore.


        :param description: The description of this ReportCreditScoreCreditScore.
        :type description: str
        """

        self._description = description

    @property
    def item_code(self):
        """Gets the item_code of this ReportCreditScoreCreditScore.


        :return: The item_code of this ReportCreditScoreCreditScore.
        :rtype: str
        """
        return self._item_code

    @item_code.setter
    def item_code(self, item_code):
        """Sets the item_code of this ReportCreditScoreCreditScore.


        :param item_code: The item_code of this ReportCreditScoreCreditScore.
        :type item_code: str
        """

        self._item_code = item_code

    @property
    def scores(self):
        """Gets the scores of this ReportCreditScoreCreditScore.


        :return: The scores of this ReportCreditScoreCreditScore.
        :rtype: CreditScoreObject
        """
        return self._scores

    @scores.setter
    def scores(self, scores):
        """Sets the scores of this ReportCreditScoreCreditScore.


        :param scores: The scores of this ReportCreditScoreCreditScore.
        :type scores: CreditScoreObject
        """

        self._scores = scores
