# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.director import Director
from openapi_server import util


class ArrayOfDirector(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, director: List[Director]=None):
        """ArrayOfDirector - a model defined in OpenAPI

        :param director: The director of this ArrayOfDirector.
        """
        self.openapi_types = {
            'director': List[Director]
        }

        self.attribute_map = {
            'director': 'Director'
        }

        self._director = director

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArrayOfDirector':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArrayOfDirector of this ArrayOfDirector.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def director(self):
        """Gets the director of this ArrayOfDirector.


        :return: The director of this ArrayOfDirector.
        :rtype: List[Director]
        """
        return self._director

    @director.setter
    def director(self, director):
        """Sets the director of this ArrayOfDirector.


        :param director: The director of this ArrayOfDirector.
        :type director: List[Director]
        """

        self._director = director
