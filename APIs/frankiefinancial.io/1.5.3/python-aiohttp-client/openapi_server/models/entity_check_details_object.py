# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device_check_details_object import DeviceCheckDetailsObject
from openapi_server.models.entity_object import EntityObject
from openapi_server import util


class EntityCheckDetailsObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_check_details: List[DeviceCheckDetailsObject]=None, entity: EntityObject=None):
        """EntityCheckDetailsObject - a model defined in OpenAPI

        :param device_check_details: The device_check_details of this EntityCheckDetailsObject.
        :param entity: The entity of this EntityCheckDetailsObject.
        """
        self.openapi_types = {
            'device_check_details': List[DeviceCheckDetailsObject],
            'entity': EntityObject
        }

        self.attribute_map = {
            'device_check_details': 'deviceCheckDetails',
            'entity': 'entity'
        }

        self._device_check_details = device_check_details
        self._entity = entity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EntityCheckDetailsObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EntityCheckDetailsObject of this EntityCheckDetailsObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_check_details(self):
        """Gets the device_check_details of this EntityCheckDetailsObject.


        :return: The device_check_details of this EntityCheckDetailsObject.
        :rtype: List[DeviceCheckDetailsObject]
        """
        return self._device_check_details

    @device_check_details.setter
    def device_check_details(self, device_check_details):
        """Sets the device_check_details of this EntityCheckDetailsObject.


        :param device_check_details: The device_check_details of this EntityCheckDetailsObject.
        :type device_check_details: List[DeviceCheckDetailsObject]
        """

        self._device_check_details = device_check_details

    @property
    def entity(self):
        """Gets the entity of this EntityCheckDetailsObject.


        :return: The entity of this EntityCheckDetailsObject.
        :rtype: EntityObject
        """
        return self._entity

    @entity.setter
    def entity(self, entity):
        """Sets the entity of this EntityCheckDetailsObject.


        :param entity: The entity of this EntityCheckDetailsObject.
        :type entity: EntityObject
        """
        if entity is None:
            raise ValueError("Invalid value for `entity`, must not be `None`")

        self._entity = entity
