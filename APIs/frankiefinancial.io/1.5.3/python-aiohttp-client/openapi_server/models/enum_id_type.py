# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnumIdType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    OTHER = 'OTHER'
    DRIVERS_LICENCE = 'DRIVERS_LICENCE'
    PASSPORT = 'PASSPORT'
    VISA = 'VISA'
    IMMIGRATION = 'IMMIGRATION'
    NATIONAL_ID = 'NATIONAL_ID'
    TAX_ID = 'TAX_ID'
    NATIONAL_HEALTH_ID = 'NATIONAL_HEALTH_ID'
    CONCESSION = 'CONCESSION'
    HEALTH_CONCESSION = 'HEALTH_CONCESSION'
    PENSION = 'PENSION'
    MILITARY_ID = 'MILITARY_ID'
    BIRTH_CERT = 'BIRTH_CERT'
    CITIZENSHIP = 'CITIZENSHIP'
    MARRIAGE_CERT = 'MARRIAGE_CERT'
    DEATH_CERT = 'DEATH_CERT'
    NAME_CHANGE = 'NAME_CHANGE'
    MOBILE_PHONE = 'MOBILE_PHONE'
    UTILITY_BILL = 'UTILITY_BILL'
    BANK_STATEMENT = 'BANK_STATEMENT'
    BANK_ACCOUNT = 'BANK_ACCOUNT'
    INTENT_PROOF = 'INTENT_PROOF'
    ATTESTATION = 'ATTESTATION'
    SELF_IMAGE = 'SELF_IMAGE'
    EMAIL_ADDRESS = 'EMAIL_ADDRESS'
    MSISDN = 'MSISDN'
    DEVICE = 'DEVICE'
    VEHICLE_REGISTRATION = 'VEHICLE_REGISTRATION'
    EXTERNAL_ADMIN = 'EXTERNAL_ADMIN'
    CHARGES = 'CHARGES'
    PRE_ASIC = 'PRE_ASIC'
    ANNUAL_RETURN = 'ANNUAL_RETURN'
    REPORT = 'REPORT'
    CHECK_RESULTS = 'CHECK_RESULTS'

    def __init__(self):
        """EnumIdType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnumIdType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The enumIdType of this EnumIdType.
        """
        return util.deserialize_model(dikt, cls)
