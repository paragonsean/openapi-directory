# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InsolvencyNotice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: datetime=None, id: str=None, lastmod: datetime=None, publisher: str=None, reported_by: str=None, ruling: str=None, title: str=None):
        """InsolvencyNotice - a model defined in OpenAPI

        :param _date: The _date of this InsolvencyNotice.
        :param id: The id of this InsolvencyNotice.
        :param lastmod: The lastmod of this InsolvencyNotice.
        :param publisher: The publisher of this InsolvencyNotice.
        :param reported_by: The reported_by of this InsolvencyNotice.
        :param ruling: The ruling of this InsolvencyNotice.
        :param title: The title of this InsolvencyNotice.
        """
        self.openapi_types = {
            '_date': datetime,
            'id': str,
            'lastmod': datetime,
            'publisher': str,
            'reported_by': str,
            'ruling': str,
            'title': str
        }

        self.attribute_map = {
            '_date': 'date',
            'id': 'id',
            'lastmod': 'lastmod',
            'publisher': 'publisher',
            'reported_by': 'reportedBy',
            'ruling': 'ruling',
            'title': 'title'
        }

        self.__date = _date
        self._id = id
        self._lastmod = lastmod
        self._publisher = publisher
        self._reported_by = reported_by
        self._ruling = ruling
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InsolvencyNotice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InsolvencyNotice of this InsolvencyNotice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this InsolvencyNotice.


        :return: The _date of this InsolvencyNotice.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this InsolvencyNotice.


        :param _date: The _date of this InsolvencyNotice.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def id(self):
        """Gets the id of this InsolvencyNotice.


        :return: The id of this InsolvencyNotice.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InsolvencyNotice.


        :param id: The id of this InsolvencyNotice.
        :type id: str
        """

        self._id = id

    @property
    def lastmod(self):
        """Gets the lastmod of this InsolvencyNotice.


        :return: The lastmod of this InsolvencyNotice.
        :rtype: datetime
        """
        return self._lastmod

    @lastmod.setter
    def lastmod(self, lastmod):
        """Sets the lastmod of this InsolvencyNotice.


        :param lastmod: The lastmod of this InsolvencyNotice.
        :type lastmod: datetime
        """

        self._lastmod = lastmod

    @property
    def publisher(self):
        """Gets the publisher of this InsolvencyNotice.


        :return: The publisher of this InsolvencyNotice.
        :rtype: str
        """
        return self._publisher

    @publisher.setter
    def publisher(self, publisher):
        """Sets the publisher of this InsolvencyNotice.


        :param publisher: The publisher of this InsolvencyNotice.
        :type publisher: str
        """

        self._publisher = publisher

    @property
    def reported_by(self):
        """Gets the reported_by of this InsolvencyNotice.


        :return: The reported_by of this InsolvencyNotice.
        :rtype: str
        """
        return self._reported_by

    @reported_by.setter
    def reported_by(self, reported_by):
        """Sets the reported_by of this InsolvencyNotice.


        :param reported_by: The reported_by of this InsolvencyNotice.
        :type reported_by: str
        """

        self._reported_by = reported_by

    @property
    def ruling(self):
        """Gets the ruling of this InsolvencyNotice.


        :return: The ruling of this InsolvencyNotice.
        :rtype: str
        """
        return self._ruling

    @ruling.setter
    def ruling(self, ruling):
        """Sets the ruling of this InsolvencyNotice.


        :param ruling: The ruling of this InsolvencyNotice.
        :type ruling: str
        """

        self._ruling = ruling

    @property
    def title(self):
        """Gets the title of this InsolvencyNotice.


        :return: The title of this InsolvencyNotice.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this InsolvencyNotice.


        :param title: The title of this InsolvencyNotice.
        :type title: str
        """

        self._title = title
