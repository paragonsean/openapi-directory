# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.name_value_description import NameValueDescription
from openapi_server import util


class Fees(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fee_info: str=None, name: str=None, value: List[NameValueDescription]=None):
        """Fees - a model defined in OpenAPI

        :param additional_fee_info: The additional_fee_info of this Fees.
        :param name: The name of this Fees.
        :param value: The value of this Fees.
        """
        self.openapi_types = {
            'additional_fee_info': str,
            'name': str,
            'value': List[NameValueDescription]
        }

        self.attribute_map = {
            'additional_fee_info': 'additionalFeeInfo',
            'name': 'name',
            'value': 'value'
        }

        self._additional_fee_info = additional_fee_info
        self._name = name
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Fees':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Fees of this Fees.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fee_info(self):
        """Gets the additional_fee_info of this Fees.

        Any additional fee information for the plan

        :return: The additional_fee_info of this Fees.
        :rtype: str
        """
        return self._additional_fee_info

    @additional_fee_info.setter
    def additional_fee_info(self, additional_fee_info):
        """Sets the additional_fee_info of this Fees.

        Any additional fee information for the plan

        :param additional_fee_info: The additional_fee_info of this Fees.
        :type additional_fee_info: str
        """

        self._additional_fee_info = additional_fee_info

    @property
    def name(self):
        """Gets the name of this Fees.

        Name of this section when rendering

        :return: The name of this Fees.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Fees.

        Name of this section when rendering

        :param name: The name of this Fees.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def value(self):
        """Gets the value of this Fees.

        Fee information for the plan

        :return: The value of this Fees.
        :rtype: List[NameValueDescription]
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Fees.

        Fee information for the plan

        :param value: The value of this Fees.
        :type value: List[NameValueDescription]
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")

        self._value = value
