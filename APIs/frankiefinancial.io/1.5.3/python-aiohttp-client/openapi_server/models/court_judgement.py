# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CourtJudgement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: str=None, action_date: datetime=None, created_date: datetime=None, judgement_amount: float=None, location: str=None, nature_of_claim: str=None, nature_of_claim_desc: str=None, plaintiff: str=None, proceeding_number: str=None, state: str=None):
        """CourtJudgement - a model defined in OpenAPI

        :param action: The action of this CourtJudgement.
        :param action_date: The action_date of this CourtJudgement.
        :param created_date: The created_date of this CourtJudgement.
        :param judgement_amount: The judgement_amount of this CourtJudgement.
        :param location: The location of this CourtJudgement.
        :param nature_of_claim: The nature_of_claim of this CourtJudgement.
        :param nature_of_claim_desc: The nature_of_claim_desc of this CourtJudgement.
        :param plaintiff: The plaintiff of this CourtJudgement.
        :param proceeding_number: The proceeding_number of this CourtJudgement.
        :param state: The state of this CourtJudgement.
        """
        self.openapi_types = {
            'action': str,
            'action_date': datetime,
            'created_date': datetime,
            'judgement_amount': float,
            'location': str,
            'nature_of_claim': str,
            'nature_of_claim_desc': str,
            'plaintiff': str,
            'proceeding_number': str,
            'state': str
        }

        self.attribute_map = {
            'action': 'action',
            'action_date': 'actionDate',
            'created_date': 'createdDate',
            'judgement_amount': 'judgementAmount',
            'location': 'location',
            'nature_of_claim': 'natureOfClaim',
            'nature_of_claim_desc': 'natureOfClaimDesc',
            'plaintiff': 'plaintiff',
            'proceeding_number': 'proceedingNumber',
            'state': 'state'
        }

        self._action = action
        self._action_date = action_date
        self._created_date = created_date
        self._judgement_amount = judgement_amount
        self._location = location
        self._nature_of_claim = nature_of_claim
        self._nature_of_claim_desc = nature_of_claim_desc
        self._plaintiff = plaintiff
        self._proceeding_number = proceeding_number
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CourtJudgement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CourtJudgement of this CourtJudgement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this CourtJudgement.

        The name of the court judgement that was handed down

        :return: The action of this CourtJudgement.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this CourtJudgement.

        The name of the court judgement that was handed down

        :param action: The action of this CourtJudgement.
        :type action: str
        """

        self._action = action

    @property
    def action_date(self):
        """Gets the action_date of this CourtJudgement.

        The date of the court ruling

        :return: The action_date of this CourtJudgement.
        :rtype: datetime
        """
        return self._action_date

    @action_date.setter
    def action_date(self, action_date):
        """Sets the action_date of this CourtJudgement.

        The date of the court ruling

        :param action_date: The action_date of this CourtJudgement.
        :type action_date: datetime
        """

        self._action_date = action_date

    @property
    def created_date(self):
        """Gets the created_date of this CourtJudgement.

        The date the court judgement was received and published

        :return: The created_date of this CourtJudgement.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this CourtJudgement.

        The date the court judgement was received and published

        :param created_date: The created_date of this CourtJudgement.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def judgement_amount(self):
        """Gets the judgement_amount of this CourtJudgement.

        The amount the defendant was ordered by the court to pay to the plaintiff

        :return: The judgement_amount of this CourtJudgement.
        :rtype: float
        """
        return self._judgement_amount

    @judgement_amount.setter
    def judgement_amount(self, judgement_amount):
        """Sets the judgement_amount of this CourtJudgement.

        The amount the defendant was ordered by the court to pay to the plaintiff

        :param judgement_amount: The judgement_amount of this CourtJudgement.
        :type judgement_amount: float
        """

        self._judgement_amount = judgement_amount

    @property
    def location(self):
        """Gets the location of this CourtJudgement.

        The location of the court judgment

        :return: The location of this CourtJudgement.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this CourtJudgement.

        The location of the court judgment

        :param location: The location of this CourtJudgement.
        :type location: str
        """

        self._location = location

    @property
    def nature_of_claim(self):
        """Gets the nature_of_claim of this CourtJudgement.

        Nature of the claim

        :return: The nature_of_claim of this CourtJudgement.
        :rtype: str
        """
        return self._nature_of_claim

    @nature_of_claim.setter
    def nature_of_claim(self, nature_of_claim):
        """Sets the nature_of_claim of this CourtJudgement.

        Nature of the claim

        :param nature_of_claim: The nature_of_claim of this CourtJudgement.
        :type nature_of_claim: str
        """

        self._nature_of_claim = nature_of_claim

    @property
    def nature_of_claim_desc(self):
        """Gets the nature_of_claim_desc of this CourtJudgement.

        Additional information regarding the nature of the claim

        :return: The nature_of_claim_desc of this CourtJudgement.
        :rtype: str
        """
        return self._nature_of_claim_desc

    @nature_of_claim_desc.setter
    def nature_of_claim_desc(self, nature_of_claim_desc):
        """Sets the nature_of_claim_desc of this CourtJudgement.

        Additional information regarding the nature of the claim

        :param nature_of_claim_desc: The nature_of_claim_desc of this CourtJudgement.
        :type nature_of_claim_desc: str
        """

        self._nature_of_claim_desc = nature_of_claim_desc

    @property
    def plaintiff(self):
        """Gets the plaintiff of this CourtJudgement.

        The person or company that is taking the defendant to court

        :return: The plaintiff of this CourtJudgement.
        :rtype: str
        """
        return self._plaintiff

    @plaintiff.setter
    def plaintiff(self, plaintiff):
        """Sets the plaintiff of this CourtJudgement.

        The person or company that is taking the defendant to court

        :param plaintiff: The plaintiff of this CourtJudgement.
        :type plaintiff: str
        """

        self._plaintiff = plaintiff

    @property
    def proceeding_number(self):
        """Gets the proceeding_number of this CourtJudgement.

        Court judgement referencing identifier

        :return: The proceeding_number of this CourtJudgement.
        :rtype: str
        """
        return self._proceeding_number

    @proceeding_number.setter
    def proceeding_number(self, proceeding_number):
        """Sets the proceeding_number of this CourtJudgement.

        Court judgement referencing identifier

        :param proceeding_number: The proceeding_number of this CourtJudgement.
        :type proceeding_number: str
        """

        self._proceeding_number = proceeding_number

    @property
    def state(self):
        """Gets the state of this CourtJudgement.

        The state jurisdiction of the court judgement

        :return: The state of this CourtJudgement.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this CourtJudgement.

        The state jurisdiction of the court judgement

        :param state: The state of this CourtJudgement.
        :type state: str
        """

        self._state = state
