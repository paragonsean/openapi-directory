# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.company_profile_dto import CompanyProfileDTO
from openapi_server import util


class InternationalBusinessProfileResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, company_profile: CompanyProfileDTO=None, check_id: str=None, entity_id: str=None, ib_response_code: int=None, ib_response_details: str=None, ib_retrieval_location: str=None, ib_transaction_id: str=None, request_id: str=None):
        """InternationalBusinessProfileResponse - a model defined in OpenAPI

        :param company_profile: The company_profile of this InternationalBusinessProfileResponse.
        :param check_id: The check_id of this InternationalBusinessProfileResponse.
        :param entity_id: The entity_id of this InternationalBusinessProfileResponse.
        :param ib_response_code: The ib_response_code of this InternationalBusinessProfileResponse.
        :param ib_response_details: The ib_response_details of this InternationalBusinessProfileResponse.
        :param ib_retrieval_location: The ib_retrieval_location of this InternationalBusinessProfileResponse.
        :param ib_transaction_id: The ib_transaction_id of this InternationalBusinessProfileResponse.
        :param request_id: The request_id of this InternationalBusinessProfileResponse.
        """
        self.openapi_types = {
            'company_profile': CompanyProfileDTO,
            'check_id': str,
            'entity_id': str,
            'ib_response_code': int,
            'ib_response_details': str,
            'ib_retrieval_location': str,
            'ib_transaction_id': str,
            'request_id': str
        }

        self.attribute_map = {
            'company_profile': 'CompanyProfile',
            'check_id': 'checkId',
            'entity_id': 'entityId',
            'ib_response_code': 'ibResponseCode',
            'ib_response_details': 'ibResponseDetails',
            'ib_retrieval_location': 'ibRetrievalLocation',
            'ib_transaction_id': 'ibTransactionId',
            'request_id': 'requestId'
        }

        self._company_profile = company_profile
        self._check_id = check_id
        self._entity_id = entity_id
        self._ib_response_code = ib_response_code
        self._ib_response_details = ib_response_details
        self._ib_retrieval_location = ib_retrieval_location
        self._ib_transaction_id = ib_transaction_id
        self._request_id = request_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InternationalBusinessProfileResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InternationalBusinessProfileResponse of this InternationalBusinessProfileResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company_profile(self):
        """Gets the company_profile of this InternationalBusinessProfileResponse.


        :return: The company_profile of this InternationalBusinessProfileResponse.
        :rtype: CompanyProfileDTO
        """
        return self._company_profile

    @company_profile.setter
    def company_profile(self, company_profile):
        """Sets the company_profile of this InternationalBusinessProfileResponse.


        :param company_profile: The company_profile of this InternationalBusinessProfileResponse.
        :type company_profile: CompanyProfileDTO
        """

        self._company_profile = company_profile

    @property
    def check_id(self):
        """Gets the check_id of this InternationalBusinessProfileResponse.

        Unique ID for the individual check that was run. 

        :return: The check_id of this InternationalBusinessProfileResponse.
        :rtype: str
        """
        return self._check_id

    @check_id.setter
    def check_id(self, check_id):
        """Sets the check_id of this InternationalBusinessProfileResponse.

        Unique ID for the individual check that was run. 

        :param check_id: The check_id of this InternationalBusinessProfileResponse.
        :type check_id: str
        """

        self._check_id = check_id

    @property
    def entity_id(self):
        """Gets the entity_id of this InternationalBusinessProfileResponse.

        If the response was successful and we returned a company profile, we save this as an ORGANISATION type entity in our service. We will also save the profile result as a REPORT type document, attached to the entity. 

        :return: The entity_id of this InternationalBusinessProfileResponse.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this InternationalBusinessProfileResponse.

        If the response was successful and we returned a company profile, we save this as an ORGANISATION type entity in our service. We will also save the profile result as a REPORT type document, attached to the entity. 

        :param entity_id: The entity_id of this InternationalBusinessProfileResponse.
        :type entity_id: str
        """

        self._entity_id = entity_id

    @property
    def ib_response_code(self):
        """Gets the ib_response_code of this InternationalBusinessProfileResponse.

        service provider response code

        :return: The ib_response_code of this InternationalBusinessProfileResponse.
        :rtype: int
        """
        return self._ib_response_code

    @ib_response_code.setter
    def ib_response_code(self, ib_response_code):
        """Sets the ib_response_code of this InternationalBusinessProfileResponse.

        service provider response code

        :param ib_response_code: The ib_response_code of this InternationalBusinessProfileResponse.
        :type ib_response_code: int
        """

        self._ib_response_code = ib_response_code

    @property
    def ib_response_details(self):
        """Gets the ib_response_details of this InternationalBusinessProfileResponse.


        :return: The ib_response_details of this InternationalBusinessProfileResponse.
        :rtype: str
        """
        return self._ib_response_details

    @ib_response_details.setter
    def ib_response_details(self, ib_response_details):
        """Sets the ib_response_details of this InternationalBusinessProfileResponse.


        :param ib_response_details: The ib_response_details of this InternationalBusinessProfileResponse.
        :type ib_response_details: str
        """

        self._ib_response_details = ib_response_details

    @property
    def ib_retrieval_location(self):
        """Gets the ib_retrieval_location of this InternationalBusinessProfileResponse.


        :return: The ib_retrieval_location of this InternationalBusinessProfileResponse.
        :rtype: str
        """
        return self._ib_retrieval_location

    @ib_retrieval_location.setter
    def ib_retrieval_location(self, ib_retrieval_location):
        """Sets the ib_retrieval_location of this InternationalBusinessProfileResponse.


        :param ib_retrieval_location: The ib_retrieval_location of this InternationalBusinessProfileResponse.
        :type ib_retrieval_location: str
        """

        self._ib_retrieval_location = ib_retrieval_location

    @property
    def ib_transaction_id(self):
        """Gets the ib_transaction_id of this InternationalBusinessProfileResponse.

        service provider ID

        :return: The ib_transaction_id of this InternationalBusinessProfileResponse.
        :rtype: str
        """
        return self._ib_transaction_id

    @ib_transaction_id.setter
    def ib_transaction_id(self, ib_transaction_id):
        """Sets the ib_transaction_id of this InternationalBusinessProfileResponse.

        service provider ID

        :param ib_transaction_id: The ib_transaction_id of this InternationalBusinessProfileResponse.
        :type ib_transaction_id: str
        """

        self._ib_transaction_id = ib_transaction_id

    @property
    def request_id(self):
        """Gets the request_id of this InternationalBusinessProfileResponse.

        Unique identifier for every request. Can be used for tracking down answers with technical support.   Uses the ULID format (a time-based, sortable UUID)  Note: this will be different for every request. 

        :return: The request_id of this InternationalBusinessProfileResponse.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this InternationalBusinessProfileResponse.

        Unique identifier for every request. Can be used for tracking down answers with technical support.   Uses the ULID format (a time-based, sortable UUID)  Note: this will be different for every request. 

        :param request_id: The request_id of this InternationalBusinessProfileResponse.
        :type request_id: str
        """

        self._request_id = request_id
