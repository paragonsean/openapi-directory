# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PuppyObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asknicely1: str=None, asknicely2: str=None, asknicely3: str=None, asknicely4: str=None, asknicely5: str=None, asknicely6: str=None, asknicely7: str=None, commit: str=None, puppy: bool=True):
        """PuppyObject - a model defined in OpenAPI

        :param asknicely1: The asknicely1 of this PuppyObject.
        :param asknicely2: The asknicely2 of this PuppyObject.
        :param asknicely3: The asknicely3 of this PuppyObject.
        :param asknicely4: The asknicely4 of this PuppyObject.
        :param asknicely5: The asknicely5 of this PuppyObject.
        :param asknicely6: The asknicely6 of this PuppyObject.
        :param asknicely7: The asknicely7 of this PuppyObject.
        :param commit: The commit of this PuppyObject.
        :param puppy: The puppy of this PuppyObject.
        """
        self.openapi_types = {
            'asknicely1': str,
            'asknicely2': str,
            'asknicely3': str,
            'asknicely4': str,
            'asknicely5': str,
            'asknicely6': str,
            'asknicely7': str,
            'commit': str,
            'puppy': bool
        }

        self.attribute_map = {
            'asknicely1': 'asknicely1',
            'asknicely2': 'asknicely2',
            'asknicely3': 'asknicely3',
            'asknicely4': 'asknicely4',
            'asknicely5': 'asknicely5',
            'asknicely6': 'asknicely6',
            'asknicely7': 'asknicely7',
            'commit': 'commit',
            'puppy': 'puppy'
        }

        self._asknicely1 = asknicely1
        self._asknicely2 = asknicely2
        self._asknicely3 = asknicely3
        self._asknicely4 = asknicely4
        self._asknicely5 = asknicely5
        self._asknicely6 = asknicely6
        self._asknicely7 = asknicely7
        self._commit = commit
        self._puppy = puppy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PuppyObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PuppyObject of this PuppyObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asknicely1(self):
        """Gets the asknicely1 of this PuppyObject.


        :return: The asknicely1 of this PuppyObject.
        :rtype: str
        """
        return self._asknicely1

    @asknicely1.setter
    def asknicely1(self, asknicely1):
        """Sets the asknicely1 of this PuppyObject.


        :param asknicely1: The asknicely1 of this PuppyObject.
        :type asknicely1: str
        """

        self._asknicely1 = asknicely1

    @property
    def asknicely2(self):
        """Gets the asknicely2 of this PuppyObject.


        :return: The asknicely2 of this PuppyObject.
        :rtype: str
        """
        return self._asknicely2

    @asknicely2.setter
    def asknicely2(self, asknicely2):
        """Sets the asknicely2 of this PuppyObject.


        :param asknicely2: The asknicely2 of this PuppyObject.
        :type asknicely2: str
        """

        self._asknicely2 = asknicely2

    @property
    def asknicely3(self):
        """Gets the asknicely3 of this PuppyObject.


        :return: The asknicely3 of this PuppyObject.
        :rtype: str
        """
        return self._asknicely3

    @asknicely3.setter
    def asknicely3(self, asknicely3):
        """Sets the asknicely3 of this PuppyObject.


        :param asknicely3: The asknicely3 of this PuppyObject.
        :type asknicely3: str
        """

        self._asknicely3 = asknicely3

    @property
    def asknicely4(self):
        """Gets the asknicely4 of this PuppyObject.


        :return: The asknicely4 of this PuppyObject.
        :rtype: str
        """
        return self._asknicely4

    @asknicely4.setter
    def asknicely4(self, asknicely4):
        """Sets the asknicely4 of this PuppyObject.


        :param asknicely4: The asknicely4 of this PuppyObject.
        :type asknicely4: str
        """

        self._asknicely4 = asknicely4

    @property
    def asknicely5(self):
        """Gets the asknicely5 of this PuppyObject.


        :return: The asknicely5 of this PuppyObject.
        :rtype: str
        """
        return self._asknicely5

    @asknicely5.setter
    def asknicely5(self, asknicely5):
        """Sets the asknicely5 of this PuppyObject.


        :param asknicely5: The asknicely5 of this PuppyObject.
        :type asknicely5: str
        """

        self._asknicely5 = asknicely5

    @property
    def asknicely6(self):
        """Gets the asknicely6 of this PuppyObject.


        :return: The asknicely6 of this PuppyObject.
        :rtype: str
        """
        return self._asknicely6

    @asknicely6.setter
    def asknicely6(self, asknicely6):
        """Sets the asknicely6 of this PuppyObject.


        :param asknicely6: The asknicely6 of this PuppyObject.
        :type asknicely6: str
        """

        self._asknicely6 = asknicely6

    @property
    def asknicely7(self):
        """Gets the asknicely7 of this PuppyObject.


        :return: The asknicely7 of this PuppyObject.
        :rtype: str
        """
        return self._asknicely7

    @asknicely7.setter
    def asknicely7(self, asknicely7):
        """Sets the asknicely7 of this PuppyObject.


        :param asknicely7: The asknicely7 of this PuppyObject.
        :type asknicely7: str
        """

        self._asknicely7 = asknicely7

    @property
    def commit(self):
        """Gets the commit of this PuppyObject.

        Server version indication

        :return: The commit of this PuppyObject.
        :rtype: str
        """
        return self._commit

    @commit.setter
    def commit(self, commit):
        """Sets the commit of this PuppyObject.

        Server version indication

        :param commit: The commit of this PuppyObject.
        :type commit: str
        """

        self._commit = commit

    @property
    def puppy(self):
        """Gets the puppy of this PuppyObject.


        :return: The puppy of this PuppyObject.
        :rtype: bool
        """
        return self._puppy

    @puppy.setter
    def puppy(self, puppy):
        """Sets the puppy of this PuppyObject.


        :param puppy: The puppy of this PuppyObject.
        :type puppy: bool
        """
        if puppy is None:
            raise ValueError("Invalid value for `puppy`, must not be `None`")

        self._puppy = puppy
