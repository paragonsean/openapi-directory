# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.drivers_licence import DriversLicence
from openapi_server.models.medicare_card import MedicareCard
from openapi_server.models.passport import Passport
from openapi_server import util


class SwitchDetailsCustomerDetailsEvidenceOfIdentity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, drivers_licence: DriversLicence=None, medicare_card: MedicareCard=None, passport: Passport=None):
        """SwitchDetailsCustomerDetailsEvidenceOfIdentity - a model defined in OpenAPI

        :param drivers_licence: The drivers_licence of this SwitchDetailsCustomerDetailsEvidenceOfIdentity.
        :param medicare_card: The medicare_card of this SwitchDetailsCustomerDetailsEvidenceOfIdentity.
        :param passport: The passport of this SwitchDetailsCustomerDetailsEvidenceOfIdentity.
        """
        self.openapi_types = {
            'drivers_licence': DriversLicence,
            'medicare_card': MedicareCard,
            'passport': Passport
        }

        self.attribute_map = {
            'drivers_licence': 'DriversLicence',
            'medicare_card': 'MedicareCard',
            'passport': 'Passport'
        }

        self._drivers_licence = drivers_licence
        self._medicare_card = medicare_card
        self._passport = passport

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SwitchDetailsCustomerDetailsEvidenceOfIdentity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SwitchDetails_customerDetails_evidenceOfIdentity of this SwitchDetailsCustomerDetailsEvidenceOfIdentity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def drivers_licence(self):
        """Gets the drivers_licence of this SwitchDetailsCustomerDetailsEvidenceOfIdentity.


        :return: The drivers_licence of this SwitchDetailsCustomerDetailsEvidenceOfIdentity.
        :rtype: DriversLicence
        """
        return self._drivers_licence

    @drivers_licence.setter
    def drivers_licence(self, drivers_licence):
        """Sets the drivers_licence of this SwitchDetailsCustomerDetailsEvidenceOfIdentity.


        :param drivers_licence: The drivers_licence of this SwitchDetailsCustomerDetailsEvidenceOfIdentity.
        :type drivers_licence: DriversLicence
        """

        self._drivers_licence = drivers_licence

    @property
    def medicare_card(self):
        """Gets the medicare_card of this SwitchDetailsCustomerDetailsEvidenceOfIdentity.


        :return: The medicare_card of this SwitchDetailsCustomerDetailsEvidenceOfIdentity.
        :rtype: MedicareCard
        """
        return self._medicare_card

    @medicare_card.setter
    def medicare_card(self, medicare_card):
        """Sets the medicare_card of this SwitchDetailsCustomerDetailsEvidenceOfIdentity.


        :param medicare_card: The medicare_card of this SwitchDetailsCustomerDetailsEvidenceOfIdentity.
        :type medicare_card: MedicareCard
        """

        self._medicare_card = medicare_card

    @property
    def passport(self):
        """Gets the passport of this SwitchDetailsCustomerDetailsEvidenceOfIdentity.


        :return: The passport of this SwitchDetailsCustomerDetailsEvidenceOfIdentity.
        :rtype: Passport
        """
        return self._passport

    @passport.setter
    def passport(self, passport):
        """Sets the passport of this SwitchDetailsCustomerDetailsEvidenceOfIdentity.


        :param passport: The passport of this SwitchDetailsCustomerDetailsEvidenceOfIdentity.
        :type passport: Passport
        """

        self._passport = passport
