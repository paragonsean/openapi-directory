# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CapitalDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ammount: str=None, currency: str=None, type: str=None, type_code: str=None):
        """CapitalDTO - a model defined in OpenAPI

        :param ammount: The ammount of this CapitalDTO.
        :param currency: The currency of this CapitalDTO.
        :param type: The type of this CapitalDTO.
        :param type_code: The type_code of this CapitalDTO.
        """
        self.openapi_types = {
            'ammount': str,
            'currency': str,
            'type': str,
            'type_code': str
        }

        self.attribute_map = {
            'ammount': 'Ammount',
            'currency': 'Currency',
            'type': 'Type',
            'type_code': 'TypeCode'
        }

        self._ammount = ammount
        self._currency = currency
        self._type = type
        self._type_code = type_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CapitalDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CapitalDTO of this CapitalDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ammount(self):
        """Gets the ammount of this CapitalDTO.


        :return: The ammount of this CapitalDTO.
        :rtype: str
        """
        return self._ammount

    @ammount.setter
    def ammount(self, ammount):
        """Sets the ammount of this CapitalDTO.


        :param ammount: The ammount of this CapitalDTO.
        :type ammount: str
        """

        self._ammount = ammount

    @property
    def currency(self):
        """Gets the currency of this CapitalDTO.


        :return: The currency of this CapitalDTO.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this CapitalDTO.


        :param currency: The currency of this CapitalDTO.
        :type currency: str
        """

        self._currency = currency

    @property
    def type(self):
        """Gets the type of this CapitalDTO.


        :return: The type of this CapitalDTO.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CapitalDTO.


        :param type: The type of this CapitalDTO.
        :type type: str
        """

        self._type = type

    @property
    def type_code(self):
        """Gets the type_code of this CapitalDTO.


        :return: The type_code of this CapitalDTO.
        :rtype: str
        """
        return self._type_code

    @type_code.setter
    def type_code(self, type_code):
        """Sets the type_code of this CapitalDTO.


        :param type_code: The type_code of this CapitalDTO.
        :type type_code: str
        """

        self._type_code = type_code
