# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.array_of_string import ArrayOfString
from openapi_server import util


class PSCDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, ceased_on: str=None, country_of_residence: str=None, dob_day: int=None, dob_month: int=None, dob_year: int=None, kind: str=None, name: str=None, nationality: str=None, nature_of_control: ArrayOfString=None, notified_on: str=None):
        """PSCDetails - a model defined in OpenAPI

        :param address: The address of this PSCDetails.
        :param ceased_on: The ceased_on of this PSCDetails.
        :param country_of_residence: The country_of_residence of this PSCDetails.
        :param dob_day: The dob_day of this PSCDetails.
        :param dob_month: The dob_month of this PSCDetails.
        :param dob_year: The dob_year of this PSCDetails.
        :param kind: The kind of this PSCDetails.
        :param name: The name of this PSCDetails.
        :param nationality: The nationality of this PSCDetails.
        :param nature_of_control: The nature_of_control of this PSCDetails.
        :param notified_on: The notified_on of this PSCDetails.
        """
        self.openapi_types = {
            'address': str,
            'ceased_on': str,
            'country_of_residence': str,
            'dob_day': int,
            'dob_month': int,
            'dob_year': int,
            'kind': str,
            'name': str,
            'nationality': str,
            'nature_of_control': ArrayOfString,
            'notified_on': str
        }

        self.attribute_map = {
            'address': 'Address',
            'ceased_on': 'CeasedOn',
            'country_of_residence': 'CountryOfResidence',
            'dob_day': 'DOBDay',
            'dob_month': 'DOBMonth',
            'dob_year': 'DOBYear',
            'kind': 'Kind',
            'name': 'Name',
            'nationality': 'Nationality',
            'nature_of_control': 'NatureOfControl',
            'notified_on': 'NotifiedOn'
        }

        self._address = address
        self._ceased_on = ceased_on
        self._country_of_residence = country_of_residence
        self._dob_day = dob_day
        self._dob_month = dob_month
        self._dob_year = dob_year
        self._kind = kind
        self._name = name
        self._nationality = nationality
        self._nature_of_control = nature_of_control
        self._notified_on = notified_on

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PSCDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PSCDetails of this PSCDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this PSCDetails.


        :return: The address of this PSCDetails.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this PSCDetails.


        :param address: The address of this PSCDetails.
        :type address: str
        """

        self._address = address

    @property
    def ceased_on(self):
        """Gets the ceased_on of this PSCDetails.


        :return: The ceased_on of this PSCDetails.
        :rtype: str
        """
        return self._ceased_on

    @ceased_on.setter
    def ceased_on(self, ceased_on):
        """Sets the ceased_on of this PSCDetails.


        :param ceased_on: The ceased_on of this PSCDetails.
        :type ceased_on: str
        """

        self._ceased_on = ceased_on

    @property
    def country_of_residence(self):
        """Gets the country_of_residence of this PSCDetails.


        :return: The country_of_residence of this PSCDetails.
        :rtype: str
        """
        return self._country_of_residence

    @country_of_residence.setter
    def country_of_residence(self, country_of_residence):
        """Sets the country_of_residence of this PSCDetails.


        :param country_of_residence: The country_of_residence of this PSCDetails.
        :type country_of_residence: str
        """

        self._country_of_residence = country_of_residence

    @property
    def dob_day(self):
        """Gets the dob_day of this PSCDetails.


        :return: The dob_day of this PSCDetails.
        :rtype: int
        """
        return self._dob_day

    @dob_day.setter
    def dob_day(self, dob_day):
        """Sets the dob_day of this PSCDetails.


        :param dob_day: The dob_day of this PSCDetails.
        :type dob_day: int
        """

        self._dob_day = dob_day

    @property
    def dob_month(self):
        """Gets the dob_month of this PSCDetails.


        :return: The dob_month of this PSCDetails.
        :rtype: int
        """
        return self._dob_month

    @dob_month.setter
    def dob_month(self, dob_month):
        """Sets the dob_month of this PSCDetails.


        :param dob_month: The dob_month of this PSCDetails.
        :type dob_month: int
        """

        self._dob_month = dob_month

    @property
    def dob_year(self):
        """Gets the dob_year of this PSCDetails.


        :return: The dob_year of this PSCDetails.
        :rtype: int
        """
        return self._dob_year

    @dob_year.setter
    def dob_year(self, dob_year):
        """Sets the dob_year of this PSCDetails.


        :param dob_year: The dob_year of this PSCDetails.
        :type dob_year: int
        """

        self._dob_year = dob_year

    @property
    def kind(self):
        """Gets the kind of this PSCDetails.


        :return: The kind of this PSCDetails.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this PSCDetails.


        :param kind: The kind of this PSCDetails.
        :type kind: str
        """

        self._kind = kind

    @property
    def name(self):
        """Gets the name of this PSCDetails.


        :return: The name of this PSCDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PSCDetails.


        :param name: The name of this PSCDetails.
        :type name: str
        """

        self._name = name

    @property
    def nationality(self):
        """Gets the nationality of this PSCDetails.


        :return: The nationality of this PSCDetails.
        :rtype: str
        """
        return self._nationality

    @nationality.setter
    def nationality(self, nationality):
        """Sets the nationality of this PSCDetails.


        :param nationality: The nationality of this PSCDetails.
        :type nationality: str
        """

        self._nationality = nationality

    @property
    def nature_of_control(self):
        """Gets the nature_of_control of this PSCDetails.


        :return: The nature_of_control of this PSCDetails.
        :rtype: ArrayOfString
        """
        return self._nature_of_control

    @nature_of_control.setter
    def nature_of_control(self, nature_of_control):
        """Sets the nature_of_control of this PSCDetails.


        :param nature_of_control: The nature_of_control of this PSCDetails.
        :type nature_of_control: ArrayOfString
        """

        self._nature_of_control = nature_of_control

    @property
    def notified_on(self):
        """Gets the notified_on of this PSCDetails.


        :return: The notified_on of this PSCDetails.
        :rtype: str
        """
        return self._notified_on

    @notified_on.setter
    def notified_on(self, notified_on):
        """Sets the notified_on of this PSCDetails.


        :param notified_on: The notified_on of this PSCDetails.
        :type notified_on: str
        """

        self._notified_on = notified_on
