# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddressLineDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, line: str=None, type: str=None, type_code: str=None):
        """AddressLineDTO - a model defined in OpenAPI

        :param line: The line of this AddressLineDTO.
        :param type: The type of this AddressLineDTO.
        :param type_code: The type_code of this AddressLineDTO.
        """
        self.openapi_types = {
            'line': str,
            'type': str,
            'type_code': str
        }

        self.attribute_map = {
            'line': 'Line',
            'type': 'Type',
            'type_code': 'TypeCode'
        }

        self._line = line
        self._type = type
        self._type_code = type_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddressLineDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddressLineDTO of this AddressLineDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def line(self):
        """Gets the line of this AddressLineDTO.


        :return: The line of this AddressLineDTO.
        :rtype: str
        """
        return self._line

    @line.setter
    def line(self, line):
        """Sets the line of this AddressLineDTO.


        :param line: The line of this AddressLineDTO.
        :type line: str
        """

        self._line = line

    @property
    def type(self):
        """Gets the type of this AddressLineDTO.


        :return: The type of this AddressLineDTO.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AddressLineDTO.


        :param type: The type of this AddressLineDTO.
        :type type: str
        """

        self._type = type

    @property
    def type_code(self):
        """Gets the type_code of this AddressLineDTO.


        :return: The type_code of this AddressLineDTO.
        :rtype: str
        """
        return self._type_code

    @type_code.setter
    def type_code(self, type_code):
        """Sets the type_code of this AddressLineDTO.


        :param type_code: The type_code of this AddressLineDTO.
        :type type_code: str
        """

        self._type_code = type_code
