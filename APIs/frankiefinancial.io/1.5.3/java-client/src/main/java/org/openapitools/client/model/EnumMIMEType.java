/*
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The standard MIME type of the file being uploaded. We&#39;ll double-check to be certain, but this can help speed things up
 */
@JsonAdapter(EnumMIMEType.Adapter.class)
public enum EnumMIMEType {
  
  IMAGE_JPEG("image/jpeg"),
  
  IMAGE_PNG("image/png"),
  
  IMAGE_GIF("image/gif"),
  
  IMAGE_WEBP("image/webp"),
  
  IMAGE_TIFF("image/tiff"),
  
  IMAGE_BMP("image/bmp"),
  
  APPLICATION_ZIP("application/zip"),
  
  APPLICATION_X_TAR("application/x-tar"),
  
  APPLICATION_X_RAR_COMPRESSED("application/x-rar-compressed"),
  
  APPLICATION_GZIP("application/gzip"),
  
  APPLICATION_X_BZIP2("application/x-bzip2"),
  
  APPLICATION_X_7Z_COMPRESSED("application/x-7z-compressed"),
  
  APPLICATION_PDF("application/pdf"),
  
  APPLICATION_RTF("application/rtf"),
  
  APPLICATION_POSTSCRIPT("application/postscript"),
  
  APPLICATION_JSON("application/json"),
  
  AUDIO_MPEG("audio/mpeg"),
  
  AUDIO_M4A("audio/m4a"),
  
  AUDIO_X_WAV("audio/x-wav"),
  
  AUDIO_AMR("audio/amr"),
  
  APPLICATION_MSWORD("application/msword"),
  
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT("application/vnd.openxmlformats-officedocument.wordprocessingml.document"),
  
  APPLICATION_VND_MS_EXCEL("application/vnd.ms-excel"),
  
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHEET("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"),
  
  APPLICATION_VND_MS_POWERPOINT("application/vnd.ms-powerpoint"),
  
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_PRESENTATION("application/vnd.openxmlformats-officedocument.presentationml.presentation"),
  
  VIDEO_MP4("video/mp4"),
  
  VIDEO_WEBM("video/webm"),
  
  VIDEO_QUICKTIME("video/quicktime"),
  
  VIDEO_X_MSVIDEO("video/x-msvideo"),
  
  VIDEO_X_MS_WMV("video/x-ms-wmv"),
  
  VIDEO_MPEG("video/mpeg");

  private String value;

  EnumMIMEType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EnumMIMEType fromValue(String value) {
    for (EnumMIMEType b : EnumMIMEType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EnumMIMEType> {
    @Override
    public void write(final JsonWriter jsonWriter, final EnumMIMEType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EnumMIMEType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EnumMIMEType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    EnumMIMEType.fromValue(value);
  }
}

