/*
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.AddressObject;
import org.openapitools.client.model.RegulatoryInformation;
import org.openapitools.client.model.StockExchangeData;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The details of the company being checked 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:57:14.064522-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BusinessDetails {
  public static final String SERIALIZED_NAME_A_B_N = "ABN";
  @SerializedName(SERIALIZED_NAME_A_B_N)
  private String ABN;

  public static final String SERIALIZED_NAME_A_C_N = "ACN";
  @SerializedName(SERIALIZED_NAME_A_C_N)
  private String ACN;

  public static final String SERIALIZED_NAME_A_R_B_N = "ARBN";
  @SerializedName(SERIALIZED_NAME_A_R_B_N)
  private String ARBN;

  public static final String SERIALIZED_NAME_ANZSIC_CODE = "anzsic_code";
  @SerializedName(SERIALIZED_NAME_ANZSIC_CODE)
  private String anzsicCode;

  public static final String SERIALIZED_NAME_ASIC_COMPANY_TYPE = "asic_company_type";
  @SerializedName(SERIALIZED_NAME_ASIC_COMPANY_TYPE)
  private String asicCompanyType;

  public static final String SERIALIZED_NAME_BUSINESS_NAMES = "business_names";
  @SerializedName(SERIALIZED_NAME_BUSINESS_NAMES)
  private List<String> businessNames = new ArrayList<>();

  public static final String SERIALIZED_NAME_DATE_REGISTERED_WITH_ASIC = "date_registered_with_asic";
  @SerializedName(SERIALIZED_NAME_DATE_REGISTERED_WITH_ASIC)
  private LocalDate dateRegisteredWithAsic;

  public static final String SERIALIZED_NAME_ENTITY_ID = "entity_id";
  @SerializedName(SERIALIZED_NAME_ENTITY_ID)
  private UUID entityId;

  public static final String SERIALIZED_NAME_GIIN = "giin";
  @SerializedName(SERIALIZED_NAME_GIIN)
  private String giin;

  public static final String SERIALIZED_NAME_PLACE_OF_BUSINESS = "place_of_business";
  @SerializedName(SERIALIZED_NAME_PLACE_OF_BUSINESS)
  private AddressObject placeOfBusiness;

  public static final String SERIALIZED_NAME_PUBLIC_COMPANY = "public_company";
  @SerializedName(SERIALIZED_NAME_PUBLIC_COMPANY)
  private Boolean publicCompany;

  public static final String SERIALIZED_NAME_REGISTERED_NAME = "registered_name";
  @SerializedName(SERIALIZED_NAME_REGISTERED_NAME)
  private String registeredName;

  public static final String SERIALIZED_NAME_REGISTERED_OFFICE = "registered_office";
  @SerializedName(SERIALIZED_NAME_REGISTERED_OFFICE)
  private AddressObject registeredOffice;

  public static final String SERIALIZED_NAME_REGULATORY_INFORMATION = "regulatory_information";
  @SerializedName(SERIALIZED_NAME_REGULATORY_INFORMATION)
  private RegulatoryInformation regulatoryInformation;

  public static final String SERIALIZED_NAME_STATE_REGISTERED_WITH_ASIC = "state_registered_with_asic";
  @SerializedName(SERIALIZED_NAME_STATE_REGISTERED_WITH_ASIC)
  private String stateRegisteredWithAsic;

  public static final String SERIALIZED_NAME_STOCK_EXCHANGE_DATA = "stock_exchange_data";
  @SerializedName(SERIALIZED_NAME_STOCK_EXCHANGE_DATA)
  private StockExchangeData stockExchangeData;

  public static final String SERIALIZED_NAME_TRADING_NAMES = "trading_names";
  @SerializedName(SERIALIZED_NAME_TRADING_NAMES)
  private List<String> tradingNames = new ArrayList<>();

  public BusinessDetails() {
  }

  public BusinessDetails ABN(String ABN) {
    this.ABN = ABN;
    return this;
  }

  /**
   * Get ABN
   * @return ABN
   */
  @javax.annotation.Nonnull
  public String getABN() {
    return ABN;
  }

  public void setABN(String ABN) {
    this.ABN = ABN;
  }


  public BusinessDetails ACN(String ACN) {
    this.ACN = ACN;
    return this;
  }

  /**
   * Get ACN
   * @return ACN
   */
  @javax.annotation.Nonnull
  public String getACN() {
    return ACN;
  }

  public void setACN(String ACN) {
    this.ACN = ACN;
  }


  public BusinessDetails ARBN(String ARBN) {
    this.ARBN = ARBN;
    return this;
  }

  /**
   * Get ARBN
   * @return ARBN
   */
  @javax.annotation.Nonnull
  public String getARBN() {
    return ARBN;
  }

  public void setARBN(String ARBN) {
    this.ARBN = ARBN;
  }


  public BusinessDetails anzsicCode(String anzsicCode) {
    this.anzsicCode = anzsicCode;
    return this;
  }

  /**
   * Get anzsicCode
   * @return anzsicCode
   */
  @javax.annotation.Nonnull
  public String getAnzsicCode() {
    return anzsicCode;
  }

  public void setAnzsicCode(String anzsicCode) {
    this.anzsicCode = anzsicCode;
  }


  public BusinessDetails asicCompanyType(String asicCompanyType) {
    this.asicCompanyType = asicCompanyType;
    return this;
  }

  /**
   * Get asicCompanyType
   * @return asicCompanyType
   */
  @javax.annotation.Nullable
  public String getAsicCompanyType() {
    return asicCompanyType;
  }

  public void setAsicCompanyType(String asicCompanyType) {
    this.asicCompanyType = asicCompanyType;
  }


  public BusinessDetails businessNames(List<String> businessNames) {
    this.businessNames = businessNames;
    return this;
  }

  public BusinessDetails addBusinessNamesItem(String businessNamesItem) {
    if (this.businessNames == null) {
      this.businessNames = new ArrayList<>();
    }
    this.businessNames.add(businessNamesItem);
    return this;
  }

  /**
   * Get businessNames
   * @return businessNames
   */
  @javax.annotation.Nullable
  public List<String> getBusinessNames() {
    return businessNames;
  }

  public void setBusinessNames(List<String> businessNames) {
    this.businessNames = businessNames;
  }


  public BusinessDetails dateRegisteredWithAsic(LocalDate dateRegisteredWithAsic) {
    this.dateRegisteredWithAsic = dateRegisteredWithAsic;
    return this;
  }

  /**
   * Get dateRegisteredWithAsic
   * @return dateRegisteredWithAsic
   */
  @javax.annotation.Nullable
  public LocalDate getDateRegisteredWithAsic() {
    return dateRegisteredWithAsic;
  }

  public void setDateRegisteredWithAsic(LocalDate dateRegisteredWithAsic) {
    this.dateRegisteredWithAsic = dateRegisteredWithAsic;
  }


  public BusinessDetails entityId(UUID entityId) {
    this.entityId = entityId;
    return this;
  }

  /**
   * Frankie&#39;s unique identifier for the business.  Uses a non-versioned UUID format 
   * @return entityId
   */
  @javax.annotation.Nullable
  public UUID getEntityId() {
    return entityId;
  }

  public void setEntityId(UUID entityId) {
    this.entityId = entityId;
  }


  public BusinessDetails giin(String giin) {
    this.giin = giin;
    return this;
  }

  /**
   * Get giin
   * @return giin
   */
  @javax.annotation.Nonnull
  public String getGiin() {
    return giin;
  }

  public void setGiin(String giin) {
    this.giin = giin;
  }


  public BusinessDetails placeOfBusiness(AddressObject placeOfBusiness) {
    this.placeOfBusiness = placeOfBusiness;
    return this;
  }

  /**
   * Get placeOfBusiness
   * @return placeOfBusiness
   */
  @javax.annotation.Nullable
  public AddressObject getPlaceOfBusiness() {
    return placeOfBusiness;
  }

  public void setPlaceOfBusiness(AddressObject placeOfBusiness) {
    this.placeOfBusiness = placeOfBusiness;
  }


  public BusinessDetails publicCompany(Boolean publicCompany) {
    this.publicCompany = publicCompany;
    return this;
  }

  /**
   * Get publicCompany
   * @return publicCompany
   */
  @javax.annotation.Nullable
  public Boolean getPublicCompany() {
    return publicCompany;
  }

  public void setPublicCompany(Boolean publicCompany) {
    this.publicCompany = publicCompany;
  }


  public BusinessDetails registeredName(String registeredName) {
    this.registeredName = registeredName;
    return this;
  }

  /**
   * Get registeredName
   * @return registeredName
   */
  @javax.annotation.Nonnull
  public String getRegisteredName() {
    return registeredName;
  }

  public void setRegisteredName(String registeredName) {
    this.registeredName = registeredName;
  }


  public BusinessDetails registeredOffice(AddressObject registeredOffice) {
    this.registeredOffice = registeredOffice;
    return this;
  }

  /**
   * Get registeredOffice
   * @return registeredOffice
   */
  @javax.annotation.Nullable
  public AddressObject getRegisteredOffice() {
    return registeredOffice;
  }

  public void setRegisteredOffice(AddressObject registeredOffice) {
    this.registeredOffice = registeredOffice;
  }


  public BusinessDetails regulatoryInformation(RegulatoryInformation regulatoryInformation) {
    this.regulatoryInformation = regulatoryInformation;
    return this;
  }

  /**
   * Get regulatoryInformation
   * @return regulatoryInformation
   */
  @javax.annotation.Nullable
  public RegulatoryInformation getRegulatoryInformation() {
    return regulatoryInformation;
  }

  public void setRegulatoryInformation(RegulatoryInformation regulatoryInformation) {
    this.regulatoryInformation = regulatoryInformation;
  }


  public BusinessDetails stateRegisteredWithAsic(String stateRegisteredWithAsic) {
    this.stateRegisteredWithAsic = stateRegisteredWithAsic;
    return this;
  }

  /**
   * Get stateRegisteredWithAsic
   * @return stateRegisteredWithAsic
   */
  @javax.annotation.Nullable
  public String getStateRegisteredWithAsic() {
    return stateRegisteredWithAsic;
  }

  public void setStateRegisteredWithAsic(String stateRegisteredWithAsic) {
    this.stateRegisteredWithAsic = stateRegisteredWithAsic;
  }


  public BusinessDetails stockExchangeData(StockExchangeData stockExchangeData) {
    this.stockExchangeData = stockExchangeData;
    return this;
  }

  /**
   * Get stockExchangeData
   * @return stockExchangeData
   */
  @javax.annotation.Nullable
  public StockExchangeData getStockExchangeData() {
    return stockExchangeData;
  }

  public void setStockExchangeData(StockExchangeData stockExchangeData) {
    this.stockExchangeData = stockExchangeData;
  }


  public BusinessDetails tradingNames(List<String> tradingNames) {
    this.tradingNames = tradingNames;
    return this;
  }

  public BusinessDetails addTradingNamesItem(String tradingNamesItem) {
    if (this.tradingNames == null) {
      this.tradingNames = new ArrayList<>();
    }
    this.tradingNames.add(tradingNamesItem);
    return this;
  }

  /**
   * Get tradingNames
   * @return tradingNames
   */
  @javax.annotation.Nullable
  public List<String> getTradingNames() {
    return tradingNames;
  }

  public void setTradingNames(List<String> tradingNames) {
    this.tradingNames = tradingNames;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BusinessDetails businessDetails = (BusinessDetails) o;
    return Objects.equals(this.ABN, businessDetails.ABN) &&
        Objects.equals(this.ACN, businessDetails.ACN) &&
        Objects.equals(this.ARBN, businessDetails.ARBN) &&
        Objects.equals(this.anzsicCode, businessDetails.anzsicCode) &&
        Objects.equals(this.asicCompanyType, businessDetails.asicCompanyType) &&
        Objects.equals(this.businessNames, businessDetails.businessNames) &&
        Objects.equals(this.dateRegisteredWithAsic, businessDetails.dateRegisteredWithAsic) &&
        Objects.equals(this.entityId, businessDetails.entityId) &&
        Objects.equals(this.giin, businessDetails.giin) &&
        Objects.equals(this.placeOfBusiness, businessDetails.placeOfBusiness) &&
        Objects.equals(this.publicCompany, businessDetails.publicCompany) &&
        Objects.equals(this.registeredName, businessDetails.registeredName) &&
        Objects.equals(this.registeredOffice, businessDetails.registeredOffice) &&
        Objects.equals(this.regulatoryInformation, businessDetails.regulatoryInformation) &&
        Objects.equals(this.stateRegisteredWithAsic, businessDetails.stateRegisteredWithAsic) &&
        Objects.equals(this.stockExchangeData, businessDetails.stockExchangeData) &&
        Objects.equals(this.tradingNames, businessDetails.tradingNames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ABN, ACN, ARBN, anzsicCode, asicCompanyType, businessNames, dateRegisteredWithAsic, entityId, giin, placeOfBusiness, publicCompany, registeredName, registeredOffice, regulatoryInformation, stateRegisteredWithAsic, stockExchangeData, tradingNames);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BusinessDetails {\n");
    sb.append("    ABN: ").append(toIndentedString(ABN)).append("\n");
    sb.append("    ACN: ").append(toIndentedString(ACN)).append("\n");
    sb.append("    ARBN: ").append(toIndentedString(ARBN)).append("\n");
    sb.append("    anzsicCode: ").append(toIndentedString(anzsicCode)).append("\n");
    sb.append("    asicCompanyType: ").append(toIndentedString(asicCompanyType)).append("\n");
    sb.append("    businessNames: ").append(toIndentedString(businessNames)).append("\n");
    sb.append("    dateRegisteredWithAsic: ").append(toIndentedString(dateRegisteredWithAsic)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    giin: ").append(toIndentedString(giin)).append("\n");
    sb.append("    placeOfBusiness: ").append(toIndentedString(placeOfBusiness)).append("\n");
    sb.append("    publicCompany: ").append(toIndentedString(publicCompany)).append("\n");
    sb.append("    registeredName: ").append(toIndentedString(registeredName)).append("\n");
    sb.append("    registeredOffice: ").append(toIndentedString(registeredOffice)).append("\n");
    sb.append("    regulatoryInformation: ").append(toIndentedString(regulatoryInformation)).append("\n");
    sb.append("    stateRegisteredWithAsic: ").append(toIndentedString(stateRegisteredWithAsic)).append("\n");
    sb.append("    stockExchangeData: ").append(toIndentedString(stockExchangeData)).append("\n");
    sb.append("    tradingNames: ").append(toIndentedString(tradingNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ABN");
    openapiFields.add("ACN");
    openapiFields.add("ARBN");
    openapiFields.add("anzsic_code");
    openapiFields.add("asic_company_type");
    openapiFields.add("business_names");
    openapiFields.add("date_registered_with_asic");
    openapiFields.add("entity_id");
    openapiFields.add("giin");
    openapiFields.add("place_of_business");
    openapiFields.add("public_company");
    openapiFields.add("registered_name");
    openapiFields.add("registered_office");
    openapiFields.add("regulatory_information");
    openapiFields.add("state_registered_with_asic");
    openapiFields.add("stock_exchange_data");
    openapiFields.add("trading_names");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ABN");
    openapiRequiredFields.add("ACN");
    openapiRequiredFields.add("ARBN");
    openapiRequiredFields.add("anzsic_code");
    openapiRequiredFields.add("giin");
    openapiRequiredFields.add("registered_name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BusinessDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BusinessDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BusinessDetails is not found in the empty JSON string", BusinessDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BusinessDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BusinessDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : BusinessDetails.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("ABN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ABN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ABN").toString()));
      }
      if (!jsonObj.get("ACN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ACN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ACN").toString()));
      }
      if (!jsonObj.get("ARBN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ARBN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ARBN").toString()));
      }
      if (!jsonObj.get("anzsic_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `anzsic_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("anzsic_code").toString()));
      }
      if ((jsonObj.get("asic_company_type") != null && !jsonObj.get("asic_company_type").isJsonNull()) && !jsonObj.get("asic_company_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `asic_company_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asic_company_type").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("business_names") != null && !jsonObj.get("business_names").isJsonNull() && !jsonObj.get("business_names").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `business_names` to be an array in the JSON string but got `%s`", jsonObj.get("business_names").toString()));
      }
      if ((jsonObj.get("entity_id") != null && !jsonObj.get("entity_id").isJsonNull()) && !jsonObj.get("entity_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity_id").toString()));
      }
      if (!jsonObj.get("giin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `giin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("giin").toString()));
      }
      // validate the optional field `place_of_business`
      if (jsonObj.get("place_of_business") != null && !jsonObj.get("place_of_business").isJsonNull()) {
        AddressObject.validateJsonElement(jsonObj.get("place_of_business"));
      }
      if (!jsonObj.get("registered_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `registered_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("registered_name").toString()));
      }
      // validate the optional field `registered_office`
      if (jsonObj.get("registered_office") != null && !jsonObj.get("registered_office").isJsonNull()) {
        AddressObject.validateJsonElement(jsonObj.get("registered_office"));
      }
      // validate the optional field `regulatory_information`
      if (jsonObj.get("regulatory_information") != null && !jsonObj.get("regulatory_information").isJsonNull()) {
        RegulatoryInformation.validateJsonElement(jsonObj.get("regulatory_information"));
      }
      if ((jsonObj.get("state_registered_with_asic") != null && !jsonObj.get("state_registered_with_asic").isJsonNull()) && !jsonObj.get("state_registered_with_asic").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state_registered_with_asic` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state_registered_with_asic").toString()));
      }
      // validate the optional field `stock_exchange_data`
      if (jsonObj.get("stock_exchange_data") != null && !jsonObj.get("stock_exchange_data").isJsonNull()) {
        StockExchangeData.validateJsonElement(jsonObj.get("stock_exchange_data"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("trading_names") != null && !jsonObj.get("trading_names").isJsonNull() && !jsonObj.get("trading_names").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `trading_names` to be an array in the JSON string but got `%s`", jsonObj.get("trading_names").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BusinessDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BusinessDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BusinessDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BusinessDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<BusinessDetails>() {
           @Override
           public void write(JsonWriter out, BusinessDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BusinessDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BusinessDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BusinessDetails
   * @throws IOException if the JSON string is invalid with respect to BusinessDetails
   */
  public static BusinessDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BusinessDetails.class);
  }

  /**
   * Convert an instance of BusinessDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

