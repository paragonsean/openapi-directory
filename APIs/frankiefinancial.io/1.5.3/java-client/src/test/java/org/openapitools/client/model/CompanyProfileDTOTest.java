/*
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ArrayOfActivityDTO;
import org.openapitools.client.model.ArrayOfActivityDeclarationDTO;
import org.openapitools.client.model.ArrayOfAddressDTO;
import org.openapitools.client.model.ArrayOfCapitalDTO;
import org.openapitools.client.model.ArrayOfString;
import org.openapitools.client.model.ArrayOfUSOfficerDTO;
import org.openapitools.client.model.DirectorAndShareDetails;
import org.openapitools.client.model.LegalFormDTO;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CompanyProfileDTO
 */
public class CompanyProfileDTOTest {
    private final CompanyProfileDTO model = new CompanyProfileDTO();

    /**
     * Model tests for CompanyProfileDTO
     */
    @Test
    public void testCompanyProfileDTO() {
        // TODO: test CompanyProfileDTO
    }

    /**
     * Test the property 'activity'
     */
    @Test
    public void activityTest() {
        // TODO: test activity
    }

    /**
     * Test the property 'activityDeclaration'
     */
    @Test
    public void activityDeclarationTest() {
        // TODO: test activityDeclaration
    }

    /**
     * Test the property 'addresses'
     */
    @Test
    public void addressesTest() {
        // TODO: test addresses
    }

    /**
     * Test the property 'agentAddress'
     */
    @Test
    public void agentAddressTest() {
        // TODO: test agentAddress
    }

    /**
     * Test the property 'agentName'
     */
    @Test
    public void agentNameTest() {
        // TODO: test agentName
    }

    /**
     * Test the property 'aliases'
     */
    @Test
    public void aliasesTest() {
        // TODO: test aliases
    }

    /**
     * Test the property 'appointmentDateOfOfficial'
     */
    @Test
    public void appointmentDateOfOfficialTest() {
        // TODO: test appointmentDateOfOfficial
    }

    /**
     * Test the property 'capital'
     */
    @Test
    public void capitalTest() {
        // TODO: test capital
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'companyNameInEnglish'
     */
    @Test
    public void companyNameInEnglishTest() {
        // TODO: test companyNameInEnglish
    }

    /**
     * Test the property 'date'
     */
    @Test
    public void dateTest() {
        // TODO: test date
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'faxNumber'
     */
    @Test
    public void faxNumberTest() {
        // TODO: test faxNumber
    }

    /**
     * Test the property 'fiscalCode'
     */
    @Test
    public void fiscalCodeTest() {
        // TODO: test fiscalCode
    }

    /**
     * Test the property 'foundationDate'
     */
    @Test
    public void foundationDateTest() {
        // TODO: test foundationDate
    }

    /**
     * Test the property 'functions'
     */
    @Test
    public void functionsTest() {
        // TODO: test functions
    }

    /**
     * Test the property 'headquarters'
     */
    @Test
    public void headquartersTest() {
        // TODO: test headquarters
    }

    /**
     * Test the property 'keyFigures'
     */
    @Test
    public void keyFiguresTest() {
        // TODO: test keyFigures
    }

    /**
     * Test the property 'lastAnnualAccountDate'
     */
    @Test
    public void lastAnnualAccountDateTest() {
        // TODO: test lastAnnualAccountDate
    }

    /**
     * Test the property 'legalForm'
     */
    @Test
    public void legalFormTest() {
        // TODO: test legalForm
    }

    /**
     * Test the property 'legalFormDeclaration'
     */
    @Test
    public void legalFormDeclarationTest() {
        // TODO: test legalFormDeclaration
    }

    /**
     * Test the property 'legalFormDetails'
     */
    @Test
    public void legalFormDetailsTest() {
        // TODO: test legalFormDetails
    }

    /**
     * Test the property 'legalStatus'
     */
    @Test
    public void legalStatusTest() {
        // TODO: test legalStatus
    }

    /**
     * Test the property 'mailingAddress'
     */
    @Test
    public void mailingAddressTest() {
        // TODO: test mailingAddress
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'official'
     */
    @Test
    public void officialTest() {
        // TODO: test official
    }

    /**
     * Test the property 'registrationAuthority'
     */
    @Test
    public void registrationAuthorityTest() {
        // TODO: test registrationAuthority
    }

    /**
     * Test the property 'registrationAuthorityCode'
     */
    @Test
    public void registrationAuthorityCodeTest() {
        // TODO: test registrationAuthorityCode
    }

    /**
     * Test the property 'registrationDate'
     */
    @Test
    public void registrationDateTest() {
        // TODO: test registrationDate
    }

    /**
     * Test the property 'registrationNumber'
     */
    @Test
    public void registrationNumberTest() {
        // TODO: test registrationNumber
    }

    /**
     * Test the property 'signingDeclaration'
     */
    @Test
    public void signingDeclarationTest() {
        // TODO: test signingDeclaration
    }

    /**
     * Test the property 'signingDeclarationDescription'
     */
    @Test
    public void signingDeclarationDescriptionTest() {
        // TODO: test signingDeclarationDescription
    }

    /**
     * Test the property 'signingLanguage'
     */
    @Test
    public void signingLanguageTest() {
        // TODO: test signingLanguage
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'stateOfIncorporation'
     */
    @Test
    public void stateOfIncorporationTest() {
        // TODO: test stateOfIncorporation
    }

    /**
     * Test the property 'telephoneNumber'
     */
    @Test
    public void telephoneNumberTest() {
        // TODO: test telephoneNumber
    }

    /**
     * Test the property 'vatNumber'
     */
    @Test
    public void vatNumberTest() {
        // TODO: test vatNumber
    }

    /**
     * Test the property 'virtualId'
     */
    @Test
    public void virtualIdTest() {
        // TODO: test virtualId
    }

    /**
     * Test the property 'websiteURL'
     */
    @Test
    public void websiteURLTest() {
        // TODO: test websiteURL
    }

    /**
     * Test the property 'directorAndShareDetails'
     */
    @Test
    public void directorAndShareDetailsTest() {
        // TODO: test directorAndShareDetails
    }

    /**
     * Test the property 'officers'
     */
    @Test
    public void officersTest() {
        // TODO: test officers
    }

}
