/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlan.h
 *
 * All information associated with a given plan
 */

#ifndef OAIPlan_H
#define OAIPlan_H

#include <QJsonObject>

#include "OAIBenefits.h"
#include "OAIConditions.h"
#include "OAIContract.h"
#include "OAIFees.h"
#include "OAINameValue.h"
#include "OAIPlan_discounts.h"
#include "OAIRates.h"
#include "OAIRetailer.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBenefits;
class OAIConditions;
class OAIContract;
class OAIPlan_discounts;
class OAIFees;
class OAINameValue;
class OAIRates;
class OAIRetailer;

class OAIPlan : public OAIObject {
public:
    OAIPlan();
    OAIPlan(QString json);
    ~OAIPlan() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBenefits getBenefits() const;
    void setBenefits(const OAIBenefits &benefits);
    bool is_benefits_Set() const;
    bool is_benefits_Valid() const;

    OAIConditions getConditions() const;
    void setConditions(const OAIConditions &conditions);
    bool is_conditions_Set() const;
    bool is_conditions_Valid() const;

    OAIContract getContract() const;
    void setContract(const OAIContract &contract);
    bool is_contract_Set() const;
    bool is_contract_Valid() const;

    QString getDefaultOfferMessage() const;
    void setDefaultOfferMessage(const QString &default_offer_message);
    bool is_default_offer_message_Set() const;
    bool is_default_offer_message_Valid() const;

    bool isDirectDebitRequired() const;
    void setDirectDebitRequired(const bool &direct_debit_required);
    bool is_direct_debit_required_Set() const;
    bool is_direct_debit_required_Valid() const;

    OAIPlan_discounts getDiscounts() const;
    void setDiscounts(const OAIPlan_discounts &discounts);
    bool is_discounts_Set() const;
    bool is_discounts_Valid() const;

    double getEstimatedBaseCost() const;
    void setEstimatedBaseCost(const double &estimated_base_cost);
    bool is_estimated_base_cost_Set() const;
    bool is_estimated_base_cost_Valid() const;

    double getEstimatedSaving() const;
    void setEstimatedSaving(const double &estimated_saving);
    bool is_estimated_saving_Set() const;
    bool is_estimated_saving_Valid() const;

    double getEstimatedTotalCost() const;
    void setEstimatedTotalCost(const double &estimated_total_cost);
    bool is_estimated_total_cost_Set() const;
    bool is_estimated_total_cost_Valid() const;

    OAIFees getFeesAndCharges() const;
    void setFeesAndCharges(const OAIFees &fees_and_charges);
    bool is_fees_and_charges_Set() const;
    bool is_fees_and_charges_Valid() const;

    OAINameValue getGreenOptions() const;
    void setGreenOptions(const OAINameValue &green_options);
    bool is_green_options_Set() const;
    bool is_green_options_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isPayOnTimeRequired() const;
    void setPayOnTimeRequired(const bool &pay_on_time_required);
    bool is_pay_on_time_required_Set() const;
    bool is_pay_on_time_required_Valid() const;

    OAINameValue getPaymentOptions() const;
    void setPaymentOptions(const OAINameValue &payment_options);
    bool is_payment_options_Set() const;
    bool is_payment_options_Valid() const;

    OAIRates getRates() const;
    void setRates(const OAIRates &rates);
    bool is_rates_Set() const;
    bool is_rates_Valid() const;

    OAIRetailer getRetailer() const;
    void setRetailer(const OAIRetailer &retailer);
    bool is_retailer_Set() const;
    bool is_retailer_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBenefits m_benefits;
    bool m_benefits_isSet;
    bool m_benefits_isValid;

    OAIConditions m_conditions;
    bool m_conditions_isSet;
    bool m_conditions_isValid;

    OAIContract m_contract;
    bool m_contract_isSet;
    bool m_contract_isValid;

    QString m_default_offer_message;
    bool m_default_offer_message_isSet;
    bool m_default_offer_message_isValid;

    bool m_direct_debit_required;
    bool m_direct_debit_required_isSet;
    bool m_direct_debit_required_isValid;

    OAIPlan_discounts m_discounts;
    bool m_discounts_isSet;
    bool m_discounts_isValid;

    double m_estimated_base_cost;
    bool m_estimated_base_cost_isSet;
    bool m_estimated_base_cost_isValid;

    double m_estimated_saving;
    bool m_estimated_saving_isSet;
    bool m_estimated_saving_isValid;

    double m_estimated_total_cost;
    bool m_estimated_total_cost_isSet;
    bool m_estimated_total_cost_isValid;

    OAIFees m_fees_and_charges;
    bool m_fees_and_charges_isSet;
    bool m_fees_and_charges_isValid;

    OAINameValue m_green_options;
    bool m_green_options_isSet;
    bool m_green_options_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_pay_on_time_required;
    bool m_pay_on_time_required_isSet;
    bool m_pay_on_time_required_isValid;

    OAINameValue m_payment_options;
    bool m_payment_options_isSet;
    bool m_payment_options_isValid;

    OAIRates m_rates;
    bool m_rates_isSet;
    bool m_rates_isValid;

    OAIRetailer m_retailer;
    bool m_retailer_isSet;
    bool m_retailer_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlan)

#endif // OAIPlan_H
