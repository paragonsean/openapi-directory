/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEnumKVPType.h
 *
 * Used to describe the contents of the KVP data.   The general.* and raw.* types are pretty much what they say on the tin.   All raw.* fields will be base64 encoded so as to not interfere with JSON structuring. These are useful for returning/storing large quantities of data that doesn&#39;t necessarily require processing now, or may be useful to a calling client.  The id.* and pii.* are used to indicate that this is data that can be used to create new document objects, or entities. They should also be treated with the utmost care and attention when it comes to securing them too.  id.external can be used to capture an object&#39;s ID on an external service, and can potentially be searchable in the index  Note - This is different from a result.id.  defunct is used to mark an existing KVP deleted when the value must be retained, for example for audit purposes.  result.* are used to capture response codes and transaction IDs from external services  error.* types can be used when processing a document that returns an error, but doesn&#39;t necessarily require a full blown error response. 
 */

#ifndef OAIEnumKVPType_H
#define OAIEnumKVPType_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEnumKVPType : public OAIEnum {
public:
    OAIEnumKVPType();
    OAIEnumKVPType(QString json);
    ~OAIEnumKVPType() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIEnumKVPType {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        DEFUNCT, 
        GENERAL_STRING, 
        GENERAL_INTEGER, 
        GENERAL_FLOAT, 
        GENERAL_BOOL, 
        GENERAL_DATE, 
        GENERAL_DATETIME, 
        RAW_JSON_BASE64, 
        RAW_XML_BASE64, 
        RAW_BASE64, 
        ERROR_CODE, 
        ERROR_MESSAGE, 
        RESULT_CODE, 
        RESULT_ID, 
        ID_EXTERNAL, 
        ID_NUMBER_PRIMARY, 
        ID_NUMBER_ADDITIONAL, 
        ID_MSISDN, 
        ID_EMAIL, 
        ID_DEVICE, 
        PII_NAME_FULL, 
        PII_NAME_FAMILYNAME, 
        PII_NAME_GIVENNAME, 
        PII_NAME_MIDDLENAME, 
        PII_GENDER, 
        PII_ADDRESS_LONGFORM, 
        PII_ADDRESS_STREET1, 
        PII_ADDRESS_STREET2, 
        PII_ADDRESS_POSTALCODE, 
        PII_ADDRESS_TOWN, 
        PII_ADDRESS_SUBURB, 
        PII_ADDRESS_REGION, 
        PII_ADDRESS_STATE, 
        PII_ADDRESS_COUNTRY, 
        PII_DOB, 
        TRANSIENT_STRING
    };
    OAIEnumKVPType::eOAIEnumKVPType getValue() const;
    void setValue(const OAIEnumKVPType::eOAIEnumKVPType& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIEnumKVPType m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEnumKVPType)

#endif // OAIEnumKVPType_H
