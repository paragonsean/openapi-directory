/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDirector.h
 *
 * 
 */

#ifndef OAIDirector_H
#define OAIDirector_H

#include <QJsonObject>

#include "OAIArrayOfDirectorship.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArrayOfDirectorship;

class OAIDirector : public OAIObject {
public:
    OAIDirector();
    OAIDirector(QString json);
    ~OAIDirector() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddress1() const;
    void setAddress1(const QString &address1);
    bool is_address1_Set() const;
    bool is_address1_Valid() const;

    QString getAddress2() const;
    void setAddress2(const QString &address2);
    bool is_address2_Set() const;
    bool is_address2_Valid() const;

    QString getAddress3() const;
    void setAddress3(const QString &address3);
    bool is_address3_Set() const;
    bool is_address3_Valid() const;

    QString getAddress4() const;
    void setAddress4(const QString &address4);
    bool is_address4_Set() const;
    bool is_address4_Valid() const;

    QString getAddress5() const;
    void setAddress5(const QString &address5);
    bool is_address5_Set() const;
    bool is_address5_Valid() const;

    QString getAddress6() const;
    void setAddress6(const QString &address6);
    bool is_address6_Set() const;
    bool is_address6_Valid() const;

    QString getBirthdate() const;
    void setBirthdate(const QString &birthdate);
    bool is_birthdate_Set() const;
    bool is_birthdate_Valid() const;

    QString getDirectorNumber() const;
    void setDirectorNumber(const QString &director_number);
    bool is_director_number_Set() const;
    bool is_director_number_Valid() const;

    OAIArrayOfDirectorship getDirectorships() const;
    void setDirectorships(const OAIArrayOfDirectorship &directorships);
    bool is_directorships_Set() const;
    bool is_directorships_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNationality() const;
    void setNationality(const QString &nationality);
    bool is_nationality_Set() const;
    bool is_nationality_Valid() const;

    QString getPostcode() const;
    void setPostcode(const QString &postcode);
    bool is_postcode_Set() const;
    bool is_postcode_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address1;
    bool m_address1_isSet;
    bool m_address1_isValid;

    QString m_address2;
    bool m_address2_isSet;
    bool m_address2_isValid;

    QString m_address3;
    bool m_address3_isSet;
    bool m_address3_isValid;

    QString m_address4;
    bool m_address4_isSet;
    bool m_address4_isValid;

    QString m_address5;
    bool m_address5_isSet;
    bool m_address5_isValid;

    QString m_address6;
    bool m_address6_isSet;
    bool m_address6_isValid;

    QString m_birthdate;
    bool m_birthdate_isSet;
    bool m_birthdate_isValid;

    QString m_director_number;
    bool m_director_number_isSet;
    bool m_director_number_isValid;

    OAIArrayOfDirectorship m_directorships;
    bool m_directorships_isSet;
    bool m_directorships_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_nationality;
    bool m_nationality_isSet;
    bool m_nationality_isValid;

    QString m_postcode;
    bool m_postcode_isSet;
    bool m_postcode_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDirector)

#endif // OAIDirector_H
