/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPuppyObject.h
 *
 * All valid customers get a puppy. Otherwise, no puppy for you!
 */

#ifndef OAIPuppyObject_H
#define OAIPuppyObject_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPuppyObject : public OAIObject {
public:
    OAIPuppyObject();
    OAIPuppyObject(QString json);
    ~OAIPuppyObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAsknicely1() const;
    void setAsknicely1(const QString &asknicely1);
    bool is_asknicely1_Set() const;
    bool is_asknicely1_Valid() const;

    QString getAsknicely2() const;
    void setAsknicely2(const QString &asknicely2);
    bool is_asknicely2_Set() const;
    bool is_asknicely2_Valid() const;

    QString getAsknicely3() const;
    void setAsknicely3(const QString &asknicely3);
    bool is_asknicely3_Set() const;
    bool is_asknicely3_Valid() const;

    QString getAsknicely4() const;
    void setAsknicely4(const QString &asknicely4);
    bool is_asknicely4_Set() const;
    bool is_asknicely4_Valid() const;

    QString getAsknicely5() const;
    void setAsknicely5(const QString &asknicely5);
    bool is_asknicely5_Set() const;
    bool is_asknicely5_Valid() const;

    QString getAsknicely6() const;
    void setAsknicely6(const QString &asknicely6);
    bool is_asknicely6_Set() const;
    bool is_asknicely6_Valid() const;

    QString getAsknicely7() const;
    void setAsknicely7(const QString &asknicely7);
    bool is_asknicely7_Set() const;
    bool is_asknicely7_Valid() const;

    QString getCommit() const;
    void setCommit(const QString &commit);
    bool is_commit_Set() const;
    bool is_commit_Valid() const;

    bool isPuppy() const;
    void setPuppy(const bool &puppy);
    bool is_puppy_Set() const;
    bool is_puppy_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_asknicely1;
    bool m_asknicely1_isSet;
    bool m_asknicely1_isValid;

    QString m_asknicely2;
    bool m_asknicely2_isSet;
    bool m_asknicely2_isValid;

    QString m_asknicely3;
    bool m_asknicely3_isSet;
    bool m_asknicely3_isValid;

    QString m_asknicely4;
    bool m_asknicely4_isSet;
    bool m_asknicely4_isValid;

    QString m_asknicely5;
    bool m_asknicely5_isSet;
    bool m_asknicely5_isValid;

    QString m_asknicely6;
    bool m_asknicely6_isSet;
    bool m_asknicely6_isValid;

    QString m_asknicely7;
    bool m_asknicely7_isSet;
    bool m_asknicely7_isValid;

    QString m_commit;
    bool m_commit_isSet;
    bool m_commit_isValid;

    bool m_puppy;
    bool m_puppy_isSet;
    bool m_puppy_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPuppyObject)

#endif // OAIPuppyObject_H
