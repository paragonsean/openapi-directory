/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEnumIdType.h
 *
 * Valid ID types   - \&quot;OTHER\&quot;: Generic document type. Unspecified.   - \&quot;DRIVERS_LICENCE\&quot;: Driver&#39;s licence.   - \&quot;PASSPORT\&quot;: Passport   - \&quot;VISA\&quot;: Visa document (not Visa payment card)   - \&quot;IMMIGRATION\&quot;: Immigration card   - \&quot;NATIONAL_ID\&quot;: Any national ID card   - \&quot;TAX_ID\&quot;: Any national tax identifier   - \&quot;NATIONAL_HEALTH_ID\&quot;: Any national health program ID card (e.g. Medicare, NHS)   - \&quot;CONCESSION\&quot;: State issued concession card   - \&quot;HEALTH_CONCESSION\&quot;: State issued health specific concession card   - \&quot;PENSION\&quot;: State issued pension ID   - \&quot;MILITARY_ID\&quot;: Military ID   - \&quot;BIRTH_CERT\&quot;: Birth certificate   - \&quot;CITIZENSHIP\&quot;: Citizenship certificate   - \&quot;MARRIAGE_CERT\&quot;: Marriage certificate   - \&quot;DEATH_CERT\&quot;: Death certificate   - \&quot;NAME_CHANGE\&quot;: Name chage confirmation   - \&quot;UTILITY_BILL\&quot;: Regulated utility bill, such as electricity, gas, etc   - \&quot;BANK_STATEMENT\&quot;: Bank/card statement   - \&quot;BANK_ACCOUNT\&quot;: Bank account   - \&quot;INTENT_PROOF\&quot;: A proof of intent. Generally a photo/video, or a scanned letter   - \&quot;ATTESTATION\&quot;: A document of attestation (e.g. Statutory Declaration)   - \&quot;SELF_IMAGE\&quot;: A \&quot;selfie\&quot; used for comparisions   - \&quot;EMAIL_ADDRESS\&quot;: An email address   - \&quot;MSISDN\&quot;: A mobile phone number   - \&quot;DEVICE\&quot;: A device ID   - \&quot;VEHICLE_REGISTRATION\&quot;: Vehicle registration number Business related documentation   - \&quot;EXTERNAL_ADMIN\&quot;: Details of appointed administrator.   - \&quot;CHARGES\&quot;: Details of any charges that have been laid against a company or director   - \&quot;PRE_ASIC\&quot;: Any documents that are Pre-ASIC   - \&quot;ANNUAL_RETURN\&quot;: Details of a company&#39;s annual return   - \&quot;REPORT\&quot;: Frankie generated report. Special document types   - \&quot;CHECK_RESULTS\&quot;: A special document type for specifying results of checks completed other than through Frankie. 
 */

#ifndef OAIEnumIdType_H
#define OAIEnumIdType_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEnumIdType : public OAIEnum {
public:
    OAIEnumIdType();
    OAIEnumIdType(QString json);
    ~OAIEnumIdType() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIEnumIdType {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        OTHER, 
        DRIVERS_LICENCE, 
        PASSPORT, 
        VISA, 
        IMMIGRATION, 
        NATIONAL_ID, 
        TAX_ID, 
        NATIONAL_HEALTH_ID, 
        CONCESSION, 
        HEALTH_CONCESSION, 
        PENSION, 
        MILITARY_ID, 
        BIRTH_CERT, 
        CITIZENSHIP, 
        MARRIAGE_CERT, 
        DEATH_CERT, 
        NAME_CHANGE, 
        MOBILE_PHONE, 
        UTILITY_BILL, 
        BANK_STATEMENT, 
        BANK_ACCOUNT, 
        INTENT_PROOF, 
        ATTESTATION, 
        SELF_IMAGE, 
        EMAIL_ADDRESS, 
        MSISDN, 
        DEVICE, 
        VEHICLE_REGISTRATION, 
        EXTERNAL_ADMIN, 
        CHARGES, 
        PRE_ASIC, 
        ANNUAL_RETURN, 
        REPORT, 
        CHECK_RESULTS
    };
    OAIEnumIdType::eOAIEnumIdType getValue() const;
    void setValue(const OAIEnumIdType::eOAIEnumIdType& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIEnumIdType m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEnumIdType)

#endif // OAIEnumIdType_H
