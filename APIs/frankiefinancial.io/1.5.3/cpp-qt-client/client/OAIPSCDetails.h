/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPSCDetails.h
 *
 * 
 */

#ifndef OAIPSCDetails_H
#define OAIPSCDetails_H

#include <QJsonObject>

#include "OAIArrayOfString.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArrayOfString;

class OAIPSCDetails : public OAIObject {
public:
    OAIPSCDetails();
    OAIPSCDetails(QString json);
    ~OAIPSCDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getCeasedOn() const;
    void setCeasedOn(const QString &ceased_on);
    bool is_ceased_on_Set() const;
    bool is_ceased_on_Valid() const;

    QString getCountryOfResidence() const;
    void setCountryOfResidence(const QString &country_of_residence);
    bool is_country_of_residence_Set() const;
    bool is_country_of_residence_Valid() const;

    qint64 getDobDay() const;
    void setDobDay(const qint64 &dob_day);
    bool is_dob_day_Set() const;
    bool is_dob_day_Valid() const;

    qint64 getDobMonth() const;
    void setDobMonth(const qint64 &dob_month);
    bool is_dob_month_Set() const;
    bool is_dob_month_Valid() const;

    qint64 getDobYear() const;
    void setDobYear(const qint64 &dob_year);
    bool is_dob_year_Set() const;
    bool is_dob_year_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNationality() const;
    void setNationality(const QString &nationality);
    bool is_nationality_Set() const;
    bool is_nationality_Valid() const;

    OAIArrayOfString getNatureOfControl() const;
    void setNatureOfControl(const OAIArrayOfString &nature_of_control);
    bool is_nature_of_control_Set() const;
    bool is_nature_of_control_Valid() const;

    QString getNotifiedOn() const;
    void setNotifiedOn(const QString &notified_on);
    bool is_notified_on_Set() const;
    bool is_notified_on_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_ceased_on;
    bool m_ceased_on_isSet;
    bool m_ceased_on_isValid;

    QString m_country_of_residence;
    bool m_country_of_residence_isSet;
    bool m_country_of_residence_isValid;

    qint64 m_dob_day;
    bool m_dob_day_isSet;
    bool m_dob_day_isValid;

    qint64 m_dob_month;
    bool m_dob_month_isSet;
    bool m_dob_month_isValid;

    qint64 m_dob_year;
    bool m_dob_year_isSet;
    bool m_dob_year_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_nationality;
    bool m_nationality_isSet;
    bool m_nationality_isValid;

    OAIArrayOfString m_nature_of_control;
    bool m_nature_of_control_isSet;
    bool m_nature_of_control_isValid;

    QString m_notified_on;
    bool m_notified_on_isSet;
    bool m_notified_on_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPSCDetails)

#endif // OAIPSCDetails_H
