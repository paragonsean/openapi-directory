/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStockExchangeData.h
 *
 * If a company is listed, then this object will be populated with whatever data has been determined. 
 */

#ifndef OAIStockExchangeData_H
#define OAIStockExchangeData_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStockExchangeData : public OAIObject {
public:
    OAIStockExchangeData();
    OAIStockExchangeData(QString json);
    ~OAIStockExchangeData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isApprovedExchange() const;
    void setApprovedExchange(const bool &approved_exchange);
    bool is_approved_exchange_Set() const;
    bool is_approved_exchange_Valid() const;

    QString getExchange() const;
    void setExchange(const QString &exchange);
    bool is_exchange_Set() const;
    bool is_exchange_Valid() const;

    QString getExchangeTicker() const;
    void setExchangeTicker(const QString &exchange_ticker);
    bool is_exchange_ticker_Set() const;
    bool is_exchange_ticker_Valid() const;

    QList<QString> getSupportingDocumentLinks() const;
    void setSupportingDocumentLinks(const QList<QString> &supporting_document_links);
    bool is_supporting_document_links_Set() const;
    bool is_supporting_document_links_Valid() const;

    bool isSupportingEvidenceInPdf() const;
    void setSupportingEvidenceInPdf(const bool &supporting_evidence_in_pdf);
    bool is_supporting_evidence_in_pdf_Set() const;
    bool is_supporting_evidence_in_pdf_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_approved_exchange;
    bool m_approved_exchange_isSet;
    bool m_approved_exchange_isValid;

    QString m_exchange;
    bool m_exchange_isSet;
    bool m_exchange_isValid;

    QString m_exchange_ticker;
    bool m_exchange_ticker_isSet;
    bool m_exchange_ticker_isValid;

    QList<QString> m_supporting_document_links;
    bool m_supporting_document_links_isSet;
    bool m_supporting_document_links_isValid;

    bool m_supporting_evidence_in_pdf;
    bool m_supporting_evidence_in_pdf_isSet;
    bool m_supporting_evidence_in_pdf_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStockExchangeData)

#endif // OAIStockExchangeData_H
