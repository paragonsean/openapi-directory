/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAddressDTO.h
 *
 * 
 */

#ifndef OAIAddressDTO_H
#define OAIAddressDTO_H

#include <QJsonObject>

#include "OAIArrayOfAddressLineDTO.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArrayOfAddressLineDTO;

class OAIAddressDTO : public OAIObject {
public:
    OAIAddressDTO();
    OAIAddressDTO(QString json);
    ~OAIAddressDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddressInOneLine() const;
    void setAddressInOneLine(const QString &address_in_one_line);
    bool is_address_in_one_line_Set() const;
    bool is_address_in_one_line_Valid() const;

    QString getAddressLine1() const;
    void setAddressLine1(const QString &address_line1);
    bool is_address_line1_Set() const;
    bool is_address_line1_Valid() const;

    QString getAddressLine2() const;
    void setAddressLine2(const QString &address_line2);
    bool is_address_line2_Set() const;
    bool is_address_line2_Valid() const;

    QString getAddressLine3() const;
    void setAddressLine3(const QString &address_line3);
    bool is_address_line3_Set() const;
    bool is_address_line3_Valid() const;

    QString getAddressLine4() const;
    void setAddressLine4(const QString &address_line4);
    bool is_address_line4_Set() const;
    bool is_address_line4_Valid() const;

    QString getAddressLine5() const;
    void setAddressLine5(const QString &address_line5);
    bool is_address_line5_Set() const;
    bool is_address_line5_Valid() const;

    QString getCityTown() const;
    void setCityTown(const QString &city_town);
    bool is_city_town_Set() const;
    bool is_city_town_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getFaxNumber() const;
    void setFaxNumber(const QString &fax_number);
    bool is_fax_number_Set() const;
    bool is_fax_number_Valid() const;

    OAIArrayOfAddressLineDTO getLine() const;
    void setLine(const OAIArrayOfAddressLineDTO &line);
    bool is_line_Set() const;
    bool is_line_Valid() const;

    QString getPostcode() const;
    void setPostcode(const QString &postcode);
    bool is_postcode_Set() const;
    bool is_postcode_Valid() const;

    QString getRegionState() const;
    void setRegionState(const QString &region_state);
    bool is_region_state_Set() const;
    bool is_region_state_Valid() const;

    QString getTelephoneNumber() const;
    void setTelephoneNumber(const QString &telephone_number);
    bool is_telephone_number_Set() const;
    bool is_telephone_number_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getTypeCode() const;
    void setTypeCode(const QString &type_code);
    bool is_type_code_Set() const;
    bool is_type_code_Valid() const;

    QString getWebsiteUrl() const;
    void setWebsiteUrl(const QString &website_url);
    bool is_website_url_Set() const;
    bool is_website_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address_in_one_line;
    bool m_address_in_one_line_isSet;
    bool m_address_in_one_line_isValid;

    QString m_address_line1;
    bool m_address_line1_isSet;
    bool m_address_line1_isValid;

    QString m_address_line2;
    bool m_address_line2_isSet;
    bool m_address_line2_isValid;

    QString m_address_line3;
    bool m_address_line3_isSet;
    bool m_address_line3_isValid;

    QString m_address_line4;
    bool m_address_line4_isSet;
    bool m_address_line4_isValid;

    QString m_address_line5;
    bool m_address_line5_isSet;
    bool m_address_line5_isValid;

    QString m_city_town;
    bool m_city_town_isSet;
    bool m_city_town_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_fax_number;
    bool m_fax_number_isSet;
    bool m_fax_number_isValid;

    OAIArrayOfAddressLineDTO m_line;
    bool m_line_isSet;
    bool m_line_isValid;

    QString m_postcode;
    bool m_postcode_isSet;
    bool m_postcode_isValid;

    QString m_region_state;
    bool m_region_state_isSet;
    bool m_region_state_isValid;

    QString m_telephone_number;
    bool m_telephone_number_isSet;
    bool m_telephone_number_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_type_code;
    bool m_type_code_isSet;
    bool m_type_code_isValid;

    QString m_website_url;
    bool m_website_url_isSet;
    bool m_website_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAddressDTO)

#endif // OAIAddressDTO_H
