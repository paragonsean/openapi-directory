/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPaymentDefault.h
 *
 * 
 */

#ifndef OAIPaymentDefault_H
#define OAIPaymentDefault_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPaymentDefault : public OAIObject {
public:
    OAIPaymentDefault();
    OAIPaymentDefault(QString json);
    ~OAIPaymentDefault() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAbn() const;
    void setAbn(const QString &abn);
    bool is_abn_Set() const;
    bool is_abn_Valid() const;

    QString getAccountAdditionalAbn() const;
    void setAccountAdditionalAbn(const QString &account_additional_abn);
    bool is_account_additional_abn_Set() const;
    bool is_account_additional_abn_Valid() const;

    QDateTime getAccountVerifiedDate() const;
    void setAccountVerifiedDate(const QDateTime &account_verified_date);
    bool is_account_verified_date_Set() const;
    bool is_account_verified_date_Valid() const;

    float getAmountOutstanding() const;
    void setAmountOutstanding(const float &amount_outstanding);
    bool is_amount_outstanding_Set() const;
    bool is_amount_outstanding_Valid() const;

    QDateTime getApprovedDate() const;
    void setApprovedDate(const QDateTime &approved_date);
    bool is_approved_date_Set() const;
    bool is_approved_date_Valid() const;

    QString getCompany() const;
    void setCompany(const QString &company);
    bool is_company_Set() const;
    bool is_company_Valid() const;

    bool isDefaultSettled() const;
    void setDefaultSettled(const bool &default_settled);
    bool is_default_settled_Set() const;
    bool is_default_settled_Valid() const;

    QString getDoctype() const;
    void setDoctype(const QString &doctype);
    bool is_doctype_Set() const;
    bool is_doctype_Valid() const;

    QString getDocumentType() const;
    void setDocumentType(const QString &document_type);
    bool is_document_type_Set() const;
    bool is_document_type_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QDateTime getOriginalInvoiceDate() const;
    void setOriginalInvoiceDate(const QDateTime &original_invoice_date);
    bool is_original_invoice_date_Set() const;
    bool is_original_invoice_date_Valid() const;

    bool isPartPaymentMade() const;
    void setPartPaymentMade(const bool &part_payment_made);
    bool is_part_payment_made_Set() const;
    bool is_part_payment_made_Valid() const;

    bool isPartpayment() const;
    void setPartpayment(const bool &partpayment);
    bool is_partpayment_Set() const;
    bool is_partpayment_Valid() const;

    QDateTime getPaymentDueDate() const;
    void setPaymentDueDate(const QDateTime &payment_due_date);
    bool is_payment_due_date_Set() const;
    bool is_payment_due_date_Valid() const;

    QString getPosterAbn() const;
    void setPosterAbn(const QString &poster_abn);
    bool is_poster_abn_Set() const;
    bool is_poster_abn_Valid() const;

    QString getPosterName() const;
    void setPosterName(const QString &poster_name);
    bool is_poster_name_Set() const;
    bool is_poster_name_Valid() const;

    bool isSettled() const;
    void setSettled(const bool &settled);
    bool is_settled_Set() const;
    bool is_settled_Valid() const;

    QDateTime getUploadedDate() const;
    void setUploadedDate(const QDateTime &uploaded_date);
    bool is_uploaded_date_Set() const;
    bool is_uploaded_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_abn;
    bool m_abn_isSet;
    bool m_abn_isValid;

    QString m_account_additional_abn;
    bool m_account_additional_abn_isSet;
    bool m_account_additional_abn_isValid;

    QDateTime m_account_verified_date;
    bool m_account_verified_date_isSet;
    bool m_account_verified_date_isValid;

    float m_amount_outstanding;
    bool m_amount_outstanding_isSet;
    bool m_amount_outstanding_isValid;

    QDateTime m_approved_date;
    bool m_approved_date_isSet;
    bool m_approved_date_isValid;

    QString m_company;
    bool m_company_isSet;
    bool m_company_isValid;

    bool m_default_settled;
    bool m_default_settled_isSet;
    bool m_default_settled_isValid;

    QString m_doctype;
    bool m_doctype_isSet;
    bool m_doctype_isValid;

    QString m_document_type;
    bool m_document_type_isSet;
    bool m_document_type_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QDateTime m_original_invoice_date;
    bool m_original_invoice_date_isSet;
    bool m_original_invoice_date_isValid;

    bool m_part_payment_made;
    bool m_part_payment_made_isSet;
    bool m_part_payment_made_isValid;

    bool m_partpayment;
    bool m_partpayment_isSet;
    bool m_partpayment_isValid;

    QDateTime m_payment_due_date;
    bool m_payment_due_date_isSet;
    bool m_payment_due_date_isValid;

    QString m_poster_abn;
    bool m_poster_abn_isSet;
    bool m_poster_abn_isValid;

    QString m_poster_name;
    bool m_poster_name_isSet;
    bool m_poster_name_isValid;

    bool m_settled;
    bool m_settled_isSet;
    bool m_settled_isValid;

    QDateTime m_uploaded_date;
    bool m_uploaded_date_isSet;
    bool m_uploaded_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPaymentDefault)

#endif // OAIPaymentDefault_H
