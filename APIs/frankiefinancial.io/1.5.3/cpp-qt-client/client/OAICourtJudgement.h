/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICourtJudgement.h
 *
 * 
 */

#ifndef OAICourtJudgement_H
#define OAICourtJudgement_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICourtJudgement : public OAIObject {
public:
    OAICourtJudgement();
    OAICourtJudgement(QString json);
    ~OAICourtJudgement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    QDateTime getActionDate() const;
    void setActionDate(const QDateTime &action_date);
    bool is_action_date_Set() const;
    bool is_action_date_Valid() const;

    QDateTime getCreatedDate() const;
    void setCreatedDate(const QDateTime &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    float getJudgementAmount() const;
    void setJudgementAmount(const float &judgement_amount);
    bool is_judgement_amount_Set() const;
    bool is_judgement_amount_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getNatureOfClaim() const;
    void setNatureOfClaim(const QString &nature_of_claim);
    bool is_nature_of_claim_Set() const;
    bool is_nature_of_claim_Valid() const;

    QString getNatureOfClaimDesc() const;
    void setNatureOfClaimDesc(const QString &nature_of_claim_desc);
    bool is_nature_of_claim_desc_Set() const;
    bool is_nature_of_claim_desc_Valid() const;

    QString getPlaintiff() const;
    void setPlaintiff(const QString &plaintiff);
    bool is_plaintiff_Set() const;
    bool is_plaintiff_Valid() const;

    QString getProceedingNumber() const;
    void setProceedingNumber(const QString &proceeding_number);
    bool is_proceeding_number_Set() const;
    bool is_proceeding_number_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    QDateTime m_action_date;
    bool m_action_date_isSet;
    bool m_action_date_isValid;

    QDateTime m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    float m_judgement_amount;
    bool m_judgement_amount_isSet;
    bool m_judgement_amount_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_nature_of_claim;
    bool m_nature_of_claim_isSet;
    bool m_nature_of_claim_isValid;

    QString m_nature_of_claim_desc;
    bool m_nature_of_claim_desc_isSet;
    bool m_nature_of_claim_desc_isValid;

    QString m_plaintiff;
    bool m_plaintiff_isSet;
    bool m_plaintiff_isValid;

    QString m_proceeding_number;
    bool m_proceeding_number_isSet;
    bool m_proceeding_number_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICourtJudgement)

#endif // OAICourtJudgement_H
