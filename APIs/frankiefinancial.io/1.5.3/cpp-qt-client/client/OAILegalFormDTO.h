/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILegalFormDTO.h
 *
 * 
 */

#ifndef OAILegalFormDTO_H
#define OAILegalFormDTO_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILegalFormDTO : public OAIObject {
public:
    OAILegalFormDTO();
    OAILegalFormDTO(QString json);
    ~OAILegalFormDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBasis() const;
    void setBasis(const QString &basis);
    bool is_basis_Set() const;
    bool is_basis_Valid() const;

    QString getCapital() const;
    void setCapital(const QString &capital);
    bool is_capital_Set() const;
    bool is_capital_Valid() const;

    QString getComments() const;
    void setComments(const QString &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QString getControl() const;
    void setControl(const QString &control);
    bool is_control_Set() const;
    bool is_control_Valid() const;

    QString getIncorp() const;
    void setIncorp(const QString &incorp);
    bool is_incorp_Set() const;
    bool is_incorp_Valid() const;

    QString getPartner() const;
    void setPartner(const QString &partner);
    bool is_partner_Set() const;
    bool is_partner_Valid() const;

    QString getResponsibility() const;
    void setResponsibility(const QString &responsibility);
    bool is_responsibility_Set() const;
    bool is_responsibility_Valid() const;

    QString getStocks() const;
    void setStocks(const QString &stocks);
    bool is_stocks_Set() const;
    bool is_stocks_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_basis;
    bool m_basis_isSet;
    bool m_basis_isValid;

    QString m_capital;
    bool m_capital_isSet;
    bool m_capital_isValid;

    QString m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QString m_control;
    bool m_control_isSet;
    bool m_control_isValid;

    QString m_incorp;
    bool m_incorp_isSet;
    bool m_incorp_isValid;

    QString m_partner;
    bool m_partner_isSet;
    bool m_partner_isValid;

    QString m_responsibility;
    bool m_responsibility_isSet;
    bool m_responsibility_isValid;

    QString m_stocks;
    bool m_stocks_isSet;
    bool m_stocks_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILegalFormDTO)

#endif // OAILegalFormDTO_H
