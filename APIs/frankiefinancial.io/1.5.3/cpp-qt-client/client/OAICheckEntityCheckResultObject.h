/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICheckEntityCheckResultObject.h
 *
 * Describes all of the checks that were carried out against an entity as part of our cascading check process. Because there are a number of steps involved in checking an entity, (including the use of past checks done by you or others), there is an overall summary check result that will tell you the final disposition of the the check you requested.  So if you requested a 2+2+governmentID+pep/sanctions/etc (i.e. everything) then there would have been several checks done in order to meet this requirement. Some may have even failed, but eventually we got there. The summary gives the final assessment, based on all available data.  Detailed writeups on how this all works can be found here:   https://apidocs.frankiefinancial.com/docs/understanding-checksummary-results 
 */

#ifndef OAICheckEntityCheckResultObject_H
#define OAICheckEntityCheckResultObject_H

#include <QJsonObject>

#include "OAICheckEntityCheckResultObject_entityResult.h"
#include "OAIEntityObject.h"
#include "OAIEntityProfileResultObject.h"
#include "OAIFraudCheckResultObject.h"
#include "OAIProcessResultObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProcessResultObject;
class OAIEntityObject;
class OAIEntityProfileResultObject;
class OAICheckEntityCheckResultObject_entityResult;
class OAIFraudCheckResultObject;

class OAICheckEntityCheckResultObject : public OAIObject {
public:
    OAICheckEntityCheckResultObject();
    OAICheckEntityCheckResultObject(QString json);
    ~OAICheckEntityCheckResultObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIProcessResultObject> getBlacklistCheckResults() const;
    void setBlacklistCheckResults(const QList<OAIProcessResultObject> &blacklist_check_results);
    bool is_blacklist_check_results_Set() const;
    bool is_blacklist_check_results_Valid() const;

    QList<OAIProcessResultObject> getCheckResultsListSummaries() const;
    void setCheckResultsListSummaries(const QList<OAIProcessResultObject> &check_results_list_summaries);
    bool is_check_results_list_summaries_Set() const;
    bool is_check_results_list_summaries_Valid() const;

    OAIProcessResultObject getCheckRisk() const;
    void setCheckRisk(const OAIProcessResultObject &check_risk);
    bool is_check_risk_Set() const;
    bool is_check_risk_Valid() const;

    OAIProcessResultObject getCheckSummary() const;
    void setCheckSummary(const OAIProcessResultObject &check_summary);
    bool is_check_summary_Set() const;
    bool is_check_summary_Valid() const;

    QList<OAIProcessResultObject> getDeviceCheckResults() const;
    void setDeviceCheckResults(const QList<OAIProcessResultObject> &device_check_results);
    bool is_device_check_results_Set() const;
    bool is_device_check_results_Valid() const;

    QList<OAIProcessResultObject> getDuplicateCheckResults() const;
    void setDuplicateCheckResults(const QList<OAIProcessResultObject> &duplicate_check_results);
    bool is_duplicate_check_results_Set() const;
    bool is_duplicate_check_results_Valid() const;

    OAIEntityObject getEntity() const;
    void setEntity(const OAIEntityObject &entity);
    bool is_entity_Set() const;
    bool is_entity_Valid() const;

    OAIEntityProfileResultObject getEntityProfileResult() const;
    void setEntityProfileResult(const OAIEntityProfileResultObject &entity_profile_result);
    bool is_entity_profile_result_Set() const;
    bool is_entity_profile_result_Valid() const;

    OAICheckEntityCheckResultObject_entityResult getEntityResult() const;
    void setEntityResult(const OAICheckEntityCheckResultObject_entityResult &entity_result);
    bool is_entity_result_Set() const;
    bool is_entity_result_Valid() const;

    OAIFraudCheckResultObject getFraudCheckResults() const;
    void setFraudCheckResults(const OAIFraudCheckResultObject &fraud_check_results);
    bool is_fraud_check_results_Set() const;
    bool is_fraud_check_results_Valid() const;

    QList<OAIProcessResultObject> getManualCheckResults() const;
    void setManualCheckResults(const QList<OAIProcessResultObject> &manual_check_results);
    bool is_manual_check_results_Set() const;
    bool is_manual_check_results_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    QList<OAIProcessResultObject> getSharedBlocklistCheckResults() const;
    void setSharedBlocklistCheckResults(const QList<OAIProcessResultObject> &shared_blocklist_check_results);
    bool is_shared_blocklist_check_results_Set() const;
    bool is_shared_blocklist_check_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIProcessResultObject> m_blacklist_check_results;
    bool m_blacklist_check_results_isSet;
    bool m_blacklist_check_results_isValid;

    QList<OAIProcessResultObject> m_check_results_list_summaries;
    bool m_check_results_list_summaries_isSet;
    bool m_check_results_list_summaries_isValid;

    OAIProcessResultObject m_check_risk;
    bool m_check_risk_isSet;
    bool m_check_risk_isValid;

    OAIProcessResultObject m_check_summary;
    bool m_check_summary_isSet;
    bool m_check_summary_isValid;

    QList<OAIProcessResultObject> m_device_check_results;
    bool m_device_check_results_isSet;
    bool m_device_check_results_isValid;

    QList<OAIProcessResultObject> m_duplicate_check_results;
    bool m_duplicate_check_results_isSet;
    bool m_duplicate_check_results_isValid;

    OAIEntityObject m_entity;
    bool m_entity_isSet;
    bool m_entity_isValid;

    OAIEntityProfileResultObject m_entity_profile_result;
    bool m_entity_profile_result_isSet;
    bool m_entity_profile_result_isValid;

    OAICheckEntityCheckResultObject_entityResult m_entity_result;
    bool m_entity_result_isSet;
    bool m_entity_result_isValid;

    OAIFraudCheckResultObject m_fraud_check_results;
    bool m_fraud_check_results_isSet;
    bool m_fraud_check_results_isValid;

    QList<OAIProcessResultObject> m_manual_check_results;
    bool m_manual_check_results_isSet;
    bool m_manual_check_results_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    QList<OAIProcessResultObject> m_shared_blocklist_check_results;
    bool m_shared_blocklist_check_results_isSet;
    bool m_shared_blocklist_check_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICheckEntityCheckResultObject)

#endif // OAICheckEntityCheckResultObject_H
