/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReportCreditReport.h
 *
 * 
 */

#ifndef OAIReportCreditReport_H
#define OAIReportCreditReport_H

#include <QJsonObject>

#include "OAICourtJudgement.h"
#include "OAIInsolvencyNotice.h"
#include "OAILoan.h"
#include "OAIMercantileEnquiry.h"
#include "OAIPaymentDefault.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICourtJudgement;
class OAIInsolvencyNotice;
class OAILoan;
class OAIMercantileEnquiry;
class OAIPaymentDefault;

class OAIReportCreditReport : public OAIObject {
public:
    OAIReportCreditReport();
    OAIReportCreditReport(QString json);
    ~OAIReportCreditReport() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICourtJudgement> getCourtJudgements() const;
    void setCourtJudgements(const QList<OAICourtJudgement> &court_judgements);
    bool is_court_judgements_Set() const;
    bool is_court_judgements_Valid() const;

    qint32 getCreditEnquiries() const;
    void setCreditEnquiries(const qint32 &credit_enquiries);
    bool is_credit_enquiries_Set() const;
    bool is_credit_enquiries_Valid() const;

    QList<OAIInsolvencyNotice> getInsolvencyNotices() const;
    void setInsolvencyNotices(const QList<OAIInsolvencyNotice> &insolvency_notices);
    bool is_insolvency_notices_Set() const;
    bool is_insolvency_notices_Valid() const;

    QList<OAILoan> getLoans() const;
    void setLoans(const QList<OAILoan> &loans);
    bool is_loans_Set() const;
    bool is_loans_Valid() const;

    QList<OAIMercantileEnquiry> getMercantileEnquiries() const;
    void setMercantileEnquiries(const QList<OAIMercantileEnquiry> &mercantile_enquiries);
    bool is_mercantile_enquiries_Set() const;
    bool is_mercantile_enquiries_Valid() const;

    QList<OAIPaymentDefault> getPaymentDefaults() const;
    void setPaymentDefaults(const QList<OAIPaymentDefault> &payment_defaults);
    bool is_payment_defaults_Set() const;
    bool is_payment_defaults_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICourtJudgement> m_court_judgements;
    bool m_court_judgements_isSet;
    bool m_court_judgements_isValid;

    qint32 m_credit_enquiries;
    bool m_credit_enquiries_isSet;
    bool m_credit_enquiries_isValid;

    QList<OAIInsolvencyNotice> m_insolvency_notices;
    bool m_insolvency_notices_isSet;
    bool m_insolvency_notices_isValid;

    QList<OAILoan> m_loans;
    bool m_loans_isSet;
    bool m_loans_isValid;

    QList<OAIMercantileEnquiry> m_mercantile_enquiries;
    bool m_mercantile_enquiries_isSet;
    bool m_mercantile_enquiries_isValid;

    QList<OAIPaymentDefault> m_payment_defaults;
    bool m_payment_defaults_isSet;
    bool m_payment_defaults_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReportCreditReport)

#endif // OAIReportCreditReport_H
