/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICurrentBillData.h
 *
 * Data from uploaded bill
 */

#ifndef OAICurrentBillData_H
#define OAICurrentBillData_H

#include <QJsonObject>

#include "OAICurrentBillData_solar_inner.h"
#include "OAIPeriod.h"
#include "OAIRetailer.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPeriod;
class OAIRetailer;
class OAICurrentBillData_solar_inner;

class OAICurrentBillData : public OAIObject {
public:
    OAICurrentBillData();
    OAICurrentBillData(QString json);
    ~OAICurrentBillData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountAddress() const;
    void setAccountAddress(const QString &account_address);
    bool is_account_address_Set() const;
    bool is_account_address_Valid() const;

    QString getAccountName() const;
    void setAccountName(const QString &account_name);
    bool is_account_name_Set() const;
    bool is_account_name_Valid() const;

    QString getAccountNumber() const;
    void setAccountNumber(const QString &account_number);
    bool is_account_number_Set() const;
    bool is_account_number_Valid() const;

    double getActualPlanTotalCost() const;
    void setActualPlanTotalCost(const double &actual_plan_total_cost);
    bool is_actual_plan_total_cost_Set() const;
    bool is_actual_plan_total_cost_Valid() const;

    QString getBillDateFrom() const;
    void setBillDateFrom(const QString &bill_date_from);
    bool is_bill_date_from_Set() const;
    bool is_bill_date_from_Valid() const;

    QString getBillDateTo() const;
    void setBillDateTo(const QString &bill_date_to);
    bool is_bill_date_to_Set() const;
    bool is_bill_date_to_Valid() const;

    qint32 getDays() const;
    void setDays(const qint32 &days);
    bool is_days_Set() const;
    bool is_days_Valid() const;

    double getDiscount() const;
    void setDiscount(const double &discount);
    bool is_discount_Set() const;
    bool is_discount_Valid() const;

    QString getFuelType() const;
    void setFuelType(const QString &fuel_type);
    bool is_fuel_type_Set() const;
    bool is_fuel_type_Valid() const;

    QString getNmi() const;
    void setNmi(const QString &nmi);
    bool is_nmi_Set() const;
    bool is_nmi_Valid() const;

    QList<OAIPeriod> getPeriods() const;
    void setPeriods(const QList<OAIPeriod> &periods);
    bool is_periods_Set() const;
    bool is_periods_Valid() const;

    OAIRetailer getRetailer() const;
    void setRetailer(const OAIRetailer &retailer);
    bool is_retailer_Set() const;
    bool is_retailer_Valid() const;

    QList<OAICurrentBillData_solar_inner> getSolar() const;
    void setSolar(const QList<OAICurrentBillData_solar_inner> &solar);
    bool is_solar_Set() const;
    bool is_solar_Valid() const;

    QString getSupplyAddress() const;
    void setSupplyAddress(const QString &supply_address);
    bool is_supply_address_Set() const;
    bool is_supply_address_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_address;
    bool m_account_address_isSet;
    bool m_account_address_isValid;

    QString m_account_name;
    bool m_account_name_isSet;
    bool m_account_name_isValid;

    QString m_account_number;
    bool m_account_number_isSet;
    bool m_account_number_isValid;

    double m_actual_plan_total_cost;
    bool m_actual_plan_total_cost_isSet;
    bool m_actual_plan_total_cost_isValid;

    QString m_bill_date_from;
    bool m_bill_date_from_isSet;
    bool m_bill_date_from_isValid;

    QString m_bill_date_to;
    bool m_bill_date_to_isSet;
    bool m_bill_date_to_isValid;

    qint32 m_days;
    bool m_days_isSet;
    bool m_days_isValid;

    double m_discount;
    bool m_discount_isSet;
    bool m_discount_isValid;

    QString m_fuel_type;
    bool m_fuel_type_isSet;
    bool m_fuel_type_isValid;

    QString m_nmi;
    bool m_nmi_isSet;
    bool m_nmi_isValid;

    QList<OAIPeriod> m_periods;
    bool m_periods_isSet;
    bool m_periods_isValid;

    OAIRetailer m_retailer;
    bool m_retailer_isSet;
    bool m_retailer_isValid;

    QList<OAICurrentBillData_solar_inner> m_solar;
    bool m_solar_isSet;
    bool m_solar_isValid;

    QString m_supply_address;
    bool m_supply_address_isSet;
    bool m_supply_address_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICurrentBillData)

#endif // OAICurrentBillData_H
