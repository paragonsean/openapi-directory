/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntityObject.h
 *
 * Describes all of the data being used to verify an entity. 
 */

#ifndef OAIEntityObject_H
#define OAIEntityObject_H

#include <QJsonObject>

#include "OAIAddressObject.h"
#include "OAIDOBObject.h"
#include "OAIEntityFlagObject.h"
#include "OAIEnumEntityType.h"
#include "OAIEnumGender.h"
#include "OAIIdentityDocumentObject.h"
#include "OAIKeyValuePairObject.h"
#include "OAIOrganisationDataObject.h"
#include "OAIPersonalNameObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddressObject;
class OAIDOBObject;
class OAIKeyValuePairObject;
class OAIEntityFlagObject;
class OAIIdentityDocumentObject;
class OAIPersonalNameObject;
class OAIOrganisationDataObject;

class OAIEntityObject : public OAIObject {
public:
    OAIEntityObject();
    OAIEntityObject(QString json);
    ~OAIEntityObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAddressObject> getAddresses() const;
    void setAddresses(const QList<OAIAddressObject> &addresses);
    bool is_addresses_Set() const;
    bool is_addresses_Valid() const;

    OAIDOBObject getDateOfBirth() const;
    void setDateOfBirth(const OAIDOBObject &date_of_birth);
    bool is_date_of_birth_Set() const;
    bool is_date_of_birth_Valid() const;

    QString getEntityId() const;
    void setEntityId(const QString &entity_id);
    bool is_entity_id_Set() const;
    bool is_entity_id_Valid() const;

    QString getEntityProfile() const;
    void setEntityProfile(const QString &entity_profile);
    bool is_entity_profile_Set() const;
    bool is_entity_profile_Valid() const;

    OAIEnumEntityType getEntityType() const;
    void setEntityType(const OAIEnumEntityType &entity_type);
    bool is_entity_type_Set() const;
    bool is_entity_type_Valid() const;

    QList<OAIKeyValuePairObject> getExtraData() const;
    void setExtraData(const QList<OAIKeyValuePairObject> &extra_data);
    bool is_extra_data_Set() const;
    bool is_extra_data_Valid() const;

    QList<OAIEntityFlagObject> getFlags() const;
    void setFlags(const QList<OAIEntityFlagObject> &flags);
    bool is_flags_Set() const;
    bool is_flags_Valid() const;

    OAIEnumGender getGender() const;
    void setGender(const OAIEnumGender &gender);
    bool is_gender_Set() const;
    bool is_gender_Valid() const;

    QList<OAIIdentityDocumentObject> getIdentityDocs() const;
    void setIdentityDocs(const QList<OAIIdentityDocumentObject> &identity_docs);
    bool is_identity_docs_Set() const;
    bool is_identity_docs_Valid() const;

    OAIPersonalNameObject getName() const;
    void setName(const OAIPersonalNameObject &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIOrganisationDataObject getOrganisationData() const;
    void setOrganisationData(const OAIOrganisationDataObject &organisation_data);
    bool is_organisation_data_Set() const;
    bool is_organisation_data_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAddressObject> m_addresses;
    bool m_addresses_isSet;
    bool m_addresses_isValid;

    OAIDOBObject m_date_of_birth;
    bool m_date_of_birth_isSet;
    bool m_date_of_birth_isValid;

    QString m_entity_id;
    bool m_entity_id_isSet;
    bool m_entity_id_isValid;

    QString m_entity_profile;
    bool m_entity_profile_isSet;
    bool m_entity_profile_isValid;

    OAIEnumEntityType m_entity_type;
    bool m_entity_type_isSet;
    bool m_entity_type_isValid;

    QList<OAIKeyValuePairObject> m_extra_data;
    bool m_extra_data_isSet;
    bool m_extra_data_isValid;

    QList<OAIEntityFlagObject> m_flags;
    bool m_flags_isSet;
    bool m_flags_isValid;

    OAIEnumGender m_gender;
    bool m_gender_isSet;
    bool m_gender_isValid;

    QList<OAIIdentityDocumentObject> m_identity_docs;
    bool m_identity_docs_isSet;
    bool m_identity_docs_isValid;

    OAIPersonalNameObject m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIOrganisationDataObject m_organisation_data;
    bool m_organisation_data_isSet;
    bool m_organisation_data_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntityObject)

#endif // OAIEntityObject_H
