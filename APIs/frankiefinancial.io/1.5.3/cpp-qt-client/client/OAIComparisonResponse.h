/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComparisonResponse.h
 *
 * 
 */

#ifndef OAIComparisonResponse_H
#define OAIComparisonResponse_H

#include <QJsonObject>

#include "OAIComparisonResponse_marketDisclosure.h"
#include "OAICurrentBillData.h"
#include "OAIDefaultOffer.h"
#include "OAIPlan.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICurrentBillData;
class OAIDefaultOffer;
class OAIComparisonResponse_marketDisclosure;
class OAIPlan;

class OAIComparisonResponse : public OAIObject {
public:
    OAIComparisonResponse();
    OAIComparisonResponse(QString json);
    ~OAIComparisonResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getComparisonDate() const;
    void setComparisonDate(const QString &comparison_date);
    bool is_comparison_date_Set() const;
    bool is_comparison_date_Valid() const;

    QString getCorrelationId() const;
    void setCorrelationId(const QString &correlation_id);
    bool is_correlation_id_Set() const;
    bool is_correlation_id_Valid() const;

    OAICurrentBillData getCurrentBillData() const;
    void setCurrentBillData(const OAICurrentBillData &current_bill_data);
    bool is_current_bill_data_Set() const;
    bool is_current_bill_data_Valid() const;

    OAIDefaultOffer getDefaultOffer() const;
    void setDefaultOffer(const OAIDefaultOffer &default_offer);
    bool is_default_offer_Set() const;
    bool is_default_offer_Valid() const;

    OAIComparisonResponse_marketDisclosure getMarketDisclosure() const;
    void setMarketDisclosure(const OAIComparisonResponse_marketDisclosure &market_disclosure);
    bool is_market_disclosure_Set() const;
    bool is_market_disclosure_Valid() const;

    double getMaximumSaving() const;
    void setMaximumSaving(const double &maximum_saving);
    bool is_maximum_saving_Set() const;
    bool is_maximum_saving_Valid() const;

    QList<OAIPlan> getPlans() const;
    void setPlans(const QList<OAIPlan> &plans);
    bool is_plans_Set() const;
    bool is_plans_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_comparison_date;
    bool m_comparison_date_isSet;
    bool m_comparison_date_isValid;

    QString m_correlation_id;
    bool m_correlation_id_isSet;
    bool m_correlation_id_isValid;

    OAICurrentBillData m_current_bill_data;
    bool m_current_bill_data_isSet;
    bool m_current_bill_data_isValid;

    OAIDefaultOffer m_default_offer;
    bool m_default_offer_isSet;
    bool m_default_offer_isValid;

    OAIComparisonResponse_marketDisclosure m_market_disclosure;
    bool m_market_disclosure_isSet;
    bool m_market_disclosure_isValid;

    double m_maximum_saving;
    bool m_maximum_saving_isSet;
    bool m_maximum_saving_isValid;

    QList<OAIPlan> m_plans;
    bool m_plans_isSet;
    bool m_plans_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComparisonResponse)

#endif // OAIComparisonResponse_H
