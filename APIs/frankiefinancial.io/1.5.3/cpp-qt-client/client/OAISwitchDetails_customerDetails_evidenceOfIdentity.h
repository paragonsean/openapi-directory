/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISwitchDetails_customerDetails_evidenceOfIdentity.h
 *
 * Allows a user to select one of the following forms of ID to validate against:  - Passport - Drivers Licence - Medicare card 
 */

#ifndef OAISwitchDetails_customerDetails_evidenceOfIdentity_H
#define OAISwitchDetails_customerDetails_evidenceOfIdentity_H

#include <QJsonObject>

#include "OAIDriversLicence.h"
#include "OAIMedicareCard.h"
#include "OAIPassport.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDriversLicence;
class OAIMedicareCard;
class OAIPassport;

class OAISwitchDetails_customerDetails_evidenceOfIdentity : public OAIObject {
public:
    OAISwitchDetails_customerDetails_evidenceOfIdentity();
    OAISwitchDetails_customerDetails_evidenceOfIdentity(QString json);
    ~OAISwitchDetails_customerDetails_evidenceOfIdentity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDriversLicence getDriversLicence() const;
    void setDriversLicence(const OAIDriversLicence &drivers_licence);
    bool is_drivers_licence_Set() const;
    bool is_drivers_licence_Valid() const;

    OAIMedicareCard getMedicareCard() const;
    void setMedicareCard(const OAIMedicareCard &medicare_card);
    bool is_medicare_card_Set() const;
    bool is_medicare_card_Valid() const;

    OAIPassport getPassport() const;
    void setPassport(const OAIPassport &passport);
    bool is_passport_Set() const;
    bool is_passport_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDriversLicence m_drivers_licence;
    bool m_drivers_licence_isSet;
    bool m_drivers_licence_isValid;

    OAIMedicareCard m_medicare_card;
    bool m_medicare_card_isSet;
    bool m_medicare_card_isValid;

    OAIPassport m_passport;
    bool m_passport_isSet;
    bool m_passport_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISwitchDetails_customerDetails_evidenceOfIdentity)

#endif // OAISwitchDetails_customerDetails_evidenceOfIdentity_H
