/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICompanyDTO.h
 *
 * 
 */

#ifndef OAICompanyDTO_H
#define OAICompanyDTO_H

#include <QJsonObject>

#include "OAIArrayOfAddressDTO.h"
#include "OAIArrayOfString.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArrayOfAddressDTO;
class OAIArrayOfString;

class OAICompanyDTO : public OAIObject {
public:
    OAICompanyDTO();
    OAICompanyDTO(QString json);
    ~OAICompanyDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIArrayOfAddressDTO getAddresses() const;
    void setAddresses(const OAIArrayOfAddressDTO &addresses);
    bool is_addresses_Set() const;
    bool is_addresses_Valid() const;

    OAIArrayOfString getAliases() const;
    void setAliases(const OAIArrayOfString &aliases);
    bool is_aliases_Set() const;
    bool is_aliases_Valid() const;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QString getCompanyId() const;
    void setCompanyId(const QString &company_id);
    bool is_company_id_Set() const;
    bool is_company_id_Valid() const;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getFunction() const;
    void setFunction(const QString &function);
    bool is_function_Set() const;
    bool is_function_Valid() const;

    QString getLegalForm() const;
    void setLegalForm(const QString &legal_form);
    bool is_legal_form_Set() const;
    bool is_legal_form_Valid() const;

    QString getLegalStatus() const;
    void setLegalStatus(const QString &legal_status);
    bool is_legal_status_Set() const;
    bool is_legal_status_Valid() const;

    QString getMoreKey() const;
    void setMoreKey(const QString &more_key);
    bool is_more_key_Set() const;
    bool is_more_key_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isOfficial() const;
    void setOfficial(const bool &official);
    bool is_official_Set() const;
    bool is_official_Valid() const;

    QString getRegistrationAuthority() const;
    void setRegistrationAuthority(const QString &registration_authority);
    bool is_registration_authority_Set() const;
    bool is_registration_authority_Valid() const;

    QString getRegistrationAuthorityCode() const;
    void setRegistrationAuthorityCode(const QString &registration_authority_code);
    bool is_registration_authority_code_Set() const;
    bool is_registration_authority_code_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getVirtualId() const;
    void setVirtualId(const QString &virtual_id);
    bool is_virtual_id_Set() const;
    bool is_virtual_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIArrayOfAddressDTO m_addresses;
    bool m_addresses_isSet;
    bool m_addresses_isValid;

    OAIArrayOfString m_aliases;
    bool m_aliases_isSet;
    bool m_aliases_isValid;

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QString m_company_id;
    bool m_company_id_isSet;
    bool m_company_id_isValid;

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_function;
    bool m_function_isSet;
    bool m_function_isValid;

    QString m_legal_form;
    bool m_legal_form_isSet;
    bool m_legal_form_isValid;

    QString m_legal_status;
    bool m_legal_status_isSet;
    bool m_legal_status_isValid;

    QString m_more_key;
    bool m_more_key_isSet;
    bool m_more_key_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_official;
    bool m_official_isSet;
    bool m_official_isValid;

    QString m_registration_authority;
    bool m_registration_authority_isSet;
    bool m_registration_authority_isValid;

    QString m_registration_authority_code;
    bool m_registration_authority_code_isSet;
    bool m_registration_authority_code_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_virtual_id;
    bool m_virtual_id_isSet;
    bool m_virtual_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICompanyDTO)

#endif // OAICompanyDTO_H
