/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntityProfileResultObject.h
 *
 * Contains the results of a check against an entity profile.   The entityProfileResult will be returned instead of a checkSummary to provide the full details of the verification process. 
 */

#ifndef OAIEntityProfileResultObject_H
#define OAIEntityProfileResultObject_H

#include <QJsonObject>

#include "OAIEntityProfileCheckResultMessage.h"
#include "OAIEntityProfileItemMatchResultObject.h"
#include "OAIEntityProfileKYCMatchResultObject.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEntityProfileItemMatchResultObject;
class OAIEntityProfileCheckResultMessage;
class OAIEntityProfileKYCMatchResultObject;

class OAIEntityProfileResultObject : public OAIObject {
public:
    OAIEntityProfileResultObject();
    OAIEntityProfileResultObject(QString json);
    ~OAIEntityProfileResultObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActionRecommended() const;
    void setActionRecommended(const QString &action_recommended);
    bool is_action_recommended_Set() const;
    bool is_action_recommended_Valid() const;

    QMap<QString, OAIEntityProfileItemMatchResultObject> getAddressResults() const;
    void setAddressResults(const QMap<QString, OAIEntityProfileItemMatchResultObject> &address_results);
    bool is_address_results_Set() const;
    bool is_address_results_Valid() const;

    QString getCheckId() const;
    void setCheckId(const QString &check_id);
    bool is_check_id_Set() const;
    bool is_check_id_Valid() const;

    QList<OAIEntityProfileCheckResultMessage> getCheckResults() const;
    void setCheckResults(const QList<OAIEntityProfileCheckResultMessage> &check_results);
    bool is_check_results_Set() const;
    bool is_check_results_Valid() const;

    QString getCheckType() const;
    void setCheckType(const QString &check_type);
    bool is_check_type_Set() const;
    bool is_check_type_Valid() const;

    QList<QString> getCreditHeaderFailures() const;
    void setCreditHeaderFailures(const QList<QString> &credit_header_failures);
    bool is_credit_header_failures_Set() const;
    bool is_credit_header_failures_Valid() const;

    QMap<QString, OAIEntityProfileItemMatchResultObject> getDocumentResults() const;
    void setDocumentResults(const QMap<QString, OAIEntityProfileItemMatchResultObject> &document_results);
    bool is_document_results_Set() const;
    bool is_document_results_Valid() const;

    QString getEntityId() const;
    void setEntityId(const QString &entity_id);
    bool is_entity_id_Set() const;
    bool is_entity_id_Valid() const;

    QList<QString> getIssueList() const;
    void setIssueList(const QList<QString> &issue_list);
    bool is_issue_list_Set() const;
    bool is_issue_list_Valid() const;

    QList<OAIEntityProfileKYCMatchResultObject> getKycResults() const;
    void setKycResults(const QList<OAIEntityProfileKYCMatchResultObject> &kyc_results);
    bool is_kyc_results_Set() const;
    bool is_kyc_results_Valid() const;

    QDateTime getLatestCheckDate() const;
    void setLatestCheckDate(const QDateTime &latest_check_date);
    bool is_latest_check_date_Set() const;
    bool is_latest_check_date_Valid() const;

    bool isManualIntervention() const;
    void setManualIntervention(const bool &manual_intervention);
    bool is_manual_intervention_Set() const;
    bool is_manual_intervention_Valid() const;

    QString getPolicyName() const;
    void setPolicyName(const QString &policy_name);
    bool is_policy_name_Set() const;
    bool is_policy_name_Valid() const;

    QString getProfileName() const;
    void setProfileName(const QString &profile_name);
    bool is_profile_name_Set() const;
    bool is_profile_name_Valid() const;

    QString getResolverRecommended() const;
    void setResolverRecommended(const QString &resolver_recommended);
    bool is_resolver_recommended_Set() const;
    bool is_resolver_recommended_Valid() const;

    QString getRiskLevel() const;
    void setRiskLevel(const QString &risk_level);
    bool is_risk_level_Set() const;
    bool is_risk_level_Valid() const;

    QString getRiskPolicy() const;
    void setRiskPolicy(const QString &risk_policy);
    bool is_risk_policy_Set() const;
    bool is_risk_policy_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action_recommended;
    bool m_action_recommended_isSet;
    bool m_action_recommended_isValid;

    QMap<QString, OAIEntityProfileItemMatchResultObject> m_address_results;
    bool m_address_results_isSet;
    bool m_address_results_isValid;

    QString m_check_id;
    bool m_check_id_isSet;
    bool m_check_id_isValid;

    QList<OAIEntityProfileCheckResultMessage> m_check_results;
    bool m_check_results_isSet;
    bool m_check_results_isValid;

    QString m_check_type;
    bool m_check_type_isSet;
    bool m_check_type_isValid;

    QList<QString> m_credit_header_failures;
    bool m_credit_header_failures_isSet;
    bool m_credit_header_failures_isValid;

    QMap<QString, OAIEntityProfileItemMatchResultObject> m_document_results;
    bool m_document_results_isSet;
    bool m_document_results_isValid;

    QString m_entity_id;
    bool m_entity_id_isSet;
    bool m_entity_id_isValid;

    QList<QString> m_issue_list;
    bool m_issue_list_isSet;
    bool m_issue_list_isValid;

    QList<OAIEntityProfileKYCMatchResultObject> m_kyc_results;
    bool m_kyc_results_isSet;
    bool m_kyc_results_isValid;

    QDateTime m_latest_check_date;
    bool m_latest_check_date_isSet;
    bool m_latest_check_date_isValid;

    bool m_manual_intervention;
    bool m_manual_intervention_isSet;
    bool m_manual_intervention_isValid;

    QString m_policy_name;
    bool m_policy_name_isSet;
    bool m_policy_name_isValid;

    QString m_profile_name;
    bool m_profile_name_isSet;
    bool m_profile_name_isValid;

    QString m_resolver_recommended;
    bool m_resolver_recommended_isSet;
    bool m_resolver_recommended_isValid;

    QString m_risk_level;
    bool m_risk_level_isSet;
    bool m_risk_level_isValid;

    QString m_risk_policy;
    bool m_risk_policy_isSet;
    bool m_risk_policy_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntityProfileResultObject)

#endif // OAIEntityProfileResultObject_H
