/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDirectorAndShareDetails.h
 *
 * 
 */

#ifndef OAIDirectorAndShareDetails_H
#define OAIDirectorAndShareDetails_H

#include <QJsonObject>

#include "OAIArrayOfDirector.h"
#include "OAIArrayOfPSCDetails.h"
#include "OAIArrayOfShareholderDetails.h"
#include "OAICapitalReserves.h"
#include "OAIShareholderSummary.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArrayOfPSCDetails;
class OAICapitalReserves;
class OAIArrayOfDirector;
class OAIShareholderSummary;
class OAIArrayOfShareholderDetails;

class OAIDirectorAndShareDetails : public OAIObject {
public:
    OAIDirectorAndShareDetails();
    OAIDirectorAndShareDetails(QString json);
    ~OAIDirectorAndShareDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIArrayOfPSCDetails getPersonsOfSignificantControl() const;
    void setPersonsOfSignificantControl(const OAIArrayOfPSCDetails &persons_of_significant_control);
    bool is_persons_of_significant_control_Set() const;
    bool is_persons_of_significant_control_Valid() const;

    OAICapitalReserves getCapitalReserves() const;
    void setCapitalReserves(const OAICapitalReserves &capital_reserves);
    bool is_capital_reserves_Set() const;
    bool is_capital_reserves_Valid() const;

    OAIArrayOfDirector getDirectors() const;
    void setDirectors(const OAIArrayOfDirector &directors);
    bool is_directors_Set() const;
    bool is_directors_Valid() const;

    OAIShareholderSummary getShareHolderSummary() const;
    void setShareHolderSummary(const OAIShareholderSummary &share_holder_summary);
    bool is_share_holder_summary_Set() const;
    bool is_share_holder_summary_Valid() const;

    OAIArrayOfShareholderDetails getShareHolders() const;
    void setShareHolders(const OAIArrayOfShareholderDetails &share_holders);
    bool is_share_holders_Set() const;
    bool is_share_holders_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIArrayOfPSCDetails m_persons_of_significant_control;
    bool m_persons_of_significant_control_isSet;
    bool m_persons_of_significant_control_isValid;

    OAICapitalReserves m_capital_reserves;
    bool m_capital_reserves_isSet;
    bool m_capital_reserves_isValid;

    OAIArrayOfDirector m_directors;
    bool m_directors_isSet;
    bool m_directors_isValid;

    OAIShareholderSummary m_share_holder_summary;
    bool m_share_holder_summary_isSet;
    bool m_share_holder_summary_isValid;

    OAIArrayOfShareholderDetails m_share_holders;
    bool m_share_holders_isSet;
    bool m_share_holders_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDirectorAndShareDetails)

#endif // OAIDirectorAndShareDetails_H
