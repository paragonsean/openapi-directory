/**
 * Frankie Financial API
 * ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 
 *
 * The version of the OpenAPI document: 1.5.3
 * Contact: dev-support@frankiefinancial.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult::OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult::OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult() {
    this->initializeModel();
}

OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult::~OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult() {}

void OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult::initializeModel() {

    m_error_isSet = false;
    m_error_isValid = false;

    m_result_isSet = false;
    m_result_isValid = false;
}

void OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult::fromJsonObject(QJsonObject json) {

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_result_isValid = ::OpenAPI::fromJsonValue(m_result, json[QString("result")]);
    m_result_isSet = !json[QString("result")].isNull() && m_result_isValid;
}

QString OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult::asJsonObject() const {
    QJsonObject obj;
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_result.isSet()) {
        obj.insert(QString("result"), ::OpenAPI::toJsonValue(m_result));
    }
    return obj;
}

OAISwitchError OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult::getError() const {
    return m_error;
}
void OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult::setError(const OAISwitchError &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult::is_error_Set() const{
    return m_error_isSet;
}

bool OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult::is_error_Valid() const{
    return m_error_isValid;
}

OAISwitchResponse OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult::getResult() const {
    return m_result;
}
void OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult::setResult(const OAISwitchResponse &result) {
    m_result = result;
    m_result_isSet = true;
}

bool OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult::is_result_Set() const{
    return m_result_isSet;
}

bool OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult::is_result_Valid() const{
    return m_result_isValid;
}

bool OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_result.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDocumentIndustryUtilitySwitchResultObject_utilitySwitchResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
