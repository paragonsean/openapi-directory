/**
 * Lyft
 * Drive your app to success with Lyft's API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@lyft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RideTypeEnum from './RideTypeEnum';

/**
 * The Eta model module.
 * @module model/Eta
 * @version 1.0.0
 */
class Eta {
    /**
     * Constructs a new <code>Eta</code>.
     * Estimated Time of Arrival
     * @alias module:model/Eta
     */
    constructor() { 
        
        Eta.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Eta</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Eta} obj Optional instance to populate.
     * @return {module:model/Eta} The populated <code>Eta</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Eta();

            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
            if (data.hasOwnProperty('eta_seconds')) {
                obj['eta_seconds'] = ApiClient.convertToType(data['eta_seconds'], 'Number');
            }
            if (data.hasOwnProperty('eta_seconds_max')) {
                obj['eta_seconds_max'] = ApiClient.convertToType(data['eta_seconds_max'], 'Number');
            }
            if (data.hasOwnProperty('is_valid_estimate')) {
                obj['is_valid_estimate'] = ApiClient.convertToType(data['is_valid_estimate'], 'Boolean');
            }
            if (data.hasOwnProperty('ride_type')) {
                obj['ride_type'] = RideTypeEnum.constructFromObject(data['ride_type']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Eta</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Eta</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
            throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
        }

        return true;
    }


}



/**
 * A human readable description of the ride type
 * @member {String} display_name
 */
Eta.prototype['display_name'] = undefined;

/**
 * Estimated seconds for a driver to arrive
 * @member {Number} eta_seconds
 */
Eta.prototype['eta_seconds'] = undefined;

/**
 * Estimated upper bound of seconds for a driver to arrive
 * @member {Number} eta_seconds_max
 */
Eta.prototype['eta_seconds_max'] = undefined;

/**
 * The validity of the ETA estimate returned
 * @member {Boolean} is_valid_estimate
 */
Eta.prototype['is_valid_estimate'] = undefined;

/**
 * @member {module:model/RideTypeEnum} ride_type
 */
Eta.prototype['ride_type'] = undefined;






export default Eta;

