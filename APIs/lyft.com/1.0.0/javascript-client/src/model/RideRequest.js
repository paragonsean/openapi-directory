/**
 * Lyft
 * Drive your app to success with Lyft's API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@lyft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Location from './Location';
import PassengerDetail from './PassengerDetail';
import RideStatusEnum from './RideStatusEnum';

/**
 * The RideRequest model module.
 * @module model/RideRequest
 * @version 1.0.0
 */
class RideRequest {
    /**
     * Constructs a new <code>RideRequest</code>.
     * Minimal set of ride details
     * @alias module:model/RideRequest
     */
    constructor() { 
        
        RideRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RideRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RideRequest} obj Optional instance to populate.
     * @return {module:model/RideRequest} The populated <code>RideRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RideRequest();

            if (data.hasOwnProperty('destination')) {
                obj['destination'] = ApiClient.convertToType(data['destination'], Location);
            }
            if (data.hasOwnProperty('origin')) {
                obj['origin'] = ApiClient.convertToType(data['origin'], Location);
            }
            if (data.hasOwnProperty('passenger')) {
                obj['passenger'] = PassengerDetail.constructFromObject(data['passenger']);
            }
            if (data.hasOwnProperty('ride_id')) {
                obj['ride_id'] = ApiClient.convertToType(data['ride_id'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = RideStatusEnum.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RideRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RideRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `destination`
        if (data['destination']) { // data not null
          Location.validateJSON(data['destination']);
        }
        // validate the optional field `origin`
        if (data['origin']) { // data not null
          Location.validateJSON(data['origin']);
        }
        // validate the optional field `passenger`
        if (data['passenger']) { // data not null
          PassengerDetail.validateJSON(data['passenger']);
        }
        // ensure the json data is a string
        if (data['ride_id'] && !(typeof data['ride_id'] === 'string' || data['ride_id'] instanceof String)) {
            throw new Error("Expected the field `ride_id` to be a primitive type in the JSON string but got " + data['ride_id']);
        }

        return true;
    }


}



/**
 * The *requested* location for passenger drop off
 * @member {module:model/Location} destination
 */
RideRequest.prototype['destination'] = undefined;

/**
 * The *requested* location for passenger pickup
 * @member {module:model/Location} origin
 */
RideRequest.prototype['origin'] = undefined;

/**
 * @member {module:model/PassengerDetail} passenger
 */
RideRequest.prototype['passenger'] = undefined;

/**
 * The ID of the requested ride
 * @member {String} ride_id
 */
RideRequest.prototype['ride_id'] = undefined;

/**
 * @member {module:model/RideStatusEnum} status
 */
RideRequest.prototype['status'] = undefined;






export default RideRequest;

