/**
 * Lyft
 * Drive your app to success with Lyft's API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@lyft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiError from './ApiError';
import CancellationCost from './CancellationCost';
import ErrorDetail from './ErrorDetail';

/**
 * The CancellationCostError model module.
 * @module model/CancellationCostError
 * @version 1.0.0
 */
class CancellationCostError {
    /**
     * Constructs a new <code>CancellationCostError</code>.
     * @alias module:model/CancellationCostError
     * @implements module:model/CancellationCost
     * @implements module:model/ApiError
     * @param amount {Number} Total price of the ride
     * @param currency {String} The ISO 4217 currency code for the amount (e.g. USD)
     * @param description {String} The description for the cost
     */
    constructor(amount, currency, description) { 
        CancellationCost.initialize(this, amount, currency, description);ApiError.initialize(this);
        CancellationCostError.initialize(this, amount, currency, description);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amount, currency, description) { 
        obj['amount'] = amount;
        obj['currency'] = currency;
        obj['description'] = description;
    }

    /**
     * Constructs a <code>CancellationCostError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CancellationCostError} obj Optional instance to populate.
     * @return {module:model/CancellationCostError} The populated <code>CancellationCostError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CancellationCostError();
            CancellationCost.constructFromObject(data, obj);
            ApiError.constructFromObject(data, obj);

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('token_duration')) {
                obj['token_duration'] = ApiClient.convertToType(data['token_duration'], 'Number');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('error_description')) {
                obj['error_description'] = ApiClient.convertToType(data['error_description'], 'String');
            }
            if (data.hasOwnProperty('error_detail')) {
                obj['error_detail'] = ApiClient.convertToType(data['error_detail'], [ErrorDetail]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CancellationCostError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CancellationCostError</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CancellationCostError.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }
        // ensure the json data is a string
        if (data['error'] && !(typeof data['error'] === 'string' || data['error'] instanceof String)) {
            throw new Error("Expected the field `error` to be a primitive type in the JSON string but got " + data['error']);
        }
        // ensure the json data is a string
        if (data['error_description'] && !(typeof data['error_description'] === 'string' || data['error_description'] instanceof String)) {
            throw new Error("Expected the field `error_description` to be a primitive type in the JSON string but got " + data['error_description']);
        }
        if (data['error_detail']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['error_detail'])) {
                throw new Error("Expected the field `error_detail` to be an array in the JSON data but got " + data['error_detail']);
            }
            // validate the optional field `error_detail` (array)
            for (const item of data['error_detail']) {
                ErrorDetail.validateJSON(item);
            };
        }

        return true;
    }


}

CancellationCostError.RequiredProperties = ["amount", "currency", "description"];

/**
 * Total price of the ride
 * @member {Number} amount
 */
CancellationCostError.prototype['amount'] = undefined;

/**
 * The ISO 4217 currency code for the amount (e.g. USD)
 * @member {String} currency
 */
CancellationCostError.prototype['currency'] = undefined;

/**
 * The description for the cost
 * @member {String} description
 */
CancellationCostError.prototype['description'] = undefined;

/**
 * Token used to confirm the fee when cancelling a request
 * @member {String} token
 */
CancellationCostError.prototype['token'] = undefined;

/**
 * How long, in seconds, before the token expires
 * @member {Number} token_duration
 */
CancellationCostError.prototype['token_duration'] = undefined;

/**
 * A \"slug\" that serves as the error code (eg. \"bad_parameter\")
 * @member {String} error
 */
CancellationCostError.prototype['error'] = undefined;

/**
 * A user-friendly description of the error (appropriate to show to an end-user)
 * @member {String} error_description
 */
CancellationCostError.prototype['error_description'] = undefined;

/**
 * @member {Array.<module:model/ErrorDetail>} error_detail
 */
CancellationCostError.prototype['error_detail'] = undefined;


// Implement CancellationCost interface:
/**
 * Total price of the ride
 * @member {Number} amount
 */
CancellationCost.prototype['amount'] = undefined;
/**
 * The ISO 4217 currency code for the amount (e.g. USD)
 * @member {String} currency
 */
CancellationCost.prototype['currency'] = undefined;
/**
 * The description for the cost
 * @member {String} description
 */
CancellationCost.prototype['description'] = undefined;
/**
 * Token used to confirm the fee when cancelling a request
 * @member {String} token
 */
CancellationCost.prototype['token'] = undefined;
/**
 * How long, in seconds, before the token expires
 * @member {Number} token_duration
 */
CancellationCost.prototype['token_duration'] = undefined;
// Implement ApiError interface:
/**
 * A \"slug\" that serves as the error code (eg. \"bad_parameter\")
 * @member {String} error
 */
ApiError.prototype['error'] = undefined;
/**
 * A user-friendly description of the error (appropriate to show to an end-user)
 * @member {String} error_description
 */
ApiError.prototype['error_description'] = undefined;
/**
 * @member {Array.<module:model/ErrorDetail>} error_detail
 */
ApiError.prototype['error_detail'] = undefined;




export default CancellationCostError;

