/**
 * Lyft
 * Drive your app to success with Lyft's API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@lyft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PricingDetails from './PricingDetails';
import RideTypeEnum from './RideTypeEnum';

/**
 * The RideType model module.
 * @module model/RideType
 * @version 1.0.0
 */
class RideType {
    /**
     * Constructs a new <code>RideType</code>.
     * @alias module:model/RideType
     */
    constructor() { 
        
        RideType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RideType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RideType} obj Optional instance to populate.
     * @return {module:model/RideType} The populated <code>RideType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RideType();

            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
            if (data.hasOwnProperty('image_url')) {
                obj['image_url'] = ApiClient.convertToType(data['image_url'], 'String');
            }
            if (data.hasOwnProperty('pricing_details')) {
                obj['pricing_details'] = PricingDetails.constructFromObject(data['pricing_details']);
            }
            if (data.hasOwnProperty('ride_type')) {
                obj['ride_type'] = RideTypeEnum.constructFromObject(data['ride_type']);
            }
            if (data.hasOwnProperty('scheduled_pricing_details')) {
                obj['scheduled_pricing_details'] = PricingDetails.constructFromObject(data['scheduled_pricing_details']);
            }
            if (data.hasOwnProperty('seats')) {
                obj['seats'] = ApiClient.convertToType(data['seats'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RideType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RideType</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
            throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
        }
        // ensure the json data is a string
        if (data['image_url'] && !(typeof data['image_url'] === 'string' || data['image_url'] instanceof String)) {
            throw new Error("Expected the field `image_url` to be a primitive type in the JSON string but got " + data['image_url']);
        }
        // validate the optional field `pricing_details`
        if (data['pricing_details']) { // data not null
          PricingDetails.validateJSON(data['pricing_details']);
        }
        // validate the optional field `scheduled_pricing_details`
        if (data['scheduled_pricing_details']) { // data not null
          PricingDetails.validateJSON(data['scheduled_pricing_details']);
        }

        return true;
    }


}



/**
 * A human readable description of the ride type
 * @member {String} display_name
 */
RideType.prototype['display_name'] = undefined;

/**
 * The URL of an image representing this ride type
 * @member {String} image_url
 */
RideType.prototype['image_url'] = undefined;

/**
 * @member {module:model/PricingDetails} pricing_details
 */
RideType.prototype['pricing_details'] = undefined;

/**
 * @member {module:model/RideTypeEnum} ride_type
 */
RideType.prototype['ride_type'] = undefined;

/**
 * @member {module:model/PricingDetails} scheduled_pricing_details
 */
RideType.prototype['scheduled_pricing_details'] = undefined;

/**
 * The maximum number of seats available for rides requested with this ride type
 * @member {Number} seats
 */
RideType.prototype['seats'] = undefined;






export default RideType;

