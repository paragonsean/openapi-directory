/**
 * Lyft
 * Drive your app to success with Lyft's API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@lyft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Location from './Location';
import RideTypeEnum from './RideTypeEnum';

/**
 * The Ride model module.
 * @module model/Ride
 * @version 1.0.0
 */
class Ride {
    /**
     * Constructs a new <code>Ride</code>.
     * Represents a requested, ongoing, or finished Lyft ride
     * @alias module:model/Ride
     * @param origin {module:model/Location} The *requested* location for passenger pickup
     * @param rideType {module:model/RideTypeEnum} 
     */
    constructor(origin, rideType) { 
        
        Ride.initialize(this, origin, rideType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, origin, rideType) { 
        obj['origin'] = origin;
        obj['ride_type'] = rideType;
    }

    /**
     * Constructs a <code>Ride</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Ride} obj Optional instance to populate.
     * @return {module:model/Ride} The populated <code>Ride</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Ride();

            if (data.hasOwnProperty('cost_token')) {
                obj['cost_token'] = ApiClient.convertToType(data['cost_token'], 'String');
            }
            if (data.hasOwnProperty('destination')) {
                obj['destination'] = ApiClient.convertToType(data['destination'], Location);
            }
            if (data.hasOwnProperty('origin')) {
                obj['origin'] = ApiClient.convertToType(data['origin'], Location);
            }
            if (data.hasOwnProperty('primetime_confirmation_token')) {
                obj['primetime_confirmation_token'] = ApiClient.convertToType(data['primetime_confirmation_token'], 'String');
            }
            if (data.hasOwnProperty('ride_type')) {
                obj['ride_type'] = RideTypeEnum.constructFromObject(data['ride_type']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Ride</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Ride</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Ride.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['cost_token'] && !(typeof data['cost_token'] === 'string' || data['cost_token'] instanceof String)) {
            throw new Error("Expected the field `cost_token` to be a primitive type in the JSON string but got " + data['cost_token']);
        }
        // validate the optional field `destination`
        if (data['destination']) { // data not null
          Location.validateJSON(data['destination']);
        }
        // validate the optional field `origin`
        if (data['origin']) { // data not null
          Location.validateJSON(data['origin']);
        }
        // ensure the json data is a string
        if (data['primetime_confirmation_token'] && !(typeof data['primetime_confirmation_token'] === 'string' || data['primetime_confirmation_token'] instanceof String)) {
            throw new Error("Expected the field `primetime_confirmation_token` to be a primitive type in the JSON string but got " + data['primetime_confirmation_token']);
        }

        return true;
    }


}

Ride.RequiredProperties = ["origin", "ride_type"];

/**
 * A token that confirms the user has accepted current Prime Time and/or fixed price charges
 * @member {String} cost_token
 */
Ride.prototype['cost_token'] = undefined;

/**
 * The *requested* location for passenger drop off
 * @member {module:model/Location} destination
 */
Ride.prototype['destination'] = undefined;

/**
 * The *requested* location for passenger pickup
 * @member {module:model/Location} origin
 */
Ride.prototype['origin'] = undefined;

/**
 * A token that confirms the user has accepted current primetime charges (Deprecated)
 * @member {String} primetime_confirmation_token
 */
Ride.prototype['primetime_confirmation_token'] = undefined;

/**
 * @member {module:model/RideTypeEnum} ride_type
 */
Ride.prototype['ride_type'] = undefined;






export default Ride;

