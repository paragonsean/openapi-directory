/**
 * Lyft
 * Drive your app to success with Lyft's API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@lyft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RideTypeEnum from './RideTypeEnum';

/**
 * The CostEstimate model module.
 * @module model/CostEstimate
 * @version 1.0.0
 */
class CostEstimate {
    /**
     * Constructs a new <code>CostEstimate</code>.
     * A non-guaranteed estimate of price
     * @alias module:model/CostEstimate
     */
    constructor() { 
        
        CostEstimate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CostEstimate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CostEstimate} obj Optional instance to populate.
     * @return {module:model/CostEstimate} The populated <code>CostEstimate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CostEstimate();

            if (data.hasOwnProperty('cost_token')) {
                obj['cost_token'] = ApiClient.convertToType(data['cost_token'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
            if (data.hasOwnProperty('estimated_cost_cents_max')) {
                obj['estimated_cost_cents_max'] = ApiClient.convertToType(data['estimated_cost_cents_max'], 'Number');
            }
            if (data.hasOwnProperty('estimated_cost_cents_min')) {
                obj['estimated_cost_cents_min'] = ApiClient.convertToType(data['estimated_cost_cents_min'], 'Number');
            }
            if (data.hasOwnProperty('estimated_distance_miles')) {
                obj['estimated_distance_miles'] = ApiClient.convertToType(data['estimated_distance_miles'], 'Number');
            }
            if (data.hasOwnProperty('estimated_duration_seconds')) {
                obj['estimated_duration_seconds'] = ApiClient.convertToType(data['estimated_duration_seconds'], 'Number');
            }
            if (data.hasOwnProperty('is_valid_estimate')) {
                obj['is_valid_estimate'] = ApiClient.convertToType(data['is_valid_estimate'], 'Boolean');
            }
            if (data.hasOwnProperty('primetime_confirmation_token')) {
                obj['primetime_confirmation_token'] = ApiClient.convertToType(data['primetime_confirmation_token'], 'String');
            }
            if (data.hasOwnProperty('primetime_percentage')) {
                obj['primetime_percentage'] = ApiClient.convertToType(data['primetime_percentage'], 'String');
            }
            if (data.hasOwnProperty('ride_type')) {
                obj['ride_type'] = RideTypeEnum.constructFromObject(data['ride_type']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CostEstimate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CostEstimate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cost_token'] && !(typeof data['cost_token'] === 'string' || data['cost_token'] instanceof String)) {
            throw new Error("Expected the field `cost_token` to be a primitive type in the JSON string but got " + data['cost_token']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
            throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
        }
        // ensure the json data is a string
        if (data['primetime_confirmation_token'] && !(typeof data['primetime_confirmation_token'] === 'string' || data['primetime_confirmation_token'] instanceof String)) {
            throw new Error("Expected the field `primetime_confirmation_token` to be a primitive type in the JSON string but got " + data['primetime_confirmation_token']);
        }
        // ensure the json data is a string
        if (data['primetime_percentage'] && !(typeof data['primetime_percentage'] === 'string' || data['primetime_percentage'] instanceof String)) {
            throw new Error("Expected the field `primetime_percentage` to be a primitive type in the JSON string but got " + data['primetime_percentage']);
        }

        return true;
    }


}



/**
 * A token that confirms the user has accepted current Prime Time and/or fixed price charges. See 'Request a Lyft' for more details
 * @member {String} cost_token
 */
CostEstimate.prototype['cost_token'] = undefined;

/**
 * The ISO 4217 currency code for the amount (e.g. 'USD')
 * @member {String} currency
 */
CostEstimate.prototype['currency'] = undefined;

/**
 * A human readable description of the ride type
 * @member {String} display_name
 */
CostEstimate.prototype['display_name'] = undefined;

/**
 * Estimated upper bound for trip cost, in minor units (cents). Estimates are not guaranteed, and only provide a reasonable range based on current conditions. 
 * @member {Number} estimated_cost_cents_max
 */
CostEstimate.prototype['estimated_cost_cents_max'] = undefined;

/**
 * Estimated lower bound for trip cost, in minor units (cents). Estimates are not guaranteed, and only provide a reasonable range based on current conditions. 
 * @member {Number} estimated_cost_cents_min
 */
CostEstimate.prototype['estimated_cost_cents_min'] = undefined;

/**
 * Estimated distance for this trip 
 * @member {Number} estimated_distance_miles
 */
CostEstimate.prototype['estimated_distance_miles'] = undefined;

/**
 * Estimated time to get from the start location to the end. 
 * @member {Number} estimated_duration_seconds
 */
CostEstimate.prototype['estimated_duration_seconds'] = undefined;

/**
 * The validity of the cost estimate returned
 * @member {Boolean} is_valid_estimate
 */
CostEstimate.prototype['is_valid_estimate'] = undefined;

/**
 * This token is needed when requesting rides. (Deprecated)
 * @member {String} primetime_confirmation_token
 */
CostEstimate.prototype['primetime_confirmation_token'] = undefined;

/**
 * Current Prime Time Percentage. Prime Time adds a percentage to ride costs, prior to other applicable fees. When ride requests greatly outnumber available drivers, our system will automatically turn on Prime Time. If Prime Time is inactive, the value returned will be '0%'. Note: The returned estimate already has Prime Time factored in. The value is returned here for reference and to allow users to confirm/accept Prime Time prior to initiating a ride. 
 * @member {String} primetime_percentage
 */
CostEstimate.prototype['primetime_percentage'] = undefined;

/**
 * @member {module:model/RideTypeEnum} ride_type
 */
CostEstimate.prototype['ride_type'] = undefined;






export default CostEstimate;

