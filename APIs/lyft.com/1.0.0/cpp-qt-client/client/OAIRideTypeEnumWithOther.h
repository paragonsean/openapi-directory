/**
 * Lyft
 * Drive your app to success with Lyft's API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@lyft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRideTypeEnumWithOther.h
 *
 * The ID of the ride type
 */

#ifndef OAIRideTypeEnumWithOther_H
#define OAIRideTypeEnumWithOther_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRideTypeEnumWithOther : public OAIEnum {
public:
    OAIRideTypeEnumWithOther();
    OAIRideTypeEnumWithOther(QString json);
    ~OAIRideTypeEnumWithOther() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIRideTypeEnumWithOther {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        LYFT, 
        LYFT_LINE, 
        LYFT_PLUS, 
        LYFT_PREMIER, 
        LYFT_LUX, 
        LYFT_LUXSUV, 
        OTHER
    };
    OAIRideTypeEnumWithOther::eOAIRideTypeEnumWithOther getValue() const;
    void setValue(const OAIRideTypeEnumWithOther::eOAIRideTypeEnumWithOther& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIRideTypeEnumWithOther m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRideTypeEnumWithOther)

#endif // OAIRideTypeEnumWithOther_H
