/**
 * Lyft
 * Drive your app to success with Lyft's API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@lyft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPricingDetails.h
 *
 * 
 */

#ifndef OAIPricingDetails_H
#define OAIPricingDetails_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPricingDetails : public OAIObject {
public:
    OAIPricingDetails();
    OAIPricingDetails(QString json);
    ~OAIPricingDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBaseCharge() const;
    void setBaseCharge(const qint32 &base_charge);
    bool is_base_charge_Set() const;
    bool is_base_charge_Valid() const;

    qint32 getCancelPenaltyAmount() const;
    void setCancelPenaltyAmount(const qint32 &cancel_penalty_amount);
    bool is_cancel_penalty_amount_Set() const;
    bool is_cancel_penalty_amount_Valid() const;

    qint32 getCostMinimum() const;
    void setCostMinimum(const qint32 &cost_minimum);
    bool is_cost_minimum_Set() const;
    bool is_cost_minimum_Valid() const;

    qint32 getCostPerMile() const;
    void setCostPerMile(const qint32 &cost_per_mile);
    bool is_cost_per_mile_Set() const;
    bool is_cost_per_mile_Valid() const;

    qint32 getCostPerMinute() const;
    void setCostPerMinute(const qint32 &cost_per_minute);
    bool is_cost_per_minute_Set() const;
    bool is_cost_per_minute_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    qint32 getTrustAndService() const;
    void setTrustAndService(const qint32 &trust_and_service);
    bool is_trust_and_service_Set() const;
    bool is_trust_and_service_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_base_charge;
    bool m_base_charge_isSet;
    bool m_base_charge_isValid;

    qint32 m_cancel_penalty_amount;
    bool m_cancel_penalty_amount_isSet;
    bool m_cancel_penalty_amount_isValid;

    qint32 m_cost_minimum;
    bool m_cost_minimum_isSet;
    bool m_cost_minimum_isValid;

    qint32 m_cost_per_mile;
    bool m_cost_per_mile_isSet;
    bool m_cost_per_mile_isValid;

    qint32 m_cost_per_minute;
    bool m_cost_per_minute_isSet;
    bool m_cost_per_minute_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    qint32 m_trust_and_service;
    bool m_trust_and_service_isSet;
    bool m_trust_and_service_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPricingDetails)

#endif // OAIPricingDetails_H
