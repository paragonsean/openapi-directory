/**
 * Lyft
 * Drive your app to success with Lyft's API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@lyft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINearbyDriversByRideType.h
 *
 * 
 */

#ifndef OAINearbyDriversByRideType_H
#define OAINearbyDriversByRideType_H

#include <QJsonObject>

#include "OAINearbyDriver.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINearbyDriver;

class OAINearbyDriversByRideType : public OAIObject {
public:
    OAINearbyDriversByRideType();
    OAINearbyDriversByRideType(QString json);
    ~OAINearbyDriversByRideType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAINearbyDriver> getDrivers() const;
    void setDrivers(const QList<OAINearbyDriver> &drivers);
    bool is_drivers_Set() const;
    bool is_drivers_Valid() const;

    QString getRideType() const;
    void setRideType(const QString &ride_type);
    bool is_ride_type_Set() const;
    bool is_ride_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAINearbyDriver> m_drivers;
    bool m_drivers_isSet;
    bool m_drivers_isValid;

    QString m_ride_type;
    bool m_ride_type_isSet;
    bool m_ride_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINearbyDriversByRideType)

#endif // OAINearbyDriversByRideType_H
