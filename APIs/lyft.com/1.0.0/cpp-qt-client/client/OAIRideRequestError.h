/**
 * Lyft
 * Drive your app to success with Lyft's API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@lyft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRideRequestError.h
 *
 * Details about why a request failed, such as missing or invalid parameters
 */

#ifndef OAIRideRequestError_H
#define OAIRideRequestError_H

#include <QJsonObject>

#include "OAIErrorDetail.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIErrorDetail;

class OAIRideRequestError : public OAIObject {
public:
    OAIRideRequestError();
    OAIRideRequestError(QString json);
    ~OAIRideRequestError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCostToken() const;
    void setCostToken(const QString &cost_token);
    bool is_cost_token_Set() const;
    bool is_cost_token_Valid() const;

    QString getError() const;
    void setError(const QString &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getErrorDescription() const;
    void setErrorDescription(const QString &error_description);
    bool is_error_description_Set() const;
    bool is_error_description_Valid() const;

    QList<OAIErrorDetail> getErrorDetail() const;
    void setErrorDetail(const QList<OAIErrorDetail> &error_detail);
    bool is_error_detail_Set() const;
    bool is_error_detail_Valid() const;

    QString getErrorUri() const;
    void setErrorUri(const QString &error_uri);
    bool is_error_uri_Set() const;
    bool is_error_uri_Valid() const;

    QString getPrimetimeConfirmationToken() const;
    void setPrimetimeConfirmationToken(const QString &primetime_confirmation_token);
    bool is_primetime_confirmation_token_Set() const;
    bool is_primetime_confirmation_token_Valid() const;

    float getPrimetimeMultiplier() const;
    void setPrimetimeMultiplier(const float &primetime_multiplier);
    bool is_primetime_multiplier_Set() const;
    bool is_primetime_multiplier_Valid() const;

    QString getPrimetimePercentage() const;
    void setPrimetimePercentage(const QString &primetime_percentage);
    bool is_primetime_percentage_Set() const;
    bool is_primetime_percentage_Valid() const;

    QString getTokenDuration() const;
    void setTokenDuration(const QString &token_duration);
    bool is_token_duration_Set() const;
    bool is_token_duration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cost_token;
    bool m_cost_token_isSet;
    bool m_cost_token_isValid;

    QString m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_error_description;
    bool m_error_description_isSet;
    bool m_error_description_isValid;

    QList<OAIErrorDetail> m_error_detail;
    bool m_error_detail_isSet;
    bool m_error_detail_isValid;

    QString m_error_uri;
    bool m_error_uri_isSet;
    bool m_error_uri_isValid;

    QString m_primetime_confirmation_token;
    bool m_primetime_confirmation_token_isSet;
    bool m_primetime_confirmation_token_isValid;

    float m_primetime_multiplier;
    bool m_primetime_multiplier_isSet;
    bool m_primetime_multiplier_isValid;

    QString m_primetime_percentage;
    bool m_primetime_percentage_isSet;
    bool m_primetime_percentage_isValid;

    QString m_token_duration;
    bool m_token_duration_isSet;
    bool m_token_duration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRideRequestError)

#endif // OAIRideRequestError_H
