/**
 * Lyft
 * Drive your app to success with Lyft's API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@lyft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICostEstimate.h
 *
 * A non-guaranteed estimate of price
 */

#ifndef OAICostEstimate_H
#define OAICostEstimate_H

#include <QJsonObject>

#include "OAIRideTypeEnum.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICostEstimate : public OAIObject {
public:
    OAICostEstimate();
    OAICostEstimate(QString json);
    ~OAICostEstimate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCostToken() const;
    void setCostToken(const QString &cost_token);
    bool is_cost_token_Set() const;
    bool is_cost_token_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    qint32 getEstimatedCostCentsMax() const;
    void setEstimatedCostCentsMax(const qint32 &estimated_cost_cents_max);
    bool is_estimated_cost_cents_max_Set() const;
    bool is_estimated_cost_cents_max_Valid() const;

    qint32 getEstimatedCostCentsMin() const;
    void setEstimatedCostCentsMin(const qint32 &estimated_cost_cents_min);
    bool is_estimated_cost_cents_min_Set() const;
    bool is_estimated_cost_cents_min_Valid() const;

    double getEstimatedDistanceMiles() const;
    void setEstimatedDistanceMiles(const double &estimated_distance_miles);
    bool is_estimated_distance_miles_Set() const;
    bool is_estimated_distance_miles_Valid() const;

    qint32 getEstimatedDurationSeconds() const;
    void setEstimatedDurationSeconds(const qint32 &estimated_duration_seconds);
    bool is_estimated_duration_seconds_Set() const;
    bool is_estimated_duration_seconds_Valid() const;

    bool isIsValidEstimate() const;
    void setIsValidEstimate(const bool &is_valid_estimate);
    bool is_is_valid_estimate_Set() const;
    bool is_is_valid_estimate_Valid() const;

    QString getPrimetimeConfirmationToken() const;
    void setPrimetimeConfirmationToken(const QString &primetime_confirmation_token);
    bool is_primetime_confirmation_token_Set() const;
    bool is_primetime_confirmation_token_Valid() const;

    QString getPrimetimePercentage() const;
    void setPrimetimePercentage(const QString &primetime_percentage);
    bool is_primetime_percentage_Set() const;
    bool is_primetime_percentage_Valid() const;

    OAIRideTypeEnum getRideType() const;
    void setRideType(const OAIRideTypeEnum &ride_type);
    bool is_ride_type_Set() const;
    bool is_ride_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cost_token;
    bool m_cost_token_isSet;
    bool m_cost_token_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    qint32 m_estimated_cost_cents_max;
    bool m_estimated_cost_cents_max_isSet;
    bool m_estimated_cost_cents_max_isValid;

    qint32 m_estimated_cost_cents_min;
    bool m_estimated_cost_cents_min_isSet;
    bool m_estimated_cost_cents_min_isValid;

    double m_estimated_distance_miles;
    bool m_estimated_distance_miles_isSet;
    bool m_estimated_distance_miles_isValid;

    qint32 m_estimated_duration_seconds;
    bool m_estimated_duration_seconds_isSet;
    bool m_estimated_duration_seconds_isValid;

    bool m_is_valid_estimate;
    bool m_is_valid_estimate_isSet;
    bool m_is_valid_estimate_isValid;

    QString m_primetime_confirmation_token;
    bool m_primetime_confirmation_token_isSet;
    bool m_primetime_confirmation_token_isValid;

    QString m_primetime_percentage;
    bool m_primetime_percentage_isSet;
    bool m_primetime_percentage_isValid;

    OAIRideTypeEnum m_ride_type;
    bool m_ride_type_isSet;
    bool m_ride_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICostEstimate)

#endif // OAICostEstimate_H
