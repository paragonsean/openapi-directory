/**
 * Lyft
 * Drive your app to success with Lyft's API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@lyft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVehicleDetail.h
 *
 * 
 */

#ifndef OAIVehicleDetail_H
#define OAIVehicleDetail_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVehicleDetail : public OAIObject {
public:
    OAIVehicleDetail();
    OAIVehicleDetail(QString json);
    ~OAIVehicleDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getColor() const;
    void setColor(const QString &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    QString getImageUrl() const;
    void setImageUrl(const QString &image_url);
    bool is_image_url_Set() const;
    bool is_image_url_Valid() const;

    QString getLicensePlate() const;
    void setLicensePlate(const QString &license_plate);
    bool is_license_plate_Set() const;
    bool is_license_plate_Valid() const;

    QString getLicensePlateState() const;
    void setLicensePlateState(const QString &license_plate_state);
    bool is_license_plate_state_Set() const;
    bool is_license_plate_state_Valid() const;

    QString getMake() const;
    void setMake(const QString &make);
    bool is_make_Set() const;
    bool is_make_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    qint32 getYear() const;
    void setYear(const qint32 &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    QString m_image_url;
    bool m_image_url_isSet;
    bool m_image_url_isValid;

    QString m_license_plate;
    bool m_license_plate_isSet;
    bool m_license_plate_isValid;

    QString m_license_plate_state;
    bool m_license_plate_state_isSet;
    bool m_license_plate_state_isValid;

    QString m_make;
    bool m_make_isSet;
    bool m_make_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    qint32 m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVehicleDetail)

#endif // OAIVehicleDetail_H
