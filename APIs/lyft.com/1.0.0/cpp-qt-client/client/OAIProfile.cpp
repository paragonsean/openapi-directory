/**
 * Lyft
 * Drive your app to success with Lyft's API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@lyft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProfile::OAIProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProfile::OAIProfile() {
    this->initializeModel();
}

OAIProfile::~OAIProfile() {}

void OAIProfile::initializeModel() {

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_has_taken_a_ride_isSet = false;
    m_has_taken_a_ride_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;
}

void OAIProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProfile::fromJsonObject(QJsonObject json) {

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_has_taken_a_ride_isValid = ::OpenAPI::fromJsonValue(m_has_taken_a_ride, json[QString("has_taken_a_ride")]);
    m_has_taken_a_ride_isSet = !json[QString("has_taken_a_ride")].isNull() && m_has_taken_a_ride_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;
}

QString OAIProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_has_taken_a_ride_isSet) {
        obj.insert(QString("has_taken_a_ride"), ::OpenAPI::toJsonValue(m_has_taken_a_ride));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    return obj;
}

QString OAIProfile::getFirstName() const {
    return m_first_name;
}
void OAIProfile::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIProfile::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIProfile::is_first_name_Valid() const{
    return m_first_name_isValid;
}

bool OAIProfile::isHasTakenARide() const {
    return m_has_taken_a_ride;
}
void OAIProfile::setHasTakenARide(const bool &has_taken_a_ride) {
    m_has_taken_a_ride = has_taken_a_ride;
    m_has_taken_a_ride_isSet = true;
}

bool OAIProfile::is_has_taken_a_ride_Set() const{
    return m_has_taken_a_ride_isSet;
}

bool OAIProfile::is_has_taken_a_ride_Valid() const{
    return m_has_taken_a_ride_isValid;
}

QString OAIProfile::getId() const {
    return m_id;
}
void OAIProfile::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIProfile::is_id_Set() const{
    return m_id_isSet;
}

bool OAIProfile::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIProfile::getLastName() const {
    return m_last_name;
}
void OAIProfile::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIProfile::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIProfile::is_last_name_Valid() const{
    return m_last_name_isValid;
}

bool OAIProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_taken_a_ride_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_first_name_isValid && m_has_taken_a_ride_isValid && m_id_isValid && m_last_name_isValid && true;
}

} // namespace OpenAPI
