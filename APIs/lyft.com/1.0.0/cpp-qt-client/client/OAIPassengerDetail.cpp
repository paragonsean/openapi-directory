/**
 * Lyft
 * Drive your app to success with Lyft's API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@lyft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPassengerDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPassengerDetail::OAIPassengerDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPassengerDetail::OAIPassengerDetail() {
    this->initializeModel();
}

OAIPassengerDetail::~OAIPassengerDetail() {}

void OAIPassengerDetail::initializeModel() {

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_image_url_isSet = false;
    m_image_url_isValid = false;

    m_rating_isSet = false;
    m_rating_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;
}

void OAIPassengerDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPassengerDetail::fromJsonObject(QJsonObject json) {

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_image_url_isValid = ::OpenAPI::fromJsonValue(m_image_url, json[QString("image_url")]);
    m_image_url_isSet = !json[QString("image_url")].isNull() && m_image_url_isValid;

    m_rating_isValid = ::OpenAPI::fromJsonValue(m_rating, json[QString("rating")]);
    m_rating_isSet = !json[QString("rating")].isNull() && m_rating_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("user_id")]);
    m_user_id_isSet = !json[QString("user_id")].isNull() && m_user_id_isValid;
}

QString OAIPassengerDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPassengerDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_image_url_isSet) {
        obj.insert(QString("image_url"), ::OpenAPI::toJsonValue(m_image_url));
    }
    if (m_rating_isSet) {
        obj.insert(QString("rating"), ::OpenAPI::toJsonValue(m_rating));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("user_id"), ::OpenAPI::toJsonValue(m_user_id));
    }
    return obj;
}

QString OAIPassengerDetail::getFirstName() const {
    return m_first_name;
}
void OAIPassengerDetail::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIPassengerDetail::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIPassengerDetail::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIPassengerDetail::getImageUrl() const {
    return m_image_url;
}
void OAIPassengerDetail::setImageUrl(const QString &image_url) {
    m_image_url = image_url;
    m_image_url_isSet = true;
}

bool OAIPassengerDetail::is_image_url_Set() const{
    return m_image_url_isSet;
}

bool OAIPassengerDetail::is_image_url_Valid() const{
    return m_image_url_isValid;
}

QString OAIPassengerDetail::getRating() const {
    return m_rating;
}
void OAIPassengerDetail::setRating(const QString &rating) {
    m_rating = rating;
    m_rating_isSet = true;
}

bool OAIPassengerDetail::is_rating_Set() const{
    return m_rating_isSet;
}

bool OAIPassengerDetail::is_rating_Valid() const{
    return m_rating_isValid;
}

QString OAIPassengerDetail::getLastName() const {
    return m_last_name;
}
void OAIPassengerDetail::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIPassengerDetail::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIPassengerDetail::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIPassengerDetail::getUserId() const {
    return m_user_id;
}
void OAIPassengerDetail::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIPassengerDetail::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIPassengerDetail::is_user_id_Valid() const{
    return m_user_id_isValid;
}

bool OAIPassengerDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rating_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPassengerDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_first_name_isValid && m_image_url_isValid && m_rating_isValid && true;
}

} // namespace OpenAPI
