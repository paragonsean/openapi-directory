# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.location import Location
from openapi_server.models.ride_type_enum import RideTypeEnum
from openapi_server import util


class Ride(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cost_token: str=None, destination: Location=None, origin: Location=None, primetime_confirmation_token: str=None, ride_type: RideTypeEnum=None):
        """Ride - a model defined in OpenAPI

        :param cost_token: The cost_token of this Ride.
        :param destination: The destination of this Ride.
        :param origin: The origin of this Ride.
        :param primetime_confirmation_token: The primetime_confirmation_token of this Ride.
        :param ride_type: The ride_type of this Ride.
        """
        self.openapi_types = {
            'cost_token': str,
            'destination': Location,
            'origin': Location,
            'primetime_confirmation_token': str,
            'ride_type': RideTypeEnum
        }

        self.attribute_map = {
            'cost_token': 'cost_token',
            'destination': 'destination',
            'origin': 'origin',
            'primetime_confirmation_token': 'primetime_confirmation_token',
            'ride_type': 'ride_type'
        }

        self._cost_token = cost_token
        self._destination = destination
        self._origin = origin
        self._primetime_confirmation_token = primetime_confirmation_token
        self._ride_type = ride_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Ride':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Ride of this Ride.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cost_token(self):
        """Gets the cost_token of this Ride.

        A token that confirms the user has accepted current Prime Time and/or fixed price charges

        :return: The cost_token of this Ride.
        :rtype: str
        """
        return self._cost_token

    @cost_token.setter
    def cost_token(self, cost_token):
        """Sets the cost_token of this Ride.

        A token that confirms the user has accepted current Prime Time and/or fixed price charges

        :param cost_token: The cost_token of this Ride.
        :type cost_token: str
        """

        self._cost_token = cost_token

    @property
    def destination(self):
        """Gets the destination of this Ride.

        The *requested* location for passenger drop off

        :return: The destination of this Ride.
        :rtype: Location
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this Ride.

        The *requested* location for passenger drop off

        :param destination: The destination of this Ride.
        :type destination: Location
        """

        self._destination = destination

    @property
    def origin(self):
        """Gets the origin of this Ride.

        The *requested* location for passenger pickup

        :return: The origin of this Ride.
        :rtype: Location
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this Ride.

        The *requested* location for passenger pickup

        :param origin: The origin of this Ride.
        :type origin: Location
        """
        if origin is None:
            raise ValueError("Invalid value for `origin`, must not be `None`")

        self._origin = origin

    @property
    def primetime_confirmation_token(self):
        """Gets the primetime_confirmation_token of this Ride.

        A token that confirms the user has accepted current primetime charges (Deprecated)

        :return: The primetime_confirmation_token of this Ride.
        :rtype: str
        """
        return self._primetime_confirmation_token

    @primetime_confirmation_token.setter
    def primetime_confirmation_token(self, primetime_confirmation_token):
        """Sets the primetime_confirmation_token of this Ride.

        A token that confirms the user has accepted current primetime charges (Deprecated)

        :param primetime_confirmation_token: The primetime_confirmation_token of this Ride.
        :type primetime_confirmation_token: str
        """

        self._primetime_confirmation_token = primetime_confirmation_token

    @property
    def ride_type(self):
        """Gets the ride_type of this Ride.


        :return: The ride_type of this Ride.
        :rtype: RideTypeEnum
        """
        return self._ride_type

    @ride_type.setter
    def ride_type(self, ride_type):
        """Sets the ride_type of this Ride.


        :param ride_type: The ride_type of this Ride.
        :type ride_type: RideTypeEnum
        """
        if ride_type is None:
            raise ValueError("Invalid value for `ride_type`, must not be `None`")

        self._ride_type = ride_type
