# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error_detail import ErrorDetail
from openapi_server import util


class RideRequestError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cost_token: str=None, error: str=None, error_description: str=None, error_detail: List[ErrorDetail]=None, error_uri: str=None, primetime_confirmation_token: str=None, primetime_multiplier: float=None, primetime_percentage: str=None, token_duration: str=None):
        """RideRequestError - a model defined in OpenAPI

        :param cost_token: The cost_token of this RideRequestError.
        :param error: The error of this RideRequestError.
        :param error_description: The error_description of this RideRequestError.
        :param error_detail: The error_detail of this RideRequestError.
        :param error_uri: The error_uri of this RideRequestError.
        :param primetime_confirmation_token: The primetime_confirmation_token of this RideRequestError.
        :param primetime_multiplier: The primetime_multiplier of this RideRequestError.
        :param primetime_percentage: The primetime_percentage of this RideRequestError.
        :param token_duration: The token_duration of this RideRequestError.
        """
        self.openapi_types = {
            'cost_token': str,
            'error': str,
            'error_description': str,
            'error_detail': List[ErrorDetail],
            'error_uri': str,
            'primetime_confirmation_token': str,
            'primetime_multiplier': float,
            'primetime_percentage': str,
            'token_duration': str
        }

        self.attribute_map = {
            'cost_token': 'cost_token',
            'error': 'error',
            'error_description': 'error_description',
            'error_detail': 'error_detail',
            'error_uri': 'error_uri',
            'primetime_confirmation_token': 'primetime_confirmation_token',
            'primetime_multiplier': 'primetime_multiplier',
            'primetime_percentage': 'primetime_percentage',
            'token_duration': 'token_duration'
        }

        self._cost_token = cost_token
        self._error = error
        self._error_description = error_description
        self._error_detail = error_detail
        self._error_uri = error_uri
        self._primetime_confirmation_token = primetime_confirmation_token
        self._primetime_multiplier = primetime_multiplier
        self._primetime_percentage = primetime_percentage
        self._token_duration = token_duration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RideRequestError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RideRequestError of this RideRequestError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cost_token(self):
        """Gets the cost_token of this RideRequestError.

        A token that confirms the user has accepted current Prime Time and/or fixed price charges

        :return: The cost_token of this RideRequestError.
        :rtype: str
        """
        return self._cost_token

    @cost_token.setter
    def cost_token(self, cost_token):
        """Sets the cost_token of this RideRequestError.

        A token that confirms the user has accepted current Prime Time and/or fixed price charges

        :param cost_token: The cost_token of this RideRequestError.
        :type cost_token: str
        """

        self._cost_token = cost_token

    @property
    def error(self):
        """Gets the error of this RideRequestError.

        A \"slug\" that serves as the error code (eg. \"bad_parameter\")

        :return: The error of this RideRequestError.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this RideRequestError.

        A \"slug\" that serves as the error code (eg. \"bad_parameter\")

        :param error: The error of this RideRequestError.
        :type error: str
        """
        if error is None:
            raise ValueError("Invalid value for `error`, must not be `None`")

        self._error = error

    @property
    def error_description(self):
        """Gets the error_description of this RideRequestError.

        A user-friendly description of the error (appropriate to show to an end-user)

        :return: The error_description of this RideRequestError.
        :rtype: str
        """
        return self._error_description

    @error_description.setter
    def error_description(self, error_description):
        """Sets the error_description of this RideRequestError.

        A user-friendly description of the error (appropriate to show to an end-user)

        :param error_description: The error_description of this RideRequestError.
        :type error_description: str
        """

        self._error_description = error_description

    @property
    def error_detail(self):
        """Gets the error_detail of this RideRequestError.


        :return: The error_detail of this RideRequestError.
        :rtype: List[ErrorDetail]
        """
        return self._error_detail

    @error_detail.setter
    def error_detail(self, error_detail):
        """Sets the error_detail of this RideRequestError.


        :param error_detail: The error_detail of this RideRequestError.
        :type error_detail: List[ErrorDetail]
        """

        self._error_detail = error_detail

    @property
    def error_uri(self):
        """Gets the error_uri of this RideRequestError.

        When a user must go through another flow before requesting a ride, this URI specifies which flow to use (e.g. an account challenge flow in a web view)

        :return: The error_uri of this RideRequestError.
        :rtype: str
        """
        return self._error_uri

    @error_uri.setter
    def error_uri(self, error_uri):
        """Sets the error_uri of this RideRequestError.

        When a user must go through another flow before requesting a ride, this URI specifies which flow to use (e.g. an account challenge flow in a web view)

        :param error_uri: The error_uri of this RideRequestError.
        :type error_uri: str
        """

        self._error_uri = error_uri

    @property
    def primetime_confirmation_token(self):
        """Gets the primetime_confirmation_token of this RideRequestError.

        A token that confirms the user has accepted current Prime Time charges (Deprecated)

        :return: The primetime_confirmation_token of this RideRequestError.
        :rtype: str
        """
        return self._primetime_confirmation_token

    @primetime_confirmation_token.setter
    def primetime_confirmation_token(self, primetime_confirmation_token):
        """Sets the primetime_confirmation_token of this RideRequestError.

        A token that confirms the user has accepted current Prime Time charges (Deprecated)

        :param primetime_confirmation_token: The primetime_confirmation_token of this RideRequestError.
        :type primetime_confirmation_token: str
        """

        self._primetime_confirmation_token = primetime_confirmation_token

    @property
    def primetime_multiplier(self):
        """Gets the primetime_multiplier of this RideRequestError.

        Current Prime Time multiplier (eg. if primetime_percentage is 100%, primetime_multiplier will be 2.0)

        :return: The primetime_multiplier of this RideRequestError.
        :rtype: float
        """
        return self._primetime_multiplier

    @primetime_multiplier.setter
    def primetime_multiplier(self, primetime_multiplier):
        """Sets the primetime_multiplier of this RideRequestError.

        Current Prime Time multiplier (eg. if primetime_percentage is 100%, primetime_multiplier will be 2.0)

        :param primetime_multiplier: The primetime_multiplier of this RideRequestError.
        :type primetime_multiplier: float
        """

        self._primetime_multiplier = primetime_multiplier

    @property
    def primetime_percentage(self):
        """Gets the primetime_percentage of this RideRequestError.

        Current Prime Time percentage

        :return: The primetime_percentage of this RideRequestError.
        :rtype: str
        """
        return self._primetime_percentage

    @primetime_percentage.setter
    def primetime_percentage(self, primetime_percentage):
        """Sets the primetime_percentage of this RideRequestError.

        Current Prime Time percentage

        :param primetime_percentage: The primetime_percentage of this RideRequestError.
        :type primetime_percentage: str
        """

        self._primetime_percentage = primetime_percentage

    @property
    def token_duration(self):
        """Gets the token_duration of this RideRequestError.

        Validity of the token in seconds

        :return: The token_duration of this RideRequestError.
        :rtype: str
        """
        return self._token_duration

    @token_duration.setter
    def token_duration(self, token_duration):
        """Sets the token_duration of this RideRequestError.

        Validity of the token in seconds

        :param token_duration: The token_duration of this RideRequestError.
        :type token_duration: str
        """

        self._token_duration = token_duration
