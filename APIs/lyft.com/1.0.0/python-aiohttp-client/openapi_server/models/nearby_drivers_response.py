# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.nearby_drivers_by_ride_type import NearbyDriversByRideType
from openapi_server import util


class NearbyDriversResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nearby_drivers: List[NearbyDriversByRideType]=None):
        """NearbyDriversResponse - a model defined in OpenAPI

        :param nearby_drivers: The nearby_drivers of this NearbyDriversResponse.
        """
        self.openapi_types = {
            'nearby_drivers': List[NearbyDriversByRideType]
        }

        self.attribute_map = {
            'nearby_drivers': 'nearby_drivers'
        }

        self._nearby_drivers = nearby_drivers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NearbyDriversResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NearbyDriversResponse of this NearbyDriversResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nearby_drivers(self):
        """Gets the nearby_drivers of this NearbyDriversResponse.


        :return: The nearby_drivers of this NearbyDriversResponse.
        :rtype: List[NearbyDriversByRideType]
        """
        return self._nearby_drivers

    @nearby_drivers.setter
    def nearby_drivers(self, nearby_drivers):
        """Sets the nearby_drivers of this NearbyDriversResponse.


        :param nearby_drivers: The nearby_drivers of this NearbyDriversResponse.
        :type nearby_drivers: List[NearbyDriversByRideType]
        """

        self._nearby_drivers = nearby_drivers
