# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pricing_details import PricingDetails
from openapi_server.models.ride_type_enum import RideTypeEnum
from openapi_server import util


class RideType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, image_url: str=None, pricing_details: PricingDetails=None, ride_type: RideTypeEnum=None, scheduled_pricing_details: PricingDetails=None, seats: int=None):
        """RideType - a model defined in OpenAPI

        :param display_name: The display_name of this RideType.
        :param image_url: The image_url of this RideType.
        :param pricing_details: The pricing_details of this RideType.
        :param ride_type: The ride_type of this RideType.
        :param scheduled_pricing_details: The scheduled_pricing_details of this RideType.
        :param seats: The seats of this RideType.
        """
        self.openapi_types = {
            'display_name': str,
            'image_url': str,
            'pricing_details': PricingDetails,
            'ride_type': RideTypeEnum,
            'scheduled_pricing_details': PricingDetails,
            'seats': int
        }

        self.attribute_map = {
            'display_name': 'display_name',
            'image_url': 'image_url',
            'pricing_details': 'pricing_details',
            'ride_type': 'ride_type',
            'scheduled_pricing_details': 'scheduled_pricing_details',
            'seats': 'seats'
        }

        self._display_name = display_name
        self._image_url = image_url
        self._pricing_details = pricing_details
        self._ride_type = ride_type
        self._scheduled_pricing_details = scheduled_pricing_details
        self._seats = seats

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RideType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RideType of this RideType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this RideType.

        A human readable description of the ride type

        :return: The display_name of this RideType.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this RideType.

        A human readable description of the ride type

        :param display_name: The display_name of this RideType.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def image_url(self):
        """Gets the image_url of this RideType.

        The URL of an image representing this ride type

        :return: The image_url of this RideType.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this RideType.

        The URL of an image representing this ride type

        :param image_url: The image_url of this RideType.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def pricing_details(self):
        """Gets the pricing_details of this RideType.


        :return: The pricing_details of this RideType.
        :rtype: PricingDetails
        """
        return self._pricing_details

    @pricing_details.setter
    def pricing_details(self, pricing_details):
        """Sets the pricing_details of this RideType.


        :param pricing_details: The pricing_details of this RideType.
        :type pricing_details: PricingDetails
        """

        self._pricing_details = pricing_details

    @property
    def ride_type(self):
        """Gets the ride_type of this RideType.


        :return: The ride_type of this RideType.
        :rtype: RideTypeEnum
        """
        return self._ride_type

    @ride_type.setter
    def ride_type(self, ride_type):
        """Sets the ride_type of this RideType.


        :param ride_type: The ride_type of this RideType.
        :type ride_type: RideTypeEnum
        """

        self._ride_type = ride_type

    @property
    def scheduled_pricing_details(self):
        """Gets the scheduled_pricing_details of this RideType.


        :return: The scheduled_pricing_details of this RideType.
        :rtype: PricingDetails
        """
        return self._scheduled_pricing_details

    @scheduled_pricing_details.setter
    def scheduled_pricing_details(self, scheduled_pricing_details):
        """Sets the scheduled_pricing_details of this RideType.


        :param scheduled_pricing_details: The scheduled_pricing_details of this RideType.
        :type scheduled_pricing_details: PricingDetails
        """

        self._scheduled_pricing_details = scheduled_pricing_details

    @property
    def seats(self):
        """Gets the seats of this RideType.

        The maximum number of seats available for rides requested with this ride type

        :return: The seats of this RideType.
        :rtype: int
        """
        return self._seats

    @seats.setter
    def seats(self, seats):
        """Sets the seats of this RideType.

        The maximum number of seats available for rides requested with this ride type

        :param seats: The seats of this RideType.
        :type seats: int
        """

        self._seats = seats
