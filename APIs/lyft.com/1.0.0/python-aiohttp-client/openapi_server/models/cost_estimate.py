# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ride_type_enum import RideTypeEnum
from openapi_server import util


class CostEstimate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cost_token: str=None, currency: str=None, display_name: str=None, estimated_cost_cents_max: int=None, estimated_cost_cents_min: int=None, estimated_distance_miles: float=None, estimated_duration_seconds: int=None, is_valid_estimate: bool=None, primetime_confirmation_token: str=None, primetime_percentage: str=None, ride_type: RideTypeEnum=None):
        """CostEstimate - a model defined in OpenAPI

        :param cost_token: The cost_token of this CostEstimate.
        :param currency: The currency of this CostEstimate.
        :param display_name: The display_name of this CostEstimate.
        :param estimated_cost_cents_max: The estimated_cost_cents_max of this CostEstimate.
        :param estimated_cost_cents_min: The estimated_cost_cents_min of this CostEstimate.
        :param estimated_distance_miles: The estimated_distance_miles of this CostEstimate.
        :param estimated_duration_seconds: The estimated_duration_seconds of this CostEstimate.
        :param is_valid_estimate: The is_valid_estimate of this CostEstimate.
        :param primetime_confirmation_token: The primetime_confirmation_token of this CostEstimate.
        :param primetime_percentage: The primetime_percentage of this CostEstimate.
        :param ride_type: The ride_type of this CostEstimate.
        """
        self.openapi_types = {
            'cost_token': str,
            'currency': str,
            'display_name': str,
            'estimated_cost_cents_max': int,
            'estimated_cost_cents_min': int,
            'estimated_distance_miles': float,
            'estimated_duration_seconds': int,
            'is_valid_estimate': bool,
            'primetime_confirmation_token': str,
            'primetime_percentage': str,
            'ride_type': RideTypeEnum
        }

        self.attribute_map = {
            'cost_token': 'cost_token',
            'currency': 'currency',
            'display_name': 'display_name',
            'estimated_cost_cents_max': 'estimated_cost_cents_max',
            'estimated_cost_cents_min': 'estimated_cost_cents_min',
            'estimated_distance_miles': 'estimated_distance_miles',
            'estimated_duration_seconds': 'estimated_duration_seconds',
            'is_valid_estimate': 'is_valid_estimate',
            'primetime_confirmation_token': 'primetime_confirmation_token',
            'primetime_percentage': 'primetime_percentage',
            'ride_type': 'ride_type'
        }

        self._cost_token = cost_token
        self._currency = currency
        self._display_name = display_name
        self._estimated_cost_cents_max = estimated_cost_cents_max
        self._estimated_cost_cents_min = estimated_cost_cents_min
        self._estimated_distance_miles = estimated_distance_miles
        self._estimated_duration_seconds = estimated_duration_seconds
        self._is_valid_estimate = is_valid_estimate
        self._primetime_confirmation_token = primetime_confirmation_token
        self._primetime_percentage = primetime_percentage
        self._ride_type = ride_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CostEstimate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CostEstimate of this CostEstimate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cost_token(self):
        """Gets the cost_token of this CostEstimate.

        A token that confirms the user has accepted current Prime Time and/or fixed price charges. See 'Request a Lyft' for more details

        :return: The cost_token of this CostEstimate.
        :rtype: str
        """
        return self._cost_token

    @cost_token.setter
    def cost_token(self, cost_token):
        """Sets the cost_token of this CostEstimate.

        A token that confirms the user has accepted current Prime Time and/or fixed price charges. See 'Request a Lyft' for more details

        :param cost_token: The cost_token of this CostEstimate.
        :type cost_token: str
        """

        self._cost_token = cost_token

    @property
    def currency(self):
        """Gets the currency of this CostEstimate.

        The ISO 4217 currency code for the amount (e.g. 'USD')

        :return: The currency of this CostEstimate.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this CostEstimate.

        The ISO 4217 currency code for the amount (e.g. 'USD')

        :param currency: The currency of this CostEstimate.
        :type currency: str
        """

        self._currency = currency

    @property
    def display_name(self):
        """Gets the display_name of this CostEstimate.

        A human readable description of the ride type

        :return: The display_name of this CostEstimate.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this CostEstimate.

        A human readable description of the ride type

        :param display_name: The display_name of this CostEstimate.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def estimated_cost_cents_max(self):
        """Gets the estimated_cost_cents_max of this CostEstimate.

        Estimated upper bound for trip cost, in minor units (cents). Estimates are not guaranteed, and only provide a reasonable range based on current conditions. 

        :return: The estimated_cost_cents_max of this CostEstimate.
        :rtype: int
        """
        return self._estimated_cost_cents_max

    @estimated_cost_cents_max.setter
    def estimated_cost_cents_max(self, estimated_cost_cents_max):
        """Sets the estimated_cost_cents_max of this CostEstimate.

        Estimated upper bound for trip cost, in minor units (cents). Estimates are not guaranteed, and only provide a reasonable range based on current conditions. 

        :param estimated_cost_cents_max: The estimated_cost_cents_max of this CostEstimate.
        :type estimated_cost_cents_max: int
        """

        self._estimated_cost_cents_max = estimated_cost_cents_max

    @property
    def estimated_cost_cents_min(self):
        """Gets the estimated_cost_cents_min of this CostEstimate.

        Estimated lower bound for trip cost, in minor units (cents). Estimates are not guaranteed, and only provide a reasonable range based on current conditions. 

        :return: The estimated_cost_cents_min of this CostEstimate.
        :rtype: int
        """
        return self._estimated_cost_cents_min

    @estimated_cost_cents_min.setter
    def estimated_cost_cents_min(self, estimated_cost_cents_min):
        """Sets the estimated_cost_cents_min of this CostEstimate.

        Estimated lower bound for trip cost, in minor units (cents). Estimates are not guaranteed, and only provide a reasonable range based on current conditions. 

        :param estimated_cost_cents_min: The estimated_cost_cents_min of this CostEstimate.
        :type estimated_cost_cents_min: int
        """

        self._estimated_cost_cents_min = estimated_cost_cents_min

    @property
    def estimated_distance_miles(self):
        """Gets the estimated_distance_miles of this CostEstimate.

        Estimated distance for this trip 

        :return: The estimated_distance_miles of this CostEstimate.
        :rtype: float
        """
        return self._estimated_distance_miles

    @estimated_distance_miles.setter
    def estimated_distance_miles(self, estimated_distance_miles):
        """Sets the estimated_distance_miles of this CostEstimate.

        Estimated distance for this trip 

        :param estimated_distance_miles: The estimated_distance_miles of this CostEstimate.
        :type estimated_distance_miles: float
        """

        self._estimated_distance_miles = estimated_distance_miles

    @property
    def estimated_duration_seconds(self):
        """Gets the estimated_duration_seconds of this CostEstimate.

        Estimated time to get from the start location to the end. 

        :return: The estimated_duration_seconds of this CostEstimate.
        :rtype: int
        """
        return self._estimated_duration_seconds

    @estimated_duration_seconds.setter
    def estimated_duration_seconds(self, estimated_duration_seconds):
        """Sets the estimated_duration_seconds of this CostEstimate.

        Estimated time to get from the start location to the end. 

        :param estimated_duration_seconds: The estimated_duration_seconds of this CostEstimate.
        :type estimated_duration_seconds: int
        """

        self._estimated_duration_seconds = estimated_duration_seconds

    @property
    def is_valid_estimate(self):
        """Gets the is_valid_estimate of this CostEstimate.

        The validity of the cost estimate returned

        :return: The is_valid_estimate of this CostEstimate.
        :rtype: bool
        """
        return self._is_valid_estimate

    @is_valid_estimate.setter
    def is_valid_estimate(self, is_valid_estimate):
        """Sets the is_valid_estimate of this CostEstimate.

        The validity of the cost estimate returned

        :param is_valid_estimate: The is_valid_estimate of this CostEstimate.
        :type is_valid_estimate: bool
        """

        self._is_valid_estimate = is_valid_estimate

    @property
    def primetime_confirmation_token(self):
        """Gets the primetime_confirmation_token of this CostEstimate.

        This token is needed when requesting rides. (Deprecated)

        :return: The primetime_confirmation_token of this CostEstimate.
        :rtype: str
        """
        return self._primetime_confirmation_token

    @primetime_confirmation_token.setter
    def primetime_confirmation_token(self, primetime_confirmation_token):
        """Sets the primetime_confirmation_token of this CostEstimate.

        This token is needed when requesting rides. (Deprecated)

        :param primetime_confirmation_token: The primetime_confirmation_token of this CostEstimate.
        :type primetime_confirmation_token: str
        """

        self._primetime_confirmation_token = primetime_confirmation_token

    @property
    def primetime_percentage(self):
        """Gets the primetime_percentage of this CostEstimate.

        Current Prime Time Percentage. Prime Time adds a percentage to ride costs, prior to other applicable fees. When ride requests greatly outnumber available drivers, our system will automatically turn on Prime Time. If Prime Time is inactive, the value returned will be '0%'. Note: The returned estimate already has Prime Time factored in. The value is returned here for reference and to allow users to confirm/accept Prime Time prior to initiating a ride. 

        :return: The primetime_percentage of this CostEstimate.
        :rtype: str
        """
        return self._primetime_percentage

    @primetime_percentage.setter
    def primetime_percentage(self, primetime_percentage):
        """Sets the primetime_percentage of this CostEstimate.

        Current Prime Time Percentage. Prime Time adds a percentage to ride costs, prior to other applicable fees. When ride requests greatly outnumber available drivers, our system will automatically turn on Prime Time. If Prime Time is inactive, the value returned will be '0%'. Note: The returned estimate already has Prime Time factored in. The value is returned here for reference and to allow users to confirm/accept Prime Time prior to initiating a ride. 

        :param primetime_percentage: The primetime_percentage of this CostEstimate.
        :type primetime_percentage: str
        """

        self._primetime_percentage = primetime_percentage

    @property
    def ride_type(self):
        """Gets the ride_type of this CostEstimate.


        :return: The ride_type of this CostEstimate.
        :rtype: RideTypeEnum
        """
        return self._ride_type

    @ride_type.setter
    def ride_type(self, ride_type):
        """Sets the ride_type of this CostEstimate.


        :param ride_type: The ride_type of this CostEstimate.
        :type ride_type: RideTypeEnum
        """

        self._ride_type = ride_type
