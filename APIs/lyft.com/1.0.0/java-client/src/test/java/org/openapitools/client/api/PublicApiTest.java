/*
 * Lyft
 * Drive your app to success with Lyft's API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@lyft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiError;
import org.openapitools.client.model.CostEstimateResponse;
import org.openapitools.client.model.EtaEstimateResponse;
import org.openapitools.client.model.NearbyDriversResponse;
import org.openapitools.client.model.RideTypesResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PublicApi
 */
@Disabled
public class PublicApiTest {

    private final PublicApi api = new PublicApi();

    /**
     * Cost estimates
     *
     * Estimate the cost of taking a Lyft between two points. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCostTest() throws ApiException {
        Double startLat = null;
        Double startLng = null;
        String rideType = null;
        Double endLat = null;
        Double endLng = null;
        CostEstimateResponse response = api.getCost(startLat, startLng, rideType, endLat, endLng);
        // TODO: test validations
    }

    /**
     * Available drivers nearby
     *
     * The drivers endpoint returns a list of nearby drivers&#39; lat and lng at a given location. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDriversTest() throws ApiException {
        Double lat = null;
        Double lng = null;
        NearbyDriversResponse response = api.getDrivers(lat, lng);
        // TODO: test validations
    }

    /**
     * Pickup ETAs
     *
     * The ETA endpoint lets you know how quickly a Lyft driver can come get you 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getETATest() throws ApiException {
        Double lat = null;
        Double lng = null;
        Double destinationLat = null;
        Double destinationLng = null;
        String rideType = null;
        EtaEstimateResponse response = api.getETA(lat, lng, destinationLat, destinationLng, rideType);
        // TODO: test validations
    }

    /**
     * Types of rides
     *
     * The ride types endpoint returns information about what kinds of Lyft rides you can request at a given location. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRideTypesTest() throws ApiException {
        Double lat = null;
        Double lng = null;
        String rideType = null;
        RideTypesResponse response = api.getRideTypes(lat, lng, rideType);
        // TODO: test validations
    }

}
