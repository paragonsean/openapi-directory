/*
 * Lyft
 * Drive your app to success with Lyft's API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@lyft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiError;
import org.openapitools.client.model.SandboxDriverAvailability;
import org.openapitools.client.model.SandboxPrimetime;
import org.openapitools.client.model.SandboxRideStatus;
import org.openapitools.client.model.SandboxRideType;
import org.openapitools.client.model.SandboxRideUpdate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SandboxApi
 */
@Disabled
public class SandboxApiTest {

    private final SandboxApi api = new SandboxApi();

    /**
     * Preset Prime Time percentage
     *
     * Preset a Prime Time percentage in the region surrounding the specified location. This Prime Time percentage will be applied when requesting cost, or when requesting a ride in sandbox mode. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setPrimeTimeTest() throws ApiException {
        SandboxPrimetime request = null;
        api.setPrimeTime(request);
        // TODO: test validations
    }

    /**
     * Propagate ride through ride status
     *
     * Propagate a sandbox-ride through various ride status 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setRideStatusTest() throws ApiException {
        String id = null;
        SandboxRideStatus request = null;
        SandboxRideUpdate response = api.setRideStatus(id, request);
        // TODO: test validations
    }

    /**
     * Driver availability for processing ride request
     *
     * Set driver availability for the provided ride_type in the city/region surrounding the specified location 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setRideTypeAvailabilityTest() throws ApiException {
        String rideType = null;
        SandboxDriverAvailability request = null;
        api.setRideTypeAvailability(rideType, request);
        // TODO: test validations
    }

    /**
     * Preset types of rides for sandbox
     *
     * The sandbox-ridetypes endpoint allows you to preset the ridetypes in the region surrounding the specified latitude and longitude to allow testing different scenarios 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setRideTypesTest() throws ApiException {
        SandboxRideType request = null;
        SandboxRideType response = api.setRideTypes(request);
        // TODO: test validations
    }

}
