/**
 * Compliance API
 * Service for providing information to sellers about their listings being non-compliant, or at risk for becoming non-compliant, against eBay listing policies.
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComplianceDetail.h
 *
 * This type is used by each listing violation that is returned under the violations container.
 */

#ifndef OAIComplianceDetail_H
#define OAIComplianceDetail_H

#include <QJsonObject>

#include "OAICorrectiveRecommendations.h"
#include "OAINameValueList.h"
#include "OAIVariationDetails.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICorrectiveRecommendations;
class OAIVariationDetails;
class OAINameValueList;

class OAIComplianceDetail : public OAIObject {
public:
    OAIComplianceDetail();
    OAIComplianceDetail(QString json);
    ~OAIComplianceDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getComplianceState() const;
    void setComplianceState(const QString &compliance_state);
    bool is_compliance_state_Set() const;
    bool is_compliance_state_Valid() const;

    OAICorrectiveRecommendations getCorrectiveRecommendations() const;
    void setCorrectiveRecommendations(const OAICorrectiveRecommendations &corrective_recommendations);
    bool is_corrective_recommendations_Set() const;
    bool is_corrective_recommendations_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getReasonCode() const;
    void setReasonCode(const QString &reason_code);
    bool is_reason_code_Set() const;
    bool is_reason_code_Valid() const;

    OAIVariationDetails getVariation() const;
    void setVariation(const OAIVariationDetails &variation);
    bool is_variation_Set() const;
    bool is_variation_Valid() const;

    QList<OAINameValueList> getViolationData() const;
    void setViolationData(const QList<OAINameValueList> &violation_data);
    bool is_violation_data_Set() const;
    bool is_violation_data_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_compliance_state;
    bool m_compliance_state_isSet;
    bool m_compliance_state_isValid;

    OAICorrectiveRecommendations m_corrective_recommendations;
    bool m_corrective_recommendations_isSet;
    bool m_corrective_recommendations_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_reason_code;
    bool m_reason_code_isSet;
    bool m_reason_code_isValid;

    OAIVariationDetails m_variation;
    bool m_variation_isSet;
    bool m_variation_isValid;

    QList<OAINameValueList> m_violation_data;
    bool m_violation_data_isSet;
    bool m_violation_data_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComplianceDetail)

#endif // OAIComplianceDetail_H
