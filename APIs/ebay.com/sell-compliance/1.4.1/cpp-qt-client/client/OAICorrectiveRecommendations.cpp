/**
 * Compliance API
 * Service for providing information to sellers about their listings being non-compliant, or at risk for becoming non-compliant, against eBay listing policies.
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICorrectiveRecommendations.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICorrectiveRecommendations::OAICorrectiveRecommendations(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICorrectiveRecommendations::OAICorrectiveRecommendations() {
    this->initializeModel();
}

OAICorrectiveRecommendations::~OAICorrectiveRecommendations() {}

void OAICorrectiveRecommendations::initializeModel() {

    m_aspect_recommendations_isSet = false;
    m_aspect_recommendations_isValid = false;

    m_product_recommendation_isSet = false;
    m_product_recommendation_isValid = false;
}

void OAICorrectiveRecommendations::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICorrectiveRecommendations::fromJsonObject(QJsonObject json) {

    m_aspect_recommendations_isValid = ::OpenAPI::fromJsonValue(m_aspect_recommendations, json[QString("aspectRecommendations")]);
    m_aspect_recommendations_isSet = !json[QString("aspectRecommendations")].isNull() && m_aspect_recommendations_isValid;

    m_product_recommendation_isValid = ::OpenAPI::fromJsonValue(m_product_recommendation, json[QString("productRecommendation")]);
    m_product_recommendation_isSet = !json[QString("productRecommendation")].isNull() && m_product_recommendation_isValid;
}

QString OAICorrectiveRecommendations::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICorrectiveRecommendations::asJsonObject() const {
    QJsonObject obj;
    if (m_aspect_recommendations.size() > 0) {
        obj.insert(QString("aspectRecommendations"), ::OpenAPI::toJsonValue(m_aspect_recommendations));
    }
    if (m_product_recommendation.isSet()) {
        obj.insert(QString("productRecommendation"), ::OpenAPI::toJsonValue(m_product_recommendation));
    }
    return obj;
}

QList<OAIAspectRecommendations> OAICorrectiveRecommendations::getAspectRecommendations() const {
    return m_aspect_recommendations;
}
void OAICorrectiveRecommendations::setAspectRecommendations(const QList<OAIAspectRecommendations> &aspect_recommendations) {
    m_aspect_recommendations = aspect_recommendations;
    m_aspect_recommendations_isSet = true;
}

bool OAICorrectiveRecommendations::is_aspect_recommendations_Set() const{
    return m_aspect_recommendations_isSet;
}

bool OAICorrectiveRecommendations::is_aspect_recommendations_Valid() const{
    return m_aspect_recommendations_isValid;
}

OAIProductRecommendation OAICorrectiveRecommendations::getProductRecommendation() const {
    return m_product_recommendation;
}
void OAICorrectiveRecommendations::setProductRecommendation(const OAIProductRecommendation &product_recommendation) {
    m_product_recommendation = product_recommendation;
    m_product_recommendation_isSet = true;
}

bool OAICorrectiveRecommendations::is_product_recommendation_Set() const{
    return m_product_recommendation_isSet;
}

bool OAICorrectiveRecommendations::is_product_recommendation_Valid() const{
    return m_product_recommendation_isValid;
}

bool OAICorrectiveRecommendations::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aspect_recommendations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_recommendation.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICorrectiveRecommendations::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
