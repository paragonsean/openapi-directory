/**
 * Compliance API
 * Service for providing information to sellers about their listings being non-compliant, or at risk for becoming non-compliant, against eBay listing policies.
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIComplianceSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIComplianceSummary::OAIComplianceSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIComplianceSummary::OAIComplianceSummary() {
    this->initializeModel();
}

OAIComplianceSummary::~OAIComplianceSummary() {}

void OAIComplianceSummary::initializeModel() {

    m_violation_summaries_isSet = false;
    m_violation_summaries_isValid = false;
}

void OAIComplianceSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIComplianceSummary::fromJsonObject(QJsonObject json) {

    m_violation_summaries_isValid = ::OpenAPI::fromJsonValue(m_violation_summaries, json[QString("violationSummaries")]);
    m_violation_summaries_isSet = !json[QString("violationSummaries")].isNull() && m_violation_summaries_isValid;
}

QString OAIComplianceSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIComplianceSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_violation_summaries.size() > 0) {
        obj.insert(QString("violationSummaries"), ::OpenAPI::toJsonValue(m_violation_summaries));
    }
    return obj;
}

QList<OAIComplianceSummaryInfo> OAIComplianceSummary::getViolationSummaries() const {
    return m_violation_summaries;
}
void OAIComplianceSummary::setViolationSummaries(const QList<OAIComplianceSummaryInfo> &violation_summaries) {
    m_violation_summaries = violation_summaries;
    m_violation_summaries_isSet = true;
}

bool OAIComplianceSummary::is_violation_summaries_Set() const{
    return m_violation_summaries_isSet;
}

bool OAIComplianceSummary::is_violation_summaries_Valid() const{
    return m_violation_summaries_isValid;
}

bool OAIComplianceSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_violation_summaries.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIComplianceSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
