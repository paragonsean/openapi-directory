/**
 * Compliance API
 * Service for providing information to sellers about their listings being non-compliant, or at risk for becoming non-compliant, against eBay listing policies.
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ComplianceSummary from '../model/ComplianceSummary';

/**
* ListingViolationSummary service.
* @module api/ListingViolationSummaryApi
* @version 1.4.1
*/
export default class ListingViolationSummaryApi {

    /**
    * Constructs a new ListingViolationSummaryApi. 
    * @alias module:api/ListingViolationSummaryApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getListingViolationsSummary operation.
     * @callback module:api/ListingViolationSummaryApi~getListingViolationsSummaryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ComplianceSummary} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This call returns listing violation counts for a seller. A user can pass in one or more compliance types through the compliance_type query parameter. See ComplianceTypeEnum for more information on the supported listing compliance types. Listing violations are returned for multiple marketplaces if the seller sells on multiple eBay marketplaces. Note: Only a canned response, with counts for all listing compliance types, is returned in the Sandbox environment. Due to this limitation, the compliance_type query parameter (if used) will not have an effect on the response.
     * @param {Object} opts Optional parameters
     * @param {String} [X_EBAY_C_MARKETPLACE_ID] Use this header to specify the eBay marketplace identifier. Supported values for this header can be found in the MarketplaceIdEnum type definition. Note that Version 1.4.0 of the Compliance API is only supported on the US, UK, Australia, Canada {English), and Germany sites.
     * @param {String} [complianceType] A user passes in one or more compliance type values through this query parameter. See ComplianceTypeEnum for more information on the supported compliance types that can be passed in here. If more than one compliance type value is used, delimit these values with a comma. If no compliance type values are passed in, the listing count for all compliance types will be returned. Note: Only a canned response, with counts for all listing compliance types, is returned in the Sandbox environment. Due to this limitation, the compliance_type query parameter (if used) will not have an effect on the response.
     * @param {module:api/ListingViolationSummaryApi~getListingViolationsSummaryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ComplianceSummary}
     */
    getListingViolationsSummary(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'compliance_type': opts['complianceType']
      };
      let headerParams = {
        'X-EBAY-C-MARKETPLACE-ID': opts['X_EBAY_C_MARKETPLACE_ID']
      };
      let formParams = {
      };

      let authNames = ['api_auth'];
      let contentTypes = [];
      let accepts = ['application/json;charset=UTF-8'];
      let returnType = ComplianceSummary;
      return this.apiClient.callApi(
        '/listing_violation_summary', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
