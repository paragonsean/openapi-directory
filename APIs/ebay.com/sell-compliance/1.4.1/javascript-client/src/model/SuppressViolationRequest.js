/**
 * Compliance API
 * Service for providing information to sellers about their listings being non-compliant, or at risk for becoming non-compliant, against eBay listing policies.
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SuppressViolationRequest model module.
 * @module model/SuppressViolationRequest
 * @version 1.4.1
 */
class SuppressViolationRequest {
    /**
     * Constructs a new <code>SuppressViolationRequest</code>.
     * This is the base request type of the suppressViolation method, and is used to identify the listing violation that the seller wishes to suppress.
     * @alias module:model/SuppressViolationRequest
     */
    constructor() { 
        
        SuppressViolationRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SuppressViolationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SuppressViolationRequest} obj Optional instance to populate.
     * @return {module:model/SuppressViolationRequest} The populated <code>SuppressViolationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SuppressViolationRequest();

            if (data.hasOwnProperty('complianceType')) {
                obj['complianceType'] = ApiClient.convertToType(data['complianceType'], 'String');
            }
            if (data.hasOwnProperty('listingId')) {
                obj['listingId'] = ApiClient.convertToType(data['listingId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SuppressViolationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SuppressViolationRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['complianceType'] && !(typeof data['complianceType'] === 'string' || data['complianceType'] instanceof String)) {
            throw new Error("Expected the field `complianceType` to be a primitive type in the JSON string but got " + data['complianceType']);
        }
        // ensure the json data is a string
        if (data['listingId'] && !(typeof data['listingId'] === 'string' || data['listingId'] instanceof String)) {
            throw new Error("Expected the field `listingId` to be a primitive type in the JSON string but got " + data['listingId']);
        }

        return true;
    }


}



/**
 * The compliance type of the listing violation to suppress is specified in this field. The compliance type for each listing violation is found in the complianceType field under the listingViolations array in a getListingViolations response. Note: At this time, the suppressViolation method is only used to suppress aspect adoption listing violations in the 'at-risk' state, so ASPECTS_ADOPTION is currently the only supported value for this field. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/compliance/types/com:ComplianceTypeEnum'>eBay API documentation</a>
 * @member {String} complianceType
 */
SuppressViolationRequest.prototype['complianceType'] = undefined;

/**
 * The unique identifier of the listing with the violation(s) is specified in this field. The unique identifier of the listing with the listing violation(s) is found in the listingId field under the listingViolations array in a getListingViolations response. Note: At this time, the suppressViolation method is only used to suppress aspect adoption listing violations in the 'at-risk' state, so the listing specified in this field should be a listing with an ASPECTS_ADOPTION violation in the 'at-risk' state.
 * @member {String} listingId
 */
SuppressViolationRequest.prototype['listingId'] = undefined;






export default SuppressViolationRequest;

