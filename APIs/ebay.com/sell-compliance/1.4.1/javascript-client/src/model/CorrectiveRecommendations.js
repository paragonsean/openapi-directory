/**
 * Compliance API
 * Service for providing information to sellers about their listings being non-compliant, or at risk for becoming non-compliant, against eBay listing policies.
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AspectRecommendations from './AspectRecommendations';
import ProductRecommendation from './ProductRecommendation';

/**
 * The CorrectiveRecommendations model module.
 * @module model/CorrectiveRecommendations
 * @version 1.4.1
 */
class CorrectiveRecommendations {
    /**
     * Constructs a new <code>CorrectiveRecommendations</code>.
     * This type is used by the correctiveRecommendations container, which is returned if eBay has suggestions for how to correct the given violation.
     * @alias module:model/CorrectiveRecommendations
     */
    constructor() { 
        
        CorrectiveRecommendations.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CorrectiveRecommendations</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CorrectiveRecommendations} obj Optional instance to populate.
     * @return {module:model/CorrectiveRecommendations} The populated <code>CorrectiveRecommendations</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CorrectiveRecommendations();

            if (data.hasOwnProperty('aspectRecommendations')) {
                obj['aspectRecommendations'] = ApiClient.convertToType(data['aspectRecommendations'], [AspectRecommendations]);
            }
            if (data.hasOwnProperty('productRecommendation')) {
                obj['productRecommendation'] = ProductRecommendation.constructFromObject(data['productRecommendation']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CorrectiveRecommendations</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CorrectiveRecommendations</code>.
     */
    static validateJSON(data) {
        if (data['aspectRecommendations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['aspectRecommendations'])) {
                throw new Error("Expected the field `aspectRecommendations` to be an array in the JSON data but got " + data['aspectRecommendations']);
            }
            // validate the optional field `aspectRecommendations` (array)
            for (const item of data['aspectRecommendations']) {
                AspectRecommendations.validateJSON(item);
            };
        }
        // validate the optional field `productRecommendation`
        if (data['productRecommendation']) { // data not null
          ProductRecommendation.validateJSON(data['productRecommendation']);
        }

        return true;
    }


}



/**
 * This container is returned for ASPECTS_ADOPTION violations if eBay has found one or more item aspect name-value pairs that may be appropriate for the seller's product. In many cases, the missing or invalid item aspect(s) shown under the corresponding violationData array, will also show up under this array with suggested value(s).
 * @member {Array.<module:model/AspectRecommendations>} aspectRecommendations
 */
CorrectiveRecommendations.prototype['aspectRecommendations'] = undefined;

/**
 * @member {module:model/ProductRecommendation} productRecommendation
 */
CorrectiveRecommendations.prototype['productRecommendation'] = undefined;






export default CorrectiveRecommendations;

