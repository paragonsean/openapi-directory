# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ComplianceSummaryInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compliance_type: str=None, listing_count: int=None, marketplace_id: str=None):
        """ComplianceSummaryInfo - a model defined in OpenAPI

        :param compliance_type: The compliance_type of this ComplianceSummaryInfo.
        :param listing_count: The listing_count of this ComplianceSummaryInfo.
        :param marketplace_id: The marketplace_id of this ComplianceSummaryInfo.
        """
        self.openapi_types = {
            'compliance_type': str,
            'listing_count': int,
            'marketplace_id': str
        }

        self.attribute_map = {
            'compliance_type': 'complianceType',
            'listing_count': 'listingCount',
            'marketplace_id': 'marketplaceId'
        }

        self._compliance_type = compliance_type
        self._listing_count = listing_count
        self._marketplace_id = marketplace_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComplianceSummaryInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComplianceSummaryInfo of this ComplianceSummaryInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compliance_type(self):
        """Gets the compliance_type of this ComplianceSummaryInfo.

        This enumeration value indicates the type of compliance. See ComplianceTypeEnum for more information on each compliance type. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/compliance/types/com:ComplianceTypeEnum'>eBay API documentation</a>

        :return: The compliance_type of this ComplianceSummaryInfo.
        :rtype: str
        """
        return self._compliance_type

    @compliance_type.setter
    def compliance_type(self, compliance_type):
        """Sets the compliance_type of this ComplianceSummaryInfo.

        This enumeration value indicates the type of compliance. See ComplianceTypeEnum for more information on each compliance type. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/compliance/types/com:ComplianceTypeEnum'>eBay API documentation</a>

        :param compliance_type: The compliance_type of this ComplianceSummaryInfo.
        :type compliance_type: str
        """

        self._compliance_type = compliance_type

    @property
    def listing_count(self):
        """Gets the listing_count of this ComplianceSummaryInfo.

        This integer value indicates the number of eBay listings that are currently violating the compliance type indicated in the complianceType field, for the eBay marketplace indicated in the marketplaceId field.

        :return: The listing_count of this ComplianceSummaryInfo.
        :rtype: int
        """
        return self._listing_count

    @listing_count.setter
    def listing_count(self, listing_count):
        """Sets the listing_count of this ComplianceSummaryInfo.

        This integer value indicates the number of eBay listings that are currently violating the compliance type indicated in the complianceType field, for the eBay marketplace indicated in the marketplaceId field.

        :param listing_count: The listing_count of this ComplianceSummaryInfo.
        :type listing_count: int
        """

        self._listing_count = listing_count

    @property
    def marketplace_id(self):
        """Gets the marketplace_id of this ComplianceSummaryInfo.

        This enumeration value indicates the eBay marketplace where the listing violations exist. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/compliance/types/bas:MarketplaceIdEnum'>eBay API documentation</a>

        :return: The marketplace_id of this ComplianceSummaryInfo.
        :rtype: str
        """
        return self._marketplace_id

    @marketplace_id.setter
    def marketplace_id(self, marketplace_id):
        """Sets the marketplace_id of this ComplianceSummaryInfo.

        This enumeration value indicates the eBay marketplace where the listing violations exist. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/compliance/types/bas:MarketplaceIdEnum'>eBay API documentation</a>

        :param marketplace_id: The marketplace_id of this ComplianceSummaryInfo.
        :type marketplace_id: str
        """

        self._marketplace_id = marketplace_id
