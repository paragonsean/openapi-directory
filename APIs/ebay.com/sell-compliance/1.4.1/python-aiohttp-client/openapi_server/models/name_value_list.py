# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NameValueList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, value: str=None):
        """NameValueList - a model defined in OpenAPI

        :param name: The name of this NameValueList.
        :param value: The value of this NameValueList.
        """
        self.openapi_types = {
            'name': str,
            'value': str
        }

        self.attribute_map = {
            'name': 'name',
            'value': 'value'
        }

        self._name = name
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NameValueList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NameValueList of this NameValueList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this NameValueList.

        This is the name of the variation aspect, or the name of the category of information that is returned through the name-value pair. The type of information that appears here will vary based on the compliance type and type of violation.

        :return: The name of this NameValueList.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NameValueList.

        This is the name of the variation aspect, or the name of the category of information that is returned through the name-value pair. The type of information that appears here will vary based on the compliance type and type of violation.

        :param name: The name of this NameValueList.
        :type name: str
        """

        self._name = name

    @property
    def value(self):
        """Gets the value of this NameValueList.

        This is the value of the variation aspect (in name field), or the value of the category of information that is returned through the name-value pair. The type of information that appears here will vary based on the compliance type and type of violation.

        :return: The value of this NameValueList.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this NameValueList.

        This is the value of the variation aspect (in name field), or the value of the category of information that is returned through the name-value pair. The type of information that appears here will vary based on the compliance type and type of violation.

        :param value: The value of this NameValueList.
        :type value: str
        """

        self._value = value
