# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.name_value_list import NameValueList
from openapi_server import util


class VariationDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sku: str=None, variation_aspects: List[NameValueList]=None):
        """VariationDetails - a model defined in OpenAPI

        :param sku: The sku of this VariationDetails.
        :param variation_aspects: The variation_aspects of this VariationDetails.
        """
        self.openapi_types = {
            'sku': str,
            'variation_aspects': List[NameValueList]
        }

        self.attribute_map = {
            'sku': 'sku',
            'variation_aspects': 'variationAspects'
        }

        self._sku = sku
        self._variation_aspects = variation_aspects

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VariationDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VariationDetails of this VariationDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sku(self):
        """Gets the sku of this VariationDetails.

        The seller-defined SKU value of the variation within the multiple-variation listing with the violation{s). This field is only returned if a seller-defined SKU value is defined for the variation. SKU values are optional in listing except when creating listings using the Inventory API.

        :return: The sku of this VariationDetails.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this VariationDetails.

        The seller-defined SKU value of the variation within the multiple-variation listing with the violation{s). This field is only returned if a seller-defined SKU value is defined for the variation. SKU values are optional in listing except when creating listings using the Inventory API.

        :param sku: The sku of this VariationDetails.
        :type sku: str
        """

        self._sku = sku

    @property
    def variation_aspects(self):
        """Gets the variation_aspects of this VariationDetails.

        An array of one or more variation aspects that define a variation within a multiple-variation listing. The aspect{s) returned here define the individual variation, because these aspects will differ for each variation. Common varying aspects include color and size.

        :return: The variation_aspects of this VariationDetails.
        :rtype: List[NameValueList]
        """
        return self._variation_aspects

    @variation_aspects.setter
    def variation_aspects(self, variation_aspects):
        """Sets the variation_aspects of this VariationDetails.

        An array of one or more variation aspects that define a variation within a multiple-variation listing. The aspect{s) returned here define the individual variation, because these aspects will differ for each variation. Common varying aspects include color and size.

        :param variation_aspects: The variation_aspects of this VariationDetails.
        :type variation_aspects: List[NameValueList]
        """

        self._variation_aspects = variation_aspects
