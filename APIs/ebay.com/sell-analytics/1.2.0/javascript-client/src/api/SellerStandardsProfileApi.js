/**
 *  Seller Service Metrics API 
 * The <i>Analytics API</i> provides data and information about a seller and their eBay business.  <br><br>The resources and methods in this API let sellers review information on their listing performance, metrics on their customer service performance, and details on their eBay seller performance rating.  <br><br>The three resources in the Analytics API provide the following data and information: <ul><li><b>Customer Service Metric</b> &ndash; Returns data on a seller's customer service performance as compared to other seller's in the same peer group.</li> <li><b>Traffic Report</b> &ndash; Returns data that shows how buyers are engaging with a seller's listings.</li> <li><b>Seller Standards Profile</b> &ndash; Returns data pertaining to a seller's performance rating.</li></ul> Sellers can use the data and information returned by the various Analytics API methods to determine where they can make improvements to increase sales and how they might improve their seller status as viewed by eBay buyers.  <br><br>For details on using this API, see <a href=\"/api-docs/sell/static/performance/analyzing-performance.html\" title=\"Selling Integration Guide\">Analyzing seller performance</a>.
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FindSellerStandardsProfilesResponse from '../model/FindSellerStandardsProfilesResponse';
import StandardsProfile from '../model/StandardsProfile';

/**
* SellerStandardsProfile service.
* @module api/SellerStandardsProfileApi
* @version 1.2.0
*/
export default class SellerStandardsProfileApi {

    /**
    * Constructs a new SellerStandardsProfileApi. 
    * @alias module:api/SellerStandardsProfileApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the findSellerStandardsProfiles operation.
     * @callback module:api/SellerStandardsProfileApi~findSellerStandardsProfilesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FindSellerStandardsProfilesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This call retrieves all the standards profiles for the associated seller. A standards profile is a set of eBay seller metrics and the seller's associated compliance values (either TOP_RATED, ABOVE_STANDARD, or BELOW_STANDARD). A seller's multiple profiles are distinguished by two criteria, a &quot;program&quot; and a &quot;cycle.&quot; A profile's program is one of three regions where the seller may have done business, or PROGRAM_GLOBAL to indicate all marketplaces where the seller has done business. The cycle value specifies whether the standards compliance values were determined at the last official eBay evaluation or at the time of the request.
     * @param {module:api/SellerStandardsProfileApi~findSellerStandardsProfilesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FindSellerStandardsProfilesResponse}
     */
    findSellerStandardsProfiles(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FindSellerStandardsProfilesResponse;
      return this.apiClient.callApi(
        '/seller_standards_profile', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSellerStandardsProfile operation.
     * @callback module:api/SellerStandardsProfileApi~getSellerStandardsProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StandardsProfile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This call retrieves a single standards profile for the associated seller. A standards profile is a set of eBay seller metrics and the seller's associated compliance values (either TOP_RATED, ABOVE_STANDARD, or BELOW_STANDARD). A seller can have multiple profiles distinguished by two criteria, a &quot;program&quot; and a &quot;cycle.&quot; A profile's program is one of three regions where the seller may have done business, or PROGRAM_GLOBAL to indicate all marketplaces where the seller has done business. The cycle value specifies whether the standards compliance values were determined at the last official eBay evaluation (CURRENT) or at the time of the request (PROJECTED). Both cycle and a program values are required URI parameters for this method.
     * @param {String} cycle The period covered by the returned standards profile evaluation. Supply one of two values, CURRENT means the response reflects eBay's most recent monthly standards evaluation and PROJECTED means the response reflect the seller's projected monthly evaluation, as calculated at the time of the request.
     * @param {String} program This input value specifies the region used to determine the seller's standards profile. Supply one of the four following values, PROGRAM_DE, PROGRAM_UK, PROGRAM_US, or PROGRAM_GLOBAL.
     * @param {module:api/SellerStandardsProfileApi~getSellerStandardsProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StandardsProfile}
     */
    getSellerStandardsProfile(cycle, program, callback) {
      let postBody = null;
      // verify the required parameter 'cycle' is set
      if (cycle === undefined || cycle === null) {
        throw new Error("Missing the required parameter 'cycle' when calling getSellerStandardsProfile");
      }
      // verify the required parameter 'program' is set
      if (program === undefined || program === null) {
        throw new Error("Missing the required parameter 'program' when calling getSellerStandardsProfile");
      }

      let pathParams = {
        'cycle': cycle,
        'program': program
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = StandardsProfile;
      return this.apiClient.callApi(
        '/seller_standards_profile/{program}/{cycle}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
