/**
 *  Seller Service Metrics API 
 * The <i>Analytics API</i> provides data and information about a seller and their eBay business.  <br><br>The resources and methods in this API let sellers review information on their listing performance, metrics on their customer service performance, and details on their eBay seller performance rating.  <br><br>The three resources in the Analytics API provide the following data and information: <ul><li><b>Customer Service Metric</b> &ndash; Returns data on a seller's customer service performance as compared to other seller's in the same peer group.</li> <li><b>Traffic Report</b> &ndash; Returns data that shows how buyers are engaging with a seller's listings.</li> <li><b>Seller Standards Profile</b> &ndash; Returns data pertaining to a seller's performance rating.</li></ul> Sellers can use the data and information returned by the various Analytics API methods to determine where they can make improvements to increase sales and how they might improve their seller status as viewed by eBay buyers.  <br><br>For details on using this API, see <a href=\"/api-docs/sell/static/performance/analyzing-performance.html\" title=\"Selling Integration Guide\">Analyzing seller performance</a>.
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetCustomerServiceMetricResponse from '../model/GetCustomerServiceMetricResponse';

/**
* CustomerServiceMetric service.
* @module api/CustomerServiceMetricApi
* @version 1.2.0
*/
export default class CustomerServiceMetricApi {

    /**
    * Constructs a new CustomerServiceMetricApi. 
    * @alias module:api/CustomerServiceMetricApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCustomerServiceMetric operation.
     * @callback module:api/CustomerServiceMetricApi~getCustomerServiceMetricCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetCustomerServiceMetricResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Use this method to retrieve a seller's performance and rating for the customer service metric. Control the response from the getCustomerServiceMetric method using the following path and query parameters: customer_service_metric_type controls the type of customer service transactions evaluated for the metric rating. evaluation_type controls the period you want to review. evaluation_marketplace_id specifies the target marketplace for the evaluation. Currently, metric data is returned for only peer benchmarking. For more detail on the workings of peer benchmarking, see Service metrics policy.
     * @param {String} customerServiceMetricType Use this path parameter to specify the type of customer service metrics and benchmark data you want returned for the seller. Supported types are: ITEM_NOT_AS_DESCRIBED ITEM_NOT_RECEIVED
     * @param {String} evaluationMarketplaceId Use this query parameter to specify the Marketplace ID to evaluate for the customer service metrics and benchmark data. For the list of supported marketplaces, see Analytics API requirements and restrictions. For implementation help, refer to eBay API documentation at https://developer.ebay.com/devzone/rest/api-ref/analytics/types/MarketplaceIdEnum.html
     * @param {String} evaluationType Use this path parameter to specify the type of the seller evaluation you want returned, either: CURRENT &ndash; A monthly evaluation that occurs on the 20th of every month. PROJECTED &ndash; A daily evaluation that provides a projection of how the seller is currently performing with regards to the upcoming evaluation period.
     * @param {module:api/CustomerServiceMetricApi~getCustomerServiceMetricCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetCustomerServiceMetricResponse}
     */
    getCustomerServiceMetric(customerServiceMetricType, evaluationMarketplaceId, evaluationType, callback) {
      let postBody = null;
      // verify the required parameter 'customerServiceMetricType' is set
      if (customerServiceMetricType === undefined || customerServiceMetricType === null) {
        throw new Error("Missing the required parameter 'customerServiceMetricType' when calling getCustomerServiceMetric");
      }
      // verify the required parameter 'evaluationMarketplaceId' is set
      if (evaluationMarketplaceId === undefined || evaluationMarketplaceId === null) {
        throw new Error("Missing the required parameter 'evaluationMarketplaceId' when calling getCustomerServiceMetric");
      }
      // verify the required parameter 'evaluationType' is set
      if (evaluationType === undefined || evaluationType === null) {
        throw new Error("Missing the required parameter 'evaluationType' when calling getCustomerServiceMetric");
      }

      let pathParams = {
        'customer_service_metric_type': customerServiceMetricType,
        'evaluation_type': evaluationType
      };
      let queryParams = {
        'evaluation_marketplace_id': evaluationMarketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetCustomerServiceMetricResponse;
      return this.apiClient.callApi(
        '/customer_service_metric/{customer_service_metric_type}/{evaluation_type}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
