/**
 *  Seller Service Metrics API 
 * The <i>Analytics API</i> provides data and information about a seller and their eBay business.  <br><br>The resources and methods in this API let sellers review information on their listing performance, metrics on their customer service performance, and details on their eBay seller performance rating.  <br><br>The three resources in the Analytics API provide the following data and information: <ul><li><b>Customer Service Metric</b> &ndash; Returns data on a seller's customer service performance as compared to other seller's in the same peer group.</li> <li><b>Traffic Report</b> &ndash; Returns data that shows how buyers are engaging with a seller's listings.</li> <li><b>Seller Standards Profile</b> &ndash; Returns data pertaining to a seller's performance rating.</li></ul> Sellers can use the data and information returned by the various Analytics API methods to determine where they can make improvements to increase sales and how they might improve their seller status as viewed by eBay buyers.  <br><br>For details on using this API, see <a href=\"/api-docs/sell/static/performance/analyzing-performance.html\" title=\"Selling Integration Guide\">Analyzing seller performance</a>.
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BenchmarkMetadata from './model/BenchmarkMetadata';
import Cycle from './model/Cycle';
import Definition from './model/Definition';
import Dimension from './model/Dimension';
import DimensionMetric from './model/DimensionMetric';
import Distribution from './model/Distribution';
import Error from './model/Error';
import ErrorParameter from './model/ErrorParameter';
import EvaluationCycle from './model/EvaluationCycle';
import FindSellerStandardsProfilesResponse from './model/FindSellerStandardsProfilesResponse';
import GetCustomerServiceMetricResponse from './model/GetCustomerServiceMetricResponse';
import Header from './model/Header';
import Metadata from './model/Metadata';
import MetadataHeader from './model/MetadataHeader';
import MetadataRecord from './model/MetadataRecord';
import Metric from './model/Metric';
import MetricBenchmark from './model/MetricBenchmark';
import MetricDistribution from './model/MetricDistribution';
import Record from './model/Record';
import Report from './model/Report';
import StandardsProfile from './model/StandardsProfile';
import Value from './model/Value';
import CustomerServiceMetricApi from './api/CustomerServiceMetricApi';
import SellerStandardsProfileApi from './api/SellerStandardsProfileApi';
import TrafficReportApi from './api/TrafficReportApi';


/**
* The &lt;i&gt;Analytics API&lt;/i&gt; provides data and information about a seller and their eBay business.  &lt;br&gt;&lt;br&gt;The resources and methods in this API let sellers review information on their listing performance, metrics on their customer service performance, and details on their eBay seller performance rating.  &lt;br&gt;&lt;br&gt;The three resources in the Analytics API provide the following data and information: &lt;ul&gt;&lt;li&gt;&lt;b&gt;Customer Service Metric&lt;/b&gt; &amp;ndash; Returns data on a seller&#39;s customer service performance as compared to other seller&#39;s in the same peer group.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Traffic Report&lt;/b&gt; &amp;ndash; Returns data that shows how buyers are engaging with a seller&#39;s listings.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Seller Standards Profile&lt;/b&gt; &amp;ndash; Returns data pertaining to a seller&#39;s performance rating.&lt;/li&gt;&lt;/ul&gt; Sellers can use the data and information returned by the various Analytics API methods to determine where they can make improvements to increase sales and how they might improve their seller status as viewed by eBay buyers.  &lt;br&gt;&lt;br&gt;For details on using this API, see &lt;a href&#x3D;\&quot;/api-docs/sell/static/performance/analyzing-performance.html\&quot; title&#x3D;\&quot;Selling Integration Guide\&quot;&gt;Analyzing seller performance&lt;/a&gt;..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SellerServiceMetricsApi = require('index'); // See note below*.
* var xxxSvc = new SellerServiceMetricsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SellerServiceMetricsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SellerServiceMetricsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SellerServiceMetricsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.2.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BenchmarkMetadata model constructor.
     * @property {module:model/BenchmarkMetadata}
     */
    BenchmarkMetadata,

    /**
     * The Cycle model constructor.
     * @property {module:model/Cycle}
     */
    Cycle,

    /**
     * The Definition model constructor.
     * @property {module:model/Definition}
     */
    Definition,

    /**
     * The Dimension model constructor.
     * @property {module:model/Dimension}
     */
    Dimension,

    /**
     * The DimensionMetric model constructor.
     * @property {module:model/DimensionMetric}
     */
    DimensionMetric,

    /**
     * The Distribution model constructor.
     * @property {module:model/Distribution}
     */
    Distribution,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorParameter model constructor.
     * @property {module:model/ErrorParameter}
     */
    ErrorParameter,

    /**
     * The EvaluationCycle model constructor.
     * @property {module:model/EvaluationCycle}
     */
    EvaluationCycle,

    /**
     * The FindSellerStandardsProfilesResponse model constructor.
     * @property {module:model/FindSellerStandardsProfilesResponse}
     */
    FindSellerStandardsProfilesResponse,

    /**
     * The GetCustomerServiceMetricResponse model constructor.
     * @property {module:model/GetCustomerServiceMetricResponse}
     */
    GetCustomerServiceMetricResponse,

    /**
     * The Header model constructor.
     * @property {module:model/Header}
     */
    Header,

    /**
     * The Metadata model constructor.
     * @property {module:model/Metadata}
     */
    Metadata,

    /**
     * The MetadataHeader model constructor.
     * @property {module:model/MetadataHeader}
     */
    MetadataHeader,

    /**
     * The MetadataRecord model constructor.
     * @property {module:model/MetadataRecord}
     */
    MetadataRecord,

    /**
     * The Metric model constructor.
     * @property {module:model/Metric}
     */
    Metric,

    /**
     * The MetricBenchmark model constructor.
     * @property {module:model/MetricBenchmark}
     */
    MetricBenchmark,

    /**
     * The MetricDistribution model constructor.
     * @property {module:model/MetricDistribution}
     */
    MetricDistribution,

    /**
     * The Record model constructor.
     * @property {module:model/Record}
     */
    Record,

    /**
     * The Report model constructor.
     * @property {module:model/Report}
     */
    Report,

    /**
     * The StandardsProfile model constructor.
     * @property {module:model/StandardsProfile}
     */
    StandardsProfile,

    /**
     * The Value model constructor.
     * @property {module:model/Value}
     */
    Value,

    /**
    * The CustomerServiceMetricApi service constructor.
    * @property {module:api/CustomerServiceMetricApi}
    */
    CustomerServiceMetricApi,

    /**
    * The SellerStandardsProfileApi service constructor.
    * @property {module:api/SellerStandardsProfileApi}
    */
    SellerStandardsProfileApi,

    /**
    * The TrafficReportApi service constructor.
    * @property {module:api/TrafficReportApi}
    */
    TrafficReportApi
};
