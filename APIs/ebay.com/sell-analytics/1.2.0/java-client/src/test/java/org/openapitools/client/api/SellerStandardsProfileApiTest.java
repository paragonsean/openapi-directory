/*
 *  Seller Service Metrics API 
 * The <i>Analytics API</i> provides data and information about a seller and their eBay business.  <br><br>The resources and methods in this API let sellers review information on their listing performance, metrics on their customer service performance, and details on their eBay seller performance rating.  <br><br>The three resources in the Analytics API provide the following data and information: <ul><li><b>Customer Service Metric</b> &ndash; Returns data on a seller's customer service performance as compared to other seller's in the same peer group.</li> <li><b>Traffic Report</b> &ndash; Returns data that shows how buyers are engaging with a seller's listings.</li> <li><b>Seller Standards Profile</b> &ndash; Returns data pertaining to a seller's performance rating.</li></ul> Sellers can use the data and information returned by the various Analytics API methods to determine where they can make improvements to increase sales and how they might improve their seller status as viewed by eBay buyers.  <br><br>For details on using this API, see <a href=\"/api-docs/sell/static/performance/analyzing-performance.html\" title=\"Selling Integration Guide\">Analyzing seller performance</a>.
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.FindSellerStandardsProfilesResponse;
import org.openapitools.client.model.StandardsProfile;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SellerStandardsProfileApi
 */
@Disabled
public class SellerStandardsProfileApiTest {

    private final SellerStandardsProfileApi api = new SellerStandardsProfileApi();

    /**
     * This call retrieves all the standards profiles for the associated seller. A standards profile is a set of eBay seller metrics and the seller&#39;s associated compliance values (either TOP_RATED, ABOVE_STANDARD, or BELOW_STANDARD). A seller&#39;s multiple profiles are distinguished by two criteria, a &amp;quot;program&amp;quot; and a &amp;quot;cycle.&amp;quot; A profile&#39;s program is one of three regions where the seller may have done business, or PROGRAM_GLOBAL to indicate all marketplaces where the seller has done business. The cycle value specifies whether the standards compliance values were determined at the last official eBay evaluation or at the time of the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findSellerStandardsProfilesTest() throws ApiException {
        FindSellerStandardsProfilesResponse response = api.findSellerStandardsProfiles();
        // TODO: test validations
    }

    /**
     * This call retrieves a single standards profile for the associated seller. A standards profile is a set of eBay seller metrics and the seller&#39;s associated compliance values (either TOP_RATED, ABOVE_STANDARD, or BELOW_STANDARD). A seller can have multiple profiles distinguished by two criteria, a &amp;quot;program&amp;quot; and a &amp;quot;cycle.&amp;quot; A profile&#39;s program is one of three regions where the seller may have done business, or PROGRAM_GLOBAL to indicate all marketplaces where the seller has done business. The cycle value specifies whether the standards compliance values were determined at the last official eBay evaluation (CURRENT) or at the time of the request (PROJECTED). Both cycle and a program values are required URI parameters for this method.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSellerStandardsProfileTest() throws ApiException {
        String cycle = null;
        String program = null;
        StandardsProfile response = api.getSellerStandardsProfile(cycle, program);
        // TODO: test validations
    }

}
