/**
 *  Seller Service Metrics API 
 * The <i>Analytics API</i> provides data and information about a seller and their eBay business.  <br><br>The resources and methods in this API let sellers review information on their listing performance, metrics on their customer service performance, and details on their eBay seller performance rating.  <br><br>The three resources in the Analytics API provide the following data and information: <ul><li><b>Customer Service Metric</b> &ndash; Returns data on a seller's customer service performance as compared to other seller's in the same peer group.</li> <li><b>Traffic Report</b> &ndash; Returns data that shows how buyers are engaging with a seller's listings.</li> <li><b>Seller Standards Profile</b> &ndash; Returns data pertaining to a seller's performance rating.</li></ul> Sellers can use the data and information returned by the various Analytics API methods to determine where they can make improvements to increase sales and how they might improve their seller status as viewed by eBay buyers.  <br><br>For details on using this API, see <a href=\"/api-docs/sell/static/performance/analyzing-performance.html\" title=\"Selling Integration Guide\">Analyzing seller performance</a>.
 *
 * The version of the OpenAPI document: 1.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICycle.h
 *
 * A complex type that describes a program cycle.
 */

#ifndef OAICycle_H
#define OAICycle_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICycle : public OAIObject {
public:
    OAICycle();
    OAICycle(QString json);
    ~OAICycle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCycleType() const;
    void setCycleType(const QString &cycle_type);
    bool is_cycle_type_Set() const;
    bool is_cycle_type_Valid() const;

    QString getEvaluationDate() const;
    void setEvaluationDate(const QString &evaluation_date);
    bool is_evaluation_date_Set() const;
    bool is_evaluation_date_Valid() const;

    QString getEvaluationMonth() const;
    void setEvaluationMonth(const QString &evaluation_month);
    bool is_evaluation_month_Set() const;
    bool is_evaluation_month_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cycle_type;
    bool m_cycle_type_isSet;
    bool m_cycle_type_isValid;

    QString m_evaluation_date;
    bool m_evaluation_date_isSet;
    bool m_evaluation_date_isValid;

    QString m_evaluation_month;
    bool m_evaluation_month_isSet;
    bool m_evaluation_month_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICycle)

#endif // OAICycle_H
