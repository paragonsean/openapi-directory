/**
 *  Seller Service Metrics API 
 * The <i>Analytics API</i> provides data and information about a seller and their eBay business.  <br><br>The resources and methods in this API let sellers review information on their listing performance, metrics on their customer service performance, and details on their eBay seller performance rating.  <br><br>The three resources in the Analytics API provide the following data and information: <ul><li><b>Customer Service Metric</b> &ndash; Returns data on a seller's customer service performance as compared to other seller's in the same peer group.</li> <li><b>Traffic Report</b> &ndash; Returns data that shows how buyers are engaging with a seller's listings.</li> <li><b>Seller Standards Profile</b> &ndash; Returns data pertaining to a seller's performance rating.</li></ul> Sellers can use the data and information returned by the various Analytics API methods to determine where they can make improvements to increase sales and how they might improve their seller status as viewed by eBay buyers.  <br><br>For details on using this API, see <a href=\"/api-docs/sell/static/performance/analyzing-performance.html\" title=\"Selling Integration Guide\">Analyzing seller performance</a>.
 *
 * The version of the OpenAPI document: 1.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetCustomerServiceMetricResponse.h
 *
 * This complex data type defines the response data that is returned from a request to getCustomerServiceMetric. The dimensionMetrics object contains the details of the dimension being measured and the calculated customer service metric values. The evaluationCycle defines the period used to calculate the metric values. The marketplaceId is the eBay marketplace for which the metrics are being considered.
 */

#ifndef OAIGetCustomerServiceMetricResponse_H
#define OAIGetCustomerServiceMetricResponse_H

#include <QJsonObject>

#include "OAIDimensionMetric.h"
#include "OAIEvaluationCycle.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDimensionMetric;
class OAIEvaluationCycle;

class OAIGetCustomerServiceMetricResponse : public OAIObject {
public:
    OAIGetCustomerServiceMetricResponse();
    OAIGetCustomerServiceMetricResponse(QString json);
    ~OAIGetCustomerServiceMetricResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDimensionMetric> getDimensionMetrics() const;
    void setDimensionMetrics(const QList<OAIDimensionMetric> &dimension_metrics);
    bool is_dimension_metrics_Set() const;
    bool is_dimension_metrics_Valid() const;

    OAIEvaluationCycle getEvaluationCycle() const;
    void setEvaluationCycle(const OAIEvaluationCycle &evaluation_cycle);
    bool is_evaluation_cycle_Set() const;
    bool is_evaluation_cycle_Valid() const;

    QString getMarketplaceId() const;
    void setMarketplaceId(const QString &marketplace_id);
    bool is_marketplace_id_Set() const;
    bool is_marketplace_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDimensionMetric> m_dimension_metrics;
    bool m_dimension_metrics_isSet;
    bool m_dimension_metrics_isValid;

    OAIEvaluationCycle m_evaluation_cycle;
    bool m_evaluation_cycle_isSet;
    bool m_evaluation_cycle_isValid;

    QString m_marketplace_id;
    bool m_marketplace_id_isSet;
    bool m_marketplace_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetCustomerServiceMetricResponse)

#endif // OAIGetCustomerServiceMetricResponse_H
