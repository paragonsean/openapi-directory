# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.value import Value
from openapi_server import util


class MetadataRecord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metadata_values: List[Value]=None, value: Value=None):
        """MetadataRecord - a model defined in OpenAPI

        :param metadata_values: The metadata_values of this MetadataRecord.
        :param value: The value of this MetadataRecord.
        """
        self.openapi_types = {
            'metadata_values': List[Value],
            'value': Value
        }

        self.attribute_map = {
            'metadata_values': 'metadataValues',
            'value': 'value'
        }

        self._metadata_values = metadata_values
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetadataRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetadataRecord of this MetadataRecord.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metadata_values(self):
        """Gets the metadata_values of this MetadataRecord.

        A list of data in a row returned in the traffic report. The data in each of the cells match the labels in headers of the report.

        :return: The metadata_values of this MetadataRecord.
        :rtype: List[Value]
        """
        return self._metadata_values

    @metadata_values.setter
    def metadata_values(self, metadata_values):
        """Sets the metadata_values of this MetadataRecord.

        A list of data in a row returned in the traffic report. The data in each of the cells match the labels in headers of the report.

        :param metadata_values: The metadata_values of this MetadataRecord.
        :type metadata_values: List[Value]
        """

        self._metadata_values = metadata_values

    @property
    def value(self):
        """Gets the value of this MetadataRecord.


        :return: The value of this MetadataRecord.
        :rtype: Value
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this MetadataRecord.


        :param value: The value of this MetadataRecord.
        :type value: Value
        """

        self._value = value
