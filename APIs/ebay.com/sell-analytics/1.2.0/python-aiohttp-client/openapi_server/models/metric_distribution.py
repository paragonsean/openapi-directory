# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.distribution import Distribution
from openapi_server import util


class MetricDistribution(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, basis: str=None, data: List[Distribution]=None):
        """MetricDistribution - a model defined in OpenAPI

        :param basis: The basis of this MetricDistribution.
        :param data: The data of this MetricDistribution.
        """
        self.openapi_types = {
            'basis': str,
            'data': List[Distribution]
        }

        self.attribute_map = {
            'basis': 'basis',
            'data': 'data'
        }

        self._basis = basis
        self._data = data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetricDistribution':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetricDistribution of this MetricDistribution.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def basis(self):
        """Gets the basis of this MetricDistribution.

        This field returns the basis, or the method, by which the metric rating is calculated.

        :return: The basis of this MetricDistribution.
        :rtype: str
        """
        return self._basis

    @basis.setter
    def basis(self, basis):
        """Sets the basis of this MetricDistribution.

        This field returns the basis, or the method, by which the metric rating is calculated.

        :param basis: The basis of this MetricDistribution.
        :type basis: str
        """

        self._basis = basis

    @property
    def data(self):
        """Gets the data of this MetricDistribution.

        This field returns a list of name/value pairs, where the name indicates the distribution being rated and the value indicates the count of seller transactions that meet the distribution criteria.

        :return: The data of this MetricDistribution.
        :rtype: List[Distribution]
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this MetricDistribution.

        This field returns a list of name/value pairs, where the name indicates the distribution being rated and the value indicates the count of seller transactions that meet the distribution criteria.

        :param data: The data of this MetricDistribution.
        :type data: List[Distribution]
        """

        self._data = data
