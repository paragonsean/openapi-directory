# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Value(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, applicable: bool=None, value: object=None):
        """Value - a model defined in OpenAPI

        :param applicable: The applicable of this Value.
        :param value: The value of this Value.
        """
        self.openapi_types = {
            'applicable': bool,
            'value': object
        }

        self.attribute_map = {
            'applicable': 'applicable',
            'value': 'value'
        }

        self._applicable = applicable
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Value':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Value of this Value.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def applicable(self):
        """Gets the applicable of this Value.

        If set to true, this flag indicates the value in the value field is valid as computed. A value of false indicates one or more of the values used to calculate the value was invalid. The occurrence of this is a rare, however consider this case: suppose a buyer navigates to a View Item page at 11:59 pm (the end of the day) and purchases the item at 12:05am the next day. In this case, the item would have been purchased with 0 views for the day.

        :return: The applicable of this Value.
        :rtype: bool
        """
        return self._applicable

    @applicable.setter
    def applicable(self, applicable):
        """Sets the applicable of this Value.

        If set to true, this flag indicates the value in the value field is valid as computed. A value of false indicates one or more of the values used to calculate the value was invalid. The occurrence of this is a rare, however consider this case: suppose a buyer navigates to a View Item page at 11:59 pm (the end of the day) and purchases the item at 12:05am the next day. In this case, the item would have been purchased with 0 views for the day.

        :param applicable: The applicable of this Value.
        :type applicable: bool
        """

        self._applicable = applicable

    @property
    def value(self):
        """Gets the value of this Value.

        The value of the report data.

        :return: The value of this Value.
        :rtype: object
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Value.

        The value of the report data.

        :param value: The value of this Value.
        :type value: object
        """

        self._value = value
