# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server import util


class ShippingOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, shipping_cost: Amount=None, shipping_cost_type: str=None):
        """ShippingOption - a model defined in OpenAPI

        :param shipping_cost: The shipping_cost of this ShippingOption.
        :param shipping_cost_type: The shipping_cost_type of this ShippingOption.
        """
        self.openapi_types = {
            'shipping_cost': Amount,
            'shipping_cost_type': str
        }

        self.attribute_map = {
            'shipping_cost': 'shippingCost',
            'shipping_cost_type': 'shippingCostType'
        }

        self._shipping_cost = shipping_cost
        self._shipping_cost_type = shipping_cost_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShippingOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShippingOption of this ShippingOption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def shipping_cost(self):
        """Gets the shipping_cost of this ShippingOption.


        :return: The shipping_cost of this ShippingOption.
        :rtype: Amount
        """
        return self._shipping_cost

    @shipping_cost.setter
    def shipping_cost(self, shipping_cost):
        """Sets the shipping_cost of this ShippingOption.


        :param shipping_cost: The shipping_cost of this ShippingOption.
        :type shipping_cost: Amount
        """

        self._shipping_cost = shipping_cost

    @property
    def shipping_cost_type(self):
        """Gets the shipping_cost_type of this ShippingOption.

        The class of the shipping cost. Valid Values: FIXED or CALCULATED Code so that your app gracefully handles any future changes to this list.

        :return: The shipping_cost_type of this ShippingOption.
        :rtype: str
        """
        return self._shipping_cost_type

    @shipping_cost_type.setter
    def shipping_cost_type(self, shipping_cost_type):
        """Sets the shipping_cost_type of this ShippingOption.

        The class of the shipping cost. Valid Values: FIXED or CALCULATED Code so that your app gracefully handles any future changes to this list.

        :param shipping_cost_type: The shipping_cost_type of this ShippingOption.
        :type shipping_cost_type: str
        """

        self._shipping_cost_type = shipping_cost_type
