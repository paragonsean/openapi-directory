# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Terms(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, full_text: str=None, summary: str=None):
        """Terms - a model defined in OpenAPI

        :param full_text: The full_text of this Terms.
        :param summary: The summary of this Terms.
        """
        self.openapi_types = {
            'full_text': str,
            'summary': str
        }

        self.attribute_map = {
            'full_text': 'fullText',
            'summary': 'summary'
        }

        self._full_text = full_text
        self._summary = summary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Terms':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Terms of this Terms.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def full_text(self):
        """Gets the full_text of this Terms.

        A full-text description of the terms.

        :return: The full_text of this Terms.
        :rtype: str
        """
        return self._full_text

    @full_text.setter
    def full_text(self, full_text):
        """Sets the full_text of this Terms.

        A full-text description of the terms.

        :param full_text: The full_text of this Terms.
        :type full_text: str
        """

        self._full_text = full_text

    @property
    def summary(self):
        """Gets the summary of this Terms.

        A summarized description of the terms.

        :return: The summary of this Terms.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this Terms.

        A summarized description of the terms.

        :param summary: The summary of this Terms.
        :type summary: str
        """

        self._summary = summary
