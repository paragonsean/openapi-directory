# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server import util


class MarketingPrice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, discount_amount: Amount=None, discount_percentage: str=None, original_price: Amount=None, price_treatment: str=None):
        """MarketingPrice - a model defined in OpenAPI

        :param discount_amount: The discount_amount of this MarketingPrice.
        :param discount_percentage: The discount_percentage of this MarketingPrice.
        :param original_price: The original_price of this MarketingPrice.
        :param price_treatment: The price_treatment of this MarketingPrice.
        """
        self.openapi_types = {
            'discount_amount': Amount,
            'discount_percentage': str,
            'original_price': Amount,
            'price_treatment': str
        }

        self.attribute_map = {
            'discount_amount': 'discountAmount',
            'discount_percentage': 'discountPercentage',
            'original_price': 'originalPrice',
            'price_treatment': 'priceTreatment'
        }

        self._discount_amount = discount_amount
        self._discount_percentage = discount_percentage
        self._original_price = original_price
        self._price_treatment = price_treatment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MarketingPrice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MarketingPrice of this MarketingPrice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def discount_amount(self):
        """Gets the discount_amount of this MarketingPrice.


        :return: The discount_amount of this MarketingPrice.
        :rtype: Amount
        """
        return self._discount_amount

    @discount_amount.setter
    def discount_amount(self, discount_amount):
        """Sets the discount_amount of this MarketingPrice.


        :param discount_amount: The discount_amount of this MarketingPrice.
        :type discount_amount: Amount
        """

        self._discount_amount = discount_amount

    @property
    def discount_percentage(self):
        """Gets the discount_percentage of this MarketingPrice.

        The percentage of the seller discount based on the value returned in the originalPrice field.

        :return: The discount_percentage of this MarketingPrice.
        :rtype: str
        """
        return self._discount_percentage

    @discount_percentage.setter
    def discount_percentage(self, discount_percentage):
        """Sets the discount_percentage of this MarketingPrice.

        The percentage of the seller discount based on the value returned in the originalPrice field.

        :param discount_percentage: The discount_percentage of this MarketingPrice.
        :type discount_percentage: str
        """

        self._discount_percentage = discount_percentage

    @property
    def original_price(self):
        """Gets the original_price of this MarketingPrice.


        :return: The original_price of this MarketingPrice.
        :rtype: Amount
        """
        return self._original_price

    @original_price.setter
    def original_price(self, original_price):
        """Sets the original_price of this MarketingPrice.


        :param original_price: The original_price of this MarketingPrice.
        :type original_price: Amount
        """

        self._original_price = original_price

    @property
    def price_treatment(self):
        """Gets the price_treatment of this MarketingPrice.

        The pricing treatment (discount) that was applied to the price of the item. Note: The pricing treatment affects how and where the discounted price can be displayed. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/deal/types/api:PriceTreatmentEnum'>eBay API documentation</a>

        :return: The price_treatment of this MarketingPrice.
        :rtype: str
        """
        return self._price_treatment

    @price_treatment.setter
    def price_treatment(self, price_treatment):
        """Sets the price_treatment of this MarketingPrice.

        The pricing treatment (discount) that was applied to the price of the item. Note: The pricing treatment affects how and where the discounted price can be displayed. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/deal/types/api:PriceTreatmentEnum'>eBay API documentation</a>

        :param price_treatment: The price_treatment of this MarketingPrice.
        :type price_treatment: str
        """

        self._price_treatment = price_treatment
