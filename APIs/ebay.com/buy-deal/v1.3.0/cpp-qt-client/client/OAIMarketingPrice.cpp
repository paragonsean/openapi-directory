/**
 * Deal API
 * <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited\" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units.</span><br /><br />This API allows third-party developers to search for and retrieve details about eBay deals and events, as well as the items associated with those deals and events.
 *
 * The version of the OpenAPI document: v1.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMarketingPrice.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMarketingPrice::OAIMarketingPrice(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMarketingPrice::OAIMarketingPrice() {
    this->initializeModel();
}

OAIMarketingPrice::~OAIMarketingPrice() {}

void OAIMarketingPrice::initializeModel() {

    m_discount_amount_isSet = false;
    m_discount_amount_isValid = false;

    m_discount_percentage_isSet = false;
    m_discount_percentage_isValid = false;

    m_original_price_isSet = false;
    m_original_price_isValid = false;

    m_price_treatment_isSet = false;
    m_price_treatment_isValid = false;
}

void OAIMarketingPrice::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMarketingPrice::fromJsonObject(QJsonObject json) {

    m_discount_amount_isValid = ::OpenAPI::fromJsonValue(m_discount_amount, json[QString("discountAmount")]);
    m_discount_amount_isSet = !json[QString("discountAmount")].isNull() && m_discount_amount_isValid;

    m_discount_percentage_isValid = ::OpenAPI::fromJsonValue(m_discount_percentage, json[QString("discountPercentage")]);
    m_discount_percentage_isSet = !json[QString("discountPercentage")].isNull() && m_discount_percentage_isValid;

    m_original_price_isValid = ::OpenAPI::fromJsonValue(m_original_price, json[QString("originalPrice")]);
    m_original_price_isSet = !json[QString("originalPrice")].isNull() && m_original_price_isValid;

    m_price_treatment_isValid = ::OpenAPI::fromJsonValue(m_price_treatment, json[QString("priceTreatment")]);
    m_price_treatment_isSet = !json[QString("priceTreatment")].isNull() && m_price_treatment_isValid;
}

QString OAIMarketingPrice::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMarketingPrice::asJsonObject() const {
    QJsonObject obj;
    if (m_discount_amount.isSet()) {
        obj.insert(QString("discountAmount"), ::OpenAPI::toJsonValue(m_discount_amount));
    }
    if (m_discount_percentage_isSet) {
        obj.insert(QString("discountPercentage"), ::OpenAPI::toJsonValue(m_discount_percentage));
    }
    if (m_original_price.isSet()) {
        obj.insert(QString("originalPrice"), ::OpenAPI::toJsonValue(m_original_price));
    }
    if (m_price_treatment_isSet) {
        obj.insert(QString("priceTreatment"), ::OpenAPI::toJsonValue(m_price_treatment));
    }
    return obj;
}

OAIAmount OAIMarketingPrice::getDiscountAmount() const {
    return m_discount_amount;
}
void OAIMarketingPrice::setDiscountAmount(const OAIAmount &discount_amount) {
    m_discount_amount = discount_amount;
    m_discount_amount_isSet = true;
}

bool OAIMarketingPrice::is_discount_amount_Set() const{
    return m_discount_amount_isSet;
}

bool OAIMarketingPrice::is_discount_amount_Valid() const{
    return m_discount_amount_isValid;
}

QString OAIMarketingPrice::getDiscountPercentage() const {
    return m_discount_percentage;
}
void OAIMarketingPrice::setDiscountPercentage(const QString &discount_percentage) {
    m_discount_percentage = discount_percentage;
    m_discount_percentage_isSet = true;
}

bool OAIMarketingPrice::is_discount_percentage_Set() const{
    return m_discount_percentage_isSet;
}

bool OAIMarketingPrice::is_discount_percentage_Valid() const{
    return m_discount_percentage_isValid;
}

OAIAmount OAIMarketingPrice::getOriginalPrice() const {
    return m_original_price;
}
void OAIMarketingPrice::setOriginalPrice(const OAIAmount &original_price) {
    m_original_price = original_price;
    m_original_price_isSet = true;
}

bool OAIMarketingPrice::is_original_price_Set() const{
    return m_original_price_isSet;
}

bool OAIMarketingPrice::is_original_price_Valid() const{
    return m_original_price_isValid;
}

QString OAIMarketingPrice::getPriceTreatment() const {
    return m_price_treatment;
}
void OAIMarketingPrice::setPriceTreatment(const QString &price_treatment) {
    m_price_treatment = price_treatment;
    m_price_treatment_isSet = true;
}

bool OAIMarketingPrice::is_price_treatment_Set() const{
    return m_price_treatment_isSet;
}

bool OAIMarketingPrice::is_price_treatment_Valid() const{
    return m_price_treatment_isValid;
}

bool OAIMarketingPrice::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_discount_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_original_price.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_treatment_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMarketingPrice::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
