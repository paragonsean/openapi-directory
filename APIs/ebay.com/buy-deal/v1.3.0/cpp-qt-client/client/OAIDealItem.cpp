/**
 * Deal API
 * <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited\" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units.</span><br /><br />This API allows third-party developers to search for and retrieve details about eBay deals and events, as well as the items associated with those deals and events.
 *
 * The version of the OpenAPI document: v1.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDealItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDealItem::OAIDealItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDealItem::OAIDealItem() {
    this->initializeModel();
}

OAIDealItem::~OAIDealItem() {}

void OAIDealItem::initializeModel() {

    m_additional_images_isSet = false;
    m_additional_images_isValid = false;

    m_category_ancestor_ids_isSet = false;
    m_category_ancestor_ids_isValid = false;

    m_category_id_isSet = false;
    m_category_id_isValid = false;

    m_commissionable_isSet = false;
    m_commissionable_isValid = false;

    m_deal_affiliate_web_url_isSet = false;
    m_deal_affiliate_web_url_isValid = false;

    m_deal_end_date_isSet = false;
    m_deal_end_date_isValid = false;

    m_deal_start_date_isSet = false;
    m_deal_start_date_isValid = false;

    m_deal_web_url_isSet = false;
    m_deal_web_url_isValid = false;

    m_energy_efficiency_class_isSet = false;
    m_energy_efficiency_class_isValid = false;

    m_image_isSet = false;
    m_image_isValid = false;

    m_item_affiliate_web_url_isSet = false;
    m_item_affiliate_web_url_isValid = false;

    m_item_group_id_isSet = false;
    m_item_group_id_isValid = false;

    m_item_group_type_isSet = false;
    m_item_group_type_isValid = false;

    m_item_id_isSet = false;
    m_item_id_isValid = false;

    m_item_web_url_isSet = false;
    m_item_web_url_isValid = false;

    m_legacy_item_id_isSet = false;
    m_legacy_item_id_isValid = false;

    m_marketing_price_isSet = false;
    m_marketing_price_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_qualified_programs_isSet = false;
    m_qualified_programs_isValid = false;

    m_shipping_options_isSet = false;
    m_shipping_options_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_unit_price_isSet = false;
    m_unit_price_isValid = false;

    m_unit_pricing_measure_isSet = false;
    m_unit_pricing_measure_isValid = false;
}

void OAIDealItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDealItem::fromJsonObject(QJsonObject json) {

    m_additional_images_isValid = ::OpenAPI::fromJsonValue(m_additional_images, json[QString("additionalImages")]);
    m_additional_images_isSet = !json[QString("additionalImages")].isNull() && m_additional_images_isValid;

    m_category_ancestor_ids_isValid = ::OpenAPI::fromJsonValue(m_category_ancestor_ids, json[QString("categoryAncestorIds")]);
    m_category_ancestor_ids_isSet = !json[QString("categoryAncestorIds")].isNull() && m_category_ancestor_ids_isValid;

    m_category_id_isValid = ::OpenAPI::fromJsonValue(m_category_id, json[QString("categoryId")]);
    m_category_id_isSet = !json[QString("categoryId")].isNull() && m_category_id_isValid;

    m_commissionable_isValid = ::OpenAPI::fromJsonValue(m_commissionable, json[QString("commissionable")]);
    m_commissionable_isSet = !json[QString("commissionable")].isNull() && m_commissionable_isValid;

    m_deal_affiliate_web_url_isValid = ::OpenAPI::fromJsonValue(m_deal_affiliate_web_url, json[QString("dealAffiliateWebUrl")]);
    m_deal_affiliate_web_url_isSet = !json[QString("dealAffiliateWebUrl")].isNull() && m_deal_affiliate_web_url_isValid;

    m_deal_end_date_isValid = ::OpenAPI::fromJsonValue(m_deal_end_date, json[QString("dealEndDate")]);
    m_deal_end_date_isSet = !json[QString("dealEndDate")].isNull() && m_deal_end_date_isValid;

    m_deal_start_date_isValid = ::OpenAPI::fromJsonValue(m_deal_start_date, json[QString("dealStartDate")]);
    m_deal_start_date_isSet = !json[QString("dealStartDate")].isNull() && m_deal_start_date_isValid;

    m_deal_web_url_isValid = ::OpenAPI::fromJsonValue(m_deal_web_url, json[QString("dealWebUrl")]);
    m_deal_web_url_isSet = !json[QString("dealWebUrl")].isNull() && m_deal_web_url_isValid;

    m_energy_efficiency_class_isValid = ::OpenAPI::fromJsonValue(m_energy_efficiency_class, json[QString("energyEfficiencyClass")]);
    m_energy_efficiency_class_isSet = !json[QString("energyEfficiencyClass")].isNull() && m_energy_efficiency_class_isValid;

    m_image_isValid = ::OpenAPI::fromJsonValue(m_image, json[QString("image")]);
    m_image_isSet = !json[QString("image")].isNull() && m_image_isValid;

    m_item_affiliate_web_url_isValid = ::OpenAPI::fromJsonValue(m_item_affiliate_web_url, json[QString("itemAffiliateWebUrl")]);
    m_item_affiliate_web_url_isSet = !json[QString("itemAffiliateWebUrl")].isNull() && m_item_affiliate_web_url_isValid;

    m_item_group_id_isValid = ::OpenAPI::fromJsonValue(m_item_group_id, json[QString("itemGroupId")]);
    m_item_group_id_isSet = !json[QString("itemGroupId")].isNull() && m_item_group_id_isValid;

    m_item_group_type_isValid = ::OpenAPI::fromJsonValue(m_item_group_type, json[QString("itemGroupType")]);
    m_item_group_type_isSet = !json[QString("itemGroupType")].isNull() && m_item_group_type_isValid;

    m_item_id_isValid = ::OpenAPI::fromJsonValue(m_item_id, json[QString("itemId")]);
    m_item_id_isSet = !json[QString("itemId")].isNull() && m_item_id_isValid;

    m_item_web_url_isValid = ::OpenAPI::fromJsonValue(m_item_web_url, json[QString("itemWebUrl")]);
    m_item_web_url_isSet = !json[QString("itemWebUrl")].isNull() && m_item_web_url_isValid;

    m_legacy_item_id_isValid = ::OpenAPI::fromJsonValue(m_legacy_item_id, json[QString("legacyItemId")]);
    m_legacy_item_id_isSet = !json[QString("legacyItemId")].isNull() && m_legacy_item_id_isValid;

    m_marketing_price_isValid = ::OpenAPI::fromJsonValue(m_marketing_price, json[QString("marketingPrice")]);
    m_marketing_price_isSet = !json[QString("marketingPrice")].isNull() && m_marketing_price_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_qualified_programs_isValid = ::OpenAPI::fromJsonValue(m_qualified_programs, json[QString("qualifiedPrograms")]);
    m_qualified_programs_isSet = !json[QString("qualifiedPrograms")].isNull() && m_qualified_programs_isValid;

    m_shipping_options_isValid = ::OpenAPI::fromJsonValue(m_shipping_options, json[QString("shippingOptions")]);
    m_shipping_options_isSet = !json[QString("shippingOptions")].isNull() && m_shipping_options_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_unit_price_isValid = ::OpenAPI::fromJsonValue(m_unit_price, json[QString("unitPrice")]);
    m_unit_price_isSet = !json[QString("unitPrice")].isNull() && m_unit_price_isValid;

    m_unit_pricing_measure_isValid = ::OpenAPI::fromJsonValue(m_unit_pricing_measure, json[QString("unitPricingMeasure")]);
    m_unit_pricing_measure_isSet = !json[QString("unitPricingMeasure")].isNull() && m_unit_pricing_measure_isValid;
}

QString OAIDealItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDealItem::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_images.size() > 0) {
        obj.insert(QString("additionalImages"), ::OpenAPI::toJsonValue(m_additional_images));
    }
    if (m_category_ancestor_ids.size() > 0) {
        obj.insert(QString("categoryAncestorIds"), ::OpenAPI::toJsonValue(m_category_ancestor_ids));
    }
    if (m_category_id_isSet) {
        obj.insert(QString("categoryId"), ::OpenAPI::toJsonValue(m_category_id));
    }
    if (m_commissionable_isSet) {
        obj.insert(QString("commissionable"), ::OpenAPI::toJsonValue(m_commissionable));
    }
    if (m_deal_affiliate_web_url_isSet) {
        obj.insert(QString("dealAffiliateWebUrl"), ::OpenAPI::toJsonValue(m_deal_affiliate_web_url));
    }
    if (m_deal_end_date_isSet) {
        obj.insert(QString("dealEndDate"), ::OpenAPI::toJsonValue(m_deal_end_date));
    }
    if (m_deal_start_date_isSet) {
        obj.insert(QString("dealStartDate"), ::OpenAPI::toJsonValue(m_deal_start_date));
    }
    if (m_deal_web_url_isSet) {
        obj.insert(QString("dealWebUrl"), ::OpenAPI::toJsonValue(m_deal_web_url));
    }
    if (m_energy_efficiency_class_isSet) {
        obj.insert(QString("energyEfficiencyClass"), ::OpenAPI::toJsonValue(m_energy_efficiency_class));
    }
    if (m_image.isSet()) {
        obj.insert(QString("image"), ::OpenAPI::toJsonValue(m_image));
    }
    if (m_item_affiliate_web_url_isSet) {
        obj.insert(QString("itemAffiliateWebUrl"), ::OpenAPI::toJsonValue(m_item_affiliate_web_url));
    }
    if (m_item_group_id_isSet) {
        obj.insert(QString("itemGroupId"), ::OpenAPI::toJsonValue(m_item_group_id));
    }
    if (m_item_group_type_isSet) {
        obj.insert(QString("itemGroupType"), ::OpenAPI::toJsonValue(m_item_group_type));
    }
    if (m_item_id_isSet) {
        obj.insert(QString("itemId"), ::OpenAPI::toJsonValue(m_item_id));
    }
    if (m_item_web_url_isSet) {
        obj.insert(QString("itemWebUrl"), ::OpenAPI::toJsonValue(m_item_web_url));
    }
    if (m_legacy_item_id_isSet) {
        obj.insert(QString("legacyItemId"), ::OpenAPI::toJsonValue(m_legacy_item_id));
    }
    if (m_marketing_price.isSet()) {
        obj.insert(QString("marketingPrice"), ::OpenAPI::toJsonValue(m_marketing_price));
    }
    if (m_price.isSet()) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_qualified_programs.size() > 0) {
        obj.insert(QString("qualifiedPrograms"), ::OpenAPI::toJsonValue(m_qualified_programs));
    }
    if (m_shipping_options.size() > 0) {
        obj.insert(QString("shippingOptions"), ::OpenAPI::toJsonValue(m_shipping_options));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_unit_price.isSet()) {
        obj.insert(QString("unitPrice"), ::OpenAPI::toJsonValue(m_unit_price));
    }
    if (m_unit_pricing_measure_isSet) {
        obj.insert(QString("unitPricingMeasure"), ::OpenAPI::toJsonValue(m_unit_pricing_measure));
    }
    return obj;
}

QList<OAIImage> OAIDealItem::getAdditionalImages() const {
    return m_additional_images;
}
void OAIDealItem::setAdditionalImages(const QList<OAIImage> &additional_images) {
    m_additional_images = additional_images;
    m_additional_images_isSet = true;
}

bool OAIDealItem::is_additional_images_Set() const{
    return m_additional_images_isSet;
}

bool OAIDealItem::is_additional_images_Valid() const{
    return m_additional_images_isValid;
}

QList<QString> OAIDealItem::getCategoryAncestorIds() const {
    return m_category_ancestor_ids;
}
void OAIDealItem::setCategoryAncestorIds(const QList<QString> &category_ancestor_ids) {
    m_category_ancestor_ids = category_ancestor_ids;
    m_category_ancestor_ids_isSet = true;
}

bool OAIDealItem::is_category_ancestor_ids_Set() const{
    return m_category_ancestor_ids_isSet;
}

bool OAIDealItem::is_category_ancestor_ids_Valid() const{
    return m_category_ancestor_ids_isValid;
}

QString OAIDealItem::getCategoryId() const {
    return m_category_id;
}
void OAIDealItem::setCategoryId(const QString &category_id) {
    m_category_id = category_id;
    m_category_id_isSet = true;
}

bool OAIDealItem::is_category_id_Set() const{
    return m_category_id_isSet;
}

bool OAIDealItem::is_category_id_Valid() const{
    return m_category_id_isValid;
}

bool OAIDealItem::isCommissionable() const {
    return m_commissionable;
}
void OAIDealItem::setCommissionable(const bool &commissionable) {
    m_commissionable = commissionable;
    m_commissionable_isSet = true;
}

bool OAIDealItem::is_commissionable_Set() const{
    return m_commissionable_isSet;
}

bool OAIDealItem::is_commissionable_Valid() const{
    return m_commissionable_isValid;
}

QString OAIDealItem::getDealAffiliateWebUrl() const {
    return m_deal_affiliate_web_url;
}
void OAIDealItem::setDealAffiliateWebUrl(const QString &deal_affiliate_web_url) {
    m_deal_affiliate_web_url = deal_affiliate_web_url;
    m_deal_affiliate_web_url_isSet = true;
}

bool OAIDealItem::is_deal_affiliate_web_url_Set() const{
    return m_deal_affiliate_web_url_isSet;
}

bool OAIDealItem::is_deal_affiliate_web_url_Valid() const{
    return m_deal_affiliate_web_url_isValid;
}

QString OAIDealItem::getDealEndDate() const {
    return m_deal_end_date;
}
void OAIDealItem::setDealEndDate(const QString &deal_end_date) {
    m_deal_end_date = deal_end_date;
    m_deal_end_date_isSet = true;
}

bool OAIDealItem::is_deal_end_date_Set() const{
    return m_deal_end_date_isSet;
}

bool OAIDealItem::is_deal_end_date_Valid() const{
    return m_deal_end_date_isValid;
}

QString OAIDealItem::getDealStartDate() const {
    return m_deal_start_date;
}
void OAIDealItem::setDealStartDate(const QString &deal_start_date) {
    m_deal_start_date = deal_start_date;
    m_deal_start_date_isSet = true;
}

bool OAIDealItem::is_deal_start_date_Set() const{
    return m_deal_start_date_isSet;
}

bool OAIDealItem::is_deal_start_date_Valid() const{
    return m_deal_start_date_isValid;
}

QString OAIDealItem::getDealWebUrl() const {
    return m_deal_web_url;
}
void OAIDealItem::setDealWebUrl(const QString &deal_web_url) {
    m_deal_web_url = deal_web_url;
    m_deal_web_url_isSet = true;
}

bool OAIDealItem::is_deal_web_url_Set() const{
    return m_deal_web_url_isSet;
}

bool OAIDealItem::is_deal_web_url_Valid() const{
    return m_deal_web_url_isValid;
}

QString OAIDealItem::getEnergyEfficiencyClass() const {
    return m_energy_efficiency_class;
}
void OAIDealItem::setEnergyEfficiencyClass(const QString &energy_efficiency_class) {
    m_energy_efficiency_class = energy_efficiency_class;
    m_energy_efficiency_class_isSet = true;
}

bool OAIDealItem::is_energy_efficiency_class_Set() const{
    return m_energy_efficiency_class_isSet;
}

bool OAIDealItem::is_energy_efficiency_class_Valid() const{
    return m_energy_efficiency_class_isValid;
}

OAIImage OAIDealItem::getImage() const {
    return m_image;
}
void OAIDealItem::setImage(const OAIImage &image) {
    m_image = image;
    m_image_isSet = true;
}

bool OAIDealItem::is_image_Set() const{
    return m_image_isSet;
}

bool OAIDealItem::is_image_Valid() const{
    return m_image_isValid;
}

QString OAIDealItem::getItemAffiliateWebUrl() const {
    return m_item_affiliate_web_url;
}
void OAIDealItem::setItemAffiliateWebUrl(const QString &item_affiliate_web_url) {
    m_item_affiliate_web_url = item_affiliate_web_url;
    m_item_affiliate_web_url_isSet = true;
}

bool OAIDealItem::is_item_affiliate_web_url_Set() const{
    return m_item_affiliate_web_url_isSet;
}

bool OAIDealItem::is_item_affiliate_web_url_Valid() const{
    return m_item_affiliate_web_url_isValid;
}

QString OAIDealItem::getItemGroupId() const {
    return m_item_group_id;
}
void OAIDealItem::setItemGroupId(const QString &item_group_id) {
    m_item_group_id = item_group_id;
    m_item_group_id_isSet = true;
}

bool OAIDealItem::is_item_group_id_Set() const{
    return m_item_group_id_isSet;
}

bool OAIDealItem::is_item_group_id_Valid() const{
    return m_item_group_id_isValid;
}

QString OAIDealItem::getItemGroupType() const {
    return m_item_group_type;
}
void OAIDealItem::setItemGroupType(const QString &item_group_type) {
    m_item_group_type = item_group_type;
    m_item_group_type_isSet = true;
}

bool OAIDealItem::is_item_group_type_Set() const{
    return m_item_group_type_isSet;
}

bool OAIDealItem::is_item_group_type_Valid() const{
    return m_item_group_type_isValid;
}

QString OAIDealItem::getItemId() const {
    return m_item_id;
}
void OAIDealItem::setItemId(const QString &item_id) {
    m_item_id = item_id;
    m_item_id_isSet = true;
}

bool OAIDealItem::is_item_id_Set() const{
    return m_item_id_isSet;
}

bool OAIDealItem::is_item_id_Valid() const{
    return m_item_id_isValid;
}

QString OAIDealItem::getItemWebUrl() const {
    return m_item_web_url;
}
void OAIDealItem::setItemWebUrl(const QString &item_web_url) {
    m_item_web_url = item_web_url;
    m_item_web_url_isSet = true;
}

bool OAIDealItem::is_item_web_url_Set() const{
    return m_item_web_url_isSet;
}

bool OAIDealItem::is_item_web_url_Valid() const{
    return m_item_web_url_isValid;
}

QString OAIDealItem::getLegacyItemId() const {
    return m_legacy_item_id;
}
void OAIDealItem::setLegacyItemId(const QString &legacy_item_id) {
    m_legacy_item_id = legacy_item_id;
    m_legacy_item_id_isSet = true;
}

bool OAIDealItem::is_legacy_item_id_Set() const{
    return m_legacy_item_id_isSet;
}

bool OAIDealItem::is_legacy_item_id_Valid() const{
    return m_legacy_item_id_isValid;
}

OAIMarketingPrice OAIDealItem::getMarketingPrice() const {
    return m_marketing_price;
}
void OAIDealItem::setMarketingPrice(const OAIMarketingPrice &marketing_price) {
    m_marketing_price = marketing_price;
    m_marketing_price_isSet = true;
}

bool OAIDealItem::is_marketing_price_Set() const{
    return m_marketing_price_isSet;
}

bool OAIDealItem::is_marketing_price_Valid() const{
    return m_marketing_price_isValid;
}

OAIAmount OAIDealItem::getPrice() const {
    return m_price;
}
void OAIDealItem::setPrice(const OAIAmount &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIDealItem::is_price_Set() const{
    return m_price_isSet;
}

bool OAIDealItem::is_price_Valid() const{
    return m_price_isValid;
}

QList<QString> OAIDealItem::getQualifiedPrograms() const {
    return m_qualified_programs;
}
void OAIDealItem::setQualifiedPrograms(const QList<QString> &qualified_programs) {
    m_qualified_programs = qualified_programs;
    m_qualified_programs_isSet = true;
}

bool OAIDealItem::is_qualified_programs_Set() const{
    return m_qualified_programs_isSet;
}

bool OAIDealItem::is_qualified_programs_Valid() const{
    return m_qualified_programs_isValid;
}

QList<OAIShippingOption> OAIDealItem::getShippingOptions() const {
    return m_shipping_options;
}
void OAIDealItem::setShippingOptions(const QList<OAIShippingOption> &shipping_options) {
    m_shipping_options = shipping_options;
    m_shipping_options_isSet = true;
}

bool OAIDealItem::is_shipping_options_Set() const{
    return m_shipping_options_isSet;
}

bool OAIDealItem::is_shipping_options_Valid() const{
    return m_shipping_options_isValid;
}

QString OAIDealItem::getTitle() const {
    return m_title;
}
void OAIDealItem::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIDealItem::is_title_Set() const{
    return m_title_isSet;
}

bool OAIDealItem::is_title_Valid() const{
    return m_title_isValid;
}

OAIAmount OAIDealItem::getUnitPrice() const {
    return m_unit_price;
}
void OAIDealItem::setUnitPrice(const OAIAmount &unit_price) {
    m_unit_price = unit_price;
    m_unit_price_isSet = true;
}

bool OAIDealItem::is_unit_price_Set() const{
    return m_unit_price_isSet;
}

bool OAIDealItem::is_unit_price_Valid() const{
    return m_unit_price_isValid;
}

QString OAIDealItem::getUnitPricingMeasure() const {
    return m_unit_pricing_measure;
}
void OAIDealItem::setUnitPricingMeasure(const QString &unit_pricing_measure) {
    m_unit_pricing_measure = unit_pricing_measure;
    m_unit_pricing_measure_isSet = true;
}

bool OAIDealItem::is_unit_pricing_measure_Set() const{
    return m_unit_pricing_measure_isSet;
}

bool OAIDealItem::is_unit_pricing_measure_Valid() const{
    return m_unit_pricing_measure_isValid;
}

bool OAIDealItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_images.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_ancestor_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_commissionable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deal_affiliate_web_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deal_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deal_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deal_web_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_energy_efficiency_class_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_affiliate_web_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_group_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_web_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_legacy_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_marketing_price.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_price.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_qualified_programs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_options.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_price.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_pricing_measure_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDealItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
