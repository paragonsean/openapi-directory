/**
 * Deal API
 * <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited\" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units.</span><br /><br />This API allows third-party developers to search for and retrieve details about eBay deals and events, as well as the items associated with those deals and events.
 *
 * The version of the OpenAPI document: v1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DealItemSearchResponse from '../model/DealItemSearchResponse';

/**
* DealItem service.
* @module api/DealItemApi
* @version v1.3.0
*/
export default class DealItemApi {

    /**
    * Constructs a new DealItemApi. 
    * @alias module:api/DealItemApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getDealItems operation.
     * @callback module:api/DealItemApi~getDealItemsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DealItemSearchResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This method retrieves a paginated set of deal items. The result set contains all deal items associated with the specified search criteria and marketplace ID. Request headers This method uses the X-EBAY-C-ENDUSERCTX request header to support revenue sharing for eBay Partner Networks and to improve the accuracy of shipping and delivery time estimations. For details see, Request headers in the Buying Integration Guide. Restrictions This method can return a maximum of 10,000 items. For a list of supported sites and other restrictions, see API Restrictions. eBay Partner Network: In order to receive a commission for your sales, you must use the URL returned in the itemAffiliateWebUrl field to forward your buyer to the ebay.com site.
     * @param {String} X_EBAY_C_MARKETPLACE_ID A header used to specify the eBay marketplace ID.
     * @param {Object} opts Optional parameters
     * @param {String} [categoryIds] The unique identifier of the eBay category for the search.
     * @param {String} [commissionable] A filter for commissionable deals. Restriction: This filter is currently only supported for the US marketplace.
     * @param {String} [deliveryCountry] A filter for items that can be shipped to the specified country.
     * @param {String} [limit] The maximum number of items, from the current result set, returned on a single page.
     * @param {String} [offset] The number of items that will be skipped in the result set. This is used with the limit field to control the pagination of the output. For example, if the offset is set to 0 and the limit is set to 10, the method will retrieve items 1 through 10 from the list of items returned. If the offset is set to 10 and the limit is set to 10, the method will retrieve items 11 through 20 from the list of items returned. Default: 0
     * @param {module:api/DealItemApi~getDealItemsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DealItemSearchResponse}
     */
    getDealItems(X_EBAY_C_MARKETPLACE_ID, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'X_EBAY_C_MARKETPLACE_ID' is set
      if (X_EBAY_C_MARKETPLACE_ID === undefined || X_EBAY_C_MARKETPLACE_ID === null) {
        throw new Error("Missing the required parameter 'X_EBAY_C_MARKETPLACE_ID' when calling getDealItems");
      }

      let pathParams = {
      };
      let queryParams = {
        'category_ids': opts['categoryIds'],
        'commissionable': opts['commissionable'],
        'delivery_country': opts['deliveryCountry'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
        'X-EBAY-C-MARKETPLACE-ID': X_EBAY_C_MARKETPLACE_ID
      };
      let formParams = {
      };

      let authNames = ['api_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DealItemSearchResponse;
      return this.apiClient.callApi(
        '/deal_item', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
