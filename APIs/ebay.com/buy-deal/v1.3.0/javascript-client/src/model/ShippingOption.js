/**
 * Deal API
 * <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited\" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units.</span><br /><br />This API allows third-party developers to search for and retrieve details about eBay deals and events, as well as the items associated with those deals and events.
 *
 * The version of the OpenAPI document: v1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';

/**
 * The ShippingOption model module.
 * @module model/ShippingOption
 * @version v1.3.0
 */
class ShippingOption {
    /**
     * Constructs a new <code>ShippingOption</code>.
     * The details provided for the shipping provider, such as shipping cost and type.
     * @alias module:model/ShippingOption
     */
    constructor() { 
        
        ShippingOption.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShippingOption</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShippingOption} obj Optional instance to populate.
     * @return {module:model/ShippingOption} The populated <code>ShippingOption</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShippingOption();

            if (data.hasOwnProperty('shippingCost')) {
                obj['shippingCost'] = Amount.constructFromObject(data['shippingCost']);
            }
            if (data.hasOwnProperty('shippingCostType')) {
                obj['shippingCostType'] = ApiClient.convertToType(data['shippingCostType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShippingOption</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShippingOption</code>.
     */
    static validateJSON(data) {
        // validate the optional field `shippingCost`
        if (data['shippingCost']) { // data not null
          Amount.validateJSON(data['shippingCost']);
        }
        // ensure the json data is a string
        if (data['shippingCostType'] && !(typeof data['shippingCostType'] === 'string' || data['shippingCostType'] instanceof String)) {
            throw new Error("Expected the field `shippingCostType` to be a primitive type in the JSON string but got " + data['shippingCostType']);
        }

        return true;
    }


}



/**
 * @member {module:model/Amount} shippingCost
 */
ShippingOption.prototype['shippingCost'] = undefined;

/**
 * The class of the shipping cost. Valid Values: FIXED or CALCULATED Code so that your app gracefully handles any future changes to this list.
 * @member {String} shippingCostType
 */
ShippingOption.prototype['shippingCostType'] = undefined;






export default ShippingOption;

