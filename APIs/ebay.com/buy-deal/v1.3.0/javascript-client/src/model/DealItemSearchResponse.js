/**
 * Deal API
 * <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited\" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units.</span><br /><br />This API allows third-party developers to search for and retrieve details about eBay deals and events, as well as the items associated with those deals and events.
 *
 * The version of the OpenAPI document: v1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DealItem from './DealItem';

/**
 * The DealItemSearchResponse model module.
 * @module model/DealItemSearchResponse
 * @version v1.3.0
 */
class DealItemSearchResponse {
    /**
     * Constructs a new <code>DealItemSearchResponse</code>.
     * The result set for the deal item search.
     * @alias module:model/DealItemSearchResponse
     */
    constructor() { 
        
        DealItemSearchResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DealItemSearchResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DealItemSearchResponse} obj Optional instance to populate.
     * @return {module:model/DealItemSearchResponse} The populated <code>DealItemSearchResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DealItemSearchResponse();

            if (data.hasOwnProperty('dealItems')) {
                obj['dealItems'] = ApiClient.convertToType(data['dealItems'], [DealItem]);
            }
            if (data.hasOwnProperty('href')) {
                obj['href'] = ApiClient.convertToType(data['href'], 'String');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('next')) {
                obj['next'] = ApiClient.convertToType(data['next'], 'String');
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
            if (data.hasOwnProperty('prev')) {
                obj['prev'] = ApiClient.convertToType(data['prev'], 'String');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DealItemSearchResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DealItemSearchResponse</code>.
     */
    static validateJSON(data) {
        if (data['dealItems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dealItems'])) {
                throw new Error("Expected the field `dealItems` to be an array in the JSON data but got " + data['dealItems']);
            }
            // validate the optional field `dealItems` (array)
            for (const item of data['dealItems']) {
                DealItem.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['href'] && !(typeof data['href'] === 'string' || data['href'] instanceof String)) {
            throw new Error("Expected the field `href` to be a primitive type in the JSON string but got " + data['href']);
        }
        // ensure the json data is a string
        if (data['next'] && !(typeof data['next'] === 'string' || data['next'] instanceof String)) {
            throw new Error("Expected the field `next` to be a primitive type in the JSON string but got " + data['next']);
        }
        // ensure the json data is a string
        if (data['prev'] && !(typeof data['prev'] === 'string' || data['prev'] instanceof String)) {
            throw new Error("Expected the field `prev` to be a primitive type in the JSON string but got " + data['prev']);
        }

        return true;
    }


}



/**
 * A list of deal items that match the search criteria.
 * @member {Array.<module:model/DealItem>} dealItems
 */
DealItemSearchResponse.prototype['dealItems'] = undefined;

/**
 * The relative path to the current set of results.
 * @member {String} href
 */
DealItemSearchResponse.prototype['href'] = undefined;

/**
 * The maximum number of items, from the current result set, returned on a single page. Default: 20
 * @member {Number} limit
 */
DealItemSearchResponse.prototype['limit'] = undefined;

/**
 * The relative path to the next set of results.
 * @member {String} next
 */
DealItemSearchResponse.prototype['next'] = undefined;

/**
 * The number of items that will be skipped in the result set. This is used with the limit field to control the pagination of the output. For example, if the offset is set to 0 and the limit is set to 10, the method will retrieve items 1 through 10 from the list of items returned. If the offset is set to 10 and the limit is set to 10, the method will retrieve items 11 through 20 from the list of items returned. Default: 0
 * @member {Number} offset
 */
DealItemSearchResponse.prototype['offset'] = undefined;

/**
 * The relative path to the previous set of results.
 * @member {String} prev
 */
DealItemSearchResponse.prototype['prev'] = undefined;

/**
 * The total number of matches for the search criteria.
 * @member {Number} total
 */
DealItemSearchResponse.prototype['total'] = undefined;






export default DealItemSearchResponse;

