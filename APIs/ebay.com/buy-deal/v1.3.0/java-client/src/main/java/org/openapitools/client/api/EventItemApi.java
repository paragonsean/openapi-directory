/*
 * Deal API
 * <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited\" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units.</span><br /><br />This API allows third-party developers to search for and retrieve details about eBay deals and events, as well as the items associated with those deals and events.
 *
 * The version of the OpenAPI document: v1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.EventItemSearchResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EventItemApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public EventItemApi() {
        this(Configuration.getDefaultApiClient());
    }

    public EventItemApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getEventItems
     * @param eventIds The unique identifiers for the eBay events. Maximum Value: 1 (required)
     * @param X_EBAY_C_MARKETPLACE_ID A header used to specify the eBay marketplace ID. (required)
     * @param categoryIds The unique identifier of the eBay category for the search. Maximum Value: 1 (optional)
     * @param deliveryCountry A filter for items that can be shipped to the specified country. (optional)
     * @param limit The maximum number of items, from the current result set, returned on a single page. Default: 20 (optional)
     * @param offset The number of items that will be skipped in the result set. This is used with the limit field to control the pagination of the output. For example, if the offset is set to 0 and the limit is set to 10, the method will retrieve items 1 through 10 from the list of items returned. If the offset is set to 10 and the limit is set to 10, the method will retrieve items 11 through 20 from the list of items returned. Default: 0 (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getEventItemsCall(String eventIds, String X_EBAY_C_MARKETPLACE_ID, String categoryIds, String deliveryCountry, String limit, String offset, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/event_item";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (categoryIds != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("category_ids", categoryIds));
        }

        if (deliveryCountry != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("delivery_country", deliveryCountry));
        }

        if (eventIds != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("event_ids", eventIds));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (X_EBAY_C_MARKETPLACE_ID != null) {
            localVarHeaderParams.put("X-EBAY-C-MARKETPLACE-ID", localVarApiClient.parameterToString(X_EBAY_C_MARKETPLACE_ID));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getEventItemsValidateBeforeCall(String eventIds, String X_EBAY_C_MARKETPLACE_ID, String categoryIds, String deliveryCountry, String limit, String offset, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'eventIds' is set
        if (eventIds == null) {
            throw new ApiException("Missing the required parameter 'eventIds' when calling getEventItems(Async)");
        }

        // verify the required parameter 'X_EBAY_C_MARKETPLACE_ID' is set
        if (X_EBAY_C_MARKETPLACE_ID == null) {
            throw new ApiException("Missing the required parameter 'X_EBAY_C_MARKETPLACE_ID' when calling getEventItems(Async)");
        }

        return getEventItemsCall(eventIds, X_EBAY_C_MARKETPLACE_ID, categoryIds, deliveryCountry, limit, offset, _callback);

    }

    /**
     * 
     * This method returns a paginated set of event items. The result set contains all event items associated with the specified search criteria and marketplace ID. Request headers This method uses the X-EBAY-C-ENDUSERCTX request header to support revenue sharing for eBay Partner Networks and to improve the accuracy of shipping and delivery time estimations. For details see, Request headers in the Buying Integration Guide. Restrictions This method can return a maximum of 10,000 items. For a list of supported sites and other restrictions, see API Restrictions. eBay Partner Network: In order to receive a commission for your sales, you must use the URL returned in the itemAffiliateWebUrl field to forward your buyer to the ebay.com site.
     * @param eventIds The unique identifiers for the eBay events. Maximum Value: 1 (required)
     * @param X_EBAY_C_MARKETPLACE_ID A header used to specify the eBay marketplace ID. (required)
     * @param categoryIds The unique identifier of the eBay category for the search. Maximum Value: 1 (optional)
     * @param deliveryCountry A filter for items that can be shipped to the specified country. (optional)
     * @param limit The maximum number of items, from the current result set, returned on a single page. Default: 20 (optional)
     * @param offset The number of items that will be skipped in the result set. This is used with the limit field to control the pagination of the output. For example, if the offset is set to 0 and the limit is set to 10, the method will retrieve items 1 through 10 from the list of items returned. If the offset is set to 10 and the limit is set to 10, the method will retrieve items 11 through 20 from the list of items returned. Default: 0 (optional)
     * @return EventItemSearchResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public EventItemSearchResponse getEventItems(String eventIds, String X_EBAY_C_MARKETPLACE_ID, String categoryIds, String deliveryCountry, String limit, String offset) throws ApiException {
        ApiResponse<EventItemSearchResponse> localVarResp = getEventItemsWithHttpInfo(eventIds, X_EBAY_C_MARKETPLACE_ID, categoryIds, deliveryCountry, limit, offset);
        return localVarResp.getData();
    }

    /**
     * 
     * This method returns a paginated set of event items. The result set contains all event items associated with the specified search criteria and marketplace ID. Request headers This method uses the X-EBAY-C-ENDUSERCTX request header to support revenue sharing for eBay Partner Networks and to improve the accuracy of shipping and delivery time estimations. For details see, Request headers in the Buying Integration Guide. Restrictions This method can return a maximum of 10,000 items. For a list of supported sites and other restrictions, see API Restrictions. eBay Partner Network: In order to receive a commission for your sales, you must use the URL returned in the itemAffiliateWebUrl field to forward your buyer to the ebay.com site.
     * @param eventIds The unique identifiers for the eBay events. Maximum Value: 1 (required)
     * @param X_EBAY_C_MARKETPLACE_ID A header used to specify the eBay marketplace ID. (required)
     * @param categoryIds The unique identifier of the eBay category for the search. Maximum Value: 1 (optional)
     * @param deliveryCountry A filter for items that can be shipped to the specified country. (optional)
     * @param limit The maximum number of items, from the current result set, returned on a single page. Default: 20 (optional)
     * @param offset The number of items that will be skipped in the result set. This is used with the limit field to control the pagination of the output. For example, if the offset is set to 0 and the limit is set to 10, the method will retrieve items 1 through 10 from the list of items returned. If the offset is set to 10 and the limit is set to 10, the method will retrieve items 11 through 20 from the list of items returned. Default: 0 (optional)
     * @return ApiResponse&lt;EventItemSearchResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EventItemSearchResponse> getEventItemsWithHttpInfo(String eventIds, String X_EBAY_C_MARKETPLACE_ID, String categoryIds, String deliveryCountry, String limit, String offset) throws ApiException {
        okhttp3.Call localVarCall = getEventItemsValidateBeforeCall(eventIds, X_EBAY_C_MARKETPLACE_ID, categoryIds, deliveryCountry, limit, offset, null);
        Type localVarReturnType = new TypeToken<EventItemSearchResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * This method returns a paginated set of event items. The result set contains all event items associated with the specified search criteria and marketplace ID. Request headers This method uses the X-EBAY-C-ENDUSERCTX request header to support revenue sharing for eBay Partner Networks and to improve the accuracy of shipping and delivery time estimations. For details see, Request headers in the Buying Integration Guide. Restrictions This method can return a maximum of 10,000 items. For a list of supported sites and other restrictions, see API Restrictions. eBay Partner Network: In order to receive a commission for your sales, you must use the URL returned in the itemAffiliateWebUrl field to forward your buyer to the ebay.com site.
     * @param eventIds The unique identifiers for the eBay events. Maximum Value: 1 (required)
     * @param X_EBAY_C_MARKETPLACE_ID A header used to specify the eBay marketplace ID. (required)
     * @param categoryIds The unique identifier of the eBay category for the search. Maximum Value: 1 (optional)
     * @param deliveryCountry A filter for items that can be shipped to the specified country. (optional)
     * @param limit The maximum number of items, from the current result set, returned on a single page. Default: 20 (optional)
     * @param offset The number of items that will be skipped in the result set. This is used with the limit field to control the pagination of the output. For example, if the offset is set to 0 and the limit is set to 10, the method will retrieve items 1 through 10 from the list of items returned. If the offset is set to 10 and the limit is set to 10, the method will retrieve items 11 through 20 from the list of items returned. Default: 0 (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getEventItemsAsync(String eventIds, String X_EBAY_C_MARKETPLACE_ID, String categoryIds, String deliveryCountry, String limit, String offset, final ApiCallback<EventItemSearchResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getEventItemsValidateBeforeCall(eventIds, X_EBAY_C_MARKETPLACE_ID, categoryIds, deliveryCountry, limit, offset, _callback);
        Type localVarReturnType = new TypeToken<EventItemSearchResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
