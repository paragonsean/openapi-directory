# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource import Resource
from openapi_server import util


class RateLimit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_context: str=None, api_name: str=None, api_version: str=None, resources: List[Resource]=None):
        """RateLimit - a model defined in OpenAPI

        :param api_context: The api_context of this RateLimit.
        :param api_name: The api_name of this RateLimit.
        :param api_version: The api_version of this RateLimit.
        :param resources: The resources of this RateLimit.
        """
        self.openapi_types = {
            'api_context': str,
            'api_name': str,
            'api_version': str,
            'resources': List[Resource]
        }

        self.attribute_map = {
            'api_context': 'apiContext',
            'api_name': 'apiName',
            'api_version': 'apiVersion',
            'resources': 'resources'
        }

        self._api_context = api_context
        self._api_name = api_name
        self._api_version = api_version
        self._resources = resources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RateLimit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RateLimit of this RateLimit.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_context(self):
        """Gets the api_context of this RateLimit.

        The context of the API for which rate-limit data is returned. For example <code>buy</code>, <code>sell</code>, <code>commerce</code>, <code>developer</code> or <code>tradingapi</code>.

        :return: The api_context of this RateLimit.
        :rtype: str
        """
        return self._api_context

    @api_context.setter
    def api_context(self, api_context):
        """Sets the api_context of this RateLimit.

        The context of the API for which rate-limit data is returned. For example <code>buy</code>, <code>sell</code>, <code>commerce</code>, <code>developer</code> or <code>tradingapi</code>.

        :param api_context: The api_context of this RateLimit.
        :type api_context: str
        """

        self._api_context = api_context

    @property
    def api_name(self):
        """Gets the api_name of this RateLimit.

        The name of the API for which rate-limit data is returned. For example <code>browse</code> for the Buy API, <code>inventory</code> for the Sell API, <code>taxonomy</code> for the Commerce API, or <code>tradingapi</code> for Trading API.

        :return: The api_name of this RateLimit.
        :rtype: str
        """
        return self._api_name

    @api_name.setter
    def api_name(self, api_name):
        """Sets the api_name of this RateLimit.

        The name of the API for which rate-limit data is returned. For example <code>browse</code> for the Buy API, <code>inventory</code> for the Sell API, <code>taxonomy</code> for the Commerce API, or <code>tradingapi</code> for Trading API.

        :param api_name: The api_name of this RateLimit.
        :type api_name: str
        """

        self._api_name = api_name

    @property
    def api_version(self):
        """Gets the api_version of this RateLimit.

        The version of the API for which rate-limit data is returned. For example <code>v1</code> or <code>v2</code>.

        :return: The api_version of this RateLimit.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this RateLimit.

        The version of the API for which rate-limit data is returned. For example <code>v1</code> or <code>v2</code>.

        :param api_version: The api_version of this RateLimit.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def resources(self):
        """Gets the resources of this RateLimit.

        A list of the methods for which rate-limit data is returned. For example <code>item</code> for the Feed API, <code>getOrder</code> for the Fulfillment API, <code>getProduct</code> for the Catalog API, <code>AddItems</code> for the Trading API.

        :return: The resources of this RateLimit.
        :rtype: List[Resource]
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this RateLimit.

        A list of the methods for which rate-limit data is returned. For example <code>item</code> for the Feed API, <code>getOrder</code> for the Fulfillment API, <code>getProduct</code> for the Catalog API, <code>AddItems</code> for the Trading API.

        :param resources: The resources of this RateLimit.
        :type resources: List[Resource]
        """

        self._resources = resources
