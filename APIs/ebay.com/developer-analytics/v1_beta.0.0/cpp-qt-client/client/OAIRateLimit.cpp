/**
 * Analytics API
 * The <b>Analytics API</b> retrieves call-limit data and the quotas that are set for the RESTful APIs and the legacy Trading API.  <br><br>Responses from calls made to <b>getRateLimits</b> and <b>getUerRateLimits</b> include a list of the applicable resources and the \"call limit\", or quota, that is set for each resource. In addition to quota information, the response also includes the number of remaining calls available before the limit is reached, the time remaining before the quota resets, and the length of the \"time window\" to which the quota applies.  <br><br>The <b>getRateLimits</b> and <b>getUserRateLimits</b> methods retrieve call-limit information for either an application or user, respectively, and each method must be called with an appropriate OAuth token. That is, <b>getRateLimites</b> requires an access token generated with a client credentials grant and <b>getUserRateLimites</b> requires an access token generated with an authorization code grant. For more information, see <a href=\"/api-docs/static/oauth-tokens.html\">OAuth tokens</a>.  <br><br>Users can analyze the response data to see whether or not a limit might be reached, and from that determine if any action needs to be taken (such as programmatically throttling their request rate). For more on call limits, see <a href=\"https://developer.ebay.com/support/app-check \" target=\"_blank\">Compatible Application Check</a>.
 *
 * The version of the OpenAPI document: v1_beta.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRateLimit.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRateLimit::OAIRateLimit(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRateLimit::OAIRateLimit() {
    this->initializeModel();
}

OAIRateLimit::~OAIRateLimit() {}

void OAIRateLimit::initializeModel() {

    m_api_context_isSet = false;
    m_api_context_isValid = false;

    m_api_name_isSet = false;
    m_api_name_isValid = false;

    m_api_version_isSet = false;
    m_api_version_isValid = false;

    m_resources_isSet = false;
    m_resources_isValid = false;
}

void OAIRateLimit::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRateLimit::fromJsonObject(QJsonObject json) {

    m_api_context_isValid = ::OpenAPI::fromJsonValue(m_api_context, json[QString("apiContext")]);
    m_api_context_isSet = !json[QString("apiContext")].isNull() && m_api_context_isValid;

    m_api_name_isValid = ::OpenAPI::fromJsonValue(m_api_name, json[QString("apiName")]);
    m_api_name_isSet = !json[QString("apiName")].isNull() && m_api_name_isValid;

    m_api_version_isValid = ::OpenAPI::fromJsonValue(m_api_version, json[QString("apiVersion")]);
    m_api_version_isSet = !json[QString("apiVersion")].isNull() && m_api_version_isValid;

    m_resources_isValid = ::OpenAPI::fromJsonValue(m_resources, json[QString("resources")]);
    m_resources_isSet = !json[QString("resources")].isNull() && m_resources_isValid;
}

QString OAIRateLimit::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRateLimit::asJsonObject() const {
    QJsonObject obj;
    if (m_api_context_isSet) {
        obj.insert(QString("apiContext"), ::OpenAPI::toJsonValue(m_api_context));
    }
    if (m_api_name_isSet) {
        obj.insert(QString("apiName"), ::OpenAPI::toJsonValue(m_api_name));
    }
    if (m_api_version_isSet) {
        obj.insert(QString("apiVersion"), ::OpenAPI::toJsonValue(m_api_version));
    }
    if (m_resources.size() > 0) {
        obj.insert(QString("resources"), ::OpenAPI::toJsonValue(m_resources));
    }
    return obj;
}

QString OAIRateLimit::getApiContext() const {
    return m_api_context;
}
void OAIRateLimit::setApiContext(const QString &api_context) {
    m_api_context = api_context;
    m_api_context_isSet = true;
}

bool OAIRateLimit::is_api_context_Set() const{
    return m_api_context_isSet;
}

bool OAIRateLimit::is_api_context_Valid() const{
    return m_api_context_isValid;
}

QString OAIRateLimit::getApiName() const {
    return m_api_name;
}
void OAIRateLimit::setApiName(const QString &api_name) {
    m_api_name = api_name;
    m_api_name_isSet = true;
}

bool OAIRateLimit::is_api_name_Set() const{
    return m_api_name_isSet;
}

bool OAIRateLimit::is_api_name_Valid() const{
    return m_api_name_isValid;
}

QString OAIRateLimit::getApiVersion() const {
    return m_api_version;
}
void OAIRateLimit::setApiVersion(const QString &api_version) {
    m_api_version = api_version;
    m_api_version_isSet = true;
}

bool OAIRateLimit::is_api_version_Set() const{
    return m_api_version_isSet;
}

bool OAIRateLimit::is_api_version_Valid() const{
    return m_api_version_isValid;
}

QList<OAIResource> OAIRateLimit::getResources() const {
    return m_resources;
}
void OAIRateLimit::setResources(const QList<OAIResource> &resources) {
    m_resources = resources;
    m_resources_isSet = true;
}

bool OAIRateLimit::is_resources_Set() const{
    return m_resources_isSet;
}

bool OAIRateLimit::is_resources_Valid() const{
    return m_resources_isValid;
}

bool OAIRateLimit::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_context_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRateLimit::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
