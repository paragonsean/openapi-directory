/**
 * Analytics API
 * The <b>Analytics API</b> retrieves call-limit data and the quotas that are set for the RESTful APIs and the legacy Trading API.  <br><br>Responses from calls made to <b>getRateLimits</b> and <b>getUerRateLimits</b> include a list of the applicable resources and the \"call limit\", or quota, that is set for each resource. In addition to quota information, the response also includes the number of remaining calls available before the limit is reached, the time remaining before the quota resets, and the length of the \"time window\" to which the quota applies.  <br><br>The <b>getRateLimits</b> and <b>getUserRateLimits</b> methods retrieve call-limit information for either an application or user, respectively, and each method must be called with an appropriate OAuth token. That is, <b>getRateLimites</b> requires an access token generated with a client credentials grant and <b>getUserRateLimites</b> requires an access token generated with an authorization code grant. For more information, see <a href=\"/api-docs/static/oauth-tokens.html\">OAuth tokens</a>.  <br><br>Users can analyze the response data to see whether or not a limit might be reached, and from that determine if any action needs to be taken (such as programmatically throttling their request rate). For more on call limits, see <a href=\"https://developer.ebay.com/support/app-check \" target=\"_blank\">Compatible Application Check</a>.
 *
 * The version of the OpenAPI document: v1_beta.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Resource from './Resource';

/**
 * The RateLimit model module.
 * @module model/RateLimit
 * @version v1_beta.0.0
 */
class RateLimit {
    /**
     * Constructs a new <code>RateLimit</code>.
     * This complex types defines the resource (such as an API method) for which the rate-limit data is returned.  &lt;br&gt;&lt;br&gt;A method is included in an API, and an API is part of an API context for the API version specified.
     * @alias module:model/RateLimit
     */
    constructor() { 
        
        RateLimit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RateLimit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RateLimit} obj Optional instance to populate.
     * @return {module:model/RateLimit} The populated <code>RateLimit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RateLimit();

            if (data.hasOwnProperty('apiContext')) {
                obj['apiContext'] = ApiClient.convertToType(data['apiContext'], 'String');
            }
            if (data.hasOwnProperty('apiName')) {
                obj['apiName'] = ApiClient.convertToType(data['apiName'], 'String');
            }
            if (data.hasOwnProperty('apiVersion')) {
                obj['apiVersion'] = ApiClient.convertToType(data['apiVersion'], 'String');
            }
            if (data.hasOwnProperty('resources')) {
                obj['resources'] = ApiClient.convertToType(data['resources'], [Resource]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RateLimit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RateLimit</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['apiContext'] && !(typeof data['apiContext'] === 'string' || data['apiContext'] instanceof String)) {
            throw new Error("Expected the field `apiContext` to be a primitive type in the JSON string but got " + data['apiContext']);
        }
        // ensure the json data is a string
        if (data['apiName'] && !(typeof data['apiName'] === 'string' || data['apiName'] instanceof String)) {
            throw new Error("Expected the field `apiName` to be a primitive type in the JSON string but got " + data['apiName']);
        }
        // ensure the json data is a string
        if (data['apiVersion'] && !(typeof data['apiVersion'] === 'string' || data['apiVersion'] instanceof String)) {
            throw new Error("Expected the field `apiVersion` to be a primitive type in the JSON string but got " + data['apiVersion']);
        }
        if (data['resources']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['resources'])) {
                throw new Error("Expected the field `resources` to be an array in the JSON data but got " + data['resources']);
            }
            // validate the optional field `resources` (array)
            for (const item of data['resources']) {
                Resource.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The context of the API for which rate-limit data is returned. For example <code>buy</code>, <code>sell</code>, <code>commerce</code>, <code>developer</code> or <code>tradingapi</code>.
 * @member {String} apiContext
 */
RateLimit.prototype['apiContext'] = undefined;

/**
 * The name of the API for which rate-limit data is returned. For example <code>browse</code> for the Buy API, <code>inventory</code> for the Sell API, <code>taxonomy</code> for the Commerce API, or <code>tradingapi</code> for Trading API.
 * @member {String} apiName
 */
RateLimit.prototype['apiName'] = undefined;

/**
 * The version of the API for which rate-limit data is returned. For example <code>v1</code> or <code>v2</code>.
 * @member {String} apiVersion
 */
RateLimit.prototype['apiVersion'] = undefined;

/**
 * A list of the methods for which rate-limit data is returned. For example <code>item</code> for the Feed API, <code>getOrder</code> for the Fulfillment API, <code>getProduct</code> for the Catalog API, <code>AddItems</code> for the Trading API.
 * @member {Array.<module:model/Resource>} resources
 */
RateLimit.prototype['resources'] = undefined;






export default RateLimit;

