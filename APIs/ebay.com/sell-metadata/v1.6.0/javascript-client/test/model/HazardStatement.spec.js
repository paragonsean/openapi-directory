/**
 * Metadata API
 * The Metadata API has operations that retrieve configuration details pertaining to the different eBay marketplaces. In addition to marketplace information, the API also has operations that get information that helps sellers list items on eBay.
 *
 * The version of the OpenAPI document: v1.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MetadataApi);
  }
}(this, function(expect, MetadataApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MetadataApi.HazardStatement();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('HazardStatement', function() {
    it('should create an instance of HazardStatement', function() {
      // uncomment below and update the code to test HazardStatement
      //var instance = new MetadataApi.HazardStatement();
      //expect(instance).to.be.a(MetadataApi.HazardStatement);
    });

    it('should have the property statementDescription (base name: "statementDescription")', function() {
      // uncomment below and update the code to test the property statementDescription
      //var instance = new MetadataApi.HazardStatement();
      //expect(instance).to.be();
    });

    it('should have the property statementId (base name: "statementId")', function() {
      // uncomment below and update the code to test the property statementId
      //var instance = new MetadataApi.HazardStatement();
      //expect(instance).to.be();
    });

  });

}));
