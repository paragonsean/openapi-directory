/**
 * Metadata API
 * The Metadata API has operations that retrieve configuration details pertaining to the different eBay marketplaces. In addition to marketplace information, the API also has operations that get information that helps sellers list items on eBay.
 *
 * The version of the OpenAPI document: v1.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Error from './Error';
import ListingStructurePolicy from './ListingStructurePolicy';

/**
 * The ListingStructurePolicyResponse model module.
 * @module model/ListingStructurePolicyResponse
 * @version v1.6.0
 */
class ListingStructurePolicyResponse {
    /**
     * Constructs a new <code>ListingStructurePolicyResponse</code>.
     * @alias module:model/ListingStructurePolicyResponse
     */
    constructor() { 
        
        ListingStructurePolicyResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListingStructurePolicyResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListingStructurePolicyResponse} obj Optional instance to populate.
     * @return {module:model/ListingStructurePolicyResponse} The populated <code>ListingStructurePolicyResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListingStructurePolicyResponse();

            if (data.hasOwnProperty('listingStructurePolicies')) {
                obj['listingStructurePolicies'] = ApiClient.convertToType(data['listingStructurePolicies'], [ListingStructurePolicy]);
            }
            if (data.hasOwnProperty('warnings')) {
                obj['warnings'] = ApiClient.convertToType(data['warnings'], [Error]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListingStructurePolicyResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListingStructurePolicyResponse</code>.
     */
    static validateJSON(data) {
        if (data['listingStructurePolicies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['listingStructurePolicies'])) {
                throw new Error("Expected the field `listingStructurePolicies` to be an array in the JSON data but got " + data['listingStructurePolicies']);
            }
            // validate the optional field `listingStructurePolicies` (array)
            for (const item of data['listingStructurePolicies']) {
                ListingStructurePolicy.validateJSON(item);
            };
        }
        if (data['warnings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['warnings'])) {
                throw new Error("Expected the field `warnings` to be an array in the JSON data but got " + data['warnings']);
            }
            // validate the optional field `warnings` (array)
            for (const item of data['warnings']) {
                Error.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Returns a list of category IDs plus a flag indicating whether or not each listed category supports item variations.
 * @member {Array.<module:model/ListingStructurePolicy>} listingStructurePolicies
 */
ListingStructurePolicyResponse.prototype['listingStructurePolicies'] = undefined;

/**
 * A list of the warnings that were generated as a result of the request. This field is not returned if no warnings were generated by the request.
 * @member {Array.<module:model/Error>} warnings
 */
ListingStructurePolicyResponse.prototype['warnings'] = undefined;






export default ListingStructurePolicyResponse;

