/**
 * Metadata API
 * The Metadata API has operations that retrieve configuration details pertaining to the different eBay marketplaces. In addition to marketplace information, the API also has operations that get information that helps sellers list items on eBay.
 *
 * The version of the OpenAPI document: v1.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExtendedProducerResponsibility model module.
 * @module model/ExtendedProducerResponsibility
 * @version v1.6.0
 */
class ExtendedProducerResponsibility {
    /**
     * Constructs a new <code>ExtendedProducerResponsibility</code>.
     * A type that defines the attributes of an Extended Producer Responsibility policy.
     * @alias module:model/ExtendedProducerResponsibility
     */
    constructor() { 
        
        ExtendedProducerResponsibility.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExtendedProducerResponsibility</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExtendedProducerResponsibility} obj Optional instance to populate.
     * @return {module:model/ExtendedProducerResponsibility} The populated <code>ExtendedProducerResponsibility</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExtendedProducerResponsibility();

            if (data.hasOwnProperty('enabledForVariations')) {
                obj['enabledForVariations'] = ApiClient.convertToType(data['enabledForVariations'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('usage')) {
                obj['usage'] = ApiClient.convertToType(data['usage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExtendedProducerResponsibility</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExtendedProducerResponsibility</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['usage'] && !(typeof data['usage'] === 'string' || data['usage'] instanceof String)) {
            throw new Error("Expected the field `usage` to be a primitive type in the JSON string but got " + data['usage']);
        }

        return true;
    }


}



/**
 * An indication of whether the attribute can be enabled for listing variations.<br /><br />If the value is <code>true</code>, the attribute may be specified at the variation level.
 * @member {Boolean} enabledForVariations
 */
ExtendedProducerResponsibility.prototype['enabledForVariations'] = undefined;

/**
 * The name of the attribute included in the policy. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:ExtendedProducerResponsibilityEnum'>eBay API documentation</a>
 * @member {String} name
 */
ExtendedProducerResponsibility.prototype['name'] = undefined;

/**
 * The usage guidelines for the attribute, in the specified marketplace. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:GenericUsageEnum'>eBay API documentation</a>
 * @member {String} usage
 */
ExtendedProducerResponsibility.prototype['usage'] = undefined;






export default ExtendedProducerResponsibility;

