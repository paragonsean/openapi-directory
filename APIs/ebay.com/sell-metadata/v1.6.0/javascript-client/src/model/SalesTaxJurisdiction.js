/**
 * Metadata API
 * The Metadata API has operations that retrieve configuration details pertaining to the different eBay marketplaces. In addition to marketplace information, the API also has operations that get information that helps sellers list items on eBay.
 *
 * The version of the OpenAPI document: v1.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SalesTaxJurisdiction model module.
 * @module model/SalesTaxJurisdiction
 * @version v1.6.0
 */
class SalesTaxJurisdiction {
    /**
     * Constructs a new <code>SalesTaxJurisdiction</code>.
     * A unique ID for a sales tax jurisdiction.
     * @alias module:model/SalesTaxJurisdiction
     */
    constructor() { 
        
        SalesTaxJurisdiction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SalesTaxJurisdiction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SalesTaxJurisdiction} obj Optional instance to populate.
     * @return {module:model/SalesTaxJurisdiction} The populated <code>SalesTaxJurisdiction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SalesTaxJurisdiction();

            if (data.hasOwnProperty('salesTaxJurisdictionId')) {
                obj['salesTaxJurisdictionId'] = ApiClient.convertToType(data['salesTaxJurisdictionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SalesTaxJurisdiction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SalesTaxJurisdiction</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['salesTaxJurisdictionId'] && !(typeof data['salesTaxJurisdictionId'] === 'string' || data['salesTaxJurisdictionId'] instanceof String)) {
            throw new Error("Expected the field `salesTaxJurisdictionId` to be a primitive type in the JSON string but got " + data['salesTaxJurisdictionId']);
        }

        return true;
    }


}



/**
 * The unique ID for a sales tax jurisdiction.
 * @member {String} salesTaxJurisdictionId
 */
SalesTaxJurisdiction.prototype['salesTaxJurisdictionId'] = undefined;






export default SalesTaxJurisdiction;

