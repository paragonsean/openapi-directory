/**
 * Metadata API
 * The Metadata API has operations that retrieve configuration details pertaining to the different eBay marketplaces. In addition to marketplace information, the API also has operations that get information that helps sellers list items on eBay.
 *
 * The version of the OpenAPI document: v1.6.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItemConditionPolicy.h
 *
 * 
 */

#ifndef OAIItemConditionPolicy_H
#define OAIItemConditionPolicy_H

#include <QJsonObject>

#include "OAIItemCondition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIItemCondition;

class OAIItemConditionPolicy : public OAIObject {
public:
    OAIItemConditionPolicy();
    OAIItemConditionPolicy(QString json);
    ~OAIItemConditionPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategoryId() const;
    void setCategoryId(const QString &category_id);
    bool is_category_id_Set() const;
    bool is_category_id_Valid() const;

    QString getCategoryTreeId() const;
    void setCategoryTreeId(const QString &category_tree_id);
    bool is_category_tree_id_Set() const;
    bool is_category_tree_id_Valid() const;

    bool isItemConditionRequired() const;
    void setItemConditionRequired(const bool &item_condition_required);
    bool is_item_condition_required_Set() const;
    bool is_item_condition_required_Valid() const;

    QList<OAIItemCondition> getItemConditions() const;
    void setItemConditions(const QList<OAIItemCondition> &item_conditions);
    bool is_item_conditions_Set() const;
    bool is_item_conditions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category_id;
    bool m_category_id_isSet;
    bool m_category_id_isValid;

    QString m_category_tree_id;
    bool m_category_tree_id_isSet;
    bool m_category_tree_id_isValid;

    bool m_item_condition_required;
    bool m_item_condition_required_isSet;
    bool m_item_condition_required_isValid;

    QList<OAIItemCondition> m_item_conditions;
    bool m_item_conditions_isSet;
    bool m_item_conditions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItemConditionPolicy)

#endif // OAIItemConditionPolicy_H
