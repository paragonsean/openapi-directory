/**
 * Metadata API
 * The Metadata API has operations that retrieve configuration details pertaining to the different eBay marketplaces. In addition to marketplace information, the API also has operations that get information that helps sellers list items on eBay.
 *
 * The version of the OpenAPI document: v1.6.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExtendedProducerResponsibility.h
 *
 * A type that defines the attributes of an Extended Producer Responsibility policy.
 */

#ifndef OAIExtendedProducerResponsibility_H
#define OAIExtendedProducerResponsibility_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExtendedProducerResponsibility : public OAIObject {
public:
    OAIExtendedProducerResponsibility();
    OAIExtendedProducerResponsibility(QString json);
    ~OAIExtendedProducerResponsibility() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEnabledForVariations() const;
    void setEnabledForVariations(const bool &enabled_for_variations);
    bool is_enabled_for_variations_Set() const;
    bool is_enabled_for_variations_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getUsage() const;
    void setUsage(const QString &usage);
    bool is_usage_Set() const;
    bool is_usage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enabled_for_variations;
    bool m_enabled_for_variations_isSet;
    bool m_enabled_for_variations_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_usage;
    bool m_usage_isSet;
    bool m_usage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExtendedProducerResponsibility)

#endif // OAIExtendedProducerResponsibility_H
