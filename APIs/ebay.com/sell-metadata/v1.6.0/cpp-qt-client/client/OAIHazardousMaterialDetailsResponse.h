/**
 * Metadata API
 * The Metadata API has operations that retrieve configuration details pertaining to the different eBay marketplaces. In addition to marketplace information, the API also has operations that get information that helps sellers list items on eBay.
 *
 * The version of the OpenAPI document: v1.6.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHazardousMaterialDetailsResponse.h
 *
 * A type that defines the response fields for the &lt;b&gt;getHazardousMaterialsLabels&lt;/b&gt; method.
 */

#ifndef OAIHazardousMaterialDetailsResponse_H
#define OAIHazardousMaterialDetailsResponse_H

#include <QJsonObject>

#include "OAIHazardStatement.h"
#include "OAIPictogram.h"
#include "OAISignalWord.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPictogram;
class OAISignalWord;
class OAIHazardStatement;

class OAIHazardousMaterialDetailsResponse : public OAIObject {
public:
    OAIHazardousMaterialDetailsResponse();
    OAIHazardousMaterialDetailsResponse(QString json);
    ~OAIHazardousMaterialDetailsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIPictogram> getPictograms() const;
    void setPictograms(const QList<OAIPictogram> &pictograms);
    bool is_pictograms_Set() const;
    bool is_pictograms_Valid() const;

    QList<OAISignalWord> getSignalWords() const;
    void setSignalWords(const QList<OAISignalWord> &signal_words);
    bool is_signal_words_Set() const;
    bool is_signal_words_Valid() const;

    QList<OAIHazardStatement> getStatements() const;
    void setStatements(const QList<OAIHazardStatement> &statements);
    bool is_statements_Set() const;
    bool is_statements_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIPictogram> m_pictograms;
    bool m_pictograms_isSet;
    bool m_pictograms_isValid;

    QList<OAISignalWord> m_signal_words;
    bool m_signal_words_isSet;
    bool m_signal_words_isValid;

    QList<OAIHazardStatement> m_statements;
    bool m_statements_isSet;
    bool m_statements_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHazardousMaterialDetailsResponse)

#endif // OAIHazardousMaterialDetailsResponse_H
