/**
 * Metadata API
 * The Metadata API has operations that retrieve configuration details pertaining to the different eBay marketplaces. In addition to marketplace information, the API also has operations that get information that helps sellers list items on eBay.
 *
 * The version of the OpenAPI document: v1.6.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINegotiatedPricePolicyResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINegotiatedPricePolicyResponse::OAINegotiatedPricePolicyResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINegotiatedPricePolicyResponse::OAINegotiatedPricePolicyResponse() {
    this->initializeModel();
}

OAINegotiatedPricePolicyResponse::~OAINegotiatedPricePolicyResponse() {}

void OAINegotiatedPricePolicyResponse::initializeModel() {

    m_negotiated_price_policies_isSet = false;
    m_negotiated_price_policies_isValid = false;

    m_warnings_isSet = false;
    m_warnings_isValid = false;
}

void OAINegotiatedPricePolicyResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINegotiatedPricePolicyResponse::fromJsonObject(QJsonObject json) {

    m_negotiated_price_policies_isValid = ::OpenAPI::fromJsonValue(m_negotiated_price_policies, json[QString("negotiatedPricePolicies")]);
    m_negotiated_price_policies_isSet = !json[QString("negotiatedPricePolicies")].isNull() && m_negotiated_price_policies_isValid;

    m_warnings_isValid = ::OpenAPI::fromJsonValue(m_warnings, json[QString("warnings")]);
    m_warnings_isSet = !json[QString("warnings")].isNull() && m_warnings_isValid;
}

QString OAINegotiatedPricePolicyResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINegotiatedPricePolicyResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_negotiated_price_policies.size() > 0) {
        obj.insert(QString("negotiatedPricePolicies"), ::OpenAPI::toJsonValue(m_negotiated_price_policies));
    }
    if (m_warnings.size() > 0) {
        obj.insert(QString("warnings"), ::OpenAPI::toJsonValue(m_warnings));
    }
    return obj;
}

QList<OAINegotiatedPricePolicy> OAINegotiatedPricePolicyResponse::getNegotiatedPricePolicies() const {
    return m_negotiated_price_policies;
}
void OAINegotiatedPricePolicyResponse::setNegotiatedPricePolicies(const QList<OAINegotiatedPricePolicy> &negotiated_price_policies) {
    m_negotiated_price_policies = negotiated_price_policies;
    m_negotiated_price_policies_isSet = true;
}

bool OAINegotiatedPricePolicyResponse::is_negotiated_price_policies_Set() const{
    return m_negotiated_price_policies_isSet;
}

bool OAINegotiatedPricePolicyResponse::is_negotiated_price_policies_Valid() const{
    return m_negotiated_price_policies_isValid;
}

QList<OAIError> OAINegotiatedPricePolicyResponse::getWarnings() const {
    return m_warnings;
}
void OAINegotiatedPricePolicyResponse::setWarnings(const QList<OAIError> &warnings) {
    m_warnings = warnings;
    m_warnings_isSet = true;
}

bool OAINegotiatedPricePolicyResponse::is_warnings_Set() const{
    return m_warnings_isSet;
}

bool OAINegotiatedPricePolicyResponse::is_warnings_Valid() const{
    return m_warnings_isValid;
}

bool OAINegotiatedPricePolicyResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_negotiated_price_policies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_warnings.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINegotiatedPricePolicyResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
