/**
 * Metadata API
 * The Metadata API has operations that retrieve configuration details pertaining to the different eBay marketplaces. In addition to marketplace information, the API also has operations that get information that helps sellers list items on eBay.
 *
 * The version of the OpenAPI document: v1.6.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExtendedProducerResponsibilityPolicyResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExtendedProducerResponsibilityPolicyResponse::OAIExtendedProducerResponsibilityPolicyResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExtendedProducerResponsibilityPolicyResponse::OAIExtendedProducerResponsibilityPolicyResponse() {
    this->initializeModel();
}

OAIExtendedProducerResponsibilityPolicyResponse::~OAIExtendedProducerResponsibilityPolicyResponse() {}

void OAIExtendedProducerResponsibilityPolicyResponse::initializeModel() {

    m_extended_producer_responsibilities_isSet = false;
    m_extended_producer_responsibilities_isValid = false;

    m_warnings_isSet = false;
    m_warnings_isValid = false;
}

void OAIExtendedProducerResponsibilityPolicyResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExtendedProducerResponsibilityPolicyResponse::fromJsonObject(QJsonObject json) {

    m_extended_producer_responsibilities_isValid = ::OpenAPI::fromJsonValue(m_extended_producer_responsibilities, json[QString("extendedProducerResponsibilities")]);
    m_extended_producer_responsibilities_isSet = !json[QString("extendedProducerResponsibilities")].isNull() && m_extended_producer_responsibilities_isValid;

    m_warnings_isValid = ::OpenAPI::fromJsonValue(m_warnings, json[QString("warnings")]);
    m_warnings_isSet = !json[QString("warnings")].isNull() && m_warnings_isValid;
}

QString OAIExtendedProducerResponsibilityPolicyResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExtendedProducerResponsibilityPolicyResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_extended_producer_responsibilities.size() > 0) {
        obj.insert(QString("extendedProducerResponsibilities"), ::OpenAPI::toJsonValue(m_extended_producer_responsibilities));
    }
    if (m_warnings.size() > 0) {
        obj.insert(QString("warnings"), ::OpenAPI::toJsonValue(m_warnings));
    }
    return obj;
}

QList<OAIExtendedProducerResponsibilityPolicy> OAIExtendedProducerResponsibilityPolicyResponse::getExtendedProducerResponsibilities() const {
    return m_extended_producer_responsibilities;
}
void OAIExtendedProducerResponsibilityPolicyResponse::setExtendedProducerResponsibilities(const QList<OAIExtendedProducerResponsibilityPolicy> &extended_producer_responsibilities) {
    m_extended_producer_responsibilities = extended_producer_responsibilities;
    m_extended_producer_responsibilities_isSet = true;
}

bool OAIExtendedProducerResponsibilityPolicyResponse::is_extended_producer_responsibilities_Set() const{
    return m_extended_producer_responsibilities_isSet;
}

bool OAIExtendedProducerResponsibilityPolicyResponse::is_extended_producer_responsibilities_Valid() const{
    return m_extended_producer_responsibilities_isValid;
}

QList<OAIError> OAIExtendedProducerResponsibilityPolicyResponse::getWarnings() const {
    return m_warnings;
}
void OAIExtendedProducerResponsibilityPolicyResponse::setWarnings(const QList<OAIError> &warnings) {
    m_warnings = warnings;
    m_warnings_isSet = true;
}

bool OAIExtendedProducerResponsibilityPolicyResponse::is_warnings_Set() const{
    return m_warnings_isSet;
}

bool OAIExtendedProducerResponsibilityPolicyResponse::is_warnings_Valid() const{
    return m_warnings_isValid;
}

bool OAIExtendedProducerResponsibilityPolicyResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_extended_producer_responsibilities.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_warnings.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExtendedProducerResponsibilityPolicyResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
