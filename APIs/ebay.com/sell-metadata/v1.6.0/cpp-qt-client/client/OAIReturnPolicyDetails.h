/**
 * Metadata API
 * The Metadata API has operations that retrieve configuration details pertaining to the different eBay marketplaces. In addition to marketplace information, the API also has operations that get information that helps sellers list items on eBay.
 *
 * The version of the OpenAPI document: v1.6.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReturnPolicyDetails.h
 *
 * This container defines the category policies that relate to domestic and international return policies (the return shipping is made via a domestic or an international shipping service, respectively).
 */

#ifndef OAIReturnPolicyDetails_H
#define OAIReturnPolicyDetails_H

#include <QJsonObject>

#include "OAITimeDuration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITimeDuration;

class OAIReturnPolicyDetails : public OAIObject {
public:
    OAIReturnPolicyDetails();
    OAIReturnPolicyDetails(QString json);
    ~OAIReturnPolicyDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isPolicyDescriptionEnabled() const;
    void setPolicyDescriptionEnabled(const bool &policy_description_enabled);
    bool is_policy_description_enabled_Set() const;
    bool is_policy_description_enabled_Valid() const;

    QList<QString> getRefundMethods() const;
    void setRefundMethods(const QList<QString> &refund_methods);
    bool is_refund_methods_Set() const;
    bool is_refund_methods_Valid() const;

    QList<QString> getReturnMethods() const;
    void setReturnMethods(const QList<QString> &return_methods);
    bool is_return_methods_Set() const;
    bool is_return_methods_Valid() const;

    QList<OAITimeDuration> getReturnPeriods() const;
    void setReturnPeriods(const QList<OAITimeDuration> &return_periods);
    bool is_return_periods_Set() const;
    bool is_return_periods_Valid() const;

    QList<QString> getReturnShippingCostPayers() const;
    void setReturnShippingCostPayers(const QList<QString> &return_shipping_cost_payers);
    bool is_return_shipping_cost_payers_Set() const;
    bool is_return_shipping_cost_payers_Valid() const;

    bool isReturnsAcceptanceEnabled() const;
    void setReturnsAcceptanceEnabled(const bool &returns_acceptance_enabled);
    bool is_returns_acceptance_enabled_Set() const;
    bool is_returns_acceptance_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_policy_description_enabled;
    bool m_policy_description_enabled_isSet;
    bool m_policy_description_enabled_isValid;

    QList<QString> m_refund_methods;
    bool m_refund_methods_isSet;
    bool m_refund_methods_isValid;

    QList<QString> m_return_methods;
    bool m_return_methods_isSet;
    bool m_return_methods_isValid;

    QList<OAITimeDuration> m_return_periods;
    bool m_return_periods_isSet;
    bool m_return_periods_isValid;

    QList<QString> m_return_shipping_cost_payers;
    bool m_return_shipping_cost_payers_isSet;
    bool m_return_shipping_cost_payers_isValid;

    bool m_returns_acceptance_enabled;
    bool m_returns_acceptance_enabled_isSet;
    bool m_returns_acceptance_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReturnPolicyDetails)

#endif // OAIReturnPolicyDetails_H
