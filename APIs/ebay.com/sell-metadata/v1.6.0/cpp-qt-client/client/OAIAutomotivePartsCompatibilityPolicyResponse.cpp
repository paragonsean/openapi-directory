/**
 * Metadata API
 * The Metadata API has operations that retrieve configuration details pertaining to the different eBay marketplaces. In addition to marketplace information, the API also has operations that get information that helps sellers list items on eBay.
 *
 * The version of the OpenAPI document: v1.6.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutomotivePartsCompatibilityPolicyResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutomotivePartsCompatibilityPolicyResponse::OAIAutomotivePartsCompatibilityPolicyResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutomotivePartsCompatibilityPolicyResponse::OAIAutomotivePartsCompatibilityPolicyResponse() {
    this->initializeModel();
}

OAIAutomotivePartsCompatibilityPolicyResponse::~OAIAutomotivePartsCompatibilityPolicyResponse() {}

void OAIAutomotivePartsCompatibilityPolicyResponse::initializeModel() {

    m_automotive_parts_compatibility_policies_isSet = false;
    m_automotive_parts_compatibility_policies_isValid = false;

    m_warnings_isSet = false;
    m_warnings_isValid = false;
}

void OAIAutomotivePartsCompatibilityPolicyResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutomotivePartsCompatibilityPolicyResponse::fromJsonObject(QJsonObject json) {

    m_automotive_parts_compatibility_policies_isValid = ::OpenAPI::fromJsonValue(m_automotive_parts_compatibility_policies, json[QString("automotivePartsCompatibilityPolicies")]);
    m_automotive_parts_compatibility_policies_isSet = !json[QString("automotivePartsCompatibilityPolicies")].isNull() && m_automotive_parts_compatibility_policies_isValid;

    m_warnings_isValid = ::OpenAPI::fromJsonValue(m_warnings, json[QString("warnings")]);
    m_warnings_isSet = !json[QString("warnings")].isNull() && m_warnings_isValid;
}

QString OAIAutomotivePartsCompatibilityPolicyResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutomotivePartsCompatibilityPolicyResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_automotive_parts_compatibility_policies.size() > 0) {
        obj.insert(QString("automotivePartsCompatibilityPolicies"), ::OpenAPI::toJsonValue(m_automotive_parts_compatibility_policies));
    }
    if (m_warnings.size() > 0) {
        obj.insert(QString("warnings"), ::OpenAPI::toJsonValue(m_warnings));
    }
    return obj;
}

QList<OAIAutomotivePartsCompatibilityPolicy> OAIAutomotivePartsCompatibilityPolicyResponse::getAutomotivePartsCompatibilityPolicies() const {
    return m_automotive_parts_compatibility_policies;
}
void OAIAutomotivePartsCompatibilityPolicyResponse::setAutomotivePartsCompatibilityPolicies(const QList<OAIAutomotivePartsCompatibilityPolicy> &automotive_parts_compatibility_policies) {
    m_automotive_parts_compatibility_policies = automotive_parts_compatibility_policies;
    m_automotive_parts_compatibility_policies_isSet = true;
}

bool OAIAutomotivePartsCompatibilityPolicyResponse::is_automotive_parts_compatibility_policies_Set() const{
    return m_automotive_parts_compatibility_policies_isSet;
}

bool OAIAutomotivePartsCompatibilityPolicyResponse::is_automotive_parts_compatibility_policies_Valid() const{
    return m_automotive_parts_compatibility_policies_isValid;
}

QList<OAIError> OAIAutomotivePartsCompatibilityPolicyResponse::getWarnings() const {
    return m_warnings;
}
void OAIAutomotivePartsCompatibilityPolicyResponse::setWarnings(const QList<OAIError> &warnings) {
    m_warnings = warnings;
    m_warnings_isSet = true;
}

bool OAIAutomotivePartsCompatibilityPolicyResponse::is_warnings_Set() const{
    return m_warnings_isSet;
}

bool OAIAutomotivePartsCompatibilityPolicyResponse::is_warnings_Valid() const{
    return m_warnings_isValid;
}

bool OAIAutomotivePartsCompatibilityPolicyResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_automotive_parts_compatibility_policies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_warnings.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutomotivePartsCompatibilityPolicyResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
