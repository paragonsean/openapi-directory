/**
 * Metadata API
 * The Metadata API has operations that retrieve configuration details pertaining to the different eBay marketplaces. In addition to marketplace information, the API also has operations that get information that helps sellers list items on eBay.
 *
 * The version of the OpenAPI document: v1.6.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPictogram.h
 *
 * A type that describes pictograms for hazardous materials labels.
 */

#ifndef OAIPictogram_H
#define OAIPictogram_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPictogram : public OAIObject {
public:
    OAIPictogram();
    OAIPictogram(QString json);
    ~OAIPictogram() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPictogramDescription() const;
    void setPictogramDescription(const QString &pictogram_description);
    bool is_pictogram_description_Set() const;
    bool is_pictogram_description_Valid() const;

    QString getPictogramId() const;
    void setPictogramId(const QString &pictogram_id);
    bool is_pictogram_id_Set() const;
    bool is_pictogram_id_Valid() const;

    QString getPictogramUrl() const;
    void setPictogramUrl(const QString &pictogram_url);
    bool is_pictogram_url_Set() const;
    bool is_pictogram_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_pictogram_description;
    bool m_pictogram_description_isSet;
    bool m_pictogram_description_isValid;

    QString m_pictogram_id;
    bool m_pictogram_id_isSet;
    bool m_pictogram_id_isValid;

    QString m_pictogram_url;
    bool m_pictogram_url_isSet;
    bool m_pictogram_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPictogram)

#endif // OAIPictogram_H
