# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.extended_producer_responsibility import ExtendedProducerResponsibility
from openapi_server import util


class ExtendedProducerResponsibilityPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_id: str=None, category_tree_id: str=None, supported_attributes: List[ExtendedProducerResponsibility]=None):
        """ExtendedProducerResponsibilityPolicy - a model defined in OpenAPI

        :param category_id: The category_id of this ExtendedProducerResponsibilityPolicy.
        :param category_tree_id: The category_tree_id of this ExtendedProducerResponsibilityPolicy.
        :param supported_attributes: The supported_attributes of this ExtendedProducerResponsibilityPolicy.
        """
        self.openapi_types = {
            'category_id': str,
            'category_tree_id': str,
            'supported_attributes': List[ExtendedProducerResponsibility]
        }

        self.attribute_map = {
            'category_id': 'categoryId',
            'category_tree_id': 'categoryTreeId',
            'supported_attributes': 'supportedAttributes'
        }

        self._category_id = category_id
        self._category_tree_id = category_tree_id
        self._supported_attributes = supported_attributes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExtendedProducerResponsibilityPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExtendedProducerResponsibilityPolicy of this ExtendedProducerResponsibilityPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_id(self):
        """Gets the category_id of this ExtendedProducerResponsibilityPolicy.

        The unique identifier for the category under which the policy applies.

        :return: The category_id of this ExtendedProducerResponsibilityPolicy.
        :rtype: str
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this ExtendedProducerResponsibilityPolicy.

        The unique identifier for the category under which the policy applies.

        :param category_id: The category_id of this ExtendedProducerResponsibilityPolicy.
        :type category_id: str
        """

        self._category_id = category_id

    @property
    def category_tree_id(self):
        """Gets the category_tree_id of this ExtendedProducerResponsibilityPolicy.

        The unique identifier for the category tree under which the policy applies.

        :return: The category_tree_id of this ExtendedProducerResponsibilityPolicy.
        :rtype: str
        """
        return self._category_tree_id

    @category_tree_id.setter
    def category_tree_id(self, category_tree_id):
        """Sets the category_tree_id of this ExtendedProducerResponsibilityPolicy.

        The unique identifier for the category tree under which the policy applies.

        :param category_tree_id: The category_tree_id of this ExtendedProducerResponsibilityPolicy.
        :type category_tree_id: str
        """

        self._category_tree_id = category_tree_id

    @property
    def supported_attributes(self):
        """Gets the supported_attributes of this ExtendedProducerResponsibilityPolicy.

        The details regarding the attributes included in the policy, such as their usage guidelines and whether they can be specified at the listing variation level.

        :return: The supported_attributes of this ExtendedProducerResponsibilityPolicy.
        :rtype: List[ExtendedProducerResponsibility]
        """
        return self._supported_attributes

    @supported_attributes.setter
    def supported_attributes(self, supported_attributes):
        """Sets the supported_attributes of this ExtendedProducerResponsibilityPolicy.

        The details regarding the attributes included in the policy, such as their usage guidelines and whether they can be specified at the listing variation level.

        :param supported_attributes: The supported_attributes of this ExtendedProducerResponsibilityPolicy.
        :type supported_attributes: List[ExtendedProducerResponsibility]
        """

        self._supported_attributes = supported_attributes
