# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Pictogram(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pictogram_description: str=None, pictogram_id: str=None, pictogram_url: str=None):
        """Pictogram - a model defined in OpenAPI

        :param pictogram_description: The pictogram_description of this Pictogram.
        :param pictogram_id: The pictogram_id of this Pictogram.
        :param pictogram_url: The pictogram_url of this Pictogram.
        """
        self.openapi_types = {
            'pictogram_description': str,
            'pictogram_id': str,
            'pictogram_url': str
        }

        self.attribute_map = {
            'pictogram_description': 'pictogramDescription',
            'pictogram_id': 'pictogramId',
            'pictogram_url': 'pictogramUrl'
        }

        self._pictogram_description = pictogram_description
        self._pictogram_id = pictogram_id
        self._pictogram_url = pictogram_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Pictogram':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Pictogram of this Pictogram.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pictogram_description(self):
        """Gets the pictogram_description of this Pictogram.

        The description of the pictogram localized to the default language of the marketplace. For sample values, see <a href='/api-docs/sell/static/metadata/feature-regulatorhazmatcontainer.html#Pictogra'>Pictogram sample values</a>.

        :return: The pictogram_description of this Pictogram.
        :rtype: str
        """
        return self._pictogram_description

    @pictogram_description.setter
    def pictogram_description(self, pictogram_description):
        """Sets the pictogram_description of this Pictogram.

        The description of the pictogram localized to the default language of the marketplace. For sample values, see <a href='/api-docs/sell/static/metadata/feature-regulatorhazmatcontainer.html#Pictogra'>Pictogram sample values</a>.

        :param pictogram_description: The pictogram_description of this Pictogram.
        :type pictogram_description: str
        """

        self._pictogram_description = pictogram_description

    @property
    def pictogram_id(self):
        """Gets the pictogram_id of this Pictogram.

        The identifier of the pictogram. For sample values, see <a href='/api-docs/sell/static/metadata/feature-regulatorhazmatcontainer.html#Pictogra'>Pictogram sample values</a>.

        :return: The pictogram_id of this Pictogram.
        :rtype: str
        """
        return self._pictogram_id

    @pictogram_id.setter
    def pictogram_id(self, pictogram_id):
        """Sets the pictogram_id of this Pictogram.

        The identifier of the pictogram. For sample values, see <a href='/api-docs/sell/static/metadata/feature-regulatorhazmatcontainer.html#Pictogra'>Pictogram sample values</a>.

        :param pictogram_id: The pictogram_id of this Pictogram.
        :type pictogram_id: str
        """

        self._pictogram_id = pictogram_id

    @property
    def pictogram_url(self):
        """Gets the pictogram_url of this Pictogram.

        The URL of the pictogram.

        :return: The pictogram_url of this Pictogram.
        :rtype: str
        """
        return self._pictogram_url

    @pictogram_url.setter
    def pictogram_url(self, pictogram_url):
        """Sets the pictogram_url of this Pictogram.

        The URL of the pictogram.

        :param pictogram_url: The pictogram_url of this Pictogram.
        :type pictogram_url: str
        """

        self._pictogram_url = pictogram_url
