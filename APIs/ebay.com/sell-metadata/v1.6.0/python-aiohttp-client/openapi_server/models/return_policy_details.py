# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.time_duration import TimeDuration
from openapi_server import util


class ReturnPolicyDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy_description_enabled: bool=None, refund_methods: List[str]=None, return_methods: List[str]=None, return_periods: List[TimeDuration]=None, return_shipping_cost_payers: List[str]=None, returns_acceptance_enabled: bool=None):
        """ReturnPolicyDetails - a model defined in OpenAPI

        :param policy_description_enabled: The policy_description_enabled of this ReturnPolicyDetails.
        :param refund_methods: The refund_methods of this ReturnPolicyDetails.
        :param return_methods: The return_methods of this ReturnPolicyDetails.
        :param return_periods: The return_periods of this ReturnPolicyDetails.
        :param return_shipping_cost_payers: The return_shipping_cost_payers of this ReturnPolicyDetails.
        :param returns_acceptance_enabled: The returns_acceptance_enabled of this ReturnPolicyDetails.
        """
        self.openapi_types = {
            'policy_description_enabled': bool,
            'refund_methods': List[str],
            'return_methods': List[str],
            'return_periods': List[TimeDuration],
            'return_shipping_cost_payers': List[str],
            'returns_acceptance_enabled': bool
        }

        self.attribute_map = {
            'policy_description_enabled': 'policyDescriptionEnabled',
            'refund_methods': 'refundMethods',
            'return_methods': 'returnMethods',
            'return_periods': 'returnPeriods',
            'return_shipping_cost_payers': 'returnShippingCostPayers',
            'returns_acceptance_enabled': 'returnsAcceptanceEnabled'
        }

        self._policy_description_enabled = policy_description_enabled
        self._refund_methods = refund_methods
        self._return_methods = return_methods
        self._return_periods = return_periods
        self._return_shipping_cost_payers = return_shipping_cost_payers
        self._returns_acceptance_enabled = returns_acceptance_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReturnPolicyDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReturnPolicyDetails of this ReturnPolicyDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy_description_enabled(self):
        """Gets the policy_description_enabled of this ReturnPolicyDetails.

        If set to <code>true</code>, this flag indicates you can supply a detailed return policy description within your return policy (for example, by populating the <b>returnInstructions</b> field in the Account API's <b>createReturnPolicy</b>). User-supplied return policy details are allowed only in the DE, ES, FR, and IT marketplaces.

        :return: The policy_description_enabled of this ReturnPolicyDetails.
        :rtype: bool
        """
        return self._policy_description_enabled

    @policy_description_enabled.setter
    def policy_description_enabled(self, policy_description_enabled):
        """Sets the policy_description_enabled of this ReturnPolicyDetails.

        If set to <code>true</code>, this flag indicates you can supply a detailed return policy description within your return policy (for example, by populating the <b>returnInstructions</b> field in the Account API's <b>createReturnPolicy</b>). User-supplied return policy details are allowed only in the DE, ES, FR, and IT marketplaces.

        :param policy_description_enabled: The policy_description_enabled of this ReturnPolicyDetails.
        :type policy_description_enabled: bool
        """

        self._policy_description_enabled = policy_description_enabled

    @property
    def refund_methods(self):
        """Gets the refund_methods of this ReturnPolicyDetails.

        A list of refund methods allowed for the associated category.

        :return: The refund_methods of this ReturnPolicyDetails.
        :rtype: List[str]
        """
        return self._refund_methods

    @refund_methods.setter
    def refund_methods(self, refund_methods):
        """Sets the refund_methods of this ReturnPolicyDetails.

        A list of refund methods allowed for the associated category.

        :param refund_methods: The refund_methods of this ReturnPolicyDetails.
        :type refund_methods: List[str]
        """

        self._refund_methods = refund_methods

    @property
    def return_methods(self):
        """Gets the return_methods of this ReturnPolicyDetails.

        A list of return methods allowed for the associated category.

        :return: The return_methods of this ReturnPolicyDetails.
        :rtype: List[str]
        """
        return self._return_methods

    @return_methods.setter
    def return_methods(self, return_methods):
        """Sets the return_methods of this ReturnPolicyDetails.

        A list of return methods allowed for the associated category.

        :param return_methods: The return_methods of this ReturnPolicyDetails.
        :type return_methods: List[str]
        """

        self._return_methods = return_methods

    @property
    def return_periods(self):
        """Gets the return_periods of this ReturnPolicyDetails.

        A list of return periods allowed for the associated category.  <br><br>Note that different APIs require you to enter the return period in different ways. For example, the Account API uses the complex <b>TimeDuration</b> type, which takes two values (a <b>unit</b> and a <b>value</b>), whereas the Trading API takes a single value (such as <code>Days_30</code>).

        :return: The return_periods of this ReturnPolicyDetails.
        :rtype: List[TimeDuration]
        """
        return self._return_periods

    @return_periods.setter
    def return_periods(self, return_periods):
        """Sets the return_periods of this ReturnPolicyDetails.

        A list of return periods allowed for the associated category.  <br><br>Note that different APIs require you to enter the return period in different ways. For example, the Account API uses the complex <b>TimeDuration</b> type, which takes two values (a <b>unit</b> and a <b>value</b>), whereas the Trading API takes a single value (such as <code>Days_30</code>).

        :param return_periods: The return_periods of this ReturnPolicyDetails.
        :type return_periods: List[TimeDuration]
        """

        self._return_periods = return_periods

    @property
    def return_shipping_cost_payers(self):
        """Gets the return_shipping_cost_payers of this ReturnPolicyDetails.

        A list of allowed values for who pays for the return shipping cost.  <br><br>Note that for SNAD returns, the seller is always responsible for the return shipping cost.

        :return: The return_shipping_cost_payers of this ReturnPolicyDetails.
        :rtype: List[str]
        """
        return self._return_shipping_cost_payers

    @return_shipping_cost_payers.setter
    def return_shipping_cost_payers(self, return_shipping_cost_payers):
        """Sets the return_shipping_cost_payers of this ReturnPolicyDetails.

        A list of allowed values for who pays for the return shipping cost.  <br><br>Note that for SNAD returns, the seller is always responsible for the return shipping cost.

        :param return_shipping_cost_payers: The return_shipping_cost_payers of this ReturnPolicyDetails.
        :type return_shipping_cost_payers: List[str]
        """

        self._return_shipping_cost_payers = return_shipping_cost_payers

    @property
    def returns_acceptance_enabled(self):
        """Gets the returns_acceptance_enabled of this ReturnPolicyDetails.

        If set to <code>true</code>, this flag indicates the seller can configure how they handle domestic returns.

        :return: The returns_acceptance_enabled of this ReturnPolicyDetails.
        :rtype: bool
        """
        return self._returns_acceptance_enabled

    @returns_acceptance_enabled.setter
    def returns_acceptance_enabled(self, returns_acceptance_enabled):
        """Sets the returns_acceptance_enabled of this ReturnPolicyDetails.

        If set to <code>true</code>, this flag indicates the seller can configure how they handle domestic returns.

        :param returns_acceptance_enabled: The returns_acceptance_enabled of this ReturnPolicyDetails.
        :type returns_acceptance_enabled: bool
        """

        self._returns_acceptance_enabled = returns_acceptance_enabled
