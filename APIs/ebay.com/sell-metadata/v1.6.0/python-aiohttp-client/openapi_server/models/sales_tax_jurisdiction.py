# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SalesTaxJurisdiction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sales_tax_jurisdiction_id: str=None):
        """SalesTaxJurisdiction - a model defined in OpenAPI

        :param sales_tax_jurisdiction_id: The sales_tax_jurisdiction_id of this SalesTaxJurisdiction.
        """
        self.openapi_types = {
            'sales_tax_jurisdiction_id': str
        }

        self.attribute_map = {
            'sales_tax_jurisdiction_id': 'salesTaxJurisdictionId'
        }

        self._sales_tax_jurisdiction_id = sales_tax_jurisdiction_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SalesTaxJurisdiction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SalesTaxJurisdiction of this SalesTaxJurisdiction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sales_tax_jurisdiction_id(self):
        """Gets the sales_tax_jurisdiction_id of this SalesTaxJurisdiction.

        The unique ID for a sales tax jurisdiction.

        :return: The sales_tax_jurisdiction_id of this SalesTaxJurisdiction.
        :rtype: str
        """
        return self._sales_tax_jurisdiction_id

    @sales_tax_jurisdiction_id.setter
    def sales_tax_jurisdiction_id(self, sales_tax_jurisdiction_id):
        """Sets the sales_tax_jurisdiction_id of this SalesTaxJurisdiction.

        The unique ID for a sales tax jurisdiction.

        :param sales_tax_jurisdiction_id: The sales_tax_jurisdiction_id of this SalesTaxJurisdiction.
        :type sales_tax_jurisdiction_id: str
        """

        self._sales_tax_jurisdiction_id = sales_tax_jurisdiction_id
