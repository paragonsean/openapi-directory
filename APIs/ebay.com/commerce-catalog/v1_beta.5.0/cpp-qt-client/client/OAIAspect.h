/**
 * Catalog API
 * The Catalog API allows users to search for and locate an eBay catalog product that is a direct match for the product that they wish to sell. Listing against an eBay catalog product helps insure that all listings (based off of that catalog product) have complete and accurate information. In addition to helping to create high-quality listings, another benefit to the seller of using catalog information to create listings is that much of the details of the listing will be prefilled, including the listing title, the listing description, the item specifics, and a stock image for the product (if available). Sellers will not have to enter item specifics themselves, and the overall listing process is a lot faster and easier.
 *
 * The version of the OpenAPI document: v1_beta.5.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAspect.h
 *
 * This type contains the name and values of a category aspect.
 */

#ifndef OAIAspect_H
#define OAIAspect_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAspect : public OAIObject {
public:
    OAIAspect();
    OAIAspect(QString json);
    ~OAIAspect() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLocalizedName() const;
    void setLocalizedName(const QString &localized_name);
    bool is_localized_name_Set() const;
    bool is_localized_name_Valid() const;

    QList<QString> getLocalizedValues() const;
    void setLocalizedValues(const QList<QString> &localized_values);
    bool is_localized_values_Set() const;
    bool is_localized_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_localized_name;
    bool m_localized_name_isSet;
    bool m_localized_name_isValid;

    QList<QString> m_localized_values;
    bool m_localized_values_isSet;
    bool m_localized_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAspect)

#endif // OAIAspect_H
