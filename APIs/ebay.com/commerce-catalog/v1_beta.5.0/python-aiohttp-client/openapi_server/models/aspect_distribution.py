# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.aspect_value_distribution import AspectValueDistribution
from openapi_server import util


class AspectDistribution(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aspect_value_distributions: List[AspectValueDistribution]=None, localized_aspect_name: str=None):
        """AspectDistribution - a model defined in OpenAPI

        :param aspect_value_distributions: The aspect_value_distributions of this AspectDistribution.
        :param localized_aspect_name: The localized_aspect_name of this AspectDistribution.
        """
        self.openapi_types = {
            'aspect_value_distributions': List[AspectValueDistribution],
            'localized_aspect_name': str
        }

        self.attribute_map = {
            'aspect_value_distributions': 'aspectValueDistributions',
            'localized_aspect_name': 'localizedAspectName'
        }

        self._aspect_value_distributions = aspect_value_distributions
        self._localized_aspect_name = localized_aspect_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AspectDistribution':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AspectDistribution of this AspectDistribution.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aspect_value_distributions(self):
        """Gets the aspect_value_distributions of this AspectDistribution.

        Contains information about one or more values of the category aspect identified by <b>localizedAspectName</b>. 

        :return: The aspect_value_distributions of this AspectDistribution.
        :rtype: List[AspectValueDistribution]
        """
        return self._aspect_value_distributions

    @aspect_value_distributions.setter
    def aspect_value_distributions(self, aspect_value_distributions):
        """Sets the aspect_value_distributions of this AspectDistribution.

        Contains information about one or more values of the category aspect identified by <b>localizedAspectName</b>. 

        :param aspect_value_distributions: The aspect_value_distributions of this AspectDistribution.
        :type aspect_value_distributions: List[AspectValueDistribution]
        """

        self._aspect_value_distributions = aspect_value_distributions

    @property
    def localized_aspect_name(self):
        """Gets the localized_aspect_name of this AspectDistribution.

        The localized name of an aspect that is associated with the category identified by <b>dominantCategoryId</b>.

        :return: The localized_aspect_name of this AspectDistribution.
        :rtype: str
        """
        return self._localized_aspect_name

    @localized_aspect_name.setter
    def localized_aspect_name(self, localized_aspect_name):
        """Sets the localized_aspect_name of this AspectDistribution.

        The localized name of an aspect that is associated with the category identified by <b>dominantCategoryId</b>.

        :param localized_aspect_name: The localized_aspect_name of this AspectDistribution.
        :type localized_aspect_name: str
        """

        self._localized_aspect_name = localized_aspect_name
