# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.aspect import Aspect
from openapi_server.models.image import Image
from openapi_server import util


class ProductSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_images: List[Image]=None, aspects: List[Aspect]=None, brand: str=None, ean: List[str]=None, epid: str=None, gtin: List[str]=None, image: Image=None, isbn: List[str]=None, mpn: List[str]=None, product_href: str=None, product_web_url: str=None, title: str=None, upc: List[str]=None):
        """ProductSummary - a model defined in OpenAPI

        :param additional_images: The additional_images of this ProductSummary.
        :param aspects: The aspects of this ProductSummary.
        :param brand: The brand of this ProductSummary.
        :param ean: The ean of this ProductSummary.
        :param epid: The epid of this ProductSummary.
        :param gtin: The gtin of this ProductSummary.
        :param image: The image of this ProductSummary.
        :param isbn: The isbn of this ProductSummary.
        :param mpn: The mpn of this ProductSummary.
        :param product_href: The product_href of this ProductSummary.
        :param product_web_url: The product_web_url of this ProductSummary.
        :param title: The title of this ProductSummary.
        :param upc: The upc of this ProductSummary.
        """
        self.openapi_types = {
            'additional_images': List[Image],
            'aspects': List[Aspect],
            'brand': str,
            'ean': List[str],
            'epid': str,
            'gtin': List[str],
            'image': Image,
            'isbn': List[str],
            'mpn': List[str],
            'product_href': str,
            'product_web_url': str,
            'title': str,
            'upc': List[str]
        }

        self.attribute_map = {
            'additional_images': 'additionalImages',
            'aspects': 'aspects',
            'brand': 'brand',
            'ean': 'ean',
            'epid': 'epid',
            'gtin': 'gtin',
            'image': 'image',
            'isbn': 'isbn',
            'mpn': 'mpn',
            'product_href': 'productHref',
            'product_web_url': 'productWebUrl',
            'title': 'title',
            'upc': 'upc'
        }

        self._additional_images = additional_images
        self._aspects = aspects
        self._brand = brand
        self._ean = ean
        self._epid = epid
        self._gtin = gtin
        self._image = image
        self._isbn = isbn
        self._mpn = mpn
        self._product_href = product_href
        self._product_web_url = product_web_url
        self._title = title
        self._upc = upc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductSummary of this ProductSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_images(self):
        """Gets the additional_images of this ProductSummary.

        Contains information about additional images associated with this product. For the primary image, see the <b>image</b> container.

        :return: The additional_images of this ProductSummary.
        :rtype: List[Image]
        """
        return self._additional_images

    @additional_images.setter
    def additional_images(self, additional_images):
        """Sets the additional_images of this ProductSummary.

        Contains information about additional images associated with this product. For the primary image, see the <b>image</b> container.

        :param additional_images: The additional_images of this ProductSummary.
        :type additional_images: List[Image]
        """

        self._additional_images = additional_images

    @property
    def aspects(self):
        """Gets the aspects of this ProductSummary.

        Contains an array of the category aspects and their values that are associated with this product.

        :return: The aspects of this ProductSummary.
        :rtype: List[Aspect]
        """
        return self._aspects

    @aspects.setter
    def aspects(self, aspects):
        """Sets the aspects of this ProductSummary.

        Contains an array of the category aspects and their values that are associated with this product.

        :param aspects: The aspects of this ProductSummary.
        :type aspects: List[Aspect]
        """

        self._aspects = aspects

    @property
    def brand(self):
        """Gets the brand of this ProductSummary.

        The manufacturer's brand name for this product.

        :return: The brand of this ProductSummary.
        :rtype: str
        """
        return self._brand

    @brand.setter
    def brand(self, brand):
        """Sets the brand of this ProductSummary.

        The manufacturer's brand name for this product.

        :param brand: The brand of this ProductSummary.
        :type brand: str
        """

        self._brand = brand

    @property
    def ean(self):
        """Gets the ean of this ProductSummary.

        A list of all European Article Numbers (EANs) that identify this product.

        :return: The ean of this ProductSummary.
        :rtype: List[str]
        """
        return self._ean

    @ean.setter
    def ean(self, ean):
        """Sets the ean of this ProductSummary.

        A list of all European Article Numbers (EANs) that identify this product.

        :param ean: The ean of this ProductSummary.
        :type ean: List[str]
        """

        self._ean = ean

    @property
    def epid(self):
        """Gets the epid of this ProductSummary.

        The eBay product ID of this product.

        :return: The epid of this ProductSummary.
        :rtype: str
        """
        return self._epid

    @epid.setter
    def epid(self, epid):
        """Sets the epid of this ProductSummary.

        The eBay product ID of this product.

        :param epid: The epid of this ProductSummary.
        :type epid: str
        """

        self._epid = epid

    @property
    def gtin(self):
        """Gets the gtin of this ProductSummary.

        A list of all GTINs that identify this product. This includes all of the values returned in the <b>ean</b>, <b>isbn</b>, and <b>upc</b> fields.

        :return: The gtin of this ProductSummary.
        :rtype: List[str]
        """
        return self._gtin

    @gtin.setter
    def gtin(self, gtin):
        """Sets the gtin of this ProductSummary.

        A list of all GTINs that identify this product. This includes all of the values returned in the <b>ean</b>, <b>isbn</b>, and <b>upc</b> fields.

        :param gtin: The gtin of this ProductSummary.
        :type gtin: List[str]
        """

        self._gtin = gtin

    @property
    def image(self):
        """Gets the image of this ProductSummary.


        :return: The image of this ProductSummary.
        :rtype: Image
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this ProductSummary.


        :param image: The image of this ProductSummary.
        :type image: Image
        """

        self._image = image

    @property
    def isbn(self):
        """Gets the isbn of this ProductSummary.

        A list of all International Standard Book Numbers (ISBNs) that identify this product.

        :return: The isbn of this ProductSummary.
        :rtype: List[str]
        """
        return self._isbn

    @isbn.setter
    def isbn(self, isbn):
        """Sets the isbn of this ProductSummary.

        A list of all International Standard Book Numbers (ISBNs) that identify this product.

        :param isbn: The isbn of this ProductSummary.
        :type isbn: List[str]
        """

        self._isbn = isbn

    @property
    def mpn(self):
        """Gets the mpn of this ProductSummary.

        A list of all Manufacturer Product Number (MPN) values that the manufacturer uses to identify this product.

        :return: The mpn of this ProductSummary.
        :rtype: List[str]
        """
        return self._mpn

    @mpn.setter
    def mpn(self, mpn):
        """Sets the mpn of this ProductSummary.

        A list of all Manufacturer Product Number (MPN) values that the manufacturer uses to identify this product.

        :param mpn: The mpn of this ProductSummary.
        :type mpn: List[str]
        """

        self._mpn = mpn

    @property
    def product_href(self):
        """Gets the product_href of this ProductSummary.

        The URI of the <b>getProduct</b> call request that retrieves this product's details.

        :return: The product_href of this ProductSummary.
        :rtype: str
        """
        return self._product_href

    @product_href.setter
    def product_href(self, product_href):
        """Sets the product_href of this ProductSummary.

        The URI of the <b>getProduct</b> call request that retrieves this product's details.

        :param product_href: The product_href of this ProductSummary.
        :type product_href: str
        """

        self._product_href = product_href

    @property
    def product_web_url(self):
        """Gets the product_web_url of this ProductSummary.

        The URL for this product's eBay product page.

        :return: The product_web_url of this ProductSummary.
        :rtype: str
        """
        return self._product_web_url

    @product_web_url.setter
    def product_web_url(self, product_web_url):
        """Sets the product_web_url of this ProductSummary.

        The URL for this product's eBay product page.

        :param product_web_url: The product_web_url of this ProductSummary.
        :type product_web_url: str
        """

        self._product_web_url = product_web_url

    @property
    def title(self):
        """Gets the title of this ProductSummary.

        The title of this product on eBay.

        :return: The title of this ProductSummary.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ProductSummary.

        The title of this product on eBay.

        :param title: The title of this ProductSummary.
        :type title: str
        """

        self._title = title

    @property
    def upc(self):
        """Gets the upc of this ProductSummary.

        A list of Universal Product Codes (UPCs) that identify this product.

        :return: The upc of this ProductSummary.
        :rtype: List[str]
        """
        return self._upc

    @upc.setter
    def upc(self, upc):
        """Sets the upc of this ProductSummary.

        A list of Universal Product Codes (UPCs) that identify this product.

        :param upc: The upc of this ProductSummary.
        :type upc: List[str]
        """

        self._upc = upc
