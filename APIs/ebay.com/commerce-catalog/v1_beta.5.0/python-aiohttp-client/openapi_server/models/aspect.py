# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Aspect(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, localized_name: str=None, localized_values: List[str]=None):
        """Aspect - a model defined in OpenAPI

        :param localized_name: The localized_name of this Aspect.
        :param localized_values: The localized_values of this Aspect.
        """
        self.openapi_types = {
            'localized_name': str,
            'localized_values': List[str]
        }

        self.attribute_map = {
            'localized_name': 'localizedName',
            'localized_values': 'localizedValues'
        }

        self._localized_name = localized_name
        self._localized_values = localized_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Aspect':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Aspect of this Aspect.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def localized_name(self):
        """Gets the localized_name of this Aspect.

        The localized name of this category aspect.

        :return: The localized_name of this Aspect.
        :rtype: str
        """
        return self._localized_name

    @localized_name.setter
    def localized_name(self, localized_name):
        """Sets the localized_name of this Aspect.

        The localized name of this category aspect.

        :param localized_name: The localized_name of this Aspect.
        :type localized_name: str
        """

        self._localized_name = localized_name

    @property
    def localized_values(self):
        """Gets the localized_values of this Aspect.

        A list of the localized values of this category aspect.

        :return: The localized_values of this Aspect.
        :rtype: List[str]
        """
        return self._localized_values

    @localized_values.setter
    def localized_values(self, localized_values):
        """Sets the localized_values of this Aspect.

        A list of the localized values of this category aspect.

        :param localized_values: The localized_values of this Aspect.
        :type localized_values: List[str]
        """

        self._localized_values = localized_values
