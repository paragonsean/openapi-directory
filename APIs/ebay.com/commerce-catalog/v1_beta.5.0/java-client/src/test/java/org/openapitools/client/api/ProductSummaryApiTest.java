/*
 * Catalog API
 * The Catalog API allows users to search for and locate an eBay catalog product that is a direct match for the product that they wish to sell. Listing against an eBay catalog product helps insure that all listings (based off of that catalog product) have complete and accurate information. In addition to helping to create high-quality listings, another benefit to the seller of using catalog information to create listings is that much of the details of the listing will be prefilled, including the listing title, the listing description, the item specifics, and a stock image for the product (if available). Sellers will not have to enter item specifics themselves, and the overall listing process is a lot faster and easier.
 *
 * The version of the OpenAPI document: v1_beta.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ProductSearchResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductSummaryApi
 */
@Disabled
public class ProductSummaryApiTest {

    private final ProductSummaryApi api = new ProductSummaryApi();

    /**
     * This method searches for and retrieves summaries of one or more products in the eBay catalog that match the search criteria provided by a seller. The seller can use the summaries to select the product in the eBay catalog that corresponds to the item that the seller wants to offer for sale. When a corresponding product is found and adopted by the seller, eBay will use the product information to populate the item listing. The criteria supported by &lt;b&gt;search&lt;/b&gt; include keywords, product categories, and category aspects. To see the full details of a selected product, use the &lt;b&gt;getProduct&lt;/b&gt; call. &lt;br /&gt;&lt;br /&gt; In addition to product summaries, this method can also be used to identify &lt;i&gt;refinements&lt;/i&gt;, which help you to better pinpoint the product you&#39;re looking for. A refinement consists of one or more &lt;i&gt;aspect&lt;/i&gt; values and a count of the number of times that each value has been used in previous eBay listings. An aspect is a property (e.g. color or size) of an eBay category, used by sellers to provide details about the items they&#39;re listing. The &lt;b&gt;refinement&lt;/b&gt; container is returned when you include the &lt;b&gt;fieldGroups&lt;/b&gt; query parameter in the request with a value of &lt;code&gt;ASPECT_REFINEMENTS&lt;/code&gt; or &lt;code&gt;FULL&lt;/code&gt;. &lt;br /&gt;&lt;br /&gt; &lt;span style&#x3D;\&quot;padding: 15px 20px; display: block; border: 1px solid #cccccc\&quot;&gt;&lt;b&gt;Example&lt;/b&gt; &lt;br /&gt;A seller wants to find a product that is \&quot;gray\&quot; in color, but doesn&#39;t know what term the manufacturer uses for that color. It might be &lt;code&gt;Silver&lt;/code&gt;, &lt;code&gt;Brushed Nickel&lt;/code&gt;, &lt;code&gt;Pewter&lt;/code&gt;, or even &lt;code&gt;Grey&lt;/code&gt;. The returned &lt;b&gt;refinement&lt;/b&gt; container identifies all aspects that have been used in past listings for products that match your search criteria, along with all of the values those aspects have taken, and the number of times each value was used. You can use this data to present the seller with a histogram of the values of each aspect. The seller can see which color values have been used in the past, and how frequently they have been used, and selects the most likely value or values for their product. You issue the &lt;b&gt;search&lt;/b&gt; method again with those values in the &lt;b&gt;aspect_filter&lt;/b&gt; parameter to narrow down the collection of products returned by the call.&lt;/span&gt; &lt;br /&gt;&lt;br /&gt; Although all query parameters are optional, this method must include at least the &lt;b&gt;q&lt;/b&gt; parameter, or the &lt;b&gt;category_ids&lt;/b&gt;, &lt;b&gt;gtin&lt;/b&gt;, or &lt;b&gt;mpn&lt;/b&gt; parameter with a valid value. If you provide more than one of these parameters, they will be combined with a logical AND to further refine the returned collection of matching products. &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; This method requires that certain special characters in the query parameters be percent-encoded: &lt;br /&gt;&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;(space)&lt;/code&gt; &#x3D; &lt;code&gt;%20&lt;/code&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;,&lt;/code&gt; &#x3D; &lt;code&gt;%2C&lt;/code&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;:&lt;/code&gt; &#x3D; &lt;code&gt;%3A&lt;/code&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;[&lt;/code&gt; &#x3D; &lt;code&gt;%5B&lt;/code&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;]&lt;/code&gt; &#x3D; &lt;code&gt;%5D&lt;/code&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;{&lt;/code&gt; &#x3D; &lt;code&gt;%7B&lt;/code&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;|&lt;/code&gt; &#x3D; &lt;code&gt;%7C&lt;/code&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;}&lt;/code&gt; &#x3D; &lt;code&gt;%7D&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; This requirement applies to all query parameter values. However, for readability, method examples and samples in this documentation will not use the encoding.&lt;/span&gt; &lt;br /&gt;&lt;br /&gt; This method returns product summaries rather than the full details of the products. To retrieve the full details of a product, use the &lt;b&gt;getProduct&lt;/b&gt; method with an ePID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchTest() throws ApiException {
        String X_EBAY_C_MARKETPLACE_ID = null;
        String aspectFilter = null;
        String categoryIds = null;
        String fieldgroups = null;
        String gtin = null;
        String limit = null;
        String mpn = null;
        String offset = null;
        String q = null;
        ProductSearchResponse response = api.search(X_EBAY_C_MARKETPLACE_ID, aspectFilter, categoryIds, fieldgroups, gtin, limit, mpn, offset, q);
        // TODO: test validations
    }

}
