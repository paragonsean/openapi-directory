/*
 * Catalog API
 * The Catalog API allows users to search for and locate an eBay catalog product that is a direct match for the product that they wish to sell. Listing against an eBay catalog product helps insure that all listings (based off of that catalog product) have complete and accurate information. In addition to helping to create high-quality listings, another benefit to the seller of using catalog information to create listings is that much of the details of the listing will be prefilled, including the listing title, the listing description, the item specifics, and a stock image for the product (if available). Sellers will not have to enter item specifics themselves, and the overall listing process is a lot faster and easier.
 *
 * The version of the OpenAPI document: v1_beta.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ProductSummary;
import org.openapitools.client.model.Refinement;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ProductSearchResponse
 */
public class ProductSearchResponseTest {
    private final ProductSearchResponse model = new ProductSearchResponse();

    /**
     * Model tests for ProductSearchResponse
     */
    @Test
    public void testProductSearchResponse() {
        // TODO: test ProductSearchResponse
    }

    /**
     * Test the property 'href'
     */
    @Test
    public void hrefTest() {
        // TODO: test href
    }

    /**
     * Test the property 'limit'
     */
    @Test
    public void limitTest() {
        // TODO: test limit
    }

    /**
     * Test the property 'next'
     */
    @Test
    public void nextTest() {
        // TODO: test next
    }

    /**
     * Test the property 'offset'
     */
    @Test
    public void offsetTest() {
        // TODO: test offset
    }

    /**
     * Test the property 'prev'
     */
    @Test
    public void prevTest() {
        // TODO: test prev
    }

    /**
     * Test the property 'productSummaries'
     */
    @Test
    public void productSummariesTest() {
        // TODO: test productSummaries
    }

    /**
     * Test the property 'refinement'
     */
    @Test
    public void refinementTest() {
        // TODO: test refinement
    }

    /**
     * Test the property 'total'
     */
    @Test
    public void totalTest() {
        // TODO: test total
    }

}
