/**
 * Recommendation API
 * The <b>Recommendation API</b> returns information that sellers can use to optimize the configuration of their listings on eBay. <br><br>Currently, the API contains a single method, <b>findListingRecommendations</b>. This method provides information that sellers can use to configure Promoted Listings ad campaigns to maximize the visibility of their items in the eBay marketplace.
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIError.h
 *
 * This type defines the fields that can be returned in an error.
 */

#ifndef OAIError_H
#define OAIError_H

#include <QJsonObject>

#include "OAIErrorParameter.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIErrorParameter;

class OAIError : public OAIObject {
public:
    OAIError();
    OAIError(QString json);
    ~OAIError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    qint32 getErrorId() const;
    void setErrorId(const qint32 &error_id);
    bool is_error_id_Set() const;
    bool is_error_id_Valid() const;

    QList<QString> getInputRefIds() const;
    void setInputRefIds(const QList<QString> &input_ref_ids);
    bool is_input_ref_ids_Set() const;
    bool is_input_ref_ids_Valid() const;

    QString getLongMessage() const;
    void setLongMessage(const QString &long_message);
    bool is_long_message_Set() const;
    bool is_long_message_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QList<QString> getOutputRefIds() const;
    void setOutputRefIds(const QList<QString> &output_ref_ids);
    bool is_output_ref_ids_Set() const;
    bool is_output_ref_ids_Valid() const;

    QList<OAIErrorParameter> getParameters() const;
    void setParameters(const QList<OAIErrorParameter> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QString getSubdomain() const;
    void setSubdomain(const QString &subdomain);
    bool is_subdomain_Set() const;
    bool is_subdomain_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    qint32 m_error_id;
    bool m_error_id_isSet;
    bool m_error_id_isValid;

    QList<QString> m_input_ref_ids;
    bool m_input_ref_ids_isSet;
    bool m_input_ref_ids_isValid;

    QString m_long_message;
    bool m_long_message_isSet;
    bool m_long_message_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QList<QString> m_output_ref_ids;
    bool m_output_ref_ids_isSet;
    bool m_output_ref_ids_isValid;

    QList<OAIErrorParameter> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QString m_subdomain;
    bool m_subdomain_isSet;
    bool m_subdomain_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIError)

#endif // OAIError_H
