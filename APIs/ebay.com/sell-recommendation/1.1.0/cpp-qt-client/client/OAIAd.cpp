/**
 * Recommendation API
 * The <b>Recommendation API</b> returns information that sellers can use to optimize the configuration of their listings on eBay. <br><br>Currently, the API contains a single method, <b>findListingRecommendations</b>. This method provides information that sellers can use to configure Promoted Listings ad campaigns to maximize the visibility of their items in the eBay marketplace.
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAd.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAd::OAIAd(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAd::OAIAd() {
    this->initializeModel();
}

OAIAd::~OAIAd() {}

void OAIAd::initializeModel() {

    m_bid_percentages_isSet = false;
    m_bid_percentages_isValid = false;

    m_promote_with_ad_isSet = false;
    m_promote_with_ad_isValid = false;
}

void OAIAd::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAd::fromJsonObject(QJsonObject json) {

    m_bid_percentages_isValid = ::OpenAPI::fromJsonValue(m_bid_percentages, json[QString("bidPercentages")]);
    m_bid_percentages_isSet = !json[QString("bidPercentages")].isNull() && m_bid_percentages_isValid;

    m_promote_with_ad_isValid = ::OpenAPI::fromJsonValue(m_promote_with_ad, json[QString("promoteWithAd")]);
    m_promote_with_ad_isSet = !json[QString("promoteWithAd")].isNull() && m_promote_with_ad_isValid;
}

QString OAIAd::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAd::asJsonObject() const {
    QJsonObject obj;
    if (m_bid_percentages.size() > 0) {
        obj.insert(QString("bidPercentages"), ::OpenAPI::toJsonValue(m_bid_percentages));
    }
    if (m_promote_with_ad_isSet) {
        obj.insert(QString("promoteWithAd"), ::OpenAPI::toJsonValue(m_promote_with_ad));
    }
    return obj;
}

QList<OAIBidPercentages> OAIAd::getBidPercentages() const {
    return m_bid_percentages;
}
void OAIAd::setBidPercentages(const QList<OAIBidPercentages> &bid_percentages) {
    m_bid_percentages = bid_percentages;
    m_bid_percentages_isSet = true;
}

bool OAIAd::is_bid_percentages_Set() const{
    return m_bid_percentages_isSet;
}

bool OAIAd::is_bid_percentages_Valid() const{
    return m_bid_percentages_isValid;
}

QString OAIAd::getPromoteWithAd() const {
    return m_promote_with_ad;
}
void OAIAd::setPromoteWithAd(const QString &promote_with_ad) {
    m_promote_with_ad = promote_with_ad;
    m_promote_with_ad_isSet = true;
}

bool OAIAd::is_promote_with_ad_Set() const{
    return m_promote_with_ad_isSet;
}

bool OAIAd::is_promote_with_ad_Valid() const{
    return m_promote_with_ad_isValid;
}

bool OAIAd::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bid_percentages.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_promote_with_ad_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAd::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
