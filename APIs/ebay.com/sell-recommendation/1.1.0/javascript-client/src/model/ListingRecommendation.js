/**
 * Recommendation API
 * The <b>Recommendation API</b> returns information that sellers can use to optimize the configuration of their listings on eBay. <br><br>Currently, the API contains a single method, <b>findListingRecommendations</b>. This method provides information that sellers can use to configure Promoted Listings ad campaigns to maximize the visibility of their items in the eBay marketplace.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MarketingRecommendation from './MarketingRecommendation';

/**
 * The ListingRecommendation model module.
 * @module model/ListingRecommendation
 * @version 1.1.0
 */
class ListingRecommendation {
    /**
     * Constructs a new <code>ListingRecommendation</code>.
     * A complex type that contains the ID of an actively listed item and a set of related listing recommendations. The recommendations contain information the seller can use to optimize their listing configurations.
     * @alias module:model/ListingRecommendation
     */
    constructor() { 
        
        ListingRecommendation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListingRecommendation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListingRecommendation} obj Optional instance to populate.
     * @return {module:model/ListingRecommendation} The populated <code>ListingRecommendation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListingRecommendation();

            if (data.hasOwnProperty('listingId')) {
                obj['listingId'] = ApiClient.convertToType(data['listingId'], 'String');
            }
            if (data.hasOwnProperty('marketing')) {
                obj['marketing'] = MarketingRecommendation.constructFromObject(data['marketing']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListingRecommendation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListingRecommendation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['listingId'] && !(typeof data['listingId'] === 'string' || data['listingId'] instanceof String)) {
            throw new Error("Expected the field `listingId` to be a primitive type in the JSON string but got " + data['listingId']);
        }
        // validate the optional field `marketing`
        if (data['marketing']) { // data not null
          MarketingRecommendation.validateJSON(data['marketing']);
        }

        return true;
    }


}



/**
 * An ID that identifies the active listing associated with the eBay recommendations.
 * @member {String} listingId
 */
ListingRecommendation.prototype['listingId'] = undefined;

/**
 * @member {module:model/MarketingRecommendation} marketing
 */
ListingRecommendation.prototype['marketing'] = undefined;






export default ListingRecommendation;

