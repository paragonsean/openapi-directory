/**
 * Recommendation API
 * The <b>Recommendation API</b> returns information that sellers can use to optimize the configuration of their listings on eBay. <br><br>Currently, the API contains a single method, <b>findListingRecommendations</b>. This method provides information that sellers can use to configure Promoted Listings ad campaigns to maximize the visibility of their items in the eBay marketplace.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Ad from './Ad';

/**
 * The MarketingRecommendation model module.
 * @module model/MarketingRecommendation
 * @version 1.1.0
 */
class MarketingRecommendation {
    /**
     * Constructs a new <code>MarketingRecommendation</code>.
     * A complex type that contains information about how a seller can improve their listing configurations. The AD object contains Promoted Listings recommendations and information, which the seller can use to improve buyer conversions. The response can also contain an optional message about the returned data.
     * @alias module:model/MarketingRecommendation
     */
    constructor() { 
        
        MarketingRecommendation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MarketingRecommendation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MarketingRecommendation} obj Optional instance to populate.
     * @return {module:model/MarketingRecommendation} The populated <code>MarketingRecommendation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MarketingRecommendation();

            if (data.hasOwnProperty('ad')) {
                obj['ad'] = Ad.constructFromObject(data['ad']);
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MarketingRecommendation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MarketingRecommendation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ad`
        if (data['ad']) { // data not null
          Ad.validateJSON(data['ad']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }

        return true;
    }


}



/**
 * @member {module:model/Ad} ad
 */
MarketingRecommendation.prototype['ad'] = undefined;

/**
 * A message that can conditionally accompany the listing information.
 * @member {String} message
 */
MarketingRecommendation.prototype['message'] = undefined;






export default MarketingRecommendation;

