# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BidPercentages(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, basis: str=None, value: str=None):
        """BidPercentages - a model defined in OpenAPI

        :param basis: The basis of this BidPercentages.
        :param value: The value of this BidPercentages.
        """
        self.openapi_types = {
            'basis': str,
            'value': str
        }

        self.attribute_map = {
            'basis': 'basis',
            'value': 'value'
        }

        self._basis = basis
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BidPercentages':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BidPercentages of this BidPercentages.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def basis(self):
        """Gets the basis of this BidPercentages.

        The basis by which the ad rate is calculated. Valid Values: ITEM and TRENDING For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/recommendation/types/api:Basis'>eBay API documentation</a>

        :return: The basis of this BidPercentages.
        :rtype: str
        """
        return self._basis

    @basis.setter
    def basis(self, basis):
        """Sets the basis of this BidPercentages.

        The basis by which the ad rate is calculated. Valid Values: ITEM and TRENDING For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/recommendation/types/api:Basis'>eBay API documentation</a>

        :param basis: The basis of this BidPercentages.
        :type basis: str
        """

        self._basis = basis

    @property
    def value(self):
        """Gets the value of this BidPercentages.

        The bid percentage data is a single precision value, as calculated by the associated basis. In Promoted listings ad campaigns, the bid percentage (also known as the ad rate) is a user-defined value that sets the level that eBay raises the visibility of the listing in the marketplace. It is also the rate that is used to calculate the Promoted Listings fee. Minimum value: 1.0 &nbsp; Maximum value: 100.0

        :return: The value of this BidPercentages.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this BidPercentages.

        The bid percentage data is a single precision value, as calculated by the associated basis. In Promoted listings ad campaigns, the bid percentage (also known as the ad rate) is a user-defined value that sets the level that eBay raises the visibility of the listing in the marketplace. It is also the rate that is used to calculate the Promoted Listings fee. Minimum value: 1.0 &nbsp; Maximum value: 100.0

        :param value: The value of this BidPercentages.
        :type value: str
        """

        self._value = value
