/*
 * Negotiation API
 * The <b>Negotiations API</b> gives sellers the ability to proactively send discount offers to buyers who have shown an \"interest\" in their listings.  <br><br>By sending buyers discount offers on listings where they have shown an interest, sellers can increase the velocity of their sales.  <br><br>There are various ways for a buyer to show <i>interest </i> in a listing. For example, if a buyer adds the listing to their <b>Watch</b> list, or if they add the listing to their shopping cart and later abandon the cart, they are deemed to have shown an interest in the listing.  <br><br>In the offers that sellers send, they can discount their listings by either a percentage off the listing price, or they can set a new discounted price that is lower than the original listing price.  <br><br>For details about how seller offers work, see <a href=\"/api-docs/sell/static/marketing/offers-to-buyers.html\" title=\"Selling Integration Guide\">Sending offers to buyers</a>.
 *
 * The version of the OpenAPI document: v1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateOffersRequest;
import org.openapitools.client.model.PagedEligibleItemCollection;
import org.openapitools.client.model.SendOfferToInterestedBuyersCollectionResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OfferApi
 */
@Disabled
public class OfferApiTest {

    private final OfferApi api = new OfferApi();

    /**
     * This method evaluates a seller&#39;s current listings and returns the set of IDs that are eligible for a seller-initiated discount offer to a buyer. A listing ID is returned only when one or more buyers have shown an &amp;quot;interest&amp;quot; in the listing. If any buyers have shown interest in a listing, the seller can initiate a &amp;quot;negotiation&amp;quot; with them by calling sendOfferToInterestedBuyers, which sends all interested buyers a message that offers the listing at a discount. For details about how to create seller offers to buyers, see Sending offers to buyers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findEligibleItemsTest() throws ApiException {
        String X_EBAY_C_MARKETPLACE_ID = null;
        String limit = null;
        String offset = null;
        PagedEligibleItemCollection response = api.findEligibleItems(X_EBAY_C_MARKETPLACE_ID, limit, offset);
        // TODO: test validations
    }

    /**
     * This method sends eligible buyers offers to purchase items in a listing at a discount. When a buyer has shown interest in a listing, they become &amp;quot;eligible&amp;quot; to receive a seller-initiated offer to purchase the item(s). Sellers use findEligibleItems to get the set of listings that have interested buyers. If a listing has interested buyers, sellers can use this method (sendOfferToInterestedBuyers) to send an offer to the buyers who are interested in the listing. The offer gives buyers the ability to purchase the associated listings at a discounted price. For details about how to create seller offers to buyers, see Sending offers to buyers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendOfferToInterestedBuyersTest() throws ApiException {
        String X_EBAY_C_MARKETPLACE_ID = null;
        CreateOffersRequest createOffersRequest = null;
        SendOfferToInterestedBuyersCollectionResponse response = api.sendOfferToInterestedBuyers(X_EBAY_C_MARKETPLACE_ID, createOffersRequest);
        // TODO: test validations
    }

}
