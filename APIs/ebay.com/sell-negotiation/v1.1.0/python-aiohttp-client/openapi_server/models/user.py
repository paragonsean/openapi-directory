# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, masked_username: str=None):
        """User - a model defined in OpenAPI

        :param masked_username: The masked_username of this User.
        """
        self.openapi_types = {
            'masked_username': str
        }

        self.attribute_map = {
            'masked_username': 'maskedUsername'
        }

        self._masked_username = masked_username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The User of this User.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def masked_username(self):
        """Gets the masked_username of this User.

        The masked user name is a user name that has certain characters hidden for privacy of the user.

        :return: The masked_username of this User.
        :rtype: str
        """
        return self._masked_username

    @masked_username.setter
    def masked_username(self, masked_username):
        """Sets the masked_username of this User.

        The masked user name is a user name that has certain characters hidden for privacy of the user.

        :param masked_username: The masked_username of this User.
        :type masked_username: str
        """

        self._masked_username = masked_username
