# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.offered_item import OfferedItem
from openapi_server.models.time_duration import TimeDuration
from openapi_server import util


class CreateOffersRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_counter_offer: bool=None, message: str=None, offer_duration: TimeDuration=None, offered_items: List[OfferedItem]=None):
        """CreateOffersRequest - a model defined in OpenAPI

        :param allow_counter_offer: The allow_counter_offer of this CreateOffersRequest.
        :param message: The message of this CreateOffersRequest.
        :param offer_duration: The offer_duration of this CreateOffersRequest.
        :param offered_items: The offered_items of this CreateOffersRequest.
        """
        self.openapi_types = {
            'allow_counter_offer': bool,
            'message': str,
            'offer_duration': TimeDuration,
            'offered_items': List[OfferedItem]
        }

        self.attribute_map = {
            'allow_counter_offer': 'allowCounterOffer',
            'message': 'message',
            'offer_duration': 'offerDuration',
            'offered_items': 'offeredItems'
        }

        self._allow_counter_offer = allow_counter_offer
        self._message = message
        self._offer_duration = offer_duration
        self._offered_items = offered_items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateOffersRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateOffersRequest of this CreateOffersRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_counter_offer(self):
        """Gets the allow_counter_offer of this CreateOffersRequest.

        If set to true, the buyer is allowed to make a counter-offer to the seller's offer. Note: Currently, you must set this field to false; counter-offers are not supported in this release. Default: false

        :return: The allow_counter_offer of this CreateOffersRequest.
        :rtype: bool
        """
        return self._allow_counter_offer

    @allow_counter_offer.setter
    def allow_counter_offer(self, allow_counter_offer):
        """Sets the allow_counter_offer of this CreateOffersRequest.

        If set to true, the buyer is allowed to make a counter-offer to the seller's offer. Note: Currently, you must set this field to false; counter-offers are not supported in this release. Default: false

        :param allow_counter_offer: The allow_counter_offer of this CreateOffersRequest.
        :type allow_counter_offer: bool
        """

        self._allow_counter_offer = allow_counter_offer

    @property
    def message(self):
        """Gets the message of this CreateOffersRequest.

        A seller-defined message related to the offer being made. This message is sent to the list of &quot;interested&quot; buyers. To increase the conversion rate of the offers a seller makes to buyers, eBay recommends you always add a customized message to your offers. Maximum length: 2,000 characters

        :return: The message of this CreateOffersRequest.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this CreateOffersRequest.

        A seller-defined message related to the offer being made. This message is sent to the list of &quot;interested&quot; buyers. To increase the conversion rate of the offers a seller makes to buyers, eBay recommends you always add a customized message to your offers. Maximum length: 2,000 characters

        :param message: The message of this CreateOffersRequest.
        :type message: str
        """

        self._message = message

    @property
    def offer_duration(self):
        """Gets the offer_duration of this CreateOffersRequest.


        :return: The offer_duration of this CreateOffersRequest.
        :rtype: TimeDuration
        """
        return self._offer_duration

    @offer_duration.setter
    def offer_duration(self, offer_duration):
        """Sets the offer_duration of this CreateOffersRequest.


        :param offer_duration: The offer_duration of this CreateOffersRequest.
        :type offer_duration: TimeDuration
        """

        self._offer_duration = offer_duration

    @property
    def offered_items(self):
        """Gets the offered_items of this CreateOffersRequest.

        An array of objects where each object contains the details of an offer and the ID of the listing on which the offer is being made. Note that the service does not currently support the creation of multiple offers with a single call to sendOfferToInterestedBuyer. With this, each request can target only one listing at a time and you must populate this array with a single element that contains the details of one offer.

        :return: The offered_items of this CreateOffersRequest.
        :rtype: List[OfferedItem]
        """
        return self._offered_items

    @offered_items.setter
    def offered_items(self, offered_items):
        """Sets the offered_items of this CreateOffersRequest.

        An array of objects where each object contains the details of an offer and the ID of the listing on which the offer is being made. Note that the service does not currently support the creation of multiple offers with a single call to sendOfferToInterestedBuyer. With this, each request can target only one listing at a time and you must populate this array with a single element that contains the details of one offer.

        :param offered_items: The offered_items of this CreateOffersRequest.
        :type offered_items: List[OfferedItem]
        """

        self._offered_items = offered_items
