/**
 * Negotiation API
 * The <b>Negotiations API</b> gives sellers the ability to proactively send discount offers to buyers who have shown an \"interest\" in their listings.  <br><br>By sending buyers discount offers on listings where they have shown an interest, sellers can increase the velocity of their sales.  <br><br>There are various ways for a buyer to show <i>interest </i> in a listing. For example, if a buyer adds the listing to their <b>Watch</b> list, or if they add the listing to their shopping cart and later abandon the cart, they are deemed to have shown an interest in the listing.  <br><br>In the offers that sellers send, they can discount their listings by either a percentage off the listing price, or they can set a new discounted price that is lower than the original listing price.  <br><br>For details about how seller offers work, see <a href=\"/api-docs/sell/static/marketing/offers-to-buyers.html\" title=\"Selling Integration Guide\">Sending offers to buyers</a>.
 *
 * The version of the OpenAPI document: v1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOffer.h
 *
 * A complex type that defines an offer that a seller makes to eligible buyers.
 */

#ifndef OAIOffer_H
#define OAIOffer_H

#include <QJsonObject>

#include "OAIOfferedItem.h"
#include "OAITimeDuration.h"
#include "OAIUser.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUser;
class OAITimeDuration;
class OAIOfferedItem;

class OAIOffer : public OAIObject {
public:
    OAIOffer();
    OAIOffer(QString json);
    ~OAIOffer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowCounterOffer() const;
    void setAllowCounterOffer(const bool &allow_counter_offer);
    bool is_allow_counter_offer_Set() const;
    bool is_allow_counter_offer_Valid() const;

    OAIUser getBuyer() const;
    void setBuyer(const OAIUser &buyer);
    bool is_buyer_Set() const;
    bool is_buyer_Valid() const;

    QString getCreationDate() const;
    void setCreationDate(const QString &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QString getInitiatedBy() const;
    void setInitiatedBy(const QString &initiated_by);
    bool is_initiated_by_Set() const;
    bool is_initiated_by_Valid() const;

    QString getLastModifiedDate() const;
    void setLastModifiedDate(const QString &last_modified_date);
    bool is_last_modified_date_Set() const;
    bool is_last_modified_date_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    OAITimeDuration getOfferDuration() const;
    void setOfferDuration(const OAITimeDuration &offer_duration);
    bool is_offer_duration_Set() const;
    bool is_offer_duration_Valid() const;

    QString getOfferId() const;
    void setOfferId(const QString &offer_id);
    bool is_offer_id_Set() const;
    bool is_offer_id_Valid() const;

    QString getOfferStatus() const;
    void setOfferStatus(const QString &offer_status);
    bool is_offer_status_Set() const;
    bool is_offer_status_Valid() const;

    QString getOfferType() const;
    void setOfferType(const QString &offer_type);
    bool is_offer_type_Set() const;
    bool is_offer_type_Valid() const;

    QList<OAIOfferedItem> getOfferedItems() const;
    void setOfferedItems(const QList<OAIOfferedItem> &offered_items);
    bool is_offered_items_Set() const;
    bool is_offered_items_Valid() const;

    QString getRevision() const;
    void setRevision(const QString &revision);
    bool is_revision_Set() const;
    bool is_revision_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_counter_offer;
    bool m_allow_counter_offer_isSet;
    bool m_allow_counter_offer_isValid;

    OAIUser m_buyer;
    bool m_buyer_isSet;
    bool m_buyer_isValid;

    QString m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QString m_initiated_by;
    bool m_initiated_by_isSet;
    bool m_initiated_by_isValid;

    QString m_last_modified_date;
    bool m_last_modified_date_isSet;
    bool m_last_modified_date_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    OAITimeDuration m_offer_duration;
    bool m_offer_duration_isSet;
    bool m_offer_duration_isValid;

    QString m_offer_id;
    bool m_offer_id_isSet;
    bool m_offer_id_isValid;

    QString m_offer_status;
    bool m_offer_status_isSet;
    bool m_offer_status_isValid;

    QString m_offer_type;
    bool m_offer_type_isSet;
    bool m_offer_type_isValid;

    QList<OAIOfferedItem> m_offered_items;
    bool m_offered_items_isSet;
    bool m_offered_items_isValid;

    QString m_revision;
    bool m_revision_isSet;
    bool m_revision_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOffer)

#endif // OAIOffer_H
