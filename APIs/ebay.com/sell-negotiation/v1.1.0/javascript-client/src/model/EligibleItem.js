/**
 * Negotiation API
 * The <b>Negotiations API</b> gives sellers the ability to proactively send discount offers to buyers who have shown an \"interest\" in their listings.  <br><br>By sending buyers discount offers on listings where they have shown an interest, sellers can increase the velocity of their sales.  <br><br>There are various ways for a buyer to show <i>interest </i> in a listing. For example, if a buyer adds the listing to their <b>Watch</b> list, or if they add the listing to their shopping cart and later abandon the cart, they are deemed to have shown an interest in the listing.  <br><br>In the offers that sellers send, they can discount their listings by either a percentage off the listing price, or they can set a new discounted price that is lower than the original listing price.  <br><br>For details about how seller offers work, see <a href=\"/api-docs/sell/static/marketing/offers-to-buyers.html\" title=\"Selling Integration Guide\">Sending offers to buyers</a>.
 *
 * The version of the OpenAPI document: v1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EligibleItem model module.
 * @module model/EligibleItem
 * @version v1.1.0
 */
class EligibleItem {
    /**
     * Constructs a new <code>EligibleItem</code>.
     * A listing that is eligible for a seller-initiated offer to a buyer. Listings are identified by a listingId value that is generated and assigned by eBay when a seller lists an item using the Trading API. Note: The Negotiation API does not currently support listings that are managed with the Inventory API.
     * @alias module:model/EligibleItem
     */
    constructor() { 
        
        EligibleItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EligibleItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EligibleItem} obj Optional instance to populate.
     * @return {module:model/EligibleItem} The populated <code>EligibleItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EligibleItem();

            if (data.hasOwnProperty('listingId')) {
                obj['listingId'] = ApiClient.convertToType(data['listingId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EligibleItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EligibleItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['listingId'] && !(typeof data['listingId'] === 'string' || data['listingId'] instanceof String)) {
            throw new Error("Expected the field `listingId` to be a primitive type in the JSON string but got " + data['listingId']);
        }

        return true;
    }


}



/**
 * The unique eBay-assigned ID for an eBay listing. A listingId is assigned by eBay when a seller creates a listing with the Trading API.
 * @member {String} listingId
 */
EligibleItem.prototype['listingId'] = undefined;






export default EligibleItem;

