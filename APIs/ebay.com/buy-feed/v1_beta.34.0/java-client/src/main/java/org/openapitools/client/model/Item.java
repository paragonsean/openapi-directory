/*
 * Item Feed Service
 * <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited \" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units. For information on how to obtain access to this API in production, see the <a href=\"api-docs/buy/static/buy-requirements.html\" target=\"_blank\">Buy APIs Requirements</a>.</span><br><br>The Feed API provides the ability to download TSV_GZIP feed files containing eBay items and an hourly snapshot file of the items that have changed within an hour for a specific category, date and marketplace. <p>In addition to the API, there is an open source <a href=\"https://github.com/eBay/FeedSDK \" target=\"_blank\">Feed SDK</a> written in Java that downloads, combines files into a single file when needed, and unzips the entire feed file. It also lets you specify field filters to curate the items in the file.</p>
 *
 * The version of the OpenAPI document: v1_beta.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The type that defines the columns returned in the &lt;b&gt;Item&lt;/b&gt; feed file.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:11.216954-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Item {
  public static final String SERIALIZED_NAME_ACCEPTED_PAYMENT_METHODS = "acceptedPaymentMethods";
  @SerializedName(SERIALIZED_NAME_ACCEPTED_PAYMENT_METHODS)
  private String acceptedPaymentMethods;

  public static final String SERIALIZED_NAME_ADDITIONAL_IMAGE_URLS = "additionalImageUrls";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_IMAGE_URLS)
  private String additionalImageUrls;

  public static final String SERIALIZED_NAME_ADDITIONAL_SHIPPING_COST_PER_UNIT = "additionalShippingCostPerUnit";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_SHIPPING_COST_PER_UNIT)
  private String additionalShippingCostPerUnit;

  public static final String SERIALIZED_NAME_AGE_GROUP = "ageGroup";
  @SerializedName(SERIALIZED_NAME_AGE_GROUP)
  private String ageGroup;

  public static final String SERIALIZED_NAME_ALERTS = "alerts";
  @SerializedName(SERIALIZED_NAME_ALERTS)
  private String alerts;

  public static final String SERIALIZED_NAME_AVAILABILITY = "availability";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY)
  private String availability;

  public static final String SERIALIZED_NAME_AVAILABILITY_THRESHOLD = "availabilityThreshold";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_THRESHOLD)
  private Integer availabilityThreshold;

  public static final String SERIALIZED_NAME_AVAILABILITY_THRESHOLD_TYPE = "availabilityThresholdType";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_THRESHOLD_TYPE)
  private String availabilityThresholdType;

  public static final String SERIALIZED_NAME_BRAND = "brand";
  @SerializedName(SERIALIZED_NAME_BRAND)
  private String brand;

  public static final String SERIALIZED_NAME_BUYING_OPTIONS = "buyingOptions";
  @SerializedName(SERIALIZED_NAME_BUYING_OPTIONS)
  private String buyingOptions;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_CATEGORY_ID = "categoryId";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private String categoryId;

  public static final String SERIALIZED_NAME_COLOR = "color";
  @SerializedName(SERIALIZED_NAME_COLOR)
  private String color;

  public static final String SERIALIZED_NAME_CONDITION = "condition";
  @SerializedName(SERIALIZED_NAME_CONDITION)
  private String condition;

  public static final String SERIALIZED_NAME_CONDITION_ID = "conditionId";
  @SerializedName(SERIALIZED_NAME_CONDITION_ID)
  private String conditionId;

  public static final String SERIALIZED_NAME_DEFAULT_IMAGE_URL = "defaultImageUrl";
  @SerializedName(SERIALIZED_NAME_DEFAULT_IMAGE_URL)
  private String defaultImageUrl;

  public static final String SERIALIZED_NAME_DELIVERY_OPTIONS = "deliveryOptions";
  @SerializedName(SERIALIZED_NAME_DELIVERY_OPTIONS)
  private String deliveryOptions;

  public static final String SERIALIZED_NAME_DISCOUNT_AMOUNT = "discountAmount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_AMOUNT)
  private String discountAmount;

  public static final String SERIALIZED_NAME_DISCOUNT_PERCENTAGE = "discountPercentage";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_PERCENTAGE)
  private String discountPercentage;

  public static final String SERIALIZED_NAME_ECO_PARTICIPATION_FEE_CURRENCY = "ecoParticipationFeeCurrency";
  @SerializedName(SERIALIZED_NAME_ECO_PARTICIPATION_FEE_CURRENCY)
  private String ecoParticipationFeeCurrency;

  public static final String SERIALIZED_NAME_ECO_PARTICIPATION_FEE_VALUE = "ecoParticipationFeeValue";
  @SerializedName(SERIALIZED_NAME_ECO_PARTICIPATION_FEE_VALUE)
  private String ecoParticipationFeeValue;

  public static final String SERIALIZED_NAME_ENERGY_EFFICIENCY_CLASS = "energyEfficiencyClass";
  @SerializedName(SERIALIZED_NAME_ENERGY_EFFICIENCY_CLASS)
  private String energyEfficiencyClass;

  public static final String SERIALIZED_NAME_EPID = "epid";
  @SerializedName(SERIALIZED_NAME_EPID)
  private String epid;

  public static final String SERIALIZED_NAME_ESTIMATED_AVAILABLE_QUANTITY = "estimatedAvailableQuantity";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_AVAILABLE_QUANTITY)
  private Integer estimatedAvailableQuantity;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_GTIN = "gtin";
  @SerializedName(SERIALIZED_NAME_GTIN)
  private String gtin;

  public static final String SERIALIZED_NAME_HAZMAT_ADDITIONAL_INFORMATION = "hazmatAdditionalInformation";
  @SerializedName(SERIALIZED_NAME_HAZMAT_ADDITIONAL_INFORMATION)
  private String hazmatAdditionalInformation;

  public static final String SERIALIZED_NAME_HAZMAT_PICTOGRAM_DESCRIPTIONS = "hazmatPictogramDescriptions";
  @SerializedName(SERIALIZED_NAME_HAZMAT_PICTOGRAM_DESCRIPTIONS)
  private String hazmatPictogramDescriptions;

  public static final String SERIALIZED_NAME_HAZMAT_PICTOGRAM_IDS = "hazmatPictogramIds";
  @SerializedName(SERIALIZED_NAME_HAZMAT_PICTOGRAM_IDS)
  private String hazmatPictogramIds;

  public static final String SERIALIZED_NAME_HAZMAT_PICTOGRAM_IMAGE_URLS = "hazmatPictogramImageUrls";
  @SerializedName(SERIALIZED_NAME_HAZMAT_PICTOGRAM_IMAGE_URLS)
  private String hazmatPictogramImageUrls;

  public static final String SERIALIZED_NAME_HAZMAT_SIGNAL_WORD = "hazmatSignalWord";
  @SerializedName(SERIALIZED_NAME_HAZMAT_SIGNAL_WORD)
  private String hazmatSignalWord;

  public static final String SERIALIZED_NAME_HAZMAT_SIGNAL_WORD_ID = "hazmatSignalWordId";
  @SerializedName(SERIALIZED_NAME_HAZMAT_SIGNAL_WORD_ID)
  private String hazmatSignalWordId;

  public static final String SERIALIZED_NAME_HAZMAT_STATEMENT_DESCRIPTIONS = "hazmatStatementDescriptions";
  @SerializedName(SERIALIZED_NAME_HAZMAT_STATEMENT_DESCRIPTIONS)
  private String hazmatStatementDescriptions;

  public static final String SERIALIZED_NAME_HAZMAT_STATEMENT_IDS = "hazmatStatementIds";
  @SerializedName(SERIALIZED_NAME_HAZMAT_STATEMENT_IDS)
  private String hazmatStatementIds;

  public static final String SERIALIZED_NAME_IMAGE_ALTERING_PROHIBITED = "imageAlteringProhibited";
  @SerializedName(SERIALIZED_NAME_IMAGE_ALTERING_PROHIBITED)
  private Boolean imageAlteringProhibited;

  public static final String SERIALIZED_NAME_IMAGE_URL = "imageUrl";
  @SerializedName(SERIALIZED_NAME_IMAGE_URL)
  private String imageUrl;

  public static final String SERIALIZED_NAME_INFERRED_BRAND = "inferredBrand";
  @SerializedName(SERIALIZED_NAME_INFERRED_BRAND)
  private String inferredBrand;

  public static final String SERIALIZED_NAME_INFERRED_EPID = "inferredEpid";
  @SerializedName(SERIALIZED_NAME_INFERRED_EPID)
  private String inferredEpid;

  public static final String SERIALIZED_NAME_INFERRED_GTIN = "inferredGtin";
  @SerializedName(SERIALIZED_NAME_INFERRED_GTIN)
  private String inferredGtin;

  public static final String SERIALIZED_NAME_INFERRED_LOCALIZED_ASPECTS = "inferredLocalizedAspects";
  @SerializedName(SERIALIZED_NAME_INFERRED_LOCALIZED_ASPECTS)
  private String inferredLocalizedAspects;

  public static final String SERIALIZED_NAME_INFERRED_MPN = "inferredMpn";
  @SerializedName(SERIALIZED_NAME_INFERRED_MPN)
  private String inferredMpn;

  public static final String SERIALIZED_NAME_ITEM_AFFILIATE_WEB_URL = "itemAffiliateWebUrl";
  @SerializedName(SERIALIZED_NAME_ITEM_AFFILIATE_WEB_URL)
  private String itemAffiliateWebUrl;

  public static final String SERIALIZED_NAME_ITEM_CREATION_DATE = "itemCreationDate";
  @SerializedName(SERIALIZED_NAME_ITEM_CREATION_DATE)
  private String itemCreationDate;

  public static final String SERIALIZED_NAME_ITEM_END_DATE = "itemEndDate";
  @SerializedName(SERIALIZED_NAME_ITEM_END_DATE)
  private String itemEndDate;

  public static final String SERIALIZED_NAME_ITEM_ID = "itemId";
  @SerializedName(SERIALIZED_NAME_ITEM_ID)
  private String itemId;

  public static final String SERIALIZED_NAME_ITEM_LOCATION_COUNTRY = "itemLocationCountry";
  @SerializedName(SERIALIZED_NAME_ITEM_LOCATION_COUNTRY)
  private String itemLocationCountry;

  public static final String SERIALIZED_NAME_ITEM_WEB_URL = "itemWebUrl";
  @SerializedName(SERIALIZED_NAME_ITEM_WEB_URL)
  private String itemWebUrl;

  public static final String SERIALIZED_NAME_LEGACY_ITEM_ID = "legacyItemId";
  @SerializedName(SERIALIZED_NAME_LEGACY_ITEM_ID)
  private String legacyItemId;

  public static final String SERIALIZED_NAME_LENGTH_UNIT_OF_MEASURE = "lengthUnitOfMeasure";
  @SerializedName(SERIALIZED_NAME_LENGTH_UNIT_OF_MEASURE)
  private String lengthUnitOfMeasure;

  public static final String SERIALIZED_NAME_LOCALIZED_ASPECTS = "localizedAspects";
  @SerializedName(SERIALIZED_NAME_LOCALIZED_ASPECTS)
  private String localizedAspects;

  public static final String SERIALIZED_NAME_LOT_SIZE = "lotSize";
  @SerializedName(SERIALIZED_NAME_LOT_SIZE)
  private Integer lotSize;

  public static final String SERIALIZED_NAME_MATERIAL = "material";
  @SerializedName(SERIALIZED_NAME_MATERIAL)
  private String material;

  public static final String SERIALIZED_NAME_MPN = "mpn";
  @SerializedName(SERIALIZED_NAME_MPN)
  private String mpn;

  public static final String SERIALIZED_NAME_ORIGINAL_PRICE_CURRENCY = "originalPriceCurrency";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_PRICE_CURRENCY)
  private String originalPriceCurrency;

  public static final String SERIALIZED_NAME_ORIGINAL_PRICE_VALUE = "originalPriceValue";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_PRICE_VALUE)
  private String originalPriceValue;

  public static final String SERIALIZED_NAME_PACKAGE_HEIGHT = "packageHeight";
  @SerializedName(SERIALIZED_NAME_PACKAGE_HEIGHT)
  private String packageHeight;

  public static final String SERIALIZED_NAME_PACKAGE_LENGTH = "packageLength";
  @SerializedName(SERIALIZED_NAME_PACKAGE_LENGTH)
  private String packageLength;

  public static final String SERIALIZED_NAME_PACKAGE_WEIGHT = "packageWeight";
  @SerializedName(SERIALIZED_NAME_PACKAGE_WEIGHT)
  private String packageWeight;

  public static final String SERIALIZED_NAME_PACKAGE_WIDTH = "packageWidth";
  @SerializedName(SERIALIZED_NAME_PACKAGE_WIDTH)
  private String packageWidth;

  public static final String SERIALIZED_NAME_PATTERN = "pattern";
  @SerializedName(SERIALIZED_NAME_PATTERN)
  private String pattern;

  public static final String SERIALIZED_NAME_PRICE_CURRENCY = "priceCurrency";
  @SerializedName(SERIALIZED_NAME_PRICE_CURRENCY)
  private String priceCurrency;

  public static final String SERIALIZED_NAME_PRICE_VALUE = "priceValue";
  @SerializedName(SERIALIZED_NAME_PRICE_VALUE)
  private String priceValue;

  public static final String SERIALIZED_NAME_PRIMARY_ITEM_GROUP_ID = "primaryItemGroupId";
  @SerializedName(SERIALIZED_NAME_PRIMARY_ITEM_GROUP_ID)
  private String primaryItemGroupId;

  public static final String SERIALIZED_NAME_PRIMARY_ITEM_GROUP_TYPE = "primaryItemGroupType";
  @SerializedName(SERIALIZED_NAME_PRIMARY_ITEM_GROUP_TYPE)
  private String primaryItemGroupType;

  public static final String SERIALIZED_NAME_PRIORITY_LISTING_PAYLOAD = "priorityListingPayload";
  @SerializedName(SERIALIZED_NAME_PRIORITY_LISTING_PAYLOAD)
  private String priorityListingPayload;

  public static final String SERIALIZED_NAME_QUALIFIED_PROGRAMS = "qualifiedPrograms";
  @SerializedName(SERIALIZED_NAME_QUALIFIED_PROGRAMS)
  private String qualifiedPrograms;

  public static final String SERIALIZED_NAME_QUANTITY_USED_FOR_ESTIMATE = "quantityUsedForEstimate";
  @SerializedName(SERIALIZED_NAME_QUANTITY_USED_FOR_ESTIMATE)
  private Integer quantityUsedForEstimate;

  public static final String SERIALIZED_NAME_REFUND_METHOD = "refundMethod";
  @SerializedName(SERIALIZED_NAME_REFUND_METHOD)
  private String refundMethod;

  public static final String SERIALIZED_NAME_REPAIR_SCORE = "repairScore";
  @SerializedName(SERIALIZED_NAME_REPAIR_SCORE)
  private String repairScore;

  public static final String SERIALIZED_NAME_RETURN_METHOD = "returnMethod";
  @SerializedName(SERIALIZED_NAME_RETURN_METHOD)
  private String returnMethod;

  public static final String SERIALIZED_NAME_RETURN_PERIOD_UNIT = "returnPeriodUnit";
  @SerializedName(SERIALIZED_NAME_RETURN_PERIOD_UNIT)
  private String returnPeriodUnit;

  public static final String SERIALIZED_NAME_RETURN_PERIOD_VALUE = "returnPeriodValue";
  @SerializedName(SERIALIZED_NAME_RETURN_PERIOD_VALUE)
  private Integer returnPeriodValue;

  public static final String SERIALIZED_NAME_RETURN_SHIPPING_COST_PAYER = "returnShippingCostPayer";
  @SerializedName(SERIALIZED_NAME_RETURN_SHIPPING_COST_PAYER)
  private String returnShippingCostPayer;

  public static final String SERIALIZED_NAME_RETURNS_ACCEPTED = "returnsAccepted";
  @SerializedName(SERIALIZED_NAME_RETURNS_ACCEPTED)
  private Boolean returnsAccepted;

  public static final String SERIALIZED_NAME_SELLER_ACCOUNT_TYPE = "sellerAccountType";
  @SerializedName(SERIALIZED_NAME_SELLER_ACCOUNT_TYPE)
  private String sellerAccountType;

  public static final String SERIALIZED_NAME_SELLER_FEEDBACK_PERCENTAGE = "sellerFeedbackPercentage";
  @SerializedName(SERIALIZED_NAME_SELLER_FEEDBACK_PERCENTAGE)
  private String sellerFeedbackPercentage;

  public static final String SERIALIZED_NAME_SELLER_FEEDBACK_SCORE = "sellerFeedbackScore";
  @SerializedName(SERIALIZED_NAME_SELLER_FEEDBACK_SCORE)
  private String sellerFeedbackScore;

  public static final String SERIALIZED_NAME_SELLER_ITEM_REVISION = "sellerItemRevision";
  @SerializedName(SERIALIZED_NAME_SELLER_ITEM_REVISION)
  private String sellerItemRevision;

  public static final String SERIALIZED_NAME_SELLER_TRUST_LEVEL = "sellerTrustLevel";
  @SerializedName(SERIALIZED_NAME_SELLER_TRUST_LEVEL)
  private String sellerTrustLevel;

  public static final String SERIALIZED_NAME_SELLER_USERNAME = "sellerUsername";
  @SerializedName(SERIALIZED_NAME_SELLER_USERNAME)
  private String sellerUsername;

  public static final String SERIALIZED_NAME_SHIP_TO_EXCLUDED_REGIONS = "shipToExcludedRegions";
  @SerializedName(SERIALIZED_NAME_SHIP_TO_EXCLUDED_REGIONS)
  private String shipToExcludedRegions;

  public static final String SERIALIZED_NAME_SHIP_TO_INCLUDED_REGIONS = "shipToIncludedRegions";
  @SerializedName(SERIALIZED_NAME_SHIP_TO_INCLUDED_REGIONS)
  private String shipToIncludedRegions;

  public static final String SERIALIZED_NAME_SHIPPING_CARRIER_CODE = "shippingCarrierCode";
  @SerializedName(SERIALIZED_NAME_SHIPPING_CARRIER_CODE)
  private String shippingCarrierCode;

  public static final String SERIALIZED_NAME_SHIPPING_COST = "shippingCost";
  @SerializedName(SERIALIZED_NAME_SHIPPING_COST)
  private String shippingCost;

  public static final String SERIALIZED_NAME_SHIPPING_COST_TYPE = "shippingCostType";
  @SerializedName(SERIALIZED_NAME_SHIPPING_COST_TYPE)
  private String shippingCostType;

  public static final String SERIALIZED_NAME_SHIPPING_SERVICE_CODE = "shippingServiceCode";
  @SerializedName(SERIALIZED_NAME_SHIPPING_SERVICE_CODE)
  private String shippingServiceCode;

  public static final String SERIALIZED_NAME_SHIPPING_TYPE = "shippingType";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TYPE)
  private String shippingType;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private String size;

  public static final String SERIALIZED_NAME_TAKE_BACK_POLICY_DESCRIPTION = "takeBackPolicyDescription";
  @SerializedName(SERIALIZED_NAME_TAKE_BACK_POLICY_DESCRIPTION)
  private String takeBackPolicyDescription;

  public static final String SERIALIZED_NAME_TAKE_BACK_POLICY_LABEL = "takeBackPolicyLabel";
  @SerializedName(SERIALIZED_NAME_TAKE_BACK_POLICY_LABEL)
  private String takeBackPolicyLabel;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TOTAL_UNITS = "totalUnits";
  @SerializedName(SERIALIZED_NAME_TOTAL_UNITS)
  private String totalUnits;

  public static final String SERIALIZED_NAME_TYRE_LABEL_IMAGE_URL = "tyreLabelImageUrl";
  @SerializedName(SERIALIZED_NAME_TYRE_LABEL_IMAGE_URL)
  private String tyreLabelImageUrl;

  public static final String SERIALIZED_NAME_UNIT_PRICE = "unitPrice";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICE)
  private String unitPrice;

  public static final String SERIALIZED_NAME_UNIT_PRICING_MEASURE = "unitPricingMeasure";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICING_MEASURE)
  private String unitPricingMeasure;

  public static final String SERIALIZED_NAME_WEIGHT_UNIT_OF_MEASURE = "weightUnitOfMeasure";
  @SerializedName(SERIALIZED_NAME_WEIGHT_UNIT_OF_MEASURE)
  private String weightUnitOfMeasure;

  public Item() {
  }

  public Item acceptedPaymentMethods(String acceptedPaymentMethods) {
    this.acceptedPaymentMethods = acceptedPaymentMethods;
    return this;
  }

  /**
   * This field is returned empty. For a list of payment methods available for a marketplace, see eBay help pages or the actual View Item page.
   * @return acceptedPaymentMethods
   */
  @javax.annotation.Nullable
  public String getAcceptedPaymentMethods() {
    return acceptedPaymentMethods;
  }

  public void setAcceptedPaymentMethods(String acceptedPaymentMethods) {
    this.acceptedPaymentMethods = acceptedPaymentMethods;
  }


  public Item additionalImageUrls(String additionalImageUrls) {
    this.additionalImageUrls = additionalImageUrls;
    return this;
  }

  /**
   * A pipe separated (&lt;code&gt;|&lt;/code&gt;) list of URLs for the additional images of the item. These images are in addition to the primary image, which is returned in the &lt;b&gt;imageUrl&lt;/b&gt; column. &lt;b&gt;Note: &lt;/b&gt; This column can contain multiple values.
   * @return additionalImageUrls
   */
  @javax.annotation.Nullable
  public String getAdditionalImageUrls() {
    return additionalImageUrls;
  }

  public void setAdditionalImageUrls(String additionalImageUrls) {
    this.additionalImageUrls = additionalImageUrls;
  }


  public Item additionalShippingCostPerUnit(String additionalShippingCostPerUnit) {
    this.additionalShippingCostPerUnit = additionalShippingCostPerUnit;
    return this;
  }

  /**
   * Any per item additional shipping costs for a multi-item purchase. For example, let&#39;s say the shipping cost for a power cord is $3. But for an additional cord, the shipping cost is only $1. So if you bought 3 cords, the &lt;b&gt; shippingCost&lt;/b&gt; would be $3 and this value would be $2 ($1 for each additional item).
   * @return additionalShippingCostPerUnit
   */
  @javax.annotation.Nullable
  public String getAdditionalShippingCostPerUnit() {
    return additionalShippingCostPerUnit;
  }

  public void setAdditionalShippingCostPerUnit(String additionalShippingCostPerUnit) {
    this.additionalShippingCostPerUnit = additionalShippingCostPerUnit;
  }


  public Item ageGroup(String ageGroup) {
    this.ageGroup = ageGroup;
    return this;
  }

  /**
   * The age group that the product is recommended for. &lt;br&gt;&lt;br&gt;&lt;b&gt;Valid values:&lt;/b&gt; &lt;code&gt;newborn&lt;/code&gt;, &lt;code&gt;infant&lt;/code&gt;, &lt;code&gt;toddler&lt;/code&gt;, &lt;code&gt;kids&lt;/code&gt;, &lt;code&gt;adult&lt;/code&gt;.
   * @return ageGroup
   */
  @javax.annotation.Nullable
  public String getAgeGroup() {
    return ageGroup;
  }

  public void setAgeGroup(String ageGroup) {
    this.ageGroup = ageGroup;
  }


  public Item alerts(String alerts) {
    this.alerts = alerts;
    return this;
  }

  /**
   * A pipe-separated list of alerts available for the item.&lt;br&gt;&lt;br&gt;For example, if the &lt;code&gt;DELAYED_DELIVERY&lt;/code&gt; alert was returned for an item, it would indicate a delay in shipping by the seller.
   * @return alerts
   */
  @javax.annotation.Nullable
  public String getAlerts() {
    return alerts;
  }

  public void setAlerts(String alerts) {
    this.alerts = alerts;
  }


  public Item availability(String availability) {
    this.availability = availability;
    return this;
  }

  /**
   * An enumeration value representing the item&#39;s availability (possibility of being purchased). &lt;br&gt;&lt;br&gt;&lt;b&gt;Values: &lt;/b&gt;    &lt;ul&gt;  &lt;li&gt;AVAILABLE&lt;/li&gt;    &lt;li&gt;TEMPORARILY_UNAVAILABLE&lt;/li&gt;     &lt;li&gt;UNAVAILABLE&lt;/li&gt; &lt;/ul&gt;  Code so that your app gracefully handles any future changes to this list. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/buy/feed/types/api:AvailabilityEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return availability
   */
  @javax.annotation.Nullable
  public String getAvailability() {
    return availability;
  }

  public void setAvailability(String availability) {
    this.availability = availability;
  }


  public Item availabilityThreshold(Integer availabilityThreshold) {
    this.availabilityThreshold = availabilityThreshold;
    return this;
  }

  /**
   * This column has a value only when the seller sets their &#39;&lt;a href&#x3D;\&quot;#display-item-quantity\&quot;&gt;display item quantity&lt;/a&gt;&#39; preference to &lt;b&gt; Display \&quot;More than 10 available\&quot; in your listing (if applicable)&lt;/b&gt;. The value of this column will be \&quot;10\&quot;, which is the threshold value. &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this value.
   * @return availabilityThreshold
   */
  @javax.annotation.Nullable
  public Integer getAvailabilityThreshold() {
    return availabilityThreshold;
  }

  public void setAvailabilityThreshold(Integer availabilityThreshold) {
    this.availabilityThreshold = availabilityThreshold;
  }


  public Item availabilityThresholdType(String availabilityThresholdType) {
    this.availabilityThresholdType = availabilityThresholdType;
    return this;
  }

  /**
   * &lt;a name&#x3D;\&quot;display-item-quantity\&quot;&gt;&lt;/a&gt; This column has a value only when the seller sets their &lt;b&gt;Display Item Quantity&lt;/b&gt; preference to &lt;b&gt; Display \&quot;More than 10 available\&quot; in your listing (if applicable)&lt;/b&gt;. The value of this column will be &lt;code&gt; MORE_THAN&lt;/code&gt;. This indicates that the seller has more than the &#39;Display Item Quantity&#39;, which is 10, in stock for this item.    &lt;br&gt;&lt;br&gt; The following are the &lt;b&gt;Display Item Quantity&lt;/b&gt; preferences the seller can set. &lt;br&gt;&lt;ul&gt;&lt;li&gt; &lt;b&gt; Display \&quot;More than 10 available\&quot; in your listing (if applicable)&lt;/b&gt; &lt;br&gt;If the seller enables this preference, this column will have a value as long as there are more than 10 of this item in inventory. If the quantity is equal to 10 or drops below 10, this column will be null and the estimated quantity of the item is returned in the &lt;b&gt; estimatedAvailableQuantity&lt;/b&gt; column. &lt;/li&gt; &lt;li&gt; &lt;b&gt; Display the exact quantity in your items&lt;/b&gt; &lt;br&gt;If the seller enables this preference, the &lt;b&gt; availabilityThresholdType&lt;/b&gt; and &lt;b&gt; availabilityThreshold&lt;/b&gt; columns will be null  and the estimated quantity of the item is returned in the &lt;b&gt; estimatedAvailableQuantity&lt;/b&gt; column.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note: &lt;/b&gt; Because the quantity of an item can change several times within a second, it is impossible to return the exact quantity. &lt;/li&gt;&lt;/ul&gt;   &lt;br&gt;Code so that your app gracefully handles any future changes to these preferences. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/buy/feed/types/api:AvailabilityThresholdEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return availabilityThresholdType
   */
  @javax.annotation.Nullable
  public String getAvailabilityThresholdType() {
    return availabilityThresholdType;
  }

  public void setAvailabilityThresholdType(String availabilityThresholdType) {
    this.availabilityThresholdType = availabilityThresholdType;
  }


  public Item brand(String brand) {
    this.brand = brand;
    return this;
  }

  /**
   * The name brand of the item, such as Nike, Apple, etc.
   * @return brand
   */
  @javax.annotation.Nullable
  public String getBrand() {
    return brand;
  }

  public void setBrand(String brand) {
    this.brand = brand;
  }


  public Item buyingOptions(String buyingOptions) {
    this.buyingOptions = buyingOptions;
    return this;
  }

  /**
   * A comma separated list of the purchase options available for the item. Currently the only supported option is &lt;code&gt;FIXED_PRICE&lt;/code&gt;.
   * @return buyingOptions
   */
  @javax.annotation.Nullable
  public String getBuyingOptions() {
    return buyingOptions;
  }

  public void setBuyingOptions(String buyingOptions) {
    this.buyingOptions = buyingOptions;
  }


  public Item category(String category) {
    this.category = category;
    return this;
  }

  /**
   * The label of the category. For example: &lt;b&gt; Toys &amp; Hobbies|Action Figures|Comic Book Heroes &lt;/b&gt;
   * @return category
   */
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }


  public Item categoryId(String categoryId) {
    this.categoryId = categoryId;
    return this;
  }

  /**
   * The ID of the category of the item. For example: The ID for Toys &amp; Hobbies|Action Figures|Comic Book Heroes is &lt;code&gt;158671&lt;/code&gt;.
   * @return categoryId
   */
  @javax.annotation.Nullable
  public String getCategoryId() {
    return categoryId;
  }

  public void setCategoryId(String categoryId) {
    this.categoryId = categoryId;
  }


  public Item color(String color) {
    this.color = color;
    return this;
  }

  /**
   * The color of the item.
   * @return color
   */
  @javax.annotation.Nullable
  public String getColor() {
    return color;
  }

  public void setColor(String color) {
    this.color = color;
  }


  public Item condition(String condition) {
    this.condition = condition;
    return this;
  }

  /**
   * The text describing the condition of the item. For a list of condition names, see &lt;a href&#x3D;\&quot;https://developer.ebay.com/devzone/finding/callref/enums/conditionIdList.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Item Condition IDs and Names&lt;/a&gt;.
   * @return condition
   */
  @javax.annotation.Nullable
  public String getCondition() {
    return condition;
  }

  public void setCondition(String condition) {
    this.condition = condition;
  }


  public Item conditionId(String conditionId) {
    this.conditionId = conditionId;
    return this;
  }

  /**
   * The identifier of the condition of the item. For example, 1000 is the identifier for NEW. For a list of condition names and IDs, see &lt;a href&#x3D;\&quot;https://developer.ebay.com/devzone/finding/callref/enums/conditionIdList.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Item Condition IDs and Names&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list.
   * @return conditionId
   */
  @javax.annotation.Nullable
  public String getConditionId() {
    return conditionId;
  }

  public void setConditionId(String conditionId) {
    this.conditionId = conditionId;
  }


  public Item defaultImageUrl(String defaultImageUrl) {
    this.defaultImageUrl = defaultImageUrl;
    return this;
  }

  /**
   * URL to the gallery or default image of the item. The other images of the item are returned in the &lt;b&gt;additionalImageUrls&lt;/b&gt; field.&lt;br&gt;&lt;br&gt;&lt;b&gt;For example&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;code&gt;https://i.ebayimg.com/00/s/M********w/z/W********p/$_1.JPG?set_id&#x3D;8********F&lt;/code&gt;
   * @return defaultImageUrl
   */
  @javax.annotation.Nullable
  public String getDefaultImageUrl() {
    return defaultImageUrl;
  }

  public void setDefaultImageUrl(String defaultImageUrl) {
    this.defaultImageUrl = defaultImageUrl;
  }


  public Item deliveryOptions(String deliveryOptions) {
    this.deliveryOptions = deliveryOptions;
    return this;
  }

  /**
   * A comma-separated list of available delivery options. This column lets you filter out items than cannot be shipped to the buyer. &lt;br&gt;&lt;br&gt;&lt;b&gt;Valid Values&lt;/b&gt;: SHIP_TO_HOME, SELLER_ARRANGED_LOCAL_PICKUP, IN_STORE_PICKUP, and PICKUP_DROP_OFF. &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/buy/feed/types/api:DeliveryOptionsEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return deliveryOptions
   */
  @javax.annotation.Nullable
  public String getDeliveryOptions() {
    return deliveryOptions;
  }

  public void setDeliveryOptions(String deliveryOptions) {
    this.deliveryOptions = deliveryOptions;
  }


  public Item discountAmount(String discountAmount) {
    this.discountAmount = discountAmount;
    return this;
  }

  /**
   * The calculated amount of the discount (&lt;b&gt;originalPriceValue&lt;/b&gt; - &lt;b&gt;priceValue&lt;/b&gt;). For example,  if &lt;b&gt;originalPriceValue&lt;/b&gt; is 70 and &lt;b&gt;priceValue&lt;/b&gt; is 56, this value would be 14. &lt;p&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note: &lt;/b&gt; The currency shown in &lt;b&gt;originalPriceCurrency&lt;/b&gt; is used for both &lt;b&gt;discountAmount&lt;/b&gt; and &lt;b&gt;originalPriceCurrency&lt;/b&gt;.&lt;/span&gt;&lt;/p&gt;
   * @return discountAmount
   */
  @javax.annotation.Nullable
  public String getDiscountAmount() {
    return discountAmount;
  }

  public void setDiscountAmount(String discountAmount) {
    this.discountAmount = discountAmount;
  }


  public Item discountPercentage(String discountPercentage) {
    this.discountPercentage = discountPercentage;
    return this;
  }

  /**
   * The calculated discount percentage. For example, if &lt;b&gt; originalPriceValue&lt;/b&gt; is 70 and &lt;b&gt; discountAmount&lt;/b&gt; is 14, this value will be 20.
   * @return discountPercentage
   */
  @javax.annotation.Nullable
  public String getDiscountPercentage() {
    return discountPercentage;
  }

  public void setDiscountPercentage(String discountPercentage) {
    this.discountPercentage = discountPercentage;
  }


  public Item ecoParticipationFeeCurrency(String ecoParticipationFeeCurrency) {
    this.ecoParticipationFeeCurrency = ecoParticipationFeeCurrency;
    return this;
  }

  /**
   * The currency in which the Eco Participation Fee for the item is paid.
   * @return ecoParticipationFeeCurrency
   */
  @javax.annotation.Nullable
  public String getEcoParticipationFeeCurrency() {
    return ecoParticipationFeeCurrency;
  }

  public void setEcoParticipationFeeCurrency(String ecoParticipationFeeCurrency) {
    this.ecoParticipationFeeCurrency = ecoParticipationFeeCurrency;
  }


  public Item ecoParticipationFeeValue(String ecoParticipationFeeValue) {
    this.ecoParticipationFeeValue = ecoParticipationFeeValue;
    return this;
  }

  /**
   * The amount of the Eco Participation Fee, a fee paid toward the eventual disposal of the purchased item.
   * @return ecoParticipationFeeValue
   */
  @javax.annotation.Nullable
  public String getEcoParticipationFeeValue() {
    return ecoParticipationFeeValue;
  }

  public void setEcoParticipationFeeValue(String ecoParticipationFeeValue) {
    this.ecoParticipationFeeValue = ecoParticipationFeeValue;
  }


  public Item energyEfficiencyClass(String energyEfficiencyClass) {
    this.energyEfficiencyClass = energyEfficiencyClass;
    return this;
  }

  /**
   * Indicates the &lt;a href&#x3D;\&quot;https://en.wikipedia.org/wiki/European_Union_energy_label\&quot;&gt;European energy efficiency&lt;/a&gt; rating (EEK) of the item. Data is returned in this column only if the seller specified the energy efficiency rating. &lt;br&gt;&lt;br&gt;The rating is a set of energy efficiency classes from A to G, where &#39;A&#39; is the most energy efficient and &#39;G&#39; is the least efficient. This rating helps buyers choose between various models. &lt;br&gt;&lt;br&gt;To retrieve the manufacturer&#39;s specifications for this item, when they are available, use the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItem\&quot;&gt;getItem&lt;/a&gt; method in the Browse API. The information is returned in the &lt;b&gt; productFicheWebUrl&lt;/b&gt; field.
   * @return energyEfficiencyClass
   */
  @javax.annotation.Nullable
  public String getEnergyEfficiencyClass() {
    return energyEfficiencyClass;
  }

  public void setEnergyEfficiencyClass(String energyEfficiencyClass) {
    this.energyEfficiencyClass = energyEfficiencyClass;
  }


  public Item epid(String epid) {
    this.epid = epid;
    return this;
  }

  /**
   * The eBay product identifier of a product from the eBay product catalog. You can use this value in the Browse API &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item_summary/methods/search\&quot;&gt;search&lt;/a&gt; method to retrieve items for this product and in the &lt;a href&#x3D;\&quot;/api-docs/buy/marketing/resources/methods\&quot;&gt;Marketing API&lt;/a&gt; methods to retrieve &#39;also viewed&#39; and &#39;also bought&#39; products to encourage up-selling and cross-selling.
   * @return epid
   */
  @javax.annotation.Nullable
  public String getEpid() {
    return epid;
  }

  public void setEpid(String epid) {
    this.epid = epid;
  }


  public Item estimatedAvailableQuantity(Integer estimatedAvailableQuantity) {
    this.estimatedAvailableQuantity = estimatedAvailableQuantity;
    return this;
  }

  /**
   * The estimated number of this item that are available for purchase. Because the quantity of an item can change several times within a second, it is impossible to return the exact quantity. So instead of returning quantity, the estimated availability of the item is returned.
   * @return estimatedAvailableQuantity
   */
  @javax.annotation.Nullable
  public Integer getEstimatedAvailableQuantity() {
    return estimatedAvailableQuantity;
  }

  public void setEstimatedAvailableQuantity(Integer estimatedAvailableQuantity) {
    this.estimatedAvailableQuantity = estimatedAvailableQuantity;
  }


  public Item gender(String gender) {
    this.gender = gender;
    return this;
  }

  /**
   * In cases where items could vary by gender, this specifies for which gender the product is intended. Possible values include male, female, and unisex.
   * @return gender
   */
  @javax.annotation.Nullable
  public String getGender() {
    return gender;
  }

  public void setGender(String gender) {
    this.gender = gender;
  }


  public Item gtin(String gtin) {
    this.gtin = gtin;
    return this;
  }

  /**
   * The unique Global Trade Item Number of the item as defined by &lt;a href&#x3D;\&quot;https://www.gtin.info \&quot; target&#x3D;\&quot;_blank\&quot;&gt;https://www.gtin.info&lt;/a&gt;. This can be a UPC (Universal Product Code), EAN (European Article Number), or an ISBN (International Standard Book Number) value.
   * @return gtin
   */
  @javax.annotation.Nullable
  public String getGtin() {
    return gtin;
  }

  public void setGtin(String gtin) {
    this.gtin = gtin;
  }


  public Item hazmatAdditionalInformation(String hazmatAdditionalInformation) {
    this.hazmatAdditionalInformation = hazmatAdditionalInformation;
    return this;
  }

  /**
   * Base64 encoded additional information about the hazardous material.
   * @return hazmatAdditionalInformation
   */
  @javax.annotation.Nullable
  public String getHazmatAdditionalInformation() {
    return hazmatAdditionalInformation;
  }

  public void setHazmatAdditionalInformation(String hazmatAdditionalInformation) {
    this.hazmatAdditionalInformation = hazmatAdditionalInformation;
  }


  public Item hazmatPictogramDescriptions(String hazmatPictogramDescriptions) {
    this.hazmatPictogramDescriptions = hazmatPictogramDescriptions;
    return this;
  }

  /**
   * The base64 encoded descriptions of hazardous material pictograms, separated by the pipe symbol. For example: &lt;br /&gt;&lt;br /&gt;&lt;code&gt;encoded(exploding bomb)|encoded(flame)&lt;/code&gt;
   * @return hazmatPictogramDescriptions
   */
  @javax.annotation.Nullable
  public String getHazmatPictogramDescriptions() {
    return hazmatPictogramDescriptions;
  }

  public void setHazmatPictogramDescriptions(String hazmatPictogramDescriptions) {
    this.hazmatPictogramDescriptions = hazmatPictogramDescriptions;
  }


  public Item hazmatPictogramIds(String hazmatPictogramIds) {
    this.hazmatPictogramIds = hazmatPictogramIds;
    return this;
  }

  /**
   * The IDs of hazardous material pictograms, separated by the pipe symbol. For example: &lt;br /&gt;&lt;br /&gt;&lt;code&gt;SGH01|SGH02&lt;/code&gt;
   * @return hazmatPictogramIds
   */
  @javax.annotation.Nullable
  public String getHazmatPictogramIds() {
    return hazmatPictogramIds;
  }

  public void setHazmatPictogramIds(String hazmatPictogramIds) {
    this.hazmatPictogramIds = hazmatPictogramIds;
  }


  public Item hazmatPictogramImageUrls(String hazmatPictogramImageUrls) {
    this.hazmatPictogramImageUrls = hazmatPictogramImageUrls;
    return this;
  }

  /**
   * The image URLs of hazardous material pictograms, separated by the pipe symbol. For example: &lt;br /&gt;&lt;br /&gt;&lt;code&gt;https:&amp;#47;&amp;#47;img1|https:&amp;#47;&amp;#47;img2&lt;/code&gt;
   * @return hazmatPictogramImageUrls
   */
  @javax.annotation.Nullable
  public String getHazmatPictogramImageUrls() {
    return hazmatPictogramImageUrls;
  }

  public void setHazmatPictogramImageUrls(String hazmatPictogramImageUrls) {
    this.hazmatPictogramImageUrls = hazmatPictogramImageUrls;
  }


  public Item hazmatSignalWord(String hazmatSignalWord) {
    this.hazmatSignalWord = hazmatSignalWord;
    return this;
  }

  /**
   * The localized signal word for the hazardous material, such as &#39;Danger&#39;.
   * @return hazmatSignalWord
   */
  @javax.annotation.Nullable
  public String getHazmatSignalWord() {
    return hazmatSignalWord;
  }

  public void setHazmatSignalWord(String hazmatSignalWord) {
    this.hazmatSignalWord = hazmatSignalWord;
  }


  public Item hazmatSignalWordId(String hazmatSignalWordId) {
    this.hazmatSignalWordId = hazmatSignalWordId;
    return this;
  }

  /**
   * The ID of the signal word for the hazardous material.
   * @return hazmatSignalWordId
   */
  @javax.annotation.Nullable
  public String getHazmatSignalWordId() {
    return hazmatSignalWordId;
  }

  public void setHazmatSignalWordId(String hazmatSignalWordId) {
    this.hazmatSignalWordId = hazmatSignalWordId;
  }


  public Item hazmatStatementDescriptions(String hazmatStatementDescriptions) {
    this.hazmatStatementDescriptions = hazmatStatementDescriptions;
    return this;
  }

  /**
   * The base64 encoded descriptions of hazardous material statements, separated by the pipe symbol. For example: &lt;br /&gt;&lt;br /&gt;&lt;code&gt;encoded(Unstable explosives)|encoded(Flammable gas)&lt;/code&gt;
   * @return hazmatStatementDescriptions
   */
  @javax.annotation.Nullable
  public String getHazmatStatementDescriptions() {
    return hazmatStatementDescriptions;
  }

  public void setHazmatStatementDescriptions(String hazmatStatementDescriptions) {
    this.hazmatStatementDescriptions = hazmatStatementDescriptions;
  }


  public Item hazmatStatementIds(String hazmatStatementIds) {
    this.hazmatStatementIds = hazmatStatementIds;
    return this;
  }

  /**
   * The IDs of hazardous material statements, separated by the pipe symbol. For example: &lt;br /&gt;&lt;br /&gt;&lt;code&gt;H200|H221&lt;/code&gt;
   * @return hazmatStatementIds
   */
  @javax.annotation.Nullable
  public String getHazmatStatementIds() {
    return hazmatStatementIds;
  }

  public void setHazmatStatementIds(String hazmatStatementIds) {
    this.hazmatStatementIds = hazmatStatementIds;
  }


  public Item imageAlteringProhibited(Boolean imageAlteringProhibited) {
    this.imageAlteringProhibited = imageAlteringProhibited;
    return this;
  }

  /**
   * A boolean that indicates whether the images can be altered. If the value is &lt;code&gt;true&lt;/code&gt;, you cannot modify the image. &lt;p&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note: &lt;/b&gt; Due to image licensing agreements and other legal concerns, modification (including resizing) of some images is strictly prohibited. These images are for display as-is only. &lt;/span&gt;&lt;/p&gt;
   * @return imageAlteringProhibited
   */
  @javax.annotation.Nullable
  public Boolean getImageAlteringProhibited() {
    return imageAlteringProhibited;
  }

  public void setImageAlteringProhibited(Boolean imageAlteringProhibited) {
    this.imageAlteringProhibited = imageAlteringProhibited;
  }


  public Item imageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

  /**
   * The URL to the primary image of the item.  This is the URL of the largest image available based on what the seller submitted.
   * @return imageUrl
   */
  @javax.annotation.Nullable
  public String getImageUrl() {
    return imageUrl;
  }

  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }


  public Item inferredBrand(String inferredBrand) {
    this.inferredBrand = inferredBrand;
    return this;
  }

  /**
   * The name brand for the item, such as Nike or Apple, which has been programmatically determined by eBay. To identify the product, this is always used along with &lt;b&gt; MPN&lt;/b&gt;. &lt;br&gt;&lt;br&gt;If the seller provided a brand for the item, the seller&#39;s value is returned in the &lt;b&gt; brand&lt;/b&gt; column.
   * @return inferredBrand
   */
  @javax.annotation.Nullable
  public String getInferredBrand() {
    return inferredBrand;
  }

  public void setInferredBrand(String inferredBrand) {
    this.inferredBrand = inferredBrand;
  }


  public Item inferredEpid(String inferredEpid) {
    this.inferredEpid = inferredEpid;
    return this;
  }

  /**
   * The ePID (eBay Product ID of a product in the eBay product catalog) for the item, which has been programmatically determined by eBay using the item&#39;s title, aspects, and other data. &lt;br&gt;&lt;br&gt;If the seller actually provided an ePID at listing time for the item, the ePID value is returned in the &lt;b&gt;epid&lt;/b&gt; column instead.
   * @return inferredEpid
   */
  @javax.annotation.Nullable
  public String getInferredEpid() {
    return inferredEpid;
  }

  public void setInferredEpid(String inferredEpid) {
    this.inferredEpid = inferredEpid;
  }


  public Item inferredGtin(String inferredGtin) {
    this.inferredGtin = inferredGtin;
    return this;
  }

  /**
   * The GTIN (Global Trade Item Number) of the product as defined by &lt;a href&#x3D;\&quot;https://www.gtin.info\&quot;&gt;https://www.gtin.info&lt;/a&gt;, which as been programmatically determined by eBay. This can be a UPC (Universal Product Code), EAN (European Article Number), or an ISBN (International Standard Book Number) value. &lt;br&gt;&lt;br&gt;If the seller provided a GTIN for the item, the seller&#39;s value is returned in the &lt;b&gt; gtin&lt;/b&gt; column.
   * @return inferredGtin
   */
  @javax.annotation.Nullable
  public String getInferredGtin() {
    return inferredGtin;
  }

  public void setInferredGtin(String inferredGtin) {
    this.inferredGtin = inferredGtin;
  }


  public Item inferredLocalizedAspects(String inferredLocalizedAspects) {
    this.inferredLocalizedAspects = inferredLocalizedAspects;
    return this;
  }

  /**
   * A semicolon separated list of the name/value pairs for the aspects of the item, which are BASE64 encoded. These aspects have been programmatically determined by eBay. If the seller provided aspects for the item, the seller&#39;s values are returned in the &lt;b&gt;localizedAspects&lt;/b&gt; column.  &lt;br&gt;&lt;br&gt;The aspect label is separated by a pipe (|), the aspect name and value are separated by a colon (:) and the name/value pairs are separated by a semicolon (;). &lt;p&gt;&lt;b&gt; Example without Label&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; Encoded Format:&lt;/b&gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;&lt;em&gt;encodedName&lt;/em&gt;:&lt;em&gt;encodedValue&lt;/em&gt;;&lt;em&gt;encodedName&lt;/em&gt;:&lt;em&gt;encodedValue&lt;/em&gt;;&lt;em&gt;encodedName&lt;/em&gt;:&lt;em&gt;encodedValue&lt;/em&gt;&lt;/code&gt; &lt;/p&gt;       &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; Encoded Example&lt;/b&gt; (The delimiters are &lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;emphasized&lt;/b&gt;):    &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;U2l6ZQ&#x3D;&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;:&lt;/b&gt;WEw&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;;&lt;/b&gt;Q29sb3I&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;:&lt;/b&gt;UmVk&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;;&lt;/b&gt;U2xlZXZlcw&#x3D;&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;:&lt;/b&gt;TG9uZw&#x3D;&#x3D;&lt;/code&gt; &lt;/p&gt;    &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; Decoded: &lt;/b&gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Size:XL;Color:Red;Sleeves:Long &lt;/p&gt;        &lt;p&gt;&lt;br&gt;&lt;b&gt; Example with Label&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; Encoded Format:&lt;/b&gt;   &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;&lt;em&gt;encodedLabel&lt;/em&gt;|&lt;em&gt;encodedName&lt;/em&gt;:&lt;em&gt;encodedValue&lt;/em&gt;;&lt;em&gt;encodedName&lt;/em&gt;:&lt;em&gt;encodedValue&lt;/em&gt;;&lt;em&gt;encodedLabel&lt;/em&gt;|&lt;/code&gt;&lt;/p&gt;       &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; Encoded Example&lt;/b&gt; (The delimiters are &lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;emphasized&lt;/b&gt;):  &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;UHJvZHVjdCBJZGVudGlmaWVycw&#x3D;&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;|&lt;/b&gt;R1RJTg&#x3D;&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;:&lt;/b&gt;MDE5MDE5ODA2NjYzMw&#x3D;&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;;&lt;/b&gt;QlJBTkQ&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;:&lt;/b&gt;QXBwbGU&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;;&lt;/b&gt;UHJvZHVjdCBLZXkgRmVhdHVyZXM&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;|&lt;/b&gt;TW9kZWw&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;:&lt;/b&gt;aVBob25lIDc&#x3D;&lt;/code&gt; &lt;/p&gt;        &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; Decoded: &lt;/b&gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Product Identifiers|GTIN:0190198066633;BRAND:Apple;Product Key Features|Model:iPhone 7&lt;/p&gt;        &lt;p&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note: &lt;/b&gt; The separators (&lt;code&gt; |  :  ; &lt;/code&gt;) are &lt;i&gt; not&lt;/i&gt; encoded. You must decode each label, name, and value separately. You cannot decode the entire string.&lt;/b&gt;&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-feed.html#encoded-aspects\&quot;&gt;Encoded Aspects&lt;/a&gt; in the Buying Integration Guide.&lt;/p&gt;
   * @return inferredLocalizedAspects
   */
  @javax.annotation.Nullable
  public String getInferredLocalizedAspects() {
    return inferredLocalizedAspects;
  }

  public void setInferredLocalizedAspects(String inferredLocalizedAspects) {
    this.inferredLocalizedAspects = inferredLocalizedAspects;
  }


  public Item inferredMpn(String inferredMpn) {
    this.inferredMpn = inferredMpn;
    return this;
  }

  /**
   * The MPN (Manufacturer&#39;s Part Number) for the item, which has been programmatically determined by eBay. To identify the product, this is always used along with &lt;b&gt; brand&lt;/b&gt;. &lt;br&gt;&lt;br&gt;If the seller provided a MPN for the item, the seller&#39;s value is returned in the &lt;b&gt; mpn&lt;/b&gt; column.
   * @return inferredMpn
   */
  @javax.annotation.Nullable
  public String getInferredMpn() {
    return inferredMpn;
  }

  public void setInferredMpn(String inferredMpn) {
    this.inferredMpn = inferredMpn;
  }


  public Item itemAffiliateWebUrl(String itemAffiliateWebUrl) {
    this.itemAffiliateWebUrl = itemAffiliateWebUrl;
    return this;
  }

  /**
   * The URL of the View Item page of the item, with the affiliate tracking ID appended to it.&lt;br&gt;&lt;br&gt;&lt;b&gt;For example&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;code&gt;https://www.ebay.de/itm/2********0?mkevt&#x3D;1&amp;mkcid&#x3D;1&amp;mkrid&#x3D;707-53477-19255-0&amp;campid&#x3D;CAMPAIGNID&amp;toolid&#x3D;2***6&amp;customid&#x3D;CUSTOMID&lt;/code&gt;
   * @return itemAffiliateWebUrl
   */
  @javax.annotation.Nullable
  public String getItemAffiliateWebUrl() {
    return itemAffiliateWebUrl;
  }

  public void setItemAffiliateWebUrl(String itemAffiliateWebUrl) {
    this.itemAffiliateWebUrl = itemAffiliateWebUrl;
  }


  public Item itemCreationDate(String itemCreationDate) {
    this.itemCreationDate = itemCreationDate;
    return this;
  }

  /**
   * A timestamp indicating when the item was created. &lt;br&gt;&lt;br&gt;&lt;b&gt; Format: &lt;/b&gt; UTC &lt;code&gt;yyyy-MM-ddThh:mm:ss.sssZ&lt;/code&gt;
   * @return itemCreationDate
   */
  @javax.annotation.Nullable
  public String getItemCreationDate() {
    return itemCreationDate;
  }

  public void setItemCreationDate(String itemCreationDate) {
    this.itemCreationDate = itemCreationDate;
  }


  public Item itemEndDate(String itemEndDate) {
    this.itemEndDate = itemEndDate;
    return this;
  }

  /**
   * A timestamp indicating when the item&#39;s sale period will end based on its start date and duration. For Good &#39;Til Cancelled items, no value is returned in this column. &lt;br&gt;&lt;br&gt;&lt;b&gt; Format: &lt;/b&gt; UTC &lt;code&gt;yyyy-MM-ddThh:mm:ss.sssZ&lt;/code&gt;
   * @return itemEndDate
   */
  @javax.annotation.Nullable
  public String getItemEndDate() {
    return itemEndDate;
  }

  public void setItemEndDate(String itemEndDate) {
    this.itemEndDate = itemEndDate;
  }


  public Item itemId(String itemId) {
    this.itemId = itemId;
    return this;
  }

  /**
   * The unique identifier of an item in eBay RESTful format. An example would be &lt;code&gt;v1|1**********2|4**********2&lt;/code&gt;.
   * @return itemId
   */
  @javax.annotation.Nullable
  public String getItemId() {
    return itemId;
  }

  public void setItemId(String itemId) {
    this.itemId = itemId;
  }


  public Item itemLocationCountry(String itemLocationCountry) {
    this.itemLocationCountry = itemLocationCountry;
    return this;
  }

  /**
   * The country where the item is physically located.
   * @return itemLocationCountry
   */
  @javax.annotation.Nullable
  public String getItemLocationCountry() {
    return itemLocationCountry;
  }

  public void setItemLocationCountry(String itemLocationCountry) {
    this.itemLocationCountry = itemLocationCountry;
  }


  public Item itemWebUrl(String itemWebUrl) {
    this.itemWebUrl = itemWebUrl;
    return this;
  }

  /**
   * The URL of the View Item page of the item. &lt;br/&gt;&lt;br&gt;&lt;b&gt;For example:&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Single SKU:&lt;/b&gt;&lt;br&gt;&lt;code&gt;https://www.ebay.de/itm/2********0&lt;/code&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;MSKU:&lt;/b&gt;&lt;br&gt;&lt;code&gt;https://www.ebay.com/itm/2********9?var&#x3D;5********2&lt;/code&gt;
   * @return itemWebUrl
   */
  @javax.annotation.Nullable
  public String getItemWebUrl() {
    return itemWebUrl;
  }

  public void setItemWebUrl(String itemWebUrl) {
    this.itemWebUrl = itemWebUrl;
  }


  public Item legacyItemId(String legacyItemId) {
    this.legacyItemId = legacyItemId;
    return this;
  }

  /**
   * The unique identifier of the eBay listing that contains the item. This is the traditional/legacy ID that is often seen in the URL of the listing View Item page.
   * @return legacyItemId
   */
  @javax.annotation.Nullable
  public String getLegacyItemId() {
    return legacyItemId;
  }

  public void setLegacyItemId(String legacyItemId) {
    this.legacyItemId = legacyItemId;
  }


  public Item lengthUnitOfMeasure(String lengthUnitOfMeasure) {
    this.lengthUnitOfMeasure = lengthUnitOfMeasure;
    return this;
  }

  /**
   * The unit of measurement used for the package dimensions, such as INCH, FEET, CENTIMETER, or METER. &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list.  For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/buy/feed/types/api:LengthUnitOfMeasureEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return lengthUnitOfMeasure
   */
  @javax.annotation.Nullable
  public String getLengthUnitOfMeasure() {
    return lengthUnitOfMeasure;
  }

  public void setLengthUnitOfMeasure(String lengthUnitOfMeasure) {
    this.lengthUnitOfMeasure = lengthUnitOfMeasure;
  }


  public Item localizedAspects(String localizedAspects) {
    this.localizedAspects = localizedAspects;
    return this;
  }

  /**
   * A semicolon separated list of the name/value pairs for the aspects of the item, which are BASE64 encoded. The aspect label is separated by a pipe (|), the aspect name and value are separated by a colon (:) and the name/value pairs are separated by a semicolon (;). &lt;p&gt;&lt;b&gt; Example without Label&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; Encoded Format:&lt;/b&gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;&lt;em&gt;encodedName&lt;/em&gt;:&lt;em&gt;encodedValue&lt;/em&gt;;&lt;em&gt;encodedName&lt;/em&gt;:&lt;em&gt;encodedValue&lt;/em&gt;;&lt;em&gt;encodedName&lt;/em&gt;:&lt;em&gt;encodedValue&lt;/em&gt;&lt;/code&gt; &lt;/p&gt;       &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; Encoded Example&lt;/b&gt; (The delimiters are &lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;emphasized&lt;/b&gt;):    &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;U2l6ZQ&#x3D;&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;:&lt;/b&gt;WEw&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;;&lt;/b&gt;Q29sb3I&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;:&lt;/b&gt;UmVk&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;;&lt;/b&gt;U2xlZXZlcw&#x3D;&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;:&lt;/b&gt;TG9uZw&#x3D;&#x3D;&lt;/code&gt; &lt;/p&gt;    &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; Decoded: &lt;/b&gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Size:XL;Color:Red;Sleeves:Long &lt;/p&gt;        &lt;p&gt;&lt;br&gt;&lt;b&gt; Example with Label&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; Encoded Format:&lt;/b&gt;   &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;&lt;em&gt;encodedLabel&lt;/em&gt;|&lt;em&gt;encodedName&lt;/em&gt;:&lt;em&gt;encodedValue&lt;/em&gt;;&lt;em&gt;encodedName&lt;/em&gt;:&lt;em&gt;encodedValue&lt;/em&gt;;&lt;em&gt;encodedLabel&lt;/em&gt;|&lt;/code&gt;&lt;/p&gt;       &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; Encoded Example&lt;/b&gt; (The delimiters are &lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;emphasized&lt;/b&gt;):  &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;UHJvZHVjdCBJZGVudGlmaWVycw&#x3D;&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;|&lt;/b&gt;R1RJTg&#x3D;&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;:&lt;/b&gt;MDE5MDE5ODA2NjYzMw&#x3D;&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;;&lt;/b&gt;QlJBTkQ&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;:&lt;/b&gt;QXBwbGU&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;;&lt;/b&gt;UHJvZHVjdCBLZXkgRmVhdHVyZXM&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;|&lt;/b&gt;TW9kZWw&#x3D;&lt;b style&#x3D;\&quot;font-family: &#39;Arial Black&#39;;\&quot;&gt;:&lt;/b&gt;aVBob25lIDc&#x3D;&lt;/code&gt; &lt;/p&gt;        &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; Decoded: &lt;/b&gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Product Identifiers|GTIN:0190198066633;BRAND:Apple;Product Key Features|Model:iPhone 7&lt;/p&gt;        &lt;p&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note: &lt;/b&gt; The separators (&lt;code&gt; |  :  ; &lt;/code&gt;) are &lt;i&gt; not&lt;/i&gt; encoded. You must decode each label, name, and value separately. You cannot decode the entire string.&lt;/b&gt;&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-feed.html#encoded-aspects\&quot;&gt;Encoded Aspects&lt;/a&gt; in the Buying Integration Guide.&lt;/p&gt;
   * @return localizedAspects
   */
  @javax.annotation.Nullable
  public String getLocalizedAspects() {
    return localizedAspects;
  }

  public void setLocalizedAspects(String localizedAspects) {
    this.localizedAspects = localizedAspects;
  }


  public Item lotSize(Integer lotSize) {
    this.lotSize = lotSize;
    return this;
  }

  /**
   * The number of items in a lot. In other words, a lot size is the number of items that are being sold together.  &lt;br&gt;&lt;br&gt;A lot is a set of two or more items included in a single listing that must be purchased together in a single order line item. All the items in the lot are the same but there can be multiple items in a single lot,  such as the package of batteries shown in the example below.  &lt;br&gt;&lt;br&gt;&lt;b&gt;For example:&lt;/b&gt; &lt;br&gt;&lt;br&gt;&lt;table border&#x3D;\&quot;1\&quot;&gt; &lt;tr&gt; &lt;tr&gt;  &lt;th&gt;Item&lt;/th&gt;  &lt;th&gt;Lot Definition&lt;/th&gt; &lt;th&gt;Lot Size&lt;/th&gt;&lt;/tr&gt;  &lt;tr&gt;  &lt;td&gt;A package of 24 AA batteries&lt;/td&gt;  &lt;td&gt;A box of 10 packages&lt;/td&gt;  &lt;td&gt;10  &lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt;  &lt;td&gt;A P235/75-15 Goodyear tire &lt;/td&gt;  &lt;td&gt;4 tires  &lt;/td&gt;  &lt;td&gt;4  &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Fashion Jewelry Rings  &lt;/td&gt; &lt;td&gt;Package of 100 assorted rings  &lt;/td&gt; &lt;td&gt;100 &lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;  &lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note: &lt;/b&gt;  Lots are not supported in all categories.  &lt;/span&gt;
   * @return lotSize
   */
  @javax.annotation.Nullable
  public Integer getLotSize() {
    return lotSize;
  }

  public void setLotSize(Integer lotSize) {
    this.lotSize = lotSize;
  }


  public Item material(String material) {
    this.material = material;
    return this;
  }

  /**
   * The material that the item is made of.
   * @return material
   */
  @javax.annotation.Nullable
  public String getMaterial() {
    return material;
  }

  public void setMaterial(String material) {
    this.material = material;
  }


  public Item mpn(String mpn) {
    this.mpn = mpn;
    return this;
  }

  /**
   * The manufacturer part number, which is a number that is used in combination with &lt;b&gt; brand&lt;/b&gt; to identify a product.
   * @return mpn
   */
  @javax.annotation.Nullable
  public String getMpn() {
    return mpn;
  }

  public void setMpn(String mpn) {
    this.mpn = mpn;
  }


  public Item originalPriceCurrency(String originalPriceCurrency) {
    this.originalPriceCurrency = originalPriceCurrency;
    return this;
  }

  /**
   * The currency of the &lt;b&gt; originalPriceValue&lt;/b&gt; of the item and the &lt;b&gt; discountAmount&lt;/b&gt;.  For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/buy/feed/types/bas:CurrencyCodeEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return originalPriceCurrency
   */
  @javax.annotation.Nullable
  public String getOriginalPriceCurrency() {
    return originalPriceCurrency;
  }

  public void setOriginalPriceCurrency(String originalPriceCurrency) {
    this.originalPriceCurrency = originalPriceCurrency;
  }


  public Item originalPriceValue(String originalPriceValue) {
    this.originalPriceValue = originalPriceValue;
    return this;
  }

  /**
   * The original selling price of the item. This lets you surface a strikethrough price for the item. 
   * @return originalPriceValue
   */
  @javax.annotation.Nullable
  public String getOriginalPriceValue() {
    return originalPriceValue;
  }

  public void setOriginalPriceValue(String originalPriceValue) {
    this.originalPriceValue = originalPriceValue;
  }


  public Item packageHeight(String packageHeight) {
    this.packageHeight = packageHeight;
    return this;
  }

  /**
   * The height of the shipping package that contains the item.
   * @return packageHeight
   */
  @javax.annotation.Nullable
  public String getPackageHeight() {
    return packageHeight;
  }

  public void setPackageHeight(String packageHeight) {
    this.packageHeight = packageHeight;
  }


  public Item packageLength(String packageLength) {
    this.packageLength = packageLength;
    return this;
  }

  /**
   * The length of the shipping package that contains the item.
   * @return packageLength
   */
  @javax.annotation.Nullable
  public String getPackageLength() {
    return packageLength;
  }

  public void setPackageLength(String packageLength) {
    this.packageLength = packageLength;
  }


  public Item packageWeight(String packageWeight) {
    this.packageWeight = packageWeight;
    return this;
  }

  /**
   * The weight of the package that contains the item.
   * @return packageWeight
   */
  @javax.annotation.Nullable
  public String getPackageWeight() {
    return packageWeight;
  }

  public void setPackageWeight(String packageWeight) {
    this.packageWeight = packageWeight;
  }


  public Item packageWidth(String packageWidth) {
    this.packageWidth = packageWidth;
    return this;
  }

  /**
   * The width of the shipping package that contains the item.
   * @return packageWidth
   */
  @javax.annotation.Nullable
  public String getPackageWidth() {
    return packageWidth;
  }

  public void setPackageWidth(String packageWidth) {
    this.packageWidth = packageWidth;
  }


  public Item pattern(String pattern) {
    this.pattern = pattern;
    return this;
  }

  /**
   * Text describing the pattern used on the item. For example, paisley.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; All the item aspects, including this aspect, are returned in the localizedAspects container.
   * @return pattern
   */
  @javax.annotation.Nullable
  public String getPattern() {
    return pattern;
  }

  public void setPattern(String pattern) {
    this.pattern = pattern;
  }


  public Item priceCurrency(String priceCurrency) {
    this.priceCurrency = priceCurrency;
    return this;
  }

  /**
   * The currency used for the price of the item. Generally, this is the currency used by the country of the eBay site offering the item. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/buy/feed/types/bas:CurrencyCodeEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return priceCurrency
   */
  @javax.annotation.Nullable
  public String getPriceCurrency() {
    return priceCurrency;
  }

  public void setPriceCurrency(String priceCurrency) {
    this.priceCurrency = priceCurrency;
  }


  public Item priceValue(String priceValue) {
    this.priceValue = priceValue;
    return this;
  }

  /**
   * The price of the item, which can be a discounted price. If it is discounted, information about the discount is returned in the &lt;b&gt;originalPriceValue&lt;/b&gt;, &lt;b&gt;originalPriceCurrency&lt;/b&gt;, &lt;b&gt;discountAmount&lt;/b&gt;, and &lt;b&gt;discountPercentage&lt;/b&gt; columns.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt; Note: &lt;/b&gt;The price includes the value-added tax (VAT) for applicable jurisdictions when requested from supported marketplaces. In this case, users must pass the &lt;a href&#x3D;\&quot;/api-docs/static/rest-request-components.html#HTTP\&quot;&gt;&lt;code&gt;X-EBAY-C-MARKETPLACE-ID&lt;/code&gt;&lt;/a&gt; request header specifying the supported marketplace (such as &lt;code&gt;EBAY_GB&lt;/code&gt;) to see the VAT-inclusive pricing. For more information on VAT, refer to &lt;a href&#x3D;\&quot;https://www.ebay.co.uk/help/listings/default/vat-obligations-eu?id&#x3D;4650&amp;st&#x3D;12&amp;pos&#x3D;1&amp;query&#x3D;Your%20VAT%20obligations%20in%20the%20EU&amp;intent&#x3D;VAT\&quot;&gt;VAT Obligations in the EU&lt;/a&gt;.&lt;/span&gt;
   * @return priceValue
   */
  @javax.annotation.Nullable
  public String getPriceValue() {
    return priceValue;
  }

  public void setPriceValue(String priceValue) {
    this.priceValue = priceValue;
  }


  public Item primaryItemGroupId(String primaryItemGroupId) {
    this.primaryItemGroupId = primaryItemGroupId;
    return this;
  }

  /**
   * The unique identifier for the item group that contains this item. An item group is an item that has various aspect differences, such as color, size, storage capacity, etc.
   * @return primaryItemGroupId
   */
  @javax.annotation.Nullable
  public String getPrimaryItemGroupId() {
    return primaryItemGroupId;
  }

  public void setPrimaryItemGroupId(String primaryItemGroupId) {
    this.primaryItemGroupId = primaryItemGroupId;
  }


  public Item primaryItemGroupType(String primaryItemGroupType) {
    this.primaryItemGroupType = primaryItemGroupType;
    return this;
  }

  /**
   * The item group type. Supported value: &lt;code&gt;SELLER_DEFINED_VARIATIONS&lt;/code&gt;, indicates that the item group was created by the seller. &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list.
   * @return primaryItemGroupType
   */
  @javax.annotation.Nullable
  public String getPrimaryItemGroupType() {
    return primaryItemGroupType;
  }

  public void setPrimaryItemGroupType(String primaryItemGroupType) {
    this.primaryItemGroupType = primaryItemGroupType;
  }


  public Item priorityListingPayload(String priorityListingPayload) {
    this.priorityListingPayload = priorityListingPayload;
    return this;
  }

  /**
   * EPN (eBay Partner Network) publishers append this value to their affiliate tracking URL when using an EPN tracking link to track changes that occur to Priority Listing items. &lt;br&gt;&lt;br&gt;&lt;b&gt;Example:&lt;/b&gt;&lt;code&gt;amdata&#x3D;enc%3AAQAFAAAAkB1DmsmXf%2BqZ%2BCEMGdebW6oR75GCMdBmc4MCQ%2FCEPqgKHbT0jdWhPwfY5LdUs6HTaP0eBlwKE7Smy2eDslewF7l3xjwWxjqwzNAnsYgxn2PiGkTKbiQSQytFUiymdtANpk1qOnBOoMGMK%2BWsji7jYlvySSs9o9s24TxD6RqWZpNrltzOU7mfnv3H40SZ3YESzg%3D%3D&lt;/code&gt;&lt;br/&gt;&lt;br&gt;See &lt;a  href&#x3D;\&quot;https://developer.ebay.com/api-docs/buy/static/ref-epn-link.html \&quot;&gt;Creating an EPN Tracking Link&lt;/a&gt; for information on EPN tracking links.
   * @return priorityListingPayload
   */
  @javax.annotation.Nullable
  public String getPriorityListingPayload() {
    return priorityListingPayload;
  }

  public void setPriorityListingPayload(String priorityListingPayload) {
    this.priorityListingPayload = priorityListingPayload;
  }


  public Item qualifiedPrograms(String qualifiedPrograms) {
    this.qualifiedPrograms = qualifiedPrograms;
    return this;
  }

  /**
   * A pipe separated list of the qualified programs available for the item, such as EBAY_PLUS and AUTHENTICITY_GUARANTEE.  &lt;br&gt;&lt;br&gt;eBay Plus is a premium account option for buyers, which provides benefits such as fast free domestic shipping and free returns on selected items. Top-Rated eBay sellers must opt in to eBay Plus to be able to offer the program on qualifying listings. Sellers must commit to next-day delivery of those items.  &lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note: &lt;/b&gt; eBay Plus is available only to buyers in Germany, Austria, and Australia marketplaces. &lt;/span&gt;&lt;br&gt;&lt;br&gt;The eBay Authenticity Guarantee program enables third-party authenticators to perform authentication verification inspections on items such as watches and sneakers.
   * @return qualifiedPrograms
   */
  @javax.annotation.Nullable
  public String getQualifiedPrograms() {
    return qualifiedPrograms;
  }

  public void setQualifiedPrograms(String qualifiedPrograms) {
    this.qualifiedPrograms = qualifiedPrograms;
  }


  public Item quantityUsedForEstimate(Integer quantityUsedForEstimate) {
    this.quantityUsedForEstimate = quantityUsedForEstimate;
    return this;
  }

  /**
   * The number of items used when calculating the estimation information.
   * @return quantityUsedForEstimate
   */
  @javax.annotation.Nullable
  public Integer getQuantityUsedForEstimate() {
    return quantityUsedForEstimate;
  }

  public void setQuantityUsedForEstimate(Integer quantityUsedForEstimate) {
    this.quantityUsedForEstimate = quantityUsedForEstimate;
  }


  public Item refundMethod(String refundMethod) {
    this.refundMethod = refundMethod;
    return this;
  }

  /**
   * An enumeration value that indicates how a buyer is refunded when an item is returned. &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/buy/feed/types/api:RefundMethodEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return refundMethod
   */
  @javax.annotation.Nullable
  public String getRefundMethod() {
    return refundMethod;
  }

  public void setRefundMethod(String refundMethod) {
    this.refundMethod = refundMethod;
  }


  public Item repairScore(String repairScore) {
    this.repairScore = repairScore;
    return this;
  }

  /**
   * A score that describes how easy it is to repair the product. Score values range from 0.1 (hardest to repair) to 10.0 (easiest), always including a single decimal place.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; Support for this field is currently limited to the France marketplace.&lt;/span&gt;
   * @return repairScore
   */
  @javax.annotation.Nullable
  public String getRepairScore() {
    return repairScore;
  }

  public void setRepairScore(String repairScore) {
    this.repairScore = repairScore;
  }


  public Item returnMethod(String returnMethod) {
    this.returnMethod = returnMethod;
    return this;
  }

  /**
   * An enumeration value that indicates the alternative methods for a full refund when an item is returned. This column will have data if the seller offers the buyer an item replacement or exchange instead of a monetary refund. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/buy/feed/types/api:ReturnMethodEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return returnMethod
   */
  @javax.annotation.Nullable
  public String getReturnMethod() {
    return returnMethod;
  }

  public void setReturnMethod(String returnMethod) {
    this.returnMethod = returnMethod;
  }


  public Item returnPeriodUnit(String returnPeriodUnit) {
    this.returnPeriodUnit = returnPeriodUnit;
    return this;
  }

  /**
   * An enumeration value that indicates the period of time being used to measure the duration, such as business days, months, or years. &lt;br&gt;&lt;br&gt;&lt;b&gt;TimeDurationUnitEnum&lt;/b&gt; is a common type shared by multiple eBay APIs and fields to express the time unit, but for return period duration, this value will always be &lt;code&gt;DAY&lt;/code&gt;. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/buy/feed/types/bas:TimeDurationUnitEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return returnPeriodUnit
   */
  @javax.annotation.Nullable
  public String getReturnPeriodUnit() {
    return returnPeriodUnit;
  }

  public void setReturnPeriodUnit(String returnPeriodUnit) {
    this.returnPeriodUnit = returnPeriodUnit;
  }


  public Item returnPeriodValue(Integer returnPeriodValue) {
    this.returnPeriodValue = returnPeriodValue;
    return this;
  }

  /**
   * The amount of days that the buyer has to return the item after the purchase date. For example, if this value is &#39;30&#39;, the return period is 30 days.
   * @return returnPeriodValue
   */
  @javax.annotation.Nullable
  public Integer getReturnPeriodValue() {
    return returnPeriodValue;
  }

  public void setReturnPeriodValue(Integer returnPeriodValue) {
    this.returnPeriodValue = returnPeriodValue;
  }


  public Item returnShippingCostPayer(String returnShippingCostPayer) {
    this.returnShippingCostPayer = returnShippingCostPayer;
    return this;
  }

  /**
   * The party responsible for the return shipping costs when an item is returned. &lt;br&gt;&lt;br&gt;&lt;b&gt;Valid Values: &lt;/b&gt; &lt;code&gt;BUYER&lt;/code&gt; or &lt;code&gt;SELLER&lt;/code&gt;  &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/buy/feed/types/api:ReturnShippingCostPayerEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return returnShippingCostPayer
   */
  @javax.annotation.Nullable
  public String getReturnShippingCostPayer() {
    return returnShippingCostPayer;
  }

  public void setReturnShippingCostPayer(String returnShippingCostPayer) {
    this.returnShippingCostPayer = returnShippingCostPayer;
  }


  public Item returnsAccepted(Boolean returnsAccepted) {
    this.returnsAccepted = returnsAccepted;
    return this;
  }

  /**
   * Indicates whether the seller accepts returns for the item.
   * @return returnsAccepted
   */
  @javax.annotation.Nullable
  public Boolean getReturnsAccepted() {
    return returnsAccepted;
  }

  public void setReturnsAccepted(Boolean returnsAccepted) {
    this.returnsAccepted = returnsAccepted;
  }


  public Item sellerAccountType(String sellerAccountType) {
    this.sellerAccountType = sellerAccountType;
    return this;
  }

  /**
   * A string value that specifies whether the seller is a business or an individual. This is determined when the seller registers with eBay. If the seller registers for a business account, the value returned in this field will be &lt;code&gt;BUSINESS&lt;/code&gt;. If the seller registers for a private account, the value returned in this field will be &lt;code&gt;INDIVIDUAL&lt;/code&gt;.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; This designation is required by the tax laws in some countries.&lt;/span&gt;&lt;br&gt;&lt;br&gt;This field is returned only on the following sites: EBAY_AT, EBAY_BE, EBAY_CH, EBAY_DE, EBAY_ES, EBAY_FR, EBAY_GB, EBAY_IE, EBAY_IT, and EBAY_PL.&lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list.&lt;br&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt; &lt;code&gt;BUSINESS&lt;/code&gt; or &lt;code&gt;INDIVIDUAL&lt;/code&gt;
   * @return sellerAccountType
   */
  @javax.annotation.Nullable
  public String getSellerAccountType() {
    return sellerAccountType;
  }

  public void setSellerAccountType(String sellerAccountType) {
    this.sellerAccountType = sellerAccountType;
  }


  public Item sellerFeedbackPercentage(String sellerFeedbackPercentage) {
    this.sellerFeedbackPercentage = sellerFeedbackPercentage;
    return this;
  }

  /**
   * The percentage of the seller&#39;s total positive feedback.
   * @return sellerFeedbackPercentage
   */
  @javax.annotation.Nullable
  public String getSellerFeedbackPercentage() {
    return sellerFeedbackPercentage;
  }

  public void setSellerFeedbackPercentage(String sellerFeedbackPercentage) {
    this.sellerFeedbackPercentage = sellerFeedbackPercentage;
  }


  public Item sellerFeedbackScore(String sellerFeedbackScore) {
    this.sellerFeedbackScore = sellerFeedbackScore;
    return this;
  }

  /**
   * The feedback score of the seller. This value is based on the ratings from eBay members that bought items from this seller.
   * @return sellerFeedbackScore
   */
  @javax.annotation.Nullable
  public String getSellerFeedbackScore() {
    return sellerFeedbackScore;
  }

  public void setSellerFeedbackScore(String sellerFeedbackScore) {
    this.sellerFeedbackScore = sellerFeedbackScore;
  }


  public Item sellerItemRevision(String sellerItemRevision) {
    this.sellerItemRevision = sellerItemRevision;
    return this;
  }

  /**
   * An identifier generated/incremented when a seller revises the item. There are two types of item revisions: &lt;ul&gt;&lt;li&gt;Seller changes, such as changing the title&lt;/li&gt;  &lt;li&gt;eBay system changes, such as changing the quantity when an item is purchased&lt;/li&gt;&lt;/ul&gt; This ID is changed &lt;i&gt; only&lt;/i&gt; when the seller makes a change to the item.
   * @return sellerItemRevision
   */
  @javax.annotation.Nullable
  public String getSellerItemRevision() {
    return sellerItemRevision;
  }

  public void setSellerItemRevision(String sellerItemRevision) {
    this.sellerItemRevision = sellerItemRevision;
  }


  public Item sellerTrustLevel(String sellerTrustLevel) {
    this.sellerTrustLevel = sellerTrustLevel;
    return this;
  }

  /**
   * An enumeration value representing the eBay status of the seller. &lt;br&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt; &lt;code&gt;TOP_RATED&lt;/code&gt;, &lt;code&gt;ABOVE_STANDARD&lt;/code&gt;, or an empty value. &lt;br&gt;&lt;br&gt;An empty value indicates a return of anything other than &lt;code&gt;TOP_RATED&lt;/code&gt; or &lt;code&gt;ABOVE_STANDARD&lt;/code&gt;.&lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/buy/feed/types/api:SellerTrustLevelEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return sellerTrustLevel
   */
  @javax.annotation.Nullable
  public String getSellerTrustLevel() {
    return sellerTrustLevel;
  }

  public void setSellerTrustLevel(String sellerTrustLevel) {
    this.sellerTrustLevel = sellerTrustLevel;
  }


  public Item sellerUsername(String sellerUsername) {
    this.sellerUsername = sellerUsername;
    return this;
  }

  /**
   * The seller&#39;s eBay user name.
   * @return sellerUsername
   */
  @javax.annotation.Nullable
  public String getSellerUsername() {
    return sellerUsername;
  }

  public void setSellerUsername(String sellerUsername) {
    this.sellerUsername = sellerUsername;
  }


  public Item shipToExcludedRegions(String shipToExcludedRegions) {
    this.shipToExcludedRegions = shipToExcludedRegions;
    return this;
  }

  /**
   * A pipe (&lt;code&gt;|&lt;/code&gt;) separated alphabetical list of the geographic countries and regions where the item cannot be shipped. &lt;br&gt;&lt;br&gt;These countries and regions refine (restrict) the &lt;b&gt; shipToIncludedRegions&lt;/b&gt; list.  The COUNTRY: list is separated from the REGION: list with a semicolon (&lt;code&gt;;&lt;/code&gt;).       &lt;br&gt;&lt;br&gt;&lt;b&gt; Format Example: &lt;/b&gt; &lt;br&gt; &lt;code&gt;COUNTRY:US|BM|GL|MX|PM;REGION:AFRICA|ASIA|CENTRAL_AMERICA_AND_CARIBBEAN|EUROPE|MIDDLE_EAST|OCEANIA|SOUTH_AMERICA|SOUTHEAST_ASIA;&lt;/code&gt;  &lt;br&gt;&lt;br&gt;&lt;b&gt; Country Values: &lt;/b&gt; The two-letter &lt;a href&#x3D;\&quot;https://www.iso.org/iso-3166-country-codes.html\&quot;&gt;ISO 3166&lt;/a&gt; standard code of the country.       &lt;br&gt;&lt;br&gt;&lt;b&gt; Region Values: &lt;/b&gt; AFRICA, AMERICAS, ANTARCTIC, ARCTIC, ASIA, AUSTRALIA, CENTRAL_AMERICA_AND_CARIBBEAN, EUROPE, EURO_UNION, GREATER_CHINA, MIDDLE_EAST, NORTH_AMERICA, OCEANIA, REST_OF_ASIA, SOUTHEAST_ASIA, SOUTH_AMERICA, WORLDWIDE &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list.
   * @return shipToExcludedRegions
   */
  @javax.annotation.Nullable
  public String getShipToExcludedRegions() {
    return shipToExcludedRegions;
  }

  public void setShipToExcludedRegions(String shipToExcludedRegions) {
    this.shipToExcludedRegions = shipToExcludedRegions;
  }


  public Item shipToIncludedRegions(String shipToIncludedRegions) {
    this.shipToIncludedRegions = shipToIncludedRegions;
    return this;
  }

  /**
   * A pipe (&lt;code&gt;|&lt;/code&gt;) separated alphabetical list of the geographic countries and regions where the seller will ship the item. &lt;br&gt;&lt;br&gt;If a region is specified, you will need to subtract any countries and regions returned in the &lt;b&gt; shipToExcludedRegions&lt;/b&gt; column to fully understand where the seller will ship. &lt;br&gt;&lt;br&gt;The COUNTRY: list is separated from the REGION: list with a semicolon (&lt;code&gt;;&lt;/code&gt;).       &lt;br&gt;&lt;br&gt;&lt;b&gt; Format Example: &lt;/b&gt; &lt;br&gt; &lt;code&gt;COUNTRY:US|BM|GL|MX|PM;REGION:AFRICA|ASIA|CENTRAL_AMERICA_AND_CARIBBEAN|EUROPE|MIDDLE_EAST|OCEANIA|SOUTH_AMERICA|SOUTHEAST_ASIA;&lt;/code&gt;  &lt;br&gt;&lt;br&gt;&lt;b&gt; Country Values: &lt;/b&gt; The two-letter &lt;a href&#x3D;\&quot;https://www.iso.org/iso-3166-country-codes.html\&quot;&gt;ISO 3166&lt;/a&gt; standard code of the country.       &lt;br&gt;&lt;br&gt;&lt;b&gt; Region Values: &lt;/b&gt; AFRICA, AMERICAS, ANTARCTIC, ARCTIC, ASIA, AUSTRALIA, CENTRAL_AMERICA_AND_CARIBBEAN, EUROPE, EURO_UNION, GREATER_CHINA, MIDDLE_EAST, NORTH_AMERICA, OCEANIA, REST_OF_ASIA, SOUTHEAST_ASIA, SOUTH_AMERICA, WORLDWIDE &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list.
   * @return shipToIncludedRegions
   */
  @javax.annotation.Nullable
  public String getShipToIncludedRegions() {
    return shipToIncludedRegions;
  }

  public void setShipToIncludedRegions(String shipToIncludedRegions) {
    this.shipToIncludedRegions = shipToIncludedRegions;
  }


  public Item shippingCarrierCode(String shippingCarrierCode) {
    this.shippingCarrierCode = shippingCarrierCode;
    return this;
  }

  /**
   * The name of the shipping provider, such as FedEx, or USPS.
   * @return shippingCarrierCode
   */
  @javax.annotation.Nullable
  public String getShippingCarrierCode() {
    return shippingCarrierCode;
  }

  public void setShippingCarrierCode(String shippingCarrierCode) {
    this.shippingCarrierCode = shippingCarrierCode;
  }


  public Item shippingCost(String shippingCost) {
    this.shippingCost = shippingCost;
    return this;
  }

  /**
   * The final shipping cost for all the items after all discounts are applied.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt; Note: &lt;/b&gt;The price includes the value-added tax (VAT) for applicable jurisdictions when requested from supported marketplaces. In this case, users must pass the &lt;a href&#x3D;\&quot;/api-docs/static/rest-request-components.html#HTTP\&quot;&gt;&lt;code&gt;X-EBAY-C-MARKETPLACE-ID&lt;/code&gt;&lt;/a&gt; request header specifying the supported marketplace (such as &lt;code&gt;EBAY_GB&lt;/code&gt;) to see the VAT-inclusive pricing. For more information on VAT, refer to &lt;a href&#x3D;\&quot;https://www.ebay.co.uk/help/listings/default/vat-obligations-eu?id&#x3D;4650&amp;st&#x3D;12&amp;pos&#x3D;1&amp;query&#x3D;Your%20VAT%20obligations%20in%20the%20EU&amp;intent&#x3D;VAT\&quot;&gt;VAT Obligations in the EU&lt;/a&gt;.&lt;/span&gt;
   * @return shippingCost
   */
  @javax.annotation.Nullable
  public String getShippingCost() {
    return shippingCost;
  }

  public void setShippingCost(String shippingCost) {
    this.shippingCost = shippingCost;
  }


  public Item shippingCostType(String shippingCostType) {
    this.shippingCostType = shippingCostType;
    return this;
  }

  /**
   * Indicates the class of the shipping cost. &lt;br&gt;&lt;br&gt;&lt;b&gt; Valid Values: &lt;/b&gt; FIXED or CALCULATED.
   * @return shippingCostType
   */
  @javax.annotation.Nullable
  public String getShippingCostType() {
    return shippingCostType;
  }

  public void setShippingCostType(String shippingCostType) {
    this.shippingCostType = shippingCostType;
  }


  public Item shippingServiceCode(String shippingServiceCode) {
    this.shippingServiceCode = shippingServiceCode;
    return this;
  }

  /**
   * The type of shipping service. For example, USPS First Class.
   * @return shippingServiceCode
   */
  @javax.annotation.Nullable
  public String getShippingServiceCode() {
    return shippingServiceCode;
  }

  public void setShippingServiceCode(String shippingServiceCode) {
    this.shippingServiceCode = shippingServiceCode;
  }


  public Item shippingType(String shippingType) {
    this.shippingType = shippingType;
    return this;
  }

  /**
   * The type of a shipping option, such as EXPEDITED, ONE_DAY, STANDARD, ECONOMY, PICKUP, etc.
   * @return shippingType
   */
  @javax.annotation.Nullable
  public String getShippingType() {
    return shippingType;
  }

  public void setShippingType(String shippingType) {
    this.shippingType = shippingType;
  }


  public Item size(String size) {
    this.size = size;
    return this;
  }

  /**
   * The size of the item.
   * @return size
   */
  @javax.annotation.Nullable
  public String getSize() {
    return size;
  }

  public void setSize(String size) {
    this.size = size;
  }


  public Item takeBackPolicyDescription(String takeBackPolicyDescription) {
    this.takeBackPolicyDescription = takeBackPolicyDescription;
    return this;
  }

  /**
   * The seller-defined description of the TAKE_BACK custom policy for the item.
   * @return takeBackPolicyDescription
   */
  @javax.annotation.Nullable
  public String getTakeBackPolicyDescription() {
    return takeBackPolicyDescription;
  }

  public void setTakeBackPolicyDescription(String takeBackPolicyDescription) {
    this.takeBackPolicyDescription = takeBackPolicyDescription;
  }


  public Item takeBackPolicyLabel(String takeBackPolicyLabel) {
    this.takeBackPolicyLabel = takeBackPolicyLabel;
    return this;
  }

  /**
   * The seller-defined label of the TAKE_BACK custom policy for the item. A TAKE_BACK policy describes the seller&#39;s regulatory responsibility to take back a purchased item for disposal when the buyer purchases a new one.
   * @return takeBackPolicyLabel
   */
  @javax.annotation.Nullable
  public String getTakeBackPolicyLabel() {
    return takeBackPolicyLabel;
  }

  public void setTakeBackPolicyLabel(String takeBackPolicyLabel) {
    this.takeBackPolicyLabel = takeBackPolicyLabel;
  }


  public Item title(String title) {
    this.title = title;
    return this;
  }

  /**
   * The seller created title of the item. This text is an escaped string when special characters are present, using the following rules:&lt;/p&gt;   &lt;ul&gt;      &lt;li&gt;Double quotes (&amp;#34;) and backslashes (&amp;#92;) in the Title are escaped with a backslash (&amp;#92;) character&lt;/li&gt;      &lt;li&gt;If there are any tabs (&amp;#92;t), double quotes (&amp;#34;), or backslashes (&amp;#92;) in the Title, the entire Title will be wrapped in double quotes.&lt;/li&gt;   &lt;/ul&gt;   &lt;p&gt;&lt;b&gt;For example&lt;/b&gt;&lt;/p&gt;   &lt;p&gt;Before:&lt;/p&gt;   &lt;p&gt;&lt;code&gt;Misty Rainforest Modern Masters 2017 MTG Magic Fetch Land Free Ship W&lt;b&gt;&amp;#92;&lt;/b&gt;Tracking&lt;/code&gt;   &lt;/p&gt;   &lt;p&gt;&lt;code&gt;Marvel Legends HULK 8&lt;b&gt;&amp;#34;&lt;/b&gt; Figure Avengers Age of Ultron Studios 6&lt;b&gt;&amp;#34;&lt;/b&gt; Series&lt;/code&gt;   &lt;/p&gt;   &lt;p&gt;After:&lt;/p&gt;   &lt;p&gt;&lt;code&gt;&amp;#34;Misty Rainforest Modern Masters 2017 MTG Magic Fetch Land Free Ship W&lt;b&gt;&amp;#92;&amp;#92;&lt;/b&gt; Tracking&amp;#34;&lt;/code&gt;   &lt;/p&gt;   &lt;p&gt;&lt;code&gt;&amp;#34;Marvel Legends HULK 8&lt;b&gt;&amp;#92;&amp;#34;&lt;/b&gt; Figure Avengers Age of Ultron Studios 6&lt;b&gt;&amp;#92;&amp;#34;&lt;/b&gt; Series&lt;b&gt;&amp;#34;&lt;/b&gt; &lt;/code&gt;   &lt;/p&gt;
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public Item totalUnits(String totalUnits) {
    this.totalUnits = totalUnits;
    return this;
  }

  /**
   * For an item that is priced by the unit, the total number of units that are on offer. For example, if the item is priced by the meter and 50 cm is on offer, the &lt;b&gt;totalUnits&lt;/b&gt; would be 0.5 m.
   * @return totalUnits
   */
  @javax.annotation.Nullable
  public String getTotalUnits() {
    return totalUnits;
  }

  public void setTotalUnits(String totalUnits) {
    this.totalUnits = totalUnits;
  }


  public Item tyreLabelImageUrl(String tyreLabelImageUrl) {
    this.tyreLabelImageUrl = tyreLabelImageUrl;
    return this;
  }

  /**
   * The URL to the image that shows the information on the tyre label.
   * @return tyreLabelImageUrl
   */
  @javax.annotation.Nullable
  public String getTyreLabelImageUrl() {
    return tyreLabelImageUrl;
  }

  public void setTyreLabelImageUrl(String tyreLabelImageUrl) {
    this.tyreLabelImageUrl = tyreLabelImageUrl;
  }


  public Item unitPrice(String unitPrice) {
    this.unitPrice = unitPrice;
    return this;
  }

  /**
   * This is the price per unit for the item. Some European countries require listings for certain types of products to include the price per unit so buyers can accurately compare prices.   &lt;br&gt;&lt;br&gt;For example: &lt;br&gt;&lt;br&gt;&lt;code&gt;\&quot;unitPricingMeasure\&quot;: \&quot;100g\&quot;,&lt;br&gt; \&quot;unitPrice\&quot;: {&lt;br&gt;&amp;nbsp;&amp;nbsp;\&quot;value\&quot;: \&quot;7.99\&quot;,&lt;br&gt;&amp;nbsp;&amp;nbsp;\&quot;currency\&quot;: \&quot;GBP\&quot;&lt;/code&gt;
   * @return unitPrice
   */
  @javax.annotation.Nullable
  public String getUnitPrice() {
    return unitPrice;
  }

  public void setUnitPrice(String unitPrice) {
    this.unitPrice = unitPrice;
  }


  public Item unitPricingMeasure(String unitPricingMeasure) {
    this.unitPricingMeasure = unitPricingMeasure;
    return this;
  }

  /**
   * The designation, such as size, weight, volume, count, etc., that was used to specify the quantity of the item.  This helps buyers compare prices. &lt;br&gt;&lt;br&gt;For example, the following tells the buyer that the item is 7.99 per 100 grams. &lt;br&gt;&lt;br&gt;&lt;code&gt;\&quot;unitPricingMeasure\&quot;: \&quot;100g\&quot;,&lt;br&gt; \&quot;unitPrice\&quot;: {&lt;br&gt;&amp;nbsp;&amp;nbsp;\&quot;value\&quot;: \&quot;7.99\&quot;,&lt;br&gt;&amp;nbsp;&amp;nbsp;\&quot;currency\&quot;: \&quot;GBP\&quot;&lt;/code&gt;
   * @return unitPricingMeasure
   */
  @javax.annotation.Nullable
  public String getUnitPricingMeasure() {
    return unitPricingMeasure;
  }

  public void setUnitPricingMeasure(String unitPricingMeasure) {
    this.unitPricingMeasure = unitPricingMeasure;
  }


  public Item weightUnitOfMeasure(String weightUnitOfMeasure) {
    this.weightUnitOfMeasure = weightUnitOfMeasure;
    return this;
  }

  /**
   * The unit of measurement used for the package weight, such as POUND, KILOGRAM, OUNCE, or GRAM. &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list.  For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/buy/feed/types/api:WeightUnitOfMeasureEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return weightUnitOfMeasure
   */
  @javax.annotation.Nullable
  public String getWeightUnitOfMeasure() {
    return weightUnitOfMeasure;
  }

  public void setWeightUnitOfMeasure(String weightUnitOfMeasure) {
    this.weightUnitOfMeasure = weightUnitOfMeasure;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Item item = (Item) o;
    return Objects.equals(this.acceptedPaymentMethods, item.acceptedPaymentMethods) &&
        Objects.equals(this.additionalImageUrls, item.additionalImageUrls) &&
        Objects.equals(this.additionalShippingCostPerUnit, item.additionalShippingCostPerUnit) &&
        Objects.equals(this.ageGroup, item.ageGroup) &&
        Objects.equals(this.alerts, item.alerts) &&
        Objects.equals(this.availability, item.availability) &&
        Objects.equals(this.availabilityThreshold, item.availabilityThreshold) &&
        Objects.equals(this.availabilityThresholdType, item.availabilityThresholdType) &&
        Objects.equals(this.brand, item.brand) &&
        Objects.equals(this.buyingOptions, item.buyingOptions) &&
        Objects.equals(this.category, item.category) &&
        Objects.equals(this.categoryId, item.categoryId) &&
        Objects.equals(this.color, item.color) &&
        Objects.equals(this.condition, item.condition) &&
        Objects.equals(this.conditionId, item.conditionId) &&
        Objects.equals(this.defaultImageUrl, item.defaultImageUrl) &&
        Objects.equals(this.deliveryOptions, item.deliveryOptions) &&
        Objects.equals(this.discountAmount, item.discountAmount) &&
        Objects.equals(this.discountPercentage, item.discountPercentage) &&
        Objects.equals(this.ecoParticipationFeeCurrency, item.ecoParticipationFeeCurrency) &&
        Objects.equals(this.ecoParticipationFeeValue, item.ecoParticipationFeeValue) &&
        Objects.equals(this.energyEfficiencyClass, item.energyEfficiencyClass) &&
        Objects.equals(this.epid, item.epid) &&
        Objects.equals(this.estimatedAvailableQuantity, item.estimatedAvailableQuantity) &&
        Objects.equals(this.gender, item.gender) &&
        Objects.equals(this.gtin, item.gtin) &&
        Objects.equals(this.hazmatAdditionalInformation, item.hazmatAdditionalInformation) &&
        Objects.equals(this.hazmatPictogramDescriptions, item.hazmatPictogramDescriptions) &&
        Objects.equals(this.hazmatPictogramIds, item.hazmatPictogramIds) &&
        Objects.equals(this.hazmatPictogramImageUrls, item.hazmatPictogramImageUrls) &&
        Objects.equals(this.hazmatSignalWord, item.hazmatSignalWord) &&
        Objects.equals(this.hazmatSignalWordId, item.hazmatSignalWordId) &&
        Objects.equals(this.hazmatStatementDescriptions, item.hazmatStatementDescriptions) &&
        Objects.equals(this.hazmatStatementIds, item.hazmatStatementIds) &&
        Objects.equals(this.imageAlteringProhibited, item.imageAlteringProhibited) &&
        Objects.equals(this.imageUrl, item.imageUrl) &&
        Objects.equals(this.inferredBrand, item.inferredBrand) &&
        Objects.equals(this.inferredEpid, item.inferredEpid) &&
        Objects.equals(this.inferredGtin, item.inferredGtin) &&
        Objects.equals(this.inferredLocalizedAspects, item.inferredLocalizedAspects) &&
        Objects.equals(this.inferredMpn, item.inferredMpn) &&
        Objects.equals(this.itemAffiliateWebUrl, item.itemAffiliateWebUrl) &&
        Objects.equals(this.itemCreationDate, item.itemCreationDate) &&
        Objects.equals(this.itemEndDate, item.itemEndDate) &&
        Objects.equals(this.itemId, item.itemId) &&
        Objects.equals(this.itemLocationCountry, item.itemLocationCountry) &&
        Objects.equals(this.itemWebUrl, item.itemWebUrl) &&
        Objects.equals(this.legacyItemId, item.legacyItemId) &&
        Objects.equals(this.lengthUnitOfMeasure, item.lengthUnitOfMeasure) &&
        Objects.equals(this.localizedAspects, item.localizedAspects) &&
        Objects.equals(this.lotSize, item.lotSize) &&
        Objects.equals(this.material, item.material) &&
        Objects.equals(this.mpn, item.mpn) &&
        Objects.equals(this.originalPriceCurrency, item.originalPriceCurrency) &&
        Objects.equals(this.originalPriceValue, item.originalPriceValue) &&
        Objects.equals(this.packageHeight, item.packageHeight) &&
        Objects.equals(this.packageLength, item.packageLength) &&
        Objects.equals(this.packageWeight, item.packageWeight) &&
        Objects.equals(this.packageWidth, item.packageWidth) &&
        Objects.equals(this.pattern, item.pattern) &&
        Objects.equals(this.priceCurrency, item.priceCurrency) &&
        Objects.equals(this.priceValue, item.priceValue) &&
        Objects.equals(this.primaryItemGroupId, item.primaryItemGroupId) &&
        Objects.equals(this.primaryItemGroupType, item.primaryItemGroupType) &&
        Objects.equals(this.priorityListingPayload, item.priorityListingPayload) &&
        Objects.equals(this.qualifiedPrograms, item.qualifiedPrograms) &&
        Objects.equals(this.quantityUsedForEstimate, item.quantityUsedForEstimate) &&
        Objects.equals(this.refundMethod, item.refundMethod) &&
        Objects.equals(this.repairScore, item.repairScore) &&
        Objects.equals(this.returnMethod, item.returnMethod) &&
        Objects.equals(this.returnPeriodUnit, item.returnPeriodUnit) &&
        Objects.equals(this.returnPeriodValue, item.returnPeriodValue) &&
        Objects.equals(this.returnShippingCostPayer, item.returnShippingCostPayer) &&
        Objects.equals(this.returnsAccepted, item.returnsAccepted) &&
        Objects.equals(this.sellerAccountType, item.sellerAccountType) &&
        Objects.equals(this.sellerFeedbackPercentage, item.sellerFeedbackPercentage) &&
        Objects.equals(this.sellerFeedbackScore, item.sellerFeedbackScore) &&
        Objects.equals(this.sellerItemRevision, item.sellerItemRevision) &&
        Objects.equals(this.sellerTrustLevel, item.sellerTrustLevel) &&
        Objects.equals(this.sellerUsername, item.sellerUsername) &&
        Objects.equals(this.shipToExcludedRegions, item.shipToExcludedRegions) &&
        Objects.equals(this.shipToIncludedRegions, item.shipToIncludedRegions) &&
        Objects.equals(this.shippingCarrierCode, item.shippingCarrierCode) &&
        Objects.equals(this.shippingCost, item.shippingCost) &&
        Objects.equals(this.shippingCostType, item.shippingCostType) &&
        Objects.equals(this.shippingServiceCode, item.shippingServiceCode) &&
        Objects.equals(this.shippingType, item.shippingType) &&
        Objects.equals(this.size, item.size) &&
        Objects.equals(this.takeBackPolicyDescription, item.takeBackPolicyDescription) &&
        Objects.equals(this.takeBackPolicyLabel, item.takeBackPolicyLabel) &&
        Objects.equals(this.title, item.title) &&
        Objects.equals(this.totalUnits, item.totalUnits) &&
        Objects.equals(this.tyreLabelImageUrl, item.tyreLabelImageUrl) &&
        Objects.equals(this.unitPrice, item.unitPrice) &&
        Objects.equals(this.unitPricingMeasure, item.unitPricingMeasure) &&
        Objects.equals(this.weightUnitOfMeasure, item.weightUnitOfMeasure);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acceptedPaymentMethods, additionalImageUrls, additionalShippingCostPerUnit, ageGroup, alerts, availability, availabilityThreshold, availabilityThresholdType, brand, buyingOptions, category, categoryId, color, condition, conditionId, defaultImageUrl, deliveryOptions, discountAmount, discountPercentage, ecoParticipationFeeCurrency, ecoParticipationFeeValue, energyEfficiencyClass, epid, estimatedAvailableQuantity, gender, gtin, hazmatAdditionalInformation, hazmatPictogramDescriptions, hazmatPictogramIds, hazmatPictogramImageUrls, hazmatSignalWord, hazmatSignalWordId, hazmatStatementDescriptions, hazmatStatementIds, imageAlteringProhibited, imageUrl, inferredBrand, inferredEpid, inferredGtin, inferredLocalizedAspects, inferredMpn, itemAffiliateWebUrl, itemCreationDate, itemEndDate, itemId, itemLocationCountry, itemWebUrl, legacyItemId, lengthUnitOfMeasure, localizedAspects, lotSize, material, mpn, originalPriceCurrency, originalPriceValue, packageHeight, packageLength, packageWeight, packageWidth, pattern, priceCurrency, priceValue, primaryItemGroupId, primaryItemGroupType, priorityListingPayload, qualifiedPrograms, quantityUsedForEstimate, refundMethod, repairScore, returnMethod, returnPeriodUnit, returnPeriodValue, returnShippingCostPayer, returnsAccepted, sellerAccountType, sellerFeedbackPercentage, sellerFeedbackScore, sellerItemRevision, sellerTrustLevel, sellerUsername, shipToExcludedRegions, shipToIncludedRegions, shippingCarrierCode, shippingCost, shippingCostType, shippingServiceCode, shippingType, size, takeBackPolicyDescription, takeBackPolicyLabel, title, totalUnits, tyreLabelImageUrl, unitPrice, unitPricingMeasure, weightUnitOfMeasure);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Item {\n");
    sb.append("    acceptedPaymentMethods: ").append(toIndentedString(acceptedPaymentMethods)).append("\n");
    sb.append("    additionalImageUrls: ").append(toIndentedString(additionalImageUrls)).append("\n");
    sb.append("    additionalShippingCostPerUnit: ").append(toIndentedString(additionalShippingCostPerUnit)).append("\n");
    sb.append("    ageGroup: ").append(toIndentedString(ageGroup)).append("\n");
    sb.append("    alerts: ").append(toIndentedString(alerts)).append("\n");
    sb.append("    availability: ").append(toIndentedString(availability)).append("\n");
    sb.append("    availabilityThreshold: ").append(toIndentedString(availabilityThreshold)).append("\n");
    sb.append("    availabilityThresholdType: ").append(toIndentedString(availabilityThresholdType)).append("\n");
    sb.append("    brand: ").append(toIndentedString(brand)).append("\n");
    sb.append("    buyingOptions: ").append(toIndentedString(buyingOptions)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    conditionId: ").append(toIndentedString(conditionId)).append("\n");
    sb.append("    defaultImageUrl: ").append(toIndentedString(defaultImageUrl)).append("\n");
    sb.append("    deliveryOptions: ").append(toIndentedString(deliveryOptions)).append("\n");
    sb.append("    discountAmount: ").append(toIndentedString(discountAmount)).append("\n");
    sb.append("    discountPercentage: ").append(toIndentedString(discountPercentage)).append("\n");
    sb.append("    ecoParticipationFeeCurrency: ").append(toIndentedString(ecoParticipationFeeCurrency)).append("\n");
    sb.append("    ecoParticipationFeeValue: ").append(toIndentedString(ecoParticipationFeeValue)).append("\n");
    sb.append("    energyEfficiencyClass: ").append(toIndentedString(energyEfficiencyClass)).append("\n");
    sb.append("    epid: ").append(toIndentedString(epid)).append("\n");
    sb.append("    estimatedAvailableQuantity: ").append(toIndentedString(estimatedAvailableQuantity)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    gtin: ").append(toIndentedString(gtin)).append("\n");
    sb.append("    hazmatAdditionalInformation: ").append(toIndentedString(hazmatAdditionalInformation)).append("\n");
    sb.append("    hazmatPictogramDescriptions: ").append(toIndentedString(hazmatPictogramDescriptions)).append("\n");
    sb.append("    hazmatPictogramIds: ").append(toIndentedString(hazmatPictogramIds)).append("\n");
    sb.append("    hazmatPictogramImageUrls: ").append(toIndentedString(hazmatPictogramImageUrls)).append("\n");
    sb.append("    hazmatSignalWord: ").append(toIndentedString(hazmatSignalWord)).append("\n");
    sb.append("    hazmatSignalWordId: ").append(toIndentedString(hazmatSignalWordId)).append("\n");
    sb.append("    hazmatStatementDescriptions: ").append(toIndentedString(hazmatStatementDescriptions)).append("\n");
    sb.append("    hazmatStatementIds: ").append(toIndentedString(hazmatStatementIds)).append("\n");
    sb.append("    imageAlteringProhibited: ").append(toIndentedString(imageAlteringProhibited)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    inferredBrand: ").append(toIndentedString(inferredBrand)).append("\n");
    sb.append("    inferredEpid: ").append(toIndentedString(inferredEpid)).append("\n");
    sb.append("    inferredGtin: ").append(toIndentedString(inferredGtin)).append("\n");
    sb.append("    inferredLocalizedAspects: ").append(toIndentedString(inferredLocalizedAspects)).append("\n");
    sb.append("    inferredMpn: ").append(toIndentedString(inferredMpn)).append("\n");
    sb.append("    itemAffiliateWebUrl: ").append(toIndentedString(itemAffiliateWebUrl)).append("\n");
    sb.append("    itemCreationDate: ").append(toIndentedString(itemCreationDate)).append("\n");
    sb.append("    itemEndDate: ").append(toIndentedString(itemEndDate)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    itemLocationCountry: ").append(toIndentedString(itemLocationCountry)).append("\n");
    sb.append("    itemWebUrl: ").append(toIndentedString(itemWebUrl)).append("\n");
    sb.append("    legacyItemId: ").append(toIndentedString(legacyItemId)).append("\n");
    sb.append("    lengthUnitOfMeasure: ").append(toIndentedString(lengthUnitOfMeasure)).append("\n");
    sb.append("    localizedAspects: ").append(toIndentedString(localizedAspects)).append("\n");
    sb.append("    lotSize: ").append(toIndentedString(lotSize)).append("\n");
    sb.append("    material: ").append(toIndentedString(material)).append("\n");
    sb.append("    mpn: ").append(toIndentedString(mpn)).append("\n");
    sb.append("    originalPriceCurrency: ").append(toIndentedString(originalPriceCurrency)).append("\n");
    sb.append("    originalPriceValue: ").append(toIndentedString(originalPriceValue)).append("\n");
    sb.append("    packageHeight: ").append(toIndentedString(packageHeight)).append("\n");
    sb.append("    packageLength: ").append(toIndentedString(packageLength)).append("\n");
    sb.append("    packageWeight: ").append(toIndentedString(packageWeight)).append("\n");
    sb.append("    packageWidth: ").append(toIndentedString(packageWidth)).append("\n");
    sb.append("    pattern: ").append(toIndentedString(pattern)).append("\n");
    sb.append("    priceCurrency: ").append(toIndentedString(priceCurrency)).append("\n");
    sb.append("    priceValue: ").append(toIndentedString(priceValue)).append("\n");
    sb.append("    primaryItemGroupId: ").append(toIndentedString(primaryItemGroupId)).append("\n");
    sb.append("    primaryItemGroupType: ").append(toIndentedString(primaryItemGroupType)).append("\n");
    sb.append("    priorityListingPayload: ").append(toIndentedString(priorityListingPayload)).append("\n");
    sb.append("    qualifiedPrograms: ").append(toIndentedString(qualifiedPrograms)).append("\n");
    sb.append("    quantityUsedForEstimate: ").append(toIndentedString(quantityUsedForEstimate)).append("\n");
    sb.append("    refundMethod: ").append(toIndentedString(refundMethod)).append("\n");
    sb.append("    repairScore: ").append(toIndentedString(repairScore)).append("\n");
    sb.append("    returnMethod: ").append(toIndentedString(returnMethod)).append("\n");
    sb.append("    returnPeriodUnit: ").append(toIndentedString(returnPeriodUnit)).append("\n");
    sb.append("    returnPeriodValue: ").append(toIndentedString(returnPeriodValue)).append("\n");
    sb.append("    returnShippingCostPayer: ").append(toIndentedString(returnShippingCostPayer)).append("\n");
    sb.append("    returnsAccepted: ").append(toIndentedString(returnsAccepted)).append("\n");
    sb.append("    sellerAccountType: ").append(toIndentedString(sellerAccountType)).append("\n");
    sb.append("    sellerFeedbackPercentage: ").append(toIndentedString(sellerFeedbackPercentage)).append("\n");
    sb.append("    sellerFeedbackScore: ").append(toIndentedString(sellerFeedbackScore)).append("\n");
    sb.append("    sellerItemRevision: ").append(toIndentedString(sellerItemRevision)).append("\n");
    sb.append("    sellerTrustLevel: ").append(toIndentedString(sellerTrustLevel)).append("\n");
    sb.append("    sellerUsername: ").append(toIndentedString(sellerUsername)).append("\n");
    sb.append("    shipToExcludedRegions: ").append(toIndentedString(shipToExcludedRegions)).append("\n");
    sb.append("    shipToIncludedRegions: ").append(toIndentedString(shipToIncludedRegions)).append("\n");
    sb.append("    shippingCarrierCode: ").append(toIndentedString(shippingCarrierCode)).append("\n");
    sb.append("    shippingCost: ").append(toIndentedString(shippingCost)).append("\n");
    sb.append("    shippingCostType: ").append(toIndentedString(shippingCostType)).append("\n");
    sb.append("    shippingServiceCode: ").append(toIndentedString(shippingServiceCode)).append("\n");
    sb.append("    shippingType: ").append(toIndentedString(shippingType)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    takeBackPolicyDescription: ").append(toIndentedString(takeBackPolicyDescription)).append("\n");
    sb.append("    takeBackPolicyLabel: ").append(toIndentedString(takeBackPolicyLabel)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    totalUnits: ").append(toIndentedString(totalUnits)).append("\n");
    sb.append("    tyreLabelImageUrl: ").append(toIndentedString(tyreLabelImageUrl)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    unitPricingMeasure: ").append(toIndentedString(unitPricingMeasure)).append("\n");
    sb.append("    weightUnitOfMeasure: ").append(toIndentedString(weightUnitOfMeasure)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("acceptedPaymentMethods");
    openapiFields.add("additionalImageUrls");
    openapiFields.add("additionalShippingCostPerUnit");
    openapiFields.add("ageGroup");
    openapiFields.add("alerts");
    openapiFields.add("availability");
    openapiFields.add("availabilityThreshold");
    openapiFields.add("availabilityThresholdType");
    openapiFields.add("brand");
    openapiFields.add("buyingOptions");
    openapiFields.add("category");
    openapiFields.add("categoryId");
    openapiFields.add("color");
    openapiFields.add("condition");
    openapiFields.add("conditionId");
    openapiFields.add("defaultImageUrl");
    openapiFields.add("deliveryOptions");
    openapiFields.add("discountAmount");
    openapiFields.add("discountPercentage");
    openapiFields.add("ecoParticipationFeeCurrency");
    openapiFields.add("ecoParticipationFeeValue");
    openapiFields.add("energyEfficiencyClass");
    openapiFields.add("epid");
    openapiFields.add("estimatedAvailableQuantity");
    openapiFields.add("gender");
    openapiFields.add("gtin");
    openapiFields.add("hazmatAdditionalInformation");
    openapiFields.add("hazmatPictogramDescriptions");
    openapiFields.add("hazmatPictogramIds");
    openapiFields.add("hazmatPictogramImageUrls");
    openapiFields.add("hazmatSignalWord");
    openapiFields.add("hazmatSignalWordId");
    openapiFields.add("hazmatStatementDescriptions");
    openapiFields.add("hazmatStatementIds");
    openapiFields.add("imageAlteringProhibited");
    openapiFields.add("imageUrl");
    openapiFields.add("inferredBrand");
    openapiFields.add("inferredEpid");
    openapiFields.add("inferredGtin");
    openapiFields.add("inferredLocalizedAspects");
    openapiFields.add("inferredMpn");
    openapiFields.add("itemAffiliateWebUrl");
    openapiFields.add("itemCreationDate");
    openapiFields.add("itemEndDate");
    openapiFields.add("itemId");
    openapiFields.add("itemLocationCountry");
    openapiFields.add("itemWebUrl");
    openapiFields.add("legacyItemId");
    openapiFields.add("lengthUnitOfMeasure");
    openapiFields.add("localizedAspects");
    openapiFields.add("lotSize");
    openapiFields.add("material");
    openapiFields.add("mpn");
    openapiFields.add("originalPriceCurrency");
    openapiFields.add("originalPriceValue");
    openapiFields.add("packageHeight");
    openapiFields.add("packageLength");
    openapiFields.add("packageWeight");
    openapiFields.add("packageWidth");
    openapiFields.add("pattern");
    openapiFields.add("priceCurrency");
    openapiFields.add("priceValue");
    openapiFields.add("primaryItemGroupId");
    openapiFields.add("primaryItemGroupType");
    openapiFields.add("priorityListingPayload");
    openapiFields.add("qualifiedPrograms");
    openapiFields.add("quantityUsedForEstimate");
    openapiFields.add("refundMethod");
    openapiFields.add("repairScore");
    openapiFields.add("returnMethod");
    openapiFields.add("returnPeriodUnit");
    openapiFields.add("returnPeriodValue");
    openapiFields.add("returnShippingCostPayer");
    openapiFields.add("returnsAccepted");
    openapiFields.add("sellerAccountType");
    openapiFields.add("sellerFeedbackPercentage");
    openapiFields.add("sellerFeedbackScore");
    openapiFields.add("sellerItemRevision");
    openapiFields.add("sellerTrustLevel");
    openapiFields.add("sellerUsername");
    openapiFields.add("shipToExcludedRegions");
    openapiFields.add("shipToIncludedRegions");
    openapiFields.add("shippingCarrierCode");
    openapiFields.add("shippingCost");
    openapiFields.add("shippingCostType");
    openapiFields.add("shippingServiceCode");
    openapiFields.add("shippingType");
    openapiFields.add("size");
    openapiFields.add("takeBackPolicyDescription");
    openapiFields.add("takeBackPolicyLabel");
    openapiFields.add("title");
    openapiFields.add("totalUnits");
    openapiFields.add("tyreLabelImageUrl");
    openapiFields.add("unitPrice");
    openapiFields.add("unitPricingMeasure");
    openapiFields.add("weightUnitOfMeasure");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Item
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Item.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Item is not found in the empty JSON string", Item.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Item.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Item` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("acceptedPaymentMethods") != null && !jsonObj.get("acceptedPaymentMethods").isJsonNull()) && !jsonObj.get("acceptedPaymentMethods").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acceptedPaymentMethods` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acceptedPaymentMethods").toString()));
      }
      if ((jsonObj.get("additionalImageUrls") != null && !jsonObj.get("additionalImageUrls").isJsonNull()) && !jsonObj.get("additionalImageUrls").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `additionalImageUrls` to be a primitive type in the JSON string but got `%s`", jsonObj.get("additionalImageUrls").toString()));
      }
      if ((jsonObj.get("additionalShippingCostPerUnit") != null && !jsonObj.get("additionalShippingCostPerUnit").isJsonNull()) && !jsonObj.get("additionalShippingCostPerUnit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `additionalShippingCostPerUnit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("additionalShippingCostPerUnit").toString()));
      }
      if ((jsonObj.get("ageGroup") != null && !jsonObj.get("ageGroup").isJsonNull()) && !jsonObj.get("ageGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ageGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ageGroup").toString()));
      }
      if ((jsonObj.get("alerts") != null && !jsonObj.get("alerts").isJsonNull()) && !jsonObj.get("alerts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alerts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alerts").toString()));
      }
      if ((jsonObj.get("availability") != null && !jsonObj.get("availability").isJsonNull()) && !jsonObj.get("availability").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `availability` to be a primitive type in the JSON string but got `%s`", jsonObj.get("availability").toString()));
      }
      if ((jsonObj.get("availabilityThresholdType") != null && !jsonObj.get("availabilityThresholdType").isJsonNull()) && !jsonObj.get("availabilityThresholdType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `availabilityThresholdType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("availabilityThresholdType").toString()));
      }
      if ((jsonObj.get("brand") != null && !jsonObj.get("brand").isJsonNull()) && !jsonObj.get("brand").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand").toString()));
      }
      if ((jsonObj.get("buyingOptions") != null && !jsonObj.get("buyingOptions").isJsonNull()) && !jsonObj.get("buyingOptions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buyingOptions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyingOptions").toString()));
      }
      if ((jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) && !jsonObj.get("category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category").toString()));
      }
      if ((jsonObj.get("categoryId") != null && !jsonObj.get("categoryId").isJsonNull()) && !jsonObj.get("categoryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `categoryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("categoryId").toString()));
      }
      if ((jsonObj.get("color") != null && !jsonObj.get("color").isJsonNull()) && !jsonObj.get("color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("color").toString()));
      }
      if ((jsonObj.get("condition") != null && !jsonObj.get("condition").isJsonNull()) && !jsonObj.get("condition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `condition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("condition").toString()));
      }
      if ((jsonObj.get("conditionId") != null && !jsonObj.get("conditionId").isJsonNull()) && !jsonObj.get("conditionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conditionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conditionId").toString()));
      }
      if ((jsonObj.get("defaultImageUrl") != null && !jsonObj.get("defaultImageUrl").isJsonNull()) && !jsonObj.get("defaultImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultImageUrl").toString()));
      }
      if ((jsonObj.get("deliveryOptions") != null && !jsonObj.get("deliveryOptions").isJsonNull()) && !jsonObj.get("deliveryOptions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryOptions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryOptions").toString()));
      }
      if ((jsonObj.get("discountAmount") != null && !jsonObj.get("discountAmount").isJsonNull()) && !jsonObj.get("discountAmount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `discountAmount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("discountAmount").toString()));
      }
      if ((jsonObj.get("discountPercentage") != null && !jsonObj.get("discountPercentage").isJsonNull()) && !jsonObj.get("discountPercentage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `discountPercentage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("discountPercentage").toString()));
      }
      if ((jsonObj.get("ecoParticipationFeeCurrency") != null && !jsonObj.get("ecoParticipationFeeCurrency").isJsonNull()) && !jsonObj.get("ecoParticipationFeeCurrency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ecoParticipationFeeCurrency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ecoParticipationFeeCurrency").toString()));
      }
      if ((jsonObj.get("ecoParticipationFeeValue") != null && !jsonObj.get("ecoParticipationFeeValue").isJsonNull()) && !jsonObj.get("ecoParticipationFeeValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ecoParticipationFeeValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ecoParticipationFeeValue").toString()));
      }
      if ((jsonObj.get("energyEfficiencyClass") != null && !jsonObj.get("energyEfficiencyClass").isJsonNull()) && !jsonObj.get("energyEfficiencyClass").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `energyEfficiencyClass` to be a primitive type in the JSON string but got `%s`", jsonObj.get("energyEfficiencyClass").toString()));
      }
      if ((jsonObj.get("epid") != null && !jsonObj.get("epid").isJsonNull()) && !jsonObj.get("epid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `epid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("epid").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("gtin") != null && !jsonObj.get("gtin").isJsonNull()) && !jsonObj.get("gtin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gtin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gtin").toString()));
      }
      if ((jsonObj.get("hazmatAdditionalInformation") != null && !jsonObj.get("hazmatAdditionalInformation").isJsonNull()) && !jsonObj.get("hazmatAdditionalInformation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hazmatAdditionalInformation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hazmatAdditionalInformation").toString()));
      }
      if ((jsonObj.get("hazmatPictogramDescriptions") != null && !jsonObj.get("hazmatPictogramDescriptions").isJsonNull()) && !jsonObj.get("hazmatPictogramDescriptions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hazmatPictogramDescriptions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hazmatPictogramDescriptions").toString()));
      }
      if ((jsonObj.get("hazmatPictogramIds") != null && !jsonObj.get("hazmatPictogramIds").isJsonNull()) && !jsonObj.get("hazmatPictogramIds").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hazmatPictogramIds` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hazmatPictogramIds").toString()));
      }
      if ((jsonObj.get("hazmatPictogramImageUrls") != null && !jsonObj.get("hazmatPictogramImageUrls").isJsonNull()) && !jsonObj.get("hazmatPictogramImageUrls").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hazmatPictogramImageUrls` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hazmatPictogramImageUrls").toString()));
      }
      if ((jsonObj.get("hazmatSignalWord") != null && !jsonObj.get("hazmatSignalWord").isJsonNull()) && !jsonObj.get("hazmatSignalWord").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hazmatSignalWord` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hazmatSignalWord").toString()));
      }
      if ((jsonObj.get("hazmatSignalWordId") != null && !jsonObj.get("hazmatSignalWordId").isJsonNull()) && !jsonObj.get("hazmatSignalWordId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hazmatSignalWordId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hazmatSignalWordId").toString()));
      }
      if ((jsonObj.get("hazmatStatementDescriptions") != null && !jsonObj.get("hazmatStatementDescriptions").isJsonNull()) && !jsonObj.get("hazmatStatementDescriptions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hazmatStatementDescriptions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hazmatStatementDescriptions").toString()));
      }
      if ((jsonObj.get("hazmatStatementIds") != null && !jsonObj.get("hazmatStatementIds").isJsonNull()) && !jsonObj.get("hazmatStatementIds").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hazmatStatementIds` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hazmatStatementIds").toString()));
      }
      if ((jsonObj.get("imageUrl") != null && !jsonObj.get("imageUrl").isJsonNull()) && !jsonObj.get("imageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imageUrl").toString()));
      }
      if ((jsonObj.get("inferredBrand") != null && !jsonObj.get("inferredBrand").isJsonNull()) && !jsonObj.get("inferredBrand").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inferredBrand` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inferredBrand").toString()));
      }
      if ((jsonObj.get("inferredEpid") != null && !jsonObj.get("inferredEpid").isJsonNull()) && !jsonObj.get("inferredEpid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inferredEpid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inferredEpid").toString()));
      }
      if ((jsonObj.get("inferredGtin") != null && !jsonObj.get("inferredGtin").isJsonNull()) && !jsonObj.get("inferredGtin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inferredGtin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inferredGtin").toString()));
      }
      if ((jsonObj.get("inferredLocalizedAspects") != null && !jsonObj.get("inferredLocalizedAspects").isJsonNull()) && !jsonObj.get("inferredLocalizedAspects").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inferredLocalizedAspects` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inferredLocalizedAspects").toString()));
      }
      if ((jsonObj.get("inferredMpn") != null && !jsonObj.get("inferredMpn").isJsonNull()) && !jsonObj.get("inferredMpn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inferredMpn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inferredMpn").toString()));
      }
      if ((jsonObj.get("itemAffiliateWebUrl") != null && !jsonObj.get("itemAffiliateWebUrl").isJsonNull()) && !jsonObj.get("itemAffiliateWebUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemAffiliateWebUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemAffiliateWebUrl").toString()));
      }
      if ((jsonObj.get("itemCreationDate") != null && !jsonObj.get("itemCreationDate").isJsonNull()) && !jsonObj.get("itemCreationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemCreationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemCreationDate").toString()));
      }
      if ((jsonObj.get("itemEndDate") != null && !jsonObj.get("itemEndDate").isJsonNull()) && !jsonObj.get("itemEndDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemEndDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemEndDate").toString()));
      }
      if ((jsonObj.get("itemId") != null && !jsonObj.get("itemId").isJsonNull()) && !jsonObj.get("itemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemId").toString()));
      }
      if ((jsonObj.get("itemLocationCountry") != null && !jsonObj.get("itemLocationCountry").isJsonNull()) && !jsonObj.get("itemLocationCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemLocationCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemLocationCountry").toString()));
      }
      if ((jsonObj.get("itemWebUrl") != null && !jsonObj.get("itemWebUrl").isJsonNull()) && !jsonObj.get("itemWebUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemWebUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemWebUrl").toString()));
      }
      if ((jsonObj.get("legacyItemId") != null && !jsonObj.get("legacyItemId").isJsonNull()) && !jsonObj.get("legacyItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legacyItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legacyItemId").toString()));
      }
      if ((jsonObj.get("lengthUnitOfMeasure") != null && !jsonObj.get("lengthUnitOfMeasure").isJsonNull()) && !jsonObj.get("lengthUnitOfMeasure").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lengthUnitOfMeasure` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lengthUnitOfMeasure").toString()));
      }
      if ((jsonObj.get("localizedAspects") != null && !jsonObj.get("localizedAspects").isJsonNull()) && !jsonObj.get("localizedAspects").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `localizedAspects` to be a primitive type in the JSON string but got `%s`", jsonObj.get("localizedAspects").toString()));
      }
      if ((jsonObj.get("material") != null && !jsonObj.get("material").isJsonNull()) && !jsonObj.get("material").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `material` to be a primitive type in the JSON string but got `%s`", jsonObj.get("material").toString()));
      }
      if ((jsonObj.get("mpn") != null && !jsonObj.get("mpn").isJsonNull()) && !jsonObj.get("mpn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mpn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mpn").toString()));
      }
      if ((jsonObj.get("originalPriceCurrency") != null && !jsonObj.get("originalPriceCurrency").isJsonNull()) && !jsonObj.get("originalPriceCurrency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originalPriceCurrency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originalPriceCurrency").toString()));
      }
      if ((jsonObj.get("originalPriceValue") != null && !jsonObj.get("originalPriceValue").isJsonNull()) && !jsonObj.get("originalPriceValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originalPriceValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originalPriceValue").toString()));
      }
      if ((jsonObj.get("packageHeight") != null && !jsonObj.get("packageHeight").isJsonNull()) && !jsonObj.get("packageHeight").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packageHeight` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packageHeight").toString()));
      }
      if ((jsonObj.get("packageLength") != null && !jsonObj.get("packageLength").isJsonNull()) && !jsonObj.get("packageLength").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packageLength` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packageLength").toString()));
      }
      if ((jsonObj.get("packageWeight") != null && !jsonObj.get("packageWeight").isJsonNull()) && !jsonObj.get("packageWeight").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packageWeight` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packageWeight").toString()));
      }
      if ((jsonObj.get("packageWidth") != null && !jsonObj.get("packageWidth").isJsonNull()) && !jsonObj.get("packageWidth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packageWidth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packageWidth").toString()));
      }
      if ((jsonObj.get("pattern") != null && !jsonObj.get("pattern").isJsonNull()) && !jsonObj.get("pattern").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pattern` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pattern").toString()));
      }
      if ((jsonObj.get("priceCurrency") != null && !jsonObj.get("priceCurrency").isJsonNull()) && !jsonObj.get("priceCurrency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priceCurrency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priceCurrency").toString()));
      }
      if ((jsonObj.get("priceValue") != null && !jsonObj.get("priceValue").isJsonNull()) && !jsonObj.get("priceValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priceValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priceValue").toString()));
      }
      if ((jsonObj.get("primaryItemGroupId") != null && !jsonObj.get("primaryItemGroupId").isJsonNull()) && !jsonObj.get("primaryItemGroupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryItemGroupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryItemGroupId").toString()));
      }
      if ((jsonObj.get("primaryItemGroupType") != null && !jsonObj.get("primaryItemGroupType").isJsonNull()) && !jsonObj.get("primaryItemGroupType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryItemGroupType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryItemGroupType").toString()));
      }
      if ((jsonObj.get("priorityListingPayload") != null && !jsonObj.get("priorityListingPayload").isJsonNull()) && !jsonObj.get("priorityListingPayload").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priorityListingPayload` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priorityListingPayload").toString()));
      }
      if ((jsonObj.get("qualifiedPrograms") != null && !jsonObj.get("qualifiedPrograms").isJsonNull()) && !jsonObj.get("qualifiedPrograms").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `qualifiedPrograms` to be a primitive type in the JSON string but got `%s`", jsonObj.get("qualifiedPrograms").toString()));
      }
      if ((jsonObj.get("refundMethod") != null && !jsonObj.get("refundMethod").isJsonNull()) && !jsonObj.get("refundMethod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `refundMethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("refundMethod").toString()));
      }
      if ((jsonObj.get("repairScore") != null && !jsonObj.get("repairScore").isJsonNull()) && !jsonObj.get("repairScore").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `repairScore` to be a primitive type in the JSON string but got `%s`", jsonObj.get("repairScore").toString()));
      }
      if ((jsonObj.get("returnMethod") != null && !jsonObj.get("returnMethod").isJsonNull()) && !jsonObj.get("returnMethod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnMethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnMethod").toString()));
      }
      if ((jsonObj.get("returnPeriodUnit") != null && !jsonObj.get("returnPeriodUnit").isJsonNull()) && !jsonObj.get("returnPeriodUnit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnPeriodUnit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnPeriodUnit").toString()));
      }
      if ((jsonObj.get("returnShippingCostPayer") != null && !jsonObj.get("returnShippingCostPayer").isJsonNull()) && !jsonObj.get("returnShippingCostPayer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnShippingCostPayer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnShippingCostPayer").toString()));
      }
      if ((jsonObj.get("sellerAccountType") != null && !jsonObj.get("sellerAccountType").isJsonNull()) && !jsonObj.get("sellerAccountType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sellerAccountType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sellerAccountType").toString()));
      }
      if ((jsonObj.get("sellerFeedbackPercentage") != null && !jsonObj.get("sellerFeedbackPercentage").isJsonNull()) && !jsonObj.get("sellerFeedbackPercentage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sellerFeedbackPercentage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sellerFeedbackPercentage").toString()));
      }
      if ((jsonObj.get("sellerFeedbackScore") != null && !jsonObj.get("sellerFeedbackScore").isJsonNull()) && !jsonObj.get("sellerFeedbackScore").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sellerFeedbackScore` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sellerFeedbackScore").toString()));
      }
      if ((jsonObj.get("sellerItemRevision") != null && !jsonObj.get("sellerItemRevision").isJsonNull()) && !jsonObj.get("sellerItemRevision").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sellerItemRevision` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sellerItemRevision").toString()));
      }
      if ((jsonObj.get("sellerTrustLevel") != null && !jsonObj.get("sellerTrustLevel").isJsonNull()) && !jsonObj.get("sellerTrustLevel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sellerTrustLevel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sellerTrustLevel").toString()));
      }
      if ((jsonObj.get("sellerUsername") != null && !jsonObj.get("sellerUsername").isJsonNull()) && !jsonObj.get("sellerUsername").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sellerUsername` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sellerUsername").toString()));
      }
      if ((jsonObj.get("shipToExcludedRegions") != null && !jsonObj.get("shipToExcludedRegions").isJsonNull()) && !jsonObj.get("shipToExcludedRegions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipToExcludedRegions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipToExcludedRegions").toString()));
      }
      if ((jsonObj.get("shipToIncludedRegions") != null && !jsonObj.get("shipToIncludedRegions").isJsonNull()) && !jsonObj.get("shipToIncludedRegions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipToIncludedRegions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipToIncludedRegions").toString()));
      }
      if ((jsonObj.get("shippingCarrierCode") != null && !jsonObj.get("shippingCarrierCode").isJsonNull()) && !jsonObj.get("shippingCarrierCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingCarrierCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingCarrierCode").toString()));
      }
      if ((jsonObj.get("shippingCost") != null && !jsonObj.get("shippingCost").isJsonNull()) && !jsonObj.get("shippingCost").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingCost` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingCost").toString()));
      }
      if ((jsonObj.get("shippingCostType") != null && !jsonObj.get("shippingCostType").isJsonNull()) && !jsonObj.get("shippingCostType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingCostType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingCostType").toString()));
      }
      if ((jsonObj.get("shippingServiceCode") != null && !jsonObj.get("shippingServiceCode").isJsonNull()) && !jsonObj.get("shippingServiceCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingServiceCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingServiceCode").toString()));
      }
      if ((jsonObj.get("shippingType") != null && !jsonObj.get("shippingType").isJsonNull()) && !jsonObj.get("shippingType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingType").toString()));
      }
      if ((jsonObj.get("size") != null && !jsonObj.get("size").isJsonNull()) && !jsonObj.get("size").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `size` to be a primitive type in the JSON string but got `%s`", jsonObj.get("size").toString()));
      }
      if ((jsonObj.get("takeBackPolicyDescription") != null && !jsonObj.get("takeBackPolicyDescription").isJsonNull()) && !jsonObj.get("takeBackPolicyDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `takeBackPolicyDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("takeBackPolicyDescription").toString()));
      }
      if ((jsonObj.get("takeBackPolicyLabel") != null && !jsonObj.get("takeBackPolicyLabel").isJsonNull()) && !jsonObj.get("takeBackPolicyLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `takeBackPolicyLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("takeBackPolicyLabel").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("totalUnits") != null && !jsonObj.get("totalUnits").isJsonNull()) && !jsonObj.get("totalUnits").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalUnits` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalUnits").toString()));
      }
      if ((jsonObj.get("tyreLabelImageUrl") != null && !jsonObj.get("tyreLabelImageUrl").isJsonNull()) && !jsonObj.get("tyreLabelImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tyreLabelImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tyreLabelImageUrl").toString()));
      }
      if ((jsonObj.get("unitPrice") != null && !jsonObj.get("unitPrice").isJsonNull()) && !jsonObj.get("unitPrice").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unitPrice` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unitPrice").toString()));
      }
      if ((jsonObj.get("unitPricingMeasure") != null && !jsonObj.get("unitPricingMeasure").isJsonNull()) && !jsonObj.get("unitPricingMeasure").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unitPricingMeasure` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unitPricingMeasure").toString()));
      }
      if ((jsonObj.get("weightUnitOfMeasure") != null && !jsonObj.get("weightUnitOfMeasure").isJsonNull()) && !jsonObj.get("weightUnitOfMeasure").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `weightUnitOfMeasure` to be a primitive type in the JSON string but got `%s`", jsonObj.get("weightUnitOfMeasure").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Item.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Item' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Item> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Item.class));

       return (TypeAdapter<T>) new TypeAdapter<Item>() {
           @Override
           public void write(JsonWriter out, Item value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Item read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Item given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Item
   * @throws IOException if the JSON string is invalid with respect to Item
   */
  public static Item fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Item.class);
  }

  /**
   * Convert an instance of Item to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

