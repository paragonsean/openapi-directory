/*
 * Item Feed Service
 * <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited \" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units. For information on how to obtain access to this API in production, see the <a href=\"api-docs/buy/static/buy-requirements.html\" target=\"_blank\">Buy APIs Requirements</a>.</span><br><br>The Feed API provides the ability to download TSV_GZIP feed files containing eBay items and an hourly snapshot file of the items that have changed within an hour for a specific category, date and marketplace. <p>In addition to the API, there is an open source <a href=\"https://github.com/eBay/FeedSDK \" target=\"_blank\">Feed SDK</a> written in Java that downloads, combines files into a single file when needed, and unzips the entire feed file. It also lets you specify field filters to curate the items in the file.</p>
 *
 * The version of the OpenAPI document: v1_beta.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Item
 */
public class ItemTest {
    private final Item model = new Item();

    /**
     * Model tests for Item
     */
    @Test
    public void testItem() {
        // TODO: test Item
    }

    /**
     * Test the property 'acceptedPaymentMethods'
     */
    @Test
    public void acceptedPaymentMethodsTest() {
        // TODO: test acceptedPaymentMethods
    }

    /**
     * Test the property 'additionalImageUrls'
     */
    @Test
    public void additionalImageUrlsTest() {
        // TODO: test additionalImageUrls
    }

    /**
     * Test the property 'additionalShippingCostPerUnit'
     */
    @Test
    public void additionalShippingCostPerUnitTest() {
        // TODO: test additionalShippingCostPerUnit
    }

    /**
     * Test the property 'ageGroup'
     */
    @Test
    public void ageGroupTest() {
        // TODO: test ageGroup
    }

    /**
     * Test the property 'alerts'
     */
    @Test
    public void alertsTest() {
        // TODO: test alerts
    }

    /**
     * Test the property 'availability'
     */
    @Test
    public void availabilityTest() {
        // TODO: test availability
    }

    /**
     * Test the property 'availabilityThreshold'
     */
    @Test
    public void availabilityThresholdTest() {
        // TODO: test availabilityThreshold
    }

    /**
     * Test the property 'availabilityThresholdType'
     */
    @Test
    public void availabilityThresholdTypeTest() {
        // TODO: test availabilityThresholdType
    }

    /**
     * Test the property 'brand'
     */
    @Test
    public void brandTest() {
        // TODO: test brand
    }

    /**
     * Test the property 'buyingOptions'
     */
    @Test
    public void buyingOptionsTest() {
        // TODO: test buyingOptions
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'categoryId'
     */
    @Test
    public void categoryIdTest() {
        // TODO: test categoryId
    }

    /**
     * Test the property 'color'
     */
    @Test
    public void colorTest() {
        // TODO: test color
    }

    /**
     * Test the property 'condition'
     */
    @Test
    public void conditionTest() {
        // TODO: test condition
    }

    /**
     * Test the property 'conditionId'
     */
    @Test
    public void conditionIdTest() {
        // TODO: test conditionId
    }

    /**
     * Test the property 'defaultImageUrl'
     */
    @Test
    public void defaultImageUrlTest() {
        // TODO: test defaultImageUrl
    }

    /**
     * Test the property 'deliveryOptions'
     */
    @Test
    public void deliveryOptionsTest() {
        // TODO: test deliveryOptions
    }

    /**
     * Test the property 'discountAmount'
     */
    @Test
    public void discountAmountTest() {
        // TODO: test discountAmount
    }

    /**
     * Test the property 'discountPercentage'
     */
    @Test
    public void discountPercentageTest() {
        // TODO: test discountPercentage
    }

    /**
     * Test the property 'ecoParticipationFeeCurrency'
     */
    @Test
    public void ecoParticipationFeeCurrencyTest() {
        // TODO: test ecoParticipationFeeCurrency
    }

    /**
     * Test the property 'ecoParticipationFeeValue'
     */
    @Test
    public void ecoParticipationFeeValueTest() {
        // TODO: test ecoParticipationFeeValue
    }

    /**
     * Test the property 'energyEfficiencyClass'
     */
    @Test
    public void energyEfficiencyClassTest() {
        // TODO: test energyEfficiencyClass
    }

    /**
     * Test the property 'epid'
     */
    @Test
    public void epidTest() {
        // TODO: test epid
    }

    /**
     * Test the property 'estimatedAvailableQuantity'
     */
    @Test
    public void estimatedAvailableQuantityTest() {
        // TODO: test estimatedAvailableQuantity
    }

    /**
     * Test the property 'gender'
     */
    @Test
    public void genderTest() {
        // TODO: test gender
    }

    /**
     * Test the property 'gtin'
     */
    @Test
    public void gtinTest() {
        // TODO: test gtin
    }

    /**
     * Test the property 'hazmatAdditionalInformation'
     */
    @Test
    public void hazmatAdditionalInformationTest() {
        // TODO: test hazmatAdditionalInformation
    }

    /**
     * Test the property 'hazmatPictogramDescriptions'
     */
    @Test
    public void hazmatPictogramDescriptionsTest() {
        // TODO: test hazmatPictogramDescriptions
    }

    /**
     * Test the property 'hazmatPictogramIds'
     */
    @Test
    public void hazmatPictogramIdsTest() {
        // TODO: test hazmatPictogramIds
    }

    /**
     * Test the property 'hazmatPictogramImageUrls'
     */
    @Test
    public void hazmatPictogramImageUrlsTest() {
        // TODO: test hazmatPictogramImageUrls
    }

    /**
     * Test the property 'hazmatSignalWord'
     */
    @Test
    public void hazmatSignalWordTest() {
        // TODO: test hazmatSignalWord
    }

    /**
     * Test the property 'hazmatSignalWordId'
     */
    @Test
    public void hazmatSignalWordIdTest() {
        // TODO: test hazmatSignalWordId
    }

    /**
     * Test the property 'hazmatStatementDescriptions'
     */
    @Test
    public void hazmatStatementDescriptionsTest() {
        // TODO: test hazmatStatementDescriptions
    }

    /**
     * Test the property 'hazmatStatementIds'
     */
    @Test
    public void hazmatStatementIdsTest() {
        // TODO: test hazmatStatementIds
    }

    /**
     * Test the property 'imageAlteringProhibited'
     */
    @Test
    public void imageAlteringProhibitedTest() {
        // TODO: test imageAlteringProhibited
    }

    /**
     * Test the property 'imageUrl'
     */
    @Test
    public void imageUrlTest() {
        // TODO: test imageUrl
    }

    /**
     * Test the property 'inferredBrand'
     */
    @Test
    public void inferredBrandTest() {
        // TODO: test inferredBrand
    }

    /**
     * Test the property 'inferredEpid'
     */
    @Test
    public void inferredEpidTest() {
        // TODO: test inferredEpid
    }

    /**
     * Test the property 'inferredGtin'
     */
    @Test
    public void inferredGtinTest() {
        // TODO: test inferredGtin
    }

    /**
     * Test the property 'inferredLocalizedAspects'
     */
    @Test
    public void inferredLocalizedAspectsTest() {
        // TODO: test inferredLocalizedAspects
    }

    /**
     * Test the property 'inferredMpn'
     */
    @Test
    public void inferredMpnTest() {
        // TODO: test inferredMpn
    }

    /**
     * Test the property 'itemAffiliateWebUrl'
     */
    @Test
    public void itemAffiliateWebUrlTest() {
        // TODO: test itemAffiliateWebUrl
    }

    /**
     * Test the property 'itemCreationDate'
     */
    @Test
    public void itemCreationDateTest() {
        // TODO: test itemCreationDate
    }

    /**
     * Test the property 'itemEndDate'
     */
    @Test
    public void itemEndDateTest() {
        // TODO: test itemEndDate
    }

    /**
     * Test the property 'itemId'
     */
    @Test
    public void itemIdTest() {
        // TODO: test itemId
    }

    /**
     * Test the property 'itemLocationCountry'
     */
    @Test
    public void itemLocationCountryTest() {
        // TODO: test itemLocationCountry
    }

    /**
     * Test the property 'itemWebUrl'
     */
    @Test
    public void itemWebUrlTest() {
        // TODO: test itemWebUrl
    }

    /**
     * Test the property 'legacyItemId'
     */
    @Test
    public void legacyItemIdTest() {
        // TODO: test legacyItemId
    }

    /**
     * Test the property 'lengthUnitOfMeasure'
     */
    @Test
    public void lengthUnitOfMeasureTest() {
        // TODO: test lengthUnitOfMeasure
    }

    /**
     * Test the property 'localizedAspects'
     */
    @Test
    public void localizedAspectsTest() {
        // TODO: test localizedAspects
    }

    /**
     * Test the property 'lotSize'
     */
    @Test
    public void lotSizeTest() {
        // TODO: test lotSize
    }

    /**
     * Test the property 'material'
     */
    @Test
    public void materialTest() {
        // TODO: test material
    }

    /**
     * Test the property 'mpn'
     */
    @Test
    public void mpnTest() {
        // TODO: test mpn
    }

    /**
     * Test the property 'originalPriceCurrency'
     */
    @Test
    public void originalPriceCurrencyTest() {
        // TODO: test originalPriceCurrency
    }

    /**
     * Test the property 'originalPriceValue'
     */
    @Test
    public void originalPriceValueTest() {
        // TODO: test originalPriceValue
    }

    /**
     * Test the property 'packageHeight'
     */
    @Test
    public void packageHeightTest() {
        // TODO: test packageHeight
    }

    /**
     * Test the property 'packageLength'
     */
    @Test
    public void packageLengthTest() {
        // TODO: test packageLength
    }

    /**
     * Test the property 'packageWeight'
     */
    @Test
    public void packageWeightTest() {
        // TODO: test packageWeight
    }

    /**
     * Test the property 'packageWidth'
     */
    @Test
    public void packageWidthTest() {
        // TODO: test packageWidth
    }

    /**
     * Test the property 'pattern'
     */
    @Test
    public void patternTest() {
        // TODO: test pattern
    }

    /**
     * Test the property 'priceCurrency'
     */
    @Test
    public void priceCurrencyTest() {
        // TODO: test priceCurrency
    }

    /**
     * Test the property 'priceValue'
     */
    @Test
    public void priceValueTest() {
        // TODO: test priceValue
    }

    /**
     * Test the property 'primaryItemGroupId'
     */
    @Test
    public void primaryItemGroupIdTest() {
        // TODO: test primaryItemGroupId
    }

    /**
     * Test the property 'primaryItemGroupType'
     */
    @Test
    public void primaryItemGroupTypeTest() {
        // TODO: test primaryItemGroupType
    }

    /**
     * Test the property 'priorityListingPayload'
     */
    @Test
    public void priorityListingPayloadTest() {
        // TODO: test priorityListingPayload
    }

    /**
     * Test the property 'qualifiedPrograms'
     */
    @Test
    public void qualifiedProgramsTest() {
        // TODO: test qualifiedPrograms
    }

    /**
     * Test the property 'quantityUsedForEstimate'
     */
    @Test
    public void quantityUsedForEstimateTest() {
        // TODO: test quantityUsedForEstimate
    }

    /**
     * Test the property 'refundMethod'
     */
    @Test
    public void refundMethodTest() {
        // TODO: test refundMethod
    }

    /**
     * Test the property 'repairScore'
     */
    @Test
    public void repairScoreTest() {
        // TODO: test repairScore
    }

    /**
     * Test the property 'returnMethod'
     */
    @Test
    public void returnMethodTest() {
        // TODO: test returnMethod
    }

    /**
     * Test the property 'returnPeriodUnit'
     */
    @Test
    public void returnPeriodUnitTest() {
        // TODO: test returnPeriodUnit
    }

    /**
     * Test the property 'returnPeriodValue'
     */
    @Test
    public void returnPeriodValueTest() {
        // TODO: test returnPeriodValue
    }

    /**
     * Test the property 'returnShippingCostPayer'
     */
    @Test
    public void returnShippingCostPayerTest() {
        // TODO: test returnShippingCostPayer
    }

    /**
     * Test the property 'returnsAccepted'
     */
    @Test
    public void returnsAcceptedTest() {
        // TODO: test returnsAccepted
    }

    /**
     * Test the property 'sellerAccountType'
     */
    @Test
    public void sellerAccountTypeTest() {
        // TODO: test sellerAccountType
    }

    /**
     * Test the property 'sellerFeedbackPercentage'
     */
    @Test
    public void sellerFeedbackPercentageTest() {
        // TODO: test sellerFeedbackPercentage
    }

    /**
     * Test the property 'sellerFeedbackScore'
     */
    @Test
    public void sellerFeedbackScoreTest() {
        // TODO: test sellerFeedbackScore
    }

    /**
     * Test the property 'sellerItemRevision'
     */
    @Test
    public void sellerItemRevisionTest() {
        // TODO: test sellerItemRevision
    }

    /**
     * Test the property 'sellerTrustLevel'
     */
    @Test
    public void sellerTrustLevelTest() {
        // TODO: test sellerTrustLevel
    }

    /**
     * Test the property 'sellerUsername'
     */
    @Test
    public void sellerUsernameTest() {
        // TODO: test sellerUsername
    }

    /**
     * Test the property 'shipToExcludedRegions'
     */
    @Test
    public void shipToExcludedRegionsTest() {
        // TODO: test shipToExcludedRegions
    }

    /**
     * Test the property 'shipToIncludedRegions'
     */
    @Test
    public void shipToIncludedRegionsTest() {
        // TODO: test shipToIncludedRegions
    }

    /**
     * Test the property 'shippingCarrierCode'
     */
    @Test
    public void shippingCarrierCodeTest() {
        // TODO: test shippingCarrierCode
    }

    /**
     * Test the property 'shippingCost'
     */
    @Test
    public void shippingCostTest() {
        // TODO: test shippingCost
    }

    /**
     * Test the property 'shippingCostType'
     */
    @Test
    public void shippingCostTypeTest() {
        // TODO: test shippingCostType
    }

    /**
     * Test the property 'shippingServiceCode'
     */
    @Test
    public void shippingServiceCodeTest() {
        // TODO: test shippingServiceCode
    }

    /**
     * Test the property 'shippingType'
     */
    @Test
    public void shippingTypeTest() {
        // TODO: test shippingType
    }

    /**
     * Test the property 'size'
     */
    @Test
    public void sizeTest() {
        // TODO: test size
    }

    /**
     * Test the property 'takeBackPolicyDescription'
     */
    @Test
    public void takeBackPolicyDescriptionTest() {
        // TODO: test takeBackPolicyDescription
    }

    /**
     * Test the property 'takeBackPolicyLabel'
     */
    @Test
    public void takeBackPolicyLabelTest() {
        // TODO: test takeBackPolicyLabel
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'totalUnits'
     */
    @Test
    public void totalUnitsTest() {
        // TODO: test totalUnits
    }

    /**
     * Test the property 'tyreLabelImageUrl'
     */
    @Test
    public void tyreLabelImageUrlTest() {
        // TODO: test tyreLabelImageUrl
    }

    /**
     * Test the property 'unitPrice'
     */
    @Test
    public void unitPriceTest() {
        // TODO: test unitPrice
    }

    /**
     * Test the property 'unitPricingMeasure'
     */
    @Test
    public void unitPricingMeasureTest() {
        // TODO: test unitPricingMeasure
    }

    /**
     * Test the property 'weightUnitOfMeasure'
     */
    @Test
    public void weightUnitOfMeasureTest() {
        // TODO: test weightUnitOfMeasure
    }

}
