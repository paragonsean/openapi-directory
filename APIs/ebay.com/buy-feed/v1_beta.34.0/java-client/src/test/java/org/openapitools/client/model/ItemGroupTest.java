/*
 * Item Feed Service
 * <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited \" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units. For information on how to obtain access to this API in production, see the <a href=\"api-docs/buy/static/buy-requirements.html\" target=\"_blank\">Buy APIs Requirements</a>.</span><br><br>The Feed API provides the ability to download TSV_GZIP feed files containing eBay items and an hourly snapshot file of the items that have changed within an hour for a specific category, date and marketplace. <p>In addition to the API, there is an open source <a href=\"https://github.com/eBay/FeedSDK \" target=\"_blank\">Feed SDK</a> written in Java that downloads, combines files into a single file when needed, and unzips the entire feed file. It also lets you specify field filters to curate the items in the file.</p>
 *
 * The version of the OpenAPI document: v1_beta.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ItemGroup
 */
public class ItemGroupTest {
    private final ItemGroup model = new ItemGroup();

    /**
     * Model tests for ItemGroup
     */
    @Test
    public void testItemGroup() {
        // TODO: test ItemGroup
    }

    /**
     * Test the property 'additionalImageUrls'
     */
    @Test
    public void additionalImageUrlsTest() {
        // TODO: test additionalImageUrls
    }

    /**
     * Test the property 'imageAlteringProhibited'
     */
    @Test
    public void imageAlteringProhibitedTest() {
        // TODO: test imageAlteringProhibited
    }

    /**
     * Test the property 'imageUrl'
     */
    @Test
    public void imageUrlTest() {
        // TODO: test imageUrl
    }

    /**
     * Test the property 'itemGroupId'
     */
    @Test
    public void itemGroupIdTest() {
        // TODO: test itemGroupId
    }

    /**
     * Test the property 'itemGroupType'
     */
    @Test
    public void itemGroupTypeTest() {
        // TODO: test itemGroupType
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'variesByLocalizedAspects'
     */
    @Test
    public void variesByLocalizedAspectsTest() {
        // TODO: test variesByLocalizedAspects
    }

}
