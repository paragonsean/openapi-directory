/**
 * Item Feed Service
 * <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited \" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units. For information on how to obtain access to this API in production, see the <a href=\"api-docs/buy/static/buy-requirements.html\" target=\"_blank\">Buy APIs Requirements</a>.</span><br><br>The Feed API provides the ability to download TSV_GZIP feed files containing eBay items and an hourly snapshot file of the items that have changed within an hour for a specific category, date and marketplace. <p>In addition to the API, there is an open source <a href=\"https://github.com/eBay/FeedSDK \" target=\"_blank\">Feed SDK</a> written in Java that downloads, combines files into a single file when needed, and unzips the entire feed file. It also lets you specify field filters to curate the items in the file.</p>
 *
 * The version of the OpenAPI document: v1_beta.34.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItemSnapshot.h
 *
 * The type that defines the columns returned in the &lt;b&gt;Hourly Snapshot&lt;/b&gt; feed file.  &lt;p&gt;  &lt;b&gt;Note: &lt;/b&gt; When the value of the &lt;b&gt; availability&lt;/b&gt; column is &lt;code&gt;UNAVAILABLE&lt;/code&gt;, only the &lt;b&gt;itemId&lt;/b&gt; and &lt;b&gt; availability&lt;/b&gt; columns are populated.  &lt;/p&gt; 
 */

#ifndef OAIItemSnapshot_H
#define OAIItemSnapshot_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIItemSnapshot : public OAIObject {
public:
    OAIItemSnapshot();
    OAIItemSnapshot(QString json);
    ~OAIItemSnapshot() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcceptedPaymentMethods() const;
    void setAcceptedPaymentMethods(const QString &accepted_payment_methods);
    bool is_accepted_payment_methods_Set() const;
    bool is_accepted_payment_methods_Valid() const;

    QString getAdditionalImageUrls() const;
    void setAdditionalImageUrls(const QString &additional_image_urls);
    bool is_additional_image_urls_Set() const;
    bool is_additional_image_urls_Valid() const;

    QString getAdditionalShippingCostPerUnit() const;
    void setAdditionalShippingCostPerUnit(const QString &additional_shipping_cost_per_unit);
    bool is_additional_shipping_cost_per_unit_Set() const;
    bool is_additional_shipping_cost_per_unit_Valid() const;

    QString getAgeGroup() const;
    void setAgeGroup(const QString &age_group);
    bool is_age_group_Set() const;
    bool is_age_group_Valid() const;

    QString getAlerts() const;
    void setAlerts(const QString &alerts);
    bool is_alerts_Set() const;
    bool is_alerts_Valid() const;

    QString getAuthenticityGuaranteeFeeCurrency() const;
    void setAuthenticityGuaranteeFeeCurrency(const QString &authenticity_guarantee_fee_currency);
    bool is_authenticity_guarantee_fee_currency_Set() const;
    bool is_authenticity_guarantee_fee_currency_Valid() const;

    QString getAuthenticityGuaranteeFeeValue() const;
    void setAuthenticityGuaranteeFeeValue(const QString &authenticity_guarantee_fee_value);
    bool is_authenticity_guarantee_fee_value_Set() const;
    bool is_authenticity_guarantee_fee_value_Valid() const;

    QString getAuthenticityGuaranteeSelection() const;
    void setAuthenticityGuaranteeSelection(const QString &authenticity_guarantee_selection);
    bool is_authenticity_guarantee_selection_Set() const;
    bool is_authenticity_guarantee_selection_Valid() const;

    QString getAuthenticityGuaranteeServiceId() const;
    void setAuthenticityGuaranteeServiceId(const QString &authenticity_guarantee_service_id);
    bool is_authenticity_guarantee_service_id_Set() const;
    bool is_authenticity_guarantee_service_id_Valid() const;

    QString getAvailability() const;
    void setAvailability(const QString &availability);
    bool is_availability_Set() const;
    bool is_availability_Valid() const;

    qint32 getAvailabilityThreshold() const;
    void setAvailabilityThreshold(const qint32 &availability_threshold);
    bool is_availability_threshold_Set() const;
    bool is_availability_threshold_Valid() const;

    QString getAvailabilityThresholdType() const;
    void setAvailabilityThresholdType(const QString &availability_threshold_type);
    bool is_availability_threshold_type_Set() const;
    bool is_availability_threshold_type_Valid() const;

    QString getBrand() const;
    void setBrand(const QString &brand);
    bool is_brand_Set() const;
    bool is_brand_Valid() const;

    QString getBuyingOptions() const;
    void setBuyingOptions(const QString &buying_options);
    bool is_buying_options_Set() const;
    bool is_buying_options_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getCategoryId() const;
    void setCategoryId(const QString &category_id);
    bool is_category_id_Set() const;
    bool is_category_id_Valid() const;

    QString getChangeMetadata() const;
    void setChangeMetadata(const QString &change_metadata);
    bool is_change_metadata_Set() const;
    bool is_change_metadata_Valid() const;

    QString getColor() const;
    void setColor(const QString &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    QString getCondition() const;
    void setCondition(const QString &condition);
    bool is_condition_Set() const;
    bool is_condition_Valid() const;

    QString getConditionId() const;
    void setConditionId(const QString &condition_id);
    bool is_condition_id_Set() const;
    bool is_condition_id_Valid() const;

    QString getCouponDiscountCurrency() const;
    void setCouponDiscountCurrency(const QString &coupon_discount_currency);
    bool is_coupon_discount_currency_Set() const;
    bool is_coupon_discount_currency_Valid() const;

    QString getCouponDiscountType() const;
    void setCouponDiscountType(const QString &coupon_discount_type);
    bool is_coupon_discount_type_Set() const;
    bool is_coupon_discount_type_Valid() const;

    QString getCouponDiscountValue() const;
    void setCouponDiscountValue(const QString &coupon_discount_value);
    bool is_coupon_discount_value_Set() const;
    bool is_coupon_discount_value_Valid() const;

    QString getCouponExpirationDate() const;
    void setCouponExpirationDate(const QString &coupon_expiration_date);
    bool is_coupon_expiration_date_Set() const;
    bool is_coupon_expiration_date_Valid() const;

    QString getCouponMessage() const;
    void setCouponMessage(const QString &coupon_message);
    bool is_coupon_message_Set() const;
    bool is_coupon_message_Valid() const;

    QString getCouponRedemptionCode() const;
    void setCouponRedemptionCode(const QString &coupon_redemption_code);
    bool is_coupon_redemption_code_Set() const;
    bool is_coupon_redemption_code_Valid() const;

    QString getCouponTermsWebUrl() const;
    void setCouponTermsWebUrl(const QString &coupon_terms_web_url);
    bool is_coupon_terms_web_url_Set() const;
    bool is_coupon_terms_web_url_Valid() const;

    QString getDefaultImageUrl() const;
    void setDefaultImageUrl(const QString &default_image_url);
    bool is_default_image_url_Set() const;
    bool is_default_image_url_Valid() const;

    QString getDeliveryOptions() const;
    void setDeliveryOptions(const QString &delivery_options);
    bool is_delivery_options_Set() const;
    bool is_delivery_options_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDiscountAmount() const;
    void setDiscountAmount(const QString &discount_amount);
    bool is_discount_amount_Set() const;
    bool is_discount_amount_Valid() const;

    QString getDiscountPercentage() const;
    void setDiscountPercentage(const QString &discount_percentage);
    bool is_discount_percentage_Set() const;
    bool is_discount_percentage_Valid() const;

    QString getEcoParticipationFeeCurrency() const;
    void setEcoParticipationFeeCurrency(const QString &eco_participation_fee_currency);
    bool is_eco_participation_fee_currency_Set() const;
    bool is_eco_participation_fee_currency_Valid() const;

    QString getEcoParticipationFeeValue() const;
    void setEcoParticipationFeeValue(const QString &eco_participation_fee_value);
    bool is_eco_participation_fee_value_Set() const;
    bool is_eco_participation_fee_value_Valid() const;

    QString getEnergyEfficiencyClass() const;
    void setEnergyEfficiencyClass(const QString &energy_efficiency_class);
    bool is_energy_efficiency_class_Set() const;
    bool is_energy_efficiency_class_Valid() const;

    QString getEpid() const;
    void setEpid(const QString &epid);
    bool is_epid_Set() const;
    bool is_epid_Valid() const;

    qint32 getEstimatedAvailableQuantity() const;
    void setEstimatedAvailableQuantity(const qint32 &estimated_available_quantity);
    bool is_estimated_available_quantity_Set() const;
    bool is_estimated_available_quantity_Valid() const;

    QString getGender() const;
    void setGender(const QString &gender);
    bool is_gender_Set() const;
    bool is_gender_Valid() const;

    QString getGtin() const;
    void setGtin(const QString &gtin);
    bool is_gtin_Set() const;
    bool is_gtin_Valid() const;

    QString getHazmatAdditionalInformation() const;
    void setHazmatAdditionalInformation(const QString &hazmat_additional_information);
    bool is_hazmat_additional_information_Set() const;
    bool is_hazmat_additional_information_Valid() const;

    QString getHazmatPictogramDescriptions() const;
    void setHazmatPictogramDescriptions(const QString &hazmat_pictogram_descriptions);
    bool is_hazmat_pictogram_descriptions_Set() const;
    bool is_hazmat_pictogram_descriptions_Valid() const;

    QString getHazmatPictogramIds() const;
    void setHazmatPictogramIds(const QString &hazmat_pictogram_ids);
    bool is_hazmat_pictogram_ids_Set() const;
    bool is_hazmat_pictogram_ids_Valid() const;

    QString getHazmatPictogramImageUrls() const;
    void setHazmatPictogramImageUrls(const QString &hazmat_pictogram_image_urls);
    bool is_hazmat_pictogram_image_urls_Set() const;
    bool is_hazmat_pictogram_image_urls_Valid() const;

    QString getHazmatSignalWord() const;
    void setHazmatSignalWord(const QString &hazmat_signal_word);
    bool is_hazmat_signal_word_Set() const;
    bool is_hazmat_signal_word_Valid() const;

    QString getHazmatSignalWordId() const;
    void setHazmatSignalWordId(const QString &hazmat_signal_word_id);
    bool is_hazmat_signal_word_id_Set() const;
    bool is_hazmat_signal_word_id_Valid() const;

    QString getHazmatStatementDescriptions() const;
    void setHazmatStatementDescriptions(const QString &hazmat_statement_descriptions);
    bool is_hazmat_statement_descriptions_Set() const;
    bool is_hazmat_statement_descriptions_Valid() const;

    QString getHazmatStatementIds() const;
    void setHazmatStatementIds(const QString &hazmat_statement_ids);
    bool is_hazmat_statement_ids_Set() const;
    bool is_hazmat_statement_ids_Valid() const;

    bool isImageAlteringProhibited() const;
    void setImageAlteringProhibited(const bool &image_altering_prohibited);
    bool is_image_altering_prohibited_Set() const;
    bool is_image_altering_prohibited_Valid() const;

    QString getImageUrl() const;
    void setImageUrl(const QString &image_url);
    bool is_image_url_Set() const;
    bool is_image_url_Valid() const;

    QString getInferredEpid() const;
    void setInferredEpid(const QString &inferred_epid);
    bool is_inferred_epid_Set() const;
    bool is_inferred_epid_Valid() const;

    QString getItemAffiliateWebUrl() const;
    void setItemAffiliateWebUrl(const QString &item_affiliate_web_url);
    bool is_item_affiliate_web_url_Set() const;
    bool is_item_affiliate_web_url_Valid() const;

    QString getItemCreationDate() const;
    void setItemCreationDate(const QString &item_creation_date);
    bool is_item_creation_date_Set() const;
    bool is_item_creation_date_Valid() const;

    QString getItemEndDate() const;
    void setItemEndDate(const QString &item_end_date);
    bool is_item_end_date_Set() const;
    bool is_item_end_date_Valid() const;

    QString getItemId() const;
    void setItemId(const QString &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    QString getItemLocationCountry() const;
    void setItemLocationCountry(const QString &item_location_country);
    bool is_item_location_country_Set() const;
    bool is_item_location_country_Valid() const;

    QString getItemSnapshotDate() const;
    void setItemSnapshotDate(const QString &item_snapshot_date);
    bool is_item_snapshot_date_Set() const;
    bool is_item_snapshot_date_Valid() const;

    QString getItemWebUrl() const;
    void setItemWebUrl(const QString &item_web_url);
    bool is_item_web_url_Set() const;
    bool is_item_web_url_Valid() const;

    QString getLegacyItemId() const;
    void setLegacyItemId(const QString &legacy_item_id);
    bool is_legacy_item_id_Set() const;
    bool is_legacy_item_id_Valid() const;

    QString getLocalizedAspects() const;
    void setLocalizedAspects(const QString &localized_aspects);
    bool is_localized_aspects_Set() const;
    bool is_localized_aspects_Valid() const;

    qint32 getLotSize() const;
    void setLotSize(const qint32 &lot_size);
    bool is_lot_size_Set() const;
    bool is_lot_size_Valid() const;

    QString getMaterial() const;
    void setMaterial(const QString &material);
    bool is_material_Set() const;
    bool is_material_Valid() const;

    QString getMpn() const;
    void setMpn(const QString &mpn);
    bool is_mpn_Set() const;
    bool is_mpn_Valid() const;

    QString getOriginalPriceCurrency() const;
    void setOriginalPriceCurrency(const QString &original_price_currency);
    bool is_original_price_currency_Set() const;
    bool is_original_price_currency_Valid() const;

    QString getOriginalPriceValue() const;
    void setOriginalPriceValue(const QString &original_price_value);
    bool is_original_price_value_Set() const;
    bool is_original_price_value_Valid() const;

    QString getPattern() const;
    void setPattern(const QString &pattern);
    bool is_pattern_Set() const;
    bool is_pattern_Valid() const;

    QString getPriceCurrency() const;
    void setPriceCurrency(const QString &price_currency);
    bool is_price_currency_Set() const;
    bool is_price_currency_Valid() const;

    QString getPriceValue() const;
    void setPriceValue(const QString &price_value);
    bool is_price_value_Set() const;
    bool is_price_value_Valid() const;

    QString getPrimaryItemGroupId() const;
    void setPrimaryItemGroupId(const QString &primary_item_group_id);
    bool is_primary_item_group_id_Set() const;
    bool is_primary_item_group_id_Valid() const;

    QString getPrimaryItemGroupType() const;
    void setPrimaryItemGroupType(const QString &primary_item_group_type);
    bool is_primary_item_group_type_Set() const;
    bool is_primary_item_group_type_Valid() const;

    QString getQualifiedPrograms() const;
    void setQualifiedPrograms(const QString &qualified_programs);
    bool is_qualified_programs_Set() const;
    bool is_qualified_programs_Valid() const;

    qint32 getQuantityUsedForEstimate() const;
    void setQuantityUsedForEstimate(const qint32 &quantity_used_for_estimate);
    bool is_quantity_used_for_estimate_Set() const;
    bool is_quantity_used_for_estimate_Valid() const;

    QString getRefundMethod() const;
    void setRefundMethod(const QString &refund_method);
    bool is_refund_method_Set() const;
    bool is_refund_method_Valid() const;

    QString getRepairScore() const;
    void setRepairScore(const QString &repair_score);
    bool is_repair_score_Set() const;
    bool is_repair_score_Valid() const;

    QString getReturnMethod() const;
    void setReturnMethod(const QString &return_method);
    bool is_return_method_Set() const;
    bool is_return_method_Valid() const;

    QString getReturnPeriodUnit() const;
    void setReturnPeriodUnit(const QString &return_period_unit);
    bool is_return_period_unit_Set() const;
    bool is_return_period_unit_Valid() const;

    qint32 getReturnPeriodValue() const;
    void setReturnPeriodValue(const qint32 &return_period_value);
    bool is_return_period_value_Set() const;
    bool is_return_period_value_Valid() const;

    QString getReturnShippingCostPayer() const;
    void setReturnShippingCostPayer(const QString &return_shipping_cost_payer);
    bool is_return_shipping_cost_payer_Set() const;
    bool is_return_shipping_cost_payer_Valid() const;

    bool isReturnsAccepted() const;
    void setReturnsAccepted(const bool &returns_accepted);
    bool is_returns_accepted_Set() const;
    bool is_returns_accepted_Valid() const;

    QString getSellerAccountType() const;
    void setSellerAccountType(const QString &seller_account_type);
    bool is_seller_account_type_Set() const;
    bool is_seller_account_type_Valid() const;

    QString getSellerFeedbackPercentage() const;
    void setSellerFeedbackPercentage(const QString &seller_feedback_percentage);
    bool is_seller_feedback_percentage_Set() const;
    bool is_seller_feedback_percentage_Valid() const;

    QString getSellerFeedbackScore() const;
    void setSellerFeedbackScore(const QString &seller_feedback_score);
    bool is_seller_feedback_score_Set() const;
    bool is_seller_feedback_score_Valid() const;

    QString getSellerItemRevision() const;
    void setSellerItemRevision(const QString &seller_item_revision);
    bool is_seller_item_revision_Set() const;
    bool is_seller_item_revision_Valid() const;

    QString getSellerTrustLevel() const;
    void setSellerTrustLevel(const QString &seller_trust_level);
    bool is_seller_trust_level_Set() const;
    bool is_seller_trust_level_Valid() const;

    QString getSellerUsername() const;
    void setSellerUsername(const QString &seller_username);
    bool is_seller_username_Set() const;
    bool is_seller_username_Valid() const;

    QString getShipToExcludedRegions() const;
    void setShipToExcludedRegions(const QString &ship_to_excluded_regions);
    bool is_ship_to_excluded_regions_Set() const;
    bool is_ship_to_excluded_regions_Valid() const;

    QString getShipToIncludedRegions() const;
    void setShipToIncludedRegions(const QString &ship_to_included_regions);
    bool is_ship_to_included_regions_Set() const;
    bool is_ship_to_included_regions_Valid() const;

    QString getShippingCarrierCode() const;
    void setShippingCarrierCode(const QString &shipping_carrier_code);
    bool is_shipping_carrier_code_Set() const;
    bool is_shipping_carrier_code_Valid() const;

    QString getShippingCost() const;
    void setShippingCost(const QString &shipping_cost);
    bool is_shipping_cost_Set() const;
    bool is_shipping_cost_Valid() const;

    QString getShippingCostType() const;
    void setShippingCostType(const QString &shipping_cost_type);
    bool is_shipping_cost_type_Set() const;
    bool is_shipping_cost_type_Valid() const;

    QString getShippingServiceCode() const;
    void setShippingServiceCode(const QString &shipping_service_code);
    bool is_shipping_service_code_Set() const;
    bool is_shipping_service_code_Valid() const;

    QString getShippingType() const;
    void setShippingType(const QString &shipping_type);
    bool is_shipping_type_Set() const;
    bool is_shipping_type_Valid() const;

    QString getSize() const;
    void setSize(const QString &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getTakeBackPolicyDescription() const;
    void setTakeBackPolicyDescription(const QString &take_back_policy_description);
    bool is_take_back_policy_description_Set() const;
    bool is_take_back_policy_description_Valid() const;

    QString getTakeBackPolicyLabel() const;
    void setTakeBackPolicyLabel(const QString &take_back_policy_label);
    bool is_take_back_policy_label_Set() const;
    bool is_take_back_policy_label_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getTotalUnits() const;
    void setTotalUnits(const QString &total_units);
    bool is_total_units_Set() const;
    bool is_total_units_Valid() const;

    QString getTyreLabelImageUrl() const;
    void setTyreLabelImageUrl(const QString &tyre_label_image_url);
    bool is_tyre_label_image_url_Set() const;
    bool is_tyre_label_image_url_Valid() const;

    QString getUnitPrice() const;
    void setUnitPrice(const QString &unit_price);
    bool is_unit_price_Set() const;
    bool is_unit_price_Valid() const;

    QString getUnitPricingMeasure() const;
    void setUnitPricingMeasure(const QString &unit_pricing_measure);
    bool is_unit_pricing_measure_Set() const;
    bool is_unit_pricing_measure_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_accepted_payment_methods;
    bool m_accepted_payment_methods_isSet;
    bool m_accepted_payment_methods_isValid;

    QString m_additional_image_urls;
    bool m_additional_image_urls_isSet;
    bool m_additional_image_urls_isValid;

    QString m_additional_shipping_cost_per_unit;
    bool m_additional_shipping_cost_per_unit_isSet;
    bool m_additional_shipping_cost_per_unit_isValid;

    QString m_age_group;
    bool m_age_group_isSet;
    bool m_age_group_isValid;

    QString m_alerts;
    bool m_alerts_isSet;
    bool m_alerts_isValid;

    QString m_authenticity_guarantee_fee_currency;
    bool m_authenticity_guarantee_fee_currency_isSet;
    bool m_authenticity_guarantee_fee_currency_isValid;

    QString m_authenticity_guarantee_fee_value;
    bool m_authenticity_guarantee_fee_value_isSet;
    bool m_authenticity_guarantee_fee_value_isValid;

    QString m_authenticity_guarantee_selection;
    bool m_authenticity_guarantee_selection_isSet;
    bool m_authenticity_guarantee_selection_isValid;

    QString m_authenticity_guarantee_service_id;
    bool m_authenticity_guarantee_service_id_isSet;
    bool m_authenticity_guarantee_service_id_isValid;

    QString m_availability;
    bool m_availability_isSet;
    bool m_availability_isValid;

    qint32 m_availability_threshold;
    bool m_availability_threshold_isSet;
    bool m_availability_threshold_isValid;

    QString m_availability_threshold_type;
    bool m_availability_threshold_type_isSet;
    bool m_availability_threshold_type_isValid;

    QString m_brand;
    bool m_brand_isSet;
    bool m_brand_isValid;

    QString m_buying_options;
    bool m_buying_options_isSet;
    bool m_buying_options_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_category_id;
    bool m_category_id_isSet;
    bool m_category_id_isValid;

    QString m_change_metadata;
    bool m_change_metadata_isSet;
    bool m_change_metadata_isValid;

    QString m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    QString m_condition;
    bool m_condition_isSet;
    bool m_condition_isValid;

    QString m_condition_id;
    bool m_condition_id_isSet;
    bool m_condition_id_isValid;

    QString m_coupon_discount_currency;
    bool m_coupon_discount_currency_isSet;
    bool m_coupon_discount_currency_isValid;

    QString m_coupon_discount_type;
    bool m_coupon_discount_type_isSet;
    bool m_coupon_discount_type_isValid;

    QString m_coupon_discount_value;
    bool m_coupon_discount_value_isSet;
    bool m_coupon_discount_value_isValid;

    QString m_coupon_expiration_date;
    bool m_coupon_expiration_date_isSet;
    bool m_coupon_expiration_date_isValid;

    QString m_coupon_message;
    bool m_coupon_message_isSet;
    bool m_coupon_message_isValid;

    QString m_coupon_redemption_code;
    bool m_coupon_redemption_code_isSet;
    bool m_coupon_redemption_code_isValid;

    QString m_coupon_terms_web_url;
    bool m_coupon_terms_web_url_isSet;
    bool m_coupon_terms_web_url_isValid;

    QString m_default_image_url;
    bool m_default_image_url_isSet;
    bool m_default_image_url_isValid;

    QString m_delivery_options;
    bool m_delivery_options_isSet;
    bool m_delivery_options_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_discount_amount;
    bool m_discount_amount_isSet;
    bool m_discount_amount_isValid;

    QString m_discount_percentage;
    bool m_discount_percentage_isSet;
    bool m_discount_percentage_isValid;

    QString m_eco_participation_fee_currency;
    bool m_eco_participation_fee_currency_isSet;
    bool m_eco_participation_fee_currency_isValid;

    QString m_eco_participation_fee_value;
    bool m_eco_participation_fee_value_isSet;
    bool m_eco_participation_fee_value_isValid;

    QString m_energy_efficiency_class;
    bool m_energy_efficiency_class_isSet;
    bool m_energy_efficiency_class_isValid;

    QString m_epid;
    bool m_epid_isSet;
    bool m_epid_isValid;

    qint32 m_estimated_available_quantity;
    bool m_estimated_available_quantity_isSet;
    bool m_estimated_available_quantity_isValid;

    QString m_gender;
    bool m_gender_isSet;
    bool m_gender_isValid;

    QString m_gtin;
    bool m_gtin_isSet;
    bool m_gtin_isValid;

    QString m_hazmat_additional_information;
    bool m_hazmat_additional_information_isSet;
    bool m_hazmat_additional_information_isValid;

    QString m_hazmat_pictogram_descriptions;
    bool m_hazmat_pictogram_descriptions_isSet;
    bool m_hazmat_pictogram_descriptions_isValid;

    QString m_hazmat_pictogram_ids;
    bool m_hazmat_pictogram_ids_isSet;
    bool m_hazmat_pictogram_ids_isValid;

    QString m_hazmat_pictogram_image_urls;
    bool m_hazmat_pictogram_image_urls_isSet;
    bool m_hazmat_pictogram_image_urls_isValid;

    QString m_hazmat_signal_word;
    bool m_hazmat_signal_word_isSet;
    bool m_hazmat_signal_word_isValid;

    QString m_hazmat_signal_word_id;
    bool m_hazmat_signal_word_id_isSet;
    bool m_hazmat_signal_word_id_isValid;

    QString m_hazmat_statement_descriptions;
    bool m_hazmat_statement_descriptions_isSet;
    bool m_hazmat_statement_descriptions_isValid;

    QString m_hazmat_statement_ids;
    bool m_hazmat_statement_ids_isSet;
    bool m_hazmat_statement_ids_isValid;

    bool m_image_altering_prohibited;
    bool m_image_altering_prohibited_isSet;
    bool m_image_altering_prohibited_isValid;

    QString m_image_url;
    bool m_image_url_isSet;
    bool m_image_url_isValid;

    QString m_inferred_epid;
    bool m_inferred_epid_isSet;
    bool m_inferred_epid_isValid;

    QString m_item_affiliate_web_url;
    bool m_item_affiliate_web_url_isSet;
    bool m_item_affiliate_web_url_isValid;

    QString m_item_creation_date;
    bool m_item_creation_date_isSet;
    bool m_item_creation_date_isValid;

    QString m_item_end_date;
    bool m_item_end_date_isSet;
    bool m_item_end_date_isValid;

    QString m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    QString m_item_location_country;
    bool m_item_location_country_isSet;
    bool m_item_location_country_isValid;

    QString m_item_snapshot_date;
    bool m_item_snapshot_date_isSet;
    bool m_item_snapshot_date_isValid;

    QString m_item_web_url;
    bool m_item_web_url_isSet;
    bool m_item_web_url_isValid;

    QString m_legacy_item_id;
    bool m_legacy_item_id_isSet;
    bool m_legacy_item_id_isValid;

    QString m_localized_aspects;
    bool m_localized_aspects_isSet;
    bool m_localized_aspects_isValid;

    qint32 m_lot_size;
    bool m_lot_size_isSet;
    bool m_lot_size_isValid;

    QString m_material;
    bool m_material_isSet;
    bool m_material_isValid;

    QString m_mpn;
    bool m_mpn_isSet;
    bool m_mpn_isValid;

    QString m_original_price_currency;
    bool m_original_price_currency_isSet;
    bool m_original_price_currency_isValid;

    QString m_original_price_value;
    bool m_original_price_value_isSet;
    bool m_original_price_value_isValid;

    QString m_pattern;
    bool m_pattern_isSet;
    bool m_pattern_isValid;

    QString m_price_currency;
    bool m_price_currency_isSet;
    bool m_price_currency_isValid;

    QString m_price_value;
    bool m_price_value_isSet;
    bool m_price_value_isValid;

    QString m_primary_item_group_id;
    bool m_primary_item_group_id_isSet;
    bool m_primary_item_group_id_isValid;

    QString m_primary_item_group_type;
    bool m_primary_item_group_type_isSet;
    bool m_primary_item_group_type_isValid;

    QString m_qualified_programs;
    bool m_qualified_programs_isSet;
    bool m_qualified_programs_isValid;

    qint32 m_quantity_used_for_estimate;
    bool m_quantity_used_for_estimate_isSet;
    bool m_quantity_used_for_estimate_isValid;

    QString m_refund_method;
    bool m_refund_method_isSet;
    bool m_refund_method_isValid;

    QString m_repair_score;
    bool m_repair_score_isSet;
    bool m_repair_score_isValid;

    QString m_return_method;
    bool m_return_method_isSet;
    bool m_return_method_isValid;

    QString m_return_period_unit;
    bool m_return_period_unit_isSet;
    bool m_return_period_unit_isValid;

    qint32 m_return_period_value;
    bool m_return_period_value_isSet;
    bool m_return_period_value_isValid;

    QString m_return_shipping_cost_payer;
    bool m_return_shipping_cost_payer_isSet;
    bool m_return_shipping_cost_payer_isValid;

    bool m_returns_accepted;
    bool m_returns_accepted_isSet;
    bool m_returns_accepted_isValid;

    QString m_seller_account_type;
    bool m_seller_account_type_isSet;
    bool m_seller_account_type_isValid;

    QString m_seller_feedback_percentage;
    bool m_seller_feedback_percentage_isSet;
    bool m_seller_feedback_percentage_isValid;

    QString m_seller_feedback_score;
    bool m_seller_feedback_score_isSet;
    bool m_seller_feedback_score_isValid;

    QString m_seller_item_revision;
    bool m_seller_item_revision_isSet;
    bool m_seller_item_revision_isValid;

    QString m_seller_trust_level;
    bool m_seller_trust_level_isSet;
    bool m_seller_trust_level_isValid;

    QString m_seller_username;
    bool m_seller_username_isSet;
    bool m_seller_username_isValid;

    QString m_ship_to_excluded_regions;
    bool m_ship_to_excluded_regions_isSet;
    bool m_ship_to_excluded_regions_isValid;

    QString m_ship_to_included_regions;
    bool m_ship_to_included_regions_isSet;
    bool m_ship_to_included_regions_isValid;

    QString m_shipping_carrier_code;
    bool m_shipping_carrier_code_isSet;
    bool m_shipping_carrier_code_isValid;

    QString m_shipping_cost;
    bool m_shipping_cost_isSet;
    bool m_shipping_cost_isValid;

    QString m_shipping_cost_type;
    bool m_shipping_cost_type_isSet;
    bool m_shipping_cost_type_isValid;

    QString m_shipping_service_code;
    bool m_shipping_service_code_isSet;
    bool m_shipping_service_code_isValid;

    QString m_shipping_type;
    bool m_shipping_type_isSet;
    bool m_shipping_type_isValid;

    QString m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_take_back_policy_description;
    bool m_take_back_policy_description_isSet;
    bool m_take_back_policy_description_isValid;

    QString m_take_back_policy_label;
    bool m_take_back_policy_label_isSet;
    bool m_take_back_policy_label_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_total_units;
    bool m_total_units_isSet;
    bool m_total_units_isValid;

    QString m_tyre_label_image_url;
    bool m_tyre_label_image_url_isSet;
    bool m_tyre_label_image_url_isValid;

    QString m_unit_price;
    bool m_unit_price_isSet;
    bool m_unit_price_isValid;

    QString m_unit_pricing_measure;
    bool m_unit_pricing_measure_isSet;
    bool m_unit_pricing_measure_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItemSnapshot)

#endif // OAIItemSnapshot_H
