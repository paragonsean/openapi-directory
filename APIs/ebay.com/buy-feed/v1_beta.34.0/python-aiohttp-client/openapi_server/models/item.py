# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Item(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accepted_payment_methods: str=None, additional_image_urls: str=None, additional_shipping_cost_per_unit: str=None, age_group: str=None, alerts: str=None, availability: str=None, availability_threshold: int=None, availability_threshold_type: str=None, brand: str=None, buying_options: str=None, category: str=None, category_id: str=None, color: str=None, condition: str=None, condition_id: str=None, default_image_url: str=None, delivery_options: str=None, discount_amount: str=None, discount_percentage: str=None, eco_participation_fee_currency: str=None, eco_participation_fee_value: str=None, energy_efficiency_class: str=None, epid: str=None, estimated_available_quantity: int=None, gender: str=None, gtin: str=None, hazmat_additional_information: str=None, hazmat_pictogram_descriptions: str=None, hazmat_pictogram_ids: str=None, hazmat_pictogram_image_urls: str=None, hazmat_signal_word: str=None, hazmat_signal_word_id: str=None, hazmat_statement_descriptions: str=None, hazmat_statement_ids: str=None, image_altering_prohibited: bool=None, image_url: str=None, inferred_brand: str=None, inferred_epid: str=None, inferred_gtin: str=None, inferred_localized_aspects: str=None, inferred_mpn: str=None, item_affiliate_web_url: str=None, item_creation_date: str=None, item_end_date: str=None, item_id: str=None, item_location_country: str=None, item_web_url: str=None, legacy_item_id: str=None, length_unit_of_measure: str=None, localized_aspects: str=None, lot_size: int=None, material: str=None, mpn: str=None, original_price_currency: str=None, original_price_value: str=None, package_height: str=None, package_length: str=None, package_weight: str=None, package_width: str=None, pattern: str=None, price_currency: str=None, price_value: str=None, primary_item_group_id: str=None, primary_item_group_type: str=None, priority_listing_payload: str=None, qualified_programs: str=None, quantity_used_for_estimate: int=None, refund_method: str=None, repair_score: str=None, return_method: str=None, return_period_unit: str=None, return_period_value: int=None, return_shipping_cost_payer: str=None, returns_accepted: bool=None, seller_account_type: str=None, seller_feedback_percentage: str=None, seller_feedback_score: str=None, seller_item_revision: str=None, seller_trust_level: str=None, seller_username: str=None, ship_to_excluded_regions: str=None, ship_to_included_regions: str=None, shipping_carrier_code: str=None, shipping_cost: str=None, shipping_cost_type: str=None, shipping_service_code: str=None, shipping_type: str=None, size: str=None, take_back_policy_description: str=None, take_back_policy_label: str=None, title: str=None, total_units: str=None, tyre_label_image_url: str=None, unit_price: str=None, unit_pricing_measure: str=None, weight_unit_of_measure: str=None):
        """Item - a model defined in OpenAPI

        :param accepted_payment_methods: The accepted_payment_methods of this Item.
        :param additional_image_urls: The additional_image_urls of this Item.
        :param additional_shipping_cost_per_unit: The additional_shipping_cost_per_unit of this Item.
        :param age_group: The age_group of this Item.
        :param alerts: The alerts of this Item.
        :param availability: The availability of this Item.
        :param availability_threshold: The availability_threshold of this Item.
        :param availability_threshold_type: The availability_threshold_type of this Item.
        :param brand: The brand of this Item.
        :param buying_options: The buying_options of this Item.
        :param category: The category of this Item.
        :param category_id: The category_id of this Item.
        :param color: The color of this Item.
        :param condition: The condition of this Item.
        :param condition_id: The condition_id of this Item.
        :param default_image_url: The default_image_url of this Item.
        :param delivery_options: The delivery_options of this Item.
        :param discount_amount: The discount_amount of this Item.
        :param discount_percentage: The discount_percentage of this Item.
        :param eco_participation_fee_currency: The eco_participation_fee_currency of this Item.
        :param eco_participation_fee_value: The eco_participation_fee_value of this Item.
        :param energy_efficiency_class: The energy_efficiency_class of this Item.
        :param epid: The epid of this Item.
        :param estimated_available_quantity: The estimated_available_quantity of this Item.
        :param gender: The gender of this Item.
        :param gtin: The gtin of this Item.
        :param hazmat_additional_information: The hazmat_additional_information of this Item.
        :param hazmat_pictogram_descriptions: The hazmat_pictogram_descriptions of this Item.
        :param hazmat_pictogram_ids: The hazmat_pictogram_ids of this Item.
        :param hazmat_pictogram_image_urls: The hazmat_pictogram_image_urls of this Item.
        :param hazmat_signal_word: The hazmat_signal_word of this Item.
        :param hazmat_signal_word_id: The hazmat_signal_word_id of this Item.
        :param hazmat_statement_descriptions: The hazmat_statement_descriptions of this Item.
        :param hazmat_statement_ids: The hazmat_statement_ids of this Item.
        :param image_altering_prohibited: The image_altering_prohibited of this Item.
        :param image_url: The image_url of this Item.
        :param inferred_brand: The inferred_brand of this Item.
        :param inferred_epid: The inferred_epid of this Item.
        :param inferred_gtin: The inferred_gtin of this Item.
        :param inferred_localized_aspects: The inferred_localized_aspects of this Item.
        :param inferred_mpn: The inferred_mpn of this Item.
        :param item_affiliate_web_url: The item_affiliate_web_url of this Item.
        :param item_creation_date: The item_creation_date of this Item.
        :param item_end_date: The item_end_date of this Item.
        :param item_id: The item_id of this Item.
        :param item_location_country: The item_location_country of this Item.
        :param item_web_url: The item_web_url of this Item.
        :param legacy_item_id: The legacy_item_id of this Item.
        :param length_unit_of_measure: The length_unit_of_measure of this Item.
        :param localized_aspects: The localized_aspects of this Item.
        :param lot_size: The lot_size of this Item.
        :param material: The material of this Item.
        :param mpn: The mpn of this Item.
        :param original_price_currency: The original_price_currency of this Item.
        :param original_price_value: The original_price_value of this Item.
        :param package_height: The package_height of this Item.
        :param package_length: The package_length of this Item.
        :param package_weight: The package_weight of this Item.
        :param package_width: The package_width of this Item.
        :param pattern: The pattern of this Item.
        :param price_currency: The price_currency of this Item.
        :param price_value: The price_value of this Item.
        :param primary_item_group_id: The primary_item_group_id of this Item.
        :param primary_item_group_type: The primary_item_group_type of this Item.
        :param priority_listing_payload: The priority_listing_payload of this Item.
        :param qualified_programs: The qualified_programs of this Item.
        :param quantity_used_for_estimate: The quantity_used_for_estimate of this Item.
        :param refund_method: The refund_method of this Item.
        :param repair_score: The repair_score of this Item.
        :param return_method: The return_method of this Item.
        :param return_period_unit: The return_period_unit of this Item.
        :param return_period_value: The return_period_value of this Item.
        :param return_shipping_cost_payer: The return_shipping_cost_payer of this Item.
        :param returns_accepted: The returns_accepted of this Item.
        :param seller_account_type: The seller_account_type of this Item.
        :param seller_feedback_percentage: The seller_feedback_percentage of this Item.
        :param seller_feedback_score: The seller_feedback_score of this Item.
        :param seller_item_revision: The seller_item_revision of this Item.
        :param seller_trust_level: The seller_trust_level of this Item.
        :param seller_username: The seller_username of this Item.
        :param ship_to_excluded_regions: The ship_to_excluded_regions of this Item.
        :param ship_to_included_regions: The ship_to_included_regions of this Item.
        :param shipping_carrier_code: The shipping_carrier_code of this Item.
        :param shipping_cost: The shipping_cost of this Item.
        :param shipping_cost_type: The shipping_cost_type of this Item.
        :param shipping_service_code: The shipping_service_code of this Item.
        :param shipping_type: The shipping_type of this Item.
        :param size: The size of this Item.
        :param take_back_policy_description: The take_back_policy_description of this Item.
        :param take_back_policy_label: The take_back_policy_label of this Item.
        :param title: The title of this Item.
        :param total_units: The total_units of this Item.
        :param tyre_label_image_url: The tyre_label_image_url of this Item.
        :param unit_price: The unit_price of this Item.
        :param unit_pricing_measure: The unit_pricing_measure of this Item.
        :param weight_unit_of_measure: The weight_unit_of_measure of this Item.
        """
        self.openapi_types = {
            'accepted_payment_methods': str,
            'additional_image_urls': str,
            'additional_shipping_cost_per_unit': str,
            'age_group': str,
            'alerts': str,
            'availability': str,
            'availability_threshold': int,
            'availability_threshold_type': str,
            'brand': str,
            'buying_options': str,
            'category': str,
            'category_id': str,
            'color': str,
            'condition': str,
            'condition_id': str,
            'default_image_url': str,
            'delivery_options': str,
            'discount_amount': str,
            'discount_percentage': str,
            'eco_participation_fee_currency': str,
            'eco_participation_fee_value': str,
            'energy_efficiency_class': str,
            'epid': str,
            'estimated_available_quantity': int,
            'gender': str,
            'gtin': str,
            'hazmat_additional_information': str,
            'hazmat_pictogram_descriptions': str,
            'hazmat_pictogram_ids': str,
            'hazmat_pictogram_image_urls': str,
            'hazmat_signal_word': str,
            'hazmat_signal_word_id': str,
            'hazmat_statement_descriptions': str,
            'hazmat_statement_ids': str,
            'image_altering_prohibited': bool,
            'image_url': str,
            'inferred_brand': str,
            'inferred_epid': str,
            'inferred_gtin': str,
            'inferred_localized_aspects': str,
            'inferred_mpn': str,
            'item_affiliate_web_url': str,
            'item_creation_date': str,
            'item_end_date': str,
            'item_id': str,
            'item_location_country': str,
            'item_web_url': str,
            'legacy_item_id': str,
            'length_unit_of_measure': str,
            'localized_aspects': str,
            'lot_size': int,
            'material': str,
            'mpn': str,
            'original_price_currency': str,
            'original_price_value': str,
            'package_height': str,
            'package_length': str,
            'package_weight': str,
            'package_width': str,
            'pattern': str,
            'price_currency': str,
            'price_value': str,
            'primary_item_group_id': str,
            'primary_item_group_type': str,
            'priority_listing_payload': str,
            'qualified_programs': str,
            'quantity_used_for_estimate': int,
            'refund_method': str,
            'repair_score': str,
            'return_method': str,
            'return_period_unit': str,
            'return_period_value': int,
            'return_shipping_cost_payer': str,
            'returns_accepted': bool,
            'seller_account_type': str,
            'seller_feedback_percentage': str,
            'seller_feedback_score': str,
            'seller_item_revision': str,
            'seller_trust_level': str,
            'seller_username': str,
            'ship_to_excluded_regions': str,
            'ship_to_included_regions': str,
            'shipping_carrier_code': str,
            'shipping_cost': str,
            'shipping_cost_type': str,
            'shipping_service_code': str,
            'shipping_type': str,
            'size': str,
            'take_back_policy_description': str,
            'take_back_policy_label': str,
            'title': str,
            'total_units': str,
            'tyre_label_image_url': str,
            'unit_price': str,
            'unit_pricing_measure': str,
            'weight_unit_of_measure': str
        }

        self.attribute_map = {
            'accepted_payment_methods': 'acceptedPaymentMethods',
            'additional_image_urls': 'additionalImageUrls',
            'additional_shipping_cost_per_unit': 'additionalShippingCostPerUnit',
            'age_group': 'ageGroup',
            'alerts': 'alerts',
            'availability': 'availability',
            'availability_threshold': 'availabilityThreshold',
            'availability_threshold_type': 'availabilityThresholdType',
            'brand': 'brand',
            'buying_options': 'buyingOptions',
            'category': 'category',
            'category_id': 'categoryId',
            'color': 'color',
            'condition': 'condition',
            'condition_id': 'conditionId',
            'default_image_url': 'defaultImageUrl',
            'delivery_options': 'deliveryOptions',
            'discount_amount': 'discountAmount',
            'discount_percentage': 'discountPercentage',
            'eco_participation_fee_currency': 'ecoParticipationFeeCurrency',
            'eco_participation_fee_value': 'ecoParticipationFeeValue',
            'energy_efficiency_class': 'energyEfficiencyClass',
            'epid': 'epid',
            'estimated_available_quantity': 'estimatedAvailableQuantity',
            'gender': 'gender',
            'gtin': 'gtin',
            'hazmat_additional_information': 'hazmatAdditionalInformation',
            'hazmat_pictogram_descriptions': 'hazmatPictogramDescriptions',
            'hazmat_pictogram_ids': 'hazmatPictogramIds',
            'hazmat_pictogram_image_urls': 'hazmatPictogramImageUrls',
            'hazmat_signal_word': 'hazmatSignalWord',
            'hazmat_signal_word_id': 'hazmatSignalWordId',
            'hazmat_statement_descriptions': 'hazmatStatementDescriptions',
            'hazmat_statement_ids': 'hazmatStatementIds',
            'image_altering_prohibited': 'imageAlteringProhibited',
            'image_url': 'imageUrl',
            'inferred_brand': 'inferredBrand',
            'inferred_epid': 'inferredEpid',
            'inferred_gtin': 'inferredGtin',
            'inferred_localized_aspects': 'inferredLocalizedAspects',
            'inferred_mpn': 'inferredMpn',
            'item_affiliate_web_url': 'itemAffiliateWebUrl',
            'item_creation_date': 'itemCreationDate',
            'item_end_date': 'itemEndDate',
            'item_id': 'itemId',
            'item_location_country': 'itemLocationCountry',
            'item_web_url': 'itemWebUrl',
            'legacy_item_id': 'legacyItemId',
            'length_unit_of_measure': 'lengthUnitOfMeasure',
            'localized_aspects': 'localizedAspects',
            'lot_size': 'lotSize',
            'material': 'material',
            'mpn': 'mpn',
            'original_price_currency': 'originalPriceCurrency',
            'original_price_value': 'originalPriceValue',
            'package_height': 'packageHeight',
            'package_length': 'packageLength',
            'package_weight': 'packageWeight',
            'package_width': 'packageWidth',
            'pattern': 'pattern',
            'price_currency': 'priceCurrency',
            'price_value': 'priceValue',
            'primary_item_group_id': 'primaryItemGroupId',
            'primary_item_group_type': 'primaryItemGroupType',
            'priority_listing_payload': 'priorityListingPayload',
            'qualified_programs': 'qualifiedPrograms',
            'quantity_used_for_estimate': 'quantityUsedForEstimate',
            'refund_method': 'refundMethod',
            'repair_score': 'repairScore',
            'return_method': 'returnMethod',
            'return_period_unit': 'returnPeriodUnit',
            'return_period_value': 'returnPeriodValue',
            'return_shipping_cost_payer': 'returnShippingCostPayer',
            'returns_accepted': 'returnsAccepted',
            'seller_account_type': 'sellerAccountType',
            'seller_feedback_percentage': 'sellerFeedbackPercentage',
            'seller_feedback_score': 'sellerFeedbackScore',
            'seller_item_revision': 'sellerItemRevision',
            'seller_trust_level': 'sellerTrustLevel',
            'seller_username': 'sellerUsername',
            'ship_to_excluded_regions': 'shipToExcludedRegions',
            'ship_to_included_regions': 'shipToIncludedRegions',
            'shipping_carrier_code': 'shippingCarrierCode',
            'shipping_cost': 'shippingCost',
            'shipping_cost_type': 'shippingCostType',
            'shipping_service_code': 'shippingServiceCode',
            'shipping_type': 'shippingType',
            'size': 'size',
            'take_back_policy_description': 'takeBackPolicyDescription',
            'take_back_policy_label': 'takeBackPolicyLabel',
            'title': 'title',
            'total_units': 'totalUnits',
            'tyre_label_image_url': 'tyreLabelImageUrl',
            'unit_price': 'unitPrice',
            'unit_pricing_measure': 'unitPricingMeasure',
            'weight_unit_of_measure': 'weightUnitOfMeasure'
        }

        self._accepted_payment_methods = accepted_payment_methods
        self._additional_image_urls = additional_image_urls
        self._additional_shipping_cost_per_unit = additional_shipping_cost_per_unit
        self._age_group = age_group
        self._alerts = alerts
        self._availability = availability
        self._availability_threshold = availability_threshold
        self._availability_threshold_type = availability_threshold_type
        self._brand = brand
        self._buying_options = buying_options
        self._category = category
        self._category_id = category_id
        self._color = color
        self._condition = condition
        self._condition_id = condition_id
        self._default_image_url = default_image_url
        self._delivery_options = delivery_options
        self._discount_amount = discount_amount
        self._discount_percentage = discount_percentage
        self._eco_participation_fee_currency = eco_participation_fee_currency
        self._eco_participation_fee_value = eco_participation_fee_value
        self._energy_efficiency_class = energy_efficiency_class
        self._epid = epid
        self._estimated_available_quantity = estimated_available_quantity
        self._gender = gender
        self._gtin = gtin
        self._hazmat_additional_information = hazmat_additional_information
        self._hazmat_pictogram_descriptions = hazmat_pictogram_descriptions
        self._hazmat_pictogram_ids = hazmat_pictogram_ids
        self._hazmat_pictogram_image_urls = hazmat_pictogram_image_urls
        self._hazmat_signal_word = hazmat_signal_word
        self._hazmat_signal_word_id = hazmat_signal_word_id
        self._hazmat_statement_descriptions = hazmat_statement_descriptions
        self._hazmat_statement_ids = hazmat_statement_ids
        self._image_altering_prohibited = image_altering_prohibited
        self._image_url = image_url
        self._inferred_brand = inferred_brand
        self._inferred_epid = inferred_epid
        self._inferred_gtin = inferred_gtin
        self._inferred_localized_aspects = inferred_localized_aspects
        self._inferred_mpn = inferred_mpn
        self._item_affiliate_web_url = item_affiliate_web_url
        self._item_creation_date = item_creation_date
        self._item_end_date = item_end_date
        self._item_id = item_id
        self._item_location_country = item_location_country
        self._item_web_url = item_web_url
        self._legacy_item_id = legacy_item_id
        self._length_unit_of_measure = length_unit_of_measure
        self._localized_aspects = localized_aspects
        self._lot_size = lot_size
        self._material = material
        self._mpn = mpn
        self._original_price_currency = original_price_currency
        self._original_price_value = original_price_value
        self._package_height = package_height
        self._package_length = package_length
        self._package_weight = package_weight
        self._package_width = package_width
        self._pattern = pattern
        self._price_currency = price_currency
        self._price_value = price_value
        self._primary_item_group_id = primary_item_group_id
        self._primary_item_group_type = primary_item_group_type
        self._priority_listing_payload = priority_listing_payload
        self._qualified_programs = qualified_programs
        self._quantity_used_for_estimate = quantity_used_for_estimate
        self._refund_method = refund_method
        self._repair_score = repair_score
        self._return_method = return_method
        self._return_period_unit = return_period_unit
        self._return_period_value = return_period_value
        self._return_shipping_cost_payer = return_shipping_cost_payer
        self._returns_accepted = returns_accepted
        self._seller_account_type = seller_account_type
        self._seller_feedback_percentage = seller_feedback_percentage
        self._seller_feedback_score = seller_feedback_score
        self._seller_item_revision = seller_item_revision
        self._seller_trust_level = seller_trust_level
        self._seller_username = seller_username
        self._ship_to_excluded_regions = ship_to_excluded_regions
        self._ship_to_included_regions = ship_to_included_regions
        self._shipping_carrier_code = shipping_carrier_code
        self._shipping_cost = shipping_cost
        self._shipping_cost_type = shipping_cost_type
        self._shipping_service_code = shipping_service_code
        self._shipping_type = shipping_type
        self._size = size
        self._take_back_policy_description = take_back_policy_description
        self._take_back_policy_label = take_back_policy_label
        self._title = title
        self._total_units = total_units
        self._tyre_label_image_url = tyre_label_image_url
        self._unit_price = unit_price
        self._unit_pricing_measure = unit_pricing_measure
        self._weight_unit_of_measure = weight_unit_of_measure

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Item':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Item of this Item.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accepted_payment_methods(self):
        """Gets the accepted_payment_methods of this Item.

        This field is returned empty. For a list of payment methods available for a marketplace, see eBay help pages or the actual View Item page.

        :return: The accepted_payment_methods of this Item.
        :rtype: str
        """
        return self._accepted_payment_methods

    @accepted_payment_methods.setter
    def accepted_payment_methods(self, accepted_payment_methods):
        """Sets the accepted_payment_methods of this Item.

        This field is returned empty. For a list of payment methods available for a marketplace, see eBay help pages or the actual View Item page.

        :param accepted_payment_methods: The accepted_payment_methods of this Item.
        :type accepted_payment_methods: str
        """

        self._accepted_payment_methods = accepted_payment_methods

    @property
    def additional_image_urls(self):
        """Gets the additional_image_urls of this Item.

        A pipe separated (<code>|</code>) list of URLs for the additional images of the item. These images are in addition to the primary image, which is returned in the <b>imageUrl</b> column. <b>Note: </b> This column can contain multiple values.

        :return: The additional_image_urls of this Item.
        :rtype: str
        """
        return self._additional_image_urls

    @additional_image_urls.setter
    def additional_image_urls(self, additional_image_urls):
        """Sets the additional_image_urls of this Item.

        A pipe separated (<code>|</code>) list of URLs for the additional images of the item. These images are in addition to the primary image, which is returned in the <b>imageUrl</b> column. <b>Note: </b> This column can contain multiple values.

        :param additional_image_urls: The additional_image_urls of this Item.
        :type additional_image_urls: str
        """

        self._additional_image_urls = additional_image_urls

    @property
    def additional_shipping_cost_per_unit(self):
        """Gets the additional_shipping_cost_per_unit of this Item.

        Any per item additional shipping costs for a multi-item purchase. For example, let's say the shipping cost for a power cord is $3. But for an additional cord, the shipping cost is only $1. So if you bought 3 cords, the <b> shippingCost</b> would be $3 and this value would be $2 ($1 for each additional item).

        :return: The additional_shipping_cost_per_unit of this Item.
        :rtype: str
        """
        return self._additional_shipping_cost_per_unit

    @additional_shipping_cost_per_unit.setter
    def additional_shipping_cost_per_unit(self, additional_shipping_cost_per_unit):
        """Sets the additional_shipping_cost_per_unit of this Item.

        Any per item additional shipping costs for a multi-item purchase. For example, let's say the shipping cost for a power cord is $3. But for an additional cord, the shipping cost is only $1. So if you bought 3 cords, the <b> shippingCost</b> would be $3 and this value would be $2 ($1 for each additional item).

        :param additional_shipping_cost_per_unit: The additional_shipping_cost_per_unit of this Item.
        :type additional_shipping_cost_per_unit: str
        """

        self._additional_shipping_cost_per_unit = additional_shipping_cost_per_unit

    @property
    def age_group(self):
        """Gets the age_group of this Item.

        The age group that the product is recommended for. <br><br><b>Valid values:</b> <code>newborn</code>, <code>infant</code>, <code>toddler</code>, <code>kids</code>, <code>adult</code>.

        :return: The age_group of this Item.
        :rtype: str
        """
        return self._age_group

    @age_group.setter
    def age_group(self, age_group):
        """Sets the age_group of this Item.

        The age group that the product is recommended for. <br><br><b>Valid values:</b> <code>newborn</code>, <code>infant</code>, <code>toddler</code>, <code>kids</code>, <code>adult</code>.

        :param age_group: The age_group of this Item.
        :type age_group: str
        """

        self._age_group = age_group

    @property
    def alerts(self):
        """Gets the alerts of this Item.

        A pipe-separated list of alerts available for the item.<br><br>For example, if the <code>DELAYED_DELIVERY</code> alert was returned for an item, it would indicate a delay in shipping by the seller.

        :return: The alerts of this Item.
        :rtype: str
        """
        return self._alerts

    @alerts.setter
    def alerts(self, alerts):
        """Sets the alerts of this Item.

        A pipe-separated list of alerts available for the item.<br><br>For example, if the <code>DELAYED_DELIVERY</code> alert was returned for an item, it would indicate a delay in shipping by the seller.

        :param alerts: The alerts of this Item.
        :type alerts: str
        """

        self._alerts = alerts

    @property
    def availability(self):
        """Gets the availability of this Item.

        An enumeration value representing the item's availability (possibility of being purchased). <br><br><b>Values: </b>    <ul>  <li>AVAILABLE</li>    <li>TEMPORARILY_UNAVAILABLE</li>     <li>UNAVAILABLE</li> </ul>  Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/api:AvailabilityEnum'>eBay API documentation</a>

        :return: The availability of this Item.
        :rtype: str
        """
        return self._availability

    @availability.setter
    def availability(self, availability):
        """Sets the availability of this Item.

        An enumeration value representing the item's availability (possibility of being purchased). <br><br><b>Values: </b>    <ul>  <li>AVAILABLE</li>    <li>TEMPORARILY_UNAVAILABLE</li>     <li>UNAVAILABLE</li> </ul>  Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/api:AvailabilityEnum'>eBay API documentation</a>

        :param availability: The availability of this Item.
        :type availability: str
        """

        self._availability = availability

    @property
    def availability_threshold(self):
        """Gets the availability_threshold of this Item.

        This column has a value only when the seller sets their '<a href=\"#display-item-quantity\">display item quantity</a>' preference to <b> Display \"More than 10 available\" in your listing (if applicable)</b>. The value of this column will be \"10\", which is the threshold value. <br><br>Code so that your app gracefully handles any future changes to this value.

        :return: The availability_threshold of this Item.
        :rtype: int
        """
        return self._availability_threshold

    @availability_threshold.setter
    def availability_threshold(self, availability_threshold):
        """Sets the availability_threshold of this Item.

        This column has a value only when the seller sets their '<a href=\"#display-item-quantity\">display item quantity</a>' preference to <b> Display \"More than 10 available\" in your listing (if applicable)</b>. The value of this column will be \"10\", which is the threshold value. <br><br>Code so that your app gracefully handles any future changes to this value.

        :param availability_threshold: The availability_threshold of this Item.
        :type availability_threshold: int
        """

        self._availability_threshold = availability_threshold

    @property
    def availability_threshold_type(self):
        """Gets the availability_threshold_type of this Item.

        <a name=\"display-item-quantity\"></a> This column has a value only when the seller sets their <b>Display Item Quantity</b> preference to <b> Display \"More than 10 available\" in your listing (if applicable)</b>. The value of this column will be <code> MORE_THAN</code>. This indicates that the seller has more than the 'Display Item Quantity', which is 10, in stock for this item.    <br><br> The following are the <b>Display Item Quantity</b> preferences the seller can set. <br><ul><li> <b> Display \"More than 10 available\" in your listing (if applicable)</b> <br>If the seller enables this preference, this column will have a value as long as there are more than 10 of this item in inventory. If the quantity is equal to 10 or drops below 10, this column will be null and the estimated quantity of the item is returned in the <b> estimatedAvailableQuantity</b> column. </li> <li> <b> Display the exact quantity in your items</b> <br>If the seller enables this preference, the <b> availabilityThresholdType</b> and <b> availabilityThreshold</b> columns will be null  and the estimated quantity of the item is returned in the <b> estimatedAvailableQuantity</b> column.<br><br><b>Note: </b> Because the quantity of an item can change several times within a second, it is impossible to return the exact quantity. </li></ul>   <br>Code so that your app gracefully handles any future changes to these preferences. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/api:AvailabilityThresholdEnum'>eBay API documentation</a>

        :return: The availability_threshold_type of this Item.
        :rtype: str
        """
        return self._availability_threshold_type

    @availability_threshold_type.setter
    def availability_threshold_type(self, availability_threshold_type):
        """Sets the availability_threshold_type of this Item.

        <a name=\"display-item-quantity\"></a> This column has a value only when the seller sets their <b>Display Item Quantity</b> preference to <b> Display \"More than 10 available\" in your listing (if applicable)</b>. The value of this column will be <code> MORE_THAN</code>. This indicates that the seller has more than the 'Display Item Quantity', which is 10, in stock for this item.    <br><br> The following are the <b>Display Item Quantity</b> preferences the seller can set. <br><ul><li> <b> Display \"More than 10 available\" in your listing (if applicable)</b> <br>If the seller enables this preference, this column will have a value as long as there are more than 10 of this item in inventory. If the quantity is equal to 10 or drops below 10, this column will be null and the estimated quantity of the item is returned in the <b> estimatedAvailableQuantity</b> column. </li> <li> <b> Display the exact quantity in your items</b> <br>If the seller enables this preference, the <b> availabilityThresholdType</b> and <b> availabilityThreshold</b> columns will be null  and the estimated quantity of the item is returned in the <b> estimatedAvailableQuantity</b> column.<br><br><b>Note: </b> Because the quantity of an item can change several times within a second, it is impossible to return the exact quantity. </li></ul>   <br>Code so that your app gracefully handles any future changes to these preferences. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/api:AvailabilityThresholdEnum'>eBay API documentation</a>

        :param availability_threshold_type: The availability_threshold_type of this Item.
        :type availability_threshold_type: str
        """

        self._availability_threshold_type = availability_threshold_type

    @property
    def brand(self):
        """Gets the brand of this Item.

        The name brand of the item, such as Nike, Apple, etc.

        :return: The brand of this Item.
        :rtype: str
        """
        return self._brand

    @brand.setter
    def brand(self, brand):
        """Sets the brand of this Item.

        The name brand of the item, such as Nike, Apple, etc.

        :param brand: The brand of this Item.
        :type brand: str
        """

        self._brand = brand

    @property
    def buying_options(self):
        """Gets the buying_options of this Item.

        A comma separated list of the purchase options available for the item. Currently the only supported option is <code>FIXED_PRICE</code>.

        :return: The buying_options of this Item.
        :rtype: str
        """
        return self._buying_options

    @buying_options.setter
    def buying_options(self, buying_options):
        """Sets the buying_options of this Item.

        A comma separated list of the purchase options available for the item. Currently the only supported option is <code>FIXED_PRICE</code>.

        :param buying_options: The buying_options of this Item.
        :type buying_options: str
        """

        self._buying_options = buying_options

    @property
    def category(self):
        """Gets the category of this Item.

        The label of the category. For example: <b> Toys & Hobbies|Action Figures|Comic Book Heroes </b>

        :return: The category of this Item.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this Item.

        The label of the category. For example: <b> Toys & Hobbies|Action Figures|Comic Book Heroes </b>

        :param category: The category of this Item.
        :type category: str
        """

        self._category = category

    @property
    def category_id(self):
        """Gets the category_id of this Item.

        The ID of the category of the item. For example: The ID for Toys & Hobbies|Action Figures|Comic Book Heroes is <code>158671</code>.

        :return: The category_id of this Item.
        :rtype: str
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this Item.

        The ID of the category of the item. For example: The ID for Toys & Hobbies|Action Figures|Comic Book Heroes is <code>158671</code>.

        :param category_id: The category_id of this Item.
        :type category_id: str
        """

        self._category_id = category_id

    @property
    def color(self):
        """Gets the color of this Item.

        The color of the item.

        :return: The color of this Item.
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this Item.

        The color of the item.

        :param color: The color of this Item.
        :type color: str
        """

        self._color = color

    @property
    def condition(self):
        """Gets the condition of this Item.

        The text describing the condition of the item. For a list of condition names, see <a href=\"https://developer.ebay.com/devzone/finding/callref/enums/conditionIdList.html \" target=\"_blank\">Item Condition IDs and Names</a>.

        :return: The condition of this Item.
        :rtype: str
        """
        return self._condition

    @condition.setter
    def condition(self, condition):
        """Sets the condition of this Item.

        The text describing the condition of the item. For a list of condition names, see <a href=\"https://developer.ebay.com/devzone/finding/callref/enums/conditionIdList.html \" target=\"_blank\">Item Condition IDs and Names</a>.

        :param condition: The condition of this Item.
        :type condition: str
        """

        self._condition = condition

    @property
    def condition_id(self):
        """Gets the condition_id of this Item.

        The identifier of the condition of the item. For example, 1000 is the identifier for NEW. For a list of condition names and IDs, see <a href=\"https://developer.ebay.com/devzone/finding/callref/enums/conditionIdList.html \" target=\"_blank\">Item Condition IDs and Names</a>.<br><br>Code so that your app gracefully handles any future changes to this list.

        :return: The condition_id of this Item.
        :rtype: str
        """
        return self._condition_id

    @condition_id.setter
    def condition_id(self, condition_id):
        """Sets the condition_id of this Item.

        The identifier of the condition of the item. For example, 1000 is the identifier for NEW. For a list of condition names and IDs, see <a href=\"https://developer.ebay.com/devzone/finding/callref/enums/conditionIdList.html \" target=\"_blank\">Item Condition IDs and Names</a>.<br><br>Code so that your app gracefully handles any future changes to this list.

        :param condition_id: The condition_id of this Item.
        :type condition_id: str
        """

        self._condition_id = condition_id

    @property
    def default_image_url(self):
        """Gets the default_image_url of this Item.

        URL to the gallery or default image of the item. The other images of the item are returned in the <b>additionalImageUrls</b> field.<br><br><b>For example</b><br><br><code>https://i.ebayimg.com/00/s/M********w/z/W********p/$_1.JPG?set_id=8********F</code>

        :return: The default_image_url of this Item.
        :rtype: str
        """
        return self._default_image_url

    @default_image_url.setter
    def default_image_url(self, default_image_url):
        """Sets the default_image_url of this Item.

        URL to the gallery or default image of the item. The other images of the item are returned in the <b>additionalImageUrls</b> field.<br><br><b>For example</b><br><br><code>https://i.ebayimg.com/00/s/M********w/z/W********p/$_1.JPG?set_id=8********F</code>

        :param default_image_url: The default_image_url of this Item.
        :type default_image_url: str
        """

        self._default_image_url = default_image_url

    @property
    def delivery_options(self):
        """Gets the delivery_options of this Item.

        A comma-separated list of available delivery options. This column lets you filter out items than cannot be shipped to the buyer. <br><br><b>Valid Values</b>: SHIP_TO_HOME, SELLER_ARRANGED_LOCAL_PICKUP, IN_STORE_PICKUP, and PICKUP_DROP_OFF. <br><br>Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/api:DeliveryOptionsEnum'>eBay API documentation</a>

        :return: The delivery_options of this Item.
        :rtype: str
        """
        return self._delivery_options

    @delivery_options.setter
    def delivery_options(self, delivery_options):
        """Sets the delivery_options of this Item.

        A comma-separated list of available delivery options. This column lets you filter out items than cannot be shipped to the buyer. <br><br><b>Valid Values</b>: SHIP_TO_HOME, SELLER_ARRANGED_LOCAL_PICKUP, IN_STORE_PICKUP, and PICKUP_DROP_OFF. <br><br>Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/api:DeliveryOptionsEnum'>eBay API documentation</a>

        :param delivery_options: The delivery_options of this Item.
        :type delivery_options: str
        """

        self._delivery_options = delivery_options

    @property
    def discount_amount(self):
        """Gets the discount_amount of this Item.

        The calculated amount of the discount (<b>originalPriceValue</b> - <b>priceValue</b>). For example,  if <b>originalPriceValue</b> is 70 and <b>priceValue</b> is 56, this value would be 14. <p><span class=\"tablenote\"><b>Note: </b> The currency shown in <b>originalPriceCurrency</b> is used for both <b>discountAmount</b> and <b>originalPriceCurrency</b>.</span></p>

        :return: The discount_amount of this Item.
        :rtype: str
        """
        return self._discount_amount

    @discount_amount.setter
    def discount_amount(self, discount_amount):
        """Sets the discount_amount of this Item.

        The calculated amount of the discount (<b>originalPriceValue</b> - <b>priceValue</b>). For example,  if <b>originalPriceValue</b> is 70 and <b>priceValue</b> is 56, this value would be 14. <p><span class=\"tablenote\"><b>Note: </b> The currency shown in <b>originalPriceCurrency</b> is used for both <b>discountAmount</b> and <b>originalPriceCurrency</b>.</span></p>

        :param discount_amount: The discount_amount of this Item.
        :type discount_amount: str
        """

        self._discount_amount = discount_amount

    @property
    def discount_percentage(self):
        """Gets the discount_percentage of this Item.

        The calculated discount percentage. For example, if <b> originalPriceValue</b> is 70 and <b> discountAmount</b> is 14, this value will be 20.

        :return: The discount_percentage of this Item.
        :rtype: str
        """
        return self._discount_percentage

    @discount_percentage.setter
    def discount_percentage(self, discount_percentage):
        """Sets the discount_percentage of this Item.

        The calculated discount percentage. For example, if <b> originalPriceValue</b> is 70 and <b> discountAmount</b> is 14, this value will be 20.

        :param discount_percentage: The discount_percentage of this Item.
        :type discount_percentage: str
        """

        self._discount_percentage = discount_percentage

    @property
    def eco_participation_fee_currency(self):
        """Gets the eco_participation_fee_currency of this Item.

        The currency in which the Eco Participation Fee for the item is paid.

        :return: The eco_participation_fee_currency of this Item.
        :rtype: str
        """
        return self._eco_participation_fee_currency

    @eco_participation_fee_currency.setter
    def eco_participation_fee_currency(self, eco_participation_fee_currency):
        """Sets the eco_participation_fee_currency of this Item.

        The currency in which the Eco Participation Fee for the item is paid.

        :param eco_participation_fee_currency: The eco_participation_fee_currency of this Item.
        :type eco_participation_fee_currency: str
        """

        self._eco_participation_fee_currency = eco_participation_fee_currency

    @property
    def eco_participation_fee_value(self):
        """Gets the eco_participation_fee_value of this Item.

        The amount of the Eco Participation Fee, a fee paid toward the eventual disposal of the purchased item.

        :return: The eco_participation_fee_value of this Item.
        :rtype: str
        """
        return self._eco_participation_fee_value

    @eco_participation_fee_value.setter
    def eco_participation_fee_value(self, eco_participation_fee_value):
        """Sets the eco_participation_fee_value of this Item.

        The amount of the Eco Participation Fee, a fee paid toward the eventual disposal of the purchased item.

        :param eco_participation_fee_value: The eco_participation_fee_value of this Item.
        :type eco_participation_fee_value: str
        """

        self._eco_participation_fee_value = eco_participation_fee_value

    @property
    def energy_efficiency_class(self):
        """Gets the energy_efficiency_class of this Item.

        Indicates the <a href=\"https://en.wikipedia.org/wiki/European_Union_energy_label\">European energy efficiency</a> rating (EEK) of the item. Data is returned in this column only if the seller specified the energy efficiency rating. <br><br>The rating is a set of energy efficiency classes from A to G, where 'A' is the most energy efficient and 'G' is the least efficient. This rating helps buyers choose between various models. <br><br>To retrieve the manufacturer's specifications for this item, when they are available, use the <a href=\"/api-docs/buy/browse/resources/item/methods/getItem\">getItem</a> method in the Browse API. The information is returned in the <b> productFicheWebUrl</b> field.

        :return: The energy_efficiency_class of this Item.
        :rtype: str
        """
        return self._energy_efficiency_class

    @energy_efficiency_class.setter
    def energy_efficiency_class(self, energy_efficiency_class):
        """Sets the energy_efficiency_class of this Item.

        Indicates the <a href=\"https://en.wikipedia.org/wiki/European_Union_energy_label\">European energy efficiency</a> rating (EEK) of the item. Data is returned in this column only if the seller specified the energy efficiency rating. <br><br>The rating is a set of energy efficiency classes from A to G, where 'A' is the most energy efficient and 'G' is the least efficient. This rating helps buyers choose between various models. <br><br>To retrieve the manufacturer's specifications for this item, when they are available, use the <a href=\"/api-docs/buy/browse/resources/item/methods/getItem\">getItem</a> method in the Browse API. The information is returned in the <b> productFicheWebUrl</b> field.

        :param energy_efficiency_class: The energy_efficiency_class of this Item.
        :type energy_efficiency_class: str
        """

        self._energy_efficiency_class = energy_efficiency_class

    @property
    def epid(self):
        """Gets the epid of this Item.

        The eBay product identifier of a product from the eBay product catalog. You can use this value in the Browse API <a href=\"/api-docs/buy/browse/resources/item_summary/methods/search\">search</a> method to retrieve items for this product and in the <a href=\"/api-docs/buy/marketing/resources/methods\">Marketing API</a> methods to retrieve 'also viewed' and 'also bought' products to encourage up-selling and cross-selling.

        :return: The epid of this Item.
        :rtype: str
        """
        return self._epid

    @epid.setter
    def epid(self, epid):
        """Sets the epid of this Item.

        The eBay product identifier of a product from the eBay product catalog. You can use this value in the Browse API <a href=\"/api-docs/buy/browse/resources/item_summary/methods/search\">search</a> method to retrieve items for this product and in the <a href=\"/api-docs/buy/marketing/resources/methods\">Marketing API</a> methods to retrieve 'also viewed' and 'also bought' products to encourage up-selling and cross-selling.

        :param epid: The epid of this Item.
        :type epid: str
        """

        self._epid = epid

    @property
    def estimated_available_quantity(self):
        """Gets the estimated_available_quantity of this Item.

        The estimated number of this item that are available for purchase. Because the quantity of an item can change several times within a second, it is impossible to return the exact quantity. So instead of returning quantity, the estimated availability of the item is returned.

        :return: The estimated_available_quantity of this Item.
        :rtype: int
        """
        return self._estimated_available_quantity

    @estimated_available_quantity.setter
    def estimated_available_quantity(self, estimated_available_quantity):
        """Sets the estimated_available_quantity of this Item.

        The estimated number of this item that are available for purchase. Because the quantity of an item can change several times within a second, it is impossible to return the exact quantity. So instead of returning quantity, the estimated availability of the item is returned.

        :param estimated_available_quantity: The estimated_available_quantity of this Item.
        :type estimated_available_quantity: int
        """

        self._estimated_available_quantity = estimated_available_quantity

    @property
    def gender(self):
        """Gets the gender of this Item.

        In cases where items could vary by gender, this specifies for which gender the product is intended. Possible values include male, female, and unisex.

        :return: The gender of this Item.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this Item.

        In cases where items could vary by gender, this specifies for which gender the product is intended. Possible values include male, female, and unisex.

        :param gender: The gender of this Item.
        :type gender: str
        """

        self._gender = gender

    @property
    def gtin(self):
        """Gets the gtin of this Item.

        The unique Global Trade Item Number of the item as defined by <a href=\"https://www.gtin.info \" target=\"_blank\">https://www.gtin.info</a>. This can be a UPC (Universal Product Code), EAN (European Article Number), or an ISBN (International Standard Book Number) value.

        :return: The gtin of this Item.
        :rtype: str
        """
        return self._gtin

    @gtin.setter
    def gtin(self, gtin):
        """Sets the gtin of this Item.

        The unique Global Trade Item Number of the item as defined by <a href=\"https://www.gtin.info \" target=\"_blank\">https://www.gtin.info</a>. This can be a UPC (Universal Product Code), EAN (European Article Number), or an ISBN (International Standard Book Number) value.

        :param gtin: The gtin of this Item.
        :type gtin: str
        """

        self._gtin = gtin

    @property
    def hazmat_additional_information(self):
        """Gets the hazmat_additional_information of this Item.

        Base64 encoded additional information about the hazardous material.

        :return: The hazmat_additional_information of this Item.
        :rtype: str
        """
        return self._hazmat_additional_information

    @hazmat_additional_information.setter
    def hazmat_additional_information(self, hazmat_additional_information):
        """Sets the hazmat_additional_information of this Item.

        Base64 encoded additional information about the hazardous material.

        :param hazmat_additional_information: The hazmat_additional_information of this Item.
        :type hazmat_additional_information: str
        """

        self._hazmat_additional_information = hazmat_additional_information

    @property
    def hazmat_pictogram_descriptions(self):
        """Gets the hazmat_pictogram_descriptions of this Item.

        The base64 encoded descriptions of hazardous material pictograms, separated by the pipe symbol. For example: <br /><br /><code>encoded(exploding bomb)|encoded(flame)</code>

        :return: The hazmat_pictogram_descriptions of this Item.
        :rtype: str
        """
        return self._hazmat_pictogram_descriptions

    @hazmat_pictogram_descriptions.setter
    def hazmat_pictogram_descriptions(self, hazmat_pictogram_descriptions):
        """Sets the hazmat_pictogram_descriptions of this Item.

        The base64 encoded descriptions of hazardous material pictograms, separated by the pipe symbol. For example: <br /><br /><code>encoded(exploding bomb)|encoded(flame)</code>

        :param hazmat_pictogram_descriptions: The hazmat_pictogram_descriptions of this Item.
        :type hazmat_pictogram_descriptions: str
        """

        self._hazmat_pictogram_descriptions = hazmat_pictogram_descriptions

    @property
    def hazmat_pictogram_ids(self):
        """Gets the hazmat_pictogram_ids of this Item.

        The IDs of hazardous material pictograms, separated by the pipe symbol. For example: <br /><br /><code>SGH01|SGH02</code>

        :return: The hazmat_pictogram_ids of this Item.
        :rtype: str
        """
        return self._hazmat_pictogram_ids

    @hazmat_pictogram_ids.setter
    def hazmat_pictogram_ids(self, hazmat_pictogram_ids):
        """Sets the hazmat_pictogram_ids of this Item.

        The IDs of hazardous material pictograms, separated by the pipe symbol. For example: <br /><br /><code>SGH01|SGH02</code>

        :param hazmat_pictogram_ids: The hazmat_pictogram_ids of this Item.
        :type hazmat_pictogram_ids: str
        """

        self._hazmat_pictogram_ids = hazmat_pictogram_ids

    @property
    def hazmat_pictogram_image_urls(self):
        """Gets the hazmat_pictogram_image_urls of this Item.

        The image URLs of hazardous material pictograms, separated by the pipe symbol. For example: <br /><br /><code>https:&#47;&#47;img1|https:&#47;&#47;img2</code>

        :return: The hazmat_pictogram_image_urls of this Item.
        :rtype: str
        """
        return self._hazmat_pictogram_image_urls

    @hazmat_pictogram_image_urls.setter
    def hazmat_pictogram_image_urls(self, hazmat_pictogram_image_urls):
        """Sets the hazmat_pictogram_image_urls of this Item.

        The image URLs of hazardous material pictograms, separated by the pipe symbol. For example: <br /><br /><code>https:&#47;&#47;img1|https:&#47;&#47;img2</code>

        :param hazmat_pictogram_image_urls: The hazmat_pictogram_image_urls of this Item.
        :type hazmat_pictogram_image_urls: str
        """

        self._hazmat_pictogram_image_urls = hazmat_pictogram_image_urls

    @property
    def hazmat_signal_word(self):
        """Gets the hazmat_signal_word of this Item.

        The localized signal word for the hazardous material, such as 'Danger'.

        :return: The hazmat_signal_word of this Item.
        :rtype: str
        """
        return self._hazmat_signal_word

    @hazmat_signal_word.setter
    def hazmat_signal_word(self, hazmat_signal_word):
        """Sets the hazmat_signal_word of this Item.

        The localized signal word for the hazardous material, such as 'Danger'.

        :param hazmat_signal_word: The hazmat_signal_word of this Item.
        :type hazmat_signal_word: str
        """

        self._hazmat_signal_word = hazmat_signal_word

    @property
    def hazmat_signal_word_id(self):
        """Gets the hazmat_signal_word_id of this Item.

        The ID of the signal word for the hazardous material.

        :return: The hazmat_signal_word_id of this Item.
        :rtype: str
        """
        return self._hazmat_signal_word_id

    @hazmat_signal_word_id.setter
    def hazmat_signal_word_id(self, hazmat_signal_word_id):
        """Sets the hazmat_signal_word_id of this Item.

        The ID of the signal word for the hazardous material.

        :param hazmat_signal_word_id: The hazmat_signal_word_id of this Item.
        :type hazmat_signal_word_id: str
        """

        self._hazmat_signal_word_id = hazmat_signal_word_id

    @property
    def hazmat_statement_descriptions(self):
        """Gets the hazmat_statement_descriptions of this Item.

        The base64 encoded descriptions of hazardous material statements, separated by the pipe symbol. For example: <br /><br /><code>encoded(Unstable explosives)|encoded(Flammable gas)</code>

        :return: The hazmat_statement_descriptions of this Item.
        :rtype: str
        """
        return self._hazmat_statement_descriptions

    @hazmat_statement_descriptions.setter
    def hazmat_statement_descriptions(self, hazmat_statement_descriptions):
        """Sets the hazmat_statement_descriptions of this Item.

        The base64 encoded descriptions of hazardous material statements, separated by the pipe symbol. For example: <br /><br /><code>encoded(Unstable explosives)|encoded(Flammable gas)</code>

        :param hazmat_statement_descriptions: The hazmat_statement_descriptions of this Item.
        :type hazmat_statement_descriptions: str
        """

        self._hazmat_statement_descriptions = hazmat_statement_descriptions

    @property
    def hazmat_statement_ids(self):
        """Gets the hazmat_statement_ids of this Item.

        The IDs of hazardous material statements, separated by the pipe symbol. For example: <br /><br /><code>H200|H221</code>

        :return: The hazmat_statement_ids of this Item.
        :rtype: str
        """
        return self._hazmat_statement_ids

    @hazmat_statement_ids.setter
    def hazmat_statement_ids(self, hazmat_statement_ids):
        """Sets the hazmat_statement_ids of this Item.

        The IDs of hazardous material statements, separated by the pipe symbol. For example: <br /><br /><code>H200|H221</code>

        :param hazmat_statement_ids: The hazmat_statement_ids of this Item.
        :type hazmat_statement_ids: str
        """

        self._hazmat_statement_ids = hazmat_statement_ids

    @property
    def image_altering_prohibited(self):
        """Gets the image_altering_prohibited of this Item.

        A boolean that indicates whether the images can be altered. If the value is <code>true</code>, you cannot modify the image. <p><span class=\"tablenote\"><b>Note: </b> Due to image licensing agreements and other legal concerns, modification (including resizing) of some images is strictly prohibited. These images are for display as-is only. </span></p>

        :return: The image_altering_prohibited of this Item.
        :rtype: bool
        """
        return self._image_altering_prohibited

    @image_altering_prohibited.setter
    def image_altering_prohibited(self, image_altering_prohibited):
        """Sets the image_altering_prohibited of this Item.

        A boolean that indicates whether the images can be altered. If the value is <code>true</code>, you cannot modify the image. <p><span class=\"tablenote\"><b>Note: </b> Due to image licensing agreements and other legal concerns, modification (including resizing) of some images is strictly prohibited. These images are for display as-is only. </span></p>

        :param image_altering_prohibited: The image_altering_prohibited of this Item.
        :type image_altering_prohibited: bool
        """

        self._image_altering_prohibited = image_altering_prohibited

    @property
    def image_url(self):
        """Gets the image_url of this Item.

        The URL to the primary image of the item.  This is the URL of the largest image available based on what the seller submitted.

        :return: The image_url of this Item.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this Item.

        The URL to the primary image of the item.  This is the URL of the largest image available based on what the seller submitted.

        :param image_url: The image_url of this Item.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def inferred_brand(self):
        """Gets the inferred_brand of this Item.

        The name brand for the item, such as Nike or Apple, which has been programmatically determined by eBay. To identify the product, this is always used along with <b> MPN</b>. <br><br>If the seller provided a brand for the item, the seller's value is returned in the <b> brand</b> column.

        :return: The inferred_brand of this Item.
        :rtype: str
        """
        return self._inferred_brand

    @inferred_brand.setter
    def inferred_brand(self, inferred_brand):
        """Sets the inferred_brand of this Item.

        The name brand for the item, such as Nike or Apple, which has been programmatically determined by eBay. To identify the product, this is always used along with <b> MPN</b>. <br><br>If the seller provided a brand for the item, the seller's value is returned in the <b> brand</b> column.

        :param inferred_brand: The inferred_brand of this Item.
        :type inferred_brand: str
        """

        self._inferred_brand = inferred_brand

    @property
    def inferred_epid(self):
        """Gets the inferred_epid of this Item.

        The ePID (eBay Product ID of a product in the eBay product catalog) for the item, which has been programmatically determined by eBay using the item's title, aspects, and other data. <br><br>If the seller actually provided an ePID at listing time for the item, the ePID value is returned in the <b>epid</b> column instead.

        :return: The inferred_epid of this Item.
        :rtype: str
        """
        return self._inferred_epid

    @inferred_epid.setter
    def inferred_epid(self, inferred_epid):
        """Sets the inferred_epid of this Item.

        The ePID (eBay Product ID of a product in the eBay product catalog) for the item, which has been programmatically determined by eBay using the item's title, aspects, and other data. <br><br>If the seller actually provided an ePID at listing time for the item, the ePID value is returned in the <b>epid</b> column instead.

        :param inferred_epid: The inferred_epid of this Item.
        :type inferred_epid: str
        """

        self._inferred_epid = inferred_epid

    @property
    def inferred_gtin(self):
        """Gets the inferred_gtin of this Item.

        The GTIN (Global Trade Item Number) of the product as defined by <a href=\"https://www.gtin.info\">https://www.gtin.info</a>, which as been programmatically determined by eBay. This can be a UPC (Universal Product Code), EAN (European Article Number), or an ISBN (International Standard Book Number) value. <br><br>If the seller provided a GTIN for the item, the seller's value is returned in the <b> gtin</b> column.

        :return: The inferred_gtin of this Item.
        :rtype: str
        """
        return self._inferred_gtin

    @inferred_gtin.setter
    def inferred_gtin(self, inferred_gtin):
        """Sets the inferred_gtin of this Item.

        The GTIN (Global Trade Item Number) of the product as defined by <a href=\"https://www.gtin.info\">https://www.gtin.info</a>, which as been programmatically determined by eBay. This can be a UPC (Universal Product Code), EAN (European Article Number), or an ISBN (International Standard Book Number) value. <br><br>If the seller provided a GTIN for the item, the seller's value is returned in the <b> gtin</b> column.

        :param inferred_gtin: The inferred_gtin of this Item.
        :type inferred_gtin: str
        """

        self._inferred_gtin = inferred_gtin

    @property
    def inferred_localized_aspects(self):
        """Gets the inferred_localized_aspects of this Item.

        A semicolon separated list of the name/value pairs for the aspects of the item, which are BASE64 encoded. These aspects have been programmatically determined by eBay. If the seller provided aspects for the item, the seller's values are returned in the <b>localizedAspects</b> column.  <br><br>The aspect label is separated by a pipe (|), the aspect name and value are separated by a colon (:) and the name/value pairs are separated by a semicolon (;). <p><b> Example without Label</b></p>    <p>&nbsp;&nbsp;<b> Encoded Format:</b> <br>&nbsp;&nbsp;&nbsp;<code><em>encodedName</em>:<em>encodedValue</em>;<em>encodedName</em>:<em>encodedValue</em>;<em>encodedName</em>:<em>encodedValue</em></code> </p>       <p>&nbsp;&nbsp;<b> Encoded Example</b> (The delimiters are <b style=\"font-family: 'Arial Black';\">emphasized</b>):    <br>&nbsp;&nbsp;&nbsp;<code>U2l6ZQ==<b style=\"font-family: 'Arial Black';\">:</b>WEw=<b style=\"font-family: 'Arial Black';\">;</b>Q29sb3I=<b style=\"font-family: 'Arial Black';\">:</b>UmVk<b style=\"font-family: 'Arial Black';\">;</b>U2xlZXZlcw==<b style=\"font-family: 'Arial Black';\">:</b>TG9uZw==</code> </p>    <p>&nbsp;&nbsp;<b> Decoded: </b> <br>&nbsp;&nbsp;&nbsp;Size:XL;Color:Red;Sleeves:Long </p>        <p><br><b> Example with Label</b></p>    <p>&nbsp;&nbsp;<b> Encoded Format:</b>   <br>&nbsp;&nbsp;&nbsp;<code><em>encodedLabel</em>|<em>encodedName</em>:<em>encodedValue</em>;<em>encodedName</em>:<em>encodedValue</em>;<em>encodedLabel</em>|</code></p>       <p>&nbsp;&nbsp;<b> Encoded Example</b> (The delimiters are <b style=\"font-family: 'Arial Black';\">emphasized</b>):  <br>&nbsp;&nbsp;&nbsp;<code>UHJvZHVjdCBJZGVudGlmaWVycw==<b style=\"font-family: 'Arial Black';\">|</b>R1RJTg==<b style=\"font-family: 'Arial Black';\">:</b>MDE5MDE5ODA2NjYzMw==<b style=\"font-family: 'Arial Black';\">;</b>QlJBTkQ=<b style=\"font-family: 'Arial Black';\">:</b>QXBwbGU=<b style=\"font-family: 'Arial Black';\">;</b>UHJvZHVjdCBLZXkgRmVhdHVyZXM=<b style=\"font-family: 'Arial Black';\">|</b>TW9kZWw=<b style=\"font-family: 'Arial Black';\">:</b>aVBob25lIDc=</code> </p>        <p>&nbsp;&nbsp;<b> Decoded: </b> <br>&nbsp;&nbsp;&nbsp;Product Identifiers|GTIN:0190198066633;BRAND:Apple;Product Key Features|Model:iPhone 7</p>        <p><span class=\"tablenote\"><b>Note: </b> The separators (<code> |  :  ; </code>) are <i> not</i> encoded. You must decode each label, name, and value separately. You cannot decode the entire string.</b></p> <p>For more information, see <a href=\"/api-docs/buy/static/api-feed.html#encoded-aspects\">Encoded Aspects</a> in the Buying Integration Guide.</p>

        :return: The inferred_localized_aspects of this Item.
        :rtype: str
        """
        return self._inferred_localized_aspects

    @inferred_localized_aspects.setter
    def inferred_localized_aspects(self, inferred_localized_aspects):
        """Sets the inferred_localized_aspects of this Item.

        A semicolon separated list of the name/value pairs for the aspects of the item, which are BASE64 encoded. These aspects have been programmatically determined by eBay. If the seller provided aspects for the item, the seller's values are returned in the <b>localizedAspects</b> column.  <br><br>The aspect label is separated by a pipe (|), the aspect name and value are separated by a colon (:) and the name/value pairs are separated by a semicolon (;). <p><b> Example without Label</b></p>    <p>&nbsp;&nbsp;<b> Encoded Format:</b> <br>&nbsp;&nbsp;&nbsp;<code><em>encodedName</em>:<em>encodedValue</em>;<em>encodedName</em>:<em>encodedValue</em>;<em>encodedName</em>:<em>encodedValue</em></code> </p>       <p>&nbsp;&nbsp;<b> Encoded Example</b> (The delimiters are <b style=\"font-family: 'Arial Black';\">emphasized</b>):    <br>&nbsp;&nbsp;&nbsp;<code>U2l6ZQ==<b style=\"font-family: 'Arial Black';\">:</b>WEw=<b style=\"font-family: 'Arial Black';\">;</b>Q29sb3I=<b style=\"font-family: 'Arial Black';\">:</b>UmVk<b style=\"font-family: 'Arial Black';\">;</b>U2xlZXZlcw==<b style=\"font-family: 'Arial Black';\">:</b>TG9uZw==</code> </p>    <p>&nbsp;&nbsp;<b> Decoded: </b> <br>&nbsp;&nbsp;&nbsp;Size:XL;Color:Red;Sleeves:Long </p>        <p><br><b> Example with Label</b></p>    <p>&nbsp;&nbsp;<b> Encoded Format:</b>   <br>&nbsp;&nbsp;&nbsp;<code><em>encodedLabel</em>|<em>encodedName</em>:<em>encodedValue</em>;<em>encodedName</em>:<em>encodedValue</em>;<em>encodedLabel</em>|</code></p>       <p>&nbsp;&nbsp;<b> Encoded Example</b> (The delimiters are <b style=\"font-family: 'Arial Black';\">emphasized</b>):  <br>&nbsp;&nbsp;&nbsp;<code>UHJvZHVjdCBJZGVudGlmaWVycw==<b style=\"font-family: 'Arial Black';\">|</b>R1RJTg==<b style=\"font-family: 'Arial Black';\">:</b>MDE5MDE5ODA2NjYzMw==<b style=\"font-family: 'Arial Black';\">;</b>QlJBTkQ=<b style=\"font-family: 'Arial Black';\">:</b>QXBwbGU=<b style=\"font-family: 'Arial Black';\">;</b>UHJvZHVjdCBLZXkgRmVhdHVyZXM=<b style=\"font-family: 'Arial Black';\">|</b>TW9kZWw=<b style=\"font-family: 'Arial Black';\">:</b>aVBob25lIDc=</code> </p>        <p>&nbsp;&nbsp;<b> Decoded: </b> <br>&nbsp;&nbsp;&nbsp;Product Identifiers|GTIN:0190198066633;BRAND:Apple;Product Key Features|Model:iPhone 7</p>        <p><span class=\"tablenote\"><b>Note: </b> The separators (<code> |  :  ; </code>) are <i> not</i> encoded. You must decode each label, name, and value separately. You cannot decode the entire string.</b></p> <p>For more information, see <a href=\"/api-docs/buy/static/api-feed.html#encoded-aspects\">Encoded Aspects</a> in the Buying Integration Guide.</p>

        :param inferred_localized_aspects: The inferred_localized_aspects of this Item.
        :type inferred_localized_aspects: str
        """

        self._inferred_localized_aspects = inferred_localized_aspects

    @property
    def inferred_mpn(self):
        """Gets the inferred_mpn of this Item.

        The MPN (Manufacturer's Part Number) for the item, which has been programmatically determined by eBay. To identify the product, this is always used along with <b> brand</b>. <br><br>If the seller provided a MPN for the item, the seller's value is returned in the <b> mpn</b> column.

        :return: The inferred_mpn of this Item.
        :rtype: str
        """
        return self._inferred_mpn

    @inferred_mpn.setter
    def inferred_mpn(self, inferred_mpn):
        """Sets the inferred_mpn of this Item.

        The MPN (Manufacturer's Part Number) for the item, which has been programmatically determined by eBay. To identify the product, this is always used along with <b> brand</b>. <br><br>If the seller provided a MPN for the item, the seller's value is returned in the <b> mpn</b> column.

        :param inferred_mpn: The inferred_mpn of this Item.
        :type inferred_mpn: str
        """

        self._inferred_mpn = inferred_mpn

    @property
    def item_affiliate_web_url(self):
        """Gets the item_affiliate_web_url of this Item.

        The URL of the View Item page of the item, with the affiliate tracking ID appended to it.<br><br><b>For example</b><br><br><code>https://www.ebay.de/itm/2********0?mkevt=1&mkcid=1&mkrid=707-53477-19255-0&campid=CAMPAIGNID&toolid=2***6&customid=CUSTOMID</code>

        :return: The item_affiliate_web_url of this Item.
        :rtype: str
        """
        return self._item_affiliate_web_url

    @item_affiliate_web_url.setter
    def item_affiliate_web_url(self, item_affiliate_web_url):
        """Sets the item_affiliate_web_url of this Item.

        The URL of the View Item page of the item, with the affiliate tracking ID appended to it.<br><br><b>For example</b><br><br><code>https://www.ebay.de/itm/2********0?mkevt=1&mkcid=1&mkrid=707-53477-19255-0&campid=CAMPAIGNID&toolid=2***6&customid=CUSTOMID</code>

        :param item_affiliate_web_url: The item_affiliate_web_url of this Item.
        :type item_affiliate_web_url: str
        """

        self._item_affiliate_web_url = item_affiliate_web_url

    @property
    def item_creation_date(self):
        """Gets the item_creation_date of this Item.

        A timestamp indicating when the item was created. <br><br><b> Format: </b> UTC <code>yyyy-MM-ddThh:mm:ss.sssZ</code>

        :return: The item_creation_date of this Item.
        :rtype: str
        """
        return self._item_creation_date

    @item_creation_date.setter
    def item_creation_date(self, item_creation_date):
        """Sets the item_creation_date of this Item.

        A timestamp indicating when the item was created. <br><br><b> Format: </b> UTC <code>yyyy-MM-ddThh:mm:ss.sssZ</code>

        :param item_creation_date: The item_creation_date of this Item.
        :type item_creation_date: str
        """

        self._item_creation_date = item_creation_date

    @property
    def item_end_date(self):
        """Gets the item_end_date of this Item.

        A timestamp indicating when the item's sale period will end based on its start date and duration. For Good 'Til Cancelled items, no value is returned in this column. <br><br><b> Format: </b> UTC <code>yyyy-MM-ddThh:mm:ss.sssZ</code>

        :return: The item_end_date of this Item.
        :rtype: str
        """
        return self._item_end_date

    @item_end_date.setter
    def item_end_date(self, item_end_date):
        """Sets the item_end_date of this Item.

        A timestamp indicating when the item's sale period will end based on its start date and duration. For Good 'Til Cancelled items, no value is returned in this column. <br><br><b> Format: </b> UTC <code>yyyy-MM-ddThh:mm:ss.sssZ</code>

        :param item_end_date: The item_end_date of this Item.
        :type item_end_date: str
        """

        self._item_end_date = item_end_date

    @property
    def item_id(self):
        """Gets the item_id of this Item.

        The unique identifier of an item in eBay RESTful format. An example would be <code>v1|1**********2|4**********2</code>.

        :return: The item_id of this Item.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this Item.

        The unique identifier of an item in eBay RESTful format. An example would be <code>v1|1**********2|4**********2</code>.

        :param item_id: The item_id of this Item.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def item_location_country(self):
        """Gets the item_location_country of this Item.

        The country where the item is physically located.

        :return: The item_location_country of this Item.
        :rtype: str
        """
        return self._item_location_country

    @item_location_country.setter
    def item_location_country(self, item_location_country):
        """Sets the item_location_country of this Item.

        The country where the item is physically located.

        :param item_location_country: The item_location_country of this Item.
        :type item_location_country: str
        """

        self._item_location_country = item_location_country

    @property
    def item_web_url(self):
        """Gets the item_web_url of this Item.

        The URL of the View Item page of the item. <br/><br><b>For example:</b><br><br><b>Single SKU:</b><br><code>https://www.ebay.de/itm/2********0</code><br><br><b>MSKU:</b><br><code>https://www.ebay.com/itm/2********9?var=5********2</code>

        :return: The item_web_url of this Item.
        :rtype: str
        """
        return self._item_web_url

    @item_web_url.setter
    def item_web_url(self, item_web_url):
        """Sets the item_web_url of this Item.

        The URL of the View Item page of the item. <br/><br><b>For example:</b><br><br><b>Single SKU:</b><br><code>https://www.ebay.de/itm/2********0</code><br><br><b>MSKU:</b><br><code>https://www.ebay.com/itm/2********9?var=5********2</code>

        :param item_web_url: The item_web_url of this Item.
        :type item_web_url: str
        """

        self._item_web_url = item_web_url

    @property
    def legacy_item_id(self):
        """Gets the legacy_item_id of this Item.

        The unique identifier of the eBay listing that contains the item. This is the traditional/legacy ID that is often seen in the URL of the listing View Item page.

        :return: The legacy_item_id of this Item.
        :rtype: str
        """
        return self._legacy_item_id

    @legacy_item_id.setter
    def legacy_item_id(self, legacy_item_id):
        """Sets the legacy_item_id of this Item.

        The unique identifier of the eBay listing that contains the item. This is the traditional/legacy ID that is often seen in the URL of the listing View Item page.

        :param legacy_item_id: The legacy_item_id of this Item.
        :type legacy_item_id: str
        """

        self._legacy_item_id = legacy_item_id

    @property
    def length_unit_of_measure(self):
        """Gets the length_unit_of_measure of this Item.

        The unit of measurement used for the package dimensions, such as INCH, FEET, CENTIMETER, or METER. <br><br>Code so that your app gracefully handles any future changes to this list.  For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/api:LengthUnitOfMeasureEnum'>eBay API documentation</a>

        :return: The length_unit_of_measure of this Item.
        :rtype: str
        """
        return self._length_unit_of_measure

    @length_unit_of_measure.setter
    def length_unit_of_measure(self, length_unit_of_measure):
        """Sets the length_unit_of_measure of this Item.

        The unit of measurement used for the package dimensions, such as INCH, FEET, CENTIMETER, or METER. <br><br>Code so that your app gracefully handles any future changes to this list.  For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/api:LengthUnitOfMeasureEnum'>eBay API documentation</a>

        :param length_unit_of_measure: The length_unit_of_measure of this Item.
        :type length_unit_of_measure: str
        """

        self._length_unit_of_measure = length_unit_of_measure

    @property
    def localized_aspects(self):
        """Gets the localized_aspects of this Item.

        A semicolon separated list of the name/value pairs for the aspects of the item, which are BASE64 encoded. The aspect label is separated by a pipe (|), the aspect name and value are separated by a colon (:) and the name/value pairs are separated by a semicolon (;). <p><b> Example without Label</b></p>    <p>&nbsp;&nbsp;<b> Encoded Format:</b> <br>&nbsp;&nbsp;&nbsp;<code><em>encodedName</em>:<em>encodedValue</em>;<em>encodedName</em>:<em>encodedValue</em>;<em>encodedName</em>:<em>encodedValue</em></code> </p>       <p>&nbsp;&nbsp;<b> Encoded Example</b> (The delimiters are <b style=\"font-family: 'Arial Black';\">emphasized</b>):    <br>&nbsp;&nbsp;&nbsp;<code>U2l6ZQ==<b style=\"font-family: 'Arial Black';\">:</b>WEw=<b style=\"font-family: 'Arial Black';\">;</b>Q29sb3I=<b style=\"font-family: 'Arial Black';\">:</b>UmVk<b style=\"font-family: 'Arial Black';\">;</b>U2xlZXZlcw==<b style=\"font-family: 'Arial Black';\">:</b>TG9uZw==</code> </p>    <p>&nbsp;&nbsp;<b> Decoded: </b> <br>&nbsp;&nbsp;&nbsp;Size:XL;Color:Red;Sleeves:Long </p>        <p><br><b> Example with Label</b></p>    <p>&nbsp;&nbsp;<b> Encoded Format:</b>   <br>&nbsp;&nbsp;&nbsp;<code><em>encodedLabel</em>|<em>encodedName</em>:<em>encodedValue</em>;<em>encodedName</em>:<em>encodedValue</em>;<em>encodedLabel</em>|</code></p>       <p>&nbsp;&nbsp;<b> Encoded Example</b> (The delimiters are <b style=\"font-family: 'Arial Black';\">emphasized</b>):  <br>&nbsp;&nbsp;&nbsp;<code>UHJvZHVjdCBJZGVudGlmaWVycw==<b style=\"font-family: 'Arial Black';\">|</b>R1RJTg==<b style=\"font-family: 'Arial Black';\">:</b>MDE5MDE5ODA2NjYzMw==<b style=\"font-family: 'Arial Black';\">;</b>QlJBTkQ=<b style=\"font-family: 'Arial Black';\">:</b>QXBwbGU=<b style=\"font-family: 'Arial Black';\">;</b>UHJvZHVjdCBLZXkgRmVhdHVyZXM=<b style=\"font-family: 'Arial Black';\">|</b>TW9kZWw=<b style=\"font-family: 'Arial Black';\">:</b>aVBob25lIDc=</code> </p>        <p>&nbsp;&nbsp;<b> Decoded: </b> <br>&nbsp;&nbsp;&nbsp;Product Identifiers|GTIN:0190198066633;BRAND:Apple;Product Key Features|Model:iPhone 7</p>        <p><span class=\"tablenote\"><b>Note: </b> The separators (<code> |  :  ; </code>) are <i> not</i> encoded. You must decode each label, name, and value separately. You cannot decode the entire string.</b></p> <p>For more information, see <a href=\"/api-docs/buy/static/api-feed.html#encoded-aspects\">Encoded Aspects</a> in the Buying Integration Guide.</p>

        :return: The localized_aspects of this Item.
        :rtype: str
        """
        return self._localized_aspects

    @localized_aspects.setter
    def localized_aspects(self, localized_aspects):
        """Sets the localized_aspects of this Item.

        A semicolon separated list of the name/value pairs for the aspects of the item, which are BASE64 encoded. The aspect label is separated by a pipe (|), the aspect name and value are separated by a colon (:) and the name/value pairs are separated by a semicolon (;). <p><b> Example without Label</b></p>    <p>&nbsp;&nbsp;<b> Encoded Format:</b> <br>&nbsp;&nbsp;&nbsp;<code><em>encodedName</em>:<em>encodedValue</em>;<em>encodedName</em>:<em>encodedValue</em>;<em>encodedName</em>:<em>encodedValue</em></code> </p>       <p>&nbsp;&nbsp;<b> Encoded Example</b> (The delimiters are <b style=\"font-family: 'Arial Black';\">emphasized</b>):    <br>&nbsp;&nbsp;&nbsp;<code>U2l6ZQ==<b style=\"font-family: 'Arial Black';\">:</b>WEw=<b style=\"font-family: 'Arial Black';\">;</b>Q29sb3I=<b style=\"font-family: 'Arial Black';\">:</b>UmVk<b style=\"font-family: 'Arial Black';\">;</b>U2xlZXZlcw==<b style=\"font-family: 'Arial Black';\">:</b>TG9uZw==</code> </p>    <p>&nbsp;&nbsp;<b> Decoded: </b> <br>&nbsp;&nbsp;&nbsp;Size:XL;Color:Red;Sleeves:Long </p>        <p><br><b> Example with Label</b></p>    <p>&nbsp;&nbsp;<b> Encoded Format:</b>   <br>&nbsp;&nbsp;&nbsp;<code><em>encodedLabel</em>|<em>encodedName</em>:<em>encodedValue</em>;<em>encodedName</em>:<em>encodedValue</em>;<em>encodedLabel</em>|</code></p>       <p>&nbsp;&nbsp;<b> Encoded Example</b> (The delimiters are <b style=\"font-family: 'Arial Black';\">emphasized</b>):  <br>&nbsp;&nbsp;&nbsp;<code>UHJvZHVjdCBJZGVudGlmaWVycw==<b style=\"font-family: 'Arial Black';\">|</b>R1RJTg==<b style=\"font-family: 'Arial Black';\">:</b>MDE5MDE5ODA2NjYzMw==<b style=\"font-family: 'Arial Black';\">;</b>QlJBTkQ=<b style=\"font-family: 'Arial Black';\">:</b>QXBwbGU=<b style=\"font-family: 'Arial Black';\">;</b>UHJvZHVjdCBLZXkgRmVhdHVyZXM=<b style=\"font-family: 'Arial Black';\">|</b>TW9kZWw=<b style=\"font-family: 'Arial Black';\">:</b>aVBob25lIDc=</code> </p>        <p>&nbsp;&nbsp;<b> Decoded: </b> <br>&nbsp;&nbsp;&nbsp;Product Identifiers|GTIN:0190198066633;BRAND:Apple;Product Key Features|Model:iPhone 7</p>        <p><span class=\"tablenote\"><b>Note: </b> The separators (<code> |  :  ; </code>) are <i> not</i> encoded. You must decode each label, name, and value separately. You cannot decode the entire string.</b></p> <p>For more information, see <a href=\"/api-docs/buy/static/api-feed.html#encoded-aspects\">Encoded Aspects</a> in the Buying Integration Guide.</p>

        :param localized_aspects: The localized_aspects of this Item.
        :type localized_aspects: str
        """

        self._localized_aspects = localized_aspects

    @property
    def lot_size(self):
        """Gets the lot_size of this Item.

        The number of items in a lot. In other words, a lot size is the number of items that are being sold together.  <br><br>A lot is a set of two or more items included in a single listing that must be purchased together in a single order line item. All the items in the lot are the same but there can be multiple items in a single lot,  such as the package of batteries shown in the example below.  <br><br><b>For example:</b> <br><br><table border=\"1\"> <tr> <tr>  <th>Item</th>  <th>Lot Definition</th> <th>Lot Size</th></tr>  <tr>  <td>A package of 24 AA batteries</td>  <td>A box of 10 packages</td>  <td>10  </td> </tr>  <tr>  <td>A P235/75-15 Goodyear tire </td>  <td>4 tires  </td>  <td>4  </td> </tr> <tr> <td>Fashion Jewelry Rings  </td> <td>Package of 100 assorted rings  </td> <td>100 </td> </tr></table>  <br><br><span class=\"tablenote\"><b>Note: </b>  Lots are not supported in all categories.  </span>

        :return: The lot_size of this Item.
        :rtype: int
        """
        return self._lot_size

    @lot_size.setter
    def lot_size(self, lot_size):
        """Sets the lot_size of this Item.

        The number of items in a lot. In other words, a lot size is the number of items that are being sold together.  <br><br>A lot is a set of two or more items included in a single listing that must be purchased together in a single order line item. All the items in the lot are the same but there can be multiple items in a single lot,  such as the package of batteries shown in the example below.  <br><br><b>For example:</b> <br><br><table border=\"1\"> <tr> <tr>  <th>Item</th>  <th>Lot Definition</th> <th>Lot Size</th></tr>  <tr>  <td>A package of 24 AA batteries</td>  <td>A box of 10 packages</td>  <td>10  </td> </tr>  <tr>  <td>A P235/75-15 Goodyear tire </td>  <td>4 tires  </td>  <td>4  </td> </tr> <tr> <td>Fashion Jewelry Rings  </td> <td>Package of 100 assorted rings  </td> <td>100 </td> </tr></table>  <br><br><span class=\"tablenote\"><b>Note: </b>  Lots are not supported in all categories.  </span>

        :param lot_size: The lot_size of this Item.
        :type lot_size: int
        """

        self._lot_size = lot_size

    @property
    def material(self):
        """Gets the material of this Item.

        The material that the item is made of.

        :return: The material of this Item.
        :rtype: str
        """
        return self._material

    @material.setter
    def material(self, material):
        """Sets the material of this Item.

        The material that the item is made of.

        :param material: The material of this Item.
        :type material: str
        """

        self._material = material

    @property
    def mpn(self):
        """Gets the mpn of this Item.

        The manufacturer part number, which is a number that is used in combination with <b> brand</b> to identify a product.

        :return: The mpn of this Item.
        :rtype: str
        """
        return self._mpn

    @mpn.setter
    def mpn(self, mpn):
        """Sets the mpn of this Item.

        The manufacturer part number, which is a number that is used in combination with <b> brand</b> to identify a product.

        :param mpn: The mpn of this Item.
        :type mpn: str
        """

        self._mpn = mpn

    @property
    def original_price_currency(self):
        """Gets the original_price_currency of this Item.

        The currency of the <b> originalPriceValue</b> of the item and the <b> discountAmount</b>.  For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/bas:CurrencyCodeEnum'>eBay API documentation</a>

        :return: The original_price_currency of this Item.
        :rtype: str
        """
        return self._original_price_currency

    @original_price_currency.setter
    def original_price_currency(self, original_price_currency):
        """Sets the original_price_currency of this Item.

        The currency of the <b> originalPriceValue</b> of the item and the <b> discountAmount</b>.  For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/bas:CurrencyCodeEnum'>eBay API documentation</a>

        :param original_price_currency: The original_price_currency of this Item.
        :type original_price_currency: str
        """

        self._original_price_currency = original_price_currency

    @property
    def original_price_value(self):
        """Gets the original_price_value of this Item.

        The original selling price of the item. This lets you surface a strikethrough price for the item. 

        :return: The original_price_value of this Item.
        :rtype: str
        """
        return self._original_price_value

    @original_price_value.setter
    def original_price_value(self, original_price_value):
        """Sets the original_price_value of this Item.

        The original selling price of the item. This lets you surface a strikethrough price for the item. 

        :param original_price_value: The original_price_value of this Item.
        :type original_price_value: str
        """

        self._original_price_value = original_price_value

    @property
    def package_height(self):
        """Gets the package_height of this Item.

        The height of the shipping package that contains the item.

        :return: The package_height of this Item.
        :rtype: str
        """
        return self._package_height

    @package_height.setter
    def package_height(self, package_height):
        """Sets the package_height of this Item.

        The height of the shipping package that contains the item.

        :param package_height: The package_height of this Item.
        :type package_height: str
        """

        self._package_height = package_height

    @property
    def package_length(self):
        """Gets the package_length of this Item.

        The length of the shipping package that contains the item.

        :return: The package_length of this Item.
        :rtype: str
        """
        return self._package_length

    @package_length.setter
    def package_length(self, package_length):
        """Sets the package_length of this Item.

        The length of the shipping package that contains the item.

        :param package_length: The package_length of this Item.
        :type package_length: str
        """

        self._package_length = package_length

    @property
    def package_weight(self):
        """Gets the package_weight of this Item.

        The weight of the package that contains the item.

        :return: The package_weight of this Item.
        :rtype: str
        """
        return self._package_weight

    @package_weight.setter
    def package_weight(self, package_weight):
        """Sets the package_weight of this Item.

        The weight of the package that contains the item.

        :param package_weight: The package_weight of this Item.
        :type package_weight: str
        """

        self._package_weight = package_weight

    @property
    def package_width(self):
        """Gets the package_width of this Item.

        The width of the shipping package that contains the item.

        :return: The package_width of this Item.
        :rtype: str
        """
        return self._package_width

    @package_width.setter
    def package_width(self, package_width):
        """Sets the package_width of this Item.

        The width of the shipping package that contains the item.

        :param package_width: The package_width of this Item.
        :type package_width: str
        """

        self._package_width = package_width

    @property
    def pattern(self):
        """Gets the pattern of this Item.

        Text describing the pattern used on the item. For example, paisley.<br><br><b>Note:</b> All the item aspects, including this aspect, are returned in the localizedAspects container.

        :return: The pattern of this Item.
        :rtype: str
        """
        return self._pattern

    @pattern.setter
    def pattern(self, pattern):
        """Sets the pattern of this Item.

        Text describing the pattern used on the item. For example, paisley.<br><br><b>Note:</b> All the item aspects, including this aspect, are returned in the localizedAspects container.

        :param pattern: The pattern of this Item.
        :type pattern: str
        """

        self._pattern = pattern

    @property
    def price_currency(self):
        """Gets the price_currency of this Item.

        The currency used for the price of the item. Generally, this is the currency used by the country of the eBay site offering the item. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/bas:CurrencyCodeEnum'>eBay API documentation</a>

        :return: The price_currency of this Item.
        :rtype: str
        """
        return self._price_currency

    @price_currency.setter
    def price_currency(self, price_currency):
        """Sets the price_currency of this Item.

        The currency used for the price of the item. Generally, this is the currency used by the country of the eBay site offering the item. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/bas:CurrencyCodeEnum'>eBay API documentation</a>

        :param price_currency: The price_currency of this Item.
        :type price_currency: str
        """

        self._price_currency = price_currency

    @property
    def price_value(self):
        """Gets the price_value of this Item.

        The price of the item, which can be a discounted price. If it is discounted, information about the discount is returned in the <b>originalPriceValue</b>, <b>originalPriceCurrency</b>, <b>discountAmount</b>, and <b>discountPercentage</b> columns.<br><br><span class=\"tablenote\"><b> Note: </b>The price includes the value-added tax (VAT) for applicable jurisdictions when requested from supported marketplaces. In this case, users must pass the <a href=\"/api-docs/static/rest-request-components.html#HTTP\"><code>X-EBAY-C-MARKETPLACE-ID</code></a> request header specifying the supported marketplace (such as <code>EBAY_GB</code>) to see the VAT-inclusive pricing. For more information on VAT, refer to <a href=\"https://www.ebay.co.uk/help/listings/default/vat-obligations-eu?id=4650&st=12&pos=1&query=Your%20VAT%20obligations%20in%20the%20EU&intent=VAT\">VAT Obligations in the EU</a>.</span>

        :return: The price_value of this Item.
        :rtype: str
        """
        return self._price_value

    @price_value.setter
    def price_value(self, price_value):
        """Sets the price_value of this Item.

        The price of the item, which can be a discounted price. If it is discounted, information about the discount is returned in the <b>originalPriceValue</b>, <b>originalPriceCurrency</b>, <b>discountAmount</b>, and <b>discountPercentage</b> columns.<br><br><span class=\"tablenote\"><b> Note: </b>The price includes the value-added tax (VAT) for applicable jurisdictions when requested from supported marketplaces. In this case, users must pass the <a href=\"/api-docs/static/rest-request-components.html#HTTP\"><code>X-EBAY-C-MARKETPLACE-ID</code></a> request header specifying the supported marketplace (such as <code>EBAY_GB</code>) to see the VAT-inclusive pricing. For more information on VAT, refer to <a href=\"https://www.ebay.co.uk/help/listings/default/vat-obligations-eu?id=4650&st=12&pos=1&query=Your%20VAT%20obligations%20in%20the%20EU&intent=VAT\">VAT Obligations in the EU</a>.</span>

        :param price_value: The price_value of this Item.
        :type price_value: str
        """

        self._price_value = price_value

    @property
    def primary_item_group_id(self):
        """Gets the primary_item_group_id of this Item.

        The unique identifier for the item group that contains this item. An item group is an item that has various aspect differences, such as color, size, storage capacity, etc.

        :return: The primary_item_group_id of this Item.
        :rtype: str
        """
        return self._primary_item_group_id

    @primary_item_group_id.setter
    def primary_item_group_id(self, primary_item_group_id):
        """Sets the primary_item_group_id of this Item.

        The unique identifier for the item group that contains this item. An item group is an item that has various aspect differences, such as color, size, storage capacity, etc.

        :param primary_item_group_id: The primary_item_group_id of this Item.
        :type primary_item_group_id: str
        """

        self._primary_item_group_id = primary_item_group_id

    @property
    def primary_item_group_type(self):
        """Gets the primary_item_group_type of this Item.

        The item group type. Supported value: <code>SELLER_DEFINED_VARIATIONS</code>, indicates that the item group was created by the seller. <br><br>Code so that your app gracefully handles any future changes to this list.

        :return: The primary_item_group_type of this Item.
        :rtype: str
        """
        return self._primary_item_group_type

    @primary_item_group_type.setter
    def primary_item_group_type(self, primary_item_group_type):
        """Sets the primary_item_group_type of this Item.

        The item group type. Supported value: <code>SELLER_DEFINED_VARIATIONS</code>, indicates that the item group was created by the seller. <br><br>Code so that your app gracefully handles any future changes to this list.

        :param primary_item_group_type: The primary_item_group_type of this Item.
        :type primary_item_group_type: str
        """

        self._primary_item_group_type = primary_item_group_type

    @property
    def priority_listing_payload(self):
        """Gets the priority_listing_payload of this Item.

        EPN (eBay Partner Network) publishers append this value to their affiliate tracking URL when using an EPN tracking link to track changes that occur to Priority Listing items. <br><br><b>Example:</b><code>amdata=enc%3AAQAFAAAAkB1DmsmXf%2BqZ%2BCEMGdebW6oR75GCMdBmc4MCQ%2FCEPqgKHbT0jdWhPwfY5LdUs6HTaP0eBlwKE7Smy2eDslewF7l3xjwWxjqwzNAnsYgxn2PiGkTKbiQSQytFUiymdtANpk1qOnBOoMGMK%2BWsji7jYlvySSs9o9s24TxD6RqWZpNrltzOU7mfnv3H40SZ3YESzg%3D%3D</code><br/><br>See <a  href=\"https://developer.ebay.com/api-docs/buy/static/ref-epn-link.html \">Creating an EPN Tracking Link</a> for information on EPN tracking links.

        :return: The priority_listing_payload of this Item.
        :rtype: str
        """
        return self._priority_listing_payload

    @priority_listing_payload.setter
    def priority_listing_payload(self, priority_listing_payload):
        """Sets the priority_listing_payload of this Item.

        EPN (eBay Partner Network) publishers append this value to their affiliate tracking URL when using an EPN tracking link to track changes that occur to Priority Listing items. <br><br><b>Example:</b><code>amdata=enc%3AAQAFAAAAkB1DmsmXf%2BqZ%2BCEMGdebW6oR75GCMdBmc4MCQ%2FCEPqgKHbT0jdWhPwfY5LdUs6HTaP0eBlwKE7Smy2eDslewF7l3xjwWxjqwzNAnsYgxn2PiGkTKbiQSQytFUiymdtANpk1qOnBOoMGMK%2BWsji7jYlvySSs9o9s24TxD6RqWZpNrltzOU7mfnv3H40SZ3YESzg%3D%3D</code><br/><br>See <a  href=\"https://developer.ebay.com/api-docs/buy/static/ref-epn-link.html \">Creating an EPN Tracking Link</a> for information on EPN tracking links.

        :param priority_listing_payload: The priority_listing_payload of this Item.
        :type priority_listing_payload: str
        """

        self._priority_listing_payload = priority_listing_payload

    @property
    def qualified_programs(self):
        """Gets the qualified_programs of this Item.

        A pipe separated list of the qualified programs available for the item, such as EBAY_PLUS and AUTHENTICITY_GUARANTEE.  <br><br>eBay Plus is a premium account option for buyers, which provides benefits such as fast free domestic shipping and free returns on selected items. Top-Rated eBay sellers must opt in to eBay Plus to be able to offer the program on qualifying listings. Sellers must commit to next-day delivery of those items.  <span class=\"tablenote\"><b>Note: </b> eBay Plus is available only to buyers in Germany, Austria, and Australia marketplaces. </span><br><br>The eBay Authenticity Guarantee program enables third-party authenticators to perform authentication verification inspections on items such as watches and sneakers.

        :return: The qualified_programs of this Item.
        :rtype: str
        """
        return self._qualified_programs

    @qualified_programs.setter
    def qualified_programs(self, qualified_programs):
        """Sets the qualified_programs of this Item.

        A pipe separated list of the qualified programs available for the item, such as EBAY_PLUS and AUTHENTICITY_GUARANTEE.  <br><br>eBay Plus is a premium account option for buyers, which provides benefits such as fast free domestic shipping and free returns on selected items. Top-Rated eBay sellers must opt in to eBay Plus to be able to offer the program on qualifying listings. Sellers must commit to next-day delivery of those items.  <span class=\"tablenote\"><b>Note: </b> eBay Plus is available only to buyers in Germany, Austria, and Australia marketplaces. </span><br><br>The eBay Authenticity Guarantee program enables third-party authenticators to perform authentication verification inspections on items such as watches and sneakers.

        :param qualified_programs: The qualified_programs of this Item.
        :type qualified_programs: str
        """

        self._qualified_programs = qualified_programs

    @property
    def quantity_used_for_estimate(self):
        """Gets the quantity_used_for_estimate of this Item.

        The number of items used when calculating the estimation information.

        :return: The quantity_used_for_estimate of this Item.
        :rtype: int
        """
        return self._quantity_used_for_estimate

    @quantity_used_for_estimate.setter
    def quantity_used_for_estimate(self, quantity_used_for_estimate):
        """Sets the quantity_used_for_estimate of this Item.

        The number of items used when calculating the estimation information.

        :param quantity_used_for_estimate: The quantity_used_for_estimate of this Item.
        :type quantity_used_for_estimate: int
        """

        self._quantity_used_for_estimate = quantity_used_for_estimate

    @property
    def refund_method(self):
        """Gets the refund_method of this Item.

        An enumeration value that indicates how a buyer is refunded when an item is returned. <br><br>Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/api:RefundMethodEnum'>eBay API documentation</a>

        :return: The refund_method of this Item.
        :rtype: str
        """
        return self._refund_method

    @refund_method.setter
    def refund_method(self, refund_method):
        """Sets the refund_method of this Item.

        An enumeration value that indicates how a buyer is refunded when an item is returned. <br><br>Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/api:RefundMethodEnum'>eBay API documentation</a>

        :param refund_method: The refund_method of this Item.
        :type refund_method: str
        """

        self._refund_method = refund_method

    @property
    def repair_score(self):
        """Gets the repair_score of this Item.

        A score that describes how easy it is to repair the product. Score values range from 0.1 (hardest to repair) to 10.0 (easiest), always including a single decimal place.<br><br><span class=\"tablenote\"><b>Note:</b> Support for this field is currently limited to the France marketplace.</span>

        :return: The repair_score of this Item.
        :rtype: str
        """
        return self._repair_score

    @repair_score.setter
    def repair_score(self, repair_score):
        """Sets the repair_score of this Item.

        A score that describes how easy it is to repair the product. Score values range from 0.1 (hardest to repair) to 10.0 (easiest), always including a single decimal place.<br><br><span class=\"tablenote\"><b>Note:</b> Support for this field is currently limited to the France marketplace.</span>

        :param repair_score: The repair_score of this Item.
        :type repair_score: str
        """

        self._repair_score = repair_score

    @property
    def return_method(self):
        """Gets the return_method of this Item.

        An enumeration value that indicates the alternative methods for a full refund when an item is returned. This column will have data if the seller offers the buyer an item replacement or exchange instead of a monetary refund. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/api:ReturnMethodEnum'>eBay API documentation</a>

        :return: The return_method of this Item.
        :rtype: str
        """
        return self._return_method

    @return_method.setter
    def return_method(self, return_method):
        """Sets the return_method of this Item.

        An enumeration value that indicates the alternative methods for a full refund when an item is returned. This column will have data if the seller offers the buyer an item replacement or exchange instead of a monetary refund. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/api:ReturnMethodEnum'>eBay API documentation</a>

        :param return_method: The return_method of this Item.
        :type return_method: str
        """

        self._return_method = return_method

    @property
    def return_period_unit(self):
        """Gets the return_period_unit of this Item.

        An enumeration value that indicates the period of time being used to measure the duration, such as business days, months, or years. <br><br><b>TimeDurationUnitEnum</b> is a common type shared by multiple eBay APIs and fields to express the time unit, but for return period duration, this value will always be <code>DAY</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/bas:TimeDurationUnitEnum'>eBay API documentation</a>

        :return: The return_period_unit of this Item.
        :rtype: str
        """
        return self._return_period_unit

    @return_period_unit.setter
    def return_period_unit(self, return_period_unit):
        """Sets the return_period_unit of this Item.

        An enumeration value that indicates the period of time being used to measure the duration, such as business days, months, or years. <br><br><b>TimeDurationUnitEnum</b> is a common type shared by multiple eBay APIs and fields to express the time unit, but for return period duration, this value will always be <code>DAY</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/bas:TimeDurationUnitEnum'>eBay API documentation</a>

        :param return_period_unit: The return_period_unit of this Item.
        :type return_period_unit: str
        """

        self._return_period_unit = return_period_unit

    @property
    def return_period_value(self):
        """Gets the return_period_value of this Item.

        The amount of days that the buyer has to return the item after the purchase date. For example, if this value is '30', the return period is 30 days.

        :return: The return_period_value of this Item.
        :rtype: int
        """
        return self._return_period_value

    @return_period_value.setter
    def return_period_value(self, return_period_value):
        """Sets the return_period_value of this Item.

        The amount of days that the buyer has to return the item after the purchase date. For example, if this value is '30', the return period is 30 days.

        :param return_period_value: The return_period_value of this Item.
        :type return_period_value: int
        """

        self._return_period_value = return_period_value

    @property
    def return_shipping_cost_payer(self):
        """Gets the return_shipping_cost_payer of this Item.

        The party responsible for the return shipping costs when an item is returned. <br><br><b>Valid Values: </b> <code>BUYER</code> or <code>SELLER</code>  <br><br>Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/api:ReturnShippingCostPayerEnum'>eBay API documentation</a>

        :return: The return_shipping_cost_payer of this Item.
        :rtype: str
        """
        return self._return_shipping_cost_payer

    @return_shipping_cost_payer.setter
    def return_shipping_cost_payer(self, return_shipping_cost_payer):
        """Sets the return_shipping_cost_payer of this Item.

        The party responsible for the return shipping costs when an item is returned. <br><br><b>Valid Values: </b> <code>BUYER</code> or <code>SELLER</code>  <br><br>Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/api:ReturnShippingCostPayerEnum'>eBay API documentation</a>

        :param return_shipping_cost_payer: The return_shipping_cost_payer of this Item.
        :type return_shipping_cost_payer: str
        """

        self._return_shipping_cost_payer = return_shipping_cost_payer

    @property
    def returns_accepted(self):
        """Gets the returns_accepted of this Item.

        Indicates whether the seller accepts returns for the item.

        :return: The returns_accepted of this Item.
        :rtype: bool
        """
        return self._returns_accepted

    @returns_accepted.setter
    def returns_accepted(self, returns_accepted):
        """Sets the returns_accepted of this Item.

        Indicates whether the seller accepts returns for the item.

        :param returns_accepted: The returns_accepted of this Item.
        :type returns_accepted: bool
        """

        self._returns_accepted = returns_accepted

    @property
    def seller_account_type(self):
        """Gets the seller_account_type of this Item.

        A string value that specifies whether the seller is a business or an individual. This is determined when the seller registers with eBay. If the seller registers for a business account, the value returned in this field will be <code>BUSINESS</code>. If the seller registers for a private account, the value returned in this field will be <code>INDIVIDUAL</code>.<br><br><span class=\"tablenote\"><b>Note:</b> This designation is required by the tax laws in some countries.</span><br><br>This field is returned only on the following sites: EBAY_AT, EBAY_BE, EBAY_CH, EBAY_DE, EBAY_ES, EBAY_FR, EBAY_GB, EBAY_IE, EBAY_IT, and EBAY_PL.<br><br>Code so that your app gracefully handles any future changes to this list.<br><br><b>Valid Values:</b> <code>BUSINESS</code> or <code>INDIVIDUAL</code>

        :return: The seller_account_type of this Item.
        :rtype: str
        """
        return self._seller_account_type

    @seller_account_type.setter
    def seller_account_type(self, seller_account_type):
        """Sets the seller_account_type of this Item.

        A string value that specifies whether the seller is a business or an individual. This is determined when the seller registers with eBay. If the seller registers for a business account, the value returned in this field will be <code>BUSINESS</code>. If the seller registers for a private account, the value returned in this field will be <code>INDIVIDUAL</code>.<br><br><span class=\"tablenote\"><b>Note:</b> This designation is required by the tax laws in some countries.</span><br><br>This field is returned only on the following sites: EBAY_AT, EBAY_BE, EBAY_CH, EBAY_DE, EBAY_ES, EBAY_FR, EBAY_GB, EBAY_IE, EBAY_IT, and EBAY_PL.<br><br>Code so that your app gracefully handles any future changes to this list.<br><br><b>Valid Values:</b> <code>BUSINESS</code> or <code>INDIVIDUAL</code>

        :param seller_account_type: The seller_account_type of this Item.
        :type seller_account_type: str
        """

        self._seller_account_type = seller_account_type

    @property
    def seller_feedback_percentage(self):
        """Gets the seller_feedback_percentage of this Item.

        The percentage of the seller's total positive feedback.

        :return: The seller_feedback_percentage of this Item.
        :rtype: str
        """
        return self._seller_feedback_percentage

    @seller_feedback_percentage.setter
    def seller_feedback_percentage(self, seller_feedback_percentage):
        """Sets the seller_feedback_percentage of this Item.

        The percentage of the seller's total positive feedback.

        :param seller_feedback_percentage: The seller_feedback_percentage of this Item.
        :type seller_feedback_percentage: str
        """

        self._seller_feedback_percentage = seller_feedback_percentage

    @property
    def seller_feedback_score(self):
        """Gets the seller_feedback_score of this Item.

        The feedback score of the seller. This value is based on the ratings from eBay members that bought items from this seller.

        :return: The seller_feedback_score of this Item.
        :rtype: str
        """
        return self._seller_feedback_score

    @seller_feedback_score.setter
    def seller_feedback_score(self, seller_feedback_score):
        """Sets the seller_feedback_score of this Item.

        The feedback score of the seller. This value is based on the ratings from eBay members that bought items from this seller.

        :param seller_feedback_score: The seller_feedback_score of this Item.
        :type seller_feedback_score: str
        """

        self._seller_feedback_score = seller_feedback_score

    @property
    def seller_item_revision(self):
        """Gets the seller_item_revision of this Item.

        An identifier generated/incremented when a seller revises the item. There are two types of item revisions: <ul><li>Seller changes, such as changing the title</li>  <li>eBay system changes, such as changing the quantity when an item is purchased</li></ul> This ID is changed <i> only</i> when the seller makes a change to the item.

        :return: The seller_item_revision of this Item.
        :rtype: str
        """
        return self._seller_item_revision

    @seller_item_revision.setter
    def seller_item_revision(self, seller_item_revision):
        """Sets the seller_item_revision of this Item.

        An identifier generated/incremented when a seller revises the item. There are two types of item revisions: <ul><li>Seller changes, such as changing the title</li>  <li>eBay system changes, such as changing the quantity when an item is purchased</li></ul> This ID is changed <i> only</i> when the seller makes a change to the item.

        :param seller_item_revision: The seller_item_revision of this Item.
        :type seller_item_revision: str
        """

        self._seller_item_revision = seller_item_revision

    @property
    def seller_trust_level(self):
        """Gets the seller_trust_level of this Item.

        An enumeration value representing the eBay status of the seller. <br><br><b>Valid Values:</b> <code>TOP_RATED</code>, <code>ABOVE_STANDARD</code>, or an empty value. <br><br>An empty value indicates a return of anything other than <code>TOP_RATED</code> or <code>ABOVE_STANDARD</code>.<br><br>Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/api:SellerTrustLevelEnum'>eBay API documentation</a>

        :return: The seller_trust_level of this Item.
        :rtype: str
        """
        return self._seller_trust_level

    @seller_trust_level.setter
    def seller_trust_level(self, seller_trust_level):
        """Sets the seller_trust_level of this Item.

        An enumeration value representing the eBay status of the seller. <br><br><b>Valid Values:</b> <code>TOP_RATED</code>, <code>ABOVE_STANDARD</code>, or an empty value. <br><br>An empty value indicates a return of anything other than <code>TOP_RATED</code> or <code>ABOVE_STANDARD</code>.<br><br>Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/api:SellerTrustLevelEnum'>eBay API documentation</a>

        :param seller_trust_level: The seller_trust_level of this Item.
        :type seller_trust_level: str
        """

        self._seller_trust_level = seller_trust_level

    @property
    def seller_username(self):
        """Gets the seller_username of this Item.

        The seller's eBay user name.

        :return: The seller_username of this Item.
        :rtype: str
        """
        return self._seller_username

    @seller_username.setter
    def seller_username(self, seller_username):
        """Sets the seller_username of this Item.

        The seller's eBay user name.

        :param seller_username: The seller_username of this Item.
        :type seller_username: str
        """

        self._seller_username = seller_username

    @property
    def ship_to_excluded_regions(self):
        """Gets the ship_to_excluded_regions of this Item.

        A pipe (<code>|</code>) separated alphabetical list of the geographic countries and regions where the item cannot be shipped. <br><br>These countries and regions refine (restrict) the <b> shipToIncludedRegions</b> list.  The COUNTRY: list is separated from the REGION: list with a semicolon (<code>;</code>).       <br><br><b> Format Example: </b> <br> <code>COUNTRY:US|BM|GL|MX|PM;REGION:AFRICA|ASIA|CENTRAL_AMERICA_AND_CARIBBEAN|EUROPE|MIDDLE_EAST|OCEANIA|SOUTH_AMERICA|SOUTHEAST_ASIA;</code>  <br><br><b> Country Values: </b> The two-letter <a href=\"https://www.iso.org/iso-3166-country-codes.html\">ISO 3166</a> standard code of the country.       <br><br><b> Region Values: </b> AFRICA, AMERICAS, ANTARCTIC, ARCTIC, ASIA, AUSTRALIA, CENTRAL_AMERICA_AND_CARIBBEAN, EUROPE, EURO_UNION, GREATER_CHINA, MIDDLE_EAST, NORTH_AMERICA, OCEANIA, REST_OF_ASIA, SOUTHEAST_ASIA, SOUTH_AMERICA, WORLDWIDE <br><br>Code so that your app gracefully handles any future changes to this list.

        :return: The ship_to_excluded_regions of this Item.
        :rtype: str
        """
        return self._ship_to_excluded_regions

    @ship_to_excluded_regions.setter
    def ship_to_excluded_regions(self, ship_to_excluded_regions):
        """Sets the ship_to_excluded_regions of this Item.

        A pipe (<code>|</code>) separated alphabetical list of the geographic countries and regions where the item cannot be shipped. <br><br>These countries and regions refine (restrict) the <b> shipToIncludedRegions</b> list.  The COUNTRY: list is separated from the REGION: list with a semicolon (<code>;</code>).       <br><br><b> Format Example: </b> <br> <code>COUNTRY:US|BM|GL|MX|PM;REGION:AFRICA|ASIA|CENTRAL_AMERICA_AND_CARIBBEAN|EUROPE|MIDDLE_EAST|OCEANIA|SOUTH_AMERICA|SOUTHEAST_ASIA;</code>  <br><br><b> Country Values: </b> The two-letter <a href=\"https://www.iso.org/iso-3166-country-codes.html\">ISO 3166</a> standard code of the country.       <br><br><b> Region Values: </b> AFRICA, AMERICAS, ANTARCTIC, ARCTIC, ASIA, AUSTRALIA, CENTRAL_AMERICA_AND_CARIBBEAN, EUROPE, EURO_UNION, GREATER_CHINA, MIDDLE_EAST, NORTH_AMERICA, OCEANIA, REST_OF_ASIA, SOUTHEAST_ASIA, SOUTH_AMERICA, WORLDWIDE <br><br>Code so that your app gracefully handles any future changes to this list.

        :param ship_to_excluded_regions: The ship_to_excluded_regions of this Item.
        :type ship_to_excluded_regions: str
        """

        self._ship_to_excluded_regions = ship_to_excluded_regions

    @property
    def ship_to_included_regions(self):
        """Gets the ship_to_included_regions of this Item.

        A pipe (<code>|</code>) separated alphabetical list of the geographic countries and regions where the seller will ship the item. <br><br>If a region is specified, you will need to subtract any countries and regions returned in the <b> shipToExcludedRegions</b> column to fully understand where the seller will ship. <br><br>The COUNTRY: list is separated from the REGION: list with a semicolon (<code>;</code>).       <br><br><b> Format Example: </b> <br> <code>COUNTRY:US|BM|GL|MX|PM;REGION:AFRICA|ASIA|CENTRAL_AMERICA_AND_CARIBBEAN|EUROPE|MIDDLE_EAST|OCEANIA|SOUTH_AMERICA|SOUTHEAST_ASIA;</code>  <br><br><b> Country Values: </b> The two-letter <a href=\"https://www.iso.org/iso-3166-country-codes.html\">ISO 3166</a> standard code of the country.       <br><br><b> Region Values: </b> AFRICA, AMERICAS, ANTARCTIC, ARCTIC, ASIA, AUSTRALIA, CENTRAL_AMERICA_AND_CARIBBEAN, EUROPE, EURO_UNION, GREATER_CHINA, MIDDLE_EAST, NORTH_AMERICA, OCEANIA, REST_OF_ASIA, SOUTHEAST_ASIA, SOUTH_AMERICA, WORLDWIDE <br><br>Code so that your app gracefully handles any future changes to this list.

        :return: The ship_to_included_regions of this Item.
        :rtype: str
        """
        return self._ship_to_included_regions

    @ship_to_included_regions.setter
    def ship_to_included_regions(self, ship_to_included_regions):
        """Sets the ship_to_included_regions of this Item.

        A pipe (<code>|</code>) separated alphabetical list of the geographic countries and regions where the seller will ship the item. <br><br>If a region is specified, you will need to subtract any countries and regions returned in the <b> shipToExcludedRegions</b> column to fully understand where the seller will ship. <br><br>The COUNTRY: list is separated from the REGION: list with a semicolon (<code>;</code>).       <br><br><b> Format Example: </b> <br> <code>COUNTRY:US|BM|GL|MX|PM;REGION:AFRICA|ASIA|CENTRAL_AMERICA_AND_CARIBBEAN|EUROPE|MIDDLE_EAST|OCEANIA|SOUTH_AMERICA|SOUTHEAST_ASIA;</code>  <br><br><b> Country Values: </b> The two-letter <a href=\"https://www.iso.org/iso-3166-country-codes.html\">ISO 3166</a> standard code of the country.       <br><br><b> Region Values: </b> AFRICA, AMERICAS, ANTARCTIC, ARCTIC, ASIA, AUSTRALIA, CENTRAL_AMERICA_AND_CARIBBEAN, EUROPE, EURO_UNION, GREATER_CHINA, MIDDLE_EAST, NORTH_AMERICA, OCEANIA, REST_OF_ASIA, SOUTHEAST_ASIA, SOUTH_AMERICA, WORLDWIDE <br><br>Code so that your app gracefully handles any future changes to this list.

        :param ship_to_included_regions: The ship_to_included_regions of this Item.
        :type ship_to_included_regions: str
        """

        self._ship_to_included_regions = ship_to_included_regions

    @property
    def shipping_carrier_code(self):
        """Gets the shipping_carrier_code of this Item.

        The name of the shipping provider, such as FedEx, or USPS.

        :return: The shipping_carrier_code of this Item.
        :rtype: str
        """
        return self._shipping_carrier_code

    @shipping_carrier_code.setter
    def shipping_carrier_code(self, shipping_carrier_code):
        """Sets the shipping_carrier_code of this Item.

        The name of the shipping provider, such as FedEx, or USPS.

        :param shipping_carrier_code: The shipping_carrier_code of this Item.
        :type shipping_carrier_code: str
        """

        self._shipping_carrier_code = shipping_carrier_code

    @property
    def shipping_cost(self):
        """Gets the shipping_cost of this Item.

        The final shipping cost for all the items after all discounts are applied.<br><br><span class=\"tablenote\"><b> Note: </b>The price includes the value-added tax (VAT) for applicable jurisdictions when requested from supported marketplaces. In this case, users must pass the <a href=\"/api-docs/static/rest-request-components.html#HTTP\"><code>X-EBAY-C-MARKETPLACE-ID</code></a> request header specifying the supported marketplace (such as <code>EBAY_GB</code>) to see the VAT-inclusive pricing. For more information on VAT, refer to <a href=\"https://www.ebay.co.uk/help/listings/default/vat-obligations-eu?id=4650&st=12&pos=1&query=Your%20VAT%20obligations%20in%20the%20EU&intent=VAT\">VAT Obligations in the EU</a>.</span>

        :return: The shipping_cost of this Item.
        :rtype: str
        """
        return self._shipping_cost

    @shipping_cost.setter
    def shipping_cost(self, shipping_cost):
        """Sets the shipping_cost of this Item.

        The final shipping cost for all the items after all discounts are applied.<br><br><span class=\"tablenote\"><b> Note: </b>The price includes the value-added tax (VAT) for applicable jurisdictions when requested from supported marketplaces. In this case, users must pass the <a href=\"/api-docs/static/rest-request-components.html#HTTP\"><code>X-EBAY-C-MARKETPLACE-ID</code></a> request header specifying the supported marketplace (such as <code>EBAY_GB</code>) to see the VAT-inclusive pricing. For more information on VAT, refer to <a href=\"https://www.ebay.co.uk/help/listings/default/vat-obligations-eu?id=4650&st=12&pos=1&query=Your%20VAT%20obligations%20in%20the%20EU&intent=VAT\">VAT Obligations in the EU</a>.</span>

        :param shipping_cost: The shipping_cost of this Item.
        :type shipping_cost: str
        """

        self._shipping_cost = shipping_cost

    @property
    def shipping_cost_type(self):
        """Gets the shipping_cost_type of this Item.

        Indicates the class of the shipping cost. <br><br><b> Valid Values: </b> FIXED or CALCULATED.

        :return: The shipping_cost_type of this Item.
        :rtype: str
        """
        return self._shipping_cost_type

    @shipping_cost_type.setter
    def shipping_cost_type(self, shipping_cost_type):
        """Sets the shipping_cost_type of this Item.

        Indicates the class of the shipping cost. <br><br><b> Valid Values: </b> FIXED or CALCULATED.

        :param shipping_cost_type: The shipping_cost_type of this Item.
        :type shipping_cost_type: str
        """

        self._shipping_cost_type = shipping_cost_type

    @property
    def shipping_service_code(self):
        """Gets the shipping_service_code of this Item.

        The type of shipping service. For example, USPS First Class.

        :return: The shipping_service_code of this Item.
        :rtype: str
        """
        return self._shipping_service_code

    @shipping_service_code.setter
    def shipping_service_code(self, shipping_service_code):
        """Sets the shipping_service_code of this Item.

        The type of shipping service. For example, USPS First Class.

        :param shipping_service_code: The shipping_service_code of this Item.
        :type shipping_service_code: str
        """

        self._shipping_service_code = shipping_service_code

    @property
    def shipping_type(self):
        """Gets the shipping_type of this Item.

        The type of a shipping option, such as EXPEDITED, ONE_DAY, STANDARD, ECONOMY, PICKUP, etc.

        :return: The shipping_type of this Item.
        :rtype: str
        """
        return self._shipping_type

    @shipping_type.setter
    def shipping_type(self, shipping_type):
        """Sets the shipping_type of this Item.

        The type of a shipping option, such as EXPEDITED, ONE_DAY, STANDARD, ECONOMY, PICKUP, etc.

        :param shipping_type: The shipping_type of this Item.
        :type shipping_type: str
        """

        self._shipping_type = shipping_type

    @property
    def size(self):
        """Gets the size of this Item.

        The size of the item.

        :return: The size of this Item.
        :rtype: str
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this Item.

        The size of the item.

        :param size: The size of this Item.
        :type size: str
        """

        self._size = size

    @property
    def take_back_policy_description(self):
        """Gets the take_back_policy_description of this Item.

        The seller-defined description of the TAKE_BACK custom policy for the item.

        :return: The take_back_policy_description of this Item.
        :rtype: str
        """
        return self._take_back_policy_description

    @take_back_policy_description.setter
    def take_back_policy_description(self, take_back_policy_description):
        """Sets the take_back_policy_description of this Item.

        The seller-defined description of the TAKE_BACK custom policy for the item.

        :param take_back_policy_description: The take_back_policy_description of this Item.
        :type take_back_policy_description: str
        """

        self._take_back_policy_description = take_back_policy_description

    @property
    def take_back_policy_label(self):
        """Gets the take_back_policy_label of this Item.

        The seller-defined label of the TAKE_BACK custom policy for the item. A TAKE_BACK policy describes the seller's regulatory responsibility to take back a purchased item for disposal when the buyer purchases a new one.

        :return: The take_back_policy_label of this Item.
        :rtype: str
        """
        return self._take_back_policy_label

    @take_back_policy_label.setter
    def take_back_policy_label(self, take_back_policy_label):
        """Sets the take_back_policy_label of this Item.

        The seller-defined label of the TAKE_BACK custom policy for the item. A TAKE_BACK policy describes the seller's regulatory responsibility to take back a purchased item for disposal when the buyer purchases a new one.

        :param take_back_policy_label: The take_back_policy_label of this Item.
        :type take_back_policy_label: str
        """

        self._take_back_policy_label = take_back_policy_label

    @property
    def title(self):
        """Gets the title of this Item.

        The seller created title of the item. This text is an escaped string when special characters are present, using the following rules:</p>   <ul>      <li>Double quotes (&#34;) and backslashes (&#92;) in the Title are escaped with a backslash (&#92;) character</li>      <li>If there are any tabs (&#92;t), double quotes (&#34;), or backslashes (&#92;) in the Title, the entire Title will be wrapped in double quotes.</li>   </ul>   <p><b>For example</b></p>   <p>Before:</p>   <p><code>Misty Rainforest Modern Masters 2017 MTG Magic Fetch Land Free Ship W<b>&#92;</b>Tracking</code>   </p>   <p><code>Marvel Legends HULK 8<b>&#34;</b> Figure Avengers Age of Ultron Studios 6<b>&#34;</b> Series</code>   </p>   <p>After:</p>   <p><code>&#34;Misty Rainforest Modern Masters 2017 MTG Magic Fetch Land Free Ship W<b>&#92;&#92;</b> Tracking&#34;</code>   </p>   <p><code>&#34;Marvel Legends HULK 8<b>&#92;&#34;</b> Figure Avengers Age of Ultron Studios 6<b>&#92;&#34;</b> Series<b>&#34;</b> </code>   </p>

        :return: The title of this Item.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Item.

        The seller created title of the item. This text is an escaped string when special characters are present, using the following rules:</p>   <ul>      <li>Double quotes (&#34;) and backslashes (&#92;) in the Title are escaped with a backslash (&#92;) character</li>      <li>If there are any tabs (&#92;t), double quotes (&#34;), or backslashes (&#92;) in the Title, the entire Title will be wrapped in double quotes.</li>   </ul>   <p><b>For example</b></p>   <p>Before:</p>   <p><code>Misty Rainforest Modern Masters 2017 MTG Magic Fetch Land Free Ship W<b>&#92;</b>Tracking</code>   </p>   <p><code>Marvel Legends HULK 8<b>&#34;</b> Figure Avengers Age of Ultron Studios 6<b>&#34;</b> Series</code>   </p>   <p>After:</p>   <p><code>&#34;Misty Rainforest Modern Masters 2017 MTG Magic Fetch Land Free Ship W<b>&#92;&#92;</b> Tracking&#34;</code>   </p>   <p><code>&#34;Marvel Legends HULK 8<b>&#92;&#34;</b> Figure Avengers Age of Ultron Studios 6<b>&#92;&#34;</b> Series<b>&#34;</b> </code>   </p>

        :param title: The title of this Item.
        :type title: str
        """

        self._title = title

    @property
    def total_units(self):
        """Gets the total_units of this Item.

        For an item that is priced by the unit, the total number of units that are on offer. For example, if the item is priced by the meter and 50 cm is on offer, the <b>totalUnits</b> would be 0.5 m.

        :return: The total_units of this Item.
        :rtype: str
        """
        return self._total_units

    @total_units.setter
    def total_units(self, total_units):
        """Sets the total_units of this Item.

        For an item that is priced by the unit, the total number of units that are on offer. For example, if the item is priced by the meter and 50 cm is on offer, the <b>totalUnits</b> would be 0.5 m.

        :param total_units: The total_units of this Item.
        :type total_units: str
        """

        self._total_units = total_units

    @property
    def tyre_label_image_url(self):
        """Gets the tyre_label_image_url of this Item.

        The URL to the image that shows the information on the tyre label.

        :return: The tyre_label_image_url of this Item.
        :rtype: str
        """
        return self._tyre_label_image_url

    @tyre_label_image_url.setter
    def tyre_label_image_url(self, tyre_label_image_url):
        """Sets the tyre_label_image_url of this Item.

        The URL to the image that shows the information on the tyre label.

        :param tyre_label_image_url: The tyre_label_image_url of this Item.
        :type tyre_label_image_url: str
        """

        self._tyre_label_image_url = tyre_label_image_url

    @property
    def unit_price(self):
        """Gets the unit_price of this Item.

        This is the price per unit for the item. Some European countries require listings for certain types of products to include the price per unit so buyers can accurately compare prices.   <br><br>For example: <br><br><code>\"unitPricingMeasure\": \"100g\",<br> \"unitPrice\": {<br>&nbsp;&nbsp;\"value\": \"7.99\",<br>&nbsp;&nbsp;\"currency\": \"GBP\"</code>

        :return: The unit_price of this Item.
        :rtype: str
        """
        return self._unit_price

    @unit_price.setter
    def unit_price(self, unit_price):
        """Sets the unit_price of this Item.

        This is the price per unit for the item. Some European countries require listings for certain types of products to include the price per unit so buyers can accurately compare prices.   <br><br>For example: <br><br><code>\"unitPricingMeasure\": \"100g\",<br> \"unitPrice\": {<br>&nbsp;&nbsp;\"value\": \"7.99\",<br>&nbsp;&nbsp;\"currency\": \"GBP\"</code>

        :param unit_price: The unit_price of this Item.
        :type unit_price: str
        """

        self._unit_price = unit_price

    @property
    def unit_pricing_measure(self):
        """Gets the unit_pricing_measure of this Item.

        The designation, such as size, weight, volume, count, etc., that was used to specify the quantity of the item.  This helps buyers compare prices. <br><br>For example, the following tells the buyer that the item is 7.99 per 100 grams. <br><br><code>\"unitPricingMeasure\": \"100g\",<br> \"unitPrice\": {<br>&nbsp;&nbsp;\"value\": \"7.99\",<br>&nbsp;&nbsp;\"currency\": \"GBP\"</code>

        :return: The unit_pricing_measure of this Item.
        :rtype: str
        """
        return self._unit_pricing_measure

    @unit_pricing_measure.setter
    def unit_pricing_measure(self, unit_pricing_measure):
        """Sets the unit_pricing_measure of this Item.

        The designation, such as size, weight, volume, count, etc., that was used to specify the quantity of the item.  This helps buyers compare prices. <br><br>For example, the following tells the buyer that the item is 7.99 per 100 grams. <br><br><code>\"unitPricingMeasure\": \"100g\",<br> \"unitPrice\": {<br>&nbsp;&nbsp;\"value\": \"7.99\",<br>&nbsp;&nbsp;\"currency\": \"GBP\"</code>

        :param unit_pricing_measure: The unit_pricing_measure of this Item.
        :type unit_pricing_measure: str
        """

        self._unit_pricing_measure = unit_pricing_measure

    @property
    def weight_unit_of_measure(self):
        """Gets the weight_unit_of_measure of this Item.

        The unit of measurement used for the package weight, such as POUND, KILOGRAM, OUNCE, or GRAM. <br><br>Code so that your app gracefully handles any future changes to this list.  For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/api:WeightUnitOfMeasureEnum'>eBay API documentation</a>

        :return: The weight_unit_of_measure of this Item.
        :rtype: str
        """
        return self._weight_unit_of_measure

    @weight_unit_of_measure.setter
    def weight_unit_of_measure(self, weight_unit_of_measure):
        """Sets the weight_unit_of_measure of this Item.

        The unit of measurement used for the package weight, such as POUND, KILOGRAM, OUNCE, or GRAM. <br><br>Code so that your app gracefully handles any future changes to this list.  For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/feed/types/api:WeightUnitOfMeasureEnum'>eBay API documentation</a>

        :param weight_unit_of_measure: The weight_unit_of_measure of this Item.
        :type weight_unit_of_measure: str
        """

        self._weight_unit_of_measure = weight_unit_of_measure
