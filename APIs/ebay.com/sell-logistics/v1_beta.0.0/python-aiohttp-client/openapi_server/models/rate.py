# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.additional_option import AdditionalOption
from openapi_server.models.amount import Amount
from openapi_server.models.pickup_slot import PickupSlot
from openapi_server import util


class Rate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_options: List[AdditionalOption]=None, base_shipping_cost: Amount=None, destination_time_zone: str=None, max_estimated_delivery_date: str=None, min_estimated_delivery_date: str=None, pickup_networks: List[str]=None, pickup_slots: List[PickupSlot]=None, pickup_type: str=None, rate_id: str=None, rate_recommendation: List[str]=None, shipping_carrier_code: str=None, shipping_carrier_name: str=None, shipping_service_code: str=None, shipping_service_name: str=None):
        """Rate - a model defined in OpenAPI

        :param additional_options: The additional_options of this Rate.
        :param base_shipping_cost: The base_shipping_cost of this Rate.
        :param destination_time_zone: The destination_time_zone of this Rate.
        :param max_estimated_delivery_date: The max_estimated_delivery_date of this Rate.
        :param min_estimated_delivery_date: The min_estimated_delivery_date of this Rate.
        :param pickup_networks: The pickup_networks of this Rate.
        :param pickup_slots: The pickup_slots of this Rate.
        :param pickup_type: The pickup_type of this Rate.
        :param rate_id: The rate_id of this Rate.
        :param rate_recommendation: The rate_recommendation of this Rate.
        :param shipping_carrier_code: The shipping_carrier_code of this Rate.
        :param shipping_carrier_name: The shipping_carrier_name of this Rate.
        :param shipping_service_code: The shipping_service_code of this Rate.
        :param shipping_service_name: The shipping_service_name of this Rate.
        """
        self.openapi_types = {
            'additional_options': List[AdditionalOption],
            'base_shipping_cost': Amount,
            'destination_time_zone': str,
            'max_estimated_delivery_date': str,
            'min_estimated_delivery_date': str,
            'pickup_networks': List[str],
            'pickup_slots': List[PickupSlot],
            'pickup_type': str,
            'rate_id': str,
            'rate_recommendation': List[str],
            'shipping_carrier_code': str,
            'shipping_carrier_name': str,
            'shipping_service_code': str,
            'shipping_service_name': str
        }

        self.attribute_map = {
            'additional_options': 'additionalOptions',
            'base_shipping_cost': 'baseShippingCost',
            'destination_time_zone': 'destinationTimeZone',
            'max_estimated_delivery_date': 'maxEstimatedDeliveryDate',
            'min_estimated_delivery_date': 'minEstimatedDeliveryDate',
            'pickup_networks': 'pickupNetworks',
            'pickup_slots': 'pickupSlots',
            'pickup_type': 'pickupType',
            'rate_id': 'rateId',
            'rate_recommendation': 'rateRecommendation',
            'shipping_carrier_code': 'shippingCarrierCode',
            'shipping_carrier_name': 'shippingCarrierName',
            'shipping_service_code': 'shippingServiceCode',
            'shipping_service_name': 'shippingServiceName'
        }

        self._additional_options = additional_options
        self._base_shipping_cost = base_shipping_cost
        self._destination_time_zone = destination_time_zone
        self._max_estimated_delivery_date = max_estimated_delivery_date
        self._min_estimated_delivery_date = min_estimated_delivery_date
        self._pickup_networks = pickup_networks
        self._pickup_slots = pickup_slots
        self._pickup_type = pickup_type
        self._rate_id = rate_id
        self._rate_recommendation = rate_recommendation
        self._shipping_carrier_code = shipping_carrier_code
        self._shipping_carrier_name = shipping_carrier_name
        self._shipping_service_code = shipping_service_code
        self._shipping_service_name = shipping_service_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Rate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Rate of this Rate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_options(self):
        """Gets the additional_options of this Rate.

        Contains service and pricing information for one or more shipping options that are offered by the carrier and can be purchased in addition to the base shipping service provided by this rate. Shipping options can include items such as <code>INSURANCE</code> and <code>SIGNATURE</code>.

        :return: The additional_options of this Rate.
        :rtype: List[AdditionalOption]
        """
        return self._additional_options

    @additional_options.setter
    def additional_options(self, additional_options):
        """Sets the additional_options of this Rate.

        Contains service and pricing information for one or more shipping options that are offered by the carrier and can be purchased in addition to the base shipping service provided by this rate. Shipping options can include items such as <code>INSURANCE</code> and <code>SIGNATURE</code>.

        :param additional_options: The additional_options of this Rate.
        :type additional_options: List[AdditionalOption]
        """

        self._additional_options = additional_options

    @property
    def base_shipping_cost(self):
        """Gets the base_shipping_cost of this Rate.


        :return: The base_shipping_cost of this Rate.
        :rtype: Amount
        """
        return self._base_shipping_cost

    @base_shipping_cost.setter
    def base_shipping_cost(self, base_shipping_cost):
        """Sets the base_shipping_cost of this Rate.


        :param base_shipping_cost: The base_shipping_cost of this Rate.
        :type base_shipping_cost: Amount
        """

        self._base_shipping_cost = base_shipping_cost

    @property
    def destination_time_zone(self):
        """Gets the destination_time_zone of this Rate.

        The name of the time zone region, as defined in the <a href=\"http://www.iana.org/time-zones\"  target=\"_blank\">IANA Time Zone Database</a>, to which the package is being shipped.  <br><br>Delivery dates are calculated relative to this time zone.  <br><br><span class=\"tablenote\"><strong>Note:</strong> This is different from a Coordinated Universal Time (UTC) offset. For example, the <i>America/Los_Angeles</i> time zone identifies a region with the UTC standard time offset of <code>-08:00</code>, but so do several other time zones, including <i>America/Tijuana</i>,<i>America/Dawson</i>, and <i>Pacific/Pitcairn</i>.</span>

        :return: The destination_time_zone of this Rate.
        :rtype: str
        """
        return self._destination_time_zone

    @destination_time_zone.setter
    def destination_time_zone(self, destination_time_zone):
        """Sets the destination_time_zone of this Rate.

        The name of the time zone region, as defined in the <a href=\"http://www.iana.org/time-zones\"  target=\"_blank\">IANA Time Zone Database</a>, to which the package is being shipped.  <br><br>Delivery dates are calculated relative to this time zone.  <br><br><span class=\"tablenote\"><strong>Note:</strong> This is different from a Coordinated Universal Time (UTC) offset. For example, the <i>America/Los_Angeles</i> time zone identifies a region with the UTC standard time offset of <code>-08:00</code>, but so do several other time zones, including <i>America/Tijuana</i>,<i>America/Dawson</i>, and <i>Pacific/Pitcairn</i>.</span>

        :param destination_time_zone: The destination_time_zone of this Rate.
        :type destination_time_zone: str
        """

        self._destination_time_zone = destination_time_zone

    @property
    def max_estimated_delivery_date(self):
        """Gets the max_estimated_delivery_date of this Rate.

        The latest stated date and time the shipment will be delivered at this rate.  <br><br>The time stamp is formatted as an <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\" title=\"https://www.iso.org\" target=\"_blank\">ISO 8601</a> string, which is based on the 24-hour Coordinated Universal Time (UTC) clock.  <br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[HH]:[MM]:[SS].[SSS]Z</code> <br><b>Example:</b> <code>2018-08-20T07:09:00.000Z</code>

        :return: The max_estimated_delivery_date of this Rate.
        :rtype: str
        """
        return self._max_estimated_delivery_date

    @max_estimated_delivery_date.setter
    def max_estimated_delivery_date(self, max_estimated_delivery_date):
        """Sets the max_estimated_delivery_date of this Rate.

        The latest stated date and time the shipment will be delivered at this rate.  <br><br>The time stamp is formatted as an <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\" title=\"https://www.iso.org\" target=\"_blank\">ISO 8601</a> string, which is based on the 24-hour Coordinated Universal Time (UTC) clock.  <br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[HH]:[MM]:[SS].[SSS]Z</code> <br><b>Example:</b> <code>2018-08-20T07:09:00.000Z</code>

        :param max_estimated_delivery_date: The max_estimated_delivery_date of this Rate.
        :type max_estimated_delivery_date: str
        """

        self._max_estimated_delivery_date = max_estimated_delivery_date

    @property
    def min_estimated_delivery_date(self):
        """Gets the min_estimated_delivery_date of this Rate.

        The estimated earliest date and time the shipment will be delivered at this rate. The time stamp is formatted as an ISO 8601 UTC string.

        :return: The min_estimated_delivery_date of this Rate.
        :rtype: str
        """
        return self._min_estimated_delivery_date

    @min_estimated_delivery_date.setter
    def min_estimated_delivery_date(self, min_estimated_delivery_date):
        """Sets the min_estimated_delivery_date of this Rate.

        The estimated earliest date and time the shipment will be delivered at this rate. The time stamp is formatted as an ISO 8601 UTC string.

        :param min_estimated_delivery_date: The min_estimated_delivery_date of this Rate.
        :type min_estimated_delivery_date: str
        """

        self._min_estimated_delivery_date = min_estimated_delivery_date

    @property
    def pickup_networks(self):
        """Gets the pickup_networks of this Rate.

        A list of pickup networks compatible with the shipping service.

        :return: The pickup_networks of this Rate.
        :rtype: List[str]
        """
        return self._pickup_networks

    @pickup_networks.setter
    def pickup_networks(self, pickup_networks):
        """Sets the pickup_networks of this Rate.

        A list of pickup networks compatible with the shipping service.

        :param pickup_networks: The pickup_networks of this Rate.
        :type pickup_networks: List[str]
        """

        self._pickup_networks = pickup_networks

    @property
    def pickup_slots(self):
        """Gets the pickup_slots of this Rate.

        A list of available pickup slots for the package.

        :return: The pickup_slots of this Rate.
        :rtype: List[PickupSlot]
        """
        return self._pickup_slots

    @pickup_slots.setter
    def pickup_slots(self, pickup_slots):
        """Sets the pickup_slots of this Rate.

        A list of available pickup slots for the package.

        :param pickup_slots: The pickup_slots of this Rate.
        :type pickup_slots: List[PickupSlot]
        """

        self._pickup_slots = pickup_slots

    @property
    def pickup_type(self):
        """Gets the pickup_type of this Rate.

        The type of pickup or drop-off service associated with the <b>pickupSlots</b> time frames. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/logistics/types/api:PickupTypeEnum'>eBay API documentation</a>

        :return: The pickup_type of this Rate.
        :rtype: str
        """
        return self._pickup_type

    @pickup_type.setter
    def pickup_type(self, pickup_type):
        """Sets the pickup_type of this Rate.

        The type of pickup or drop-off service associated with the <b>pickupSlots</b> time frames. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/logistics/types/api:PickupTypeEnum'>eBay API documentation</a>

        :param pickup_type: The pickup_type of this Rate.
        :type pickup_type: str
        """

        self._pickup_type = pickup_type

    @property
    def rate_id(self):
        """Gets the rate_id of this Rate.

        The unique eBay-assigned ID for this shipping rate.

        :return: The rate_id of this Rate.
        :rtype: str
        """
        return self._rate_id

    @rate_id.setter
    def rate_id(self, rate_id):
        """Sets the rate_id of this Rate.

        The unique eBay-assigned ID for this shipping rate.

        :param rate_id: The rate_id of this Rate.
        :type rate_id: str
        """

        self._rate_id = rate_id

    @property
    def rate_recommendation(self):
        """Gets the rate_recommendation of this Rate.

        A list of reasons this rate is recommended. Available values are: <ul> <li><code>BUYER_CHOSEN</code> &mdash; The rate meets or exceeds the requirements of the buyer's preferred shipping option.</li> <li><code>CHEAPEST_ON_TIME</code> &mdash; The rate is the cheapest rate available that will provide delivery within the seller's time frame commitment.</li>  <li><code>EBAY_PLUS_OK</code> &mdash; The rate complies with the shipping requirements of the eBay Plus program.</li> <li><code>FASTEST_ON_TIME</code> &mdash; The rate has the fastest shipping time, and will provide delivery within the seller's time frame commitment.</li> <li><code>GUARANTEED_DELIVERY_OK</code> &mdash; The rate complies with the shipping requirements of the eBay Guaranteed Delivery program.</li></ul>

        :return: The rate_recommendation of this Rate.
        :rtype: List[str]
        """
        return self._rate_recommendation

    @rate_recommendation.setter
    def rate_recommendation(self, rate_recommendation):
        """Sets the rate_recommendation of this Rate.

        A list of reasons this rate is recommended. Available values are: <ul> <li><code>BUYER_CHOSEN</code> &mdash; The rate meets or exceeds the requirements of the buyer's preferred shipping option.</li> <li><code>CHEAPEST_ON_TIME</code> &mdash; The rate is the cheapest rate available that will provide delivery within the seller's time frame commitment.</li>  <li><code>EBAY_PLUS_OK</code> &mdash; The rate complies with the shipping requirements of the eBay Plus program.</li> <li><code>FASTEST_ON_TIME</code> &mdash; The rate has the fastest shipping time, and will provide delivery within the seller's time frame commitment.</li> <li><code>GUARANTEED_DELIVERY_OK</code> &mdash; The rate complies with the shipping requirements of the eBay Guaranteed Delivery program.</li></ul>

        :param rate_recommendation: The rate_recommendation of this Rate.
        :type rate_recommendation: List[str]
        """

        self._rate_recommendation = rate_recommendation

    @property
    def shipping_carrier_code(self):
        """Gets the shipping_carrier_code of this Rate.

        The code name of the shipping carrier who will provide the service identified by <b>shippingServiceCode</b>.

        :return: The shipping_carrier_code of this Rate.
        :rtype: str
        """
        return self._shipping_carrier_code

    @shipping_carrier_code.setter
    def shipping_carrier_code(self, shipping_carrier_code):
        """Sets the shipping_carrier_code of this Rate.

        The code name of the shipping carrier who will provide the service identified by <b>shippingServiceCode</b>.

        :param shipping_carrier_code: The shipping_carrier_code of this Rate.
        :type shipping_carrier_code: str
        """

        self._shipping_carrier_code = shipping_carrier_code

    @property
    def shipping_carrier_name(self):
        """Gets the shipping_carrier_name of this Rate.

        The common name of the shipping carrier.

        :return: The shipping_carrier_name of this Rate.
        :rtype: str
        """
        return self._shipping_carrier_name

    @shipping_carrier_name.setter
    def shipping_carrier_name(self, shipping_carrier_name):
        """Sets the shipping_carrier_name of this Rate.

        The common name of the shipping carrier.

        :param shipping_carrier_name: The shipping_carrier_name of this Rate.
        :type shipping_carrier_name: str
        """

        self._shipping_carrier_name = shipping_carrier_name

    @property
    def shipping_service_code(self):
        """Gets the shipping_service_code of this Rate.

        The code name of the shipping service to be provided by the carrier identified by <b>shippingCarrierCode</b>.

        :return: The shipping_service_code of this Rate.
        :rtype: str
        """
        return self._shipping_service_code

    @shipping_service_code.setter
    def shipping_service_code(self, shipping_service_code):
        """Sets the shipping_service_code of this Rate.

        The code name of the shipping service to be provided by the carrier identified by <b>shippingCarrierCode</b>.

        :param shipping_service_code: The shipping_service_code of this Rate.
        :type shipping_service_code: str
        """

        self._shipping_service_code = shipping_service_code

    @property
    def shipping_service_name(self):
        """Gets the shipping_service_name of this Rate.

        The common name of the shipping service.

        :return: The shipping_service_name of this Rate.
        :rtype: str
        """
        return self._shipping_service_name

    @shipping_service_name.setter
    def shipping_service_name(self, shipping_service_name):
        """Sets the shipping_service_name of this Rate.

        The common name of the shipping service.

        :param shipping_service_name: The shipping_service_name of this Rate.
        :type shipping_service_name: str
        """

        self._shipping_service_name = shipping_service_name
