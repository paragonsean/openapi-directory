# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact_address import ContactAddress
from openapi_server.models.phone_number import PhoneNumber
from openapi_server import util


class Contact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, company_name: str=None, contact_address: ContactAddress=None, full_name: str=None, primary_phone: PhoneNumber=None):
        """Contact - a model defined in OpenAPI

        :param company_name: The company_name of this Contact.
        :param contact_address: The contact_address of this Contact.
        :param full_name: The full_name of this Contact.
        :param primary_phone: The primary_phone of this Contact.
        """
        self.openapi_types = {
            'company_name': str,
            'contact_address': ContactAddress,
            'full_name': str,
            'primary_phone': PhoneNumber
        }

        self.attribute_map = {
            'company_name': 'companyName',
            'contact_address': 'contactAddress',
            'full_name': 'fullName',
            'primary_phone': 'primaryPhone'
        }

        self._company_name = company_name
        self._contact_address = contact_address
        self._full_name = full_name
        self._primary_phone = primary_phone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Contact':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Contact of this Contact.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company_name(self):
        """Gets the company_name of this Contact.

        The company name with which the contact is associated.

        :return: The company_name of this Contact.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this Contact.

        The company name with which the contact is associated.

        :param company_name: The company_name of this Contact.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def contact_address(self):
        """Gets the contact_address of this Contact.


        :return: The contact_address of this Contact.
        :rtype: ContactAddress
        """
        return self._contact_address

    @contact_address.setter
    def contact_address(self, contact_address):
        """Sets the contact_address of this Contact.


        :param contact_address: The contact_address of this Contact.
        :type contact_address: ContactAddress
        """

        self._contact_address = contact_address

    @property
    def full_name(self):
        """Gets the full_name of this Contact.

        The contact's full name.

        :return: The full_name of this Contact.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this Contact.

        The contact's full name.

        :param full_name: The full_name of this Contact.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def primary_phone(self):
        """Gets the primary_phone of this Contact.


        :return: The primary_phone of this Contact.
        :rtype: PhoneNumber
        """
        return self._primary_phone

    @primary_phone.setter
    def primary_phone(self, primary_phone):
        """Sets the primary_phone of this Contact.


        :param primary_phone: The primary_phone of this Contact.
        :type primary_phone: PhoneNumber
        """

        self._primary_phone = primary_phone
