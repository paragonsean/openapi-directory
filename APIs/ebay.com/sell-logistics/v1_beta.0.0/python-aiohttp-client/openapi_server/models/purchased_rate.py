# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.additional_option import AdditionalOption
from openapi_server.models.amount import Amount
from openapi_server import util


class PurchasedRate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_options: List[AdditionalOption]=None, base_shipping_cost: Amount=None, destination_time_zone: str=None, max_estimated_delivery_date: str=None, min_estimated_delivery_date: str=None, pickup_networks: List[str]=None, pickup_slot_id: str=None, pickup_type: str=None, rate_id: str=None, shipping_carrier_code: str=None, shipping_carrier_name: str=None, shipping_quote_id: str=None, shipping_service_code: str=None, shipping_service_name: str=None, total_shipping_cost: Amount=None):
        """PurchasedRate - a model defined in OpenAPI

        :param additional_options: The additional_options of this PurchasedRate.
        :param base_shipping_cost: The base_shipping_cost of this PurchasedRate.
        :param destination_time_zone: The destination_time_zone of this PurchasedRate.
        :param max_estimated_delivery_date: The max_estimated_delivery_date of this PurchasedRate.
        :param min_estimated_delivery_date: The min_estimated_delivery_date of this PurchasedRate.
        :param pickup_networks: The pickup_networks of this PurchasedRate.
        :param pickup_slot_id: The pickup_slot_id of this PurchasedRate.
        :param pickup_type: The pickup_type of this PurchasedRate.
        :param rate_id: The rate_id of this PurchasedRate.
        :param shipping_carrier_code: The shipping_carrier_code of this PurchasedRate.
        :param shipping_carrier_name: The shipping_carrier_name of this PurchasedRate.
        :param shipping_quote_id: The shipping_quote_id of this PurchasedRate.
        :param shipping_service_code: The shipping_service_code of this PurchasedRate.
        :param shipping_service_name: The shipping_service_name of this PurchasedRate.
        :param total_shipping_cost: The total_shipping_cost of this PurchasedRate.
        """
        self.openapi_types = {
            'additional_options': List[AdditionalOption],
            'base_shipping_cost': Amount,
            'destination_time_zone': str,
            'max_estimated_delivery_date': str,
            'min_estimated_delivery_date': str,
            'pickup_networks': List[str],
            'pickup_slot_id': str,
            'pickup_type': str,
            'rate_id': str,
            'shipping_carrier_code': str,
            'shipping_carrier_name': str,
            'shipping_quote_id': str,
            'shipping_service_code': str,
            'shipping_service_name': str,
            'total_shipping_cost': Amount
        }

        self.attribute_map = {
            'additional_options': 'additionalOptions',
            'base_shipping_cost': 'baseShippingCost',
            'destination_time_zone': 'destinationTimeZone',
            'max_estimated_delivery_date': 'maxEstimatedDeliveryDate',
            'min_estimated_delivery_date': 'minEstimatedDeliveryDate',
            'pickup_networks': 'pickupNetworks',
            'pickup_slot_id': 'pickupSlotId',
            'pickup_type': 'pickupType',
            'rate_id': 'rateId',
            'shipping_carrier_code': 'shippingCarrierCode',
            'shipping_carrier_name': 'shippingCarrierName',
            'shipping_quote_id': 'shippingQuoteId',
            'shipping_service_code': 'shippingServiceCode',
            'shipping_service_name': 'shippingServiceName',
            'total_shipping_cost': 'totalShippingCost'
        }

        self._additional_options = additional_options
        self._base_shipping_cost = base_shipping_cost
        self._destination_time_zone = destination_time_zone
        self._max_estimated_delivery_date = max_estimated_delivery_date
        self._min_estimated_delivery_date = min_estimated_delivery_date
        self._pickup_networks = pickup_networks
        self._pickup_slot_id = pickup_slot_id
        self._pickup_type = pickup_type
        self._rate_id = rate_id
        self._shipping_carrier_code = shipping_carrier_code
        self._shipping_carrier_name = shipping_carrier_name
        self._shipping_quote_id = shipping_quote_id
        self._shipping_service_code = shipping_service_code
        self._shipping_service_name = shipping_service_name
        self._total_shipping_cost = total_shipping_cost

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PurchasedRate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PurchasedRate of this PurchasedRate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_options(self):
        """Gets the additional_options of this PurchasedRate.

        An list of additional, optional features that have been purchased for the shipment.

        :return: The additional_options of this PurchasedRate.
        :rtype: List[AdditionalOption]
        """
        return self._additional_options

    @additional_options.setter
    def additional_options(self, additional_options):
        """Sets the additional_options of this PurchasedRate.

        An list of additional, optional features that have been purchased for the shipment.

        :param additional_options: The additional_options of this PurchasedRate.
        :type additional_options: List[AdditionalOption]
        """

        self._additional_options = additional_options

    @property
    def base_shipping_cost(self):
        """Gets the base_shipping_cost of this PurchasedRate.


        :return: The base_shipping_cost of this PurchasedRate.
        :rtype: Amount
        """
        return self._base_shipping_cost

    @base_shipping_cost.setter
    def base_shipping_cost(self, base_shipping_cost):
        """Sets the base_shipping_cost of this PurchasedRate.


        :param base_shipping_cost: The base_shipping_cost of this PurchasedRate.
        :type base_shipping_cost: Amount
        """

        self._base_shipping_cost = base_shipping_cost

    @property
    def destination_time_zone(self):
        """Gets the destination_time_zone of this PurchasedRate.

        The time zone of the destination according to <a href=\"https://www.iana.org/time-zones\" target=\"_blank\">Time Zone Database</a>. For example, \"America/Los_Angeles\".

        :return: The destination_time_zone of this PurchasedRate.
        :rtype: str
        """
        return self._destination_time_zone

    @destination_time_zone.setter
    def destination_time_zone(self, destination_time_zone):
        """Sets the destination_time_zone of this PurchasedRate.

        The time zone of the destination according to <a href=\"https://www.iana.org/time-zones\" target=\"_blank\">Time Zone Database</a>. For example, \"America/Los_Angeles\".

        :param destination_time_zone: The destination_time_zone of this PurchasedRate.
        :type destination_time_zone: str
        """

        self._destination_time_zone = destination_time_zone

    @property
    def max_estimated_delivery_date(self):
        """Gets the max_estimated_delivery_date of this PurchasedRate.

        A string value representing maximum (latest) estimated delivery time, formatted as an <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\" title=\"https://www.iso.org\" target=\"_blank\">ISO 8601</a> string, which is based on the 24-hour Coordinated Universal Time (UTC) clock.  <br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[HH]:[MM]:[SS].[SSS]Z</code> <br><b>Example:</b> <code>2018-08-20T07:09:00.000Z</code>

        :return: The max_estimated_delivery_date of this PurchasedRate.
        :rtype: str
        """
        return self._max_estimated_delivery_date

    @max_estimated_delivery_date.setter
    def max_estimated_delivery_date(self, max_estimated_delivery_date):
        """Sets the max_estimated_delivery_date of this PurchasedRate.

        A string value representing maximum (latest) estimated delivery time, formatted as an <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\" title=\"https://www.iso.org\" target=\"_blank\">ISO 8601</a> string, which is based on the 24-hour Coordinated Universal Time (UTC) clock.  <br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[HH]:[MM]:[SS].[SSS]Z</code> <br><b>Example:</b> <code>2018-08-20T07:09:00.000Z</code>

        :param max_estimated_delivery_date: The max_estimated_delivery_date of this PurchasedRate.
        :type max_estimated_delivery_date: str
        """

        self._max_estimated_delivery_date = max_estimated_delivery_date

    @property
    def min_estimated_delivery_date(self):
        """Gets the min_estimated_delivery_date of this PurchasedRate.

        A string value representing minimum (earliest) estimated delivery time, formatted as an <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\" title=\"https://www.iso.org\" target=\"_blank\">ISO 8601</a>ISO 8601</a> UTC string.

        :return: The min_estimated_delivery_date of this PurchasedRate.
        :rtype: str
        """
        return self._min_estimated_delivery_date

    @min_estimated_delivery_date.setter
    def min_estimated_delivery_date(self, min_estimated_delivery_date):
        """Sets the min_estimated_delivery_date of this PurchasedRate.

        A string value representing minimum (earliest) estimated delivery time, formatted as an <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\" title=\"https://www.iso.org\" target=\"_blank\">ISO 8601</a>ISO 8601</a> UTC string.

        :param min_estimated_delivery_date: The min_estimated_delivery_date of this PurchasedRate.
        :type min_estimated_delivery_date: str
        """

        self._min_estimated_delivery_date = min_estimated_delivery_date

    @property
    def pickup_networks(self):
        """Gets the pickup_networks of this PurchasedRate.

        A list of pickup networks compatible with the shipping service.

        :return: The pickup_networks of this PurchasedRate.
        :rtype: List[str]
        """
        return self._pickup_networks

    @pickup_networks.setter
    def pickup_networks(self, pickup_networks):
        """Sets the pickup_networks of this PurchasedRate.

        A list of pickup networks compatible with the shipping service.

        :param pickup_networks: The pickup_networks of this PurchasedRate.
        :type pickup_networks: List[str]
        """

        self._pickup_networks = pickup_networks

    @property
    def pickup_slot_id(self):
        """Gets the pickup_slot_id of this PurchasedRate.

        This unique eBay-assigned ID value is returned only if the shipment has been configured for a scheduled pickup.

        :return: The pickup_slot_id of this PurchasedRate.
        :rtype: str
        """
        return self._pickup_slot_id

    @pickup_slot_id.setter
    def pickup_slot_id(self, pickup_slot_id):
        """Sets the pickup_slot_id of this PurchasedRate.

        This unique eBay-assigned ID value is returned only if the shipment has been configured for a scheduled pickup.

        :param pickup_slot_id: The pickup_slot_id of this PurchasedRate.
        :type pickup_slot_id: str
        """

        self._pickup_slot_id = pickup_slot_id

    @property
    def pickup_type(self):
        """Gets the pickup_type of this PurchasedRate.

        The type of pickup or drop off configured for the shipment. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/logistics/types/api:PickupTypeEnum'>eBay API documentation</a>

        :return: The pickup_type of this PurchasedRate.
        :rtype: str
        """
        return self._pickup_type

    @pickup_type.setter
    def pickup_type(self, pickup_type):
        """Sets the pickup_type of this PurchasedRate.

        The type of pickup or drop off configured for the shipment. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/logistics/types/api:PickupTypeEnum'>eBay API documentation</a>

        :param pickup_type: The pickup_type of this PurchasedRate.
        :type pickup_type: str
        """

        self._pickup_type = pickup_type

    @property
    def rate_id(self):
        """Gets the rate_id of this PurchasedRate.

        The eBay-generated ID of the shipping rate that the seller has chosen to purchase for the shipment.

        :return: The rate_id of this PurchasedRate.
        :rtype: str
        """
        return self._rate_id

    @rate_id.setter
    def rate_id(self, rate_id):
        """Sets the rate_id of this PurchasedRate.

        The eBay-generated ID of the shipping rate that the seller has chosen to purchase for the shipment.

        :param rate_id: The rate_id of this PurchasedRate.
        :type rate_id: str
        """

        self._rate_id = rate_id

    @property
    def shipping_carrier_code(self):
        """Gets the shipping_carrier_code of this PurchasedRate.

        The ID code for the carrier that was selected for the package shipment.

        :return: The shipping_carrier_code of this PurchasedRate.
        :rtype: str
        """
        return self._shipping_carrier_code

    @shipping_carrier_code.setter
    def shipping_carrier_code(self, shipping_carrier_code):
        """Sets the shipping_carrier_code of this PurchasedRate.

        The ID code for the carrier that was selected for the package shipment.

        :param shipping_carrier_code: The shipping_carrier_code of this PurchasedRate.
        :type shipping_carrier_code: str
        """

        self._shipping_carrier_code = shipping_carrier_code

    @property
    def shipping_carrier_name(self):
        """Gets the shipping_carrier_name of this PurchasedRate.

        The name of the shipping carrier.

        :return: The shipping_carrier_name of this PurchasedRate.
        :rtype: str
        """
        return self._shipping_carrier_name

    @shipping_carrier_name.setter
    def shipping_carrier_name(self, shipping_carrier_name):
        """Sets the shipping_carrier_name of this PurchasedRate.

        The name of the shipping carrier.

        :param shipping_carrier_name: The shipping_carrier_name of this PurchasedRate.
        :type shipping_carrier_name: str
        """

        self._shipping_carrier_name = shipping_carrier_name

    @property
    def shipping_quote_id(self):
        """Gets the shipping_quote_id of this PurchasedRate.

        The unique eBay-generated ID of the <i>shipping quote</i> from which the seller selected a shipping rate (<b>rateId</b>).

        :return: The shipping_quote_id of this PurchasedRate.
        :rtype: str
        """
        return self._shipping_quote_id

    @shipping_quote_id.setter
    def shipping_quote_id(self, shipping_quote_id):
        """Sets the shipping_quote_id of this PurchasedRate.

        The unique eBay-generated ID of the <i>shipping quote</i> from which the seller selected a shipping rate (<b>rateId</b>).

        :param shipping_quote_id: The shipping_quote_id of this PurchasedRate.
        :type shipping_quote_id: str
        """

        self._shipping_quote_id = shipping_quote_id

    @property
    def shipping_service_code(self):
        """Gets the shipping_service_code of this PurchasedRate.

        String ID code for the shipping service selected for the package shipment. This is a service that the shipping carrier supplies.

        :return: The shipping_service_code of this PurchasedRate.
        :rtype: str
        """
        return self._shipping_service_code

    @shipping_service_code.setter
    def shipping_service_code(self, shipping_service_code):
        """Sets the shipping_service_code of this PurchasedRate.

        String ID code for the shipping service selected for the package shipment. This is a service that the shipping carrier supplies.

        :param shipping_service_code: The shipping_service_code of this PurchasedRate.
        :type shipping_service_code: str
        """

        self._shipping_service_code = shipping_service_code

    @property
    def shipping_service_name(self):
        """Gets the shipping_service_name of this PurchasedRate.

        The name of the shipping service.

        :return: The shipping_service_name of this PurchasedRate.
        :rtype: str
        """
        return self._shipping_service_name

    @shipping_service_name.setter
    def shipping_service_name(self, shipping_service_name):
        """Sets the shipping_service_name of this PurchasedRate.

        The name of the shipping service.

        :param shipping_service_name: The shipping_service_name of this PurchasedRate.
        :type shipping_service_name: str
        """

        self._shipping_service_name = shipping_service_name

    @property
    def total_shipping_cost(self):
        """Gets the total_shipping_cost of this PurchasedRate.


        :return: The total_shipping_cost of this PurchasedRate.
        :rtype: Amount
        """
        return self._total_shipping_cost

    @total_shipping_cost.setter
    def total_shipping_cost(self, total_shipping_cost):
        """Sets the total_shipping_cost of this PurchasedRate.


        :param total_shipping_cost: The total_shipping_cost of this PurchasedRate.
        :type total_shipping_cost: Amount
        """

        self._total_shipping_cost = total_shipping_cost
