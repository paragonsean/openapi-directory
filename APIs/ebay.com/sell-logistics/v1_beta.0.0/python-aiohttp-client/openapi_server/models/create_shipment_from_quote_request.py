# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.additional_option import AdditionalOption
from openapi_server.models.contact import Contact
from openapi_server import util


class CreateShipmentFromQuoteRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_options: List[AdditionalOption]=None, label_custom_message: str=None, label_size: str=None, rate_id: str=None, return_to: Contact=None, shipping_quote_id: str=None):
        """CreateShipmentFromQuoteRequest - a model defined in OpenAPI

        :param additional_options: The additional_options of this CreateShipmentFromQuoteRequest.
        :param label_custom_message: The label_custom_message of this CreateShipmentFromQuoteRequest.
        :param label_size: The label_size of this CreateShipmentFromQuoteRequest.
        :param rate_id: The rate_id of this CreateShipmentFromQuoteRequest.
        :param return_to: The return_to of this CreateShipmentFromQuoteRequest.
        :param shipping_quote_id: The shipping_quote_id of this CreateShipmentFromQuoteRequest.
        """
        self.openapi_types = {
            'additional_options': List[AdditionalOption],
            'label_custom_message': str,
            'label_size': str,
            'rate_id': str,
            'return_to': Contact,
            'shipping_quote_id': str
        }

        self.attribute_map = {
            'additional_options': 'additionalOptions',
            'label_custom_message': 'labelCustomMessage',
            'label_size': 'labelSize',
            'rate_id': 'rateId',
            'return_to': 'returnTo',
            'shipping_quote_id': 'shippingQuoteId'
        }

        self._additional_options = additional_options
        self._label_custom_message = label_custom_message
        self._label_size = label_size
        self._rate_id = rate_id
        self._return_to = return_to
        self._shipping_quote_id = shipping_quote_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateShipmentFromQuoteRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateShipmentFromQuoteRequest of this CreateShipmentFromQuoteRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_options(self):
        """Gets the additional_options of this CreateShipmentFromQuoteRequest.

        Supply a list of one or more shipping options that the seller wants to purchase for this shipment.  <br><br>The <b>baseShippingCost</b> field that's associated with the selected shipping rate is the cost of the base service offered in the rate. In addition to the base service, sellers can add additional shipping services to the base service. Shipping options include things such as shipping insurance or a recipient's signature upon delivery. The cost of any added services is summed with the base shipping cost to determine the final cost for the shipment. All options added to the shipment must be chosen from the set of shipping options offered with the selected rate.

        :return: The additional_options of this CreateShipmentFromQuoteRequest.
        :rtype: List[AdditionalOption]
        """
        return self._additional_options

    @additional_options.setter
    def additional_options(self, additional_options):
        """Sets the additional_options of this CreateShipmentFromQuoteRequest.

        Supply a list of one or more shipping options that the seller wants to purchase for this shipment.  <br><br>The <b>baseShippingCost</b> field that's associated with the selected shipping rate is the cost of the base service offered in the rate. In addition to the base service, sellers can add additional shipping services to the base service. Shipping options include things such as shipping insurance or a recipient's signature upon delivery. The cost of any added services is summed with the base shipping cost to determine the final cost for the shipment. All options added to the shipment must be chosen from the set of shipping options offered with the selected rate.

        :param additional_options: The additional_options of this CreateShipmentFromQuoteRequest.
        :type additional_options: List[AdditionalOption]
        """

        self._additional_options = additional_options

    @property
    def label_custom_message(self):
        """Gets the label_custom_message of this CreateShipmentFromQuoteRequest.

        Optional text to be printed on the shipping label if the selected shipping carrier supports custom messages on their labels.

        :return: The label_custom_message of this CreateShipmentFromQuoteRequest.
        :rtype: str
        """
        return self._label_custom_message

    @label_custom_message.setter
    def label_custom_message(self, label_custom_message):
        """Sets the label_custom_message of this CreateShipmentFromQuoteRequest.

        Optional text to be printed on the shipping label if the selected shipping carrier supports custom messages on their labels.

        :param label_custom_message: The label_custom_message of this CreateShipmentFromQuoteRequest.
        :type label_custom_message: str
        """

        self._label_custom_message = label_custom_message

    @property
    def label_size(self):
        """Gets the label_size of this CreateShipmentFromQuoteRequest.

        The seller's desired label size. Any supplied value is applied only if the shipping carrier supports multiple label sizes, otherwise the carrier's default label size is used.  <br><brCurrently, the only valid value is: <code>4\"x6\"</code>

        :return: The label_size of this CreateShipmentFromQuoteRequest.
        :rtype: str
        """
        return self._label_size

    @label_size.setter
    def label_size(self, label_size):
        """Sets the label_size of this CreateShipmentFromQuoteRequest.

        The seller's desired label size. Any supplied value is applied only if the shipping carrier supports multiple label sizes, otherwise the carrier's default label size is used.  <br><brCurrently, the only valid value is: <code>4\"x6\"</code>

        :param label_size: The label_size of this CreateShipmentFromQuoteRequest.
        :type label_size: str
        """

        self._label_size = label_size

    @property
    def rate_id(self):
        """Gets the rate_id of this CreateShipmentFromQuoteRequest.

        The eBay-assigned ID of the shipping rate that the seller selected for the shipment. This value is generated by a call to <b>createShippingQuote</b> and is returned in the <b>rates.rateId</b> field.

        :return: The rate_id of this CreateShipmentFromQuoteRequest.
        :rtype: str
        """
        return self._rate_id

    @rate_id.setter
    def rate_id(self, rate_id):
        """Sets the rate_id of this CreateShipmentFromQuoteRequest.

        The eBay-assigned ID of the shipping rate that the seller selected for the shipment. This value is generated by a call to <b>createShippingQuote</b> and is returned in the <b>rates.rateId</b> field.

        :param rate_id: The rate_id of this CreateShipmentFromQuoteRequest.
        :type rate_id: str
        """

        self._rate_id = rate_id

    @property
    def return_to(self):
        """Gets the return_to of this CreateShipmentFromQuoteRequest.


        :return: The return_to of this CreateShipmentFromQuoteRequest.
        :rtype: Contact
        """
        return self._return_to

    @return_to.setter
    def return_to(self, return_to):
        """Sets the return_to of this CreateShipmentFromQuoteRequest.


        :param return_to: The return_to of this CreateShipmentFromQuoteRequest.
        :type return_to: Contact
        """

        self._return_to = return_to

    @property
    def shipping_quote_id(self):
        """Gets the shipping_quote_id of this CreateShipmentFromQuoteRequest.

        The unique eBay-assigned ID of the shipping quote that was generated by a call to <b>createShippingQuote</b>.

        :return: The shipping_quote_id of this CreateShipmentFromQuoteRequest.
        :rtype: str
        """
        return self._shipping_quote_id

    @shipping_quote_id.setter
    def shipping_quote_id(self, shipping_quote_id):
        """Sets the shipping_quote_id of this CreateShipmentFromQuoteRequest.

        The unique eBay-assigned ID of the shipping quote that was generated by a call to <b>createShippingQuote</b>.

        :param shipping_quote_id: The shipping_quote_id of this CreateShipmentFromQuoteRequest.
        :type shipping_quote_id: str
        """

        self._shipping_quote_id = shipping_quote_id
