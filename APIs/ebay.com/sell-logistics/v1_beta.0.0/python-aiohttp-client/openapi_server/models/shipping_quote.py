# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact import Contact
from openapi_server.models.error import Error
from openapi_server.models.order import Order
from openapi_server.models.package_specification import PackageSpecification
from openapi_server.models.rate import Rate
from openapi_server import util


class ShippingQuote(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_date: str=None, expiration_date: str=None, orders: List[Order]=None, package_specification: PackageSpecification=None, rates: List[Rate]=None, ship_from: Contact=None, ship_to: Contact=None, shipping_quote_id: str=None, warnings: List[Error]=None):
        """ShippingQuote - a model defined in OpenAPI

        :param creation_date: The creation_date of this ShippingQuote.
        :param expiration_date: The expiration_date of this ShippingQuote.
        :param orders: The orders of this ShippingQuote.
        :param package_specification: The package_specification of this ShippingQuote.
        :param rates: The rates of this ShippingQuote.
        :param ship_from: The ship_from of this ShippingQuote.
        :param ship_to: The ship_to of this ShippingQuote.
        :param shipping_quote_id: The shipping_quote_id of this ShippingQuote.
        :param warnings: The warnings of this ShippingQuote.
        """
        self.openapi_types = {
            'creation_date': str,
            'expiration_date': str,
            'orders': List[Order],
            'package_specification': PackageSpecification,
            'rates': List[Rate],
            'ship_from': Contact,
            'ship_to': Contact,
            'shipping_quote_id': str,
            'warnings': List[Error]
        }

        self.attribute_map = {
            'creation_date': 'creationDate',
            'expiration_date': 'expirationDate',
            'orders': 'orders',
            'package_specification': 'packageSpecification',
            'rates': 'rates',
            'ship_from': 'shipFrom',
            'ship_to': 'shipTo',
            'shipping_quote_id': 'shippingQuoteId',
            'warnings': 'warnings'
        }

        self._creation_date = creation_date
        self._expiration_date = expiration_date
        self._orders = orders
        self._package_specification = package_specification
        self._rates = rates
        self._ship_from = ship_from
        self._ship_to = ship_to
        self._shipping_quote_id = shipping_quote_id
        self._warnings = warnings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShippingQuote':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShippingQuote of this ShippingQuote.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_date(self):
        """Gets the creation_date of this ShippingQuote.

        The date and time this quote was created, expressed as an ISO 8601 UTC string.

        :return: The creation_date of this ShippingQuote.
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this ShippingQuote.

        The date and time this quote was created, expressed as an ISO 8601 UTC string.

        :param creation_date: The creation_date of this ShippingQuote.
        :type creation_date: str
        """

        self._creation_date = creation_date

    @property
    def expiration_date(self):
        """Gets the expiration_date of this ShippingQuote.

        The last date and time that this quote will be honored, expressed as an ISO 8601 UTC string. After this time the quote expires and the expressed rates can no longer be purchased.

        :return: The expiration_date of this ShippingQuote.
        :rtype: str
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this ShippingQuote.

        The last date and time that this quote will be honored, expressed as an ISO 8601 UTC string. After this time the quote expires and the expressed rates can no longer be purchased.

        :param expiration_date: The expiration_date of this ShippingQuote.
        :type expiration_date: str
        """

        self._expiration_date = expiration_date

    @property
    def orders(self):
        """Gets the orders of this ShippingQuote.

        This list value is optionally assigned by the seller. When present, each element in the returned list contains seller-assigned information about an order (such as an order number). Because a package can contain all or part of one or more orders, this field provides a way for sellers to identify the packages that contain specific orders.

        :return: The orders of this ShippingQuote.
        :rtype: List[Order]
        """
        return self._orders

    @orders.setter
    def orders(self, orders):
        """Sets the orders of this ShippingQuote.

        This list value is optionally assigned by the seller. When present, each element in the returned list contains seller-assigned information about an order (such as an order number). Because a package can contain all or part of one or more orders, this field provides a way for sellers to identify the packages that contain specific orders.

        :param orders: The orders of this ShippingQuote.
        :type orders: List[Order]
        """

        self._orders = orders

    @property
    def package_specification(self):
        """Gets the package_specification of this ShippingQuote.


        :return: The package_specification of this ShippingQuote.
        :rtype: PackageSpecification
        """
        return self._package_specification

    @package_specification.setter
    def package_specification(self, package_specification):
        """Sets the package_specification of this ShippingQuote.


        :param package_specification: The package_specification of this ShippingQuote.
        :type package_specification: PackageSpecification
        """

        self._package_specification = package_specification

    @property
    def rates(self):
        """Gets the rates of this ShippingQuote.

        A list of <i>rates</i> where each rate, as identified by a <b>rateId</b>, contains information about a specific shipping service offered by a carrier.  Rates include shipping carrier and service, the to and from locations, the pickup and delivery windows, the seller's shipping parameters, the service constraints, and the cost for the base service and a list of additional shipping options.  <br><br>Each rate offered is supported by a label service where you can purchase the rate, and associated shipping label, via a call to <b>createFromShippingQuote</b>.

        :return: The rates of this ShippingQuote.
        :rtype: List[Rate]
        """
        return self._rates

    @rates.setter
    def rates(self, rates):
        """Sets the rates of this ShippingQuote.

        A list of <i>rates</i> where each rate, as identified by a <b>rateId</b>, contains information about a specific shipping service offered by a carrier.  Rates include shipping carrier and service, the to and from locations, the pickup and delivery windows, the seller's shipping parameters, the service constraints, and the cost for the base service and a list of additional shipping options.  <br><br>Each rate offered is supported by a label service where you can purchase the rate, and associated shipping label, via a call to <b>createFromShippingQuote</b>.

        :param rates: The rates of this ShippingQuote.
        :type rates: List[Rate]
        """

        self._rates = rates

    @property
    def ship_from(self):
        """Gets the ship_from of this ShippingQuote.


        :return: The ship_from of this ShippingQuote.
        :rtype: Contact
        """
        return self._ship_from

    @ship_from.setter
    def ship_from(self, ship_from):
        """Sets the ship_from of this ShippingQuote.


        :param ship_from: The ship_from of this ShippingQuote.
        :type ship_from: Contact
        """

        self._ship_from = ship_from

    @property
    def ship_to(self):
        """Gets the ship_to of this ShippingQuote.


        :return: The ship_to of this ShippingQuote.
        :rtype: Contact
        """
        return self._ship_to

    @ship_to.setter
    def ship_to(self, ship_to):
        """Sets the ship_to of this ShippingQuote.


        :param ship_to: The ship_to of this ShippingQuote.
        :type ship_to: Contact
        """

        self._ship_to = ship_to

    @property
    def shipping_quote_id(self):
        """Gets the shipping_quote_id of this ShippingQuote.

        The unique eBay-assigned ID for this shipping quote. The value of this field is associated with a specific package, based on its origin, destination, and size.

        :return: The shipping_quote_id of this ShippingQuote.
        :rtype: str
        """
        return self._shipping_quote_id

    @shipping_quote_id.setter
    def shipping_quote_id(self, shipping_quote_id):
        """Sets the shipping_quote_id of this ShippingQuote.

        The unique eBay-assigned ID for this shipping quote. The value of this field is associated with a specific package, based on its origin, destination, and size.

        :param shipping_quote_id: The shipping_quote_id of this ShippingQuote.
        :type shipping_quote_id: str
        """

        self._shipping_quote_id = shipping_quote_id

    @property
    def warnings(self):
        """Gets the warnings of this ShippingQuote.

        A list of any warnings triggered by the request.

        :return: The warnings of this ShippingQuote.
        :rtype: List[Error]
        """
        return self._warnings

    @warnings.setter
    def warnings(self, warnings):
        """Sets the warnings of this ShippingQuote.

        A list of any warnings triggered by the request.

        :param warnings: The warnings of this ShippingQuote.
        :type warnings: List[Error]
        """

        self._warnings = warnings
