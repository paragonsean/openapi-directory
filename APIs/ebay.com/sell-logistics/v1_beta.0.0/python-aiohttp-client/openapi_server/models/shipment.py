# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact import Contact
from openapi_server.models.order import Order
from openapi_server.models.package_specification import PackageSpecification
from openapi_server.models.purchased_rate import PurchasedRate
from openapi_server.models.shipment_cancellation import ShipmentCancellation
from openapi_server import util


class Shipment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cancellation: ShipmentCancellation=None, creation_date: str=None, label_custom_message: str=None, label_download_url: str=None, label_size: str=None, orders: List[Order]=None, package_specification: PackageSpecification=None, rate: PurchasedRate=None, return_to: Contact=None, ship_from: Contact=None, ship_to: Contact=None, shipment_id: str=None, shipment_tracking_number: str=None):
        """Shipment - a model defined in OpenAPI

        :param cancellation: The cancellation of this Shipment.
        :param creation_date: The creation_date of this Shipment.
        :param label_custom_message: The label_custom_message of this Shipment.
        :param label_download_url: The label_download_url of this Shipment.
        :param label_size: The label_size of this Shipment.
        :param orders: The orders of this Shipment.
        :param package_specification: The package_specification of this Shipment.
        :param rate: The rate of this Shipment.
        :param return_to: The return_to of this Shipment.
        :param ship_from: The ship_from of this Shipment.
        :param ship_to: The ship_to of this Shipment.
        :param shipment_id: The shipment_id of this Shipment.
        :param shipment_tracking_number: The shipment_tracking_number of this Shipment.
        """
        self.openapi_types = {
            'cancellation': ShipmentCancellation,
            'creation_date': str,
            'label_custom_message': str,
            'label_download_url': str,
            'label_size': str,
            'orders': List[Order],
            'package_specification': PackageSpecification,
            'rate': PurchasedRate,
            'return_to': Contact,
            'ship_from': Contact,
            'ship_to': Contact,
            'shipment_id': str,
            'shipment_tracking_number': str
        }

        self.attribute_map = {
            'cancellation': 'cancellation',
            'creation_date': 'creationDate',
            'label_custom_message': 'labelCustomMessage',
            'label_download_url': 'labelDownloadUrl',
            'label_size': 'labelSize',
            'orders': 'orders',
            'package_specification': 'packageSpecification',
            'rate': 'rate',
            'return_to': 'returnTo',
            'ship_from': 'shipFrom',
            'ship_to': 'shipTo',
            'shipment_id': 'shipmentId',
            'shipment_tracking_number': 'shipmentTrackingNumber'
        }

        self._cancellation = cancellation
        self._creation_date = creation_date
        self._label_custom_message = label_custom_message
        self._label_download_url = label_download_url
        self._label_size = label_size
        self._orders = orders
        self._package_specification = package_specification
        self._rate = rate
        self._return_to = return_to
        self._ship_from = ship_from
        self._ship_to = ship_to
        self._shipment_id = shipment_id
        self._shipment_tracking_number = shipment_tracking_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Shipment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Shipment of this Shipment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cancellation(self):
        """Gets the cancellation of this Shipment.


        :return: The cancellation of this Shipment.
        :rtype: ShipmentCancellation
        """
        return self._cancellation

    @cancellation.setter
    def cancellation(self, cancellation):
        """Sets the cancellation of this Shipment.


        :param cancellation: The cancellation of this Shipment.
        :type cancellation: ShipmentCancellation
        """

        self._cancellation = cancellation

    @property
    def creation_date(self):
        """Gets the creation_date of this Shipment.

        The date and time the shipment was created, formatted as an <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\" title=\"https://www.iso.org\" target=\"_blank\">ISO 8601</a> string, which is based on the 24-hour Coordinated Universal Time (UTC) clock.  <br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[HH]:[MM]:[SS].[SSS]Z</code> <br><b>Example:</b> <code>2018-08-20T07:09:00.000Z</code>

        :return: The creation_date of this Shipment.
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this Shipment.

        The date and time the shipment was created, formatted as an <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\" title=\"https://www.iso.org\" target=\"_blank\">ISO 8601</a> string, which is based on the 24-hour Coordinated Universal Time (UTC) clock.  <br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[HH]:[MM]:[SS].[SSS]Z</code> <br><b>Example:</b> <code>2018-08-20T07:09:00.000Z</code>

        :param creation_date: The creation_date of this Shipment.
        :type creation_date: str
        """

        self._creation_date = creation_date

    @property
    def label_custom_message(self):
        """Gets the label_custom_message of this Shipment.

        If supported by the selected shipping carrier, this field can contain optional seller text to be printed on the shipping label.

        :return: The label_custom_message of this Shipment.
        :rtype: str
        """
        return self._label_custom_message

    @label_custom_message.setter
    def label_custom_message(self, label_custom_message):
        """Sets the label_custom_message of this Shipment.

        If supported by the selected shipping carrier, this field can contain optional seller text to be printed on the shipping label.

        :param label_custom_message: The label_custom_message of this Shipment.
        :type label_custom_message: str
        """

        self._label_custom_message = label_custom_message

    @property
    def label_download_url(self):
        """Gets the label_download_url of this Shipment.

        The direct URL the seller can use to download an image of the shipping label. By default, the file format is PDF. See <a href=\"/api-docs/sell/logistics/resources/shipment/methods/downloadLabelFile\">downloadLabelFile</a> for requesting different response file formats.

        :return: The label_download_url of this Shipment.
        :rtype: str
        """
        return self._label_download_url

    @label_download_url.setter
    def label_download_url(self, label_download_url):
        """Sets the label_download_url of this Shipment.

        The direct URL the seller can use to download an image of the shipping label. By default, the file format is PDF. See <a href=\"/api-docs/sell/logistics/resources/shipment/methods/downloadLabelFile\">downloadLabelFile</a> for requesting different response file formats.

        :param label_download_url: The label_download_url of this Shipment.
        :type label_download_url: str
        """

        self._label_download_url = label_download_url

    @property
    def label_size(self):
        """Gets the label_size of this Shipment.

        The seller's desired label size. The support for multi-sized labels is shipping-carrier specific and if the size requested in the <b>creaateFromShippingQuote</b> call matches a size the carrier supports, the value will be represented here in the shipment. <br><br>Currently, the only valid value is: <code>4\"x6\"</code>

        :return: The label_size of this Shipment.
        :rtype: str
        """
        return self._label_size

    @label_size.setter
    def label_size(self, label_size):
        """Sets the label_size of this Shipment.

        The seller's desired label size. The support for multi-sized labels is shipping-carrier specific and if the size requested in the <b>creaateFromShippingQuote</b> call matches a size the carrier supports, the value will be represented here in the shipment. <br><br>Currently, the only valid value is: <code>4\"x6\"</code>

        :param label_size: The label_size of this Shipment.
        :type label_size: str
        """

        self._label_size = label_size

    @property
    def orders(self):
        """Gets the orders of this Shipment.

        This list value is optionally assigned by the seller. When present, each element in the returned list contains seller-assigned information about an order (such as an order number). Because a package can contain all or part of one or more orders, this field provides a way for sellers to identify the packages that contain specific orders.

        :return: The orders of this Shipment.
        :rtype: List[Order]
        """
        return self._orders

    @orders.setter
    def orders(self, orders):
        """Sets the orders of this Shipment.

        This list value is optionally assigned by the seller. When present, each element in the returned list contains seller-assigned information about an order (such as an order number). Because a package can contain all or part of one or more orders, this field provides a way for sellers to identify the packages that contain specific orders.

        :param orders: The orders of this Shipment.
        :type orders: List[Order]
        """

        self._orders = orders

    @property
    def package_specification(self):
        """Gets the package_specification of this Shipment.


        :return: The package_specification of this Shipment.
        :rtype: PackageSpecification
        """
        return self._package_specification

    @package_specification.setter
    def package_specification(self, package_specification):
        """Sets the package_specification of this Shipment.


        :param package_specification: The package_specification of this Shipment.
        :type package_specification: PackageSpecification
        """

        self._package_specification = package_specification

    @property
    def rate(self):
        """Gets the rate of this Shipment.


        :return: The rate of this Shipment.
        :rtype: PurchasedRate
        """
        return self._rate

    @rate.setter
    def rate(self, rate):
        """Sets the rate of this Shipment.


        :param rate: The rate of this Shipment.
        :type rate: PurchasedRate
        """

        self._rate = rate

    @property
    def return_to(self):
        """Gets the return_to of this Shipment.


        :return: The return_to of this Shipment.
        :rtype: Contact
        """
        return self._return_to

    @return_to.setter
    def return_to(self, return_to):
        """Sets the return_to of this Shipment.


        :param return_to: The return_to of this Shipment.
        :type return_to: Contact
        """

        self._return_to = return_to

    @property
    def ship_from(self):
        """Gets the ship_from of this Shipment.


        :return: The ship_from of this Shipment.
        :rtype: Contact
        """
        return self._ship_from

    @ship_from.setter
    def ship_from(self, ship_from):
        """Sets the ship_from of this Shipment.


        :param ship_from: The ship_from of this Shipment.
        :type ship_from: Contact
        """

        self._ship_from = ship_from

    @property
    def ship_to(self):
        """Gets the ship_to of this Shipment.


        :return: The ship_to of this Shipment.
        :rtype: Contact
        """
        return self._ship_to

    @ship_to.setter
    def ship_to(self, ship_to):
        """Sets the ship_to of this Shipment.


        :param ship_to: The ship_to of this Shipment.
        :type ship_to: Contact
        """

        self._ship_to = ship_to

    @property
    def shipment_id(self):
        """Gets the shipment_id of this Shipment.

        The unique eBay-assigned ID for the shipment. The ID is generated when the shipment is created by a call to <b>createFromShippingQuote</b>.

        :return: The shipment_id of this Shipment.
        :rtype: str
        """
        return self._shipment_id

    @shipment_id.setter
    def shipment_id(self, shipment_id):
        """Sets the shipment_id of this Shipment.

        The unique eBay-assigned ID for the shipment. The ID is generated when the shipment is created by a call to <b>createFromShippingQuote</b>.

        :param shipment_id: The shipment_id of this Shipment.
        :type shipment_id: str
        """

        self._shipment_id = shipment_id

    @property
    def shipment_tracking_number(self):
        """Gets the shipment_tracking_number of this Shipment.

        A unique carrier-assigned ID string that can be used to track the shipment.

        :return: The shipment_tracking_number of this Shipment.
        :rtype: str
        """
        return self._shipment_tracking_number

    @shipment_tracking_number.setter
    def shipment_tracking_number(self, shipment_tracking_number):
        """Sets the shipment_tracking_number of this Shipment.

        A unique carrier-assigned ID string that can be used to track the shipment.

        :param shipment_tracking_number: The shipment_tracking_number of this Shipment.
        :type shipment_tracking_number: str
        """

        self._shipment_tracking_number = shipment_tracking_number
