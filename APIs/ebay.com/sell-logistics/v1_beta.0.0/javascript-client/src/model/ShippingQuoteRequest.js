/**
 * Logistics API
 * <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited\" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units.</span><br /><br />The <b>Logistics API</b> resources offer the following capabilities: <ul><li><b>shipping_quote</b> &ndash; Consolidates into a list a set of live shipping rates, or quotes, from which you can select a rate to ship a package.</li> <li><b>shipment</b> &ndash; Creates a \"shipment\" for the selected shipping rate.</li></ul> Call <b>createShippingQuote</b> to get a list of live shipping rates. The rates returned are all valid for a specific time window and all quoted prices are at eBay-negotiated rates. <br><br>Select one of the live rates and using its associated <b>rateId</b>, create a \"shipment\" for the package by calling <b>createFromShippingQuote</b>. Creating a shipment completes an agreement, and the cost of the base service and any added shipping options are summed into the returned <b>totalShippingCost</b> value. This action also generates a shipping label that you can use to ship the package.  The total cost of the shipment is incurred when the package is shipped using the supplied shipping label.  <p class=\"tablenote\"><b>Important!</b> Sellers must set up a payment method via their eBay account before they can use the methods in this API to create a shipment and the associated shipping label.</p>
 *
 * The version of the OpenAPI document: v1_beta.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Contact from './Contact';
import Order from './Order';
import PackageSpecification from './PackageSpecification';

/**
 * The ShippingQuoteRequest model module.
 * @module model/ShippingQuoteRequest
 * @version v1_beta.0.0
 */
class ShippingQuoteRequest {
    /**
     * Constructs a new <code>ShippingQuoteRequest</code>.
     * This complex type defines the request body for &lt;b&gt;createShippingQuote&lt;/b&gt;. Sellers &lt;i&gt;request a quote&lt;/i&gt; for a shipment by defining the \&quot;To\&quot; and \&quot;From\&quot; addresses for the package, plus the package&#39;s size.  &lt;br&gt;&lt;br&gt;Carriers respond by offering up a \&quot;rate\&quot; for the service of theirs that best fits seller&#39;s needs.
     * @alias module:model/ShippingQuoteRequest
     */
    constructor() { 
        
        ShippingQuoteRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShippingQuoteRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShippingQuoteRequest} obj Optional instance to populate.
     * @return {module:model/ShippingQuoteRequest} The populated <code>ShippingQuoteRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShippingQuoteRequest();

            if (data.hasOwnProperty('orders')) {
                obj['orders'] = ApiClient.convertToType(data['orders'], [Order]);
            }
            if (data.hasOwnProperty('packageSpecification')) {
                obj['packageSpecification'] = PackageSpecification.constructFromObject(data['packageSpecification']);
            }
            if (data.hasOwnProperty('shipFrom')) {
                obj['shipFrom'] = Contact.constructFromObject(data['shipFrom']);
            }
            if (data.hasOwnProperty('shipTo')) {
                obj['shipTo'] = Contact.constructFromObject(data['shipTo']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShippingQuoteRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShippingQuoteRequest</code>.
     */
    static validateJSON(data) {
        if (data['orders']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['orders'])) {
                throw new Error("Expected the field `orders` to be an array in the JSON data but got " + data['orders']);
            }
            // validate the optional field `orders` (array)
            for (const item of data['orders']) {
                Order.validateJSON(item);
            };
        }
        // validate the optional field `packageSpecification`
        if (data['packageSpecification']) { // data not null
          PackageSpecification.validateJSON(data['packageSpecification']);
        }
        // validate the optional field `shipFrom`
        if (data['shipFrom']) { // data not null
          Contact.validateJSON(data['shipFrom']);
        }
        // validate the optional field `shipTo`
        if (data['shipTo']) { // data not null
          Contact.validateJSON(data['shipTo']);
        }

        return true;
    }


}



/**
 * A seller-defined list that contains information about the orders in the package. This allows sellers to include information about the line items in the package with the shipment information.  <br><br>A package can contain any number of line items from one or more orders, providing they all ship in the same package.  <br><br><b>Maximum list size:</b> 10
 * @member {Array.<module:model/Order>} orders
 */
ShippingQuoteRequest.prototype['orders'] = undefined;

/**
 * @member {module:model/PackageSpecification} packageSpecification
 */
ShippingQuoteRequest.prototype['packageSpecification'] = undefined;

/**
 * @member {module:model/Contact} shipFrom
 */
ShippingQuoteRequest.prototype['shipFrom'] = undefined;

/**
 * @member {module:model/Contact} shipTo
 */
ShippingQuoteRequest.prototype['shipTo'] = undefined;






export default ShippingQuoteRequest;

