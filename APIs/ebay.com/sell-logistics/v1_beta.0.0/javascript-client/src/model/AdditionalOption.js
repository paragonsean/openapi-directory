/**
 * Logistics API
 * <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited\" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units.</span><br /><br />The <b>Logistics API</b> resources offer the following capabilities: <ul><li><b>shipping_quote</b> &ndash; Consolidates into a list a set of live shipping rates, or quotes, from which you can select a rate to ship a package.</li> <li><b>shipment</b> &ndash; Creates a \"shipment\" for the selected shipping rate.</li></ul> Call <b>createShippingQuote</b> to get a list of live shipping rates. The rates returned are all valid for a specific time window and all quoted prices are at eBay-negotiated rates. <br><br>Select one of the live rates and using its associated <b>rateId</b>, create a \"shipment\" for the package by calling <b>createFromShippingQuote</b>. Creating a shipment completes an agreement, and the cost of the base service and any added shipping options are summed into the returned <b>totalShippingCost</b> value. This action also generates a shipping label that you can use to ship the package.  The total cost of the shipment is incurred when the package is shipped using the supplied shipping label.  <p class=\"tablenote\"><b>Important!</b> Sellers must set up a payment method via their eBay account before they can use the methods in this API to create a shipment and the associated shipping label.</p>
 *
 * The version of the OpenAPI document: v1_beta.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';

/**
 * The AdditionalOption model module.
 * @module model/AdditionalOption
 * @version v1_beta.0.0
 */
class AdditionalOption {
    /**
     * Constructs a new <code>AdditionalOption</code>.
     * This complex type contains information about a shipping option that can be purchased in addition to the base shipping cost of a recommended rate. Additional options for each rate are defined, named, and offered by the selected shipping carrier. Examples include shipping insurance or the requirement for a recipient signature.
     * @alias module:model/AdditionalOption
     */
    constructor() { 
        
        AdditionalOption.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdditionalOption</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdditionalOption} obj Optional instance to populate.
     * @return {module:model/AdditionalOption} The populated <code>AdditionalOption</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdditionalOption();

            if (data.hasOwnProperty('additionalCost')) {
                obj['additionalCost'] = Amount.constructFromObject(data['additionalCost']);
            }
            if (data.hasOwnProperty('optionType')) {
                obj['optionType'] = ApiClient.convertToType(data['optionType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdditionalOption</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdditionalOption</code>.
     */
    static validateJSON(data) {
        // validate the optional field `additionalCost`
        if (data['additionalCost']) { // data not null
          Amount.validateJSON(data['additionalCost']);
        }
        // ensure the json data is a string
        if (data['optionType'] && !(typeof data['optionType'] === 'string' || data['optionType'] instanceof String)) {
            throw new Error("Expected the field `optionType` to be a primitive type in the JSON string but got " + data['optionType']);
        }

        return true;
    }


}



/**
 * @member {module:model/Amount} additionalCost
 */
AdditionalOption.prototype['additionalCost'] = undefined;

/**
 * The name of a shipping option that can be purchased in addition to the base shipping cost of this rate. The value supplied in this field must match exactly the option name as supplied by the selected rate.
 * @member {String} optionType
 */
AdditionalOption.prototype['optionType'] = undefined;






export default AdditionalOption;

