/*
 * Logistics API
 * <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited\" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units.</span><br /><br />The <b>Logistics API</b> resources offer the following capabilities: <ul><li><b>shipping_quote</b> &ndash; Consolidates into a list a set of live shipping rates, or quotes, from which you can select a rate to ship a package.</li> <li><b>shipment</b> &ndash; Creates a \"shipment\" for the selected shipping rate.</li></ul> Call <b>createShippingQuote</b> to get a list of live shipping rates. The rates returned are all valid for a specific time window and all quoted prices are at eBay-negotiated rates. <br><br>Select one of the live rates and using its associated <b>rateId</b>, create a \"shipment\" for the package by calling <b>createFromShippingQuote</b>. Creating a shipment completes an agreement, and the cost of the base service and any added shipping options are summed into the returned <b>totalShippingCost</b> value. This action also generates a shipping label that you can use to ship the package.  The total cost of the shipment is incurred when the package is shipped using the supplied shipping label.  <p class=\"tablenote\"><b>Important!</b> Sellers must set up a payment method via their eBay account before they can use the methods in this API to create a shipment and the associated shipping label.</p>
 *
 * The version of the OpenAPI document: v1_beta.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AdditionalOption;
import org.openapitools.client.model.Amount;
import org.openapitools.client.model.PickupSlot;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Rate
 */
public class RateTest {
    private final Rate model = new Rate();

    /**
     * Model tests for Rate
     */
    @Test
    public void testRate() {
        // TODO: test Rate
    }

    /**
     * Test the property 'additionalOptions'
     */
    @Test
    public void additionalOptionsTest() {
        // TODO: test additionalOptions
    }

    /**
     * Test the property 'baseShippingCost'
     */
    @Test
    public void baseShippingCostTest() {
        // TODO: test baseShippingCost
    }

    /**
     * Test the property 'destinationTimeZone'
     */
    @Test
    public void destinationTimeZoneTest() {
        // TODO: test destinationTimeZone
    }

    /**
     * Test the property 'maxEstimatedDeliveryDate'
     */
    @Test
    public void maxEstimatedDeliveryDateTest() {
        // TODO: test maxEstimatedDeliveryDate
    }

    /**
     * Test the property 'minEstimatedDeliveryDate'
     */
    @Test
    public void minEstimatedDeliveryDateTest() {
        // TODO: test minEstimatedDeliveryDate
    }

    /**
     * Test the property 'pickupNetworks'
     */
    @Test
    public void pickupNetworksTest() {
        // TODO: test pickupNetworks
    }

    /**
     * Test the property 'pickupSlots'
     */
    @Test
    public void pickupSlotsTest() {
        // TODO: test pickupSlots
    }

    /**
     * Test the property 'pickupType'
     */
    @Test
    public void pickupTypeTest() {
        // TODO: test pickupType
    }

    /**
     * Test the property 'rateId'
     */
    @Test
    public void rateIdTest() {
        // TODO: test rateId
    }

    /**
     * Test the property 'rateRecommendation'
     */
    @Test
    public void rateRecommendationTest() {
        // TODO: test rateRecommendation
    }

    /**
     * Test the property 'shippingCarrierCode'
     */
    @Test
    public void shippingCarrierCodeTest() {
        // TODO: test shippingCarrierCode
    }

    /**
     * Test the property 'shippingCarrierName'
     */
    @Test
    public void shippingCarrierNameTest() {
        // TODO: test shippingCarrierName
    }

    /**
     * Test the property 'shippingServiceCode'
     */
    @Test
    public void shippingServiceCodeTest() {
        // TODO: test shippingServiceCode
    }

    /**
     * Test the property 'shippingServiceName'
     */
    @Test
    public void shippingServiceNameTest() {
        // TODO: test shippingServiceName
    }

}
