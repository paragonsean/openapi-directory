/**
 * Logistics API
 * <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited\" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units.</span><br /><br />The <b>Logistics API</b> resources offer the following capabilities: <ul><li><b>shipping_quote</b> &ndash; Consolidates into a list a set of live shipping rates, or quotes, from which you can select a rate to ship a package.</li> <li><b>shipment</b> &ndash; Creates a \"shipment\" for the selected shipping rate.</li></ul> Call <b>createShippingQuote</b> to get a list of live shipping rates. The rates returned are all valid for a specific time window and all quoted prices are at eBay-negotiated rates. <br><br>Select one of the live rates and using its associated <b>rateId</b>, create a \"shipment\" for the package by calling <b>createFromShippingQuote</b>. Creating a shipment completes an agreement, and the cost of the base service and any added shipping options are summed into the returned <b>totalShippingCost</b> value. This action also generates a shipping label that you can use to ship the package.  The total cost of the shipment is incurred when the package is shipped using the supplied shipping label.  <p class=\"tablenote\"><b>Important!</b> Sellers must set up a payment method via their eBay account before they can use the methods in this API to create a shipment and the associated shipping label.</p>
 *
 * The version of the OpenAPI document: v1_beta.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateShipmentFromQuoteRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateShipmentFromQuoteRequest::OAICreateShipmentFromQuoteRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateShipmentFromQuoteRequest::OAICreateShipmentFromQuoteRequest() {
    this->initializeModel();
}

OAICreateShipmentFromQuoteRequest::~OAICreateShipmentFromQuoteRequest() {}

void OAICreateShipmentFromQuoteRequest::initializeModel() {

    m_additional_options_isSet = false;
    m_additional_options_isValid = false;

    m_label_custom_message_isSet = false;
    m_label_custom_message_isValid = false;

    m_label_size_isSet = false;
    m_label_size_isValid = false;

    m_rate_id_isSet = false;
    m_rate_id_isValid = false;

    m_return_to_isSet = false;
    m_return_to_isValid = false;

    m_shipping_quote_id_isSet = false;
    m_shipping_quote_id_isValid = false;
}

void OAICreateShipmentFromQuoteRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateShipmentFromQuoteRequest::fromJsonObject(QJsonObject json) {

    m_additional_options_isValid = ::OpenAPI::fromJsonValue(m_additional_options, json[QString("additionalOptions")]);
    m_additional_options_isSet = !json[QString("additionalOptions")].isNull() && m_additional_options_isValid;

    m_label_custom_message_isValid = ::OpenAPI::fromJsonValue(m_label_custom_message, json[QString("labelCustomMessage")]);
    m_label_custom_message_isSet = !json[QString("labelCustomMessage")].isNull() && m_label_custom_message_isValid;

    m_label_size_isValid = ::OpenAPI::fromJsonValue(m_label_size, json[QString("labelSize")]);
    m_label_size_isSet = !json[QString("labelSize")].isNull() && m_label_size_isValid;

    m_rate_id_isValid = ::OpenAPI::fromJsonValue(m_rate_id, json[QString("rateId")]);
    m_rate_id_isSet = !json[QString("rateId")].isNull() && m_rate_id_isValid;

    m_return_to_isValid = ::OpenAPI::fromJsonValue(m_return_to, json[QString("returnTo")]);
    m_return_to_isSet = !json[QString("returnTo")].isNull() && m_return_to_isValid;

    m_shipping_quote_id_isValid = ::OpenAPI::fromJsonValue(m_shipping_quote_id, json[QString("shippingQuoteId")]);
    m_shipping_quote_id_isSet = !json[QString("shippingQuoteId")].isNull() && m_shipping_quote_id_isValid;
}

QString OAICreateShipmentFromQuoteRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateShipmentFromQuoteRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_options.size() > 0) {
        obj.insert(QString("additionalOptions"), ::OpenAPI::toJsonValue(m_additional_options));
    }
    if (m_label_custom_message_isSet) {
        obj.insert(QString("labelCustomMessage"), ::OpenAPI::toJsonValue(m_label_custom_message));
    }
    if (m_label_size_isSet) {
        obj.insert(QString("labelSize"), ::OpenAPI::toJsonValue(m_label_size));
    }
    if (m_rate_id_isSet) {
        obj.insert(QString("rateId"), ::OpenAPI::toJsonValue(m_rate_id));
    }
    if (m_return_to.isSet()) {
        obj.insert(QString("returnTo"), ::OpenAPI::toJsonValue(m_return_to));
    }
    if (m_shipping_quote_id_isSet) {
        obj.insert(QString("shippingQuoteId"), ::OpenAPI::toJsonValue(m_shipping_quote_id));
    }
    return obj;
}

QList<OAIAdditionalOption> OAICreateShipmentFromQuoteRequest::getAdditionalOptions() const {
    return m_additional_options;
}
void OAICreateShipmentFromQuoteRequest::setAdditionalOptions(const QList<OAIAdditionalOption> &additional_options) {
    m_additional_options = additional_options;
    m_additional_options_isSet = true;
}

bool OAICreateShipmentFromQuoteRequest::is_additional_options_Set() const{
    return m_additional_options_isSet;
}

bool OAICreateShipmentFromQuoteRequest::is_additional_options_Valid() const{
    return m_additional_options_isValid;
}

QString OAICreateShipmentFromQuoteRequest::getLabelCustomMessage() const {
    return m_label_custom_message;
}
void OAICreateShipmentFromQuoteRequest::setLabelCustomMessage(const QString &label_custom_message) {
    m_label_custom_message = label_custom_message;
    m_label_custom_message_isSet = true;
}

bool OAICreateShipmentFromQuoteRequest::is_label_custom_message_Set() const{
    return m_label_custom_message_isSet;
}

bool OAICreateShipmentFromQuoteRequest::is_label_custom_message_Valid() const{
    return m_label_custom_message_isValid;
}

QString OAICreateShipmentFromQuoteRequest::getLabelSize() const {
    return m_label_size;
}
void OAICreateShipmentFromQuoteRequest::setLabelSize(const QString &label_size) {
    m_label_size = label_size;
    m_label_size_isSet = true;
}

bool OAICreateShipmentFromQuoteRequest::is_label_size_Set() const{
    return m_label_size_isSet;
}

bool OAICreateShipmentFromQuoteRequest::is_label_size_Valid() const{
    return m_label_size_isValid;
}

QString OAICreateShipmentFromQuoteRequest::getRateId() const {
    return m_rate_id;
}
void OAICreateShipmentFromQuoteRequest::setRateId(const QString &rate_id) {
    m_rate_id = rate_id;
    m_rate_id_isSet = true;
}

bool OAICreateShipmentFromQuoteRequest::is_rate_id_Set() const{
    return m_rate_id_isSet;
}

bool OAICreateShipmentFromQuoteRequest::is_rate_id_Valid() const{
    return m_rate_id_isValid;
}

OAIContact OAICreateShipmentFromQuoteRequest::getReturnTo() const {
    return m_return_to;
}
void OAICreateShipmentFromQuoteRequest::setReturnTo(const OAIContact &return_to) {
    m_return_to = return_to;
    m_return_to_isSet = true;
}

bool OAICreateShipmentFromQuoteRequest::is_return_to_Set() const{
    return m_return_to_isSet;
}

bool OAICreateShipmentFromQuoteRequest::is_return_to_Valid() const{
    return m_return_to_isValid;
}

QString OAICreateShipmentFromQuoteRequest::getShippingQuoteId() const {
    return m_shipping_quote_id;
}
void OAICreateShipmentFromQuoteRequest::setShippingQuoteId(const QString &shipping_quote_id) {
    m_shipping_quote_id = shipping_quote_id;
    m_shipping_quote_id_isSet = true;
}

bool OAICreateShipmentFromQuoteRequest::is_shipping_quote_id_Set() const{
    return m_shipping_quote_id_isSet;
}

bool OAICreateShipmentFromQuoteRequest::is_shipping_quote_id_Valid() const{
    return m_shipping_quote_id_isValid;
}

bool OAICreateShipmentFromQuoteRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_options.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_custom_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rate_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_to.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_quote_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateShipmentFromQuoteRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
