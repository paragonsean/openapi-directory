/**
 * Logistics API
 * <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited\" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units.</span><br /><br />The <b>Logistics API</b> resources offer the following capabilities: <ul><li><b>shipping_quote</b> &ndash; Consolidates into a list a set of live shipping rates, or quotes, from which you can select a rate to ship a package.</li> <li><b>shipment</b> &ndash; Creates a \"shipment\" for the selected shipping rate.</li></ul> Call <b>createShippingQuote</b> to get a list of live shipping rates. The rates returned are all valid for a specific time window and all quoted prices are at eBay-negotiated rates. <br><br>Select one of the live rates and using its associated <b>rateId</b>, create a \"shipment\" for the package by calling <b>createFromShippingQuote</b>. Creating a shipment completes an agreement, and the cost of the base service and any added shipping options are summed into the returned <b>totalShippingCost</b> value. This action also generates a shipping label that you can use to ship the package.  The total cost of the shipment is incurred when the package is shipped using the supplied shipping label.  <p class=\"tablenote\"><b>Important!</b> Sellers must set up a payment method via their eBay account before they can use the methods in this API to create a shipment and the associated shipping label.</p>
 *
 * The version of the OpenAPI document: v1_beta.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRate.h
 *
 * This complex type contains live quote information about a shipping service that&#39;s available for a given shipping quote request, including the shipping carrier and service, delivery window, shipping cost, and additional shipping options.
 */

#ifndef OAIRate_H
#define OAIRate_H

#include <QJsonObject>

#include "OAIAdditionalOption.h"
#include "OAIAmount.h"
#include "OAIPickupSlot.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdditionalOption;
class OAIAmount;
class OAIPickupSlot;

class OAIRate : public OAIObject {
public:
    OAIRate();
    OAIRate(QString json);
    ~OAIRate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAdditionalOption> getAdditionalOptions() const;
    void setAdditionalOptions(const QList<OAIAdditionalOption> &additional_options);
    bool is_additional_options_Set() const;
    bool is_additional_options_Valid() const;

    OAIAmount getBaseShippingCost() const;
    void setBaseShippingCost(const OAIAmount &base_shipping_cost);
    bool is_base_shipping_cost_Set() const;
    bool is_base_shipping_cost_Valid() const;

    QString getDestinationTimeZone() const;
    void setDestinationTimeZone(const QString &destination_time_zone);
    bool is_destination_time_zone_Set() const;
    bool is_destination_time_zone_Valid() const;

    QString getMaxEstimatedDeliveryDate() const;
    void setMaxEstimatedDeliveryDate(const QString &max_estimated_delivery_date);
    bool is_max_estimated_delivery_date_Set() const;
    bool is_max_estimated_delivery_date_Valid() const;

    QString getMinEstimatedDeliveryDate() const;
    void setMinEstimatedDeliveryDate(const QString &min_estimated_delivery_date);
    bool is_min_estimated_delivery_date_Set() const;
    bool is_min_estimated_delivery_date_Valid() const;

    QList<QString> getPickupNetworks() const;
    void setPickupNetworks(const QList<QString> &pickup_networks);
    bool is_pickup_networks_Set() const;
    bool is_pickup_networks_Valid() const;

    QList<OAIPickupSlot> getPickupSlots() const;
    void setPickupSlots(const QList<OAIPickupSlot> &pickup_slots);
    bool is_pickup_slots_Set() const;
    bool is_pickup_slots_Valid() const;

    QString getPickupType() const;
    void setPickupType(const QString &pickup_type);
    bool is_pickup_type_Set() const;
    bool is_pickup_type_Valid() const;

    QString getRateId() const;
    void setRateId(const QString &rate_id);
    bool is_rate_id_Set() const;
    bool is_rate_id_Valid() const;

    QList<QString> getRateRecommendation() const;
    void setRateRecommendation(const QList<QString> &rate_recommendation);
    bool is_rate_recommendation_Set() const;
    bool is_rate_recommendation_Valid() const;

    QString getShippingCarrierCode() const;
    void setShippingCarrierCode(const QString &shipping_carrier_code);
    bool is_shipping_carrier_code_Set() const;
    bool is_shipping_carrier_code_Valid() const;

    QString getShippingCarrierName() const;
    void setShippingCarrierName(const QString &shipping_carrier_name);
    bool is_shipping_carrier_name_Set() const;
    bool is_shipping_carrier_name_Valid() const;

    QString getShippingServiceCode() const;
    void setShippingServiceCode(const QString &shipping_service_code);
    bool is_shipping_service_code_Set() const;
    bool is_shipping_service_code_Valid() const;

    QString getShippingServiceName() const;
    void setShippingServiceName(const QString &shipping_service_name);
    bool is_shipping_service_name_Set() const;
    bool is_shipping_service_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAdditionalOption> m_additional_options;
    bool m_additional_options_isSet;
    bool m_additional_options_isValid;

    OAIAmount m_base_shipping_cost;
    bool m_base_shipping_cost_isSet;
    bool m_base_shipping_cost_isValid;

    QString m_destination_time_zone;
    bool m_destination_time_zone_isSet;
    bool m_destination_time_zone_isValid;

    QString m_max_estimated_delivery_date;
    bool m_max_estimated_delivery_date_isSet;
    bool m_max_estimated_delivery_date_isValid;

    QString m_min_estimated_delivery_date;
    bool m_min_estimated_delivery_date_isSet;
    bool m_min_estimated_delivery_date_isValid;

    QList<QString> m_pickup_networks;
    bool m_pickup_networks_isSet;
    bool m_pickup_networks_isValid;

    QList<OAIPickupSlot> m_pickup_slots;
    bool m_pickup_slots_isSet;
    bool m_pickup_slots_isValid;

    QString m_pickup_type;
    bool m_pickup_type_isSet;
    bool m_pickup_type_isValid;

    QString m_rate_id;
    bool m_rate_id_isSet;
    bool m_rate_id_isValid;

    QList<QString> m_rate_recommendation;
    bool m_rate_recommendation_isSet;
    bool m_rate_recommendation_isValid;

    QString m_shipping_carrier_code;
    bool m_shipping_carrier_code_isSet;
    bool m_shipping_carrier_code_isValid;

    QString m_shipping_carrier_name;
    bool m_shipping_carrier_name_isSet;
    bool m_shipping_carrier_name_isValid;

    QString m_shipping_service_code;
    bool m_shipping_service_code_isSet;
    bool m_shipping_service_code_isValid;

    QString m_shipping_service_name;
    bool m_shipping_service_name_isSet;
    bool m_shipping_service_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRate)

#endif // OAIRate_H
