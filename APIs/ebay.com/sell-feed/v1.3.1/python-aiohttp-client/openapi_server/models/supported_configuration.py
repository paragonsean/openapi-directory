# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SupportedConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_value: str=None, _property: str=None, usage: str=None):
        """SupportedConfiguration - a model defined in OpenAPI

        :param default_value: The default_value of this SupportedConfiguration.
        :param _property: The _property of this SupportedConfiguration.
        :param usage: The usage of this SupportedConfiguration.
        """
        self.openapi_types = {
            'default_value': str,
            '_property': str,
            'usage': str
        }

        self.attribute_map = {
            'default_value': 'defaultValue',
            '_property': 'property',
            'usage': 'usage'
        }

        self._default_value = default_value
        self.__property = _property
        self._usage = usage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SupportedConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SupportedConfiguration of this SupportedConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_value(self):
        """Gets the default_value of this SupportedConfiguration.

        The default value for the property. If a value is omitted from the schedule and a default value is supplied, the default value is used.

        :return: The default_value of this SupportedConfiguration.
        :rtype: str
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """Sets the default_value of this SupportedConfiguration.

        The default value for the property. If a value is omitted from the schedule and a default value is supplied, the default value is used.

        :param default_value: The default_value of this SupportedConfiguration.
        :type default_value: str
        """

        self._default_value = default_value

    @property
    def _property(self):
        """Gets the _property of this SupportedConfiguration.

        Properties supported by the template. Properties can include the following: <ul><li><b>scheduleStartDate:</b> The timestamp that the report generation (subscription) begins. After this timestamp, the schedule status becomes active until either the scheduleEndDate occurs or the scheduleTemplate becomes inactive. Format: UTC <code>yyyy-MM-dd<strong>T</strong>HH<strong>Z</strong></code></li><li><b>scheduleEndDate:</b> The timestamp that the report generation (subscription) ends. After this date, the schedule status becomes INACTIVE. Format: UTC <code>yyyy-MM-dd<strong>T</strong>HH<strong>Z</strong></code></li><li><b>schemaVersion:</b> The schema version of the schedule templates feedType. This field is required if the feedType has a schema version.</li><li><b>preferredTriggerDayOfMonth:</b> The preferred day of the month to trigger the schedule. </li><li><b>preferredTriggerDayOfWeek:</b> The preferred day of the week to trigger the schedule. </li><li><b>preferredTriggerHour:</b> The preferred two-digit hour of the day to trigger the schedule. Format: UTC <code>hhZ</code></li><ul>

        :return: The _property of this SupportedConfiguration.
        :rtype: str
        """
        return self.__property

    @_property.setter
    def _property(self, _property):
        """Sets the _property of this SupportedConfiguration.

        Properties supported by the template. Properties can include the following: <ul><li><b>scheduleStartDate:</b> The timestamp that the report generation (subscription) begins. After this timestamp, the schedule status becomes active until either the scheduleEndDate occurs or the scheduleTemplate becomes inactive. Format: UTC <code>yyyy-MM-dd<strong>T</strong>HH<strong>Z</strong></code></li><li><b>scheduleEndDate:</b> The timestamp that the report generation (subscription) ends. After this date, the schedule status becomes INACTIVE. Format: UTC <code>yyyy-MM-dd<strong>T</strong>HH<strong>Z</strong></code></li><li><b>schemaVersion:</b> The schema version of the schedule templates feedType. This field is required if the feedType has a schema version.</li><li><b>preferredTriggerDayOfMonth:</b> The preferred day of the month to trigger the schedule. </li><li><b>preferredTriggerDayOfWeek:</b> The preferred day of the week to trigger the schedule. </li><li><b>preferredTriggerHour:</b> The preferred two-digit hour of the day to trigger the schedule. Format: UTC <code>hhZ</code></li><ul>

        :param _property: The _property of this SupportedConfiguration.
        :type _property: str
        """

        self.__property = _property

    @property
    def usage(self):
        """Gets the usage of this SupportedConfiguration.

        Whether the specified property is REQUIRED or OPTIONAL. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:ConfigurationsUsageEnum'>eBay API documentation</a>

        :return: The usage of this SupportedConfiguration.
        :rtype: str
        """
        return self._usage

    @usage.setter
    def usage(self, usage):
        """Sets the usage of this SupportedConfiguration.

        Whether the specified property is REQUIRED or OPTIONAL. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:ConfigurationsUsageEnum'>eBay API documentation</a>

        :param usage: The usage of this SupportedConfiguration.
        :type usage: str
        """

        self._usage = usage
