# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.customer_service_metrics_filter_criteria import CustomerServiceMetricsFilterCriteria
from openapi_server import util


class ServiceMetricsTask(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, completion_date: str=None, creation_date: str=None, detail_href: str=None, feed_type: str=None, filter_criteria: CustomerServiceMetricsFilterCriteria=None, schema_version: str=None, status: str=None, task_id: str=None):
        """ServiceMetricsTask - a model defined in OpenAPI

        :param completion_date: The completion_date of this ServiceMetricsTask.
        :param creation_date: The creation_date of this ServiceMetricsTask.
        :param detail_href: The detail_href of this ServiceMetricsTask.
        :param feed_type: The feed_type of this ServiceMetricsTask.
        :param filter_criteria: The filter_criteria of this ServiceMetricsTask.
        :param schema_version: The schema_version of this ServiceMetricsTask.
        :param status: The status of this ServiceMetricsTask.
        :param task_id: The task_id of this ServiceMetricsTask.
        """
        self.openapi_types = {
            'completion_date': str,
            'creation_date': str,
            'detail_href': str,
            'feed_type': str,
            'filter_criteria': CustomerServiceMetricsFilterCriteria,
            'schema_version': str,
            'status': str,
            'task_id': str
        }

        self.attribute_map = {
            'completion_date': 'completionDate',
            'creation_date': 'creationDate',
            'detail_href': 'detailHref',
            'feed_type': 'feedType',
            'filter_criteria': 'filterCriteria',
            'schema_version': 'schemaVersion',
            'status': 'status',
            'task_id': 'taskId'
        }

        self._completion_date = completion_date
        self._creation_date = creation_date
        self._detail_href = detail_href
        self._feed_type = feed_type
        self._filter_criteria = filter_criteria
        self._schema_version = schema_version
        self._status = status
        self._task_id = task_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceMetricsTask':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceMetricsTask of this ServiceMetricsTask.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def completion_date(self):
        """Gets the completion_date of this ServiceMetricsTask.

        The timestamp when the customer service metrics task went into the <code>COMPLETED</code> or <code>COMPLETED_WITH_ERROR</code> state. This field is only returned if the status is one of the two completed values. This state means that eBay has compiled the report for the seller based on the seller’s filter criteria, and the seller can run a <strong>getResultFile</strong> call to download the report.

        :return: The completion_date of this ServiceMetricsTask.
        :rtype: str
        """
        return self._completion_date

    @completion_date.setter
    def completion_date(self, completion_date):
        """Sets the completion_date of this ServiceMetricsTask.

        The timestamp when the customer service metrics task went into the <code>COMPLETED</code> or <code>COMPLETED_WITH_ERROR</code> state. This field is only returned if the status is one of the two completed values. This state means that eBay has compiled the report for the seller based on the seller’s filter criteria, and the seller can run a <strong>getResultFile</strong> call to download the report.

        :param completion_date: The completion_date of this ServiceMetricsTask.
        :type completion_date: str
        """

        self._completion_date = completion_date

    @property
    def creation_date(self):
        """Gets the creation_date of this ServiceMetricsTask.

        The date the customer service metrics task was created.

        :return: The creation_date of this ServiceMetricsTask.
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this ServiceMetricsTask.

        The date the customer service metrics task was created.

        :param creation_date: The creation_date of this ServiceMetricsTask.
        :type creation_date: str
        """

        self._creation_date = creation_date

    @property
    def detail_href(self):
        """Gets the detail_href of this ServiceMetricsTask.

        The relative <strong>getCustomerServiceMetricTask</strong> call URI path to retrieve the corresponding task.

        :return: The detail_href of this ServiceMetricsTask.
        :rtype: str
        """
        return self._detail_href

    @detail_href.setter
    def detail_href(self, detail_href):
        """Sets the detail_href of this ServiceMetricsTask.

        The relative <strong>getCustomerServiceMetricTask</strong> call URI path to retrieve the corresponding task.

        :param detail_href: The detail_href of this ServiceMetricsTask.
        :type detail_href: str
        """

        self._detail_href = detail_href

    @property
    def feed_type(self):
        """Gets the feed_type of this ServiceMetricsTask.

        The feed type associated with the task.

        :return: The feed_type of this ServiceMetricsTask.
        :rtype: str
        """
        return self._feed_type

    @feed_type.setter
    def feed_type(self, feed_type):
        """Sets the feed_type of this ServiceMetricsTask.

        The feed type associated with the task.

        :param feed_type: The feed_type of this ServiceMetricsTask.
        :type feed_type: str
        """

        self._feed_type = feed_type

    @property
    def filter_criteria(self):
        """Gets the filter_criteria of this ServiceMetricsTask.


        :return: The filter_criteria of this ServiceMetricsTask.
        :rtype: CustomerServiceMetricsFilterCriteria
        """
        return self._filter_criteria

    @filter_criteria.setter
    def filter_criteria(self, filter_criteria):
        """Sets the filter_criteria of this ServiceMetricsTask.


        :param filter_criteria: The filter_criteria of this ServiceMetricsTask.
        :type filter_criteria: CustomerServiceMetricsFilterCriteria
        """

        self._filter_criteria = filter_criteria

    @property
    def schema_version(self):
        """Gets the schema_version of this ServiceMetricsTask.

        The schema version number of the file format. If omitted, the default value is used. <p><b>Default value: </b><code>1.0</code><p>

        :return: The schema_version of this ServiceMetricsTask.
        :rtype: str
        """
        return self._schema_version

    @schema_version.setter
    def schema_version(self, schema_version):
        """Sets the schema_version of this ServiceMetricsTask.

        The schema version number of the file format. If omitted, the default value is used. <p><b>Default value: </b><code>1.0</code><p>

        :param schema_version: The schema_version of this ServiceMetricsTask.
        :type schema_version: str
        """

        self._schema_version = schema_version

    @property
    def status(self):
        """Gets the status of this ServiceMetricsTask.

        An enumeration value that indicates the state of the task. See <strong>FeedStatusEnum</strong> for values. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:FeedStatusEnum'>eBay API documentation</a>

        :return: The status of this ServiceMetricsTask.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ServiceMetricsTask.

        An enumeration value that indicates the state of the task. See <strong>FeedStatusEnum</strong> for values. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:FeedStatusEnum'>eBay API documentation</a>

        :param status: The status of this ServiceMetricsTask.
        :type status: str
        """

        self._status = status

    @property
    def task_id(self):
        """Gets the task_id of this ServiceMetricsTask.

        The unique eBay-assigned ID of the task.

        :return: The task_id of this ServiceMetricsTask.
        :rtype: str
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id):
        """Sets the task_id of this ServiceMetricsTask.

        The unique eBay-assigned ID of the task.

        :param task_id: The task_id of this ServiceMetricsTask.
        :type task_id: str
        """

        self._task_id = task_id
