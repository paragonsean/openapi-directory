# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomerServiceMetricsFilterCriteria(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customer_service_metric_type: str=None, evaluation_marketplace_id: str=None, listing_categories: List[str]=None, shipping_regions: List[str]=None):
        """CustomerServiceMetricsFilterCriteria - a model defined in OpenAPI

        :param customer_service_metric_type: The customer_service_metric_type of this CustomerServiceMetricsFilterCriteria.
        :param evaluation_marketplace_id: The evaluation_marketplace_id of this CustomerServiceMetricsFilterCriteria.
        :param listing_categories: The listing_categories of this CustomerServiceMetricsFilterCriteria.
        :param shipping_regions: The shipping_regions of this CustomerServiceMetricsFilterCriteria.
        """
        self.openapi_types = {
            'customer_service_metric_type': str,
            'evaluation_marketplace_id': str,
            'listing_categories': List[str],
            'shipping_regions': List[str]
        }

        self.attribute_map = {
            'customer_service_metric_type': 'customerServiceMetricType',
            'evaluation_marketplace_id': 'evaluationMarketplaceId',
            'listing_categories': 'listingCategories',
            'shipping_regions': 'shippingRegions'
        }

        self._customer_service_metric_type = customer_service_metric_type
        self._evaluation_marketplace_id = evaluation_marketplace_id
        self._listing_categories = listing_categories
        self._shipping_regions = shipping_regions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomerServiceMetricsFilterCriteria':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomerServiceMetricsFilterCriteria of this CustomerServiceMetricsFilterCriteria.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_service_metric_type(self):
        """Gets the customer_service_metric_type of this CustomerServiceMetricsFilterCriteria.

        An enumeration value that specifies the customer service metric that eBay tracks to measure seller performance. See <strong>CustomerServiceMetricTypeEnum</strong> for values. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:CustomerServiceMetricTypeEnum'>eBay API documentation</a>

        :return: The customer_service_metric_type of this CustomerServiceMetricsFilterCriteria.
        :rtype: str
        """
        return self._customer_service_metric_type

    @customer_service_metric_type.setter
    def customer_service_metric_type(self, customer_service_metric_type):
        """Sets the customer_service_metric_type of this CustomerServiceMetricsFilterCriteria.

        An enumeration value that specifies the customer service metric that eBay tracks to measure seller performance. See <strong>CustomerServiceMetricTypeEnum</strong> for values. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:CustomerServiceMetricTypeEnum'>eBay API documentation</a>

        :param customer_service_metric_type: The customer_service_metric_type of this CustomerServiceMetricsFilterCriteria.
        :type customer_service_metric_type: str
        """

        self._customer_service_metric_type = customer_service_metric_type

    @property
    def evaluation_marketplace_id(self):
        """Gets the evaluation_marketplace_id of this CustomerServiceMetricsFilterCriteria.

        An enumeration value that specifies the eBay marketplace where the evaluation occurs. See <strong>MarketplaceIdEnum</strong> for values. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/bas:MarketplaceIdEnum'>eBay API documentation</a>

        :return: The evaluation_marketplace_id of this CustomerServiceMetricsFilterCriteria.
        :rtype: str
        """
        return self._evaluation_marketplace_id

    @evaluation_marketplace_id.setter
    def evaluation_marketplace_id(self, evaluation_marketplace_id):
        """Sets the evaluation_marketplace_id of this CustomerServiceMetricsFilterCriteria.

        An enumeration value that specifies the eBay marketplace where the evaluation occurs. See <strong>MarketplaceIdEnum</strong> for values. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/bas:MarketplaceIdEnum'>eBay API documentation</a>

        :param evaluation_marketplace_id: The evaluation_marketplace_id of this CustomerServiceMetricsFilterCriteria.
        :type evaluation_marketplace_id: str
        """

        self._evaluation_marketplace_id = evaluation_marketplace_id

    @property
    def listing_categories(self):
        """Gets the listing_categories of this CustomerServiceMetricsFilterCriteria.

        A list of listing category IDs on which the service metric is measured. A seller can use one or more L1 (top-level) eBay categories to get metrics specific to those L1 categories. The Category IDs for each L1 category are required. Category ID values for L1 categories can be retrieved using the Taxonomy API.<p> <span class=\"tablenote\"><strong>Note: </strong>Pass this attribute to narrow down your filter results for the <code>ITEM_NOT_AS_DESCRIBED</code> customerServiceMetricType.</span></p> <p>Supported categories include:</p><p><code>primary(L1) category Id</code></p>

        :return: The listing_categories of this CustomerServiceMetricsFilterCriteria.
        :rtype: List[str]
        """
        return self._listing_categories

    @listing_categories.setter
    def listing_categories(self, listing_categories):
        """Sets the listing_categories of this CustomerServiceMetricsFilterCriteria.

        A list of listing category IDs on which the service metric is measured. A seller can use one or more L1 (top-level) eBay categories to get metrics specific to those L1 categories. The Category IDs for each L1 category are required. Category ID values for L1 categories can be retrieved using the Taxonomy API.<p> <span class=\"tablenote\"><strong>Note: </strong>Pass this attribute to narrow down your filter results for the <code>ITEM_NOT_AS_DESCRIBED</code> customerServiceMetricType.</span></p> <p>Supported categories include:</p><p><code>primary(L1) category Id</code></p>

        :param listing_categories: The listing_categories of this CustomerServiceMetricsFilterCriteria.
        :type listing_categories: List[str]
        """

        self._listing_categories = listing_categories

    @property
    def shipping_regions(self):
        """Gets the shipping_regions of this CustomerServiceMetricsFilterCriteria.

        A list of shipping region enumeration values on which the service metric is measured. This comma delimited array allows the seller to customize the report to focus on domestic or international shipping. <p> <span class=\"tablenote\"><strong>Note: </strong>Pass this attribute to narrow down your filter results for the <code>ITEM_NOT_RECEIVED</code> customerServiceMetricType.</span></p> <p>Supported categories include:</p><p><code>primary(L1) category Id</code></p>See <strong>ShippingRegionTypeEnum</strong> for values

        :return: The shipping_regions of this CustomerServiceMetricsFilterCriteria.
        :rtype: List[str]
        """
        return self._shipping_regions

    @shipping_regions.setter
    def shipping_regions(self, shipping_regions):
        """Sets the shipping_regions of this CustomerServiceMetricsFilterCriteria.

        A list of shipping region enumeration values on which the service metric is measured. This comma delimited array allows the seller to customize the report to focus on domestic or international shipping. <p> <span class=\"tablenote\"><strong>Note: </strong>Pass this attribute to narrow down your filter results for the <code>ITEM_NOT_RECEIVED</code> customerServiceMetricType.</span></p> <p>Supported categories include:</p><p><code>primary(L1) category Id</code></p>See <strong>ShippingRegionTypeEnum</strong> for values

        :param shipping_regions: The shipping_regions of this CustomerServiceMetricsFilterCriteria.
        :type shipping_regions: List[str]
        """

        self._shipping_regions = shipping_regions
