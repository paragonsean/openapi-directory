# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserScheduleResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_date: str=None, feed_type: str=None, last_modified_date: str=None, preferred_trigger_day_of_month: int=None, preferred_trigger_day_of_week: str=None, preferred_trigger_hour: str=None, schedule_end_date: str=None, schedule_id: str=None, schedule_name: str=None, schedule_start_date: str=None, schedule_template_id: str=None, schema_version: str=None, status: str=None, status_reason: str=None):
        """UserScheduleResponse - a model defined in OpenAPI

        :param creation_date: The creation_date of this UserScheduleResponse.
        :param feed_type: The feed_type of this UserScheduleResponse.
        :param last_modified_date: The last_modified_date of this UserScheduleResponse.
        :param preferred_trigger_day_of_month: The preferred_trigger_day_of_month of this UserScheduleResponse.
        :param preferred_trigger_day_of_week: The preferred_trigger_day_of_week of this UserScheduleResponse.
        :param preferred_trigger_hour: The preferred_trigger_hour of this UserScheduleResponse.
        :param schedule_end_date: The schedule_end_date of this UserScheduleResponse.
        :param schedule_id: The schedule_id of this UserScheduleResponse.
        :param schedule_name: The schedule_name of this UserScheduleResponse.
        :param schedule_start_date: The schedule_start_date of this UserScheduleResponse.
        :param schedule_template_id: The schedule_template_id of this UserScheduleResponse.
        :param schema_version: The schema_version of this UserScheduleResponse.
        :param status: The status of this UserScheduleResponse.
        :param status_reason: The status_reason of this UserScheduleResponse.
        """
        self.openapi_types = {
            'creation_date': str,
            'feed_type': str,
            'last_modified_date': str,
            'preferred_trigger_day_of_month': int,
            'preferred_trigger_day_of_week': str,
            'preferred_trigger_hour': str,
            'schedule_end_date': str,
            'schedule_id': str,
            'schedule_name': str,
            'schedule_start_date': str,
            'schedule_template_id': str,
            'schema_version': str,
            'status': str,
            'status_reason': str
        }

        self.attribute_map = {
            'creation_date': 'creationDate',
            'feed_type': 'feedType',
            'last_modified_date': 'lastModifiedDate',
            'preferred_trigger_day_of_month': 'preferredTriggerDayOfMonth',
            'preferred_trigger_day_of_week': 'preferredTriggerDayOfWeek',
            'preferred_trigger_hour': 'preferredTriggerHour',
            'schedule_end_date': 'scheduleEndDate',
            'schedule_id': 'scheduleId',
            'schedule_name': 'scheduleName',
            'schedule_start_date': 'scheduleStartDate',
            'schedule_template_id': 'scheduleTemplateId',
            'schema_version': 'schemaVersion',
            'status': 'status',
            'status_reason': 'statusReason'
        }

        self._creation_date = creation_date
        self._feed_type = feed_type
        self._last_modified_date = last_modified_date
        self._preferred_trigger_day_of_month = preferred_trigger_day_of_month
        self._preferred_trigger_day_of_week = preferred_trigger_day_of_week
        self._preferred_trigger_hour = preferred_trigger_hour
        self._schedule_end_date = schedule_end_date
        self._schedule_id = schedule_id
        self._schedule_name = schedule_name
        self._schedule_start_date = schedule_start_date
        self._schedule_template_id = schedule_template_id
        self._schema_version = schema_version
        self._status = status
        self._status_reason = status_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserScheduleResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserScheduleResponse of this UserScheduleResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_date(self):
        """Gets the creation_date of this UserScheduleResponse.

        The creation date of the schedule in hours based on the 24-hour Coordinated Universal Time (UTC) clock.

        :return: The creation_date of this UserScheduleResponse.
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this UserScheduleResponse.

        The creation date of the schedule in hours based on the 24-hour Coordinated Universal Time (UTC) clock.

        :param creation_date: The creation_date of this UserScheduleResponse.
        :type creation_date: str
        """

        self._creation_date = creation_date

    @property
    def feed_type(self):
        """Gets the feed_type of this UserScheduleResponse.

        The <strong>feedType</strong> associated with the schedule.

        :return: The feed_type of this UserScheduleResponse.
        :rtype: str
        """
        return self._feed_type

    @feed_type.setter
    def feed_type(self, feed_type):
        """Sets the feed_type of this UserScheduleResponse.

        The <strong>feedType</strong> associated with the schedule.

        :param feed_type: The feed_type of this UserScheduleResponse.
        :type feed_type: str
        """

        self._feed_type = feed_type

    @property
    def last_modified_date(self):
        """Gets the last_modified_date of this UserScheduleResponse.

        The date the schedule was last modified.

        :return: The last_modified_date of this UserScheduleResponse.
        :rtype: str
        """
        return self._last_modified_date

    @last_modified_date.setter
    def last_modified_date(self, last_modified_date):
        """Sets the last_modified_date of this UserScheduleResponse.

        The date the schedule was last modified.

        :param last_modified_date: The last_modified_date of this UserScheduleResponse.
        :type last_modified_date: str
        """

        self._last_modified_date = last_modified_date

    @property
    def preferred_trigger_day_of_month(self):
        """Gets the preferred_trigger_day_of_month of this UserScheduleResponse.

        The preferred day of the month to trigger the schedule. This field can be used with <strong>preferredTriggerHour</strong> for monthly schedules. The last day of the month is used for numbers larger than the number of days in the month.

        :return: The preferred_trigger_day_of_month of this UserScheduleResponse.
        :rtype: int
        """
        return self._preferred_trigger_day_of_month

    @preferred_trigger_day_of_month.setter
    def preferred_trigger_day_of_month(self, preferred_trigger_day_of_month):
        """Sets the preferred_trigger_day_of_month of this UserScheduleResponse.

        The preferred day of the month to trigger the schedule. This field can be used with <strong>preferredTriggerHour</strong> for monthly schedules. The last day of the month is used for numbers larger than the number of days in the month.

        :param preferred_trigger_day_of_month: The preferred_trigger_day_of_month of this UserScheduleResponse.
        :type preferred_trigger_day_of_month: int
        """

        self._preferred_trigger_day_of_month = preferred_trigger_day_of_month

    @property
    def preferred_trigger_day_of_week(self):
        """Gets the preferred_trigger_day_of_week of this UserScheduleResponse.

        The preferred day of the week to trigger the schedule. This field can be used with <strong>preferredTriggerHour</strong> for weekly schedules. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:DayOfWeekEnum'>eBay API documentation</a>

        :return: The preferred_trigger_day_of_week of this UserScheduleResponse.
        :rtype: str
        """
        return self._preferred_trigger_day_of_week

    @preferred_trigger_day_of_week.setter
    def preferred_trigger_day_of_week(self, preferred_trigger_day_of_week):
        """Sets the preferred_trigger_day_of_week of this UserScheduleResponse.

        The preferred day of the week to trigger the schedule. This field can be used with <strong>preferredTriggerHour</strong> for weekly schedules. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:DayOfWeekEnum'>eBay API documentation</a>

        :param preferred_trigger_day_of_week: The preferred_trigger_day_of_week of this UserScheduleResponse.
        :type preferred_trigger_day_of_week: str
        """

        self._preferred_trigger_day_of_week = preferred_trigger_day_of_week

    @property
    def preferred_trigger_hour(self):
        """Gets the preferred_trigger_hour of this UserScheduleResponse.

        The preferred two-digit hour of the day to trigger the schedule. <br /><br /><b>Format:</b> UTC <code>hhZ</code><br /><br />For example, the following represents 11:00 am UTC:<br /><br /><code>11Z</code><br /><br />

        :return: The preferred_trigger_hour of this UserScheduleResponse.
        :rtype: str
        """
        return self._preferred_trigger_hour

    @preferred_trigger_hour.setter
    def preferred_trigger_hour(self, preferred_trigger_hour):
        """Sets the preferred_trigger_hour of this UserScheduleResponse.

        The preferred two-digit hour of the day to trigger the schedule. <br /><br /><b>Format:</b> UTC <code>hhZ</code><br /><br />For example, the following represents 11:00 am UTC:<br /><br /><code>11Z</code><br /><br />

        :param preferred_trigger_hour: The preferred_trigger_hour of this UserScheduleResponse.
        :type preferred_trigger_hour: str
        """

        self._preferred_trigger_hour = preferred_trigger_hour

    @property
    def schedule_end_date(self):
        """Gets the schedule_end_date of this UserScheduleResponse.

        The timestamp on which the report generation (subscription) ends. After this date, the schedule status becomes <code>INACTIVE</code>.

        :return: The schedule_end_date of this UserScheduleResponse.
        :rtype: str
        """
        return self._schedule_end_date

    @schedule_end_date.setter
    def schedule_end_date(self, schedule_end_date):
        """Sets the schedule_end_date of this UserScheduleResponse.

        The timestamp on which the report generation (subscription) ends. After this date, the schedule status becomes <code>INACTIVE</code>.

        :param schedule_end_date: The schedule_end_date of this UserScheduleResponse.
        :type schedule_end_date: str
        """

        self._schedule_end_date = schedule_end_date

    @property
    def schedule_id(self):
        """Gets the schedule_id of this UserScheduleResponse.

        The ID of the schedule. This ID is generated when the schedule was created by the <strong>createSchedule</strong> method.

        :return: The schedule_id of this UserScheduleResponse.
        :rtype: str
        """
        return self._schedule_id

    @schedule_id.setter
    def schedule_id(self, schedule_id):
        """Sets the schedule_id of this UserScheduleResponse.

        The ID of the schedule. This ID is generated when the schedule was created by the <strong>createSchedule</strong> method.

        :param schedule_id: The schedule_id of this UserScheduleResponse.
        :type schedule_id: str
        """

        self._schedule_id = schedule_id

    @property
    def schedule_name(self):
        """Gets the schedule_name of this UserScheduleResponse.

        The schedule name assigned by the user for the created schedule. Users assign this name for their reference.

        :return: The schedule_name of this UserScheduleResponse.
        :rtype: str
        """
        return self._schedule_name

    @schedule_name.setter
    def schedule_name(self, schedule_name):
        """Sets the schedule_name of this UserScheduleResponse.

        The schedule name assigned by the user for the created schedule. Users assign this name for their reference.

        :param schedule_name: The schedule_name of this UserScheduleResponse.
        :type schedule_name: str
        """

        self._schedule_name = schedule_name

    @property
    def schedule_start_date(self):
        """Gets the schedule_start_date of this UserScheduleResponse.

        The timestamp that indicates the start of the report generation.

        :return: The schedule_start_date of this UserScheduleResponse.
        :rtype: str
        """
        return self._schedule_start_date

    @schedule_start_date.setter
    def schedule_start_date(self, schedule_start_date):
        """Sets the schedule_start_date of this UserScheduleResponse.

        The timestamp that indicates the start of the report generation.

        :param schedule_start_date: The schedule_start_date of this UserScheduleResponse.
        :type schedule_start_date: str
        """

        self._schedule_start_date = schedule_start_date

    @property
    def schedule_template_id(self):
        """Gets the schedule_template_id of this UserScheduleResponse.

        The ID of the template used to create this schedule.

        :return: The schedule_template_id of this UserScheduleResponse.
        :rtype: str
        """
        return self._schedule_template_id

    @schedule_template_id.setter
    def schedule_template_id(self, schedule_template_id):
        """Sets the schedule_template_id of this UserScheduleResponse.

        The ID of the template used to create this schedule.

        :param schedule_template_id: The schedule_template_id of this UserScheduleResponse.
        :type schedule_template_id: str
        """

        self._schedule_template_id = schedule_template_id

    @property
    def schema_version(self):
        """Gets the schema_version of this UserScheduleResponse.

        The schema version of the feedType for the schedule.

        :return: The schema_version of this UserScheduleResponse.
        :rtype: str
        """
        return self._schema_version

    @schema_version.setter
    def schema_version(self, schema_version):
        """Sets the schema_version of this UserScheduleResponse.

        The schema version of the feedType for the schedule.

        :param schema_version: The schema_version of this UserScheduleResponse.
        :type schema_version: str
        """

        self._schema_version = schema_version

    @property
    def status(self):
        """Gets the status of this UserScheduleResponse.

        The enumeration value that indicates the state of the schedule. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:StatusEnum'>eBay API documentation</a>

        :return: The status of this UserScheduleResponse.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UserScheduleResponse.

        The enumeration value that indicates the state of the schedule. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:StatusEnum'>eBay API documentation</a>

        :param status: The status of this UserScheduleResponse.
        :type status: str
        """

        self._status = status

    @property
    def status_reason(self):
        """Gets the status_reason of this UserScheduleResponse.

        The reason the schedule is inactive. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:StatusReasonEnum'>eBay API documentation</a>

        :return: The status_reason of this UserScheduleResponse.
        :rtype: str
        """
        return self._status_reason

    @status_reason.setter
    def status_reason(self, status_reason):
        """Sets the status_reason of this UserScheduleResponse.

        The reason the schedule is inactive. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:StatusReasonEnum'>eBay API documentation</a>

        :param status_reason: The status_reason of this UserScheduleResponse.
        :type status_reason: str
        """

        self._status_reason = status_reason
