/*
 * Feed API
 * <p>The <strong>Feed API</strong> lets sellers upload input files, download reports and files including their status, filter reports using URI parameters, and retrieve customer service metrics task details.</p>
 *
 * The version of the OpenAPI document: v1.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateOrderTaskRequest;
import org.openapitools.client.model.OrderTask;
import org.openapitools.client.model.OrderTaskCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrderTaskApi
 */
@Disabled
public class OrderTaskApiTest {

    private final OrderTaskApi api = new OrderTaskApi();

    /**
     * This method creates an order download task with filter criteria for the order report. When using this method, specify the &lt;b&gt; feedType&lt;/b&gt;, &lt;b&gt; schemaVersion&lt;/b&gt;, and &lt;b&gt; filterCriteria&lt;/b&gt; for the report. The method returns the &lt;b&gt; location&lt;/b&gt; response header containing the getOrderTask call URI to retrieve the order task you just created. The URL includes the eBay-assigned task ID, which you can use to reference the order task. &lt;br /&gt;&lt;br /&gt;To retrieve the status of the task, use the &lt;b&gt; getOrderTask&lt;/b&gt; method to retrieve a single task ID or the &lt;b&gt;getOrderTasks&lt;/b&gt; method to retrieve multiple order task IDs.&lt;p&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; The scope depends on the feed type. An error message results when an unsupported scope or feed type is specified.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;The following list contains this method&#39;s authorization scope and its corresponding feed type:&lt;ul&gt;&lt;li&gt;https://api.ebay.com/oauth/api_scope/sell.fulfillment: LMS_ORDER_REPORT&lt;/li&gt;&lt;/ul&gt; &lt;/p&gt;&lt;p&gt;For details about how this method is used, see &lt;a href&#x3D;\&quot;/api-docs/sell/static/feed/general-feed-tasks.html\&quot;&gt;General feed types&lt;/a&gt; in the Selling Integration Guide. &lt;p&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; At this time, the &lt;strong&gt;createOrderTask&lt;/strong&gt; method only supports order creation date filters and not modified order date filters. Do not include the &lt;strong&gt;modifiedDateRange&lt;/strong&gt; filter in your request payload.&lt;/span&gt;&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOrderTaskTest() throws ApiException {
        CreateOrderTaskRequest createOrderTaskRequest = null;
        api.createOrderTask(createOrderTaskRequest);
        // TODO: test validations
    }

    /**
     * This method retrieves the task details and status of the specified task. The input is &lt;strong&gt;task_id&lt;/strong&gt;. &lt;p&gt;For details about how this method is used, see &lt;a href&#x3D;\&quot;/api-docs/sell/static/orders/generating-and-retrieving-order-reports.html\&quot;&gt;Working with Order Feeds&lt;/a&gt; in the Selling Integration Guide.  &lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrderTaskTest() throws ApiException {
        String taskId = null;
        OrderTask response = api.getOrderTask(taskId);
        // TODO: test validations
    }

    /**
     * This method returns the details and status for an array of order tasks based on a specified &lt;strong&gt;feed_type&lt;/strong&gt; or &lt;strong&gt;schedule_id&lt;/strong&gt;. Specifying both &lt;strong&gt;feed_type&lt;/strong&gt; and &lt;strong&gt;schedule_id&lt;/strong&gt; results in an error. Since schedules are based on feed types, you can specify a schedule (&lt;strong&gt;schedule_id&lt;/strong&gt;) that returns the needed &lt;strong&gt;feed_type&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt;If specifying the &lt;strong&gt;feed_type&lt;/strong&gt;, limit which order tasks are returned by specifying filters such as the creation date range or period of time using &lt;strong&gt;look_back_days&lt;/strong&gt;. &lt;br /&gt;&lt;br /&gt;If specifying a &lt;strong&gt;schedule_id&lt;/strong&gt;, the schedule template (that the &lt;strong&gt;schedule_id&lt;/strong&gt; is based on) determines which order tasks are returned (see &lt;strong&gt;schedule_id&lt;/strong&gt; for additional information). Each &lt;strong&gt;schedule_id&lt;/strong&gt; applies to one &lt;strong&gt;feed_type&lt;/strong&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrderTasksTest() throws ApiException {
        String dateRange = null;
        String feedType = null;
        String limit = null;
        String lookBackDays = null;
        String offset = null;
        String scheduleId = null;
        OrderTaskCollection response = api.getOrderTasks(dateRange, feedType, limit, lookBackDays, offset, scheduleId);
        // TODO: test validations
    }

}
