/*
 * Feed API
 * <p>The <strong>Feed API</strong> lets sellers upload input files, download reports and files including their status, filter reports using URI parameters, and retrieve customer service metrics task details.</p>
 *
 * The version of the OpenAPI document: v1.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateInventoryTaskRequest;
import org.openapitools.client.model.InventoryTask;
import org.openapitools.client.model.InventoryTaskCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InventoryTaskApi
 */
@Disabled
public class InventoryTaskApiTest {

    private final InventoryTaskApi api = new InventoryTaskApi();

    /**
     * This method creates an inventory-related download task for a specified feed type with optional filter criteria. When using this method, specify the &lt;strong&gt;feedType&lt;/strong&gt;. &lt;br/&gt;&lt;br/&gt;This method returns the location response header containing the &lt;strong&gt;getInventoryTask&lt;/strong&gt; call URI to retrieve the inventory task you just created. The URL includes the eBay-assigned task ID, which you can use to reference the inventory task.&lt;br/&gt;&lt;br/&gt;To retrieve the status of the task, use the &lt;strong&gt;getInventoryTask&lt;/strong&gt; method to retrieve a single task ID or the &lt;strong&gt;getInventoryTasks&lt;/strong&gt; method to retrieve multiple task IDs.&lt;p&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; The scope depends on the feed type. An error message results when an unsupported scope or feed type is specified.&lt;/span&gt;&lt;/p&gt;Presently, this method supports Active Inventory Report. The &lt;strong&gt;ActiveInventoryReport&lt;/strong&gt; returns a report that contains price and quantity information for all of the active listings for a specific seller. A seller can use this information to maintain their inventory on eBay.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createInventoryTaskTest() throws ApiException {
        CreateInventoryTaskRequest createInventoryTaskRequest = null;
        api.createInventoryTask(createInventoryTaskRequest);
        // TODO: test validations
    }

    /**
     * This method retrieves the task details and status of the specified inventory-related task. The input is &lt;strong&gt;task_id&lt;/strong&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInventoryTaskTest() throws ApiException {
        String taskId = null;
        InventoryTask response = api.getInventoryTask(taskId);
        // TODO: test validations
    }

    /**
     * This method searches for multiple tasks of a specific feed type, and includes date filters and pagination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInventoryTasksTest() throws ApiException {
        String feedType = null;
        String scheduleId = null;
        String lookBackDays = null;
        String dateRange = null;
        String limit = null;
        String offset = null;
        InventoryTaskCollection response = api.getInventoryTasks(feedType, scheduleId, lookBackDays, dateRange, limit, offset);
        // TODO: test validations
    }

}
