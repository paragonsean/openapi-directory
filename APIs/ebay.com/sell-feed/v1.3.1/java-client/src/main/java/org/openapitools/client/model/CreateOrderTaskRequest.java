/*
 * Feed API
 * <p>The <strong>Feed API</strong> lets sellers upload input files, download reports and files including their status, filter reports using URI parameters, and retrieve customer service metrics task details.</p>
 *
 * The version of the OpenAPI document: v1.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.OrderFilterCriteria;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The type that defines the fields for the &lt;b&gt; createOrderTask&lt;/b&gt; request.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:39:52.405208-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateOrderTaskRequest {
  public static final String SERIALIZED_NAME_FEED_TYPE = "feedType";
  @SerializedName(SERIALIZED_NAME_FEED_TYPE)
  private String feedType;

  public static final String SERIALIZED_NAME_FILTER_CRITERIA = "filterCriteria";
  @SerializedName(SERIALIZED_NAME_FILTER_CRITERIA)
  private OrderFilterCriteria filterCriteria;

  public static final String SERIALIZED_NAME_SCHEMA_VERSION = "schemaVersion";
  @SerializedName(SERIALIZED_NAME_SCHEMA_VERSION)
  private String schemaVersion;

  public CreateOrderTaskRequest() {
  }

  public CreateOrderTaskRequest feedType(String feedType) {
    this.feedType = feedType;
    return this;
  }

  /**
   * The feed type associated with the task. The only presently supported value is &lt;code&gt;LMS_ORDER_REPORT&lt;/code&gt;. See &lt;a href&#x3D;\&quot;/api-docs/sell/static/feed/lms-feeds-quick-reference.html#merchant-data-reports-download-feed-types\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Report download feed types&lt;/a&gt; for more information.
   * @return feedType
   */
  @javax.annotation.Nullable
  public String getFeedType() {
    return feedType;
  }

  public void setFeedType(String feedType) {
    this.feedType = feedType;
  }


  public CreateOrderTaskRequest filterCriteria(OrderFilterCriteria filterCriteria) {
    this.filterCriteria = filterCriteria;
    return this;
  }

  /**
   * Get filterCriteria
   * @return filterCriteria
   */
  @javax.annotation.Nullable
  public OrderFilterCriteria getFilterCriteria() {
    return filterCriteria;
  }

  public void setFilterCriteria(OrderFilterCriteria filterCriteria) {
    this.filterCriteria = filterCriteria;
  }


  public CreateOrderTaskRequest schemaVersion(String schemaVersion) {
    this.schemaVersion = schemaVersion;
    return this;
  }

  /**
   * The schema version of the LMS OrderReport. For the &lt;code&gt;LMS_ORDER_REPORT&lt;/code&gt; feed type, see the &lt;a href&#x3D;\&quot;/devzone/merchant-data/CallRef/OrderReport.html#OrderReport\&quot;&gt;OrderReport&lt;/a&gt; reference page to see the present schema version. The &lt;b&gt; schemaVersion&lt;/b&gt; value is the version number shown at the top of the &lt;b&gt; OrderReport&lt;/b&gt; page. &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Restriction: &lt;/b&gt; This value must be 1113 or higher. The OrderReport schema version is updated about every two weeks. All version numbers are odd numbers (even numbers are skipped). For example, the next release version after &#39;1113&#39; is &#39;1115&#39;.
   * @return schemaVersion
   */
  @javax.annotation.Nullable
  public String getSchemaVersion() {
    return schemaVersion;
  }

  public void setSchemaVersion(String schemaVersion) {
    this.schemaVersion = schemaVersion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateOrderTaskRequest createOrderTaskRequest = (CreateOrderTaskRequest) o;
    return Objects.equals(this.feedType, createOrderTaskRequest.feedType) &&
        Objects.equals(this.filterCriteria, createOrderTaskRequest.filterCriteria) &&
        Objects.equals(this.schemaVersion, createOrderTaskRequest.schemaVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(feedType, filterCriteria, schemaVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateOrderTaskRequest {\n");
    sb.append("    feedType: ").append(toIndentedString(feedType)).append("\n");
    sb.append("    filterCriteria: ").append(toIndentedString(filterCriteria)).append("\n");
    sb.append("    schemaVersion: ").append(toIndentedString(schemaVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("feedType");
    openapiFields.add("filterCriteria");
    openapiFields.add("schemaVersion");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateOrderTaskRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateOrderTaskRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateOrderTaskRequest is not found in the empty JSON string", CreateOrderTaskRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateOrderTaskRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateOrderTaskRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("feedType") != null && !jsonObj.get("feedType").isJsonNull()) && !jsonObj.get("feedType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feedType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feedType").toString()));
      }
      // validate the optional field `filterCriteria`
      if (jsonObj.get("filterCriteria") != null && !jsonObj.get("filterCriteria").isJsonNull()) {
        OrderFilterCriteria.validateJsonElement(jsonObj.get("filterCriteria"));
      }
      if ((jsonObj.get("schemaVersion") != null && !jsonObj.get("schemaVersion").isJsonNull()) && !jsonObj.get("schemaVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemaVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schemaVersion").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateOrderTaskRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateOrderTaskRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateOrderTaskRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateOrderTaskRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateOrderTaskRequest>() {
           @Override
           public void write(JsonWriter out, CreateOrderTaskRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateOrderTaskRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateOrderTaskRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateOrderTaskRequest
   * @throws IOException if the JSON string is invalid with respect to CreateOrderTaskRequest
   */
  public static CreateOrderTaskRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateOrderTaskRequest.class);
  }

  /**
   * Convert an instance of CreateOrderTaskRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

