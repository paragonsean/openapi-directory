/**
 * Feed API
 * <p>The <strong>Feed API</strong> lets sellers upload input files, download reports and files including their status, filter reports using URI parameters, and retrieve customer service metrics task details.</p>
 *
 * The version of the OpenAPI document: v1.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomerServiceMetricsFilterCriteria model module.
 * @module model/CustomerServiceMetricsFilterCriteria
 * @version v1.3.1
 */
class CustomerServiceMetricsFilterCriteria {
    /**
     * Constructs a new <code>CustomerServiceMetricsFilterCriteria</code>.
     * A complex data type that filters data for report creation. See &lt;strong&gt;CustomerServiceMetricsFilterCriteria&lt;/strong&gt; for fields and descriptions.
     * @alias module:model/CustomerServiceMetricsFilterCriteria
     */
    constructor() { 
        
        CustomerServiceMetricsFilterCriteria.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomerServiceMetricsFilterCriteria</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomerServiceMetricsFilterCriteria} obj Optional instance to populate.
     * @return {module:model/CustomerServiceMetricsFilterCriteria} The populated <code>CustomerServiceMetricsFilterCriteria</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerServiceMetricsFilterCriteria();

            if (data.hasOwnProperty('customerServiceMetricType')) {
                obj['customerServiceMetricType'] = ApiClient.convertToType(data['customerServiceMetricType'], 'String');
            }
            if (data.hasOwnProperty('evaluationMarketplaceId')) {
                obj['evaluationMarketplaceId'] = ApiClient.convertToType(data['evaluationMarketplaceId'], 'String');
            }
            if (data.hasOwnProperty('listingCategories')) {
                obj['listingCategories'] = ApiClient.convertToType(data['listingCategories'], ['String']);
            }
            if (data.hasOwnProperty('shippingRegions')) {
                obj['shippingRegions'] = ApiClient.convertToType(data['shippingRegions'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomerServiceMetricsFilterCriteria</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomerServiceMetricsFilterCriteria</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['customerServiceMetricType'] && !(typeof data['customerServiceMetricType'] === 'string' || data['customerServiceMetricType'] instanceof String)) {
            throw new Error("Expected the field `customerServiceMetricType` to be a primitive type in the JSON string but got " + data['customerServiceMetricType']);
        }
        // ensure the json data is a string
        if (data['evaluationMarketplaceId'] && !(typeof data['evaluationMarketplaceId'] === 'string' || data['evaluationMarketplaceId'] instanceof String)) {
            throw new Error("Expected the field `evaluationMarketplaceId` to be a primitive type in the JSON string but got " + data['evaluationMarketplaceId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['listingCategories'])) {
            throw new Error("Expected the field `listingCategories` to be an array in the JSON data but got " + data['listingCategories']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['shippingRegions'])) {
            throw new Error("Expected the field `shippingRegions` to be an array in the JSON data but got " + data['shippingRegions']);
        }

        return true;
    }


}



/**
 * An enumeration value that specifies the customer service metric that eBay tracks to measure seller performance. See <strong>CustomerServiceMetricTypeEnum</strong> for values. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:CustomerServiceMetricTypeEnum'>eBay API documentation</a>
 * @member {String} customerServiceMetricType
 */
CustomerServiceMetricsFilterCriteria.prototype['customerServiceMetricType'] = undefined;

/**
 * An enumeration value that specifies the eBay marketplace where the evaluation occurs. See <strong>MarketplaceIdEnum</strong> for values. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/bas:MarketplaceIdEnum'>eBay API documentation</a>
 * @member {String} evaluationMarketplaceId
 */
CustomerServiceMetricsFilterCriteria.prototype['evaluationMarketplaceId'] = undefined;

/**
 * A list of listing category IDs on which the service metric is measured. A seller can use one or more L1 (top-level) eBay categories to get metrics specific to those L1 categories. The Category IDs for each L1 category are required. Category ID values for L1 categories can be retrieved using the Taxonomy API.<p> <span class=\"tablenote\"><strong>Note: </strong>Pass this attribute to narrow down your filter results for the <code>ITEM_NOT_AS_DESCRIBED</code> customerServiceMetricType.</span></p> <p>Supported categories include:</p><p><code>primary(L1) category Id</code></p>
 * @member {Array.<String>} listingCategories
 */
CustomerServiceMetricsFilterCriteria.prototype['listingCategories'] = undefined;

/**
 * A list of shipping region enumeration values on which the service metric is measured. This comma delimited array allows the seller to customize the report to focus on domestic or international shipping. <p> <span class=\"tablenote\"><strong>Note: </strong>Pass this attribute to narrow down your filter results for the <code>ITEM_NOT_RECEIVED</code> customerServiceMetricType.</span></p> <p>Supported categories include:</p><p><code>primary(L1) category Id</code></p>See <strong>ShippingRegionTypeEnum</strong> for values
 * @member {Array.<String>} shippingRegions
 */
CustomerServiceMetricsFilterCriteria.prototype['shippingRegions'] = undefined;






export default CustomerServiceMetricsFilterCriteria;

