/**
 * Feed API
 * <p>The <strong>Feed API</strong> lets sellers upload input files, download reports and files including their status, filter reports using URI parameters, and retrieve customer service metrics task details.</p>
 *
 * The version of the OpenAPI document: v1.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UploadSummary model module.
 * @module model/UploadSummary
 * @version v1.3.1
 */
class UploadSummary {
    /**
     * Constructs a new <code>UploadSummary</code>.
     * This container provides summary information on an upload feed (not applicable for download feed types).
     * @alias module:model/UploadSummary
     */
    constructor() { 
        
        UploadSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UploadSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UploadSummary} obj Optional instance to populate.
     * @return {module:model/UploadSummary} The populated <code>UploadSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UploadSummary();

            if (data.hasOwnProperty('failureCount')) {
                obj['failureCount'] = ApiClient.convertToType(data['failureCount'], 'Number');
            }
            if (data.hasOwnProperty('successCount')) {
                obj['successCount'] = ApiClient.convertToType(data['successCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UploadSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UploadSummary</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The number of records, such as the number of listings created or the number of pictures uploaded to a listing, that failed to process during the upload feed. Check the response file and correct any issues mentioned. If the feed fails before processing, no response file is provided. In this case check the REST output response.
 * @member {Number} failureCount
 */
UploadSummary.prototype['failureCount'] = undefined;

/**
 * The number of records that were successfully processed during the upload feed.
 * @member {Number} successCount
 */
UploadSummary.prototype['successCount'] = undefined;






export default UploadSummary;

