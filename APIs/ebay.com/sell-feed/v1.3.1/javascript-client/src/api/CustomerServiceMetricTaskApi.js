/**
 * Feed API
 * <p>The <strong>Feed API</strong> lets sellers upload input files, download reports and files including their status, filter reports using URI parameters, and retrieve customer service metrics task details.</p>
 *
 * The version of the OpenAPI document: v1.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateServiceMetricsTaskRequest from '../model/CreateServiceMetricsTaskRequest';
import CustomerServiceMetricTaskCollection from '../model/CustomerServiceMetricTaskCollection';
import ServiceMetricsTask from '../model/ServiceMetricsTask';

/**
* CustomerServiceMetricTask service.
* @module api/CustomerServiceMetricTaskApi
* @version v1.3.1
*/
export default class CustomerServiceMetricTaskApi {

    /**
    * Constructs a new CustomerServiceMetricTaskApi. 
    * @alias module:api/CustomerServiceMetricTaskApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createCustomerServiceMetricTask operation.
     * @callback module:api/CustomerServiceMetricTaskApi~createCustomerServiceMetricTaskCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Use this method to create a customer service metrics download task with filter criteria for the customer service metrics report. When using this method, specify the <strong>feedType</strong> and <strong>filterCriteria</strong> including both <strong>evaluationMarketplaceId</strong> and <strong>customerServiceMetricType</strong> for the report. The method returns the location response header containing the call URI to use with <strong>getCustomerServiceMetricTask</strong> to retrieve status and details on the task.</p><p>Only CURRENT Customer Service Metrics reports can be generated with the Sell Feed API. PROJECTED reports are not supported at this time. See the <a href=\"/api-docs/sell/analytics/resources/customer_service_metric/methods/getCustomerServiceMetric\">getCustomerServiceMetric</a> method document in the Analytics API for more information about these two types of reports.</p><p><span class=\"tablenote\"><strong>Note:</strong> Before calling this API, retrieve the summary of the seller's performance and rating for the customer service metric by calling <strong>getCustomerServiceMetric</strong> (part of the <a href=\"/api-docs/sell/analytics/resources/methods\">Analytics API</a>). You can then populate the create task request fields with the values from the response. This technique eliminates failed tasks that request a report for a <strong>customerServiceMetricType</strong> and <strong>evaluationMarketplaceId</strong> that are without evaluation.</span></p>
     * @param {String} acceptLanguage Use this header to specify the natural language in which the authenticated user desires the response.
     * @param {module:model/CreateServiceMetricsTaskRequest} createServiceMetricsTaskRequest Request payload containing version, feedType, and optional filterCriteria.
     * @param {module:api/CustomerServiceMetricTaskApi~createCustomerServiceMetricTaskCallback} callback The callback function, accepting three arguments: error, data, response
     */
    createCustomerServiceMetricTask(acceptLanguage, createServiceMetricsTaskRequest, callback) {
      let postBody = createServiceMetricsTaskRequest;
      // verify the required parameter 'acceptLanguage' is set
      if (acceptLanguage === undefined || acceptLanguage === null) {
        throw new Error("Missing the required parameter 'acceptLanguage' when calling createCustomerServiceMetricTask");
      }
      // verify the required parameter 'createServiceMetricsTaskRequest' is set
      if (createServiceMetricsTaskRequest === undefined || createServiceMetricsTaskRequest === null) {
        throw new Error("Missing the required parameter 'createServiceMetricsTaskRequest' when calling createCustomerServiceMetricTask");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'accept-language': acceptLanguage
      };
      let formParams = {
      };

      let authNames = ['api_auth'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/customer_service_metric_task', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCustomerServiceMetricTask operation.
     * @callback module:api/CustomerServiceMetricTaskApi~getCustomerServiceMetricTaskCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceMetricsTask} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Use this method to retrieve customer service metric task details for the specified task. The input is <strong>task_id</strong>.</p>
     * @param {String} taskId Use this path parameter to specify the task ID value for the customer service metric task to retrieve.
     * @param {module:api/CustomerServiceMetricTaskApi~getCustomerServiceMetricTaskCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceMetricsTask}
     */
    getCustomerServiceMetricTask(taskId, callback) {
      let postBody = null;
      // verify the required parameter 'taskId' is set
      if (taskId === undefined || taskId === null) {
        throw new Error("Missing the required parameter 'taskId' when calling getCustomerServiceMetricTask");
      }

      let pathParams = {
        'task_id': taskId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceMetricsTask;
      return this.apiClient.callApi(
        '/customer_service_metric_task/{task_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCustomerServiceMetricTasks operation.
     * @callback module:api/CustomerServiceMetricTaskApi~getCustomerServiceMetricTasksCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomerServiceMetricTaskCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Use this method to return an array of customer service metric tasks. You can limit the tasks returned by specifying a date range. </p> <p> <span class=\"tablenote\"><strong>Note:</strong> You can pass in either the <code>look_back_days </code>or<code> date_range</code>, but not both.</span></p>
     * @param {Object} opts Optional parameters
     * @param {String} [dateRange] The task creation date range. The results are filtered to include only tasks with a creation date that is equal to the dates specified or is within the specified range. Do not use with the <code>look_back_days</code> parameter.<p><strong>Format: </strong>UTC</p><p>For example, tasks within a range: </p><p><code>yyyy-MM-ddThh:mm:ss.SSSZ..yyyy-MM-ddThh:mm:ss.SSSZ </code></p><p>Tasks created on March 8, 2020</p><p><code>2020-03-08T00:00.00.000Z..2020-03-09T00:00:00.000Z</code></p><p><b>Maximum: </b>90 days</p>
     * @param {String} [feedType] The feed type associated with the task. The only presently supported value is <code>CUSTOMER_SERVICE_METRICS_REPORT</code>.
     * @param {String} [limit] The number of customer service metric tasks to return per page of the result set. Use this parameter in conjunction with the offset parameter to control the pagination of the output. <p>For example, if <strong>offset</strong> is set to 10 and <strong>limit</strong> is set to 10, the call retrieves tasks 11 thru 20 from the result set.</p><p>If this parameter is omitted, the default value is used.</p><p> <span class=\"tablenote\"><strong>Note:</strong>This feature employs a zero-based list, where the first item in the list has an offset of <code>0</code>.</span></p><p><b>Default:</b> 10 <p><b>Maximum:</b> 500</p>
     * @param {String} [lookBackDays] The number of previous days in which to search for tasks. Do not use with the <code>date_range</code> parameter. If both <code>date_range</code> and <code>look_back_days</code> are omitted, this parameter's default value is used. <p><b>Default value:</b> 7</p><p><b>Range:</b> 1-90 (inclusive)</p>
     * @param {String} [offset] The number of customer service metric tasks to skip in the result set before returning the first task in the paginated response. <p>Combine <strong>offset</strong> with the <strong>limit</strong> query parameter to control the items returned in the response. For example, if you supply an <strong>offset</strong> of <code>0</code> and a <strong>limit</strong> of <code>10</code>, the first page of the response contains the first 10 items from the complete list of items retrieved by the call. If <strong>offset</strong> is <code>10</code> and <strong>limit</strong> is <code>20</code>, the first page of the response contains items 11-30 from the complete result set. <br /><br /><b>Default: </b>0
     * @param {module:api/CustomerServiceMetricTaskApi~getCustomerServiceMetricTasksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomerServiceMetricTaskCollection}
     */
    getCustomerServiceMetricTasks(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'date_range': opts['dateRange'],
        'feed_type': opts['feedType'],
        'limit': opts['limit'],
        'look_back_days': opts['lookBackDays'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomerServiceMetricTaskCollection;
      return this.apiClient.callApi(
        '/customer_service_metric_task', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
