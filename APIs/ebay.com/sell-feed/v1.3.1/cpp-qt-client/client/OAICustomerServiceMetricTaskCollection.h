/**
 * Feed API
 * <p>The <strong>Feed API</strong> lets sellers upload input files, download reports and files including their status, filter reports using URI parameters, and retrieve customer service metrics task details.</p>
 *
 * The version of the OpenAPI document: v1.3.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomerServiceMetricTaskCollection.h
 *
 * 
 */

#ifndef OAICustomerServiceMetricTaskCollection_H
#define OAICustomerServiceMetricTaskCollection_H

#include <QJsonObject>

#include "OAIServiceMetricsTask.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIServiceMetricsTask;

class OAICustomerServiceMetricTaskCollection : public OAIObject {
public:
    OAICustomerServiceMetricTaskCollection();
    OAICustomerServiceMetricTaskCollection(QString json);
    ~OAICustomerServiceMetricTaskCollection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHref() const;
    void setHref(const QString &href);
    bool is_href_Set() const;
    bool is_href_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    QString getNext() const;
    void setNext(const QString &next);
    bool is_next_Set() const;
    bool is_next_Valid() const;

    qint32 getOffset() const;
    void setOffset(const qint32 &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    QString getPrev() const;
    void setPrev(const QString &prev);
    bool is_prev_Set() const;
    bool is_prev_Valid() const;

    QList<OAIServiceMetricsTask> getTasks() const;
    void setTasks(const QList<OAIServiceMetricsTask> &tasks);
    bool is_tasks_Set() const;
    bool is_tasks_Valid() const;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_href;
    bool m_href_isSet;
    bool m_href_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    QString m_next;
    bool m_next_isSet;
    bool m_next_isValid;

    qint32 m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;

    QString m_prev;
    bool m_prev_isSet;
    bool m_prev_isValid;

    QList<OAIServiceMetricsTask> m_tasks;
    bool m_tasks_isSet;
    bool m_tasks_isValid;

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomerServiceMetricTaskCollection)

#endif // OAICustomerServiceMetricTaskCollection_H
