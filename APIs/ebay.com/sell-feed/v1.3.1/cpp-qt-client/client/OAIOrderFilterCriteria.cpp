/**
 * Feed API
 * <p>The <strong>Feed API</strong> lets sellers upload input files, download reports and files including their status, filter reports using URI parameters, and retrieve customer service metrics task details.</p>
 *
 * The version of the OpenAPI document: v1.3.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderFilterCriteria.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderFilterCriteria::OAIOrderFilterCriteria(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderFilterCriteria::OAIOrderFilterCriteria() {
    this->initializeModel();
}

OAIOrderFilterCriteria::~OAIOrderFilterCriteria() {}

void OAIOrderFilterCriteria::initializeModel() {

    m_creation_date_range_isSet = false;
    m_creation_date_range_isValid = false;

    m_modified_date_range_isSet = false;
    m_modified_date_range_isValid = false;

    m_order_status_isSet = false;
    m_order_status_isValid = false;
}

void OAIOrderFilterCriteria::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderFilterCriteria::fromJsonObject(QJsonObject json) {

    m_creation_date_range_isValid = ::OpenAPI::fromJsonValue(m_creation_date_range, json[QString("creationDateRange")]);
    m_creation_date_range_isSet = !json[QString("creationDateRange")].isNull() && m_creation_date_range_isValid;

    m_modified_date_range_isValid = ::OpenAPI::fromJsonValue(m_modified_date_range, json[QString("modifiedDateRange")]);
    m_modified_date_range_isSet = !json[QString("modifiedDateRange")].isNull() && m_modified_date_range_isValid;

    m_order_status_isValid = ::OpenAPI::fromJsonValue(m_order_status, json[QString("orderStatus")]);
    m_order_status_isSet = !json[QString("orderStatus")].isNull() && m_order_status_isValid;
}

QString OAIOrderFilterCriteria::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderFilterCriteria::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_date_range.isSet()) {
        obj.insert(QString("creationDateRange"), ::OpenAPI::toJsonValue(m_creation_date_range));
    }
    if (m_modified_date_range.isSet()) {
        obj.insert(QString("modifiedDateRange"), ::OpenAPI::toJsonValue(m_modified_date_range));
    }
    if (m_order_status_isSet) {
        obj.insert(QString("orderStatus"), ::OpenAPI::toJsonValue(m_order_status));
    }
    return obj;
}

OAIDateRange OAIOrderFilterCriteria::getCreationDateRange() const {
    return m_creation_date_range;
}
void OAIOrderFilterCriteria::setCreationDateRange(const OAIDateRange &creation_date_range) {
    m_creation_date_range = creation_date_range;
    m_creation_date_range_isSet = true;
}

bool OAIOrderFilterCriteria::is_creation_date_range_Set() const{
    return m_creation_date_range_isSet;
}

bool OAIOrderFilterCriteria::is_creation_date_range_Valid() const{
    return m_creation_date_range_isValid;
}

OAIDateRange OAIOrderFilterCriteria::getModifiedDateRange() const {
    return m_modified_date_range;
}
void OAIOrderFilterCriteria::setModifiedDateRange(const OAIDateRange &modified_date_range) {
    m_modified_date_range = modified_date_range;
    m_modified_date_range_isSet = true;
}

bool OAIOrderFilterCriteria::is_modified_date_range_Set() const{
    return m_modified_date_range_isSet;
}

bool OAIOrderFilterCriteria::is_modified_date_range_Valid() const{
    return m_modified_date_range_isValid;
}

QString OAIOrderFilterCriteria::getOrderStatus() const {
    return m_order_status;
}
void OAIOrderFilterCriteria::setOrderStatus(const QString &order_status) {
    m_order_status = order_status;
    m_order_status_isSet = true;
}

bool OAIOrderFilterCriteria::is_order_status_Set() const{
    return m_order_status_isSet;
}

bool OAIOrderFilterCriteria::is_order_status_Valid() const{
    return m_order_status_isValid;
}

bool OAIOrderFilterCriteria::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_date_range.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_date_range.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderFilterCriteria::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
