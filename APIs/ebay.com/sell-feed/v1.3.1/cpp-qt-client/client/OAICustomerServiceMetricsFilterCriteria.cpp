/**
 * Feed API
 * <p>The <strong>Feed API</strong> lets sellers upload input files, download reports and files including their status, filter reports using URI parameters, and retrieve customer service metrics task details.</p>
 *
 * The version of the OpenAPI document: v1.3.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomerServiceMetricsFilterCriteria.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomerServiceMetricsFilterCriteria::OAICustomerServiceMetricsFilterCriteria(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomerServiceMetricsFilterCriteria::OAICustomerServiceMetricsFilterCriteria() {
    this->initializeModel();
}

OAICustomerServiceMetricsFilterCriteria::~OAICustomerServiceMetricsFilterCriteria() {}

void OAICustomerServiceMetricsFilterCriteria::initializeModel() {

    m_customer_service_metric_type_isSet = false;
    m_customer_service_metric_type_isValid = false;

    m_evaluation_marketplace_id_isSet = false;
    m_evaluation_marketplace_id_isValid = false;

    m_listing_categories_isSet = false;
    m_listing_categories_isValid = false;

    m_shipping_regions_isSet = false;
    m_shipping_regions_isValid = false;
}

void OAICustomerServiceMetricsFilterCriteria::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomerServiceMetricsFilterCriteria::fromJsonObject(QJsonObject json) {

    m_customer_service_metric_type_isValid = ::OpenAPI::fromJsonValue(m_customer_service_metric_type, json[QString("customerServiceMetricType")]);
    m_customer_service_metric_type_isSet = !json[QString("customerServiceMetricType")].isNull() && m_customer_service_metric_type_isValid;

    m_evaluation_marketplace_id_isValid = ::OpenAPI::fromJsonValue(m_evaluation_marketplace_id, json[QString("evaluationMarketplaceId")]);
    m_evaluation_marketplace_id_isSet = !json[QString("evaluationMarketplaceId")].isNull() && m_evaluation_marketplace_id_isValid;

    m_listing_categories_isValid = ::OpenAPI::fromJsonValue(m_listing_categories, json[QString("listingCategories")]);
    m_listing_categories_isSet = !json[QString("listingCategories")].isNull() && m_listing_categories_isValid;

    m_shipping_regions_isValid = ::OpenAPI::fromJsonValue(m_shipping_regions, json[QString("shippingRegions")]);
    m_shipping_regions_isSet = !json[QString("shippingRegions")].isNull() && m_shipping_regions_isValid;
}

QString OAICustomerServiceMetricsFilterCriteria::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomerServiceMetricsFilterCriteria::asJsonObject() const {
    QJsonObject obj;
    if (m_customer_service_metric_type_isSet) {
        obj.insert(QString("customerServiceMetricType"), ::OpenAPI::toJsonValue(m_customer_service_metric_type));
    }
    if (m_evaluation_marketplace_id_isSet) {
        obj.insert(QString("evaluationMarketplaceId"), ::OpenAPI::toJsonValue(m_evaluation_marketplace_id));
    }
    if (m_listing_categories.size() > 0) {
        obj.insert(QString("listingCategories"), ::OpenAPI::toJsonValue(m_listing_categories));
    }
    if (m_shipping_regions.size() > 0) {
        obj.insert(QString("shippingRegions"), ::OpenAPI::toJsonValue(m_shipping_regions));
    }
    return obj;
}

QString OAICustomerServiceMetricsFilterCriteria::getCustomerServiceMetricType() const {
    return m_customer_service_metric_type;
}
void OAICustomerServiceMetricsFilterCriteria::setCustomerServiceMetricType(const QString &customer_service_metric_type) {
    m_customer_service_metric_type = customer_service_metric_type;
    m_customer_service_metric_type_isSet = true;
}

bool OAICustomerServiceMetricsFilterCriteria::is_customer_service_metric_type_Set() const{
    return m_customer_service_metric_type_isSet;
}

bool OAICustomerServiceMetricsFilterCriteria::is_customer_service_metric_type_Valid() const{
    return m_customer_service_metric_type_isValid;
}

QString OAICustomerServiceMetricsFilterCriteria::getEvaluationMarketplaceId() const {
    return m_evaluation_marketplace_id;
}
void OAICustomerServiceMetricsFilterCriteria::setEvaluationMarketplaceId(const QString &evaluation_marketplace_id) {
    m_evaluation_marketplace_id = evaluation_marketplace_id;
    m_evaluation_marketplace_id_isSet = true;
}

bool OAICustomerServiceMetricsFilterCriteria::is_evaluation_marketplace_id_Set() const{
    return m_evaluation_marketplace_id_isSet;
}

bool OAICustomerServiceMetricsFilterCriteria::is_evaluation_marketplace_id_Valid() const{
    return m_evaluation_marketplace_id_isValid;
}

QList<QString> OAICustomerServiceMetricsFilterCriteria::getListingCategories() const {
    return m_listing_categories;
}
void OAICustomerServiceMetricsFilterCriteria::setListingCategories(const QList<QString> &listing_categories) {
    m_listing_categories = listing_categories;
    m_listing_categories_isSet = true;
}

bool OAICustomerServiceMetricsFilterCriteria::is_listing_categories_Set() const{
    return m_listing_categories_isSet;
}

bool OAICustomerServiceMetricsFilterCriteria::is_listing_categories_Valid() const{
    return m_listing_categories_isValid;
}

QList<QString> OAICustomerServiceMetricsFilterCriteria::getShippingRegions() const {
    return m_shipping_regions;
}
void OAICustomerServiceMetricsFilterCriteria::setShippingRegions(const QList<QString> &shipping_regions) {
    m_shipping_regions = shipping_regions;
    m_shipping_regions_isSet = true;
}

bool OAICustomerServiceMetricsFilterCriteria::is_shipping_regions_Set() const{
    return m_shipping_regions_isSet;
}

bool OAICustomerServiceMetricsFilterCriteria::is_shipping_regions_Valid() const{
    return m_shipping_regions_isValid;
}

bool OAICustomerServiceMetricsFilterCriteria::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_customer_service_metric_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_evaluation_marketplace_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_listing_categories.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_regions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomerServiceMetricsFilterCriteria::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
