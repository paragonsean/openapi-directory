/**
 * Feed API
 * <p>The <strong>Feed API</strong> lets sellers upload input files, download reports and files including their status, filter reports using URI parameters, and retrieve customer service metrics task details.</p>
 *
 * The version of the OpenAPI document: v1.3.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInventoryFilterCriteria.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInventoryFilterCriteria::OAIInventoryFilterCriteria(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInventoryFilterCriteria::OAIInventoryFilterCriteria() {
    this->initializeModel();
}

OAIInventoryFilterCriteria::~OAIInventoryFilterCriteria() {}

void OAIInventoryFilterCriteria::initializeModel() {

    m_listing_format_isSet = false;
    m_listing_format_isValid = false;
}

void OAIInventoryFilterCriteria::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInventoryFilterCriteria::fromJsonObject(QJsonObject json) {

    m_listing_format_isValid = ::OpenAPI::fromJsonValue(m_listing_format, json[QString("listingFormat")]);
    m_listing_format_isSet = !json[QString("listingFormat")].isNull() && m_listing_format_isValid;
}

QString OAIInventoryFilterCriteria::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInventoryFilterCriteria::asJsonObject() const {
    QJsonObject obj;
    if (m_listing_format_isSet) {
        obj.insert(QString("listingFormat"), ::OpenAPI::toJsonValue(m_listing_format));
    }
    return obj;
}

QString OAIInventoryFilterCriteria::getListingFormat() const {
    return m_listing_format;
}
void OAIInventoryFilterCriteria::setListingFormat(const QString &listing_format) {
    m_listing_format = listing_format;
    m_listing_format_isSet = true;
}

bool OAIInventoryFilterCriteria::is_listing_format_Set() const{
    return m_listing_format_isSet;
}

bool OAIInventoryFilterCriteria::is_listing_format_Valid() const{
    return m_listing_format_isValid;
}

bool OAIInventoryFilterCriteria::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_listing_format_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInventoryFilterCriteria::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
