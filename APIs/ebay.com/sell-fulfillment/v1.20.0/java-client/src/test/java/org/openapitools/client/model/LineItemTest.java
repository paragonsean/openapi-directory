/*
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Amount;
import org.openapitools.client.model.AppliedPromotion;
import org.openapitools.client.model.DeliveryCost;
import org.openapitools.client.model.EbayCollectAndRemitTax;
import org.openapitools.client.model.EbayCollectedCharges;
import org.openapitools.client.model.GiftDetails;
import org.openapitools.client.model.ItemLocation;
import org.openapitools.client.model.LineItemFulfillmentInstructions;
import org.openapitools.client.model.LineItemProperties;
import org.openapitools.client.model.LineItemRefund;
import org.openapitools.client.model.LinkedOrderLineItem;
import org.openapitools.client.model.NameValuePair;
import org.openapitools.client.model.Tax;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for LineItem
 */
public class LineItemTest {
    private final LineItem model = new LineItem();

    /**
     * Model tests for LineItem
     */
    @Test
    public void testLineItem() {
        // TODO: test LineItem
    }

    /**
     * Test the property 'appliedPromotions'
     */
    @Test
    public void appliedPromotionsTest() {
        // TODO: test appliedPromotions
    }

    /**
     * Test the property 'deliveryCost'
     */
    @Test
    public void deliveryCostTest() {
        // TODO: test deliveryCost
    }

    /**
     * Test the property 'discountedLineItemCost'
     */
    @Test
    public void discountedLineItemCostTest() {
        // TODO: test discountedLineItemCost
    }

    /**
     * Test the property 'ebayCollectAndRemitTaxes'
     */
    @Test
    public void ebayCollectAndRemitTaxesTest() {
        // TODO: test ebayCollectAndRemitTaxes
    }

    /**
     * Test the property 'ebayCollectedCharges'
     */
    @Test
    public void ebayCollectedChargesTest() {
        // TODO: test ebayCollectedCharges
    }

    /**
     * Test the property 'giftDetails'
     */
    @Test
    public void giftDetailsTest() {
        // TODO: test giftDetails
    }

    /**
     * Test the property 'itemLocation'
     */
    @Test
    public void itemLocationTest() {
        // TODO: test itemLocation
    }

    /**
     * Test the property 'legacyItemId'
     */
    @Test
    public void legacyItemIdTest() {
        // TODO: test legacyItemId
    }

    /**
     * Test the property 'legacyVariationId'
     */
    @Test
    public void legacyVariationIdTest() {
        // TODO: test legacyVariationId
    }

    /**
     * Test the property 'lineItemCost'
     */
    @Test
    public void lineItemCostTest() {
        // TODO: test lineItemCost
    }

    /**
     * Test the property 'lineItemFulfillmentInstructions'
     */
    @Test
    public void lineItemFulfillmentInstructionsTest() {
        // TODO: test lineItemFulfillmentInstructions
    }

    /**
     * Test the property 'lineItemFulfillmentStatus'
     */
    @Test
    public void lineItemFulfillmentStatusTest() {
        // TODO: test lineItemFulfillmentStatus
    }

    /**
     * Test the property 'lineItemId'
     */
    @Test
    public void lineItemIdTest() {
        // TODO: test lineItemId
    }

    /**
     * Test the property 'linkedOrderLineItems'
     */
    @Test
    public void linkedOrderLineItemsTest() {
        // TODO: test linkedOrderLineItems
    }

    /**
     * Test the property 'listingMarketplaceId'
     */
    @Test
    public void listingMarketplaceIdTest() {
        // TODO: test listingMarketplaceId
    }

    /**
     * Test the property 'properties'
     */
    @Test
    public void propertiesTest() {
        // TODO: test properties
    }

    /**
     * Test the property 'purchaseMarketplaceId'
     */
    @Test
    public void purchaseMarketplaceIdTest() {
        // TODO: test purchaseMarketplaceId
    }

    /**
     * Test the property 'quantity'
     */
    @Test
    public void quantityTest() {
        // TODO: test quantity
    }

    /**
     * Test the property 'refunds'
     */
    @Test
    public void refundsTest() {
        // TODO: test refunds
    }

    /**
     * Test the property 'sku'
     */
    @Test
    public void skuTest() {
        // TODO: test sku
    }

    /**
     * Test the property 'soldFormat'
     */
    @Test
    public void soldFormatTest() {
        // TODO: test soldFormat
    }

    /**
     * Test the property 'taxes'
     */
    @Test
    public void taxesTest() {
        // TODO: test taxes
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'total'
     */
    @Test
    public void totalTest() {
        // TODO: test total
    }

    /**
     * Test the property 'variationAspects'
     */
    @Test
    public void variationAspectsTest() {
        // TODO: test variationAspects
    }

}
