/*
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ExtendedContact;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * This type contains shipping information for a fulfillment, including the shipping carrier, the shipping service option, the shipment destination, and the Global Shipping Program reference ID.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:39:33.190773-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ShippingStep {
  public static final String SERIALIZED_NAME_SHIP_TO = "shipTo";
  @SerializedName(SERIALIZED_NAME_SHIP_TO)
  private ExtendedContact shipTo;

  public static final String SERIALIZED_NAME_SHIP_TO_REFERENCE_ID = "shipToReferenceId";
  @SerializedName(SERIALIZED_NAME_SHIP_TO_REFERENCE_ID)
  private String shipToReferenceId;

  public static final String SERIALIZED_NAME_SHIPPING_CARRIER_CODE = "shippingCarrierCode";
  @SerializedName(SERIALIZED_NAME_SHIPPING_CARRIER_CODE)
  private String shippingCarrierCode;

  public static final String SERIALIZED_NAME_SHIPPING_SERVICE_CODE = "shippingServiceCode";
  @SerializedName(SERIALIZED_NAME_SHIPPING_SERVICE_CODE)
  private String shippingServiceCode;

  public ShippingStep() {
  }

  public ShippingStep shipTo(ExtendedContact shipTo) {
    this.shipTo = shipTo;
    return this;
  }

  /**
   * Get shipTo
   * @return shipTo
   */
  @javax.annotation.Nullable
  public ExtendedContact getShipTo() {
    return shipTo;
  }

  public void setShipTo(ExtendedContact shipTo) {
    this.shipTo = shipTo;
  }


  public ShippingStep shipToReferenceId(String shipToReferenceId) {
    this.shipToReferenceId = shipToReferenceId;
    return this;
  }

  /**
   * This is the unique identifer of the Global Shipping Program (GSP) shipment. This field is only returned if the line item is being shipped via GSP (the value of the &lt;b&gt;fulfillmentStartInstructions.ebaySupportedFulfillment&lt;/b&gt; field will be &lt;code&gt;true&lt;/code&gt;. The international shipping provider uses the &lt;b&gt;shipToReferenceId&lt;/b&gt; value as the primary reference number to retrieve the relevant details about the buyer, the order, and the fulfillment, so the shipment can be completed. &lt;br&gt;&lt;br&gt;Sellers must include this value on the shipping label immediately above the street address of the international shipping provider. &lt;br&gt;&lt;br&gt;Example: \&quot;Reference #1234567890123456\&quot; &lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; This value is the same as the &lt;b&gt;ShipToAddress.ReferenceID&lt;/b&gt; value returned by the Trading API&#39;s GetOrders call.&lt;/span&gt;
   * @return shipToReferenceId
   */
  @javax.annotation.Nullable
  public String getShipToReferenceId() {
    return shipToReferenceId;
  }

  public void setShipToReferenceId(String shipToReferenceId) {
    this.shipToReferenceId = shipToReferenceId;
  }


  public ShippingStep shippingCarrierCode(String shippingCarrierCode) {
    this.shippingCarrierCode = shippingCarrierCode;
    return this;
  }

  /**
   * The unique identifier of the shipping carrier being used to ship the line item. &lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; The Trading API&#39;s &lt;a href&#x3D;\&quot;https://developer.ebay.com/devzone/XML/docs/Reference/eBay/GeteBayDetails.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;GeteBayDetails&lt;/a&gt; call can be used to retrieve the latest shipping carrier and shipping service option enumeration values.&lt;/span&gt;
   * @return shippingCarrierCode
   */
  @javax.annotation.Nullable
  public String getShippingCarrierCode() {
    return shippingCarrierCode;
  }

  public void setShippingCarrierCode(String shippingCarrierCode) {
    this.shippingCarrierCode = shippingCarrierCode;
  }


  public ShippingStep shippingServiceCode(String shippingServiceCode) {
    this.shippingServiceCode = shippingServiceCode;
    return this;
  }

  /**
   * The unique identifier of the shipping service option being used to ship the line item.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; Use the Trading API&#39;s &lt;a href&#x3D;\&quot;/devzone/XML/docs/Reference/eBay/GeteBayDetails.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;GeteBayDetails&lt;/a&gt; call to retrieve the latest shipping carrier and shipping service option enumeration values. When making the &lt;a href&#x3D;\&quot;/devzone/XML/docs/Reference/eBay/GeteBayDetails.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;GeteBayDetails&lt;/a&gt; call, include the &lt;strong&gt;DetailName&lt;/strong&gt; field in the request payload and set its value to &lt;code&gt;ShippingServiceDetails&lt;/code&gt;. Each valid shipping service option (returned in &lt;strong&gt;ShippingServiceDetails.ShippingService&lt;/strong&gt; field) and corresponding shipping carrier (returned in &lt;strong&gt;ShippingServiceDetails.ShippingCarrier&lt;/strong&gt; field) is returned in response payload.&lt;/span&gt;
   * @return shippingServiceCode
   */
  @javax.annotation.Nullable
  public String getShippingServiceCode() {
    return shippingServiceCode;
  }

  public void setShippingServiceCode(String shippingServiceCode) {
    this.shippingServiceCode = shippingServiceCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShippingStep shippingStep = (ShippingStep) o;
    return Objects.equals(this.shipTo, shippingStep.shipTo) &&
        Objects.equals(this.shipToReferenceId, shippingStep.shipToReferenceId) &&
        Objects.equals(this.shippingCarrierCode, shippingStep.shippingCarrierCode) &&
        Objects.equals(this.shippingServiceCode, shippingStep.shippingServiceCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(shipTo, shipToReferenceId, shippingCarrierCode, shippingServiceCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShippingStep {\n");
    sb.append("    shipTo: ").append(toIndentedString(shipTo)).append("\n");
    sb.append("    shipToReferenceId: ").append(toIndentedString(shipToReferenceId)).append("\n");
    sb.append("    shippingCarrierCode: ").append(toIndentedString(shippingCarrierCode)).append("\n");
    sb.append("    shippingServiceCode: ").append(toIndentedString(shippingServiceCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("shipTo");
    openapiFields.add("shipToReferenceId");
    openapiFields.add("shippingCarrierCode");
    openapiFields.add("shippingServiceCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ShippingStep
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ShippingStep.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ShippingStep is not found in the empty JSON string", ShippingStep.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ShippingStep.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ShippingStep` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `shipTo`
      if (jsonObj.get("shipTo") != null && !jsonObj.get("shipTo").isJsonNull()) {
        ExtendedContact.validateJsonElement(jsonObj.get("shipTo"));
      }
      if ((jsonObj.get("shipToReferenceId") != null && !jsonObj.get("shipToReferenceId").isJsonNull()) && !jsonObj.get("shipToReferenceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipToReferenceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipToReferenceId").toString()));
      }
      if ((jsonObj.get("shippingCarrierCode") != null && !jsonObj.get("shippingCarrierCode").isJsonNull()) && !jsonObj.get("shippingCarrierCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingCarrierCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingCarrierCode").toString()));
      }
      if ((jsonObj.get("shippingServiceCode") != null && !jsonObj.get("shippingServiceCode").isJsonNull()) && !jsonObj.get("shippingServiceCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingServiceCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingServiceCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ShippingStep.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ShippingStep' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ShippingStep> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ShippingStep.class));

       return (TypeAdapter<T>) new TypeAdapter<ShippingStep>() {
           @Override
           public void write(JsonWriter out, ShippingStep value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ShippingStep read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ShippingStep given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ShippingStep
   * @throws IOException if the JSON string is invalid with respect to ShippingStep
   */
  public static ShippingStep fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ShippingStep.class);
  }

  /**
   * Convert an instance of ShippingStep to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

