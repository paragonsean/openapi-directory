/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEbayVaultProgram.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEbayVaultProgram::OAIEbayVaultProgram(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEbayVaultProgram::OAIEbayVaultProgram() {
    this->initializeModel();
}

OAIEbayVaultProgram::~OAIEbayVaultProgram() {}

void OAIEbayVaultProgram::initializeModel() {

    m_fulfillment_type_isSet = false;
    m_fulfillment_type_isValid = false;
}

void OAIEbayVaultProgram::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEbayVaultProgram::fromJsonObject(QJsonObject json) {

    m_fulfillment_type_isValid = ::OpenAPI::fromJsonValue(m_fulfillment_type, json[QString("fulfillmentType")]);
    m_fulfillment_type_isSet = !json[QString("fulfillmentType")].isNull() && m_fulfillment_type_isValid;
}

QString OAIEbayVaultProgram::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEbayVaultProgram::asJsonObject() const {
    QJsonObject obj;
    if (m_fulfillment_type_isSet) {
        obj.insert(QString("fulfillmentType"), ::OpenAPI::toJsonValue(m_fulfillment_type));
    }
    return obj;
}

QString OAIEbayVaultProgram::getFulfillmentType() const {
    return m_fulfillment_type;
}
void OAIEbayVaultProgram::setFulfillmentType(const QString &fulfillment_type) {
    m_fulfillment_type = fulfillment_type;
    m_fulfillment_type_isSet = true;
}

bool OAIEbayVaultProgram::is_fulfillment_type_Set() const{
    return m_fulfillment_type_isSet;
}

bool OAIEbayVaultProgram::is_fulfillment_type_Valid() const{
    return m_fulfillment_type_isValid;
}

bool OAIEbayVaultProgram::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fulfillment_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEbayVaultProgram::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
