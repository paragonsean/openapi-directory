/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPaymentDisputeSummary.h
 *
 * This type is used by each payment dispute that is returned with the &lt;strong&gt;getPaymentDisputeSummaries&lt;/strong&gt; method.
 */

#ifndef OAIPaymentDisputeSummary_H
#define OAIPaymentDisputeSummary_H

#include <QJsonObject>

#include "OAISimpleAmount.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISimpleAmount;

class OAIPaymentDisputeSummary : public OAIObject {
public:
    OAIPaymentDisputeSummary();
    OAIPaymentDisputeSummary(QString json);
    ~OAIPaymentDisputeSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISimpleAmount getAmount() const;
    void setAmount(const OAISimpleAmount &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getBuyerUsername() const;
    void setBuyerUsername(const QString &buyer_username);
    bool is_buyer_username_Set() const;
    bool is_buyer_username_Valid() const;

    QString getClosedDate() const;
    void setClosedDate(const QString &closed_date);
    bool is_closed_date_Set() const;
    bool is_closed_date_Valid() const;

    QString getOpenDate() const;
    void setOpenDate(const QString &open_date);
    bool is_open_date_Set() const;
    bool is_open_date_Valid() const;

    QString getOrderId() const;
    void setOrderId(const QString &order_id);
    bool is_order_id_Set() const;
    bool is_order_id_Valid() const;

    QString getPaymentDisputeId() const;
    void setPaymentDisputeId(const QString &payment_dispute_id);
    bool is_payment_dispute_id_Set() const;
    bool is_payment_dispute_id_Valid() const;

    QString getPaymentDisputeStatus() const;
    void setPaymentDisputeStatus(const QString &payment_dispute_status);
    bool is_payment_dispute_status_Set() const;
    bool is_payment_dispute_status_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    QString getRespondByDate() const;
    void setRespondByDate(const QString &respond_by_date);
    bool is_respond_by_date_Set() const;
    bool is_respond_by_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISimpleAmount m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_buyer_username;
    bool m_buyer_username_isSet;
    bool m_buyer_username_isValid;

    QString m_closed_date;
    bool m_closed_date_isSet;
    bool m_closed_date_isValid;

    QString m_open_date;
    bool m_open_date_isSet;
    bool m_open_date_isValid;

    QString m_order_id;
    bool m_order_id_isSet;
    bool m_order_id_isValid;

    QString m_payment_dispute_id;
    bool m_payment_dispute_id_isSet;
    bool m_payment_dispute_id_isValid;

    QString m_payment_dispute_status;
    bool m_payment_dispute_status_isSet;
    bool m_payment_dispute_status_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    QString m_respond_by_date;
    bool m_respond_by_date_isSet;
    bool m_respond_by_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPaymentDisputeSummary)

#endif // OAIPaymentDisputeSummary_H
