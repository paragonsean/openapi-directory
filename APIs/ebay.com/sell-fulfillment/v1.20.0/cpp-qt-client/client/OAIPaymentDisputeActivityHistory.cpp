/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentDisputeActivityHistory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentDisputeActivityHistory::OAIPaymentDisputeActivityHistory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentDisputeActivityHistory::OAIPaymentDisputeActivityHistory() {
    this->initializeModel();
}

OAIPaymentDisputeActivityHistory::~OAIPaymentDisputeActivityHistory() {}

void OAIPaymentDisputeActivityHistory::initializeModel() {

    m_activity_isSet = false;
    m_activity_isValid = false;
}

void OAIPaymentDisputeActivityHistory::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentDisputeActivityHistory::fromJsonObject(QJsonObject json) {

    m_activity_isValid = ::OpenAPI::fromJsonValue(m_activity, json[QString("activity")]);
    m_activity_isSet = !json[QString("activity")].isNull() && m_activity_isValid;
}

QString OAIPaymentDisputeActivityHistory::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentDisputeActivityHistory::asJsonObject() const {
    QJsonObject obj;
    if (m_activity.size() > 0) {
        obj.insert(QString("activity"), ::OpenAPI::toJsonValue(m_activity));
    }
    return obj;
}

QList<OAIPaymentDisputeActivity> OAIPaymentDisputeActivityHistory::getActivity() const {
    return m_activity;
}
void OAIPaymentDisputeActivityHistory::setActivity(const QList<OAIPaymentDisputeActivity> &activity) {
    m_activity = activity;
    m_activity_isSet = true;
}

bool OAIPaymentDisputeActivityHistory::is_activity_Set() const{
    return m_activity_isSet;
}

bool OAIPaymentDisputeActivityHistory::is_activity_Valid() const{
    return m_activity_isValid;
}

bool OAIPaymentDisputeActivityHistory::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activity.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentDisputeActivityHistory::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
