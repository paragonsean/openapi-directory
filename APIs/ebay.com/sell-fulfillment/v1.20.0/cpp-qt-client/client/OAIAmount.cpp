/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAmount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAmount::OAIAmount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAmount::OAIAmount() {
    this->initializeModel();
}

OAIAmount::~OAIAmount() {}

void OAIAmount::initializeModel() {

    m_converted_from_currency_isSet = false;
    m_converted_from_currency_isValid = false;

    m_converted_from_value_isSet = false;
    m_converted_from_value_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIAmount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAmount::fromJsonObject(QJsonObject json) {

    m_converted_from_currency_isValid = ::OpenAPI::fromJsonValue(m_converted_from_currency, json[QString("convertedFromCurrency")]);
    m_converted_from_currency_isSet = !json[QString("convertedFromCurrency")].isNull() && m_converted_from_currency_isValid;

    m_converted_from_value_isValid = ::OpenAPI::fromJsonValue(m_converted_from_value, json[QString("convertedFromValue")]);
    m_converted_from_value_isSet = !json[QString("convertedFromValue")].isNull() && m_converted_from_value_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIAmount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAmount::asJsonObject() const {
    QJsonObject obj;
    if (m_converted_from_currency_isSet) {
        obj.insert(QString("convertedFromCurrency"), ::OpenAPI::toJsonValue(m_converted_from_currency));
    }
    if (m_converted_from_value_isSet) {
        obj.insert(QString("convertedFromValue"), ::OpenAPI::toJsonValue(m_converted_from_value));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIAmount::getConvertedFromCurrency() const {
    return m_converted_from_currency;
}
void OAIAmount::setConvertedFromCurrency(const QString &converted_from_currency) {
    m_converted_from_currency = converted_from_currency;
    m_converted_from_currency_isSet = true;
}

bool OAIAmount::is_converted_from_currency_Set() const{
    return m_converted_from_currency_isSet;
}

bool OAIAmount::is_converted_from_currency_Valid() const{
    return m_converted_from_currency_isValid;
}

QString OAIAmount::getConvertedFromValue() const {
    return m_converted_from_value;
}
void OAIAmount::setConvertedFromValue(const QString &converted_from_value) {
    m_converted_from_value = converted_from_value;
    m_converted_from_value_isSet = true;
}

bool OAIAmount::is_converted_from_value_Set() const{
    return m_converted_from_value_isSet;
}

bool OAIAmount::is_converted_from_value_Valid() const{
    return m_converted_from_value_isValid;
}

QString OAIAmount::getCurrency() const {
    return m_currency;
}
void OAIAmount::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIAmount::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIAmount::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAIAmount::getValue() const {
    return m_value;
}
void OAIAmount::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIAmount::is_value_Set() const{
    return m_value_isSet;
}

bool OAIAmount::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIAmount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_converted_from_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_converted_from_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAmount::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
