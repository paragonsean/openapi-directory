/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITax.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITax::OAITax(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITax::OAITax() {
    this->initializeModel();
}

OAITax::~OAITax() {}

void OAITax::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_tax_type_isSet = false;
    m_tax_type_isValid = false;
}

void OAITax::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITax::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_tax_type_isValid = ::OpenAPI::fromJsonValue(m_tax_type, json[QString("taxType")]);
    m_tax_type_isSet = !json[QString("taxType")].isNull() && m_tax_type_isValid;
}

QString OAITax::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITax::asJsonObject() const {
    QJsonObject obj;
    if (m_amount.isSet()) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_tax_type_isSet) {
        obj.insert(QString("taxType"), ::OpenAPI::toJsonValue(m_tax_type));
    }
    return obj;
}

OAIAmount OAITax::getAmount() const {
    return m_amount;
}
void OAITax::setAmount(const OAIAmount &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAITax::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAITax::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAITax::getTaxType() const {
    return m_tax_type;
}
void OAITax::setTaxType(const QString &tax_type) {
    m_tax_type = tax_type;
    m_tax_type_isSet = true;
}

bool OAITax::is_tax_type_Set() const{
    return m_tax_type_isSet;
}

bool OAITax::is_tax_type_Valid() const{
    return m_tax_type_isValid;
}

bool OAITax::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITax::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
