/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILineItem.h
 *
 * This type contains the details of each line item in an order.
 */

#ifndef OAILineItem_H
#define OAILineItem_H

#include <QJsonObject>

#include "OAIAmount.h"
#include "OAIAppliedPromotion.h"
#include "OAIDeliveryCost.h"
#include "OAIEbayCollectAndRemitTax.h"
#include "OAIEbayCollectedCharges.h"
#include "OAIGiftDetails.h"
#include "OAIItemLocation.h"
#include "OAILineItemFulfillmentInstructions.h"
#include "OAILineItemProperties.h"
#include "OAILineItemRefund.h"
#include "OAILinkedOrderLineItem.h"
#include "OAINameValuePair.h"
#include "OAITax.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAppliedPromotion;
class OAIDeliveryCost;
class OAIAmount;
class OAIEbayCollectAndRemitTax;
class OAIEbayCollectedCharges;
class OAIGiftDetails;
class OAIItemLocation;
class OAILineItemFulfillmentInstructions;
class OAILinkedOrderLineItem;
class OAILineItemProperties;
class OAILineItemRefund;
class OAITax;
class OAINameValuePair;

class OAILineItem : public OAIObject {
public:
    OAILineItem();
    OAILineItem(QString json);
    ~OAILineItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAppliedPromotion> getAppliedPromotions() const;
    void setAppliedPromotions(const QList<OAIAppliedPromotion> &applied_promotions);
    bool is_applied_promotions_Set() const;
    bool is_applied_promotions_Valid() const;

    OAIDeliveryCost getDeliveryCost() const;
    void setDeliveryCost(const OAIDeliveryCost &delivery_cost);
    bool is_delivery_cost_Set() const;
    bool is_delivery_cost_Valid() const;

    OAIAmount getDiscountedLineItemCost() const;
    void setDiscountedLineItemCost(const OAIAmount &discounted_line_item_cost);
    bool is_discounted_line_item_cost_Set() const;
    bool is_discounted_line_item_cost_Valid() const;

    QList<OAIEbayCollectAndRemitTax> getEbayCollectAndRemitTaxes() const;
    void setEbayCollectAndRemitTaxes(const QList<OAIEbayCollectAndRemitTax> &ebay_collect_and_remit_taxes);
    bool is_ebay_collect_and_remit_taxes_Set() const;
    bool is_ebay_collect_and_remit_taxes_Valid() const;

    OAIEbayCollectedCharges getEbayCollectedCharges() const;
    void setEbayCollectedCharges(const OAIEbayCollectedCharges &ebay_collected_charges);
    bool is_ebay_collected_charges_Set() const;
    bool is_ebay_collected_charges_Valid() const;

    OAIGiftDetails getGiftDetails() const;
    void setGiftDetails(const OAIGiftDetails &gift_details);
    bool is_gift_details_Set() const;
    bool is_gift_details_Valid() const;

    OAIItemLocation getItemLocation() const;
    void setItemLocation(const OAIItemLocation &item_location);
    bool is_item_location_Set() const;
    bool is_item_location_Valid() const;

    QString getLegacyItemId() const;
    void setLegacyItemId(const QString &legacy_item_id);
    bool is_legacy_item_id_Set() const;
    bool is_legacy_item_id_Valid() const;

    QString getLegacyVariationId() const;
    void setLegacyVariationId(const QString &legacy_variation_id);
    bool is_legacy_variation_id_Set() const;
    bool is_legacy_variation_id_Valid() const;

    OAIAmount getLineItemCost() const;
    void setLineItemCost(const OAIAmount &line_item_cost);
    bool is_line_item_cost_Set() const;
    bool is_line_item_cost_Valid() const;

    OAILineItemFulfillmentInstructions getLineItemFulfillmentInstructions() const;
    void setLineItemFulfillmentInstructions(const OAILineItemFulfillmentInstructions &line_item_fulfillment_instructions);
    bool is_line_item_fulfillment_instructions_Set() const;
    bool is_line_item_fulfillment_instructions_Valid() const;

    QString getLineItemFulfillmentStatus() const;
    void setLineItemFulfillmentStatus(const QString &line_item_fulfillment_status);
    bool is_line_item_fulfillment_status_Set() const;
    bool is_line_item_fulfillment_status_Valid() const;

    QString getLineItemId() const;
    void setLineItemId(const QString &line_item_id);
    bool is_line_item_id_Set() const;
    bool is_line_item_id_Valid() const;

    QList<OAILinkedOrderLineItem> getLinkedOrderLineItems() const;
    void setLinkedOrderLineItems(const QList<OAILinkedOrderLineItem> &linked_order_line_items);
    bool is_linked_order_line_items_Set() const;
    bool is_linked_order_line_items_Valid() const;

    QString getListingMarketplaceId() const;
    void setListingMarketplaceId(const QString &listing_marketplace_id);
    bool is_listing_marketplace_id_Set() const;
    bool is_listing_marketplace_id_Valid() const;

    OAILineItemProperties getProperties() const;
    void setProperties(const OAILineItemProperties &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    QString getPurchaseMarketplaceId() const;
    void setPurchaseMarketplaceId(const QString &purchase_marketplace_id);
    bool is_purchase_marketplace_id_Set() const;
    bool is_purchase_marketplace_id_Valid() const;

    qint32 getQuantity() const;
    void setQuantity(const qint32 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QList<OAILineItemRefund> getRefunds() const;
    void setRefunds(const QList<OAILineItemRefund> &refunds);
    bool is_refunds_Set() const;
    bool is_refunds_Valid() const;

    QString getSku() const;
    void setSku(const QString &sku);
    bool is_sku_Set() const;
    bool is_sku_Valid() const;

    QString getSoldFormat() const;
    void setSoldFormat(const QString &sold_format);
    bool is_sold_format_Set() const;
    bool is_sold_format_Valid() const;

    QList<OAITax> getTaxes() const;
    void setTaxes(const QList<OAITax> &taxes);
    bool is_taxes_Set() const;
    bool is_taxes_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    OAIAmount getTotal() const;
    void setTotal(const OAIAmount &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    QList<OAINameValuePair> getVariationAspects() const;
    void setVariationAspects(const QList<OAINameValuePair> &variation_aspects);
    bool is_variation_aspects_Set() const;
    bool is_variation_aspects_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAppliedPromotion> m_applied_promotions;
    bool m_applied_promotions_isSet;
    bool m_applied_promotions_isValid;

    OAIDeliveryCost m_delivery_cost;
    bool m_delivery_cost_isSet;
    bool m_delivery_cost_isValid;

    OAIAmount m_discounted_line_item_cost;
    bool m_discounted_line_item_cost_isSet;
    bool m_discounted_line_item_cost_isValid;

    QList<OAIEbayCollectAndRemitTax> m_ebay_collect_and_remit_taxes;
    bool m_ebay_collect_and_remit_taxes_isSet;
    bool m_ebay_collect_and_remit_taxes_isValid;

    OAIEbayCollectedCharges m_ebay_collected_charges;
    bool m_ebay_collected_charges_isSet;
    bool m_ebay_collected_charges_isValid;

    OAIGiftDetails m_gift_details;
    bool m_gift_details_isSet;
    bool m_gift_details_isValid;

    OAIItemLocation m_item_location;
    bool m_item_location_isSet;
    bool m_item_location_isValid;

    QString m_legacy_item_id;
    bool m_legacy_item_id_isSet;
    bool m_legacy_item_id_isValid;

    QString m_legacy_variation_id;
    bool m_legacy_variation_id_isSet;
    bool m_legacy_variation_id_isValid;

    OAIAmount m_line_item_cost;
    bool m_line_item_cost_isSet;
    bool m_line_item_cost_isValid;

    OAILineItemFulfillmentInstructions m_line_item_fulfillment_instructions;
    bool m_line_item_fulfillment_instructions_isSet;
    bool m_line_item_fulfillment_instructions_isValid;

    QString m_line_item_fulfillment_status;
    bool m_line_item_fulfillment_status_isSet;
    bool m_line_item_fulfillment_status_isValid;

    QString m_line_item_id;
    bool m_line_item_id_isSet;
    bool m_line_item_id_isValid;

    QList<OAILinkedOrderLineItem> m_linked_order_line_items;
    bool m_linked_order_line_items_isSet;
    bool m_linked_order_line_items_isValid;

    QString m_listing_marketplace_id;
    bool m_listing_marketplace_id_isSet;
    bool m_listing_marketplace_id_isValid;

    OAILineItemProperties m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    QString m_purchase_marketplace_id;
    bool m_purchase_marketplace_id_isSet;
    bool m_purchase_marketplace_id_isValid;

    qint32 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QList<OAILineItemRefund> m_refunds;
    bool m_refunds_isSet;
    bool m_refunds_isValid;

    QString m_sku;
    bool m_sku_isSet;
    bool m_sku_isValid;

    QString m_sold_format;
    bool m_sold_format_isSet;
    bool m_sold_format_isValid;

    QList<OAITax> m_taxes;
    bool m_taxes_isSet;
    bool m_taxes_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    OAIAmount m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    QList<OAINameValuePair> m_variation_aspects;
    bool m_variation_aspects_isSet;
    bool m_variation_aspects_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILineItem)

#endif // OAILineItem_H
