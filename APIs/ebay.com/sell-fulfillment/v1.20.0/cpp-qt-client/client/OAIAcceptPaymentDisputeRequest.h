/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAcceptPaymentDisputeRequest.h
 *
 * This type is used by base request of the &lt;strong&gt;acceptPaymentDispute&lt;/strong&gt; method.
 */

#ifndef OAIAcceptPaymentDisputeRequest_H
#define OAIAcceptPaymentDisputeRequest_H

#include <QJsonObject>

#include "OAIReturnAddress.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReturnAddress;

class OAIAcceptPaymentDisputeRequest : public OAIObject {
public:
    OAIAcceptPaymentDisputeRequest();
    OAIAcceptPaymentDisputeRequest(QString json);
    ~OAIAcceptPaymentDisputeRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIReturnAddress getReturnAddress() const;
    void setReturnAddress(const OAIReturnAddress &return_address);
    bool is_return_address_Set() const;
    bool is_return_address_Valid() const;

    qint32 getRevision() const;
    void setRevision(const qint32 &revision);
    bool is_revision_Set() const;
    bool is_revision_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIReturnAddress m_return_address;
    bool m_return_address_isSet;
    bool m_return_address_isValid;

    qint32 m_revision;
    bool m_revision_isSet;
    bool m_revision_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAcceptPaymentDisputeRequest)

#endif // OAIAcceptPaymentDisputeRequest_H
