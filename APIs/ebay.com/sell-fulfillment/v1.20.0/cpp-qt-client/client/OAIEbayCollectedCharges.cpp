/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEbayCollectedCharges.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEbayCollectedCharges::OAIEbayCollectedCharges(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEbayCollectedCharges::OAIEbayCollectedCharges() {
    this->initializeModel();
}

OAIEbayCollectedCharges::~OAIEbayCollectedCharges() {}

void OAIEbayCollectedCharges::initializeModel() {

    m_ebay_shipping_isSet = false;
    m_ebay_shipping_isValid = false;
}

void OAIEbayCollectedCharges::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEbayCollectedCharges::fromJsonObject(QJsonObject json) {

    m_ebay_shipping_isValid = ::OpenAPI::fromJsonValue(m_ebay_shipping, json[QString("ebayShipping")]);
    m_ebay_shipping_isSet = !json[QString("ebayShipping")].isNull() && m_ebay_shipping_isValid;
}

QString OAIEbayCollectedCharges::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEbayCollectedCharges::asJsonObject() const {
    QJsonObject obj;
    if (m_ebay_shipping.isSet()) {
        obj.insert(QString("ebayShipping"), ::OpenAPI::toJsonValue(m_ebay_shipping));
    }
    return obj;
}

OAIAmount OAIEbayCollectedCharges::getEbayShipping() const {
    return m_ebay_shipping;
}
void OAIEbayCollectedCharges::setEbayShipping(const OAIAmount &ebay_shipping) {
    m_ebay_shipping = ebay_shipping;
    m_ebay_shipping_isSet = true;
}

bool OAIEbayCollectedCharges::is_ebay_shipping_Set() const{
    return m_ebay_shipping_isSet;
}

bool OAIEbayCollectedCharges::is_ebay_shipping_Valid() const{
    return m_ebay_shipping_isValid;
}

bool OAIEbayCollectedCharges::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ebay_shipping.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEbayCollectedCharges::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
