/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFulfillmentStartInstruction.h
 *
 * This type contains a set of specifications for processing a fulfillment of an order, including the type of fulfillment, shipping carrier and service, addressing details, and estimated delivery window. These instructions are derived from the buyer&#39;s and seller&#39;s eBay account preferences, the listing parameters, and the buyer&#39;s checkout selections. The seller can use them as a starting point for packaging, addressing, and shipping the order.
 */

#ifndef OAIFulfillmentStartInstruction_H
#define OAIFulfillmentStartInstruction_H

#include <QJsonObject>

#include "OAIAddress.h"
#include "OAIPickupStep.h"
#include "OAIShippingStep.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddress;
class OAIPickupStep;
class OAIShippingStep;

class OAIFulfillmentStartInstruction : public OAIObject {
public:
    OAIFulfillmentStartInstruction();
    OAIFulfillmentStartInstruction(QString json);
    ~OAIFulfillmentStartInstruction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEbaySupportedFulfillment() const;
    void setEbaySupportedFulfillment(const bool &ebay_supported_fulfillment);
    bool is_ebay_supported_fulfillment_Set() const;
    bool is_ebay_supported_fulfillment_Valid() const;

    OAIAddress getFinalDestinationAddress() const;
    void setFinalDestinationAddress(const OAIAddress &final_destination_address);
    bool is_final_destination_address_Set() const;
    bool is_final_destination_address_Valid() const;

    QString getFulfillmentInstructionsType() const;
    void setFulfillmentInstructionsType(const QString &fulfillment_instructions_type);
    bool is_fulfillment_instructions_type_Set() const;
    bool is_fulfillment_instructions_type_Valid() const;

    QString getMaxEstimatedDeliveryDate() const;
    void setMaxEstimatedDeliveryDate(const QString &max_estimated_delivery_date);
    bool is_max_estimated_delivery_date_Set() const;
    bool is_max_estimated_delivery_date_Valid() const;

    QString getMinEstimatedDeliveryDate() const;
    void setMinEstimatedDeliveryDate(const QString &min_estimated_delivery_date);
    bool is_min_estimated_delivery_date_Set() const;
    bool is_min_estimated_delivery_date_Valid() const;

    OAIPickupStep getPickupStep() const;
    void setPickupStep(const OAIPickupStep &pickup_step);
    bool is_pickup_step_Set() const;
    bool is_pickup_step_Valid() const;

    OAIShippingStep getShippingStep() const;
    void setShippingStep(const OAIShippingStep &shipping_step);
    bool is_shipping_step_Set() const;
    bool is_shipping_step_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_ebay_supported_fulfillment;
    bool m_ebay_supported_fulfillment_isSet;
    bool m_ebay_supported_fulfillment_isValid;

    OAIAddress m_final_destination_address;
    bool m_final_destination_address_isSet;
    bool m_final_destination_address_isValid;

    QString m_fulfillment_instructions_type;
    bool m_fulfillment_instructions_type_isSet;
    bool m_fulfillment_instructions_type_isValid;

    QString m_max_estimated_delivery_date;
    bool m_max_estimated_delivery_date_isSet;
    bool m_max_estimated_delivery_date_isValid;

    QString m_min_estimated_delivery_date;
    bool m_min_estimated_delivery_date_isSet;
    bool m_min_estimated_delivery_date_isValid;

    OAIPickupStep m_pickup_step;
    bool m_pickup_step_isSet;
    bool m_pickup_step_isValid;

    OAIShippingStep m_shipping_step;
    bool m_shipping_step_isSet;
    bool m_shipping_step_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFulfillmentStartInstruction)

#endif // OAIFulfillmentStartInstruction_H
