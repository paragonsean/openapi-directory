/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileInfo::OAIFileInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileInfo::OAIFileInfo() {
    this->initializeModel();
}

OAIFileInfo::~OAIFileInfo() {}

void OAIFileInfo::initializeModel() {

    m_file_id_isSet = false;
    m_file_id_isValid = false;

    m_file_type_isSet = false;
    m_file_type_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_uploaded_date_isSet = false;
    m_uploaded_date_isValid = false;
}

void OAIFileInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFileInfo::fromJsonObject(QJsonObject json) {

    m_file_id_isValid = ::OpenAPI::fromJsonValue(m_file_id, json[QString("fileId")]);
    m_file_id_isSet = !json[QString("fileId")].isNull() && m_file_id_isValid;

    m_file_type_isValid = ::OpenAPI::fromJsonValue(m_file_type, json[QString("fileType")]);
    m_file_type_isSet = !json[QString("fileType")].isNull() && m_file_type_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_uploaded_date_isValid = ::OpenAPI::fromJsonValue(m_uploaded_date, json[QString("uploadedDate")]);
    m_uploaded_date_isSet = !json[QString("uploadedDate")].isNull() && m_uploaded_date_isValid;
}

QString OAIFileInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFileInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_file_id_isSet) {
        obj.insert(QString("fileId"), ::OpenAPI::toJsonValue(m_file_id));
    }
    if (m_file_type_isSet) {
        obj.insert(QString("fileType"), ::OpenAPI::toJsonValue(m_file_type));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_uploaded_date_isSet) {
        obj.insert(QString("uploadedDate"), ::OpenAPI::toJsonValue(m_uploaded_date));
    }
    return obj;
}

QString OAIFileInfo::getFileId() const {
    return m_file_id;
}
void OAIFileInfo::setFileId(const QString &file_id) {
    m_file_id = file_id;
    m_file_id_isSet = true;
}

bool OAIFileInfo::is_file_id_Set() const{
    return m_file_id_isSet;
}

bool OAIFileInfo::is_file_id_Valid() const{
    return m_file_id_isValid;
}

QString OAIFileInfo::getFileType() const {
    return m_file_type;
}
void OAIFileInfo::setFileType(const QString &file_type) {
    m_file_type = file_type;
    m_file_type_isSet = true;
}

bool OAIFileInfo::is_file_type_Set() const{
    return m_file_type_isSet;
}

bool OAIFileInfo::is_file_type_Valid() const{
    return m_file_type_isValid;
}

QString OAIFileInfo::getName() const {
    return m_name;
}
void OAIFileInfo::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIFileInfo::is_name_Set() const{
    return m_name_isSet;
}

bool OAIFileInfo::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIFileInfo::getUploadedDate() const {
    return m_uploaded_date;
}
void OAIFileInfo::setUploadedDate(const QString &uploaded_date) {
    m_uploaded_date = uploaded_date;
    m_uploaded_date_isSet = true;
}

bool OAIFileInfo::is_uploaded_date_Set() const{
    return m_uploaded_date_isSet;
}

bool OAIFileInfo::is_uploaded_date_Valid() const{
    return m_uploaded_date_isValid;
}

bool OAIFileInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uploaded_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFileInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
