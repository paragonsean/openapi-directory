/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrder.h
 *
 * This type contains the details of an order, including information about the buyer, order history, shipping fulfillments, line items, costs, payments, and order fulfillment status.
 */

#ifndef OAIOrder_H
#define OAIOrder_H

#include <QJsonObject>

#include "OAIAmount.h"
#include "OAIBuyer.h"
#include "OAICancelStatus.h"
#include "OAIFulfillmentStartInstruction.h"
#include "OAILineItem.h"
#include "OAIPaymentSummary.h"
#include "OAIPricingSummary.h"
#include "OAIProgram.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBuyer;
class OAICancelStatus;
class OAIFulfillmentStartInstruction;
class OAILineItem;
class OAIPaymentSummary;
class OAIPricingSummary;
class OAIProgram;
class OAIAmount;

class OAIOrder : public OAIObject {
public:
    OAIOrder();
    OAIOrder(QString json);
    ~OAIOrder() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBuyer getBuyer() const;
    void setBuyer(const OAIBuyer &buyer);
    bool is_buyer_Set() const;
    bool is_buyer_Valid() const;

    QString getBuyerCheckoutNotes() const;
    void setBuyerCheckoutNotes(const QString &buyer_checkout_notes);
    bool is_buyer_checkout_notes_Set() const;
    bool is_buyer_checkout_notes_Valid() const;

    OAICancelStatus getCancelStatus() const;
    void setCancelStatus(const OAICancelStatus &cancel_status);
    bool is_cancel_status_Set() const;
    bool is_cancel_status_Valid() const;

    QString getCreationDate() const;
    void setCreationDate(const QString &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    bool isEbayCollectAndRemitTax() const;
    void setEbayCollectAndRemitTax(const bool &ebay_collect_and_remit_tax);
    bool is_ebay_collect_and_remit_tax_Set() const;
    bool is_ebay_collect_and_remit_tax_Valid() const;

    QList<QString> getFulfillmentHrefs() const;
    void setFulfillmentHrefs(const QList<QString> &fulfillment_hrefs);
    bool is_fulfillment_hrefs_Set() const;
    bool is_fulfillment_hrefs_Valid() const;

    QList<OAIFulfillmentStartInstruction> getFulfillmentStartInstructions() const;
    void setFulfillmentStartInstructions(const QList<OAIFulfillmentStartInstruction> &fulfillment_start_instructions);
    bool is_fulfillment_start_instructions_Set() const;
    bool is_fulfillment_start_instructions_Valid() const;

    QString getLastModifiedDate() const;
    void setLastModifiedDate(const QString &last_modified_date);
    bool is_last_modified_date_Set() const;
    bool is_last_modified_date_Valid() const;

    QString getLegacyOrderId() const;
    void setLegacyOrderId(const QString &legacy_order_id);
    bool is_legacy_order_id_Set() const;
    bool is_legacy_order_id_Valid() const;

    QList<OAILineItem> getLineItems() const;
    void setLineItems(const QList<OAILineItem> &line_items);
    bool is_line_items_Set() const;
    bool is_line_items_Valid() const;

    QString getOrderFulfillmentStatus() const;
    void setOrderFulfillmentStatus(const QString &order_fulfillment_status);
    bool is_order_fulfillment_status_Set() const;
    bool is_order_fulfillment_status_Valid() const;

    QString getOrderId() const;
    void setOrderId(const QString &order_id);
    bool is_order_id_Set() const;
    bool is_order_id_Valid() const;

    QString getOrderPaymentStatus() const;
    void setOrderPaymentStatus(const QString &order_payment_status);
    bool is_order_payment_status_Set() const;
    bool is_order_payment_status_Valid() const;

    OAIPaymentSummary getPaymentSummary() const;
    void setPaymentSummary(const OAIPaymentSummary &payment_summary);
    bool is_payment_summary_Set() const;
    bool is_payment_summary_Valid() const;

    OAIPricingSummary getPricingSummary() const;
    void setPricingSummary(const OAIPricingSummary &pricing_summary);
    bool is_pricing_summary_Set() const;
    bool is_pricing_summary_Valid() const;

    OAIProgram getProgram() const;
    void setProgram(const OAIProgram &program);
    bool is_program_Set() const;
    bool is_program_Valid() const;

    QString getSalesRecordReference() const;
    void setSalesRecordReference(const QString &sales_record_reference);
    bool is_sales_record_reference_Set() const;
    bool is_sales_record_reference_Valid() const;

    QString getSellerId() const;
    void setSellerId(const QString &seller_id);
    bool is_seller_id_Set() const;
    bool is_seller_id_Valid() const;

    OAIAmount getTotalFeeBasisAmount() const;
    void setTotalFeeBasisAmount(const OAIAmount &total_fee_basis_amount);
    bool is_total_fee_basis_amount_Set() const;
    bool is_total_fee_basis_amount_Valid() const;

    OAIAmount getTotalMarketplaceFee() const;
    void setTotalMarketplaceFee(const OAIAmount &total_marketplace_fee);
    bool is_total_marketplace_fee_Set() const;
    bool is_total_marketplace_fee_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBuyer m_buyer;
    bool m_buyer_isSet;
    bool m_buyer_isValid;

    QString m_buyer_checkout_notes;
    bool m_buyer_checkout_notes_isSet;
    bool m_buyer_checkout_notes_isValid;

    OAICancelStatus m_cancel_status;
    bool m_cancel_status_isSet;
    bool m_cancel_status_isValid;

    QString m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    bool m_ebay_collect_and_remit_tax;
    bool m_ebay_collect_and_remit_tax_isSet;
    bool m_ebay_collect_and_remit_tax_isValid;

    QList<QString> m_fulfillment_hrefs;
    bool m_fulfillment_hrefs_isSet;
    bool m_fulfillment_hrefs_isValid;

    QList<OAIFulfillmentStartInstruction> m_fulfillment_start_instructions;
    bool m_fulfillment_start_instructions_isSet;
    bool m_fulfillment_start_instructions_isValid;

    QString m_last_modified_date;
    bool m_last_modified_date_isSet;
    bool m_last_modified_date_isValid;

    QString m_legacy_order_id;
    bool m_legacy_order_id_isSet;
    bool m_legacy_order_id_isValid;

    QList<OAILineItem> m_line_items;
    bool m_line_items_isSet;
    bool m_line_items_isValid;

    QString m_order_fulfillment_status;
    bool m_order_fulfillment_status_isSet;
    bool m_order_fulfillment_status_isValid;

    QString m_order_id;
    bool m_order_id_isSet;
    bool m_order_id_isValid;

    QString m_order_payment_status;
    bool m_order_payment_status_isSet;
    bool m_order_payment_status_isValid;

    OAIPaymentSummary m_payment_summary;
    bool m_payment_summary_isSet;
    bool m_payment_summary_isValid;

    OAIPricingSummary m_pricing_summary;
    bool m_pricing_summary_isSet;
    bool m_pricing_summary_isValid;

    OAIProgram m_program;
    bool m_program_isSet;
    bool m_program_isValid;

    QString m_sales_record_reference;
    bool m_sales_record_reference_isSet;
    bool m_sales_record_reference_isValid;

    QString m_seller_id;
    bool m_seller_id_isSet;
    bool m_seller_id_isValid;

    OAIAmount m_total_fee_basis_amount;
    bool m_total_fee_basis_amount_isSet;
    bool m_total_fee_basis_amount_isValid;

    OAIAmount m_total_marketplace_fee;
    bool m_total_marketplace_fee_isSet;
    bool m_total_marketplace_fee_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrder)

#endif // OAIOrder_H
