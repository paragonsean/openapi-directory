/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILineItemProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILineItemProperties::OAILineItemProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILineItemProperties::OAILineItemProperties() {
    this->initializeModel();
}

OAILineItemProperties::~OAILineItemProperties() {}

void OAILineItemProperties::initializeModel() {

    m_buyer_protection_isSet = false;
    m_buyer_protection_isValid = false;

    m_from_best_offer_isSet = false;
    m_from_best_offer_isValid = false;

    m_sold_via_ad_campaign_isSet = false;
    m_sold_via_ad_campaign_isValid = false;
}

void OAILineItemProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILineItemProperties::fromJsonObject(QJsonObject json) {

    m_buyer_protection_isValid = ::OpenAPI::fromJsonValue(m_buyer_protection, json[QString("buyerProtection")]);
    m_buyer_protection_isSet = !json[QString("buyerProtection")].isNull() && m_buyer_protection_isValid;

    m_from_best_offer_isValid = ::OpenAPI::fromJsonValue(m_from_best_offer, json[QString("fromBestOffer")]);
    m_from_best_offer_isSet = !json[QString("fromBestOffer")].isNull() && m_from_best_offer_isValid;

    m_sold_via_ad_campaign_isValid = ::OpenAPI::fromJsonValue(m_sold_via_ad_campaign, json[QString("soldViaAdCampaign")]);
    m_sold_via_ad_campaign_isSet = !json[QString("soldViaAdCampaign")].isNull() && m_sold_via_ad_campaign_isValid;
}

QString OAILineItemProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILineItemProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_buyer_protection_isSet) {
        obj.insert(QString("buyerProtection"), ::OpenAPI::toJsonValue(m_buyer_protection));
    }
    if (m_from_best_offer_isSet) {
        obj.insert(QString("fromBestOffer"), ::OpenAPI::toJsonValue(m_from_best_offer));
    }
    if (m_sold_via_ad_campaign_isSet) {
        obj.insert(QString("soldViaAdCampaign"), ::OpenAPI::toJsonValue(m_sold_via_ad_campaign));
    }
    return obj;
}

bool OAILineItemProperties::isBuyerProtection() const {
    return m_buyer_protection;
}
void OAILineItemProperties::setBuyerProtection(const bool &buyer_protection) {
    m_buyer_protection = buyer_protection;
    m_buyer_protection_isSet = true;
}

bool OAILineItemProperties::is_buyer_protection_Set() const{
    return m_buyer_protection_isSet;
}

bool OAILineItemProperties::is_buyer_protection_Valid() const{
    return m_buyer_protection_isValid;
}

bool OAILineItemProperties::isFromBestOffer() const {
    return m_from_best_offer;
}
void OAILineItemProperties::setFromBestOffer(const bool &from_best_offer) {
    m_from_best_offer = from_best_offer;
    m_from_best_offer_isSet = true;
}

bool OAILineItemProperties::is_from_best_offer_Set() const{
    return m_from_best_offer_isSet;
}

bool OAILineItemProperties::is_from_best_offer_Valid() const{
    return m_from_best_offer_isValid;
}

bool OAILineItemProperties::isSoldViaAdCampaign() const {
    return m_sold_via_ad_campaign;
}
void OAILineItemProperties::setSoldViaAdCampaign(const bool &sold_via_ad_campaign) {
    m_sold_via_ad_campaign = sold_via_ad_campaign;
    m_sold_via_ad_campaign_isSet = true;
}

bool OAILineItemProperties::is_sold_via_ad_campaign_Set() const{
    return m_sold_via_ad_campaign_isSet;
}

bool OAILineItemProperties::is_sold_via_ad_campaign_Valid() const{
    return m_sold_via_ad_campaign_isValid;
}

bool OAILineItemProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_buyer_protection_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_best_offer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sold_via_ad_campaign_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILineItemProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
