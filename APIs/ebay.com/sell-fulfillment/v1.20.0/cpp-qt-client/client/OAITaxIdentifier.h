/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaxIdentifier.h
 *
 * This type is used by the &lt;strong&gt;taxIdentifier&lt;/strong&gt; container that is returned in &lt;strong&gt;getOrder&lt;/strong&gt;. The &lt;strong&gt;taxIdentifier&lt;/strong&gt; container consists of taxpayer identification information for buyers from Italy, Spain, or Guatemala. It is currently only returned for orders occurring on the eBay Italy or eBay Spain marketplaces.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; Currently, the &lt;strong&gt;taxIdentifier&lt;/strong&gt; container is only returned in &lt;strong&gt;getOrder&lt;/strong&gt; and not in &lt;strong&gt;getOrders&lt;/strong&gt;. So, if a seller wanted to view a buyer&#39;s tax information for a particular order returned in &lt;strong&gt;getOrders&lt;/strong&gt;, that seller would need to use the &lt;strong&gt;orderId&lt;/strong&gt; value for that particular order, and then run a &lt;strong&gt;getOrder&lt;/strong&gt; call against that order ID. &lt;/span&gt;
 */

#ifndef OAITaxIdentifier_H
#define OAITaxIdentifier_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITaxIdentifier : public OAIObject {
public:
    OAITaxIdentifier();
    OAITaxIdentifier(QString json);
    ~OAITaxIdentifier() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIssuingCountry() const;
    void setIssuingCountry(const QString &issuing_country);
    bool is_issuing_country_Set() const;
    bool is_issuing_country_Valid() const;

    QString getTaxIdentifierType() const;
    void setTaxIdentifierType(const QString &tax_identifier_type);
    bool is_tax_identifier_type_Set() const;
    bool is_tax_identifier_type_Valid() const;

    QString getTaxpayerId() const;
    void setTaxpayerId(const QString &taxpayer_id);
    bool is_taxpayer_id_Set() const;
    bool is_taxpayer_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_issuing_country;
    bool m_issuing_country_isSet;
    bool m_issuing_country_isValid;

    QString m_tax_identifier_type;
    bool m_tax_identifier_type_isSet;
    bool m_tax_identifier_type_isValid;

    QString m_taxpayer_id;
    bool m_taxpayer_id_isSet;
    bool m_taxpayer_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaxIdentifier)

#endif // OAITaxIdentifier_H
