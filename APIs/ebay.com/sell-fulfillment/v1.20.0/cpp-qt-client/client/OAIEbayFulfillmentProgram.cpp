/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEbayFulfillmentProgram.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEbayFulfillmentProgram::OAIEbayFulfillmentProgram(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEbayFulfillmentProgram::OAIEbayFulfillmentProgram() {
    this->initializeModel();
}

OAIEbayFulfillmentProgram::~OAIEbayFulfillmentProgram() {}

void OAIEbayFulfillmentProgram::initializeModel() {

    m_fulfilled_by_isSet = false;
    m_fulfilled_by_isValid = false;
}

void OAIEbayFulfillmentProgram::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEbayFulfillmentProgram::fromJsonObject(QJsonObject json) {

    m_fulfilled_by_isValid = ::OpenAPI::fromJsonValue(m_fulfilled_by, json[QString("fulfilledBy")]);
    m_fulfilled_by_isSet = !json[QString("fulfilledBy")].isNull() && m_fulfilled_by_isValid;
}

QString OAIEbayFulfillmentProgram::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEbayFulfillmentProgram::asJsonObject() const {
    QJsonObject obj;
    if (m_fulfilled_by_isSet) {
        obj.insert(QString("fulfilledBy"), ::OpenAPI::toJsonValue(m_fulfilled_by));
    }
    return obj;
}

QString OAIEbayFulfillmentProgram::getFulfilledBy() const {
    return m_fulfilled_by;
}
void OAIEbayFulfillmentProgram::setFulfilledBy(const QString &fulfilled_by) {
    m_fulfilled_by = fulfilled_by;
    m_fulfilled_by_isSet = true;
}

bool OAIEbayFulfillmentProgram::is_fulfilled_by_Set() const{
    return m_fulfilled_by_isSet;
}

bool OAIEbayFulfillmentProgram::is_fulfilled_by_Valid() const{
    return m_fulfilled_by_isValid;
}

bool OAIEbayFulfillmentProgram::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fulfilled_by_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEbayFulfillmentProgram::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
