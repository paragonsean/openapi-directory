/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPickupStep.h
 *
 * This type is used to indicate the merchant&#39;s store where the buyer will pickup their In-Store Pickup order. The &lt;b&gt;pickupStep&lt;/b&gt; container is only returned for In-Store Pickup orders. The In-Store Pickup feature is supported in the US, Canada, UK, Germany, and Australia marketplaces.
 */

#ifndef OAIPickupStep_H
#define OAIPickupStep_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPickupStep : public OAIObject {
public:
    OAIPickupStep();
    OAIPickupStep(QString json);
    ~OAIPickupStep() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMerchantLocationKey() const;
    void setMerchantLocationKey(const QString &merchant_location_key);
    bool is_merchant_location_key_Set() const;
    bool is_merchant_location_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_merchant_location_key;
    bool m_merchant_location_key_isSet;
    bool m_merchant_location_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPickupStep)

#endif // OAIPickupStep_H
