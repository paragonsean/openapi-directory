/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRefund.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRefund::OAIRefund(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRefund::OAIRefund() {
    this->initializeModel();
}

OAIRefund::~OAIRefund() {}

void OAIRefund::initializeModel() {

    m_refund_id_isSet = false;
    m_refund_id_isValid = false;

    m_refund_status_isSet = false;
    m_refund_status_isValid = false;
}

void OAIRefund::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRefund::fromJsonObject(QJsonObject json) {

    m_refund_id_isValid = ::OpenAPI::fromJsonValue(m_refund_id, json[QString("refundId")]);
    m_refund_id_isSet = !json[QString("refundId")].isNull() && m_refund_id_isValid;

    m_refund_status_isValid = ::OpenAPI::fromJsonValue(m_refund_status, json[QString("refundStatus")]);
    m_refund_status_isSet = !json[QString("refundStatus")].isNull() && m_refund_status_isValid;
}

QString OAIRefund::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRefund::asJsonObject() const {
    QJsonObject obj;
    if (m_refund_id_isSet) {
        obj.insert(QString("refundId"), ::OpenAPI::toJsonValue(m_refund_id));
    }
    if (m_refund_status_isSet) {
        obj.insert(QString("refundStatus"), ::OpenAPI::toJsonValue(m_refund_status));
    }
    return obj;
}

QString OAIRefund::getRefundId() const {
    return m_refund_id;
}
void OAIRefund::setRefundId(const QString &refund_id) {
    m_refund_id = refund_id;
    m_refund_id_isSet = true;
}

bool OAIRefund::is_refund_id_Set() const{
    return m_refund_id_isSet;
}

bool OAIRefund::is_refund_id_Valid() const{
    return m_refund_id_isValid;
}

QString OAIRefund::getRefundStatus() const {
    return m_refund_status;
}
void OAIRefund::setRefundStatus(const QString &refund_status) {
    m_refund_status = refund_status;
    m_refund_status_isSet = true;
}

bool OAIRefund::is_refund_status_Set() const{
    return m_refund_status_isSet;
}

bool OAIRefund::is_refund_status_Valid() const{
    return m_refund_status_isValid;
}

bool OAIRefund::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_refund_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refund_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRefund::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
