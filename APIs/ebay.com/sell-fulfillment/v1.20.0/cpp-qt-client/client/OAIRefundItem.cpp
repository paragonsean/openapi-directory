/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRefundItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRefundItem::OAIRefundItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRefundItem::OAIRefundItem() {
    this->initializeModel();
}

OAIRefundItem::~OAIRefundItem() {}

void OAIRefundItem::initializeModel() {

    m_legacy_reference_isSet = false;
    m_legacy_reference_isValid = false;

    m_line_item_id_isSet = false;
    m_line_item_id_isValid = false;

    m_refund_amount_isSet = false;
    m_refund_amount_isValid = false;
}

void OAIRefundItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRefundItem::fromJsonObject(QJsonObject json) {

    m_legacy_reference_isValid = ::OpenAPI::fromJsonValue(m_legacy_reference, json[QString("legacyReference")]);
    m_legacy_reference_isSet = !json[QString("legacyReference")].isNull() && m_legacy_reference_isValid;

    m_line_item_id_isValid = ::OpenAPI::fromJsonValue(m_line_item_id, json[QString("lineItemId")]);
    m_line_item_id_isSet = !json[QString("lineItemId")].isNull() && m_line_item_id_isValid;

    m_refund_amount_isValid = ::OpenAPI::fromJsonValue(m_refund_amount, json[QString("refundAmount")]);
    m_refund_amount_isSet = !json[QString("refundAmount")].isNull() && m_refund_amount_isValid;
}

QString OAIRefundItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRefundItem::asJsonObject() const {
    QJsonObject obj;
    if (m_legacy_reference.isSet()) {
        obj.insert(QString("legacyReference"), ::OpenAPI::toJsonValue(m_legacy_reference));
    }
    if (m_line_item_id_isSet) {
        obj.insert(QString("lineItemId"), ::OpenAPI::toJsonValue(m_line_item_id));
    }
    if (m_refund_amount.isSet()) {
        obj.insert(QString("refundAmount"), ::OpenAPI::toJsonValue(m_refund_amount));
    }
    return obj;
}

OAILegacyReference OAIRefundItem::getLegacyReference() const {
    return m_legacy_reference;
}
void OAIRefundItem::setLegacyReference(const OAILegacyReference &legacy_reference) {
    m_legacy_reference = legacy_reference;
    m_legacy_reference_isSet = true;
}

bool OAIRefundItem::is_legacy_reference_Set() const{
    return m_legacy_reference_isSet;
}

bool OAIRefundItem::is_legacy_reference_Valid() const{
    return m_legacy_reference_isValid;
}

QString OAIRefundItem::getLineItemId() const {
    return m_line_item_id;
}
void OAIRefundItem::setLineItemId(const QString &line_item_id) {
    m_line_item_id = line_item_id;
    m_line_item_id_isSet = true;
}

bool OAIRefundItem::is_line_item_id_Set() const{
    return m_line_item_id_isSet;
}

bool OAIRefundItem::is_line_item_id_Valid() const{
    return m_line_item_id_isValid;
}

OAISimpleAmount OAIRefundItem::getRefundAmount() const {
    return m_refund_amount;
}
void OAIRefundItem::setRefundAmount(const OAISimpleAmount &refund_amount) {
    m_refund_amount = refund_amount;
    m_refund_amount_isSet = true;
}

bool OAIRefundItem::is_refund_amount_Set() const{
    return m_refund_amount_isSet;
}

bool OAIRefundItem::is_refund_amount_Valid() const{
    return m_refund_amount_isValid;
}

bool OAIRefundItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_legacy_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refund_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRefundItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
