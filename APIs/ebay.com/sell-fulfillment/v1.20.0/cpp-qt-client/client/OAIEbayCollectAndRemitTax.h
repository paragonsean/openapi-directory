/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEbayCollectAndRemitTax.h
 *
 * This type contains information about the type and amount of tax that eBay will collect and remit to the state, province, country, or other taxing authority in the buyer&#39;s location, as required by that taxing authority.&lt;br&gt;&lt;br&gt;&#39;Collect and Remit&#39; tax includes:&lt;ul&gt;&lt;li&gt;US state-mandated sales tax&lt;/li&gt;&lt;li&gt;Federal and Provincial Sales Tax in Canada&lt;/li&gt;&lt;li&gt;&#39;Goods and Services&#39; tax in Canada, Australia, and New Zealand&lt;/li&gt;&lt;li&gt;VAT collected for the UK and EU countries&lt;/li&gt;&lt;/ul&gt;
 */

#ifndef OAIEbayCollectAndRemitTax_H
#define OAIEbayCollectAndRemitTax_H

#include <QJsonObject>

#include "OAIAmount.h"
#include "OAIEbayTaxReference.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAmount;
class OAIEbayTaxReference;

class OAIEbayCollectAndRemitTax : public OAIObject {
public:
    OAIEbayCollectAndRemitTax();
    OAIEbayCollectAndRemitTax(QString json);
    ~OAIEbayCollectAndRemitTax() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAmount getAmount() const;
    void setAmount(const OAIAmount &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getCollectionMethod() const;
    void setCollectionMethod(const QString &collection_method);
    bool is_collection_method_Set() const;
    bool is_collection_method_Valid() const;

    OAIEbayTaxReference getEbayReference() const;
    void setEbayReference(const OAIEbayTaxReference &ebay_reference);
    bool is_ebay_reference_Set() const;
    bool is_ebay_reference_Valid() const;

    QString getTaxType() const;
    void setTaxType(const QString &tax_type);
    bool is_tax_type_Set() const;
    bool is_tax_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAmount m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_collection_method;
    bool m_collection_method_isSet;
    bool m_collection_method_isValid;

    OAIEbayTaxReference m_ebay_reference;
    bool m_ebay_reference_isSet;
    bool m_ebay_reference_isValid;

    QString m_tax_type;
    bool m_tax_type_isSet;
    bool m_tax_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEbayCollectAndRemitTax)

#endif // OAIEbayCollectAndRemitTax_H
