/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITrackingInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITrackingInfo::OAITrackingInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITrackingInfo::OAITrackingInfo() {
    this->initializeModel();
}

OAITrackingInfo::~OAITrackingInfo() {}

void OAITrackingInfo::initializeModel() {

    m_shipment_tracking_number_isSet = false;
    m_shipment_tracking_number_isValid = false;

    m_shipping_carrier_code_isSet = false;
    m_shipping_carrier_code_isValid = false;
}

void OAITrackingInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITrackingInfo::fromJsonObject(QJsonObject json) {

    m_shipment_tracking_number_isValid = ::OpenAPI::fromJsonValue(m_shipment_tracking_number, json[QString("shipmentTrackingNumber")]);
    m_shipment_tracking_number_isSet = !json[QString("shipmentTrackingNumber")].isNull() && m_shipment_tracking_number_isValid;

    m_shipping_carrier_code_isValid = ::OpenAPI::fromJsonValue(m_shipping_carrier_code, json[QString("shippingCarrierCode")]);
    m_shipping_carrier_code_isSet = !json[QString("shippingCarrierCode")].isNull() && m_shipping_carrier_code_isValid;
}

QString OAITrackingInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITrackingInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_shipment_tracking_number_isSet) {
        obj.insert(QString("shipmentTrackingNumber"), ::OpenAPI::toJsonValue(m_shipment_tracking_number));
    }
    if (m_shipping_carrier_code_isSet) {
        obj.insert(QString("shippingCarrierCode"), ::OpenAPI::toJsonValue(m_shipping_carrier_code));
    }
    return obj;
}

QString OAITrackingInfo::getShipmentTrackingNumber() const {
    return m_shipment_tracking_number;
}
void OAITrackingInfo::setShipmentTrackingNumber(const QString &shipment_tracking_number) {
    m_shipment_tracking_number = shipment_tracking_number;
    m_shipment_tracking_number_isSet = true;
}

bool OAITrackingInfo::is_shipment_tracking_number_Set() const{
    return m_shipment_tracking_number_isSet;
}

bool OAITrackingInfo::is_shipment_tracking_number_Valid() const{
    return m_shipment_tracking_number_isValid;
}

QString OAITrackingInfo::getShippingCarrierCode() const {
    return m_shipping_carrier_code;
}
void OAITrackingInfo::setShippingCarrierCode(const QString &shipping_carrier_code) {
    m_shipping_carrier_code = shipping_carrier_code;
    m_shipping_carrier_code_isSet = true;
}

bool OAITrackingInfo::is_shipping_carrier_code_Set() const{
    return m_shipping_carrier_code_isSet;
}

bool OAITrackingInfo::is_shipping_carrier_code_Valid() const{
    return m_shipping_carrier_code_isValid;
}

bool OAITrackingInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_shipment_tracking_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_carrier_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITrackingInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
