/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILineItemRefund.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILineItemRefund::OAILineItemRefund(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILineItemRefund::OAILineItemRefund() {
    this->initializeModel();
}

OAILineItemRefund::~OAILineItemRefund() {}

void OAILineItemRefund::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_refund_date_isSet = false;
    m_refund_date_isValid = false;

    m_refund_id_isSet = false;
    m_refund_id_isValid = false;

    m_refund_reference_id_isSet = false;
    m_refund_reference_id_isValid = false;
}

void OAILineItemRefund::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILineItemRefund::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_refund_date_isValid = ::OpenAPI::fromJsonValue(m_refund_date, json[QString("refundDate")]);
    m_refund_date_isSet = !json[QString("refundDate")].isNull() && m_refund_date_isValid;

    m_refund_id_isValid = ::OpenAPI::fromJsonValue(m_refund_id, json[QString("refundId")]);
    m_refund_id_isSet = !json[QString("refundId")].isNull() && m_refund_id_isValid;

    m_refund_reference_id_isValid = ::OpenAPI::fromJsonValue(m_refund_reference_id, json[QString("refundReferenceId")]);
    m_refund_reference_id_isSet = !json[QString("refundReferenceId")].isNull() && m_refund_reference_id_isValid;
}

QString OAILineItemRefund::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILineItemRefund::asJsonObject() const {
    QJsonObject obj;
    if (m_amount.isSet()) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_refund_date_isSet) {
        obj.insert(QString("refundDate"), ::OpenAPI::toJsonValue(m_refund_date));
    }
    if (m_refund_id_isSet) {
        obj.insert(QString("refundId"), ::OpenAPI::toJsonValue(m_refund_id));
    }
    if (m_refund_reference_id_isSet) {
        obj.insert(QString("refundReferenceId"), ::OpenAPI::toJsonValue(m_refund_reference_id));
    }
    return obj;
}

OAIAmount OAILineItemRefund::getAmount() const {
    return m_amount;
}
void OAILineItemRefund::setAmount(const OAIAmount &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAILineItemRefund::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAILineItemRefund::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAILineItemRefund::getRefundDate() const {
    return m_refund_date;
}
void OAILineItemRefund::setRefundDate(const QString &refund_date) {
    m_refund_date = refund_date;
    m_refund_date_isSet = true;
}

bool OAILineItemRefund::is_refund_date_Set() const{
    return m_refund_date_isSet;
}

bool OAILineItemRefund::is_refund_date_Valid() const{
    return m_refund_date_isValid;
}

QString OAILineItemRefund::getRefundId() const {
    return m_refund_id;
}
void OAILineItemRefund::setRefundId(const QString &refund_id) {
    m_refund_id = refund_id;
    m_refund_id_isSet = true;
}

bool OAILineItemRefund::is_refund_id_Set() const{
    return m_refund_id_isSet;
}

bool OAILineItemRefund::is_refund_id_Valid() const{
    return m_refund_id_isValid;
}

QString OAILineItemRefund::getRefundReferenceId() const {
    return m_refund_reference_id;
}
void OAILineItemRefund::setRefundReferenceId(const QString &refund_reference_id) {
    m_refund_reference_id = refund_reference_id;
    m_refund_reference_id_isSet = true;
}

bool OAILineItemRefund::is_refund_reference_id_Set() const{
    return m_refund_reference_id_isSet;
}

bool OAILineItemRefund::is_refund_reference_id_Valid() const{
    return m_refund_reference_id_isValid;
}

bool OAILineItemRefund::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_refund_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refund_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refund_reference_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILineItemRefund::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
