/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGiftDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGiftDetails::OAIGiftDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGiftDetails::OAIGiftDetails() {
    this->initializeModel();
}

OAIGiftDetails::~OAIGiftDetails() {}

void OAIGiftDetails::initializeModel() {

    m_message_isSet = false;
    m_message_isValid = false;

    m_recipient_email_isSet = false;
    m_recipient_email_isValid = false;

    m_sender_name_isSet = false;
    m_sender_name_isValid = false;
}

void OAIGiftDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGiftDetails::fromJsonObject(QJsonObject json) {

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_recipient_email_isValid = ::OpenAPI::fromJsonValue(m_recipient_email, json[QString("recipientEmail")]);
    m_recipient_email_isSet = !json[QString("recipientEmail")].isNull() && m_recipient_email_isValid;

    m_sender_name_isValid = ::OpenAPI::fromJsonValue(m_sender_name, json[QString("senderName")]);
    m_sender_name_isSet = !json[QString("senderName")].isNull() && m_sender_name_isValid;
}

QString OAIGiftDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGiftDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_recipient_email_isSet) {
        obj.insert(QString("recipientEmail"), ::OpenAPI::toJsonValue(m_recipient_email));
    }
    if (m_sender_name_isSet) {
        obj.insert(QString("senderName"), ::OpenAPI::toJsonValue(m_sender_name));
    }
    return obj;
}

QString OAIGiftDetails::getMessage() const {
    return m_message;
}
void OAIGiftDetails::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIGiftDetails::is_message_Set() const{
    return m_message_isSet;
}

bool OAIGiftDetails::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIGiftDetails::getRecipientEmail() const {
    return m_recipient_email;
}
void OAIGiftDetails::setRecipientEmail(const QString &recipient_email) {
    m_recipient_email = recipient_email;
    m_recipient_email_isSet = true;
}

bool OAIGiftDetails::is_recipient_email_Set() const{
    return m_recipient_email_isSet;
}

bool OAIGiftDetails::is_recipient_email_Valid() const{
    return m_recipient_email_isValid;
}

QString OAIGiftDetails::getSenderName() const {
    return m_sender_name;
}
void OAIGiftDetails::setSenderName(const QString &sender_name) {
    m_sender_name = sender_name;
    m_sender_name_isSet = true;
}

bool OAIGiftDetails::is_sender_name_Set() const{
    return m_sender_name_isSet;
}

bool OAIGiftDetails::is_sender_name_Valid() const{
    return m_sender_name_isValid;
}

bool OAIGiftDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sender_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGiftDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
