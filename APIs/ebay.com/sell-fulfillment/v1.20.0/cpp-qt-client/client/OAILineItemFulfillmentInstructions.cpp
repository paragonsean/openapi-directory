/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILineItemFulfillmentInstructions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILineItemFulfillmentInstructions::OAILineItemFulfillmentInstructions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILineItemFulfillmentInstructions::OAILineItemFulfillmentInstructions() {
    this->initializeModel();
}

OAILineItemFulfillmentInstructions::~OAILineItemFulfillmentInstructions() {}

void OAILineItemFulfillmentInstructions::initializeModel() {

    m_guaranteed_delivery_isSet = false;
    m_guaranteed_delivery_isValid = false;

    m_max_estimated_delivery_date_isSet = false;
    m_max_estimated_delivery_date_isValid = false;

    m_min_estimated_delivery_date_isSet = false;
    m_min_estimated_delivery_date_isValid = false;

    m_ship_by_date_isSet = false;
    m_ship_by_date_isValid = false;
}

void OAILineItemFulfillmentInstructions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILineItemFulfillmentInstructions::fromJsonObject(QJsonObject json) {

    m_guaranteed_delivery_isValid = ::OpenAPI::fromJsonValue(m_guaranteed_delivery, json[QString("guaranteedDelivery")]);
    m_guaranteed_delivery_isSet = !json[QString("guaranteedDelivery")].isNull() && m_guaranteed_delivery_isValid;

    m_max_estimated_delivery_date_isValid = ::OpenAPI::fromJsonValue(m_max_estimated_delivery_date, json[QString("maxEstimatedDeliveryDate")]);
    m_max_estimated_delivery_date_isSet = !json[QString("maxEstimatedDeliveryDate")].isNull() && m_max_estimated_delivery_date_isValid;

    m_min_estimated_delivery_date_isValid = ::OpenAPI::fromJsonValue(m_min_estimated_delivery_date, json[QString("minEstimatedDeliveryDate")]);
    m_min_estimated_delivery_date_isSet = !json[QString("minEstimatedDeliveryDate")].isNull() && m_min_estimated_delivery_date_isValid;

    m_ship_by_date_isValid = ::OpenAPI::fromJsonValue(m_ship_by_date, json[QString("shipByDate")]);
    m_ship_by_date_isSet = !json[QString("shipByDate")].isNull() && m_ship_by_date_isValid;
}

QString OAILineItemFulfillmentInstructions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILineItemFulfillmentInstructions::asJsonObject() const {
    QJsonObject obj;
    if (m_guaranteed_delivery_isSet) {
        obj.insert(QString("guaranteedDelivery"), ::OpenAPI::toJsonValue(m_guaranteed_delivery));
    }
    if (m_max_estimated_delivery_date_isSet) {
        obj.insert(QString("maxEstimatedDeliveryDate"), ::OpenAPI::toJsonValue(m_max_estimated_delivery_date));
    }
    if (m_min_estimated_delivery_date_isSet) {
        obj.insert(QString("minEstimatedDeliveryDate"), ::OpenAPI::toJsonValue(m_min_estimated_delivery_date));
    }
    if (m_ship_by_date_isSet) {
        obj.insert(QString("shipByDate"), ::OpenAPI::toJsonValue(m_ship_by_date));
    }
    return obj;
}

bool OAILineItemFulfillmentInstructions::isGuaranteedDelivery() const {
    return m_guaranteed_delivery;
}
void OAILineItemFulfillmentInstructions::setGuaranteedDelivery(const bool &guaranteed_delivery) {
    m_guaranteed_delivery = guaranteed_delivery;
    m_guaranteed_delivery_isSet = true;
}

bool OAILineItemFulfillmentInstructions::is_guaranteed_delivery_Set() const{
    return m_guaranteed_delivery_isSet;
}

bool OAILineItemFulfillmentInstructions::is_guaranteed_delivery_Valid() const{
    return m_guaranteed_delivery_isValid;
}

QString OAILineItemFulfillmentInstructions::getMaxEstimatedDeliveryDate() const {
    return m_max_estimated_delivery_date;
}
void OAILineItemFulfillmentInstructions::setMaxEstimatedDeliveryDate(const QString &max_estimated_delivery_date) {
    m_max_estimated_delivery_date = max_estimated_delivery_date;
    m_max_estimated_delivery_date_isSet = true;
}

bool OAILineItemFulfillmentInstructions::is_max_estimated_delivery_date_Set() const{
    return m_max_estimated_delivery_date_isSet;
}

bool OAILineItemFulfillmentInstructions::is_max_estimated_delivery_date_Valid() const{
    return m_max_estimated_delivery_date_isValid;
}

QString OAILineItemFulfillmentInstructions::getMinEstimatedDeliveryDate() const {
    return m_min_estimated_delivery_date;
}
void OAILineItemFulfillmentInstructions::setMinEstimatedDeliveryDate(const QString &min_estimated_delivery_date) {
    m_min_estimated_delivery_date = min_estimated_delivery_date;
    m_min_estimated_delivery_date_isSet = true;
}

bool OAILineItemFulfillmentInstructions::is_min_estimated_delivery_date_Set() const{
    return m_min_estimated_delivery_date_isSet;
}

bool OAILineItemFulfillmentInstructions::is_min_estimated_delivery_date_Valid() const{
    return m_min_estimated_delivery_date_isValid;
}

QString OAILineItemFulfillmentInstructions::getShipByDate() const {
    return m_ship_by_date;
}
void OAILineItemFulfillmentInstructions::setShipByDate(const QString &ship_by_date) {
    m_ship_by_date = ship_by_date;
    m_ship_by_date_isSet = true;
}

bool OAILineItemFulfillmentInstructions::is_ship_by_date_Set() const{
    return m_ship_by_date_isSet;
}

bool OAILineItemFulfillmentInstructions::is_ship_by_date_Valid() const{
    return m_ship_by_date_isValid;
}

bool OAILineItemFulfillmentInstructions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_guaranteed_delivery_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_estimated_delivery_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_estimated_delivery_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ship_by_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILineItemFulfillmentInstructions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
