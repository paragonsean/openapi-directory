/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDisputeEvidence.h
 *
 * This type is used by the &lt;strong&gt;evidence&lt;/strong&gt; array that is returned in the &lt;strong&gt;getPaymentDispute&lt;/strong&gt; response if one or more evidential documents are associated with the payment dispute. 
 */

#ifndef OAIDisputeEvidence_H
#define OAIDisputeEvidence_H

#include <QJsonObject>

#include "OAIFileInfo.h"
#include "OAIOrderLineItems.h"
#include "OAITrackingInfo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFileInfo;
class OAIOrderLineItems;
class OAITrackingInfo;

class OAIDisputeEvidence : public OAIObject {
public:
    OAIDisputeEvidence();
    OAIDisputeEvidence(QString json);
    ~OAIDisputeEvidence() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEvidenceId() const;
    void setEvidenceId(const QString &evidence_id);
    bool is_evidence_id_Set() const;
    bool is_evidence_id_Valid() const;

    QString getEvidenceType() const;
    void setEvidenceType(const QString &evidence_type);
    bool is_evidence_type_Set() const;
    bool is_evidence_type_Valid() const;

    QList<OAIFileInfo> getFiles() const;
    void setFiles(const QList<OAIFileInfo> &files);
    bool is_files_Set() const;
    bool is_files_Valid() const;

    QList<OAIOrderLineItems> getLineItems() const;
    void setLineItems(const QList<OAIOrderLineItems> &line_items);
    bool is_line_items_Set() const;
    bool is_line_items_Valid() const;

    QString getProvidedDate() const;
    void setProvidedDate(const QString &provided_date);
    bool is_provided_date_Set() const;
    bool is_provided_date_Valid() const;

    QString getRequestDate() const;
    void setRequestDate(const QString &request_date);
    bool is_request_date_Set() const;
    bool is_request_date_Valid() const;

    QString getRespondByDate() const;
    void setRespondByDate(const QString &respond_by_date);
    bool is_respond_by_date_Set() const;
    bool is_respond_by_date_Valid() const;

    QList<OAITrackingInfo> getShipmentTracking() const;
    void setShipmentTracking(const QList<OAITrackingInfo> &shipment_tracking);
    bool is_shipment_tracking_Set() const;
    bool is_shipment_tracking_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_evidence_id;
    bool m_evidence_id_isSet;
    bool m_evidence_id_isValid;

    QString m_evidence_type;
    bool m_evidence_type_isSet;
    bool m_evidence_type_isValid;

    QList<OAIFileInfo> m_files;
    bool m_files_isSet;
    bool m_files_isValid;

    QList<OAIOrderLineItems> m_line_items;
    bool m_line_items_isSet;
    bool m_line_items_isValid;

    QString m_provided_date;
    bool m_provided_date_isSet;
    bool m_provided_date_isValid;

    QString m_request_date;
    bool m_request_date_isSet;
    bool m_request_date_isValid;

    QString m_respond_by_date;
    bool m_respond_by_date_isSet;
    bool m_respond_by_date_isValid;

    QList<OAITrackingInfo> m_shipment_tracking;
    bool m_shipment_tracking_isSet;
    bool m_shipment_tracking_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDisputeEvidence)

#endif // OAIDisputeEvidence_H
