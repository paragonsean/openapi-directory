/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISimpleAmount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISimpleAmount::OAISimpleAmount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISimpleAmount::OAISimpleAmount() {
    this->initializeModel();
}

OAISimpleAmount::~OAISimpleAmount() {}

void OAISimpleAmount::initializeModel() {

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAISimpleAmount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISimpleAmount::fromJsonObject(QJsonObject json) {

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAISimpleAmount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISimpleAmount::asJsonObject() const {
    QJsonObject obj;
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAISimpleAmount::getCurrency() const {
    return m_currency;
}
void OAISimpleAmount::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAISimpleAmount::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAISimpleAmount::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAISimpleAmount::getValue() const {
    return m_value;
}
void OAISimpleAmount::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAISimpleAmount::is_value_Set() const{
    return m_value_isSet;
}

bool OAISimpleAmount::is_value_Valid() const{
    return m_value_isValid;
}

bool OAISimpleAmount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISimpleAmount::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
