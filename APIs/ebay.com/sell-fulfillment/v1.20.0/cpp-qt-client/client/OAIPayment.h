/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPayment.h
 *
 * This type is used to provide details about the seller payments for an order.
 */

#ifndef OAIPayment_H
#define OAIPayment_H

#include <QJsonObject>

#include "OAIAmount.h"
#include "OAIPaymentHold.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAmount;
class OAIPaymentHold;

class OAIPayment : public OAIObject {
public:
    OAIPayment();
    OAIPayment(QString json);
    ~OAIPayment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAmount getAmount() const;
    void setAmount(const OAIAmount &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getPaymentDate() const;
    void setPaymentDate(const QString &payment_date);
    bool is_payment_date_Set() const;
    bool is_payment_date_Valid() const;

    QList<OAIPaymentHold> getPaymentHolds() const;
    void setPaymentHolds(const QList<OAIPaymentHold> &payment_holds);
    bool is_payment_holds_Set() const;
    bool is_payment_holds_Valid() const;

    QString getPaymentMethod() const;
    void setPaymentMethod(const QString &payment_method);
    bool is_payment_method_Set() const;
    bool is_payment_method_Valid() const;

    QString getPaymentReferenceId() const;
    void setPaymentReferenceId(const QString &payment_reference_id);
    bool is_payment_reference_id_Set() const;
    bool is_payment_reference_id_Valid() const;

    QString getPaymentStatus() const;
    void setPaymentStatus(const QString &payment_status);
    bool is_payment_status_Set() const;
    bool is_payment_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAmount m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_payment_date;
    bool m_payment_date_isSet;
    bool m_payment_date_isValid;

    QList<OAIPaymentHold> m_payment_holds;
    bool m_payment_holds_isSet;
    bool m_payment_holds_isValid;

    QString m_payment_method;
    bool m_payment_method_isSet;
    bool m_payment_method_isValid;

    QString m_payment_reference_id;
    bool m_payment_reference_id_isSet;
    bool m_payment_reference_id_isValid;

    QString m_payment_status;
    bool m_payment_status_isSet;
    bool m_payment_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPayment)

#endif // OAIPayment_H
