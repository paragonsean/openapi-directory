/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExtendedContact.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExtendedContact::OAIExtendedContact(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExtendedContact::OAIExtendedContact() {
    this->initializeModel();
}

OAIExtendedContact::~OAIExtendedContact() {}

void OAIExtendedContact::initializeModel() {

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_contact_address_isSet = false;
    m_contact_address_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_full_name_isSet = false;
    m_full_name_isValid = false;

    m_primary_phone_isSet = false;
    m_primary_phone_isValid = false;
}

void OAIExtendedContact::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExtendedContact::fromJsonObject(QJsonObject json) {

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("companyName")]);
    m_company_name_isSet = !json[QString("companyName")].isNull() && m_company_name_isValid;

    m_contact_address_isValid = ::OpenAPI::fromJsonValue(m_contact_address, json[QString("contactAddress")]);
    m_contact_address_isSet = !json[QString("contactAddress")].isNull() && m_contact_address_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_full_name_isValid = ::OpenAPI::fromJsonValue(m_full_name, json[QString("fullName")]);
    m_full_name_isSet = !json[QString("fullName")].isNull() && m_full_name_isValid;

    m_primary_phone_isValid = ::OpenAPI::fromJsonValue(m_primary_phone, json[QString("primaryPhone")]);
    m_primary_phone_isSet = !json[QString("primaryPhone")].isNull() && m_primary_phone_isValid;
}

QString OAIExtendedContact::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExtendedContact::asJsonObject() const {
    QJsonObject obj;
    if (m_company_name_isSet) {
        obj.insert(QString("companyName"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_contact_address.isSet()) {
        obj.insert(QString("contactAddress"), ::OpenAPI::toJsonValue(m_contact_address));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_full_name_isSet) {
        obj.insert(QString("fullName"), ::OpenAPI::toJsonValue(m_full_name));
    }
    if (m_primary_phone.isSet()) {
        obj.insert(QString("primaryPhone"), ::OpenAPI::toJsonValue(m_primary_phone));
    }
    return obj;
}

QString OAIExtendedContact::getCompanyName() const {
    return m_company_name;
}
void OAIExtendedContact::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAIExtendedContact::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAIExtendedContact::is_company_name_Valid() const{
    return m_company_name_isValid;
}

OAIAddress OAIExtendedContact::getContactAddress() const {
    return m_contact_address;
}
void OAIExtendedContact::setContactAddress(const OAIAddress &contact_address) {
    m_contact_address = contact_address;
    m_contact_address_isSet = true;
}

bool OAIExtendedContact::is_contact_address_Set() const{
    return m_contact_address_isSet;
}

bool OAIExtendedContact::is_contact_address_Valid() const{
    return m_contact_address_isValid;
}

QString OAIExtendedContact::getEmail() const {
    return m_email;
}
void OAIExtendedContact::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIExtendedContact::is_email_Set() const{
    return m_email_isSet;
}

bool OAIExtendedContact::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIExtendedContact::getFullName() const {
    return m_full_name;
}
void OAIExtendedContact::setFullName(const QString &full_name) {
    m_full_name = full_name;
    m_full_name_isSet = true;
}

bool OAIExtendedContact::is_full_name_Set() const{
    return m_full_name_isSet;
}

bool OAIExtendedContact::is_full_name_Valid() const{
    return m_full_name_isValid;
}

OAIPhoneNumber OAIExtendedContact::getPrimaryPhone() const {
    return m_primary_phone;
}
void OAIExtendedContact::setPrimaryPhone(const OAIPhoneNumber &primary_phone) {
    m_primary_phone = primary_phone;
    m_primary_phone_isSet = true;
}

bool OAIExtendedContact::is_primary_phone_Set() const{
    return m_primary_phone_isSet;
}

bool OAIExtendedContact::is_primary_phone_Valid() const{
    return m_primary_phone_isValid;
}

bool OAIExtendedContact::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_phone.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExtendedContact::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
