/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PickupStep model module.
 * @module model/PickupStep
 * @version v1.20.0
 */
class PickupStep {
    /**
     * Constructs a new <code>PickupStep</code>.
     * This type is used to indicate the merchant&#39;s store where the buyer will pickup their In-Store Pickup order. The &lt;b&gt;pickupStep&lt;/b&gt; container is only returned for In-Store Pickup orders. The In-Store Pickup feature is supported in the US, Canada, UK, Germany, and Australia marketplaces.
     * @alias module:model/PickupStep
     */
    constructor() { 
        
        PickupStep.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PickupStep</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PickupStep} obj Optional instance to populate.
     * @return {module:model/PickupStep} The populated <code>PickupStep</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PickupStep();

            if (data.hasOwnProperty('merchantLocationKey')) {
                obj['merchantLocationKey'] = ApiClient.convertToType(data['merchantLocationKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PickupStep</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PickupStep</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['merchantLocationKey'] && !(typeof data['merchantLocationKey'] === 'string' || data['merchantLocationKey'] instanceof String)) {
            throw new Error("Expected the field `merchantLocationKey` to be a primitive type in the JSON string but got " + data['merchantLocationKey']);
        }

        return true;
    }


}



/**
 * A merchant-defined unique identifier of the merchant's store where the buyer will pick up their In-Store Pickup order.<br><br> This field is always returned with the <b>pickupStep</b> container.
 * @member {String} merchantLocationKey
 */
PickupStep.prototype['merchantLocationKey'] = undefined;






export default PickupStep;

