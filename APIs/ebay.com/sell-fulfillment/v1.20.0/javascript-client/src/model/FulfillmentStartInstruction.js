/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Address from './Address';
import PickupStep from './PickupStep';
import ShippingStep from './ShippingStep';

/**
 * The FulfillmentStartInstruction model module.
 * @module model/FulfillmentStartInstruction
 * @version v1.20.0
 */
class FulfillmentStartInstruction {
    /**
     * Constructs a new <code>FulfillmentStartInstruction</code>.
     * This type contains a set of specifications for processing a fulfillment of an order, including the type of fulfillment, shipping carrier and service, addressing details, and estimated delivery window. These instructions are derived from the buyer&#39;s and seller&#39;s eBay account preferences, the listing parameters, and the buyer&#39;s checkout selections. The seller can use them as a starting point for packaging, addressing, and shipping the order.
     * @alias module:model/FulfillmentStartInstruction
     */
    constructor() { 
        
        FulfillmentStartInstruction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FulfillmentStartInstruction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FulfillmentStartInstruction} obj Optional instance to populate.
     * @return {module:model/FulfillmentStartInstruction} The populated <code>FulfillmentStartInstruction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FulfillmentStartInstruction();

            if (data.hasOwnProperty('ebaySupportedFulfillment')) {
                obj['ebaySupportedFulfillment'] = ApiClient.convertToType(data['ebaySupportedFulfillment'], 'Boolean');
            }
            if (data.hasOwnProperty('finalDestinationAddress')) {
                obj['finalDestinationAddress'] = Address.constructFromObject(data['finalDestinationAddress']);
            }
            if (data.hasOwnProperty('fulfillmentInstructionsType')) {
                obj['fulfillmentInstructionsType'] = ApiClient.convertToType(data['fulfillmentInstructionsType'], 'String');
            }
            if (data.hasOwnProperty('maxEstimatedDeliveryDate')) {
                obj['maxEstimatedDeliveryDate'] = ApiClient.convertToType(data['maxEstimatedDeliveryDate'], 'String');
            }
            if (data.hasOwnProperty('minEstimatedDeliveryDate')) {
                obj['minEstimatedDeliveryDate'] = ApiClient.convertToType(data['minEstimatedDeliveryDate'], 'String');
            }
            if (data.hasOwnProperty('pickupStep')) {
                obj['pickupStep'] = PickupStep.constructFromObject(data['pickupStep']);
            }
            if (data.hasOwnProperty('shippingStep')) {
                obj['shippingStep'] = ShippingStep.constructFromObject(data['shippingStep']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FulfillmentStartInstruction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FulfillmentStartInstruction</code>.
     */
    static validateJSON(data) {
        // validate the optional field `finalDestinationAddress`
        if (data['finalDestinationAddress']) { // data not null
          Address.validateJSON(data['finalDestinationAddress']);
        }
        // ensure the json data is a string
        if (data['fulfillmentInstructionsType'] && !(typeof data['fulfillmentInstructionsType'] === 'string' || data['fulfillmentInstructionsType'] instanceof String)) {
            throw new Error("Expected the field `fulfillmentInstructionsType` to be a primitive type in the JSON string but got " + data['fulfillmentInstructionsType']);
        }
        // ensure the json data is a string
        if (data['maxEstimatedDeliveryDate'] && !(typeof data['maxEstimatedDeliveryDate'] === 'string' || data['maxEstimatedDeliveryDate'] instanceof String)) {
            throw new Error("Expected the field `maxEstimatedDeliveryDate` to be a primitive type in the JSON string but got " + data['maxEstimatedDeliveryDate']);
        }
        // ensure the json data is a string
        if (data['minEstimatedDeliveryDate'] && !(typeof data['minEstimatedDeliveryDate'] === 'string' || data['minEstimatedDeliveryDate'] instanceof String)) {
            throw new Error("Expected the field `minEstimatedDeliveryDate` to be a primitive type in the JSON string but got " + data['minEstimatedDeliveryDate']);
        }
        // validate the optional field `pickupStep`
        if (data['pickupStep']) { // data not null
          PickupStep.validateJSON(data['pickupStep']);
        }
        // validate the optional field `shippingStep`
        if (data['shippingStep']) { // data not null
          ShippingStep.validateJSON(data['shippingStep']);
        }

        return true;
    }


}



/**
 * This field is only returned if its value is <code>true</code> and indicates that the fulfillment will be shipped via eBay's Global Shipping Program, eBay International Shipping, or the Authenticity Guarantee service program. <br><br>For more information, see the <a href=\"https://www.ebay.com/help/selling/shipping-items/setting-shipping-options/global-shipping-program?id=4646 \" target=\"_blank\">Global Shipping Program</a> help topic.
 * @member {Boolean} ebaySupportedFulfillment
 */
FulfillmentStartInstruction.prototype['ebaySupportedFulfillment'] = undefined;

/**
 * @member {module:model/Address} finalDestinationAddress
 */
FulfillmentStartInstruction.prototype['finalDestinationAddress'] = undefined;

/**
 * The enumeration value returned in this field indicates the method of fulfillment that will be used to deliver this set of line items (this package) to the buyer. This field will have a value of <code>SHIP_TO</code> if the <b>ebaySupportedFulfillment</b> field is returned with a value of <code>true</code>. See the <strong>FulfillmentInstructionsType</strong> definition for more information about different fulfillment types. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:FulfillmentInstructionsType'>eBay API documentation</a>
 * @member {String} fulfillmentInstructionsType
 */
FulfillmentStartInstruction.prototype['fulfillmentInstructionsType'] = undefined;

/**
 * This is the estimated latest date that the fulfillment will be completed. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field is not returned ifthe value of the <b>fulfillmentInstructionsType</b> field is <code>DIGITAL</code> or <code>PREPARE_FOR_PICKUP</code>.  <br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
 * @member {String} maxEstimatedDeliveryDate
 */
FulfillmentStartInstruction.prototype['maxEstimatedDeliveryDate'] = undefined;

/**
 * This is the estimated earliest date that the fulfillment will be completed. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field is not returned if  the value of the <b>fulfillmentInstructionsType</b> field is <code>DIGITAL</code> or <code>PREPARE_FOR_PICKUP</code>.  <br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
 * @member {String} minEstimatedDeliveryDate
 */
FulfillmentStartInstruction.prototype['minEstimatedDeliveryDate'] = undefined;

/**
 * @member {module:model/PickupStep} pickupStep
 */
FulfillmentStartInstruction.prototype['pickupStep'] = undefined;

/**
 * @member {module:model/ShippingStep} shippingStep
 */
FulfillmentStartInstruction.prototype['shippingStep'] = undefined;






export default FulfillmentStartInstruction;

