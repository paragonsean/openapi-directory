/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Error from './Error';
import ShippingFulfillment from './ShippingFulfillment';

/**
 * The ShippingFulfillmentPagedCollection model module.
 * @module model/ShippingFulfillmentPagedCollection
 * @version v1.20.0
 */
class ShippingFulfillmentPagedCollection {
    /**
     * Constructs a new <code>ShippingFulfillmentPagedCollection</code>.
     * This type contains the specifications for the entire collection of shipping fulfillments that are associated with the order specified by a &lt;b&gt;getShippingFulfillments&lt;/b&gt; call. The &lt;b&gt;fulfillments&lt;/b&gt; container returns an array of all the fulfillments in the collection.
     * @alias module:model/ShippingFulfillmentPagedCollection
     */
    constructor() { 
        
        ShippingFulfillmentPagedCollection.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShippingFulfillmentPagedCollection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShippingFulfillmentPagedCollection} obj Optional instance to populate.
     * @return {module:model/ShippingFulfillmentPagedCollection} The populated <code>ShippingFulfillmentPagedCollection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShippingFulfillmentPagedCollection();

            if (data.hasOwnProperty('fulfillments')) {
                obj['fulfillments'] = ApiClient.convertToType(data['fulfillments'], [ShippingFulfillment]);
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('warnings')) {
                obj['warnings'] = ApiClient.convertToType(data['warnings'], [Error]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShippingFulfillmentPagedCollection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShippingFulfillmentPagedCollection</code>.
     */
    static validateJSON(data) {
        if (data['fulfillments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['fulfillments'])) {
                throw new Error("Expected the field `fulfillments` to be an array in the JSON data but got " + data['fulfillments']);
            }
            // validate the optional field `fulfillments` (array)
            for (const item of data['fulfillments']) {
                ShippingFulfillment.validateJSON(item);
            };
        }
        if (data['warnings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['warnings'])) {
                throw new Error("Expected the field `warnings` to be an array in the JSON data but got " + data['warnings']);
            }
            // validate the optional field `warnings` (array)
            for (const item of data['warnings']) {
                Error.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * This array contains one or more fulfillments required for the order that was specified in method endpoint.
 * @member {Array.<module:model/ShippingFulfillment>} fulfillments
 */
ShippingFulfillmentPagedCollection.prototype['fulfillments'] = undefined;

/**
 * The total number of fulfillments in the specified order.<br><br><span class=\"tablenote\"><strong>Note:</strong> If no fulfillments are found for the order, this field is returned with a value of <code>0</code>.</span>
 * @member {Number} total
 */
ShippingFulfillmentPagedCollection.prototype['total'] = undefined;

/**
 * This array is only returned if one or more errors or warnings occur with the call request.
 * @member {Array.<module:model/Error>} warnings
 */
ShippingFulfillmentPagedCollection.prototype['warnings'] = undefined;






export default ShippingFulfillmentPagedCollection;

