/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SellerActionsToRelease model module.
 * @module model/SellerActionsToRelease
 * @version v1.20.0
 */
class SellerActionsToRelease {
    /**
     * Constructs a new <code>SellerActionsToRelease</code>.
     * This type is used to state possible action(s) that a seller can take to release a payment hold placed against an order.
     * @alias module:model/SellerActionsToRelease
     */
    constructor() { 
        
        SellerActionsToRelease.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SellerActionsToRelease</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SellerActionsToRelease} obj Optional instance to populate.
     * @return {module:model/SellerActionsToRelease} The populated <code>SellerActionsToRelease</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SellerActionsToRelease();

            if (data.hasOwnProperty('sellerActionToRelease')) {
                obj['sellerActionToRelease'] = ApiClient.convertToType(data['sellerActionToRelease'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SellerActionsToRelease</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SellerActionsToRelease</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['sellerActionToRelease'] && !(typeof data['sellerActionToRelease'] === 'string' || data['sellerActionToRelease'] instanceof String)) {
            throw new Error("Expected the field `sellerActionToRelease` to be a primitive type in the JSON string but got " + data['sellerActionToRelease']);
        }

        return true;
    }


}



/**
 * A possible action that the seller can take to expedite the release of a payment hold. A <strong>sellerActionToRelease</strong> field is returned for each possible action that a seller may take. Possible actions may include providing shipping/tracking information, issuing a refund, providing refund information, contacting customer support, etc.
 * @member {String} sellerActionToRelease
 */
SellerActionsToRelease.prototype['sellerActionToRelease'] = undefined;






export default SellerActionsToRelease;

