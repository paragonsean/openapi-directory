/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AddEvidencePaymentDisputeResponse model module.
 * @module model/AddEvidencePaymentDisputeResponse
 * @version v1.20.0
 */
class AddEvidencePaymentDisputeResponse {
    /**
     * Constructs a new <code>AddEvidencePaymentDisputeResponse</code>.
     * This type is used by the response payload of the &lt;strong&gt;addEvidence&lt;/strong&gt; method. Its only field is an unique identifier of an evidence set.
     * @alias module:model/AddEvidencePaymentDisputeResponse
     */
    constructor() { 
        
        AddEvidencePaymentDisputeResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddEvidencePaymentDisputeResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddEvidencePaymentDisputeResponse} obj Optional instance to populate.
     * @return {module:model/AddEvidencePaymentDisputeResponse} The populated <code>AddEvidencePaymentDisputeResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddEvidencePaymentDisputeResponse();

            if (data.hasOwnProperty('evidenceId')) {
                obj['evidenceId'] = ApiClient.convertToType(data['evidenceId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddEvidencePaymentDisputeResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddEvidencePaymentDisputeResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['evidenceId'] && !(typeof data['evidenceId'] === 'string' || data['evidenceId'] instanceof String)) {
            throw new Error("Expected the field `evidenceId` to be a primitive type in the JSON string but got " + data['evidenceId']);
        }

        return true;
    }


}



/**
 * The value returned in this field is the unique identifier of the newly-created evidence set. Upon a successful call, this value is automatically genererated. This new evidence set for the payment dispute includes the evidence file(s) that were passed in to the <strong>fileId</strong> array in the request payload. The <strong>evidenceId</strong> value will be needed if the seller wishes to add to the evidence set by using the <strong>updateEvidence</strong> method, or if they want to retrieve a specific evidence file within the evidence set by using the <strong>fetchEvidenceContent</strong> method.
 * @member {String} evidenceId
 */
AddEvidencePaymentDisputeResponse.prototype['evidenceId'] = undefined;






export default AddEvidencePaymentDisputeResponse;

