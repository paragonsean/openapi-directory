/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrderLineItems model module.
 * @module model/OrderLineItems
 * @version v1.20.0
 */
class OrderLineItems {
    /**
     * Constructs a new <code>OrderLineItems</code>.
     * This type is used by the &lt;strong&gt;lineItems&lt;/strong&gt; array that is used to identify one or more line items in the order with the payment dispute.
     * @alias module:model/OrderLineItems
     */
    constructor() { 
        
        OrderLineItems.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderLineItems</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderLineItems} obj Optional instance to populate.
     * @return {module:model/OrderLineItems} The populated <code>OrderLineItems</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderLineItems();

            if (data.hasOwnProperty('itemId')) {
                obj['itemId'] = ApiClient.convertToType(data['itemId'], 'String');
            }
            if (data.hasOwnProperty('lineItemId')) {
                obj['lineItemId'] = ApiClient.convertToType(data['lineItemId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderLineItems</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderLineItems</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['itemId'] && !(typeof data['itemId'] === 'string' || data['itemId'] instanceof String)) {
            throw new Error("Expected the field `itemId` to be a primitive type in the JSON string but got " + data['itemId']);
        }
        // ensure the json data is a string
        if (data['lineItemId'] && !(typeof data['lineItemId'] === 'string' || data['lineItemId'] instanceof String)) {
            throw new Error("Expected the field `lineItemId` to be a primitive type in the JSON string but got " + data['lineItemId']);
        }

        return true;
    }


}



/**
 * The unique identifier of the eBay listing associated with the order.
 * @member {String} itemId
 */
OrderLineItems.prototype['itemId'] = undefined;

/**
 * The unique identifier of the line item within the order. The <strong>lineItemId</strong> value is created once the buyer actually purchases the item, or if there is a commitment to buy (such as an auction that is won by the buyer, an accepted Best Offer, or other situation that does not require immediate payment from the buyer).
 * @member {String} lineItemId
 */
OrderLineItems.prototype['lineItemId'] = undefined;






export default OrderLineItems;

