/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SimpleAmount from './SimpleAmount';

/**
 * The PaymentDisputeOutcomeDetail model module.
 * @module model/PaymentDisputeOutcomeDetail
 * @version v1.20.0
 */
class PaymentDisputeOutcomeDetail {
    /**
     * Constructs a new <code>PaymentDisputeOutcomeDetail</code>.
     * This type is used by the &lt;strong&gt;resolution&lt;/strong&gt; container that is returned for payment disputes that have been resolved.
     * @alias module:model/PaymentDisputeOutcomeDetail
     */
    constructor() { 
        
        PaymentDisputeOutcomeDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PaymentDisputeOutcomeDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentDisputeOutcomeDetail} obj Optional instance to populate.
     * @return {module:model/PaymentDisputeOutcomeDetail} The populated <code>PaymentDisputeOutcomeDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentDisputeOutcomeDetail();

            if (data.hasOwnProperty('fees')) {
                obj['fees'] = SimpleAmount.constructFromObject(data['fees']);
            }
            if (data.hasOwnProperty('protectedAmount')) {
                obj['protectedAmount'] = SimpleAmount.constructFromObject(data['protectedAmount']);
            }
            if (data.hasOwnProperty('protectionStatus')) {
                obj['protectionStatus'] = ApiClient.convertToType(data['protectionStatus'], 'String');
            }
            if (data.hasOwnProperty('reasonForClosure')) {
                obj['reasonForClosure'] = ApiClient.convertToType(data['reasonForClosure'], 'String');
            }
            if (data.hasOwnProperty('recoupAmount')) {
                obj['recoupAmount'] = SimpleAmount.constructFromObject(data['recoupAmount']);
            }
            if (data.hasOwnProperty('totalFeeCredit')) {
                obj['totalFeeCredit'] = SimpleAmount.constructFromObject(data['totalFeeCredit']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentDisputeOutcomeDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentDisputeOutcomeDetail</code>.
     */
    static validateJSON(data) {
        // validate the optional field `fees`
        if (data['fees']) { // data not null
          SimpleAmount.validateJSON(data['fees']);
        }
        // validate the optional field `protectedAmount`
        if (data['protectedAmount']) { // data not null
          SimpleAmount.validateJSON(data['protectedAmount']);
        }
        // ensure the json data is a string
        if (data['protectionStatus'] && !(typeof data['protectionStatus'] === 'string' || data['protectionStatus'] instanceof String)) {
            throw new Error("Expected the field `protectionStatus` to be a primitive type in the JSON string but got " + data['protectionStatus']);
        }
        // ensure the json data is a string
        if (data['reasonForClosure'] && !(typeof data['reasonForClosure'] === 'string' || data['reasonForClosure'] instanceof String)) {
            throw new Error("Expected the field `reasonForClosure` to be a primitive type in the JSON string but got " + data['reasonForClosure']);
        }
        // validate the optional field `recoupAmount`
        if (data['recoupAmount']) { // data not null
          SimpleAmount.validateJSON(data['recoupAmount']);
        }
        // validate the optional field `totalFeeCredit`
        if (data['totalFeeCredit']) { // data not null
          SimpleAmount.validateJSON(data['totalFeeCredit']);
        }

        return true;
    }


}



/**
 * @member {module:model/SimpleAmount} fees
 */
PaymentDisputeOutcomeDetail.prototype['fees'] = undefined;

/**
 * @member {module:model/SimpleAmount} protectedAmount
 */
PaymentDisputeOutcomeDetail.prototype['protectedAmount'] = undefined;

/**
 * This enumeration value indicates if the seller is fully protected, partially protected, or not protected by eBay for the payment dispute. This field is always returned once the payment dispute is resolved. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:ProtectionStatusEnum'>eBay API documentation</a>
 * @member {String} protectionStatus
 */
PaymentDisputeOutcomeDetail.prototype['protectionStatus'] = undefined;

/**
 * The enumeration value returned in this field indicates the outcome of the payment dispute for the seller. This field is always returned once the payment dispute is resolved. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:OutcomeEnum'>eBay API documentation</a>
 * @member {String} reasonForClosure
 */
PaymentDisputeOutcomeDetail.prototype['reasonForClosure'] = undefined;

/**
 * @member {module:model/SimpleAmount} recoupAmount
 */
PaymentDisputeOutcomeDetail.prototype['recoupAmount'] = undefined;

/**
 * @member {module:model/SimpleAmount} totalFeeCredit
 */
PaymentDisputeOutcomeDetail.prototype['totalFeeCredit'] = undefined;






export default PaymentDisputeOutcomeDetail;

