/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PaymentDisputeActivity from './PaymentDisputeActivity';

/**
 * The PaymentDisputeActivityHistory model module.
 * @module model/PaymentDisputeActivityHistory
 * @version v1.20.0
 */
class PaymentDisputeActivityHistory {
    /**
     * Constructs a new <code>PaymentDisputeActivityHistory</code>.
     * This type is used by the base response of the &lt;strong&gt;getActivities&lt;/strong&gt; method, and includes a log of all activities of a payment dispute, from creation to resolution.
     * @alias module:model/PaymentDisputeActivityHistory
     */
    constructor() { 
        
        PaymentDisputeActivityHistory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PaymentDisputeActivityHistory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentDisputeActivityHistory} obj Optional instance to populate.
     * @return {module:model/PaymentDisputeActivityHistory} The populated <code>PaymentDisputeActivityHistory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentDisputeActivityHistory();

            if (data.hasOwnProperty('activity')) {
                obj['activity'] = ApiClient.convertToType(data['activity'], [PaymentDisputeActivity]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentDisputeActivityHistory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentDisputeActivityHistory</code>.
     */
    static validateJSON(data) {
        if (data['activity']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['activity'])) {
                throw new Error("Expected the field `activity` to be an array in the JSON data but got " + data['activity']);
            }
            // validate the optional field `activity` (array)
            for (const item of data['activity']) {
                PaymentDisputeActivity.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * This array holds all activities of a payment dispute, from creation to resolution. For each activity, the activity type, the actor, and a timestamp is shown. The <strong>getActivities</strong> response is dynamic, and grows with each recorded activity.
 * @member {Array.<module:model/PaymentDisputeActivity>} activity
 */
PaymentDisputeActivityHistory.prototype['activity'] = undefined;






export default PaymentDisputeActivityHistory;

