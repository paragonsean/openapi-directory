/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';

/**
 * The EbayCollectedCharges model module.
 * @module model/EbayCollectedCharges
 * @version v1.20.0
 */
class EbayCollectedCharges {
    /**
     * Constructs a new <code>EbayCollectedCharges</code>.
     * This type contains the breakdown of costs that are collected by eBay from the buyer.
     * @alias module:model/EbayCollectedCharges
     */
    constructor() { 
        
        EbayCollectedCharges.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EbayCollectedCharges</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EbayCollectedCharges} obj Optional instance to populate.
     * @return {module:model/EbayCollectedCharges} The populated <code>EbayCollectedCharges</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EbayCollectedCharges();

            if (data.hasOwnProperty('ebayShipping')) {
                obj['ebayShipping'] = Amount.constructFromObject(data['ebayShipping']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EbayCollectedCharges</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EbayCollectedCharges</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ebayShipping`
        if (data['ebayShipping']) { // data not null
          Amount.validateJSON(data['ebayShipping']);
        }

        return true;
    }


}



/**
 * @member {module:model/Amount} ebayShipping
 */
EbayCollectedCharges.prototype['ebayShipping'] = undefined;






export default EbayCollectedCharges;

