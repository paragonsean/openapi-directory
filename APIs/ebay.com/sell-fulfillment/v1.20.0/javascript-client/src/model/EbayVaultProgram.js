/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EbayVaultProgram model module.
 * @module model/EbayVaultProgram
 * @version v1.20.0
 */
class EbayVaultProgram {
    /**
     * Constructs a new <code>EbayVaultProgram</code>.
     * @alias module:model/EbayVaultProgram
     */
    constructor() { 
        
        EbayVaultProgram.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EbayVaultProgram</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EbayVaultProgram} obj Optional instance to populate.
     * @return {module:model/EbayVaultProgram} The populated <code>EbayVaultProgram</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EbayVaultProgram();

            if (data.hasOwnProperty('fulfillmentType')) {
                obj['fulfillmentType'] = ApiClient.convertToType(data['fulfillmentType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EbayVaultProgram</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EbayVaultProgram</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fulfillmentType'] && !(typeof data['fulfillmentType'] === 'string' || data['fulfillmentType'] instanceof String)) {
            throw new Error("Expected the field `fulfillmentType` to be a primitive type in the JSON string but got " + data['fulfillmentType']);
        }

        return true;
    }


}



/**
 * This field specifies how an eBay vault order will be fulfilled. Supported options are:<ul><li><b>Seller to Vault</b>: the order will be shipped by the seller to an authenticator.</li><li><b>Vault to Vault</b>: the order will be shipped from an eBay vault to the buyer's vault.</li><li><b>Vault to Buyer</b>: the order will be shipped from an eBay vault to the buyer's shipping address.</li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:EbayVaultFulfillmentTypeEnum'>eBay API documentation</a>
 * @member {String} fulfillmentType
 */
EbayVaultProgram.prototype['fulfillmentType'] = undefined;






export default EbayVaultProgram;

