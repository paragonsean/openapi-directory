/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CancelRequest from './CancelRequest';

/**
 * The CancelStatus model module.
 * @module model/CancelStatus
 * @version v1.20.0
 */
class CancelStatus {
    /**
     * Constructs a new <code>CancelStatus</code>.
     * This type contains information about any requests that have been made to cancel an order.
     * @alias module:model/CancelStatus
     */
    constructor() { 
        
        CancelStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CancelStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CancelStatus} obj Optional instance to populate.
     * @return {module:model/CancelStatus} The populated <code>CancelStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CancelStatus();

            if (data.hasOwnProperty('cancelRequests')) {
                obj['cancelRequests'] = ApiClient.convertToType(data['cancelRequests'], [CancelRequest]);
            }
            if (data.hasOwnProperty('cancelState')) {
                obj['cancelState'] = ApiClient.convertToType(data['cancelState'], 'String');
            }
            if (data.hasOwnProperty('cancelledDate')) {
                obj['cancelledDate'] = ApiClient.convertToType(data['cancelledDate'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CancelStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CancelStatus</code>.
     */
    static validateJSON(data) {
        if (data['cancelRequests']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['cancelRequests'])) {
                throw new Error("Expected the field `cancelRequests` to be an array in the JSON data but got " + data['cancelRequests']);
            }
            // validate the optional field `cancelRequests` (array)
            for (const item of data['cancelRequests']) {
                CancelRequest.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['cancelState'] && !(typeof data['cancelState'] === 'string' || data['cancelState'] instanceof String)) {
            throw new Error("Expected the field `cancelState` to be a primitive type in the JSON string but got " + data['cancelState']);
        }
        // ensure the json data is a string
        if (data['cancelledDate'] && !(typeof data['cancelledDate'] === 'string' || data['cancelledDate'] instanceof String)) {
            throw new Error("Expected the field `cancelledDate` to be a primitive type in the JSON string but got " + data['cancelledDate']);
        }

        return true;
    }


}



/**
 * This array contains details of one or more buyer requests to cancel the order. <br><br><b>For the getOrders call:</b>  This array is returned but is always empty.<br><b>For the getOrder call:</b> This array is returned fully populated with information about any cancellation requests.
 * @member {Array.<module:model/CancelRequest>} cancelRequests
 */
CancelStatus.prototype['cancelRequests'] = undefined;

/**
 * The state of the order with regard to cancellation. This field is always returned, and if there are no cancellation requests, a value of <code>NONE_REQUESTED</code> is returned.  For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:CancelStateEnum'>eBay API documentation</a>
 * @member {String} cancelState
 */
CancelStatus.prototype['cancelState'] = undefined;

/**
 * The date and time the order was cancelled, if applicable. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. <br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
 * @member {String} cancelledDate
 */
CancelStatus.prototype['cancelledDate'] = undefined;






export default CancelStatus;

