/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';

/**
 * The AppliedPromotion model module.
 * @module model/AppliedPromotion
 * @version v1.20.0
 */
class AppliedPromotion {
    /**
     * Constructs a new <code>AppliedPromotion</code>.
     * This type contains information about a sales promotion that is applied to a line item.
     * @alias module:model/AppliedPromotion
     */
    constructor() { 
        
        AppliedPromotion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppliedPromotion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppliedPromotion} obj Optional instance to populate.
     * @return {module:model/AppliedPromotion} The populated <code>AppliedPromotion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppliedPromotion();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('discountAmount')) {
                obj['discountAmount'] = Amount.constructFromObject(data['discountAmount']);
            }
            if (data.hasOwnProperty('promotionId')) {
                obj['promotionId'] = ApiClient.convertToType(data['promotionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppliedPromotion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppliedPromotion</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `discountAmount`
        if (data['discountAmount']) { // data not null
          Amount.validateJSON(data['discountAmount']);
        }
        // ensure the json data is a string
        if (data['promotionId'] && !(typeof data['promotionId'] === 'string' || data['promotionId'] instanceof String)) {
            throw new Error("Expected the field `promotionId` to be a primitive type in the JSON string but got " + data['promotionId']);
        }

        return true;
    }


}



/**
 * A description of the applied sales promotion.
 * @member {String} description
 */
AppliedPromotion.prototype['description'] = undefined;

/**
 * @member {module:model/Amount} discountAmount
 */
AppliedPromotion.prototype['discountAmount'] = undefined;

/**
 * An eBay-generated unique identifier of the sales promotion.<br><br> Multiple types of sales promotions are available to eBay Store owners, including order size/volume discounts, shipping discounts, special coupons, and price markdowns. Sales promotions can be managed through the Marketing tab of Seller Hub in My eBay, or by using the Trading API's <b>SetPromotionalSale</b> call or the Marketing API's <b>createItemPromotion</b> method.
 * @member {String} promotionId
 */
AppliedPromotion.prototype['promotionId'] = undefined;






export default AppliedPromotion;

