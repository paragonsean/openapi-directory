/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LineItemProperties model module.
 * @module model/LineItemProperties
 * @version v1.20.0
 */
class LineItemProperties {
    /**
     * Constructs a new <code>LineItemProperties</code>.
     * This type contains information about the eBay programs under which a line item was listed and sold.
     * @alias module:model/LineItemProperties
     */
    constructor() { 
        
        LineItemProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LineItemProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LineItemProperties} obj Optional instance to populate.
     * @return {module:model/LineItemProperties} The populated <code>LineItemProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LineItemProperties();

            if (data.hasOwnProperty('buyerProtection')) {
                obj['buyerProtection'] = ApiClient.convertToType(data['buyerProtection'], 'Boolean');
            }
            if (data.hasOwnProperty('fromBestOffer')) {
                obj['fromBestOffer'] = ApiClient.convertToType(data['fromBestOffer'], 'Boolean');
            }
            if (data.hasOwnProperty('soldViaAdCampaign')) {
                obj['soldViaAdCampaign'] = ApiClient.convertToType(data['soldViaAdCampaign'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LineItemProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LineItemProperties</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * A value of <code>true</code> indicates that the line item is covered by eBay's Buyer Protection program.
 * @member {Boolean} buyerProtection
 */
LineItemProperties.prototype['buyerProtection'] = undefined;

/**
 * This field is only returned if <code>true</code> and indicates that the purchase occurred by the buyer and seller mutually agreeing on a Best Offer amount. The Best Offer feature can be set up for any listing type, but if this feature is set up for an auction listing, it will no longer be available once a bid has been placed on the listing.
 * @member {Boolean} fromBestOffer
 */
LineItemProperties.prototype['fromBestOffer'] = undefined;

/**
 * This field is only returned if <code>true</code> and indicates that the line item was sold as a result of a seller's ad campaign.
 * @member {Boolean} soldViaAdCampaign
 */
LineItemProperties.prototype['soldViaAdCampaign'] = undefined;






export default LineItemProperties;

