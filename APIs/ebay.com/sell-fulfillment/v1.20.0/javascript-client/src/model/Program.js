/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EbayFulfillmentProgram from './EbayFulfillmentProgram';
import EbayInternationalShipping from './EbayInternationalShipping';
import EbayShipping from './EbayShipping';
import EbayVaultProgram from './EbayVaultProgram';
import PostSaleAuthenticationProgram from './PostSaleAuthenticationProgram';

/**
 * The Program model module.
 * @module model/Program
 * @version v1.20.0
 */
class Program {
    /**
     * Constructs a new <code>Program</code>.
     * This type is returned for order line items eligible for the Authenticity Guarantee service and/or for order line items fulfilled by the eBay Fulfillment program or eBay shipping.
     * @alias module:model/Program
     */
    constructor() { 
        
        Program.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Program</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Program} obj Optional instance to populate.
     * @return {module:model/Program} The populated <code>Program</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Program();

            if (data.hasOwnProperty('authenticityVerification')) {
                obj['authenticityVerification'] = PostSaleAuthenticationProgram.constructFromObject(data['authenticityVerification']);
            }
            if (data.hasOwnProperty('ebayInternationalShipping')) {
                obj['ebayInternationalShipping'] = EbayInternationalShipping.constructFromObject(data['ebayInternationalShipping']);
            }
            if (data.hasOwnProperty('ebayShipping')) {
                obj['ebayShipping'] = EbayShipping.constructFromObject(data['ebayShipping']);
            }
            if (data.hasOwnProperty('ebayVault')) {
                obj['ebayVault'] = EbayVaultProgram.constructFromObject(data['ebayVault']);
            }
            if (data.hasOwnProperty('fulfillmentProgram')) {
                obj['fulfillmentProgram'] = EbayFulfillmentProgram.constructFromObject(data['fulfillmentProgram']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Program</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Program</code>.
     */
    static validateJSON(data) {
        // validate the optional field `authenticityVerification`
        if (data['authenticityVerification']) { // data not null
          PostSaleAuthenticationProgram.validateJSON(data['authenticityVerification']);
        }
        // validate the optional field `ebayInternationalShipping`
        if (data['ebayInternationalShipping']) { // data not null
          EbayInternationalShipping.validateJSON(data['ebayInternationalShipping']);
        }
        // validate the optional field `ebayShipping`
        if (data['ebayShipping']) { // data not null
          EbayShipping.validateJSON(data['ebayShipping']);
        }
        // validate the optional field `ebayVault`
        if (data['ebayVault']) { // data not null
          EbayVaultProgram.validateJSON(data['ebayVault']);
        }
        // validate the optional field `fulfillmentProgram`
        if (data['fulfillmentProgram']) { // data not null
          EbayFulfillmentProgram.validateJSON(data['fulfillmentProgram']);
        }

        return true;
    }


}



/**
 * @member {module:model/PostSaleAuthenticationProgram} authenticityVerification
 */
Program.prototype['authenticityVerification'] = undefined;

/**
 * @member {module:model/EbayInternationalShipping} ebayInternationalShipping
 */
Program.prototype['ebayInternationalShipping'] = undefined;

/**
 * @member {module:model/EbayShipping} ebayShipping
 */
Program.prototype['ebayShipping'] = undefined;

/**
 * @member {module:model/EbayVaultProgram} ebayVault
 */
Program.prototype['ebayVault'] = undefined;

/**
 * @member {module:model/EbayFulfillmentProgram} fulfillmentProgram
 */
Program.prototype['fulfillmentProgram'] = undefined;






export default Program;

