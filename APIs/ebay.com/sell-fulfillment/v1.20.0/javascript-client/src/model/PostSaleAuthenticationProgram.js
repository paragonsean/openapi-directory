/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostSaleAuthenticationProgram model module.
 * @module model/PostSaleAuthenticationProgram
 * @version v1.20.0
 */
class PostSaleAuthenticationProgram {
    /**
     * Constructs a new <code>PostSaleAuthenticationProgram</code>.
     * This type is used to provide the status and outcome of an order line item going through the Authenticity Guarantee verification process.
     * @alias module:model/PostSaleAuthenticationProgram
     */
    constructor() { 
        
        PostSaleAuthenticationProgram.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PostSaleAuthenticationProgram</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostSaleAuthenticationProgram} obj Optional instance to populate.
     * @return {module:model/PostSaleAuthenticationProgram} The populated <code>PostSaleAuthenticationProgram</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostSaleAuthenticationProgram();

            if (data.hasOwnProperty('outcomeReason')) {
                obj['outcomeReason'] = ApiClient.convertToType(data['outcomeReason'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostSaleAuthenticationProgram</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostSaleAuthenticationProgram</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['outcomeReason'] && !(typeof data['outcomeReason'] === 'string' || data['outcomeReason'] instanceof String)) {
            throw new Error("Expected the field `outcomeReason` to be a primitive type in the JSON string but got " + data['outcomeReason']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * This field indicates the result of the authenticity verification inspection on an order line item. This field is not returned when the status value of the order line item is <code>PENDING</code> or <code>PASSED</code>. The possible values returned here are <code>NOT_AUTHENTIC</code>, <code>NOT_AS_DESCRIBED</code>, <code>CUSTOMIZED</code>, <code>MISCATEGORIZED</code>, or <code>NOT_AUTHENTIC_NO_RETURN</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:AuthenticityVerificationReasonEnum'>eBay API documentation</a>
 * @member {String} outcomeReason
 */
PostSaleAuthenticationProgram.prototype['outcomeReason'] = undefined;

/**
 * The value in this field indicates whether the order line item has passed or failed the authenticity verification inspection, or if the inspection and/or results are still pending. The possible values returned here are <code>PENDING</code>, <code>PASSED</code>, <code>FAILED</code>, or <code>PASSED_WITH_EXCEPTION</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:AuthenticityVerificationStatusEnum'>eBay API documentation</a>
 * @member {String} status
 */
PostSaleAuthenticationProgram.prototype['status'] = undefined;






export default PostSaleAuthenticationProgram;

