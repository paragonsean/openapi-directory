/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReturnAddress from './ReturnAddress';

/**
 * The AcceptPaymentDisputeRequest model module.
 * @module model/AcceptPaymentDisputeRequest
 * @version v1.20.0
 */
class AcceptPaymentDisputeRequest {
    /**
     * Constructs a new <code>AcceptPaymentDisputeRequest</code>.
     * This type is used by base request of the &lt;strong&gt;acceptPaymentDispute&lt;/strong&gt; method.
     * @alias module:model/AcceptPaymentDisputeRequest
     */
    constructor() { 
        
        AcceptPaymentDisputeRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AcceptPaymentDisputeRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AcceptPaymentDisputeRequest} obj Optional instance to populate.
     * @return {module:model/AcceptPaymentDisputeRequest} The populated <code>AcceptPaymentDisputeRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AcceptPaymentDisputeRequest();

            if (data.hasOwnProperty('returnAddress')) {
                obj['returnAddress'] = ReturnAddress.constructFromObject(data['returnAddress']);
            }
            if (data.hasOwnProperty('revision')) {
                obj['revision'] = ApiClient.convertToType(data['revision'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AcceptPaymentDisputeRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AcceptPaymentDisputeRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `returnAddress`
        if (data['returnAddress']) { // data not null
          ReturnAddress.validateJSON(data['returnAddress']);
        }

        return true;
    }


}



/**
 * @member {module:model/ReturnAddress} returnAddress
 */
AcceptPaymentDisputeRequest.prototype['returnAddress'] = undefined;

/**
 * This integer value indicates the revision number of the payment dispute. This field is required. The current <strong>revision</strong> number for a payment dispute can be retrieved with the <strong>getPaymentDispute</strong> method. Each time an action is taken against a payment dispute, this integer value increases by 1.
 * @member {Number} revision
 */
AcceptPaymentDisputeRequest.prototype['revision'] = undefined;






export default AcceptPaymentDisputeRequest;

