/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FulfillmentApi);
  }
}(this, function(expect, FulfillmentApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FulfillmentApi.LineItem();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LineItem', function() {
    it('should create an instance of LineItem', function() {
      // uncomment below and update the code to test LineItem
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be.a(FulfillmentApi.LineItem);
    });

    it('should have the property appliedPromotions (base name: "appliedPromotions")', function() {
      // uncomment below and update the code to test the property appliedPromotions
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property deliveryCost (base name: "deliveryCost")', function() {
      // uncomment below and update the code to test the property deliveryCost
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property discountedLineItemCost (base name: "discountedLineItemCost")', function() {
      // uncomment below and update the code to test the property discountedLineItemCost
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property ebayCollectAndRemitTaxes (base name: "ebayCollectAndRemitTaxes")', function() {
      // uncomment below and update the code to test the property ebayCollectAndRemitTaxes
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property ebayCollectedCharges (base name: "ebayCollectedCharges")', function() {
      // uncomment below and update the code to test the property ebayCollectedCharges
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property giftDetails (base name: "giftDetails")', function() {
      // uncomment below and update the code to test the property giftDetails
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property itemLocation (base name: "itemLocation")', function() {
      // uncomment below and update the code to test the property itemLocation
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property legacyItemId (base name: "legacyItemId")', function() {
      // uncomment below and update the code to test the property legacyItemId
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property legacyVariationId (base name: "legacyVariationId")', function() {
      // uncomment below and update the code to test the property legacyVariationId
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property lineItemCost (base name: "lineItemCost")', function() {
      // uncomment below and update the code to test the property lineItemCost
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property lineItemFulfillmentInstructions (base name: "lineItemFulfillmentInstructions")', function() {
      // uncomment below and update the code to test the property lineItemFulfillmentInstructions
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property lineItemFulfillmentStatus (base name: "lineItemFulfillmentStatus")', function() {
      // uncomment below and update the code to test the property lineItemFulfillmentStatus
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property lineItemId (base name: "lineItemId")', function() {
      // uncomment below and update the code to test the property lineItemId
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property linkedOrderLineItems (base name: "linkedOrderLineItems")', function() {
      // uncomment below and update the code to test the property linkedOrderLineItems
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property listingMarketplaceId (base name: "listingMarketplaceId")', function() {
      // uncomment below and update the code to test the property listingMarketplaceId
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property properties (base name: "properties")', function() {
      // uncomment below and update the code to test the property properties
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property purchaseMarketplaceId (base name: "purchaseMarketplaceId")', function() {
      // uncomment below and update the code to test the property purchaseMarketplaceId
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property refunds (base name: "refunds")', function() {
      // uncomment below and update the code to test the property refunds
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property sku (base name: "sku")', function() {
      // uncomment below and update the code to test the property sku
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property soldFormat (base name: "soldFormat")', function() {
      // uncomment below and update the code to test the property soldFormat
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property taxes (base name: "taxes")', function() {
      // uncomment below and update the code to test the property taxes
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property total (base name: "total")', function() {
      // uncomment below and update the code to test the property total
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property variationAspects (base name: "variationAspects")', function() {
      // uncomment below and update the code to test the property variationAspects
      //var instance = new FulfillmentApi.LineItem();
      //expect(instance).to.be();
    });

  });

}));
