/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FulfillmentApi);
  }
}(this, function(expect, FulfillmentApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FulfillmentApi.CancelRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CancelRequest', function() {
    it('should create an instance of CancelRequest', function() {
      // uncomment below and update the code to test CancelRequest
      //var instance = new FulfillmentApi.CancelRequest();
      //expect(instance).to.be.a(FulfillmentApi.CancelRequest);
    });

    it('should have the property cancelCompletedDate (base name: "cancelCompletedDate")', function() {
      // uncomment below and update the code to test the property cancelCompletedDate
      //var instance = new FulfillmentApi.CancelRequest();
      //expect(instance).to.be();
    });

    it('should have the property cancelInitiator (base name: "cancelInitiator")', function() {
      // uncomment below and update the code to test the property cancelInitiator
      //var instance = new FulfillmentApi.CancelRequest();
      //expect(instance).to.be();
    });

    it('should have the property cancelReason (base name: "cancelReason")', function() {
      // uncomment below and update the code to test the property cancelReason
      //var instance = new FulfillmentApi.CancelRequest();
      //expect(instance).to.be();
    });

    it('should have the property cancelRequestId (base name: "cancelRequestId")', function() {
      // uncomment below and update the code to test the property cancelRequestId
      //var instance = new FulfillmentApi.CancelRequest();
      //expect(instance).to.be();
    });

    it('should have the property cancelRequestState (base name: "cancelRequestState")', function() {
      // uncomment below and update the code to test the property cancelRequestState
      //var instance = new FulfillmentApi.CancelRequest();
      //expect(instance).to.be();
    });

    it('should have the property cancelRequestedDate (base name: "cancelRequestedDate")', function() {
      // uncomment below and update the code to test the property cancelRequestedDate
      //var instance = new FulfillmentApi.CancelRequest();
      //expect(instance).to.be();
    });

  });

}));
