# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.refund_item import RefundItem
from openapi_server.models.simple_amount import SimpleAmount
from openapi_server import util


class IssueRefundRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment: str=None, order_level_refund_amount: SimpleAmount=None, reason_for_refund: str=None, refund_items: List[RefundItem]=None):
        """IssueRefundRequest - a model defined in OpenAPI

        :param comment: The comment of this IssueRefundRequest.
        :param order_level_refund_amount: The order_level_refund_amount of this IssueRefundRequest.
        :param reason_for_refund: The reason_for_refund of this IssueRefundRequest.
        :param refund_items: The refund_items of this IssueRefundRequest.
        """
        self.openapi_types = {
            'comment': str,
            'order_level_refund_amount': SimpleAmount,
            'reason_for_refund': str,
            'refund_items': List[RefundItem]
        }

        self.attribute_map = {
            'comment': 'comment',
            'order_level_refund_amount': 'orderLevelRefundAmount',
            'reason_for_refund': 'reasonForRefund',
            'refund_items': 'refundItems'
        }

        self._comment = comment
        self._order_level_refund_amount = order_level_refund_amount
        self._reason_for_refund = reason_for_refund
        self._refund_items = refund_items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IssueRefundRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IssueRefundRequest of this IssueRefundRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment(self):
        """Gets the comment of this IssueRefundRequest.

        This free-text field allows the seller to clarify why the refund is being issued to the buyer.<br><br><b>Max Length</b>: 100

        :return: The comment of this IssueRefundRequest.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this IssueRefundRequest.

        This free-text field allows the seller to clarify why the refund is being issued to the buyer.<br><br><b>Max Length</b>: 100

        :param comment: The comment of this IssueRefundRequest.
        :type comment: str
        """

        self._comment = comment

    @property
    def order_level_refund_amount(self):
        """Gets the order_level_refund_amount of this IssueRefundRequest.


        :return: The order_level_refund_amount of this IssueRefundRequest.
        :rtype: SimpleAmount
        """
        return self._order_level_refund_amount

    @order_level_refund_amount.setter
    def order_level_refund_amount(self, order_level_refund_amount):
        """Sets the order_level_refund_amount of this IssueRefundRequest.


        :param order_level_refund_amount: The order_level_refund_amount of this IssueRefundRequest.
        :type order_level_refund_amount: SimpleAmount
        """

        self._order_level_refund_amount = order_level_refund_amount

    @property
    def reason_for_refund(self):
        """Gets the reason_for_refund of this IssueRefundRequest.

        The enumeration value passed into this field indicates the reason for the refund. One of the defined enumeration values in the <b>ReasonForRefundEnum</b> type must be used.<br><br>This field is required, and it is highly recommended that sellers use the correct refund reason, especially in the case of a buyer-requested cancellation or 'buyer remorse' return to indicate that there was nothing wrong with the item(s) or with the shipment of the order.<br><br><span class=\"tablenote\"><strong>Note:</strong> If issuing refunds for more than one order line item, keep in mind that the refund reason must be the same for each of the order line items. If the refund reason is different for one or more order line items in an order, the seller would need to make separate <b>issueRefund</b> calls, one for each refund reason. </span> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:ReasonForRefundEnum'>eBay API documentation</a>

        :return: The reason_for_refund of this IssueRefundRequest.
        :rtype: str
        """
        return self._reason_for_refund

    @reason_for_refund.setter
    def reason_for_refund(self, reason_for_refund):
        """Sets the reason_for_refund of this IssueRefundRequest.

        The enumeration value passed into this field indicates the reason for the refund. One of the defined enumeration values in the <b>ReasonForRefundEnum</b> type must be used.<br><br>This field is required, and it is highly recommended that sellers use the correct refund reason, especially in the case of a buyer-requested cancellation or 'buyer remorse' return to indicate that there was nothing wrong with the item(s) or with the shipment of the order.<br><br><span class=\"tablenote\"><strong>Note:</strong> If issuing refunds for more than one order line item, keep in mind that the refund reason must be the same for each of the order line items. If the refund reason is different for one or more order line items in an order, the seller would need to make separate <b>issueRefund</b> calls, one for each refund reason. </span> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:ReasonForRefundEnum'>eBay API documentation</a>

        :param reason_for_refund: The reason_for_refund of this IssueRefundRequest.
        :type reason_for_refund: str
        """

        self._reason_for_refund = reason_for_refund

    @property
    def refund_items(self):
        """Gets the refund_items of this IssueRefundRequest.

        The <b>refundItems</b> array is only required if the seller is issuing a refund for one or more individual order line items in a multiple line item order. Otherwise, the seller just uses the <b>orderLevelRefundAmount</b> container to specify the amount of the refund for the entire order.

        :return: The refund_items of this IssueRefundRequest.
        :rtype: List[RefundItem]
        """
        return self._refund_items

    @refund_items.setter
    def refund_items(self, refund_items):
        """Sets the refund_items of this IssueRefundRequest.

        The <b>refundItems</b> array is only required if the seller is issuing a refund for one or more individual order line items in a multiple line item order. Otherwise, the seller just uses the <b>orderLevelRefundAmount</b> container to specify the amount of the refund for the entire order.

        :param refund_items: The refund_items of this IssueRefundRequest.
        :type refund_items: List[RefundItem]
        """

        self._refund_items = refund_items
