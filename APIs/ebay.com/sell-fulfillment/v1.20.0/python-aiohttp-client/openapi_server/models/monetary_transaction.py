# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dispute_amount import DisputeAmount
from openapi_server import util


class MonetaryTransaction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: DisputeAmount=None, _date: str=None, reason: str=None, type: str=None):
        """MonetaryTransaction - a model defined in OpenAPI

        :param amount: The amount of this MonetaryTransaction.
        :param _date: The _date of this MonetaryTransaction.
        :param reason: The reason of this MonetaryTransaction.
        :param type: The type of this MonetaryTransaction.
        """
        self.openapi_types = {
            'amount': DisputeAmount,
            '_date': str,
            'reason': str,
            'type': str
        }

        self.attribute_map = {
            'amount': 'amount',
            '_date': 'date',
            'reason': 'reason',
            'type': 'type'
        }

        self._amount = amount
        self.__date = _date
        self._reason = reason
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MonetaryTransaction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MonetaryTransaction of this MonetaryTransaction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this MonetaryTransaction.


        :return: The amount of this MonetaryTransaction.
        :rtype: DisputeAmount
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this MonetaryTransaction.


        :param amount: The amount of this MonetaryTransaction.
        :type amount: DisputeAmount
        """

        self._amount = amount

    @property
    def _date(self):
        """Gets the _date of this MonetaryTransaction.

        This timestamp indicates when the monetary transaction occurred. A date is returned for all monetary transactions.<br><br> The following format is used: <code>YYYY-MM-DDTHH:MM:SS.SSSZ</code>. For example, <code>2015-08-04T19:09:02.768Z</code>.

        :return: The _date of this MonetaryTransaction.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this MonetaryTransaction.

        This timestamp indicates when the monetary transaction occurred. A date is returned for all monetary transactions.<br><br> The following format is used: <code>YYYY-MM-DDTHH:MM:SS.SSSZ</code>. For example, <code>2015-08-04T19:09:02.768Z</code>.

        :param _date: The _date of this MonetaryTransaction.
        :type _date: str
        """

        self.__date = _date

    @property
    def reason(self):
        """Gets the reason of this MonetaryTransaction.

        This enumeration value indicates the reason for the monetary transaction. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:MonetaryTransactionReasonEnum'>eBay API documentation</a>

        :return: The reason of this MonetaryTransaction.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this MonetaryTransaction.

        This enumeration value indicates the reason for the monetary transaction. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:MonetaryTransactionReasonEnum'>eBay API documentation</a>

        :param reason: The reason of this MonetaryTransaction.
        :type reason: str
        """

        self._reason = reason

    @property
    def type(self):
        """Gets the type of this MonetaryTransaction.

        This enumeration value indicates whether the monetary transaction is a charge or a credit to the seller. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:MonetaryTransactionTypeEnum'>eBay API documentation</a>

        :return: The type of this MonetaryTransaction.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this MonetaryTransaction.

        This enumeration value indicates whether the monetary transaction is a charge or a credit to the seller. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:MonetaryTransactionTypeEnum'>eBay API documentation</a>

        :param type: The type of this MonetaryTransaction.
        :type type: str
        """

        self._type = type
