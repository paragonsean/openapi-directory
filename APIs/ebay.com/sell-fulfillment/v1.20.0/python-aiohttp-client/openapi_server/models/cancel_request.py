# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CancelRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cancel_completed_date: str=None, cancel_initiator: str=None, cancel_reason: str=None, cancel_request_id: str=None, cancel_request_state: str=None, cancel_requested_date: str=None):
        """CancelRequest - a model defined in OpenAPI

        :param cancel_completed_date: The cancel_completed_date of this CancelRequest.
        :param cancel_initiator: The cancel_initiator of this CancelRequest.
        :param cancel_reason: The cancel_reason of this CancelRequest.
        :param cancel_request_id: The cancel_request_id of this CancelRequest.
        :param cancel_request_state: The cancel_request_state of this CancelRequest.
        :param cancel_requested_date: The cancel_requested_date of this CancelRequest.
        """
        self.openapi_types = {
            'cancel_completed_date': str,
            'cancel_initiator': str,
            'cancel_reason': str,
            'cancel_request_id': str,
            'cancel_request_state': str,
            'cancel_requested_date': str
        }

        self.attribute_map = {
            'cancel_completed_date': 'cancelCompletedDate',
            'cancel_initiator': 'cancelInitiator',
            'cancel_reason': 'cancelReason',
            'cancel_request_id': 'cancelRequestId',
            'cancel_request_state': 'cancelRequestState',
            'cancel_requested_date': 'cancelRequestedDate'
        }

        self._cancel_completed_date = cancel_completed_date
        self._cancel_initiator = cancel_initiator
        self._cancel_reason = cancel_reason
        self._cancel_request_id = cancel_request_id
        self._cancel_request_state = cancel_request_state
        self._cancel_requested_date = cancel_requested_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CancelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CancelRequest of this CancelRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cancel_completed_date(self):
        """Gets the cancel_completed_date of this CancelRequest.

        The date and time that the order cancellation was completed, if applicable. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field is not returned until the cancellation request has actually been approved by the seller.<br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>

        :return: The cancel_completed_date of this CancelRequest.
        :rtype: str
        """
        return self._cancel_completed_date

    @cancel_completed_date.setter
    def cancel_completed_date(self, cancel_completed_date):
        """Sets the cancel_completed_date of this CancelRequest.

        The date and time that the order cancellation was completed, if applicable. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field is not returned until the cancellation request has actually been approved by the seller.<br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>

        :param cancel_completed_date: The cancel_completed_date of this CancelRequest.
        :type cancel_completed_date: str
        """

        self._cancel_completed_date = cancel_completed_date

    @property
    def cancel_initiator(self):
        """Gets the cancel_initiator of this CancelRequest.

        This string value indicates the party who made the initial cancellation request. Typically, either the 'Buyer' or 'Seller'. If a cancellation request has been made, this field should be returned.

        :return: The cancel_initiator of this CancelRequest.
        :rtype: str
        """
        return self._cancel_initiator

    @cancel_initiator.setter
    def cancel_initiator(self, cancel_initiator):
        """Sets the cancel_initiator of this CancelRequest.

        This string value indicates the party who made the initial cancellation request. Typically, either the 'Buyer' or 'Seller'. If a cancellation request has been made, this field should be returned.

        :param cancel_initiator: The cancel_initiator of this CancelRequest.
        :type cancel_initiator: str
        """

        self._cancel_initiator = cancel_initiator

    @property
    def cancel_reason(self):
        """Gets the cancel_reason of this CancelRequest.

        The reason why the <b>cancelInitiator</b> initiated the cancellation request. Cancellation reasons for a buyer might include 'order placed by mistake' or 'order won't arrive in time'. For a seller, a typical cancellation reason is 'out of stock'. If a cancellation request has been made, this field should be returned.

        :return: The cancel_reason of this CancelRequest.
        :rtype: str
        """
        return self._cancel_reason

    @cancel_reason.setter
    def cancel_reason(self, cancel_reason):
        """Sets the cancel_reason of this CancelRequest.

        The reason why the <b>cancelInitiator</b> initiated the cancellation request. Cancellation reasons for a buyer might include 'order placed by mistake' or 'order won't arrive in time'. For a seller, a typical cancellation reason is 'out of stock'. If a cancellation request has been made, this field should be returned.

        :param cancel_reason: The cancel_reason of this CancelRequest.
        :type cancel_reason: str
        """

        self._cancel_reason = cancel_reason

    @property
    def cancel_request_id(self):
        """Gets the cancel_request_id of this CancelRequest.

        The unique identifier of the order cancellation request. This field is returned for each cancellation request.

        :return: The cancel_request_id of this CancelRequest.
        :rtype: str
        """
        return self._cancel_request_id

    @cancel_request_id.setter
    def cancel_request_id(self, cancel_request_id):
        """Sets the cancel_request_id of this CancelRequest.

        The unique identifier of the order cancellation request. This field is returned for each cancellation request.

        :param cancel_request_id: The cancel_request_id of this CancelRequest.
        :type cancel_request_id: str
        """

        self._cancel_request_id = cancel_request_id

    @property
    def cancel_request_state(self):
        """Gets the cancel_request_state of this CancelRequest.

        The current stage or condition of the cancellation request. This field is returned for each cancellation request. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:CancelRequestStateEnum'>eBay API documentation</a>

        :return: The cancel_request_state of this CancelRequest.
        :rtype: str
        """
        return self._cancel_request_state

    @cancel_request_state.setter
    def cancel_request_state(self, cancel_request_state):
        """Sets the cancel_request_state of this CancelRequest.

        The current stage or condition of the cancellation request. This field is returned for each cancellation request. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:CancelRequestStateEnum'>eBay API documentation</a>

        :param cancel_request_state: The cancel_request_state of this CancelRequest.
        :type cancel_request_state: str
        """

        self._cancel_request_state = cancel_request_state

    @property
    def cancel_requested_date(self):
        """Gets the cancel_requested_date of this CancelRequest.

        The date and time that the order cancellation was requested. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field is returned for each cancellation request.<br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>

        :return: The cancel_requested_date of this CancelRequest.
        :rtype: str
        """
        return self._cancel_requested_date

    @cancel_requested_date.setter
    def cancel_requested_date(self, cancel_requested_date):
        """Sets the cancel_requested_date of this CancelRequest.

        The date and time that the order cancellation was requested. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field is returned for each cancellation request.<br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>

        :param cancel_requested_date: The cancel_requested_date of this CancelRequest.
        :type cancel_requested_date: str
        """

        self._cancel_requested_date = cancel_requested_date
