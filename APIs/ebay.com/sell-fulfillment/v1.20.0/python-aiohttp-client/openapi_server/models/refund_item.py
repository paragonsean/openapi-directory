# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.legacy_reference import LegacyReference
from openapi_server.models.simple_amount import SimpleAmount
from openapi_server import util


class RefundItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, legacy_reference: LegacyReference=None, line_item_id: str=None, refund_amount: SimpleAmount=None):
        """RefundItem - a model defined in OpenAPI

        :param legacy_reference: The legacy_reference of this RefundItem.
        :param line_item_id: The line_item_id of this RefundItem.
        :param refund_amount: The refund_amount of this RefundItem.
        """
        self.openapi_types = {
            'legacy_reference': LegacyReference,
            'line_item_id': str,
            'refund_amount': SimpleAmount
        }

        self.attribute_map = {
            'legacy_reference': 'legacyReference',
            'line_item_id': 'lineItemId',
            'refund_amount': 'refundAmount'
        }

        self._legacy_reference = legacy_reference
        self._line_item_id = line_item_id
        self._refund_amount = refund_amount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RefundItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RefundItem of this RefundItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def legacy_reference(self):
        """Gets the legacy_reference of this RefundItem.


        :return: The legacy_reference of this RefundItem.
        :rtype: LegacyReference
        """
        return self._legacy_reference

    @legacy_reference.setter
    def legacy_reference(self, legacy_reference):
        """Sets the legacy_reference of this RefundItem.


        :param legacy_reference: The legacy_reference of this RefundItem.
        :type legacy_reference: LegacyReference
        """

        self._legacy_reference = legacy_reference

    @property
    def line_item_id(self):
        """Gets the line_item_id of this RefundItem.

        The unique identifier of an order line item. This identifier is created once a buyer purchases a 'Buy It Now' item or if an auction listing ends with a winning bidder. Either this field or the <b>legacyReference</b> container is needed to identify an individual order line item that will receive a refund.<br><br><span class=\"tablenote\"><strong>Note:</strong> The <b>lineItemId</b> field is used to identify an order line item in REST API format, and the  <b>legacyReference</b> container is used to identify an order line item in Trading/legacy API format. Both legacy and REST API identifiers are returned in <b>getOrder</b> (Fulfillment API) and <b>GetOrders</b> (Trading API).</span>

        :return: The line_item_id of this RefundItem.
        :rtype: str
        """
        return self._line_item_id

    @line_item_id.setter
    def line_item_id(self, line_item_id):
        """Sets the line_item_id of this RefundItem.

        The unique identifier of an order line item. This identifier is created once a buyer purchases a 'Buy It Now' item or if an auction listing ends with a winning bidder. Either this field or the <b>legacyReference</b> container is needed to identify an individual order line item that will receive a refund.<br><br><span class=\"tablenote\"><strong>Note:</strong> The <b>lineItemId</b> field is used to identify an order line item in REST API format, and the  <b>legacyReference</b> container is used to identify an order line item in Trading/legacy API format. Both legacy and REST API identifiers are returned in <b>getOrder</b> (Fulfillment API) and <b>GetOrders</b> (Trading API).</span>

        :param line_item_id: The line_item_id of this RefundItem.
        :type line_item_id: str
        """

        self._line_item_id = line_item_id

    @property
    def refund_amount(self):
        """Gets the refund_amount of this RefundItem.


        :return: The refund_amount of this RefundItem.
        :rtype: SimpleAmount
        """
        return self._refund_amount

    @refund_amount.setter
    def refund_amount(self, refund_amount):
        """Sets the refund_amount of this RefundItem.


        :param refund_amount: The refund_amount of this RefundItem.
        :type refund_amount: SimpleAmount
        """

        self._refund_amount = refund_amount
