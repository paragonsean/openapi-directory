# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TaxIdentifier(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, issuing_country: str=None, tax_identifier_type: str=None, taxpayer_id: str=None):
        """TaxIdentifier - a model defined in OpenAPI

        :param issuing_country: The issuing_country of this TaxIdentifier.
        :param tax_identifier_type: The tax_identifier_type of this TaxIdentifier.
        :param taxpayer_id: The taxpayer_id of this TaxIdentifier.
        """
        self.openapi_types = {
            'issuing_country': str,
            'tax_identifier_type': str,
            'taxpayer_id': str
        }

        self.attribute_map = {
            'issuing_country': 'issuingCountry',
            'tax_identifier_type': 'taxIdentifierType',
            'taxpayer_id': 'taxpayerId'
        }

        self._issuing_country = issuing_country
        self._tax_identifier_type = tax_identifier_type
        self._taxpayer_id = taxpayer_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaxIdentifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaxIdentifier of this TaxIdentifier.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def issuing_country(self):
        """Gets the issuing_country of this TaxIdentifier.

        This two-letter code indicates the country that issued the buyer's tax ID. The country that the two-letter code represents can be found in the <strong>CountryCodeEnum</strong> type, or in the  <a href=\"https://www.iso.org/iso-3166-country-codes.html \">ISO 3166</a> standard. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CountryCodeEnum'>eBay API documentation</a>

        :return: The issuing_country of this TaxIdentifier.
        :rtype: str
        """
        return self._issuing_country

    @issuing_country.setter
    def issuing_country(self, issuing_country):
        """Sets the issuing_country of this TaxIdentifier.

        This two-letter code indicates the country that issued the buyer's tax ID. The country that the two-letter code represents can be found in the <strong>CountryCodeEnum</strong> type, or in the  <a href=\"https://www.iso.org/iso-3166-country-codes.html \">ISO 3166</a> standard. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CountryCodeEnum'>eBay API documentation</a>

        :param issuing_country: The issuing_country of this TaxIdentifier.
        :type issuing_country: str
        """

        self._issuing_country = issuing_country

    @property
    def tax_identifier_type(self):
        """Gets the tax_identifier_type of this TaxIdentifier.

        This enumeration value indicates the type of tax identification being used for the buyer. The different tax types are defined in the <strong>TaxIdentifierTypeEnum</strong> type. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:TaxIdentifierTypeEnum'>eBay API documentation</a>

        :return: The tax_identifier_type of this TaxIdentifier.
        :rtype: str
        """
        return self._tax_identifier_type

    @tax_identifier_type.setter
    def tax_identifier_type(self, tax_identifier_type):
        """Sets the tax_identifier_type of this TaxIdentifier.

        This enumeration value indicates the type of tax identification being used for the buyer. The different tax types are defined in the <strong>TaxIdentifierTypeEnum</strong> type. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:TaxIdentifierTypeEnum'>eBay API documentation</a>

        :param tax_identifier_type: The tax_identifier_type of this TaxIdentifier.
        :type tax_identifier_type: str
        """

        self._tax_identifier_type = tax_identifier_type

    @property
    def taxpayer_id(self):
        """Gets the taxpayer_id of this TaxIdentifier.

        This value is the unique tax ID associated with the buyer. The type of tax identification is shown in the <strong>taxIdentifierType</strong> field.

        :return: The taxpayer_id of this TaxIdentifier.
        :rtype: str
        """
        return self._taxpayer_id

    @taxpayer_id.setter
    def taxpayer_id(self, taxpayer_id):
        """Sets the taxpayer_id of this TaxIdentifier.

        This value is the unique tax ID associated with the buyer. The type of tax identification is shown in the <strong>taxIdentifierType</strong> field.

        :param taxpayer_id: The taxpayer_id of this TaxIdentifier.
        :type taxpayer_id: str
        """

        self._taxpayer_id = taxpayer_id
