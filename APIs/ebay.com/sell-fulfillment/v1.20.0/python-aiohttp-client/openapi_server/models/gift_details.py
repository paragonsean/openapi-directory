# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GiftDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message: str=None, recipient_email: str=None, sender_name: str=None):
        """GiftDetails - a model defined in OpenAPI

        :param message: The message of this GiftDetails.
        :param recipient_email: The recipient_email of this GiftDetails.
        :param sender_name: The sender_name of this GiftDetails.
        """
        self.openapi_types = {
            'message': str,
            'recipient_email': str,
            'sender_name': str
        }

        self.attribute_map = {
            'message': 'message',
            'recipient_email': 'recipientEmail',
            'sender_name': 'senderName'
        }

        self._message = message
        self._recipient_email = recipient_email
        self._sender_name = sender_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GiftDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GiftDetails of this GiftDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this GiftDetails.

        This field contains the gift message from the buyer to the gift recipient. This field is only returned if the buyer of the gift included a message for the gift.<br><br><span class=\"tablenote\"><strong>Note:</strong> The <b>message</b> will not be returned for any order that is more than 90 days old.</span>

        :return: The message of this GiftDetails.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this GiftDetails.

        This field contains the gift message from the buyer to the gift recipient. This field is only returned if the buyer of the gift included a message for the gift.<br><br><span class=\"tablenote\"><strong>Note:</strong> The <b>message</b> will not be returned for any order that is more than 90 days old.</span>

        :param message: The message of this GiftDetails.
        :type message: str
        """

        self._message = message

    @property
    def recipient_email(self):
        """Gets the recipient_email of this GiftDetails.

        The email address of the gift recipient. The seller will send the digital gift card to this email address.<br><br><span class=\"tablenote\"><strong>Note:</strong> The <b>recipientEmail</b> will not be returned for any order that is more than 90 days old.</span>

        :return: The recipient_email of this GiftDetails.
        :rtype: str
        """
        return self._recipient_email

    @recipient_email.setter
    def recipient_email(self, recipient_email):
        """Sets the recipient_email of this GiftDetails.

        The email address of the gift recipient. The seller will send the digital gift card to this email address.<br><br><span class=\"tablenote\"><strong>Note:</strong> The <b>recipientEmail</b> will not be returned for any order that is more than 90 days old.</span>

        :param recipient_email: The recipient_email of this GiftDetails.
        :type recipient_email: str
        """

        self._recipient_email = recipient_email

    @property
    def sender_name(self):
        """Gets the sender_name of this GiftDetails.

        The name of the buyer, which will appear on the email that is sent to the gift recipient.<br><br><span class=\"tablenote\"><strong>Note:</strong> The <b>senderName</b> will not be returned for any order that is more than 90 days old.</span>

        :return: The sender_name of this GiftDetails.
        :rtype: str
        """
        return self._sender_name

    @sender_name.setter
    def sender_name(self, sender_name):
        """Sets the sender_name of this GiftDetails.

        The name of the buyer, which will appear on the email that is sent to the gift recipient.<br><br><span class=\"tablenote\"><strong>Note:</strong> The <b>senderName</b> will not be returned for any order that is more than 90 days old.</span>

        :param sender_name: The sender_name of this GiftDetails.
        :type sender_name: str
        """

        self._sender_name = sender_name
