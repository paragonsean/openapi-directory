# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server.models.phone_number import PhoneNumber
from openapi_server import util


class ExtendedContact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, company_name: str=None, contact_address: Address=None, email: str=None, full_name: str=None, primary_phone: PhoneNumber=None):
        """ExtendedContact - a model defined in OpenAPI

        :param company_name: The company_name of this ExtendedContact.
        :param contact_address: The contact_address of this ExtendedContact.
        :param email: The email of this ExtendedContact.
        :param full_name: The full_name of this ExtendedContact.
        :param primary_phone: The primary_phone of this ExtendedContact.
        """
        self.openapi_types = {
            'company_name': str,
            'contact_address': Address,
            'email': str,
            'full_name': str,
            'primary_phone': PhoneNumber
        }

        self.attribute_map = {
            'company_name': 'companyName',
            'contact_address': 'contactAddress',
            'email': 'email',
            'full_name': 'fullName',
            'primary_phone': 'primaryPhone'
        }

        self._company_name = company_name
        self._contact_address = contact_address
        self._email = email
        self._full_name = full_name
        self._primary_phone = primary_phone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExtendedContact':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExtendedContact of this ExtendedContact.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company_name(self):
        """Gets the company_name of this ExtendedContact.

        The company name associated with the buyer or eBay shipping partner. This field is only returned if defined/applicable to the buyer or eBay shipping partner.

        :return: The company_name of this ExtendedContact.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this ExtendedContact.

        The company name associated with the buyer or eBay shipping partner. This field is only returned if defined/applicable to the buyer or eBay shipping partner.

        :param company_name: The company_name of this ExtendedContact.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def contact_address(self):
        """Gets the contact_address of this ExtendedContact.


        :return: The contact_address of this ExtendedContact.
        :rtype: Address
        """
        return self._contact_address

    @contact_address.setter
    def contact_address(self, contact_address):
        """Sets the contact_address of this ExtendedContact.


        :param contact_address: The contact_address of this ExtendedContact.
        :type contact_address: Address
        """

        self._contact_address = contact_address

    @property
    def email(self):
        """Gets the email of this ExtendedContact.

        This field contains the email address of the buyer. This address will be returned for up to 14 days from order creation. If an order is more than 14 days old, no address is returned.<br><br><span class=\"tablenote\"> <strong>Note:</strong> If returned, this field contains the email address of the buyer, even for Global Shipping Program shipments.<br><br>The <b>email</b> will not be returned for any order that is more than 90 days old.</span>

        :return: The email of this ExtendedContact.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ExtendedContact.

        This field contains the email address of the buyer. This address will be returned for up to 14 days from order creation. If an order is more than 14 days old, no address is returned.<br><br><span class=\"tablenote\"> <strong>Note:</strong> If returned, this field contains the email address of the buyer, even for Global Shipping Program shipments.<br><br>The <b>email</b> will not be returned for any order that is more than 90 days old.</span>

        :param email: The email of this ExtendedContact.
        :type email: str
        """

        self._email = email

    @property
    def full_name(self):
        """Gets the full_name of this ExtendedContact.

        The full name of the buyer or eBay shipping partner.<br><br><span class=\"tablenote\"><strong>Note:</strong> The <b>fullName</b> will not be returned for any order that is more than 90 days old.</span>

        :return: The full_name of this ExtendedContact.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this ExtendedContact.

        The full name of the buyer or eBay shipping partner.<br><br><span class=\"tablenote\"><strong>Note:</strong> The <b>fullName</b> will not be returned for any order that is more than 90 days old.</span>

        :param full_name: The full_name of this ExtendedContact.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def primary_phone(self):
        """Gets the primary_phone of this ExtendedContact.


        :return: The primary_phone of this ExtendedContact.
        :rtype: PhoneNumber
        """
        return self._primary_phone

    @primary_phone.setter
    def primary_phone(self, primary_phone):
        """Sets the primary_phone of this ExtendedContact.


        :param primary_phone: The primary_phone of this ExtendedContact.
        :type primary_phone: PhoneNumber
        """

        self._primary_phone = primary_phone
