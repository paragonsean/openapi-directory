# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server import util


class EbayCollectedCharges(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ebay_shipping: Amount=None):
        """EbayCollectedCharges - a model defined in OpenAPI

        :param ebay_shipping: The ebay_shipping of this EbayCollectedCharges.
        """
        self.openapi_types = {
            'ebay_shipping': Amount
        }

        self.attribute_map = {
            'ebay_shipping': 'ebayShipping'
        }

        self._ebay_shipping = ebay_shipping

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EbayCollectedCharges':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EbayCollectedCharges of this EbayCollectedCharges.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ebay_shipping(self):
        """Gets the ebay_shipping of this EbayCollectedCharges.


        :return: The ebay_shipping of this EbayCollectedCharges.
        :rtype: Amount
        """
        return self._ebay_shipping

    @ebay_shipping.setter
    def ebay_shipping(self, ebay_shipping):
        """Sets the ebay_shipping of this EbayCollectedCharges.


        :param ebay_shipping: The ebay_shipping of this EbayCollectedCharges.
        :type ebay_shipping: Amount
        """

        self._ebay_shipping = ebay_shipping
