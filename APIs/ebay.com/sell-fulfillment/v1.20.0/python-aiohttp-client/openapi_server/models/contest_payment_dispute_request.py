# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.return_address import ReturnAddress
from openapi_server import util


class ContestPaymentDisputeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, note: str=None, return_address: ReturnAddress=None, revision: int=None):
        """ContestPaymentDisputeRequest - a model defined in OpenAPI

        :param note: The note of this ContestPaymentDisputeRequest.
        :param return_address: The return_address of this ContestPaymentDisputeRequest.
        :param revision: The revision of this ContestPaymentDisputeRequest.
        """
        self.openapi_types = {
            'note': str,
            'return_address': ReturnAddress,
            'revision': int
        }

        self.attribute_map = {
            'note': 'note',
            'return_address': 'returnAddress',
            'revision': 'revision'
        }

        self._note = note
        self._return_address = return_address
        self._revision = revision

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContestPaymentDisputeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContestPaymentDisputeRequest of this ContestPaymentDisputeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def note(self):
        """Gets the note of this ContestPaymentDisputeRequest.

        This field shows information that the seller provides about the dispute, such as the basis for the dispute, any relevant evidence, tracking numbers, and so forth.<br><br>This field is limited to 1000 characters.

        :return: The note of this ContestPaymentDisputeRequest.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this ContestPaymentDisputeRequest.

        This field shows information that the seller provides about the dispute, such as the basis for the dispute, any relevant evidence, tracking numbers, and so forth.<br><br>This field is limited to 1000 characters.

        :param note: The note of this ContestPaymentDisputeRequest.
        :type note: str
        """

        self._note = note

    @property
    def return_address(self):
        """Gets the return_address of this ContestPaymentDisputeRequest.


        :return: The return_address of this ContestPaymentDisputeRequest.
        :rtype: ReturnAddress
        """
        return self._return_address

    @return_address.setter
    def return_address(self, return_address):
        """Sets the return_address of this ContestPaymentDisputeRequest.


        :param return_address: The return_address of this ContestPaymentDisputeRequest.
        :type return_address: ReturnAddress
        """

        self._return_address = return_address

    @property
    def revision(self):
        """Gets the revision of this ContestPaymentDisputeRequest.

        This integer value indicates the revision number of the payment dispute. This field is required. The current <strong>revision</strong> number for a payment dispute can be retrieved with the <strong>getPaymentDispute</strong> method. Each time an action is taken against a payment dispute, this integer value increases by 1.

        :return: The revision of this ContestPaymentDisputeRequest.
        :rtype: int
        """
        return self._revision

    @revision.setter
    def revision(self, revision):
        """Sets the revision of this ContestPaymentDisputeRequest.

        This integer value indicates the revision number of the payment dispute. This field is required. The current <strong>revision</strong> number for a payment dispute can be retrieved with the <strong>getPaymentDispute</strong> method. Each time an action is taken against a payment dispute, this integer value increases by 1.

        :param revision: The revision of this ContestPaymentDisputeRequest.
        :type revision: int
        """

        self._revision = revision
