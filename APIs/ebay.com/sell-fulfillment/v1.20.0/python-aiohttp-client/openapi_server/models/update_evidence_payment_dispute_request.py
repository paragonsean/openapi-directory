# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file_evidence import FileEvidence
from openapi_server.models.order_line_items import OrderLineItems
from openapi_server import util


class UpdateEvidencePaymentDisputeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, evidence_id: str=None, evidence_type: str=None, files: List[FileEvidence]=None, line_items: List[OrderLineItems]=None):
        """UpdateEvidencePaymentDisputeRequest - a model defined in OpenAPI

        :param evidence_id: The evidence_id of this UpdateEvidencePaymentDisputeRequest.
        :param evidence_type: The evidence_type of this UpdateEvidencePaymentDisputeRequest.
        :param files: The files of this UpdateEvidencePaymentDisputeRequest.
        :param line_items: The line_items of this UpdateEvidencePaymentDisputeRequest.
        """
        self.openapi_types = {
            'evidence_id': str,
            'evidence_type': str,
            'files': List[FileEvidence],
            'line_items': List[OrderLineItems]
        }

        self.attribute_map = {
            'evidence_id': 'evidenceId',
            'evidence_type': 'evidenceType',
            'files': 'files',
            'line_items': 'lineItems'
        }

        self._evidence_id = evidence_id
        self._evidence_type = evidence_type
        self._files = files
        self._line_items = line_items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateEvidencePaymentDisputeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateEvidencePaymentDisputeRequest of this UpdateEvidencePaymentDisputeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def evidence_id(self):
        """Gets the evidence_id of this UpdateEvidencePaymentDisputeRequest.

        The unique identifier of the evidence set that is being updated with new evidence files.

        :return: The evidence_id of this UpdateEvidencePaymentDisputeRequest.
        :rtype: str
        """
        return self._evidence_id

    @evidence_id.setter
    def evidence_id(self, evidence_id):
        """Sets the evidence_id of this UpdateEvidencePaymentDisputeRequest.

        The unique identifier of the evidence set that is being updated with new evidence files.

        :param evidence_id: The evidence_id of this UpdateEvidencePaymentDisputeRequest.
        :type evidence_id: str
        """

        self._evidence_id = evidence_id

    @property
    def evidence_type(self):
        """Gets the evidence_type of this UpdateEvidencePaymentDisputeRequest.

        This field is used to indicate the type of evidence being provided through one or more evidence files. All evidence files (if more than one) should be associated with the evidence type passed in this field. See the <strong>EvidenceTypeEnum</strong> type for the supported evidence types. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:EvidenceTypeEnum'>eBay API documentation</a>

        :return: The evidence_type of this UpdateEvidencePaymentDisputeRequest.
        :rtype: str
        """
        return self._evidence_type

    @evidence_type.setter
    def evidence_type(self, evidence_type):
        """Sets the evidence_type of this UpdateEvidencePaymentDisputeRequest.

        This field is used to indicate the type of evidence being provided through one or more evidence files. All evidence files (if more than one) should be associated with the evidence type passed in this field. See the <strong>EvidenceTypeEnum</strong> type for the supported evidence types. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:EvidenceTypeEnum'>eBay API documentation</a>

        :param evidence_type: The evidence_type of this UpdateEvidencePaymentDisputeRequest.
        :type evidence_type: str
        """

        self._evidence_type = evidence_type

    @property
    def files(self):
        """Gets the files of this UpdateEvidencePaymentDisputeRequest.

        This array is used to specify one or more evidence files that will be added to the evidence set associated with a payment dispute. At least one evidence file must be specified in the <strong>files</strong> array.<br><br> The unique identifier of an evidence file is returned in the response payload of the <strong>uploadEvidence</strong> method.

        :return: The files of this UpdateEvidencePaymentDisputeRequest.
        :rtype: List[FileEvidence]
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this UpdateEvidencePaymentDisputeRequest.

        This array is used to specify one or more evidence files that will be added to the evidence set associated with a payment dispute. At least one evidence file must be specified in the <strong>files</strong> array.<br><br> The unique identifier of an evidence file is returned in the response payload of the <strong>uploadEvidence</strong> method.

        :param files: The files of this UpdateEvidencePaymentDisputeRequest.
        :type files: List[FileEvidence]
        """

        self._files = files

    @property
    def line_items(self):
        """Gets the line_items of this UpdateEvidencePaymentDisputeRequest.

        This required array identifies the order line item(s) for which the evidence file(s) will be applicable. Both the <strong>itemId</strong> and <strong>lineItemID</strong> fields are needed to identify each order line item, and both of these values are returned under the <strong>evidenceRequests.lineItems</strong> array in the <strong>getPaymentDispute</strong> response.

        :return: The line_items of this UpdateEvidencePaymentDisputeRequest.
        :rtype: List[OrderLineItems]
        """
        return self._line_items

    @line_items.setter
    def line_items(self, line_items):
        """Sets the line_items of this UpdateEvidencePaymentDisputeRequest.

        This required array identifies the order line item(s) for which the evidence file(s) will be applicable. Both the <strong>itemId</strong> and <strong>lineItemID</strong> fields are needed to identify each order line item, and both of these values are returned under the <strong>evidenceRequests.lineItems</strong> array in the <strong>getPaymentDispute</strong> response.

        :param line_items: The line_items of this UpdateEvidencePaymentDisputeRequest.
        :type line_items: List[OrderLineItems]
        """

        self._line_items = line_items
