# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EbayFulfillmentProgram(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fulfilled_by: str=None):
        """EbayFulfillmentProgram - a model defined in OpenAPI

        :param fulfilled_by: The fulfilled_by of this EbayFulfillmentProgram.
        """
        self.openapi_types = {
            'fulfilled_by': str
        }

        self.attribute_map = {
            'fulfilled_by': 'fulfilledBy'
        }

        self._fulfilled_by = fulfilled_by

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EbayFulfillmentProgram':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EbayFulfillmentProgram of this EbayFulfillmentProgram.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fulfilled_by(self):
        """Gets the fulfilled_by of this EbayFulfillmentProgram.

        The value returned in this field indicates the party that is handling fulfillment of the order line item. <br><br>Valid value: <code>EBAY</code>

        :return: The fulfilled_by of this EbayFulfillmentProgram.
        :rtype: str
        """
        return self._fulfilled_by

    @fulfilled_by.setter
    def fulfilled_by(self, fulfilled_by):
        """Sets the fulfilled_by of this EbayFulfillmentProgram.

        The value returned in this field indicates the party that is handling fulfillment of the order line item. <br><br>Valid value: <code>EBAY</code>

        :param fulfilled_by: The fulfilled_by of this EbayFulfillmentProgram.
        :type fulfilled_by: str
        """

        self._fulfilled_by = fulfilled_by
