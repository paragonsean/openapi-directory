# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cancel_request import CancelRequest
from openapi_server import util


class CancelStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cancel_requests: List[CancelRequest]=None, cancel_state: str=None, cancelled_date: str=None):
        """CancelStatus - a model defined in OpenAPI

        :param cancel_requests: The cancel_requests of this CancelStatus.
        :param cancel_state: The cancel_state of this CancelStatus.
        :param cancelled_date: The cancelled_date of this CancelStatus.
        """
        self.openapi_types = {
            'cancel_requests': List[CancelRequest],
            'cancel_state': str,
            'cancelled_date': str
        }

        self.attribute_map = {
            'cancel_requests': 'cancelRequests',
            'cancel_state': 'cancelState',
            'cancelled_date': 'cancelledDate'
        }

        self._cancel_requests = cancel_requests
        self._cancel_state = cancel_state
        self._cancelled_date = cancelled_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CancelStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CancelStatus of this CancelStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cancel_requests(self):
        """Gets the cancel_requests of this CancelStatus.

        This array contains details of one or more buyer requests to cancel the order. <br><br><b>For the getOrders call:</b>  This array is returned but is always empty.<br><b>For the getOrder call:</b> This array is returned fully populated with information about any cancellation requests.

        :return: The cancel_requests of this CancelStatus.
        :rtype: List[CancelRequest]
        """
        return self._cancel_requests

    @cancel_requests.setter
    def cancel_requests(self, cancel_requests):
        """Sets the cancel_requests of this CancelStatus.

        This array contains details of one or more buyer requests to cancel the order. <br><br><b>For the getOrders call:</b>  This array is returned but is always empty.<br><b>For the getOrder call:</b> This array is returned fully populated with information about any cancellation requests.

        :param cancel_requests: The cancel_requests of this CancelStatus.
        :type cancel_requests: List[CancelRequest]
        """

        self._cancel_requests = cancel_requests

    @property
    def cancel_state(self):
        """Gets the cancel_state of this CancelStatus.

        The state of the order with regard to cancellation. This field is always returned, and if there are no cancellation requests, a value of <code>NONE_REQUESTED</code> is returned.  For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:CancelStateEnum'>eBay API documentation</a>

        :return: The cancel_state of this CancelStatus.
        :rtype: str
        """
        return self._cancel_state

    @cancel_state.setter
    def cancel_state(self, cancel_state):
        """Sets the cancel_state of this CancelStatus.

        The state of the order with regard to cancellation. This field is always returned, and if there are no cancellation requests, a value of <code>NONE_REQUESTED</code> is returned.  For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:CancelStateEnum'>eBay API documentation</a>

        :param cancel_state: The cancel_state of this CancelStatus.
        :type cancel_state: str
        """

        self._cancel_state = cancel_state

    @property
    def cancelled_date(self):
        """Gets the cancelled_date of this CancelStatus.

        The date and time the order was cancelled, if applicable. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. <br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>

        :return: The cancelled_date of this CancelStatus.
        :rtype: str
        """
        return self._cancelled_date

    @cancelled_date.setter
    def cancelled_date(self, cancelled_date):
        """Sets the cancelled_date of this CancelStatus.

        The date and time the order was cancelled, if applicable. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. <br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>

        :param cancelled_date: The cancelled_date of this CancelStatus.
        :type cancelled_date: str
        """

        self._cancelled_date = cancelled_date
