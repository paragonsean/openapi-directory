# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server.models.order_refund import OrderRefund
from openapi_server.models.payment import Payment
from openapi_server import util


class PaymentSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, payments: List[Payment]=None, refunds: List[OrderRefund]=None, total_due_seller: Amount=None):
        """PaymentSummary - a model defined in OpenAPI

        :param payments: The payments of this PaymentSummary.
        :param refunds: The refunds of this PaymentSummary.
        :param total_due_seller: The total_due_seller of this PaymentSummary.
        """
        self.openapi_types = {
            'payments': List[Payment],
            'refunds': List[OrderRefund],
            'total_due_seller': Amount
        }

        self.attribute_map = {
            'payments': 'payments',
            'refunds': 'refunds',
            'total_due_seller': 'totalDueSeller'
        }

        self._payments = payments
        self._refunds = refunds
        self._total_due_seller = total_due_seller

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentSummary of this PaymentSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def payments(self):
        """Gets the payments of this PaymentSummary.

        This array consists of payment information for the order, including payment status, payment method, payment amount, and payment date. This array is always returned, although some of the fields under this container will not be returned until payment has been made.

        :return: The payments of this PaymentSummary.
        :rtype: List[Payment]
        """
        return self._payments

    @payments.setter
    def payments(self, payments):
        """Sets the payments of this PaymentSummary.

        This array consists of payment information for the order, including payment status, payment method, payment amount, and payment date. This array is always returned, although some of the fields under this container will not be returned until payment has been made.

        :param payments: The payments of this PaymentSummary.
        :type payments: List[Payment]
        """

        self._payments = payments

    @property
    def refunds(self):
        """Gets the refunds of this PaymentSummary.

        This array is always returned, but is returned as an empty array unless the seller has submitted a partial or full refund to the buyer for the order. If a refund has occurred, the refund amount and refund date will be shown for each refund.

        :return: The refunds of this PaymentSummary.
        :rtype: List[OrderRefund]
        """
        return self._refunds

    @refunds.setter
    def refunds(self, refunds):
        """Sets the refunds of this PaymentSummary.

        This array is always returned, but is returned as an empty array unless the seller has submitted a partial or full refund to the buyer for the order. If a refund has occurred, the refund amount and refund date will be shown for each refund.

        :param refunds: The refunds of this PaymentSummary.
        :type refunds: List[OrderRefund]
        """

        self._refunds = refunds

    @property
    def total_due_seller(self):
        """Gets the total_due_seller of this PaymentSummary.


        :return: The total_due_seller of this PaymentSummary.
        :rtype: Amount
        """
        return self._total_due_seller

    @total_due_seller.setter
    def total_due_seller(self, total_due_seller):
        """Sets the total_due_seller of this PaymentSummary.


        :param total_due_seller: The total_due_seller of this PaymentSummary.
        :type total_due_seller: Amount
        """

        self._total_due_seller = total_due_seller
