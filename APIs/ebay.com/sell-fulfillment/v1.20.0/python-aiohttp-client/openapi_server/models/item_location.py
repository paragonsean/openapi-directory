# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ItemLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country_code: str=None, location: str=None, postal_code: str=None):
        """ItemLocation - a model defined in OpenAPI

        :param country_code: The country_code of this ItemLocation.
        :param location: The location of this ItemLocation.
        :param postal_code: The postal_code of this ItemLocation.
        """
        self.openapi_types = {
            'country_code': str,
            'location': str,
            'postal_code': str
        }

        self.attribute_map = {
            'country_code': 'countryCode',
            'location': 'location',
            'postal_code': 'postalCode'
        }

        self._country_code = country_code
        self._location = location
        self._postal_code = postal_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ItemLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ItemLocation of this ItemLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country_code(self):
        """Gets the country_code of this ItemLocation.

        The two-letter <a href=\"https://www.iso.org/iso-3166-country-codes.html \" title=\"https://www.iso.org \" target=\"_blank\">ISO 3166</a> code representing the country of the address. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CountryCodeEnum'>eBay API documentation</a>

        :return: The country_code of this ItemLocation.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this ItemLocation.

        The two-letter <a href=\"https://www.iso.org/iso-3166-country-codes.html \" title=\"https://www.iso.org \" target=\"_blank\">ISO 3166</a> code representing the country of the address. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CountryCodeEnum'>eBay API documentation</a>

        :param country_code: The country_code of this ItemLocation.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def location(self):
        """Gets the location of this ItemLocation.

        Indicates the geographical location of the item (along with the value in the <strong>countryCode</strong> field). This field provides city, province, state, or similar information.

        :return: The location of this ItemLocation.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this ItemLocation.

        Indicates the geographical location of the item (along with the value in the <strong>countryCode</strong> field). This field provides city, province, state, or similar information.

        :param location: The location of this ItemLocation.
        :type location: str
        """

        self._location = location

    @property
    def postal_code(self):
        """Gets the postal_code of this ItemLocation.

        The postal code of the address.

        :return: The postal_code of this ItemLocation.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this ItemLocation.

        The postal code of the address.

        :param postal_code: The postal_code of this ItemLocation.
        :type postal_code: str
        """

        self._postal_code = postal_code
