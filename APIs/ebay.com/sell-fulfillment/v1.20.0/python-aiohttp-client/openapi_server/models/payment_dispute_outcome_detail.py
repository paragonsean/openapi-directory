# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.simple_amount import SimpleAmount
from openapi_server import util


class PaymentDisputeOutcomeDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fees: SimpleAmount=None, protected_amount: SimpleAmount=None, protection_status: str=None, reason_for_closure: str=None, recoup_amount: SimpleAmount=None, total_fee_credit: SimpleAmount=None):
        """PaymentDisputeOutcomeDetail - a model defined in OpenAPI

        :param fees: The fees of this PaymentDisputeOutcomeDetail.
        :param protected_amount: The protected_amount of this PaymentDisputeOutcomeDetail.
        :param protection_status: The protection_status of this PaymentDisputeOutcomeDetail.
        :param reason_for_closure: The reason_for_closure of this PaymentDisputeOutcomeDetail.
        :param recoup_amount: The recoup_amount of this PaymentDisputeOutcomeDetail.
        :param total_fee_credit: The total_fee_credit of this PaymentDisputeOutcomeDetail.
        """
        self.openapi_types = {
            'fees': SimpleAmount,
            'protected_amount': SimpleAmount,
            'protection_status': str,
            'reason_for_closure': str,
            'recoup_amount': SimpleAmount,
            'total_fee_credit': SimpleAmount
        }

        self.attribute_map = {
            'fees': 'fees',
            'protected_amount': 'protectedAmount',
            'protection_status': 'protectionStatus',
            'reason_for_closure': 'reasonForClosure',
            'recoup_amount': 'recoupAmount',
            'total_fee_credit': 'totalFeeCredit'
        }

        self._fees = fees
        self._protected_amount = protected_amount
        self._protection_status = protection_status
        self._reason_for_closure = reason_for_closure
        self._recoup_amount = recoup_amount
        self._total_fee_credit = total_fee_credit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentDisputeOutcomeDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentDisputeOutcomeDetail of this PaymentDisputeOutcomeDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fees(self):
        """Gets the fees of this PaymentDisputeOutcomeDetail.


        :return: The fees of this PaymentDisputeOutcomeDetail.
        :rtype: SimpleAmount
        """
        return self._fees

    @fees.setter
    def fees(self, fees):
        """Sets the fees of this PaymentDisputeOutcomeDetail.


        :param fees: The fees of this PaymentDisputeOutcomeDetail.
        :type fees: SimpleAmount
        """

        self._fees = fees

    @property
    def protected_amount(self):
        """Gets the protected_amount of this PaymentDisputeOutcomeDetail.


        :return: The protected_amount of this PaymentDisputeOutcomeDetail.
        :rtype: SimpleAmount
        """
        return self._protected_amount

    @protected_amount.setter
    def protected_amount(self, protected_amount):
        """Sets the protected_amount of this PaymentDisputeOutcomeDetail.


        :param protected_amount: The protected_amount of this PaymentDisputeOutcomeDetail.
        :type protected_amount: SimpleAmount
        """

        self._protected_amount = protected_amount

    @property
    def protection_status(self):
        """Gets the protection_status of this PaymentDisputeOutcomeDetail.

        This enumeration value indicates if the seller is fully protected, partially protected, or not protected by eBay for the payment dispute. This field is always returned once the payment dispute is resolved. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:ProtectionStatusEnum'>eBay API documentation</a>

        :return: The protection_status of this PaymentDisputeOutcomeDetail.
        :rtype: str
        """
        return self._protection_status

    @protection_status.setter
    def protection_status(self, protection_status):
        """Sets the protection_status of this PaymentDisputeOutcomeDetail.

        This enumeration value indicates if the seller is fully protected, partially protected, or not protected by eBay for the payment dispute. This field is always returned once the payment dispute is resolved. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:ProtectionStatusEnum'>eBay API documentation</a>

        :param protection_status: The protection_status of this PaymentDisputeOutcomeDetail.
        :type protection_status: str
        """

        self._protection_status = protection_status

    @property
    def reason_for_closure(self):
        """Gets the reason_for_closure of this PaymentDisputeOutcomeDetail.

        The enumeration value returned in this field indicates the outcome of the payment dispute for the seller. This field is always returned once the payment dispute is resolved. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:OutcomeEnum'>eBay API documentation</a>

        :return: The reason_for_closure of this PaymentDisputeOutcomeDetail.
        :rtype: str
        """
        return self._reason_for_closure

    @reason_for_closure.setter
    def reason_for_closure(self, reason_for_closure):
        """Sets the reason_for_closure of this PaymentDisputeOutcomeDetail.

        The enumeration value returned in this field indicates the outcome of the payment dispute for the seller. This field is always returned once the payment dispute is resolved. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:OutcomeEnum'>eBay API documentation</a>

        :param reason_for_closure: The reason_for_closure of this PaymentDisputeOutcomeDetail.
        :type reason_for_closure: str
        """

        self._reason_for_closure = reason_for_closure

    @property
    def recoup_amount(self):
        """Gets the recoup_amount of this PaymentDisputeOutcomeDetail.


        :return: The recoup_amount of this PaymentDisputeOutcomeDetail.
        :rtype: SimpleAmount
        """
        return self._recoup_amount

    @recoup_amount.setter
    def recoup_amount(self, recoup_amount):
        """Sets the recoup_amount of this PaymentDisputeOutcomeDetail.


        :param recoup_amount: The recoup_amount of this PaymentDisputeOutcomeDetail.
        :type recoup_amount: SimpleAmount
        """

        self._recoup_amount = recoup_amount

    @property
    def total_fee_credit(self):
        """Gets the total_fee_credit of this PaymentDisputeOutcomeDetail.


        :return: The total_fee_credit of this PaymentDisputeOutcomeDetail.
        :rtype: SimpleAmount
        """
        return self._total_fee_credit

    @total_fee_credit.setter
    def total_fee_credit(self, total_fee_credit):
        """Sets the total_fee_credit of this PaymentDisputeOutcomeDetail.


        :param total_fee_credit: The total_fee_credit of this PaymentDisputeOutcomeDetail.
        :type total_fee_credit: SimpleAmount
        """

        self._total_fee_credit = total_fee_credit
