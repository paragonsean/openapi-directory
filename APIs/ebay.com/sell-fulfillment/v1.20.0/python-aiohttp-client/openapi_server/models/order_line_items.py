# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrderLineItems(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, item_id: str=None, line_item_id: str=None):
        """OrderLineItems - a model defined in OpenAPI

        :param item_id: The item_id of this OrderLineItems.
        :param line_item_id: The line_item_id of this OrderLineItems.
        """
        self.openapi_types = {
            'item_id': str,
            'line_item_id': str
        }

        self.attribute_map = {
            'item_id': 'itemId',
            'line_item_id': 'lineItemId'
        }

        self._item_id = item_id
        self._line_item_id = line_item_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderLineItems':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderLineItems of this OrderLineItems.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def item_id(self):
        """Gets the item_id of this OrderLineItems.

        The unique identifier of the eBay listing associated with the order.

        :return: The item_id of this OrderLineItems.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this OrderLineItems.

        The unique identifier of the eBay listing associated with the order.

        :param item_id: The item_id of this OrderLineItems.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def line_item_id(self):
        """Gets the line_item_id of this OrderLineItems.

        The unique identifier of the line item within the order. The <strong>lineItemId</strong> value is created once the buyer actually purchases the item, or if there is a commitment to buy (such as an auction that is won by the buyer, an accepted Best Offer, or other situation that does not require immediate payment from the buyer).

        :return: The line_item_id of this OrderLineItems.
        :rtype: str
        """
        return self._line_item_id

    @line_item_id.setter
    def line_item_id(self, line_item_id):
        """Sets the line_item_id of this OrderLineItems.

        The unique identifier of the line item within the order. The <strong>lineItemId</strong> value is created once the buyer actually purchases the item, or if there is a commitment to buy (such as an auction that is won by the buyer, an accepted Best Offer, or other situation that does not require immediate payment from the buyer).

        :param line_item_id: The line_item_id of this OrderLineItems.
        :type line_item_id: str
        """

        self._line_item_id = line_item_id
