# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PaymentDisputeActivity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_date: str=None, activity_type: str=None, actor: str=None):
        """PaymentDisputeActivity - a model defined in OpenAPI

        :param activity_date: The activity_date of this PaymentDisputeActivity.
        :param activity_type: The activity_type of this PaymentDisputeActivity.
        :param actor: The actor of this PaymentDisputeActivity.
        """
        self.openapi_types = {
            'activity_date': str,
            'activity_type': str,
            'actor': str
        }

        self.attribute_map = {
            'activity_date': 'activityDate',
            'activity_type': 'activityType',
            'actor': 'actor'
        }

        self._activity_date = activity_date
        self._activity_type = activity_type
        self._actor = actor

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentDisputeActivity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentDisputeActivity of this PaymentDisputeActivity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_date(self):
        """Gets the activity_date of this PaymentDisputeActivity.

        The timestamp in this field shows the date/time of the payment dispute activity.<br><br>The timestamps returned here use the ISO-8601 24-hour date and time format, and the time zone used is Universal Coordinated Time (UTC), also known as Greenwich Mean Time (GMT), or Zulu. The ISO-8601 format looks like this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>. An example would be <code>2019-08-04T19:09:02.768Z</code>.

        :return: The activity_date of this PaymentDisputeActivity.
        :rtype: str
        """
        return self._activity_date

    @activity_date.setter
    def activity_date(self, activity_date):
        """Sets the activity_date of this PaymentDisputeActivity.

        The timestamp in this field shows the date/time of the payment dispute activity.<br><br>The timestamps returned here use the ISO-8601 24-hour date and time format, and the time zone used is Universal Coordinated Time (UTC), also known as Greenwich Mean Time (GMT), or Zulu. The ISO-8601 format looks like this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>. An example would be <code>2019-08-04T19:09:02.768Z</code>.

        :param activity_date: The activity_date of this PaymentDisputeActivity.
        :type activity_date: str
        """

        self._activity_date = activity_date

    @property
    def activity_type(self):
        """Gets the activity_type of this PaymentDisputeActivity.

        This enumeration value indicates the type of activity that occured on the payment dispute. For example, a value of <code>DISPUTE_OPENED</code> is returned when a payment disute is first created,  a value indicating the seller's decision on the dispute, such as <code>SELLER_CONTEST</code>, is returned when seller makes a decision to accept or contest dispute, and a value of <code>DISPUTE_CLOSED</code> is returned when a payment disute is resolved. See <strong>ActivityEnum</strong> for an explanation of each of the values that may be returned here. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:ActivityEnum'>eBay API documentation</a>

        :return: The activity_type of this PaymentDisputeActivity.
        :rtype: str
        """
        return self._activity_type

    @activity_type.setter
    def activity_type(self, activity_type):
        """Sets the activity_type of this PaymentDisputeActivity.

        This enumeration value indicates the type of activity that occured on the payment dispute. For example, a value of <code>DISPUTE_OPENED</code> is returned when a payment disute is first created,  a value indicating the seller's decision on the dispute, such as <code>SELLER_CONTEST</code>, is returned when seller makes a decision to accept or contest dispute, and a value of <code>DISPUTE_CLOSED</code> is returned when a payment disute is resolved. See <strong>ActivityEnum</strong> for an explanation of each of the values that may be returned here. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:ActivityEnum'>eBay API documentation</a>

        :param activity_type: The activity_type of this PaymentDisputeActivity.
        :type activity_type: str
        """

        self._activity_type = activity_type

    @property
    def actor(self):
        """Gets the actor of this PaymentDisputeActivity.

        This enumeration value indicates the actor that performed the action. Possible values include the <code>BUYER</code>, <code>SELLER</code>, <code>CS_AGENT</code> (eBay customer service), or <code>SYSTEM</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:ActorEnum'>eBay API documentation</a>

        :return: The actor of this PaymentDisputeActivity.
        :rtype: str
        """
        return self._actor

    @actor.setter
    def actor(self, actor):
        """Sets the actor of this PaymentDisputeActivity.

        This enumeration value indicates the actor that performed the action. Possible values include the <code>BUYER</code>, <code>SELLER</code>, <code>CS_AGENT</code> (eBay customer service), or <code>SYSTEM</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:ActorEnum'>eBay API documentation</a>

        :param actor: The actor of this PaymentDisputeActivity.
        :type actor: str
        """

        self._actor = actor
