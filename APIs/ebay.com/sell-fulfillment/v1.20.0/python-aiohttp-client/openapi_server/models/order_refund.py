# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server import util


class OrderRefund(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: Amount=None, refund_date: str=None, refund_id: str=None, refund_reference_id: str=None, refund_status: str=None):
        """OrderRefund - a model defined in OpenAPI

        :param amount: The amount of this OrderRefund.
        :param refund_date: The refund_date of this OrderRefund.
        :param refund_id: The refund_id of this OrderRefund.
        :param refund_reference_id: The refund_reference_id of this OrderRefund.
        :param refund_status: The refund_status of this OrderRefund.
        """
        self.openapi_types = {
            'amount': Amount,
            'refund_date': str,
            'refund_id': str,
            'refund_reference_id': str,
            'refund_status': str
        }

        self.attribute_map = {
            'amount': 'amount',
            'refund_date': 'refundDate',
            'refund_id': 'refundId',
            'refund_reference_id': 'refundReferenceId',
            'refund_status': 'refundStatus'
        }

        self._amount = amount
        self._refund_date = refund_date
        self._refund_id = refund_id
        self._refund_reference_id = refund_reference_id
        self._refund_status = refund_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderRefund':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderRefund of this OrderRefund.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this OrderRefund.


        :return: The amount of this OrderRefund.
        :rtype: Amount
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this OrderRefund.


        :param amount: The amount of this OrderRefund.
        :type amount: Amount
        """

        self._amount = amount

    @property
    def refund_date(self):
        """Gets the refund_date of this OrderRefund.

        The date and time that the refund was issued. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field is not returned until the refund has been issued. <br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>

        :return: The refund_date of this OrderRefund.
        :rtype: str
        """
        return self._refund_date

    @refund_date.setter
    def refund_date(self, refund_date):
        """Sets the refund_date of this OrderRefund.

        The date and time that the refund was issued. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field is not returned until the refund has been issued. <br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>

        :param refund_date: The refund_date of this OrderRefund.
        :type refund_date: str
        """

        self._refund_date = refund_date

    @property
    def refund_id(self):
        """Gets the refund_id of this OrderRefund.

        Unique identifier of a refund that was initiated for an order through the <b>issueRefund</b> method. If the <b>issueRefund</b> method was used to issue one or more refunds at the line item level, these refund identifiers are returned at the line item level instead (<b>lineItems.refunds.refundId</b> field).<br><br> A <b>refundId</b> value is returned in the response of the <b>issueRefund</b> method, and this same value will be returned in the <b>getOrders</b> and <b>getOrders</b> responses for pending and completed refunds. For other refunds, see the <b>refundReferenceId</b> field.

        :return: The refund_id of this OrderRefund.
        :rtype: str
        """
        return self._refund_id

    @refund_id.setter
    def refund_id(self, refund_id):
        """Sets the refund_id of this OrderRefund.

        Unique identifier of a refund that was initiated for an order through the <b>issueRefund</b> method. If the <b>issueRefund</b> method was used to issue one or more refunds at the line item level, these refund identifiers are returned at the line item level instead (<b>lineItems.refunds.refundId</b> field).<br><br> A <b>refundId</b> value is returned in the response of the <b>issueRefund</b> method, and this same value will be returned in the <b>getOrders</b> and <b>getOrders</b> responses for pending and completed refunds. For other refunds, see the <b>refundReferenceId</b> field.

        :param refund_id: The refund_id of this OrderRefund.
        :type refund_id: str
        """

        self._refund_id = refund_id

    @property
    def refund_reference_id(self):
        """Gets the refund_reference_id of this OrderRefund.

        The eBay-generated unique identifier for the refund. This field is not returned until the refund has been issued.

        :return: The refund_reference_id of this OrderRefund.
        :rtype: str
        """
        return self._refund_reference_id

    @refund_reference_id.setter
    def refund_reference_id(self, refund_reference_id):
        """Sets the refund_reference_id of this OrderRefund.

        The eBay-generated unique identifier for the refund. This field is not returned until the refund has been issued.

        :param refund_reference_id: The refund_reference_id of this OrderRefund.
        :type refund_reference_id: str
        """

        self._refund_reference_id = refund_reference_id

    @property
    def refund_status(self):
        """Gets the refund_status of this OrderRefund.

        This enumeration value indicates the current status of the refund to the buyer. This container is always returned for each refund. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:RefundStatusEnum'>eBay API documentation</a>

        :return: The refund_status of this OrderRefund.
        :rtype: str
        """
        return self._refund_status

    @refund_status.setter
    def refund_status(self, refund_status):
        """Sets the refund_status of this OrderRefund.

        This enumeration value indicates the current status of the refund to the buyer. This container is always returned for each refund. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:RefundStatusEnum'>eBay API documentation</a>

        :param refund_status: The refund_status of this OrderRefund.
        :type refund_status: str
        """

        self._refund_status = refund_status
