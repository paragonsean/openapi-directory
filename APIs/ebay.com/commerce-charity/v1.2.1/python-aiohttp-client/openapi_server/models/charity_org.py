# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image import Image
from openapi_server.models.location import Location
from openapi_server import util


class CharityOrg(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, charity_org_id: str=None, description: str=None, location: Location=None, logo_image: Image=None, mission_statement: str=None, name: str=None, registration_id: str=None, website: str=None):
        """CharityOrg - a model defined in OpenAPI

        :param charity_org_id: The charity_org_id of this CharityOrg.
        :param description: The description of this CharityOrg.
        :param location: The location of this CharityOrg.
        :param logo_image: The logo_image of this CharityOrg.
        :param mission_statement: The mission_statement of this CharityOrg.
        :param name: The name of this CharityOrg.
        :param registration_id: The registration_id of this CharityOrg.
        :param website: The website of this CharityOrg.
        """
        self.openapi_types = {
            'charity_org_id': str,
            'description': str,
            'location': Location,
            'logo_image': Image,
            'mission_statement': str,
            'name': str,
            'registration_id': str,
            'website': str
        }

        self.attribute_map = {
            'charity_org_id': 'charityOrgId',
            'description': 'description',
            'location': 'location',
            'logo_image': 'logoImage',
            'mission_statement': 'missionStatement',
            'name': 'name',
            'registration_id': 'registrationId',
            'website': 'website'
        }

        self._charity_org_id = charity_org_id
        self._description = description
        self._location = location
        self._logo_image = logo_image
        self._mission_statement = mission_statement
        self._name = name
        self._registration_id = registration_id
        self._website = website

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CharityOrg':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CharityOrg of this CharityOrg.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def charity_org_id(self):
        """Gets the charity_org_id of this CharityOrg.

        The ID of the charitable organization.

        :return: The charity_org_id of this CharityOrg.
        :rtype: str
        """
        return self._charity_org_id

    @charity_org_id.setter
    def charity_org_id(self, charity_org_id):
        """Sets the charity_org_id of this CharityOrg.

        The ID of the charitable organization.

        :param charity_org_id: The charity_org_id of this CharityOrg.
        :type charity_org_id: str
        """

        self._charity_org_id = charity_org_id

    @property
    def description(self):
        """Gets the description of this CharityOrg.

        The description of the charitable organization.

        :return: The description of this CharityOrg.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CharityOrg.

        The description of the charitable organization.

        :param description: The description of this CharityOrg.
        :type description: str
        """

        self._description = description

    @property
    def location(self):
        """Gets the location of this CharityOrg.


        :return: The location of this CharityOrg.
        :rtype: Location
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this CharityOrg.


        :param location: The location of this CharityOrg.
        :type location: Location
        """

        self._location = location

    @property
    def logo_image(self):
        """Gets the logo_image of this CharityOrg.


        :return: The logo_image of this CharityOrg.
        :rtype: Image
        """
        return self._logo_image

    @logo_image.setter
    def logo_image(self, logo_image):
        """Sets the logo_image of this CharityOrg.


        :param logo_image: The logo_image of this CharityOrg.
        :type logo_image: Image
        """

        self._logo_image = logo_image

    @property
    def mission_statement(self):
        """Gets the mission_statement of this CharityOrg.

        The mission statement of the charitable organization.

        :return: The mission_statement of this CharityOrg.
        :rtype: str
        """
        return self._mission_statement

    @mission_statement.setter
    def mission_statement(self, mission_statement):
        """Sets the mission_statement of this CharityOrg.

        The mission statement of the charitable organization.

        :param mission_statement: The mission_statement of this CharityOrg.
        :type mission_statement: str
        """

        self._mission_statement = mission_statement

    @property
    def name(self):
        """Gets the name of this CharityOrg.

        The name of the charitable organization.

        :return: The name of this CharityOrg.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CharityOrg.

        The name of the charitable organization.

        :param name: The name of this CharityOrg.
        :type name: str
        """

        self._name = name

    @property
    def registration_id(self):
        """Gets the registration_id of this CharityOrg.

        The registration ID for the charitable organization.<br /><br /><span class=\"tablenote\"><span style=\"color:#004680\"><strong>Note:</strong></span> For the US marketplace, this is the EIN.</span>

        :return: The registration_id of this CharityOrg.
        :rtype: str
        """
        return self._registration_id

    @registration_id.setter
    def registration_id(self, registration_id):
        """Sets the registration_id of this CharityOrg.

        The registration ID for the charitable organization.<br /><br /><span class=\"tablenote\"><span style=\"color:#004680\"><strong>Note:</strong></span> For the US marketplace, this is the EIN.</span>

        :param registration_id: The registration_id of this CharityOrg.
        :type registration_id: str
        """

        self._registration_id = registration_id

    @property
    def website(self):
        """Gets the website of this CharityOrg.

        The link to the website for the charitable organization.

        :return: The website of this CharityOrg.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this CharityOrg.

        The link to the website for the charitable organization.

        :param website: The website of this CharityOrg.
        :type website: str
        """

        self._website = website
