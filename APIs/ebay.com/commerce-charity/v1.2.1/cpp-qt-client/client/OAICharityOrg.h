/**
 * Charity API
 * The Charity API allows third-party developers to search for and access details on supported charitable organizations.
 *
 * The version of the OpenAPI document: v1.2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICharityOrg.h
 *
 * The full location, ID, logo and other details of the charity organization.
 */

#ifndef OAICharityOrg_H
#define OAICharityOrg_H

#include <QJsonObject>

#include "OAIImage.h"
#include "OAILocation.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILocation;
class OAIImage;

class OAICharityOrg : public OAIObject {
public:
    OAICharityOrg();
    OAICharityOrg(QString json);
    ~OAICharityOrg() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCharityOrgId() const;
    void setCharityOrgId(const QString &charity_org_id);
    bool is_charity_org_id_Set() const;
    bool is_charity_org_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAILocation getLocation() const;
    void setLocation(const OAILocation &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAIImage getLogoImage() const;
    void setLogoImage(const OAIImage &logo_image);
    bool is_logo_image_Set() const;
    bool is_logo_image_Valid() const;

    QString getMissionStatement() const;
    void setMissionStatement(const QString &mission_statement);
    bool is_mission_statement_Set() const;
    bool is_mission_statement_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRegistrationId() const;
    void setRegistrationId(const QString &registration_id);
    bool is_registration_id_Set() const;
    bool is_registration_id_Valid() const;

    QString getWebsite() const;
    void setWebsite(const QString &website);
    bool is_website_Set() const;
    bool is_website_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_charity_org_id;
    bool m_charity_org_id_isSet;
    bool m_charity_org_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAILocation m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAIImage m_logo_image;
    bool m_logo_image_isSet;
    bool m_logo_image_isValid;

    QString m_mission_statement;
    bool m_mission_statement_isSet;
    bool m_mission_statement_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_registration_id;
    bool m_registration_id_isSet;
    bool m_registration_id_isValid;

    QString m_website;
    bool m_website_isSet;
    bool m_website_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICharityOrg)

#endif // OAICharityOrg_H
