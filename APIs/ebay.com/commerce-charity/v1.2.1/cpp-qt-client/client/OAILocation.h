/**
 * Charity API
 * The Charity API allows third-party developers to search for and access details on supported charitable organizations.
 *
 * The version of the OpenAPI document: v1.2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILocation.h
 *
 * 
 */

#ifndef OAILocation_H
#define OAILocation_H

#include <QJsonObject>

#include "OAIAddress.h"
#include "OAIGeoCoordinates.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddress;
class OAIGeoCoordinates;

class OAILocation : public OAIObject {
public:
    OAILocation();
    OAILocation(QString json);
    ~OAILocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAddress getAddress() const;
    void setAddress(const OAIAddress &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    OAIGeoCoordinates getGeoCoordinates() const;
    void setGeoCoordinates(const OAIGeoCoordinates &geo_coordinates);
    bool is_geo_coordinates_Set() const;
    bool is_geo_coordinates_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAddress m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    OAIGeoCoordinates m_geo_coordinates;
    bool m_geo_coordinates_isSet;
    bool m_geo_coordinates_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILocation)

#endif // OAILocation_H
