/**
 * Charity API
 * The Charity API allows third-party developers to search for and access details on supported charitable organizations.
 *
 * The version of the OpenAPI document: v1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CharityApi);
  }
}(this, function(expect, CharityApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CharityApi.CharityOrg();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CharityOrg', function() {
    it('should create an instance of CharityOrg', function() {
      // uncomment below and update the code to test CharityOrg
      //var instance = new CharityApi.CharityOrg();
      //expect(instance).to.be.a(CharityApi.CharityOrg);
    });

    it('should have the property charityOrgId (base name: "charityOrgId")', function() {
      // uncomment below and update the code to test the property charityOrgId
      //var instance = new CharityApi.CharityOrg();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new CharityApi.CharityOrg();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new CharityApi.CharityOrg();
      //expect(instance).to.be();
    });

    it('should have the property logoImage (base name: "logoImage")', function() {
      // uncomment below and update the code to test the property logoImage
      //var instance = new CharityApi.CharityOrg();
      //expect(instance).to.be();
    });

    it('should have the property missionStatement (base name: "missionStatement")', function() {
      // uncomment below and update the code to test the property missionStatement
      //var instance = new CharityApi.CharityOrg();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CharityApi.CharityOrg();
      //expect(instance).to.be();
    });

    it('should have the property registrationId (base name: "registrationId")', function() {
      // uncomment below and update the code to test the property registrationId
      //var instance = new CharityApi.CharityOrg();
      //expect(instance).to.be();
    });

    it('should have the property website (base name: "website")', function() {
      // uncomment below and update the code to test the property website
      //var instance = new CharityApi.CharityOrg();
      //expect(instance).to.be();
    });

  });

}));
