# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server.models.cart_item import CartItem
from openapi_server.models.error import Error
from openapi_server import util


class RemoteShopcartResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cart_items: List[CartItem]=None, cart_subtotal: Amount=None, cart_web_url: str=None, unavailable_cart_items: List[CartItem]=None, warnings: List[Error]=None):
        """RemoteShopcartResponse - a model defined in OpenAPI

        :param cart_items: The cart_items of this RemoteShopcartResponse.
        :param cart_subtotal: The cart_subtotal of this RemoteShopcartResponse.
        :param cart_web_url: The cart_web_url of this RemoteShopcartResponse.
        :param unavailable_cart_items: The unavailable_cart_items of this RemoteShopcartResponse.
        :param warnings: The warnings of this RemoteShopcartResponse.
        """
        self.openapi_types = {
            'cart_items': List[CartItem],
            'cart_subtotal': Amount,
            'cart_web_url': str,
            'unavailable_cart_items': List[CartItem],
            'warnings': List[Error]
        }

        self.attribute_map = {
            'cart_items': 'cartItems',
            'cart_subtotal': 'cartSubtotal',
            'cart_web_url': 'cartWebUrl',
            'unavailable_cart_items': 'unavailableCartItems',
            'warnings': 'warnings'
        }

        self._cart_items = cart_items
        self._cart_subtotal = cart_subtotal
        self._cart_web_url = cart_web_url
        self._unavailable_cart_items = unavailable_cart_items
        self._warnings = warnings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemoteShopcartResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemoteShopcartResponse of this RemoteShopcartResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cart_items(self):
        """Gets the cart_items of this RemoteShopcartResponse.

        An array of the items in the member's eBay cart.

        :return: The cart_items of this RemoteShopcartResponse.
        :rtype: List[CartItem]
        """
        return self._cart_items

    @cart_items.setter
    def cart_items(self, cart_items):
        """Sets the cart_items of this RemoteShopcartResponse.

        An array of the items in the member's eBay cart.

        :param cart_items: The cart_items of this RemoteShopcartResponse.
        :type cart_items: List[CartItem]
        """

        self._cart_items = cart_items

    @property
    def cart_subtotal(self):
        """Gets the cart_subtotal of this RemoteShopcartResponse.


        :return: The cart_subtotal of this RemoteShopcartResponse.
        :rtype: Amount
        """
        return self._cart_subtotal

    @cart_subtotal.setter
    def cart_subtotal(self, cart_subtotal):
        """Sets the cart_subtotal of this RemoteShopcartResponse.


        :param cart_subtotal: The cart_subtotal of this RemoteShopcartResponse.
        :type cart_subtotal: Amount
        """

        self._cart_subtotal = cart_subtotal

    @property
    def cart_web_url(self):
        """Gets the cart_web_url of this RemoteShopcartResponse.

        The URL of the member's eBay cart.

        :return: The cart_web_url of this RemoteShopcartResponse.
        :rtype: str
        """
        return self._cart_web_url

    @cart_web_url.setter
    def cart_web_url(self, cart_web_url):
        """Sets the cart_web_url of this RemoteShopcartResponse.

        The URL of the member's eBay cart.

        :param cart_web_url: The cart_web_url of this RemoteShopcartResponse.
        :type cart_web_url: str
        """

        self._cart_web_url = cart_web_url

    @property
    def unavailable_cart_items(self):
        """Gets the unavailable_cart_items of this RemoteShopcartResponse.

        An array of items in the cart that are unavailable. This can be for a variety of reasons such as, when the listing has ended or the item is out of stock. Because a cart never expires, these items will remain in the cart until they are removed.

        :return: The unavailable_cart_items of this RemoteShopcartResponse.
        :rtype: List[CartItem]
        """
        return self._unavailable_cart_items

    @unavailable_cart_items.setter
    def unavailable_cart_items(self, unavailable_cart_items):
        """Sets the unavailable_cart_items of this RemoteShopcartResponse.

        An array of items in the cart that are unavailable. This can be for a variety of reasons such as, when the listing has ended or the item is out of stock. Because a cart never expires, these items will remain in the cart until they are removed.

        :param unavailable_cart_items: The unavailable_cart_items of this RemoteShopcartResponse.
        :type unavailable_cart_items: List[CartItem]
        """

        self._unavailable_cart_items = unavailable_cart_items

    @property
    def warnings(self):
        """Gets the warnings of this RemoteShopcartResponse.

        An array of warning messages. These type of errors do not prevent the call from executing but should be checked.

        :return: The warnings of this RemoteShopcartResponse.
        :rtype: List[Error]
        """
        return self._warnings

    @warnings.setter
    def warnings(self, warnings):
        """Sets the warnings of this RemoteShopcartResponse.

        An array of warning messages. These type of errors do not prevent the call from executing but should be checked.

        :param warnings: The warnings of this RemoteShopcartResponse.
        :type warnings: List[Error]
        """

        self._warnings = warnings
