# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddCartItemInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, item_id: str=None, quantity: int=None):
        """AddCartItemInput - a model defined in OpenAPI

        :param item_id: The item_id of this AddCartItemInput.
        :param quantity: The quantity of this AddCartItemInput.
        """
        self.openapi_types = {
            'item_id': str,
            'quantity': int
        }

        self.attribute_map = {
            'item_id': 'itemId',
            'quantity': 'quantity'
        }

        self._item_id = item_id
        self._quantity = quantity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddCartItemInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddCartItemInput of this AddCartItemInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def item_id(self):
        """Gets the item_id of this AddCartItemInput.

        The eBay RESTful identifier of the item you want added to the cart. RESTful Item ID Format: v1|#|# For example: v1|272394640372|0 v1|162846450672|461882996982 For more information about item ID for RESTful APIs, see the Legacy API compatibility section of the Buy APIs Overview. Maximum number of items in a cart: 100

        :return: The item_id of this AddCartItemInput.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this AddCartItemInput.

        The eBay RESTful identifier of the item you want added to the cart. RESTful Item ID Format: v1|#|# For example: v1|272394640372|0 v1|162846450672|461882996982 For more information about item ID for RESTful APIs, see the Legacy API compatibility section of the Buy APIs Overview. Maximum number of items in a cart: 100

        :param item_id: The item_id of this AddCartItemInput.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def quantity(self):
        """Gets the quantity of this AddCartItemInput.

        The number of this item the buyer wants to purchase. If this value is greater than the number available, the service will change this value to the number available. If this happens, a warning is returned. Maximum: number available

        :return: The quantity of this AddCartItemInput.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this AddCartItemInput.

        The number of this item the buyer wants to purchase. If this value is greater than the number available, the service will change this value to the number available. If this happens, a warning is returned. Maximum: number available

        :param quantity: The quantity of this AddCartItemInput.
        :type quantity: int
        """

        self._quantity = quantity
