# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server import util


class AvailableCoupon(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, constraint: str=None, discount_amount: Amount=None, discount_type: str=None, message: str=None, redemption_code: str=None, terms_web_url: str=None):
        """AvailableCoupon - a model defined in OpenAPI

        :param constraint: The constraint of this AvailableCoupon.
        :param discount_amount: The discount_amount of this AvailableCoupon.
        :param discount_type: The discount_type of this AvailableCoupon.
        :param message: The message of this AvailableCoupon.
        :param redemption_code: The redemption_code of this AvailableCoupon.
        :param terms_web_url: The terms_web_url of this AvailableCoupon.
        """
        self.openapi_types = {
            'constraint': str,
            'discount_amount': Amount,
            'discount_type': str,
            'message': str,
            'redemption_code': str,
            'terms_web_url': str
        }

        self.attribute_map = {
            'constraint': 'constraint',
            'discount_amount': 'discountAmount',
            'discount_type': 'discountType',
            'message': 'message',
            'redemption_code': 'redemptionCode',
            'terms_web_url': 'termsWebUrl'
        }

        self._constraint = constraint
        self._discount_amount = discount_amount
        self._discount_type = discount_type
        self._message = message
        self._redemption_code = redemption_code
        self._terms_web_url = terms_web_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AvailableCoupon':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AvailableCoupon of this AvailableCoupon.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def constraint(self):
        """Gets the constraint of this AvailableCoupon.

        The limitations or restrictions of the coupon. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/browse/types/gct:CouponConstraint'>eBay API documentation</a>

        :return: The constraint of this AvailableCoupon.
        :rtype: str
        """
        return self._constraint

    @constraint.setter
    def constraint(self, constraint):
        """Sets the constraint of this AvailableCoupon.

        The limitations or restrictions of the coupon. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/browse/types/gct:CouponConstraint'>eBay API documentation</a>

        :param constraint: The constraint of this AvailableCoupon.
        :type constraint: str
        """

        self._constraint = constraint

    @property
    def discount_amount(self):
        """Gets the discount_amount of this AvailableCoupon.


        :return: The discount_amount of this AvailableCoupon.
        :rtype: Amount
        """
        return self._discount_amount

    @discount_amount.setter
    def discount_amount(self, discount_amount):
        """Sets the discount_amount of this AvailableCoupon.


        :param discount_amount: The discount_amount of this AvailableCoupon.
        :type discount_amount: Amount
        """

        self._discount_amount = discount_amount

    @property
    def discount_type(self):
        """Gets the discount_type of this AvailableCoupon.

        The type of discount that the coupon applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/browse/types/gct:CouponDiscountType'>eBay API documentation</a>

        :return: The discount_type of this AvailableCoupon.
        :rtype: str
        """
        return self._discount_type

    @discount_type.setter
    def discount_type(self, discount_type):
        """Sets the discount_type of this AvailableCoupon.

        The type of discount that the coupon applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/browse/types/gct:CouponDiscountType'>eBay API documentation</a>

        :param discount_type: The discount_type of this AvailableCoupon.
        :type discount_type: str
        """

        self._discount_type = discount_type

    @property
    def message(self):
        """Gets the message of this AvailableCoupon.

        A description of the coupon. Note: The value returned in the termsWebUrl field should appear for all experiences when displaying coupons. The value in the availableCoupons.message field must also be included, if returned in the API response.

        :return: The message of this AvailableCoupon.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this AvailableCoupon.

        A description of the coupon. Note: The value returned in the termsWebUrl field should appear for all experiences when displaying coupons. The value in the availableCoupons.message field must also be included, if returned in the API response.

        :param message: The message of this AvailableCoupon.
        :type message: str
        """

        self._message = message

    @property
    def redemption_code(self):
        """Gets the redemption_code of this AvailableCoupon.

        The coupon code.

        :return: The redemption_code of this AvailableCoupon.
        :rtype: str
        """
        return self._redemption_code

    @redemption_code.setter
    def redemption_code(self, redemption_code):
        """Sets the redemption_code of this AvailableCoupon.

        The coupon code.

        :param redemption_code: The redemption_code of this AvailableCoupon.
        :type redemption_code: str
        """

        self._redemption_code = redemption_code

    @property
    def terms_web_url(self):
        """Gets the terms_web_url of this AvailableCoupon.

        The URL to the coupon terms of use. Note: The value returned in the termsWebUrl field should appear for all experiences when displaying coupons. The value in the availableCoupons.message field must also be included, if returned in the API response.

        :return: The terms_web_url of this AvailableCoupon.
        :rtype: str
        """
        return self._terms_web_url

    @terms_web_url.setter
    def terms_web_url(self, terms_web_url):
        """Sets the terms_web_url of this AvailableCoupon.

        The URL to the coupon terms of use. Note: The value returned in the termsWebUrl field should appear for all experiences when displaying coupons. The value in the availableCoupons.message field must also be included, if returned in the API response.

        :param terms_web_url: The terms_web_url of this AvailableCoupon.
        :type terms_web_url: str
        """

        self._terms_web_url = terms_web_url
