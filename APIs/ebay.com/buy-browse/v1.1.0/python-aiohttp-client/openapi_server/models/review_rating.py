# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rating_histogram import RatingHistogram
from openapi_server import util


class ReviewRating(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average_rating: str=None, rating_histograms: List[RatingHistogram]=None, review_count: int=None):
        """ReviewRating - a model defined in OpenAPI

        :param average_rating: The average_rating of this ReviewRating.
        :param rating_histograms: The rating_histograms of this ReviewRating.
        :param review_count: The review_count of this ReviewRating.
        """
        self.openapi_types = {
            'average_rating': str,
            'rating_histograms': List[RatingHistogram],
            'review_count': int
        }

        self.attribute_map = {
            'average_rating': 'averageRating',
            'rating_histograms': 'ratingHistograms',
            'review_count': 'reviewCount'
        }

        self._average_rating = average_rating
        self._rating_histograms = rating_histograms
        self._review_count = review_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReviewRating':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReviewRating of this ReviewRating.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average_rating(self):
        """Gets the average_rating of this ReviewRating.

        The average rating given to a product based on customer reviews.

        :return: The average_rating of this ReviewRating.
        :rtype: str
        """
        return self._average_rating

    @average_rating.setter
    def average_rating(self, average_rating):
        """Sets the average_rating of this ReviewRating.

        The average rating given to a product based on customer reviews.

        :param average_rating: The average_rating of this ReviewRating.
        :type average_rating: str
        """

        self._average_rating = average_rating

    @property
    def rating_histograms(self):
        """Gets the rating_histograms of this ReviewRating.

        An array of containers for the product rating histograms that shows the review counts and the product rating.

        :return: The rating_histograms of this ReviewRating.
        :rtype: List[RatingHistogram]
        """
        return self._rating_histograms

    @rating_histograms.setter
    def rating_histograms(self, rating_histograms):
        """Sets the rating_histograms of this ReviewRating.

        An array of containers for the product rating histograms that shows the review counts and the product rating.

        :param rating_histograms: The rating_histograms of this ReviewRating.
        :type rating_histograms: List[RatingHistogram]
        """

        self._rating_histograms = rating_histograms

    @property
    def review_count(self):
        """Gets the review_count of this ReviewRating.

        The total number of reviews for the item.

        :return: The review_count of this ReviewRating.
        :rtype: int
        """
        return self._review_count

    @review_count.setter
    def review_count(self, review_count):
        """Sets the review_count of this ReviewRating.

        The total number of reviews for the item.

        :param review_count: The review_count of this ReviewRating.
        :type review_count: int
        """

        self._review_count = review_count
