# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Region(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, region_name: str=None, region_type: str=None):
        """Region - a model defined in OpenAPI

        :param region_name: The region_name of this Region.
        :param region_type: The region_type of this Region.
        """
        self.openapi_types = {
            'region_name': str,
            'region_type': str
        }

        self.attribute_map = {
            'region_name': 'regionName',
            'region_type': 'regionType'
        }

        self._region_name = region_name
        self._region_type = region_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Region':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Region of this Region.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def region_name(self):
        """Gets the region_name of this Region.

        A localized text string that indicates the name of the region. Taxes are generally charged at the state/province level or at the country level in the case of VAT tax.

        :return: The region_name of this Region.
        :rtype: str
        """
        return self._region_name

    @region_name.setter
    def region_name(self, region_name):
        """Sets the region_name of this Region.

        A localized text string that indicates the name of the region. Taxes are generally charged at the state/province level or at the country level in the case of VAT tax.

        :param region_name: The region_name of this Region.
        :type region_name: str
        """

        self._region_name = region_name

    @property
    def region_type(self):
        """Gets the region_type of this Region.

        An enumeration value that indicates the type of region for the tax jurisdiction. Valid Values: STATE_OR_PROVINCE - Indicates the region is a state or province within a country, such as California or New York in the US, or Ontario or Alberta in Canada. COUNTRY - Indicates the region is a single country. Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/browse/types/ba:RegionTypeEnum'>eBay API documentation</a>

        :return: The region_type of this Region.
        :rtype: str
        """
        return self._region_type

    @region_type.setter
    def region_type(self, region_type):
        """Sets the region_type of this Region.

        An enumeration value that indicates the type of region for the tax jurisdiction. Valid Values: STATE_OR_PROVINCE - Indicates the region is a state or province within a country, such as California or New York in the US, or Ontario or Alberta in Canada. COUNTRY - Indicates the region is a single country. Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/browse/types/ba:RegionTypeEnum'>eBay API documentation</a>

        :param region_type: The region_type of this Region.
        :type region_type: str
        """

        self._region_type = region_type
