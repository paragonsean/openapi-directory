# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PickupOptionSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pickup_location_type: str=None):
        """PickupOptionSummary - a model defined in OpenAPI

        :param pickup_location_type: The pickup_location_type of this PickupOptionSummary.
        """
        self.openapi_types = {
            'pickup_location_type': str
        }

        self.attribute_map = {
            'pickup_location_type': 'pickupLocationType'
        }

        self._pickup_location_type = pickup_location_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PickupOptionSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PickupOptionSummary of this PickupOptionSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pickup_location_type(self):
        """Gets the pickup_location_type of this PickupOptionSummary.

        This container returns the local pickup options available to the buyer. Possible values are ARRANGED_LOCATION and STORE.

        :return: The pickup_location_type of this PickupOptionSummary.
        :rtype: str
        """
        return self._pickup_location_type

    @pickup_location_type.setter
    def pickup_location_type(self, pickup_location_type):
        """Sets the pickup_location_type of this PickupOptionSummary.

        This container returns the local pickup options available to the buyer. Possible values are ARRANGED_LOCATION and STORE.

        :param pickup_location_type: The pickup_location_type of this PickupOptionSummary.
        :type pickup_location_type: str
        """

        self._pickup_location_type = pickup_location_type
