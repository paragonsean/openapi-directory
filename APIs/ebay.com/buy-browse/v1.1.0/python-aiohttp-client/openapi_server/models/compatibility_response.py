# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error import Error
from openapi_server import util


class CompatibilityResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compatibility_status: str=None, warnings: List[Error]=None):
        """CompatibilityResponse - a model defined in OpenAPI

        :param compatibility_status: The compatibility_status of this CompatibilityResponse.
        :param warnings: The warnings of this CompatibilityResponse.
        """
        self.openapi_types = {
            'compatibility_status': str,
            'warnings': List[Error]
        }

        self.attribute_map = {
            'compatibility_status': 'compatibilityStatus',
            'warnings': 'warnings'
        }

        self._compatibility_status = compatibility_status
        self._warnings = warnings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompatibilityResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompatibilityResponse of this CompatibilityResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compatibility_status(self):
        """Gets the compatibility_status of this CompatibilityResponse.

        An enumeration value that tells you if the item is compatible with the product. The values are: COMPATIBLE - Indicates the item is compatible with the product specified in the request. NOT_COMPATIBLE - Indicates the item is not compatible with the product specified in the request. Be sure to check all the value fields to ensure they are correct as errors in the value can also cause this response. UNDETERMINED - Indicates one or more attributes for the specified product are missing so compatibility cannot be determined. The response returns the attributes that are missing. Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/browse/types/gct:CompatibilityStatus'>eBay API documentation</a>

        :return: The compatibility_status of this CompatibilityResponse.
        :rtype: str
        """
        return self._compatibility_status

    @compatibility_status.setter
    def compatibility_status(self, compatibility_status):
        """Sets the compatibility_status of this CompatibilityResponse.

        An enumeration value that tells you if the item is compatible with the product. The values are: COMPATIBLE - Indicates the item is compatible with the product specified in the request. NOT_COMPATIBLE - Indicates the item is not compatible with the product specified in the request. Be sure to check all the value fields to ensure they are correct as errors in the value can also cause this response. UNDETERMINED - Indicates one or more attributes for the specified product are missing so compatibility cannot be determined. The response returns the attributes that are missing. Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/browse/types/gct:CompatibilityStatus'>eBay API documentation</a>

        :param compatibility_status: The compatibility_status of this CompatibilityResponse.
        :type compatibility_status: str
        """

        self._compatibility_status = compatibility_status

    @property
    def warnings(self):
        """Gets the warnings of this CompatibilityResponse.

        An array of warning messages. These types of errors do not prevent the method from executing but should be checked.

        :return: The warnings of this CompatibilityResponse.
        :rtype: List[Error]
        """
        return self._warnings

    @warnings.setter
    def warnings(self, warnings):
        """Sets the warnings of this CompatibilityResponse.

        An array of warning messages. These types of errors do not prevent the method from executing but should be checked.

        :param warnings: The warnings of this CompatibilityResponse.
        :type warnings: List[Error]
        """

        self._warnings = warnings
