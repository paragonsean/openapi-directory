# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.converted_amount import ConvertedAmount
from openapi_server import util


class ShippingOptionSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, guaranteed_delivery: bool=None, max_estimated_delivery_date: str=None, min_estimated_delivery_date: str=None, shipping_cost: ConvertedAmount=None, shipping_cost_type: str=None):
        """ShippingOptionSummary - a model defined in OpenAPI

        :param guaranteed_delivery: The guaranteed_delivery of this ShippingOptionSummary.
        :param max_estimated_delivery_date: The max_estimated_delivery_date of this ShippingOptionSummary.
        :param min_estimated_delivery_date: The min_estimated_delivery_date of this ShippingOptionSummary.
        :param shipping_cost: The shipping_cost of this ShippingOptionSummary.
        :param shipping_cost_type: The shipping_cost_type of this ShippingOptionSummary.
        """
        self.openapi_types = {
            'guaranteed_delivery': bool,
            'max_estimated_delivery_date': str,
            'min_estimated_delivery_date': str,
            'shipping_cost': ConvertedAmount,
            'shipping_cost_type': str
        }

        self.attribute_map = {
            'guaranteed_delivery': 'guaranteedDelivery',
            'max_estimated_delivery_date': 'maxEstimatedDeliveryDate',
            'min_estimated_delivery_date': 'minEstimatedDeliveryDate',
            'shipping_cost': 'shippingCost',
            'shipping_cost_type': 'shippingCostType'
        }

        self._guaranteed_delivery = guaranteed_delivery
        self._max_estimated_delivery_date = max_estimated_delivery_date
        self._min_estimated_delivery_date = min_estimated_delivery_date
        self._shipping_cost = shipping_cost
        self._shipping_cost_type = shipping_cost_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShippingOptionSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShippingOptionSummary of this ShippingOptionSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def guaranteed_delivery(self):
        """Gets the guaranteed_delivery of this ShippingOptionSummary.

        Indicates if the seller has committed to shipping the item with eBay Guaranteed Delivery. With eBay Guaranteed Delivery, the seller is committed to getting the line item to the buyer within 4 business days or less. See the Buying items with eBay Guaranteed Delivery help topic for more details about eBay Guaranteed Delivery.

        :return: The guaranteed_delivery of this ShippingOptionSummary.
        :rtype: bool
        """
        return self._guaranteed_delivery

    @guaranteed_delivery.setter
    def guaranteed_delivery(self, guaranteed_delivery):
        """Sets the guaranteed_delivery of this ShippingOptionSummary.

        Indicates if the seller has committed to shipping the item with eBay Guaranteed Delivery. With eBay Guaranteed Delivery, the seller is committed to getting the line item to the buyer within 4 business days or less. See the Buying items with eBay Guaranteed Delivery help topic for more details about eBay Guaranteed Delivery.

        :param guaranteed_delivery: The guaranteed_delivery of this ShippingOptionSummary.
        :type guaranteed_delivery: bool
        """

        self._guaranteed_delivery = guaranteed_delivery

    @property
    def max_estimated_delivery_date(self):
        """Gets the max_estimated_delivery_date of this ShippingOptionSummary.

        The end date of the delivery window (latest projected delivery date). This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer. Note: For the best accuracy, always include the contextualLocation values in the X-EBAY-C-ENDUSERCTX request header.

        :return: The max_estimated_delivery_date of this ShippingOptionSummary.
        :rtype: str
        """
        return self._max_estimated_delivery_date

    @max_estimated_delivery_date.setter
    def max_estimated_delivery_date(self, max_estimated_delivery_date):
        """Sets the max_estimated_delivery_date of this ShippingOptionSummary.

        The end date of the delivery window (latest projected delivery date). This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer. Note: For the best accuracy, always include the contextualLocation values in the X-EBAY-C-ENDUSERCTX request header.

        :param max_estimated_delivery_date: The max_estimated_delivery_date of this ShippingOptionSummary.
        :type max_estimated_delivery_date: str
        """

        self._max_estimated_delivery_date = max_estimated_delivery_date

    @property
    def min_estimated_delivery_date(self):
        """Gets the min_estimated_delivery_date of this ShippingOptionSummary.

        The start date of the delivery window (earliest projected delivery date). This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer. Note: For the best accuracy, always include the contextualLocation values in the X-EBAY-C-ENDUSERCTX request header.

        :return: The min_estimated_delivery_date of this ShippingOptionSummary.
        :rtype: str
        """
        return self._min_estimated_delivery_date

    @min_estimated_delivery_date.setter
    def min_estimated_delivery_date(self, min_estimated_delivery_date):
        """Sets the min_estimated_delivery_date of this ShippingOptionSummary.

        The start date of the delivery window (earliest projected delivery date). This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer. Note: For the best accuracy, always include the contextualLocation values in the X-EBAY-C-ENDUSERCTX request header.

        :param min_estimated_delivery_date: The min_estimated_delivery_date of this ShippingOptionSummary.
        :type min_estimated_delivery_date: str
        """

        self._min_estimated_delivery_date = min_estimated_delivery_date

    @property
    def shipping_cost(self):
        """Gets the shipping_cost of this ShippingOptionSummary.


        :return: The shipping_cost of this ShippingOptionSummary.
        :rtype: ConvertedAmount
        """
        return self._shipping_cost

    @shipping_cost.setter
    def shipping_cost(self, shipping_cost):
        """Sets the shipping_cost of this ShippingOptionSummary.


        :param shipping_cost: The shipping_cost of this ShippingOptionSummary.
        :type shipping_cost: ConvertedAmount
        """

        self._shipping_cost = shipping_cost

    @property
    def shipping_cost_type(self):
        """Gets the shipping_cost_type of this ShippingOptionSummary.

        Indicates the type of shipping used to ship the item. Possible values are FIXED (flat-rate shipping) and CALCULATED (shipping cost calculated based on item and buyer location).

        :return: The shipping_cost_type of this ShippingOptionSummary.
        :rtype: str
        """
        return self._shipping_cost_type

    @shipping_cost_type.setter
    def shipping_cost_type(self, shipping_cost_type):
        """Sets the shipping_cost_type of this ShippingOptionSummary.

        Indicates the type of shipping used to ship the item. Possible values are FIXED (flat-rate shipping) and CALCULATED (shipping cost calculated based on item and buyer location).

        :param shipping_cost_type: The shipping_cost_type of this ShippingOptionSummary.
        :type shipping_cost_type: str
        """

        self._shipping_cost_type = shipping_cost_type
