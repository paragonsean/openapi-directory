# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server.models.image import Image
from openapi_server.models.price import Price
from openapi_server import util


class CartItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cart_item_id: str=None, cart_item_subtotal: Amount=None, image: Image=None, item_id: str=None, item_web_url: str=None, price: Price=None, quantity: int=None, title: str=None):
        """CartItem - a model defined in OpenAPI

        :param cart_item_id: The cart_item_id of this CartItem.
        :param cart_item_subtotal: The cart_item_subtotal of this CartItem.
        :param image: The image of this CartItem.
        :param item_id: The item_id of this CartItem.
        :param item_web_url: The item_web_url of this CartItem.
        :param price: The price of this CartItem.
        :param quantity: The quantity of this CartItem.
        :param title: The title of this CartItem.
        """
        self.openapi_types = {
            'cart_item_id': str,
            'cart_item_subtotal': Amount,
            'image': Image,
            'item_id': str,
            'item_web_url': str,
            'price': Price,
            'quantity': int,
            'title': str
        }

        self.attribute_map = {
            'cart_item_id': 'cartItemId',
            'cart_item_subtotal': 'cartItemSubtotal',
            'image': 'image',
            'item_id': 'itemId',
            'item_web_url': 'itemWebUrl',
            'price': 'price',
            'quantity': 'quantity',
            'title': 'title'
        }

        self._cart_item_id = cart_item_id
        self._cart_item_subtotal = cart_item_subtotal
        self._image = image
        self._item_id = item_id
        self._item_web_url = item_web_url
        self._price = price
        self._quantity = quantity
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CartItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CartItem of this CartItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cart_item_id(self):
        """Gets the cart_item_id of this CartItem.

        The identifier for the item being added to the cart. This is generated when the item is added to the cart.

        :return: The cart_item_id of this CartItem.
        :rtype: str
        """
        return self._cart_item_id

    @cart_item_id.setter
    def cart_item_id(self, cart_item_id):
        """Sets the cart_item_id of this CartItem.

        The identifier for the item being added to the cart. This is generated when the item is added to the cart.

        :param cart_item_id: The cart_item_id of this CartItem.
        :type cart_item_id: str
        """

        self._cart_item_id = cart_item_id

    @property
    def cart_item_subtotal(self):
        """Gets the cart_item_subtotal of this CartItem.


        :return: The cart_item_subtotal of this CartItem.
        :rtype: Amount
        """
        return self._cart_item_subtotal

    @cart_item_subtotal.setter
    def cart_item_subtotal(self, cart_item_subtotal):
        """Sets the cart_item_subtotal of this CartItem.


        :param cart_item_subtotal: The cart_item_subtotal of this CartItem.
        :type cart_item_subtotal: Amount
        """

        self._cart_item_subtotal = cart_item_subtotal

    @property
    def image(self):
        """Gets the image of this CartItem.


        :return: The image of this CartItem.
        :rtype: Image
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this CartItem.


        :param image: The image of this CartItem.
        :type image: Image
        """

        self._image = image

    @property
    def item_id(self):
        """Gets the item_id of this CartItem.

        The RESTful identifier of the item. This identifier is generated when the item was listed. RESTful Item ID Format: v1|#|# For example: v1|272394640372|0 v1|162846450672|461882996982

        :return: The item_id of this CartItem.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this CartItem.

        The RESTful identifier of the item. This identifier is generated when the item was listed. RESTful Item ID Format: v1|#|# For example: v1|272394640372|0 v1|162846450672|461882996982

        :param item_id: The item_id of this CartItem.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def item_web_url(self):
        """Gets the item_web_url of this CartItem.

        The URL of the eBay view item page for the item.

        :return: The item_web_url of this CartItem.
        :rtype: str
        """
        return self._item_web_url

    @item_web_url.setter
    def item_web_url(self, item_web_url):
        """Sets the item_web_url of this CartItem.

        The URL of the eBay view item page for the item.

        :param item_web_url: The item_web_url of this CartItem.
        :type item_web_url: str
        """

        self._item_web_url = item_web_url

    @property
    def price(self):
        """Gets the price of this CartItem.


        :return: The price of this CartItem.
        :rtype: Price
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this CartItem.


        :param price: The price of this CartItem.
        :type price: Price
        """

        self._price = price

    @property
    def quantity(self):
        """Gets the quantity of this CartItem.

        The number of this item the buyer wants to purchase.

        :return: The quantity of this CartItem.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this CartItem.

        The number of this item the buyer wants to purchase.

        :param quantity: The quantity of this CartItem.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def title(self):
        """Gets the title of this CartItem.

        The title of the item. This can be written by the seller or come from the eBay product catalog.

        :return: The title of this CartItem.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this CartItem.

        The title of the item. This can be written by the seller or come from the eBay product catalog.

        :param title: The title of this CartItem.
        :type title: str
        """

        self._title = title
