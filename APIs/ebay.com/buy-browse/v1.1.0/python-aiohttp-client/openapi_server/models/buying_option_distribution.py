# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BuyingOptionDistribution(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, buying_option: str=None, match_count: int=None, refinement_href: str=None):
        """BuyingOptionDistribution - a model defined in OpenAPI

        :param buying_option: The buying_option of this BuyingOptionDistribution.
        :param match_count: The match_count of this BuyingOptionDistribution.
        :param refinement_href: The refinement_href of this BuyingOptionDistribution.
        """
        self.openapi_types = {
            'buying_option': str,
            'match_count': int,
            'refinement_href': str
        }

        self.attribute_map = {
            'buying_option': 'buyingOption',
            'match_count': 'matchCount',
            'refinement_href': 'refinementHref'
        }

        self._buying_option = buying_option
        self._match_count = match_count
        self._refinement_href = refinement_href

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuyingOptionDistribution':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BuyingOptionDistribution of this BuyingOptionDistribution.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def buying_option(self):
        """Gets the buying_option of this BuyingOptionDistribution.

        The container that returns the buying option type. This will be AUCTION or FIXED_PRICE or both. For details, see buyingOptions.

        :return: The buying_option of this BuyingOptionDistribution.
        :rtype: str
        """
        return self._buying_option

    @buying_option.setter
    def buying_option(self, buying_option):
        """Sets the buying_option of this BuyingOptionDistribution.

        The container that returns the buying option type. This will be AUCTION or FIXED_PRICE or both. For details, see buyingOptions.

        :param buying_option: The buying_option of this BuyingOptionDistribution.
        :type buying_option: str
        """

        self._buying_option = buying_option

    @property
    def match_count(self):
        """Gets the match_count of this BuyingOptionDistribution.

        The number of items having this buying option.

        :return: The match_count of this BuyingOptionDistribution.
        :rtype: int
        """
        return self._match_count

    @match_count.setter
    def match_count(self, match_count):
        """Sets the match_count of this BuyingOptionDistribution.

        The number of items having this buying option.

        :param match_count: The match_count of this BuyingOptionDistribution.
        :type match_count: int
        """

        self._match_count = match_count

    @property
    def refinement_href(self):
        """Gets the refinement_href of this BuyingOptionDistribution.

        The HATEOAS reference for this buying option.

        :return: The refinement_href of this BuyingOptionDistribution.
        :rtype: str
        """
        return self._refinement_href

    @refinement_href.setter
    def refinement_href(self, refinement_href):
        """Sets the refinement_href of this BuyingOptionDistribution.

        The HATEOAS reference for this buying option.

        :param refinement_href: The refinement_href of this BuyingOptionDistribution.
        :type refinement_href: str
        """

        self._refinement_href = refinement_href
