# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateCartItemInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cart_item_id: str=None, quantity: int=None):
        """UpdateCartItemInput - a model defined in OpenAPI

        :param cart_item_id: The cart_item_id of this UpdateCartItemInput.
        :param quantity: The quantity of this UpdateCartItemInput.
        """
        self.openapi_types = {
            'cart_item_id': str,
            'quantity': int
        }

        self.attribute_map = {
            'cart_item_id': 'cartItemId',
            'quantity': 'quantity'
        }

        self._cart_item_id = cart_item_id
        self._quantity = quantity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateCartItemInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateCartItemInput of this UpdateCartItemInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cart_item_id(self):
        """Gets the cart_item_id of this UpdateCartItemInput.

        The identifier of the item in the cart to be updated. This ID is generated when the item was added to the cart.

        :return: The cart_item_id of this UpdateCartItemInput.
        :rtype: str
        """
        return self._cart_item_id

    @cart_item_id.setter
    def cart_item_id(self, cart_item_id):
        """Sets the cart_item_id of this UpdateCartItemInput.

        The identifier of the item in the cart to be updated. This ID is generated when the item was added to the cart.

        :param cart_item_id: The cart_item_id of this UpdateCartItemInput.
        :type cart_item_id: str
        """

        self._cart_item_id = cart_item_id

    @property
    def quantity(self):
        """Gets the quantity of this UpdateCartItemInput.

        The new quantity for the item that is being updated.

        :return: The quantity of this UpdateCartItemInput.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this UpdateCartItemInput.

        The new quantity for the item that is being updated.

        :param quantity: The quantity of this UpdateCartItemInput.
        :type quantity: int
        """

        self._quantity = quantity
