/**
 * Browse API
 * The Browse API has the following resources: item_summary: Lets shoppers search for specific items by keyword, GTIN, category, charity, product, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values. &nbsp;(Experimental) search_by_image: Lets shoppers search for specific items by image. You can refine the results by using URI parameters and filters. item: Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part. Provides a bridge between the eBay legacy APIs, such as Finding, and the RESTful APIs, which use different formats for the item IDs. &nbsp;(Experimental) shopping_cart: Provides the ability for eBay members to see the contents of their eBay cart, and add, remove, and change the quantity of items in their eBay cart.&nbsp;&nbsp; Note: This resource is not available in the eBay API Explorer. The item_summary, search_by_image, and item resource calls require an Application access token. The shopping_cart resource calls require a User access token.
 *
 * The version of the OpenAPI document: v1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIShippingOptionSummary.h
 *
 * The type that defines the fields for the shipping information.
 */

#ifndef OAIShippingOptionSummary_H
#define OAIShippingOptionSummary_H

#include <QJsonObject>

#include "OAIConvertedAmount.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConvertedAmount;

class OAIShippingOptionSummary : public OAIObject {
public:
    OAIShippingOptionSummary();
    OAIShippingOptionSummary(QString json);
    ~OAIShippingOptionSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isGuaranteedDelivery() const;
    void setGuaranteedDelivery(const bool &guaranteed_delivery);
    bool is_guaranteed_delivery_Set() const;
    bool is_guaranteed_delivery_Valid() const;

    QString getMaxEstimatedDeliveryDate() const;
    void setMaxEstimatedDeliveryDate(const QString &max_estimated_delivery_date);
    bool is_max_estimated_delivery_date_Set() const;
    bool is_max_estimated_delivery_date_Valid() const;

    QString getMinEstimatedDeliveryDate() const;
    void setMinEstimatedDeliveryDate(const QString &min_estimated_delivery_date);
    bool is_min_estimated_delivery_date_Set() const;
    bool is_min_estimated_delivery_date_Valid() const;

    OAIConvertedAmount getShippingCost() const;
    void setShippingCost(const OAIConvertedAmount &shipping_cost);
    bool is_shipping_cost_Set() const;
    bool is_shipping_cost_Valid() const;

    QString getShippingCostType() const;
    void setShippingCostType(const QString &shipping_cost_type);
    bool is_shipping_cost_type_Set() const;
    bool is_shipping_cost_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_guaranteed_delivery;
    bool m_guaranteed_delivery_isSet;
    bool m_guaranteed_delivery_isValid;

    QString m_max_estimated_delivery_date;
    bool m_max_estimated_delivery_date_isSet;
    bool m_max_estimated_delivery_date_isValid;

    QString m_min_estimated_delivery_date;
    bool m_min_estimated_delivery_date_isSet;
    bool m_min_estimated_delivery_date_isValid;

    OAIConvertedAmount m_shipping_cost;
    bool m_shipping_cost_isSet;
    bool m_shipping_cost_isValid;

    QString m_shipping_cost_type;
    bool m_shipping_cost_type_isSet;
    bool m_shipping_cost_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIShippingOptionSummary)

#endif // OAIShippingOptionSummary_H
