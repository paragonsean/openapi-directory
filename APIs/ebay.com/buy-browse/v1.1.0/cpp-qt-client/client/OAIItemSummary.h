/**
 * Browse API
 * The Browse API has the following resources: item_summary: Lets shoppers search for specific items by keyword, GTIN, category, charity, product, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values. &nbsp;(Experimental) search_by_image: Lets shoppers search for specific items by image. You can refine the results by using URI parameters and filters. item: Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part. Provides a bridge between the eBay legacy APIs, such as Finding, and the RESTful APIs, which use different formats for the item IDs. &nbsp;(Experimental) shopping_cart: Provides the ability for eBay members to see the contents of their eBay cart, and add, remove, and change the quantity of items in their eBay cart.&nbsp;&nbsp; Note: This resource is not available in the eBay API Explorer. The item_summary, search_by_image, and item resource calls require an Application access token. The shopping_cart resource calls require a User access token.
 *
 * The version of the OpenAPI document: v1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItemSummary.h
 *
 * The type that defines the fields for the details of a specific item.
 */

#ifndef OAIItemSummary_H
#define OAIItemSummary_H

#include <QJsonObject>

#include "OAICategory.h"
#include "OAICompatibilityProperty.h"
#include "OAIConvertedAmount.h"
#include "OAIImage.h"
#include "OAIItemLocationImpl.h"
#include "OAIMarketingPrice.h"
#include "OAIPickupOptionSummary.h"
#include "OAISeller.h"
#include "OAIShippingOptionSummary.h"
#include "OAITargetLocation.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImage;
class OAICategory;
class OAICompatibilityProperty;
class OAIConvertedAmount;
class OAITargetLocation;
class OAIItemLocationImpl;
class OAIMarketingPrice;
class OAIPickupOptionSummary;
class OAISeller;
class OAIShippingOptionSummary;

class OAIItemSummary : public OAIObject {
public:
    OAIItemSummary();
    OAIItemSummary(QString json);
    ~OAIItemSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIImage> getAdditionalImages() const;
    void setAdditionalImages(const QList<OAIImage> &additional_images);
    bool is_additional_images_Set() const;
    bool is_additional_images_Valid() const;

    bool isAdultOnly() const;
    void setAdultOnly(const bool &adult_only);
    bool is_adult_only_Set() const;
    bool is_adult_only_Valid() const;

    bool isAvailableCoupons() const;
    void setAvailableCoupons(const bool &available_coupons);
    bool is_available_coupons_Set() const;
    bool is_available_coupons_Valid() const;

    qint32 getBidCount() const;
    void setBidCount(const qint32 &bid_count);
    bool is_bid_count_Set() const;
    bool is_bid_count_Valid() const;

    QList<QString> getBuyingOptions() const;
    void setBuyingOptions(const QList<QString> &buying_options);
    bool is_buying_options_Set() const;
    bool is_buying_options_Valid() const;

    QList<OAICategory> getCategories() const;
    void setCategories(const QList<OAICategory> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    QString getCompatibilityMatch() const;
    void setCompatibilityMatch(const QString &compatibility_match);
    bool is_compatibility_match_Set() const;
    bool is_compatibility_match_Valid() const;

    QList<OAICompatibilityProperty> getCompatibilityProperties() const;
    void setCompatibilityProperties(const QList<OAICompatibilityProperty> &compatibility_properties);
    bool is_compatibility_properties_Set() const;
    bool is_compatibility_properties_Valid() const;

    QString getCondition() const;
    void setCondition(const QString &condition);
    bool is_condition_Set() const;
    bool is_condition_Valid() const;

    QString getConditionId() const;
    void setConditionId(const QString &condition_id);
    bool is_condition_id_Set() const;
    bool is_condition_id_Valid() const;

    OAIConvertedAmount getCurrentBidPrice() const;
    void setCurrentBidPrice(const OAIConvertedAmount &current_bid_price);
    bool is_current_bid_price_Set() const;
    bool is_current_bid_price_Valid() const;

    OAITargetLocation getDistanceFromPickupLocation() const;
    void setDistanceFromPickupLocation(const OAITargetLocation &distance_from_pickup_location);
    bool is_distance_from_pickup_location_Set() const;
    bool is_distance_from_pickup_location_Valid() const;

    QString getEnergyEfficiencyClass() const;
    void setEnergyEfficiencyClass(const QString &energy_efficiency_class);
    bool is_energy_efficiency_class_Set() const;
    bool is_energy_efficiency_class_Valid() const;

    QString getEpid() const;
    void setEpid(const QString &epid);
    bool is_epid_Set() const;
    bool is_epid_Valid() const;

    OAIImage getImage() const;
    void setImage(const OAIImage &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    QString getItemAffiliateWebUrl() const;
    void setItemAffiliateWebUrl(const QString &item_affiliate_web_url);
    bool is_item_affiliate_web_url_Set() const;
    bool is_item_affiliate_web_url_Valid() const;

    QString getItemGroupHref() const;
    void setItemGroupHref(const QString &item_group_href);
    bool is_item_group_href_Set() const;
    bool is_item_group_href_Valid() const;

    QString getItemGroupType() const;
    void setItemGroupType(const QString &item_group_type);
    bool is_item_group_type_Set() const;
    bool is_item_group_type_Valid() const;

    QString getItemHref() const;
    void setItemHref(const QString &item_href);
    bool is_item_href_Set() const;
    bool is_item_href_Valid() const;

    QString getItemId() const;
    void setItemId(const QString &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    OAIItemLocationImpl getItemLocation() const;
    void setItemLocation(const OAIItemLocationImpl &item_location);
    bool is_item_location_Set() const;
    bool is_item_location_Valid() const;

    QString getItemWebUrl() const;
    void setItemWebUrl(const QString &item_web_url);
    bool is_item_web_url_Set() const;
    bool is_item_web_url_Valid() const;

    QString getLegacyItemId() const;
    void setLegacyItemId(const QString &legacy_item_id);
    bool is_legacy_item_id_Set() const;
    bool is_legacy_item_id_Valid() const;

    OAIMarketingPrice getMarketingPrice() const;
    void setMarketingPrice(const OAIMarketingPrice &marketing_price);
    bool is_marketing_price_Set() const;
    bool is_marketing_price_Valid() const;

    QList<OAIPickupOptionSummary> getPickupOptions() const;
    void setPickupOptions(const QList<OAIPickupOptionSummary> &pickup_options);
    bool is_pickup_options_Set() const;
    bool is_pickup_options_Valid() const;

    OAIConvertedAmount getPrice() const;
    void setPrice(const OAIConvertedAmount &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    QString getPriceDisplayCondition() const;
    void setPriceDisplayCondition(const QString &price_display_condition);
    bool is_price_display_condition_Set() const;
    bool is_price_display_condition_Valid() const;

    QList<QString> getQualifiedPrograms() const;
    void setQualifiedPrograms(const QList<QString> &qualified_programs);
    bool is_qualified_programs_Set() const;
    bool is_qualified_programs_Valid() const;

    OAISeller getSeller() const;
    void setSeller(const OAISeller &seller);
    bool is_seller_Set() const;
    bool is_seller_Valid() const;

    QList<OAIShippingOptionSummary> getShippingOptions() const;
    void setShippingOptions(const QList<OAIShippingOptionSummary> &shipping_options);
    bool is_shipping_options_Set() const;
    bool is_shipping_options_Valid() const;

    QString getShortDescription() const;
    void setShortDescription(const QString &short_description);
    bool is_short_description_Set() const;
    bool is_short_description_Valid() const;

    QList<OAIImage> getThumbnailImages() const;
    void setThumbnailImages(const QList<OAIImage> &thumbnail_images);
    bool is_thumbnail_images_Set() const;
    bool is_thumbnail_images_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    OAIConvertedAmount getUnitPrice() const;
    void setUnitPrice(const OAIConvertedAmount &unit_price);
    bool is_unit_price_Set() const;
    bool is_unit_price_Valid() const;

    QString getUnitPricingMeasure() const;
    void setUnitPricingMeasure(const QString &unit_pricing_measure);
    bool is_unit_pricing_measure_Set() const;
    bool is_unit_pricing_measure_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIImage> m_additional_images;
    bool m_additional_images_isSet;
    bool m_additional_images_isValid;

    bool m_adult_only;
    bool m_adult_only_isSet;
    bool m_adult_only_isValid;

    bool m_available_coupons;
    bool m_available_coupons_isSet;
    bool m_available_coupons_isValid;

    qint32 m_bid_count;
    bool m_bid_count_isSet;
    bool m_bid_count_isValid;

    QList<QString> m_buying_options;
    bool m_buying_options_isSet;
    bool m_buying_options_isValid;

    QList<OAICategory> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    QString m_compatibility_match;
    bool m_compatibility_match_isSet;
    bool m_compatibility_match_isValid;

    QList<OAICompatibilityProperty> m_compatibility_properties;
    bool m_compatibility_properties_isSet;
    bool m_compatibility_properties_isValid;

    QString m_condition;
    bool m_condition_isSet;
    bool m_condition_isValid;

    QString m_condition_id;
    bool m_condition_id_isSet;
    bool m_condition_id_isValid;

    OAIConvertedAmount m_current_bid_price;
    bool m_current_bid_price_isSet;
    bool m_current_bid_price_isValid;

    OAITargetLocation m_distance_from_pickup_location;
    bool m_distance_from_pickup_location_isSet;
    bool m_distance_from_pickup_location_isValid;

    QString m_energy_efficiency_class;
    bool m_energy_efficiency_class_isSet;
    bool m_energy_efficiency_class_isValid;

    QString m_epid;
    bool m_epid_isSet;
    bool m_epid_isValid;

    OAIImage m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    QString m_item_affiliate_web_url;
    bool m_item_affiliate_web_url_isSet;
    bool m_item_affiliate_web_url_isValid;

    QString m_item_group_href;
    bool m_item_group_href_isSet;
    bool m_item_group_href_isValid;

    QString m_item_group_type;
    bool m_item_group_type_isSet;
    bool m_item_group_type_isValid;

    QString m_item_href;
    bool m_item_href_isSet;
    bool m_item_href_isValid;

    QString m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    OAIItemLocationImpl m_item_location;
    bool m_item_location_isSet;
    bool m_item_location_isValid;

    QString m_item_web_url;
    bool m_item_web_url_isSet;
    bool m_item_web_url_isValid;

    QString m_legacy_item_id;
    bool m_legacy_item_id_isSet;
    bool m_legacy_item_id_isValid;

    OAIMarketingPrice m_marketing_price;
    bool m_marketing_price_isSet;
    bool m_marketing_price_isValid;

    QList<OAIPickupOptionSummary> m_pickup_options;
    bool m_pickup_options_isSet;
    bool m_pickup_options_isValid;

    OAIConvertedAmount m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    QString m_price_display_condition;
    bool m_price_display_condition_isSet;
    bool m_price_display_condition_isValid;

    QList<QString> m_qualified_programs;
    bool m_qualified_programs_isSet;
    bool m_qualified_programs_isValid;

    OAISeller m_seller;
    bool m_seller_isSet;
    bool m_seller_isValid;

    QList<OAIShippingOptionSummary> m_shipping_options;
    bool m_shipping_options_isSet;
    bool m_shipping_options_isValid;

    QString m_short_description;
    bool m_short_description_isSet;
    bool m_short_description_isValid;

    QList<OAIImage> m_thumbnail_images;
    bool m_thumbnail_images_isSet;
    bool m_thumbnail_images_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    OAIConvertedAmount m_unit_price;
    bool m_unit_price_isSet;
    bool m_unit_price_isValid;

    QString m_unit_pricing_measure;
    bool m_unit_pricing_measure_isSet;
    bool m_unit_pricing_measure_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItemSummary)

#endif // OAIItemSummary_H
