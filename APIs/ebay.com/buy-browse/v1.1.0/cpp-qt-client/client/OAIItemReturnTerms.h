/**
 * Browse API
 * The Browse API has the following resources: item_summary: Lets shoppers search for specific items by keyword, GTIN, category, charity, product, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values. &nbsp;(Experimental) search_by_image: Lets shoppers search for specific items by image. You can refine the results by using URI parameters and filters. item: Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part. Provides a bridge between the eBay legacy APIs, such as Finding, and the RESTful APIs, which use different formats for the item IDs. &nbsp;(Experimental) shopping_cart: Provides the ability for eBay members to see the contents of their eBay cart, and add, remove, and change the quantity of items in their eBay cart.&nbsp;&nbsp; Note: This resource is not available in the eBay API Explorer. The item_summary, search_by_image, and item resource calls require an Application access token. The shopping_cart resource calls require a User access token.
 *
 * The version of the OpenAPI document: v1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItemReturnTerms.h
 *
 * The type that defines the fields for the seller&#39;s return policy.
 */

#ifndef OAIItemReturnTerms_H
#define OAIItemReturnTerms_H

#include <QJsonObject>

#include "OAITimeDuration.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITimeDuration;

class OAIItemReturnTerms : public OAIObject {
public:
    OAIItemReturnTerms();
    OAIItemReturnTerms(QString json);
    ~OAIItemReturnTerms() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isExtendedHolidayReturnsOffered() const;
    void setExtendedHolidayReturnsOffered(const bool &extended_holiday_returns_offered);
    bool is_extended_holiday_returns_offered_Set() const;
    bool is_extended_holiday_returns_offered_Valid() const;

    QString getRefundMethod() const;
    void setRefundMethod(const QString &refund_method);
    bool is_refund_method_Set() const;
    bool is_refund_method_Valid() const;

    QString getRestockingFeePercentage() const;
    void setRestockingFeePercentage(const QString &restocking_fee_percentage);
    bool is_restocking_fee_percentage_Set() const;
    bool is_restocking_fee_percentage_Valid() const;

    QString getReturnInstructions() const;
    void setReturnInstructions(const QString &return_instructions);
    bool is_return_instructions_Set() const;
    bool is_return_instructions_Valid() const;

    QString getReturnMethod() const;
    void setReturnMethod(const QString &return_method);
    bool is_return_method_Set() const;
    bool is_return_method_Valid() const;

    OAITimeDuration getReturnPeriod() const;
    void setReturnPeriod(const OAITimeDuration &return_period);
    bool is_return_period_Set() const;
    bool is_return_period_Valid() const;

    QString getReturnShippingCostPayer() const;
    void setReturnShippingCostPayer(const QString &return_shipping_cost_payer);
    bool is_return_shipping_cost_payer_Set() const;
    bool is_return_shipping_cost_payer_Valid() const;

    bool isReturnsAccepted() const;
    void setReturnsAccepted(const bool &returns_accepted);
    bool is_returns_accepted_Set() const;
    bool is_returns_accepted_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_extended_holiday_returns_offered;
    bool m_extended_holiday_returns_offered_isSet;
    bool m_extended_holiday_returns_offered_isValid;

    QString m_refund_method;
    bool m_refund_method_isSet;
    bool m_refund_method_isValid;

    QString m_restocking_fee_percentage;
    bool m_restocking_fee_percentage_isSet;
    bool m_restocking_fee_percentage_isValid;

    QString m_return_instructions;
    bool m_return_instructions_isSet;
    bool m_return_instructions_isValid;

    QString m_return_method;
    bool m_return_method_isSet;
    bool m_return_method_isValid;

    OAITimeDuration m_return_period;
    bool m_return_period_isSet;
    bool m_return_period_isValid;

    QString m_return_shipping_cost_payer;
    bool m_return_shipping_cost_payer_isSet;
    bool m_return_shipping_cost_payer_isValid;

    bool m_returns_accepted;
    bool m_returns_accepted_isSet;
    bool m_returns_accepted_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItemReturnTerms)

#endif // OAIItemReturnTerms_H
