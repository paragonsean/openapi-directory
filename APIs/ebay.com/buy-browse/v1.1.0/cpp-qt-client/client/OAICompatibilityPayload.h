/**
 * Browse API
 * The Browse API has the following resources: item_summary: Lets shoppers search for specific items by keyword, GTIN, category, charity, product, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values. &nbsp;(Experimental) search_by_image: Lets shoppers search for specific items by image. You can refine the results by using URI parameters and filters. item: Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part. Provides a bridge between the eBay legacy APIs, such as Finding, and the RESTful APIs, which use different formats for the item IDs. &nbsp;(Experimental) shopping_cart: Provides the ability for eBay members to see the contents of their eBay cart, and add, remove, and change the quantity of items in their eBay cart.&nbsp;&nbsp; Note: This resource is not available in the eBay API Explorer. The item_summary, search_by_image, and item resource calls require an Application access token. The shopping_cart resource calls require a User access token.
 *
 * The version of the OpenAPI document: v1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICompatibilityPayload.h
 *
 * An array of attribute name/value pairs used to define a specific product. For example: If you wanted to specify a specific car, one of the name/value pairs would be &lt;br /&gt;&lt;code&gt;\&quot;name\&quot; : \&quot;Year\&quot;, &lt;br /&gt;\&quot;value\&quot; : \&quot;2019\&quot;&lt;/code&gt;  &lt;p&gt; For a list of the attributes required for cars and trucks and motorcycles see &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Check\&quot;&gt;Check compatibility&lt;/a&gt; in the Buy Integration Guide.&lt;/p&gt;
 */

#ifndef OAICompatibilityPayload_H
#define OAICompatibilityPayload_H

#include <QJsonObject>

#include "OAIAttributeNameValue.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttributeNameValue;

class OAICompatibilityPayload : public OAIObject {
public:
    OAICompatibilityPayload();
    OAICompatibilityPayload(QString json);
    ~OAICompatibilityPayload() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAttributeNameValue> getCompatibilityProperties() const;
    void setCompatibilityProperties(const QList<OAIAttributeNameValue> &compatibility_properties);
    bool is_compatibility_properties_Set() const;
    bool is_compatibility_properties_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAttributeNameValue> m_compatibility_properties;
    bool m_compatibility_properties_isSet;
    bool m_compatibility_properties_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICompatibilityPayload)

#endif // OAICompatibilityPayload_H
