/**
 * Browse API
 * The Browse API has the following resources: item_summary: Lets shoppers search for specific items by keyword, GTIN, category, charity, product, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values. &nbsp;(Experimental) search_by_image: Lets shoppers search for specific items by image. You can refine the results by using URI parameters and filters. item: Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part. Provides a bridge between the eBay legacy APIs, such as Finding, and the RESTful APIs, which use different formats for the item IDs. &nbsp;(Experimental) shopping_cart: Provides the ability for eBay members to see the contents of their eBay cart, and add, remove, and change the quantity of items in their eBay cart.&nbsp;&nbsp; Note: This resource is not available in the eBay API Explorer. The item_summary, search_by_image, and item resource calls require an Application access token. The shopping_cart resource calls require a User access token.
 *
 * The version of the OpenAPI document: v1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItemGroup.h
 *
 * The type that defines the fields for the item details.
 */

#ifndef OAIItemGroup_H
#define OAIItemGroup_H

#include <QJsonObject>

#include "OAICommonDescriptions.h"
#include "OAIError.h"
#include "OAIItem.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICommonDescriptions;
class OAIItem;
class OAIError;

class OAIItemGroup : public OAIObject {
public:
    OAIItemGroup();
    OAIItemGroup(QString json);
    ~OAIItemGroup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICommonDescriptions> getCommonDescriptions() const;
    void setCommonDescriptions(const QList<OAICommonDescriptions> &common_descriptions);
    bool is_common_descriptions_Set() const;
    bool is_common_descriptions_Valid() const;

    QList<OAIItem> getItems() const;
    void setItems(const QList<OAIItem> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    QList<OAIError> getWarnings() const;
    void setWarnings(const QList<OAIError> &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICommonDescriptions> m_common_descriptions;
    bool m_common_descriptions_isSet;
    bool m_common_descriptions_isValid;

    QList<OAIItem> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    QList<OAIError> m_warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItemGroup)

#endif // OAIItemGroup_H
