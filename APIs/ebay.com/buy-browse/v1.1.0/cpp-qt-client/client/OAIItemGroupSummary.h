/**
 * Browse API
 * The Browse API has the following resources: item_summary: Lets shoppers search for specific items by keyword, GTIN, category, charity, product, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values. &nbsp;(Experimental) search_by_image: Lets shoppers search for specific items by image. You can refine the results by using URI parameters and filters. item: Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part. Provides a bridge between the eBay legacy APIs, such as Finding, and the RESTful APIs, which use different formats for the item IDs. &nbsp;(Experimental) shopping_cart: Provides the ability for eBay members to see the contents of their eBay cart, and add, remove, and change the quantity of items in their eBay cart.&nbsp;&nbsp; Note: This resource is not available in the eBay API Explorer. The item_summary, search_by_image, and item resource calls require an Application access token. The shopping_cart resource calls require a User access token.
 *
 * The version of the OpenAPI document: v1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItemGroupSummary.h
 *
 * The type that defines the fields for the details of each item in an item group. An item group is  an item that has various aspect differences, such as color, size, storage capacity, etc. When an item group is created, one of the item variations, such as the red shirt size L, is chosen as the \&quot;parent\&quot;. All the other items in the group are the children, such as the blue shirt size L, red shirt size M, etc. &lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt; Note: &lt;/b&gt; This container is returned only if the &lt;b&gt; item_id&lt;/b&gt; in the request is an item group (parent ID of an item with variations).&lt;/span&gt;
 */

#ifndef OAIItemGroupSummary_H
#define OAIItemGroupSummary_H

#include <QJsonObject>

#include "OAIImage.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImage;

class OAIItemGroupSummary : public OAIObject {
public:
    OAIItemGroupSummary();
    OAIItemGroupSummary(QString json);
    ~OAIItemGroupSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIImage> getItemGroupAdditionalImages() const;
    void setItemGroupAdditionalImages(const QList<OAIImage> &item_group_additional_images);
    bool is_item_group_additional_images_Set() const;
    bool is_item_group_additional_images_Valid() const;

    QString getItemGroupHref() const;
    void setItemGroupHref(const QString &item_group_href);
    bool is_item_group_href_Set() const;
    bool is_item_group_href_Valid() const;

    QString getItemGroupId() const;
    void setItemGroupId(const QString &item_group_id);
    bool is_item_group_id_Set() const;
    bool is_item_group_id_Valid() const;

    OAIImage getItemGroupImage() const;
    void setItemGroupImage(const OAIImage &item_group_image);
    bool is_item_group_image_Set() const;
    bool is_item_group_image_Valid() const;

    QString getItemGroupTitle() const;
    void setItemGroupTitle(const QString &item_group_title);
    bool is_item_group_title_Set() const;
    bool is_item_group_title_Valid() const;

    QString getItemGroupType() const;
    void setItemGroupType(const QString &item_group_type);
    bool is_item_group_type_Set() const;
    bool is_item_group_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIImage> m_item_group_additional_images;
    bool m_item_group_additional_images_isSet;
    bool m_item_group_additional_images_isValid;

    QString m_item_group_href;
    bool m_item_group_href_isSet;
    bool m_item_group_href_isValid;

    QString m_item_group_id;
    bool m_item_group_id_isSet;
    bool m_item_group_id_isValid;

    OAIImage m_item_group_image;
    bool m_item_group_image_isSet;
    bool m_item_group_image_isValid;

    QString m_item_group_title;
    bool m_item_group_title_isSet;
    bool m_item_group_title_isValid;

    QString m_item_group_type;
    bool m_item_group_type_isSet;
    bool m_item_group_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItemGroupSummary)

#endif // OAIItemGroupSummary_H
