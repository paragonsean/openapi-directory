/**
 * Browse API
 * The Browse API has the following resources: item_summary: Lets shoppers search for specific items by keyword, GTIN, category, charity, product, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values. &nbsp;(Experimental) search_by_image: Lets shoppers search for specific items by image. You can refine the results by using URI parameters and filters. item: Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part. Provides a bridge between the eBay legacy APIs, such as Finding, and the RESTful APIs, which use different formats for the item IDs. &nbsp;(Experimental) shopping_cart: Provides the ability for eBay members to see the contents of their eBay cart, and add, remove, and change the quantity of items in their eBay cart.&nbsp;&nbsp; Note: This resource is not available in the eBay API Explorer. The item_summary, search_by_image, and item resource calls require an Application access token. The shopping_cart resource calls require a User access token.
 *
 * The version of the OpenAPI document: v1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItem.h
 *
 * The details of an item that can be purchased.
 */

#ifndef OAIItem_H
#define OAIItem_H

#include <QJsonObject>

#include "OAIAddress.h"
#include "OAIAvailableCoupon.h"
#include "OAIConvertedAmount.h"
#include "OAIError.h"
#include "OAIEstimatedAvailability.h"
#include "OAIImage.h"
#include "OAIItemGroupSummary.h"
#include "OAIItemReturnTerms.h"
#include "OAIMarketingPrice.h"
#include "OAIPaymentMethod.h"
#include "OAIProduct.h"
#include "OAIReviewRating.h"
#include "OAISellerDetail.h"
#include "OAIShipToLocations.h"
#include "OAIShippingOption.h"
#include "OAITaxes.h"
#include "OAITypedNameValue.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImage;
class OAIAvailableCoupon;
class OAIConvertedAmount;
class OAIEstimatedAvailability;
class OAIAddress;
class OAITypedNameValue;
class OAIMarketingPrice;
class OAIPaymentMethod;
class OAIItemGroupSummary;
class OAIReviewRating;
class OAIProduct;
class OAIItemReturnTerms;
class OAISellerDetail;
class OAIShipToLocations;
class OAIShippingOption;
class OAITaxes;
class OAIError;

class OAIItem : public OAIObject {
public:
    OAIItem();
    OAIItem(QString json);
    ~OAIItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIImage> getAdditionalImages() const;
    void setAdditionalImages(const QList<OAIImage> &additional_images);
    bool is_additional_images_Set() const;
    bool is_additional_images_Valid() const;

    bool isAdultOnly() const;
    void setAdultOnly(const bool &adult_only);
    bool is_adult_only_Set() const;
    bool is_adult_only_Valid() const;

    QString getAgeGroup() const;
    void setAgeGroup(const QString &age_group);
    bool is_age_group_Set() const;
    bool is_age_group_Valid() const;

    QList<OAIAvailableCoupon> getAvailableCoupons() const;
    void setAvailableCoupons(const QList<OAIAvailableCoupon> &available_coupons);
    bool is_available_coupons_Set() const;
    bool is_available_coupons_Valid() const;

    qint32 getBidCount() const;
    void setBidCount(const qint32 &bid_count);
    bool is_bid_count_Set() const;
    bool is_bid_count_Valid() const;

    QString getBrand() const;
    void setBrand(const QString &brand);
    bool is_brand_Set() const;
    bool is_brand_Valid() const;

    QList<QString> getBuyingOptions() const;
    void setBuyingOptions(const QList<QString> &buying_options);
    bool is_buying_options_Set() const;
    bool is_buying_options_Valid() const;

    QString getCategoryId() const;
    void setCategoryId(const QString &category_id);
    bool is_category_id_Set() const;
    bool is_category_id_Valid() const;

    QString getCategoryPath() const;
    void setCategoryPath(const QString &category_path);
    bool is_category_path_Set() const;
    bool is_category_path_Valid() const;

    QString getColor() const;
    void setColor(const QString &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    QString getCondition() const;
    void setCondition(const QString &condition);
    bool is_condition_Set() const;
    bool is_condition_Valid() const;

    QString getConditionDescription() const;
    void setConditionDescription(const QString &condition_description);
    bool is_condition_description_Set() const;
    bool is_condition_description_Valid() const;

    QString getConditionId() const;
    void setConditionId(const QString &condition_id);
    bool is_condition_id_Set() const;
    bool is_condition_id_Valid() const;

    OAIConvertedAmount getCurrentBidPrice() const;
    void setCurrentBidPrice(const OAIConvertedAmount &current_bid_price);
    bool is_current_bid_price_Set() const;
    bool is_current_bid_price_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isEligibleForInlineCheckout() const;
    void setEligibleForInlineCheckout(const bool &eligible_for_inline_checkout);
    bool is_eligible_for_inline_checkout_Set() const;
    bool is_eligible_for_inline_checkout_Valid() const;

    bool isEnabledForGuestCheckout() const;
    void setEnabledForGuestCheckout(const bool &enabled_for_guest_checkout);
    bool is_enabled_for_guest_checkout_Set() const;
    bool is_enabled_for_guest_checkout_Valid() const;

    QString getEnergyEfficiencyClass() const;
    void setEnergyEfficiencyClass(const QString &energy_efficiency_class);
    bool is_energy_efficiency_class_Set() const;
    bool is_energy_efficiency_class_Valid() const;

    QString getEpid() const;
    void setEpid(const QString &epid);
    bool is_epid_Set() const;
    bool is_epid_Valid() const;

    QList<OAIEstimatedAvailability> getEstimatedAvailabilities() const;
    void setEstimatedAvailabilities(const QList<OAIEstimatedAvailability> &estimated_availabilities);
    bool is_estimated_availabilities_Set() const;
    bool is_estimated_availabilities_Valid() const;

    QString getGender() const;
    void setGender(const QString &gender);
    bool is_gender_Set() const;
    bool is_gender_Valid() const;

    QString getGtin() const;
    void setGtin(const QString &gtin);
    bool is_gtin_Set() const;
    bool is_gtin_Valid() const;

    OAIImage getImage() const;
    void setImage(const OAIImage &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    QString getInferredEpid() const;
    void setInferredEpid(const QString &inferred_epid);
    bool is_inferred_epid_Set() const;
    bool is_inferred_epid_Valid() const;

    QString getItemAffiliateWebUrl() const;
    void setItemAffiliateWebUrl(const QString &item_affiliate_web_url);
    bool is_item_affiliate_web_url_Set() const;
    bool is_item_affiliate_web_url_Valid() const;

    QString getItemEndDate() const;
    void setItemEndDate(const QString &item_end_date);
    bool is_item_end_date_Set() const;
    bool is_item_end_date_Valid() const;

    QString getItemId() const;
    void setItemId(const QString &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    OAIAddress getItemLocation() const;
    void setItemLocation(const OAIAddress &item_location);
    bool is_item_location_Set() const;
    bool is_item_location_Valid() const;

    QString getItemWebUrl() const;
    void setItemWebUrl(const QString &item_web_url);
    bool is_item_web_url_Set() const;
    bool is_item_web_url_Valid() const;

    QString getLegacyItemId() const;
    void setLegacyItemId(const QString &legacy_item_id);
    bool is_legacy_item_id_Set() const;
    bool is_legacy_item_id_Valid() const;

    QList<OAITypedNameValue> getLocalizedAspects() const;
    void setLocalizedAspects(const QList<OAITypedNameValue> &localized_aspects);
    bool is_localized_aspects_Set() const;
    bool is_localized_aspects_Valid() const;

    qint32 getLotSize() const;
    void setLotSize(const qint32 &lot_size);
    bool is_lot_size_Set() const;
    bool is_lot_size_Valid() const;

    OAIMarketingPrice getMarketingPrice() const;
    void setMarketingPrice(const OAIMarketingPrice &marketing_price);
    bool is_marketing_price_Set() const;
    bool is_marketing_price_Valid() const;

    QString getMaterial() const;
    void setMaterial(const QString &material);
    bool is_material_Set() const;
    bool is_material_Valid() const;

    OAIConvertedAmount getMinimumPriceToBid() const;
    void setMinimumPriceToBid(const OAIConvertedAmount &minimum_price_to_bid);
    bool is_minimum_price_to_bid_Set() const;
    bool is_minimum_price_to_bid_Valid() const;

    QString getMpn() const;
    void setMpn(const QString &mpn);
    bool is_mpn_Set() const;
    bool is_mpn_Valid() const;

    QString getPattern() const;
    void setPattern(const QString &pattern);
    bool is_pattern_Set() const;
    bool is_pattern_Valid() const;

    QList<OAIPaymentMethod> getPaymentMethods() const;
    void setPaymentMethods(const QList<OAIPaymentMethod> &payment_methods);
    bool is_payment_methods_Set() const;
    bool is_payment_methods_Valid() const;

    OAIConvertedAmount getPrice() const;
    void setPrice(const OAIConvertedAmount &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    QString getPriceDisplayCondition() const;
    void setPriceDisplayCondition(const QString &price_display_condition);
    bool is_price_display_condition_Set() const;
    bool is_price_display_condition_Valid() const;

    OAIItemGroupSummary getPrimaryItemGroup() const;
    void setPrimaryItemGroup(const OAIItemGroupSummary &primary_item_group);
    bool is_primary_item_group_Set() const;
    bool is_primary_item_group_Valid() const;

    OAIReviewRating getPrimaryProductReviewRating() const;
    void setPrimaryProductReviewRating(const OAIReviewRating &primary_product_review_rating);
    bool is_primary_product_review_rating_Set() const;
    bool is_primary_product_review_rating_Valid() const;

    OAIProduct getProduct() const;
    void setProduct(const OAIProduct &product);
    bool is_product_Set() const;
    bool is_product_Valid() const;

    QString getProductFicheWebUrl() const;
    void setProductFicheWebUrl(const QString &product_fiche_web_url);
    bool is_product_fiche_web_url_Set() const;
    bool is_product_fiche_web_url_Valid() const;

    QList<QString> getQualifiedPrograms() const;
    void setQualifiedPrograms(const QList<QString> &qualified_programs);
    bool is_qualified_programs_Set() const;
    bool is_qualified_programs_Valid() const;

    qint32 getQuantityLimitPerBuyer() const;
    void setQuantityLimitPerBuyer(const qint32 &quantity_limit_per_buyer);
    bool is_quantity_limit_per_buyer_Set() const;
    bool is_quantity_limit_per_buyer_Valid() const;

    bool isReservePriceMet() const;
    void setReservePriceMet(const bool &reserve_price_met);
    bool is_reserve_price_met_Set() const;
    bool is_reserve_price_met_Valid() const;

    OAIItemReturnTerms getReturnTerms() const;
    void setReturnTerms(const OAIItemReturnTerms &return_terms);
    bool is_return_terms_Set() const;
    bool is_return_terms_Valid() const;

    OAISellerDetail getSeller() const;
    void setSeller(const OAISellerDetail &seller);
    bool is_seller_Set() const;
    bool is_seller_Valid() const;

    QString getSellerItemRevision() const;
    void setSellerItemRevision(const QString &seller_item_revision);
    bool is_seller_item_revision_Set() const;
    bool is_seller_item_revision_Valid() const;

    OAIShipToLocations getShipToLocations() const;
    void setShipToLocations(const OAIShipToLocations &ship_to_locations);
    bool is_ship_to_locations_Set() const;
    bool is_ship_to_locations_Valid() const;

    QList<OAIShippingOption> getShippingOptions() const;
    void setShippingOptions(const QList<OAIShippingOption> &shipping_options);
    bool is_shipping_options_Set() const;
    bool is_shipping_options_Valid() const;

    QString getShortDescription() const;
    void setShortDescription(const QString &short_description);
    bool is_short_description_Set() const;
    bool is_short_description_Valid() const;

    QString getSize() const;
    void setSize(const QString &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getSizeSystem() const;
    void setSizeSystem(const QString &size_system);
    bool is_size_system_Set() const;
    bool is_size_system_Valid() const;

    QString getSizeType() const;
    void setSizeType(const QString &size_type);
    bool is_size_type_Set() const;
    bool is_size_type_Valid() const;

    QString getSubtitle() const;
    void setSubtitle(const QString &subtitle);
    bool is_subtitle_Set() const;
    bool is_subtitle_Valid() const;

    QList<OAITaxes> getTaxes() const;
    void setTaxes(const QList<OAITaxes> &taxes);
    bool is_taxes_Set() const;
    bool is_taxes_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    bool isTopRatedBuyingExperience() const;
    void setTopRatedBuyingExperience(const bool &top_rated_buying_experience);
    bool is_top_rated_buying_experience_Set() const;
    bool is_top_rated_buying_experience_Valid() const;

    qint32 getUniqueBidderCount() const;
    void setUniqueBidderCount(const qint32 &unique_bidder_count);
    bool is_unique_bidder_count_Set() const;
    bool is_unique_bidder_count_Valid() const;

    OAIConvertedAmount getUnitPrice() const;
    void setUnitPrice(const OAIConvertedAmount &unit_price);
    bool is_unit_price_Set() const;
    bool is_unit_price_Valid() const;

    QString getUnitPricingMeasure() const;
    void setUnitPricingMeasure(const QString &unit_pricing_measure);
    bool is_unit_pricing_measure_Set() const;
    bool is_unit_pricing_measure_Valid() const;

    QList<OAIError> getWarnings() const;
    void setWarnings(const QList<OAIError> &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIImage> m_additional_images;
    bool m_additional_images_isSet;
    bool m_additional_images_isValid;

    bool m_adult_only;
    bool m_adult_only_isSet;
    bool m_adult_only_isValid;

    QString m_age_group;
    bool m_age_group_isSet;
    bool m_age_group_isValid;

    QList<OAIAvailableCoupon> m_available_coupons;
    bool m_available_coupons_isSet;
    bool m_available_coupons_isValid;

    qint32 m_bid_count;
    bool m_bid_count_isSet;
    bool m_bid_count_isValid;

    QString m_brand;
    bool m_brand_isSet;
    bool m_brand_isValid;

    QList<QString> m_buying_options;
    bool m_buying_options_isSet;
    bool m_buying_options_isValid;

    QString m_category_id;
    bool m_category_id_isSet;
    bool m_category_id_isValid;

    QString m_category_path;
    bool m_category_path_isSet;
    bool m_category_path_isValid;

    QString m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    QString m_condition;
    bool m_condition_isSet;
    bool m_condition_isValid;

    QString m_condition_description;
    bool m_condition_description_isSet;
    bool m_condition_description_isValid;

    QString m_condition_id;
    bool m_condition_id_isSet;
    bool m_condition_id_isValid;

    OAIConvertedAmount m_current_bid_price;
    bool m_current_bid_price_isSet;
    bool m_current_bid_price_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_eligible_for_inline_checkout;
    bool m_eligible_for_inline_checkout_isSet;
    bool m_eligible_for_inline_checkout_isValid;

    bool m_enabled_for_guest_checkout;
    bool m_enabled_for_guest_checkout_isSet;
    bool m_enabled_for_guest_checkout_isValid;

    QString m_energy_efficiency_class;
    bool m_energy_efficiency_class_isSet;
    bool m_energy_efficiency_class_isValid;

    QString m_epid;
    bool m_epid_isSet;
    bool m_epid_isValid;

    QList<OAIEstimatedAvailability> m_estimated_availabilities;
    bool m_estimated_availabilities_isSet;
    bool m_estimated_availabilities_isValid;

    QString m_gender;
    bool m_gender_isSet;
    bool m_gender_isValid;

    QString m_gtin;
    bool m_gtin_isSet;
    bool m_gtin_isValid;

    OAIImage m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    QString m_inferred_epid;
    bool m_inferred_epid_isSet;
    bool m_inferred_epid_isValid;

    QString m_item_affiliate_web_url;
    bool m_item_affiliate_web_url_isSet;
    bool m_item_affiliate_web_url_isValid;

    QString m_item_end_date;
    bool m_item_end_date_isSet;
    bool m_item_end_date_isValid;

    QString m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    OAIAddress m_item_location;
    bool m_item_location_isSet;
    bool m_item_location_isValid;

    QString m_item_web_url;
    bool m_item_web_url_isSet;
    bool m_item_web_url_isValid;

    QString m_legacy_item_id;
    bool m_legacy_item_id_isSet;
    bool m_legacy_item_id_isValid;

    QList<OAITypedNameValue> m_localized_aspects;
    bool m_localized_aspects_isSet;
    bool m_localized_aspects_isValid;

    qint32 m_lot_size;
    bool m_lot_size_isSet;
    bool m_lot_size_isValid;

    OAIMarketingPrice m_marketing_price;
    bool m_marketing_price_isSet;
    bool m_marketing_price_isValid;

    QString m_material;
    bool m_material_isSet;
    bool m_material_isValid;

    OAIConvertedAmount m_minimum_price_to_bid;
    bool m_minimum_price_to_bid_isSet;
    bool m_minimum_price_to_bid_isValid;

    QString m_mpn;
    bool m_mpn_isSet;
    bool m_mpn_isValid;

    QString m_pattern;
    bool m_pattern_isSet;
    bool m_pattern_isValid;

    QList<OAIPaymentMethod> m_payment_methods;
    bool m_payment_methods_isSet;
    bool m_payment_methods_isValid;

    OAIConvertedAmount m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    QString m_price_display_condition;
    bool m_price_display_condition_isSet;
    bool m_price_display_condition_isValid;

    OAIItemGroupSummary m_primary_item_group;
    bool m_primary_item_group_isSet;
    bool m_primary_item_group_isValid;

    OAIReviewRating m_primary_product_review_rating;
    bool m_primary_product_review_rating_isSet;
    bool m_primary_product_review_rating_isValid;

    OAIProduct m_product;
    bool m_product_isSet;
    bool m_product_isValid;

    QString m_product_fiche_web_url;
    bool m_product_fiche_web_url_isSet;
    bool m_product_fiche_web_url_isValid;

    QList<QString> m_qualified_programs;
    bool m_qualified_programs_isSet;
    bool m_qualified_programs_isValid;

    qint32 m_quantity_limit_per_buyer;
    bool m_quantity_limit_per_buyer_isSet;
    bool m_quantity_limit_per_buyer_isValid;

    bool m_reserve_price_met;
    bool m_reserve_price_met_isSet;
    bool m_reserve_price_met_isValid;

    OAIItemReturnTerms m_return_terms;
    bool m_return_terms_isSet;
    bool m_return_terms_isValid;

    OAISellerDetail m_seller;
    bool m_seller_isSet;
    bool m_seller_isValid;

    QString m_seller_item_revision;
    bool m_seller_item_revision_isSet;
    bool m_seller_item_revision_isValid;

    OAIShipToLocations m_ship_to_locations;
    bool m_ship_to_locations_isSet;
    bool m_ship_to_locations_isValid;

    QList<OAIShippingOption> m_shipping_options;
    bool m_shipping_options_isSet;
    bool m_shipping_options_isValid;

    QString m_short_description;
    bool m_short_description_isSet;
    bool m_short_description_isValid;

    QString m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_size_system;
    bool m_size_system_isSet;
    bool m_size_system_isValid;

    QString m_size_type;
    bool m_size_type_isSet;
    bool m_size_type_isValid;

    QString m_subtitle;
    bool m_subtitle_isSet;
    bool m_subtitle_isValid;

    QList<OAITaxes> m_taxes;
    bool m_taxes_isSet;
    bool m_taxes_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    bool m_top_rated_buying_experience;
    bool m_top_rated_buying_experience_isSet;
    bool m_top_rated_buying_experience_isValid;

    qint32 m_unique_bidder_count;
    bool m_unique_bidder_count_isSet;
    bool m_unique_bidder_count_isValid;

    OAIConvertedAmount m_unit_price;
    bool m_unit_price_isSet;
    bool m_unit_price_isValid;

    QString m_unit_pricing_measure;
    bool m_unit_pricing_measure_isSet;
    bool m_unit_pricing_measure_isValid;

    QList<OAIError> m_warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItem)

#endif // OAIItem_H
