/**
 * Browse API
 * The Browse API has the following resources: item_summary: Lets shoppers search for specific items by keyword, GTIN, category, charity, product, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values. &nbsp;(Experimental) search_by_image: Lets shoppers search for specific items by image. You can refine the results by using URI parameters and filters. item: Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part. Provides a bridge between the eBay legacy APIs, such as Finding, and the RESTful APIs, which use different formats for the item IDs. &nbsp;(Experimental) shopping_cart: Provides the ability for eBay members to see the contents of their eBay cart, and add, remove, and change the quantity of items in their eBay cart.&nbsp;&nbsp; Note: This resource is not available in the eBay API Explorer. The item_summary, search_by_image, and item resource calls require an Application access token. The shopping_cart resource calls require a User access token.
 *
 * The version of the OpenAPI document: v1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAvailableCoupon.h
 *
 * 
 */

#ifndef OAIAvailableCoupon_H
#define OAIAvailableCoupon_H

#include <QJsonObject>

#include "OAIAmount.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAmount;

class OAIAvailableCoupon : public OAIObject {
public:
    OAIAvailableCoupon();
    OAIAvailableCoupon(QString json);
    ~OAIAvailableCoupon() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConstraint() const;
    void setConstraint(const QString &constraint);
    bool is_constraint_Set() const;
    bool is_constraint_Valid() const;

    OAIAmount getDiscountAmount() const;
    void setDiscountAmount(const OAIAmount &discount_amount);
    bool is_discount_amount_Set() const;
    bool is_discount_amount_Valid() const;

    QString getDiscountType() const;
    void setDiscountType(const QString &discount_type);
    bool is_discount_type_Set() const;
    bool is_discount_type_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getRedemptionCode() const;
    void setRedemptionCode(const QString &redemption_code);
    bool is_redemption_code_Set() const;
    bool is_redemption_code_Valid() const;

    QString getTermsWebUrl() const;
    void setTermsWebUrl(const QString &terms_web_url);
    bool is_terms_web_url_Set() const;
    bool is_terms_web_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_constraint;
    bool m_constraint_isSet;
    bool m_constraint_isValid;

    OAIAmount m_discount_amount;
    bool m_discount_amount_isSet;
    bool m_discount_amount_isValid;

    QString m_discount_type;
    bool m_discount_type_isSet;
    bool m_discount_type_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_redemption_code;
    bool m_redemption_code_isSet;
    bool m_redemption_code_isValid;

    QString m_terms_web_url;
    bool m_terms_web_url_isSet;
    bool m_terms_web_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAvailableCoupon)

#endif // OAIAvailableCoupon_H
