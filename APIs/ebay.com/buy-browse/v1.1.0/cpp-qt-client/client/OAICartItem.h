/**
 * Browse API
 * The Browse API has the following resources: item_summary: Lets shoppers search for specific items by keyword, GTIN, category, charity, product, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values. &nbsp;(Experimental) search_by_image: Lets shoppers search for specific items by image. You can refine the results by using URI parameters and filters. item: Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part. Provides a bridge between the eBay legacy APIs, such as Finding, and the RESTful APIs, which use different formats for the item IDs. &nbsp;(Experimental) shopping_cart: Provides the ability for eBay members to see the contents of their eBay cart, and add, remove, and change the quantity of items in their eBay cart.&nbsp;&nbsp; Note: This resource is not available in the eBay API Explorer. The item_summary, search_by_image, and item resource calls require an Application access token. The shopping_cart resource calls require a User access token.
 *
 * The version of the OpenAPI document: v1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICartItem.h
 *
 * The type that defines the fields for the individual items in a cart.
 */

#ifndef OAICartItem_H
#define OAICartItem_H

#include <QJsonObject>

#include "OAIAmount.h"
#include "OAIImage.h"
#include "OAIPrice.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAmount;
class OAIImage;
class OAIPrice;

class OAICartItem : public OAIObject {
public:
    OAICartItem();
    OAICartItem(QString json);
    ~OAICartItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCartItemId() const;
    void setCartItemId(const QString &cart_item_id);
    bool is_cart_item_id_Set() const;
    bool is_cart_item_id_Valid() const;

    OAIAmount getCartItemSubtotal() const;
    void setCartItemSubtotal(const OAIAmount &cart_item_subtotal);
    bool is_cart_item_subtotal_Set() const;
    bool is_cart_item_subtotal_Valid() const;

    OAIImage getImage() const;
    void setImage(const OAIImage &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    QString getItemId() const;
    void setItemId(const QString &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    QString getItemWebUrl() const;
    void setItemWebUrl(const QString &item_web_url);
    bool is_item_web_url_Set() const;
    bool is_item_web_url_Valid() const;

    OAIPrice getPrice() const;
    void setPrice(const OAIPrice &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    qint32 getQuantity() const;
    void setQuantity(const qint32 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cart_item_id;
    bool m_cart_item_id_isSet;
    bool m_cart_item_id_isValid;

    OAIAmount m_cart_item_subtotal;
    bool m_cart_item_subtotal_isSet;
    bool m_cart_item_subtotal_isValid;

    OAIImage m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    QString m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    QString m_item_web_url;
    bool m_item_web_url_isSet;
    bool m_item_web_url_isValid;

    OAIPrice m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    qint32 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICartItem)

#endif // OAICartItem_H
