/**
 * Browse API
 * The Browse API has the following resources: item_summary: Lets shoppers search for specific items by keyword, GTIN, category, charity, product, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values. &nbsp;(Experimental) search_by_image: Lets shoppers search for specific items by image. You can refine the results by using URI parameters and filters. item: Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part. Provides a bridge between the eBay legacy APIs, such as Finding, and the RESTful APIs, which use different formats for the item IDs. &nbsp;(Experimental) shopping_cart: Provides the ability for eBay members to see the contents of their eBay cart, and add, remove, and change the quantity of items in their eBay cart.&nbsp;&nbsp; Note: This resource is not available in the eBay API Explorer. The item_summary, search_by_image, and item resource calls require an Application access token. The shopping_cart resource calls require a User access token.
 *
 * The version of the OpenAPI document: v1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMarketingPrice.h
 *
 * The type that defines the fields that describe a seller discount.
 */

#ifndef OAIMarketingPrice_H
#define OAIMarketingPrice_H

#include <QJsonObject>

#include "OAIConvertedAmount.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConvertedAmount;

class OAIMarketingPrice : public OAIObject {
public:
    OAIMarketingPrice();
    OAIMarketingPrice(QString json);
    ~OAIMarketingPrice() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConvertedAmount getDiscountAmount() const;
    void setDiscountAmount(const OAIConvertedAmount &discount_amount);
    bool is_discount_amount_Set() const;
    bool is_discount_amount_Valid() const;

    QString getDiscountPercentage() const;
    void setDiscountPercentage(const QString &discount_percentage);
    bool is_discount_percentage_Set() const;
    bool is_discount_percentage_Valid() const;

    OAIConvertedAmount getOriginalPrice() const;
    void setOriginalPrice(const OAIConvertedAmount &original_price);
    bool is_original_price_Set() const;
    bool is_original_price_Valid() const;

    QString getPriceTreatment() const;
    void setPriceTreatment(const QString &price_treatment);
    bool is_price_treatment_Set() const;
    bool is_price_treatment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConvertedAmount m_discount_amount;
    bool m_discount_amount_isSet;
    bool m_discount_amount_isValid;

    QString m_discount_percentage;
    bool m_discount_percentage_isSet;
    bool m_discount_percentage_isValid;

    OAIConvertedAmount m_original_price;
    bool m_original_price_isSet;
    bool m_original_price_isValid;

    QString m_price_treatment;
    bool m_price_treatment_isSet;
    bool m_price_treatment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMarketingPrice)

#endif // OAIMarketingPrice_H
