/*
 * Browse API
 * The Browse API has the following resources: item_summary: Lets shoppers search for specific items by keyword, GTIN, category, charity, product, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values. &nbsp;(Experimental) search_by_image: Lets shoppers search for specific items by image. You can refine the results by using URI parameters and filters. item: Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part. Provides a bridge between the eBay legacy APIs, such as Finding, and the RESTful APIs, which use different formats for the item IDs. &nbsp;(Experimental) shopping_cart: Provides the ability for eBay members to see the contents of their eBay cart, and add, remove, and change the quantity of items in their eBay cart.&nbsp;&nbsp; Note: This resource is not available in the eBay API Explorer. The item_summary, search_by_image, and item resource calls require an Application access token. The shopping_cart resource calls require a User access token.
 *
 * The version of the OpenAPI document: v1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Address;
import org.openapitools.client.model.AvailableCoupon;
import org.openapitools.client.model.ConvertedAmount;
import org.openapitools.client.model.EstimatedAvailability;
import org.openapitools.client.model.Image;
import org.openapitools.client.model.ItemGroupSummary;
import org.openapitools.client.model.ItemReturnTerms;
import org.openapitools.client.model.MarketingPrice;
import org.openapitools.client.model.PaymentMethod;
import org.openapitools.client.model.Product;
import org.openapitools.client.model.ReviewRating;
import org.openapitools.client.model.SellerDetail;
import org.openapitools.client.model.ShipToLocations;
import org.openapitools.client.model.ShippingOption;
import org.openapitools.client.model.Taxes;
import org.openapitools.client.model.TypedNameValue;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CoreItem
 */
public class CoreItemTest {
    private final CoreItem model = new CoreItem();

    /**
     * Model tests for CoreItem
     */
    @Test
    public void testCoreItem() {
        // TODO: test CoreItem
    }

    /**
     * Test the property 'additionalImages'
     */
    @Test
    public void additionalImagesTest() {
        // TODO: test additionalImages
    }

    /**
     * Test the property 'adultOnly'
     */
    @Test
    public void adultOnlyTest() {
        // TODO: test adultOnly
    }

    /**
     * Test the property 'ageGroup'
     */
    @Test
    public void ageGroupTest() {
        // TODO: test ageGroup
    }

    /**
     * Test the property 'availableCoupons'
     */
    @Test
    public void availableCouponsTest() {
        // TODO: test availableCoupons
    }

    /**
     * Test the property 'bidCount'
     */
    @Test
    public void bidCountTest() {
        // TODO: test bidCount
    }

    /**
     * Test the property 'brand'
     */
    @Test
    public void brandTest() {
        // TODO: test brand
    }

    /**
     * Test the property 'buyingOptions'
     */
    @Test
    public void buyingOptionsTest() {
        // TODO: test buyingOptions
    }

    /**
     * Test the property 'categoryId'
     */
    @Test
    public void categoryIdTest() {
        // TODO: test categoryId
    }

    /**
     * Test the property 'categoryPath'
     */
    @Test
    public void categoryPathTest() {
        // TODO: test categoryPath
    }

    /**
     * Test the property 'color'
     */
    @Test
    public void colorTest() {
        // TODO: test color
    }

    /**
     * Test the property 'condition'
     */
    @Test
    public void conditionTest() {
        // TODO: test condition
    }

    /**
     * Test the property 'conditionDescription'
     */
    @Test
    public void conditionDescriptionTest() {
        // TODO: test conditionDescription
    }

    /**
     * Test the property 'conditionId'
     */
    @Test
    public void conditionIdTest() {
        // TODO: test conditionId
    }

    /**
     * Test the property 'currentBidPrice'
     */
    @Test
    public void currentBidPriceTest() {
        // TODO: test currentBidPrice
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'eligibleForInlineCheckout'
     */
    @Test
    public void eligibleForInlineCheckoutTest() {
        // TODO: test eligibleForInlineCheckout
    }

    /**
     * Test the property 'enabledForGuestCheckout'
     */
    @Test
    public void enabledForGuestCheckoutTest() {
        // TODO: test enabledForGuestCheckout
    }

    /**
     * Test the property 'energyEfficiencyClass'
     */
    @Test
    public void energyEfficiencyClassTest() {
        // TODO: test energyEfficiencyClass
    }

    /**
     * Test the property 'epid'
     */
    @Test
    public void epidTest() {
        // TODO: test epid
    }

    /**
     * Test the property 'estimatedAvailabilities'
     */
    @Test
    public void estimatedAvailabilitiesTest() {
        // TODO: test estimatedAvailabilities
    }

    /**
     * Test the property 'gender'
     */
    @Test
    public void genderTest() {
        // TODO: test gender
    }

    /**
     * Test the property 'gtin'
     */
    @Test
    public void gtinTest() {
        // TODO: test gtin
    }

    /**
     * Test the property 'image'
     */
    @Test
    public void imageTest() {
        // TODO: test image
    }

    /**
     * Test the property 'inferredEpid'
     */
    @Test
    public void inferredEpidTest() {
        // TODO: test inferredEpid
    }

    /**
     * Test the property 'itemAffiliateWebUrl'
     */
    @Test
    public void itemAffiliateWebUrlTest() {
        // TODO: test itemAffiliateWebUrl
    }

    /**
     * Test the property 'itemEndDate'
     */
    @Test
    public void itemEndDateTest() {
        // TODO: test itemEndDate
    }

    /**
     * Test the property 'itemId'
     */
    @Test
    public void itemIdTest() {
        // TODO: test itemId
    }

    /**
     * Test the property 'itemLocation'
     */
    @Test
    public void itemLocationTest() {
        // TODO: test itemLocation
    }

    /**
     * Test the property 'itemWebUrl'
     */
    @Test
    public void itemWebUrlTest() {
        // TODO: test itemWebUrl
    }

    /**
     * Test the property 'legacyItemId'
     */
    @Test
    public void legacyItemIdTest() {
        // TODO: test legacyItemId
    }

    /**
     * Test the property 'localizedAspects'
     */
    @Test
    public void localizedAspectsTest() {
        // TODO: test localizedAspects
    }

    /**
     * Test the property 'lotSize'
     */
    @Test
    public void lotSizeTest() {
        // TODO: test lotSize
    }

    /**
     * Test the property 'marketingPrice'
     */
    @Test
    public void marketingPriceTest() {
        // TODO: test marketingPrice
    }

    /**
     * Test the property 'material'
     */
    @Test
    public void materialTest() {
        // TODO: test material
    }

    /**
     * Test the property 'minimumPriceToBid'
     */
    @Test
    public void minimumPriceToBidTest() {
        // TODO: test minimumPriceToBid
    }

    /**
     * Test the property 'mpn'
     */
    @Test
    public void mpnTest() {
        // TODO: test mpn
    }

    /**
     * Test the property 'pattern'
     */
    @Test
    public void patternTest() {
        // TODO: test pattern
    }

    /**
     * Test the property 'paymentMethods'
     */
    @Test
    public void paymentMethodsTest() {
        // TODO: test paymentMethods
    }

    /**
     * Test the property 'price'
     */
    @Test
    public void priceTest() {
        // TODO: test price
    }

    /**
     * Test the property 'priceDisplayCondition'
     */
    @Test
    public void priceDisplayConditionTest() {
        // TODO: test priceDisplayCondition
    }

    /**
     * Test the property 'primaryItemGroup'
     */
    @Test
    public void primaryItemGroupTest() {
        // TODO: test primaryItemGroup
    }

    /**
     * Test the property 'primaryProductReviewRating'
     */
    @Test
    public void primaryProductReviewRatingTest() {
        // TODO: test primaryProductReviewRating
    }

    /**
     * Test the property 'product'
     */
    @Test
    public void productTest() {
        // TODO: test product
    }

    /**
     * Test the property 'productFicheWebUrl'
     */
    @Test
    public void productFicheWebUrlTest() {
        // TODO: test productFicheWebUrl
    }

    /**
     * Test the property 'qualifiedPrograms'
     */
    @Test
    public void qualifiedProgramsTest() {
        // TODO: test qualifiedPrograms
    }

    /**
     * Test the property 'quantityLimitPerBuyer'
     */
    @Test
    public void quantityLimitPerBuyerTest() {
        // TODO: test quantityLimitPerBuyer
    }

    /**
     * Test the property 'reservePriceMet'
     */
    @Test
    public void reservePriceMetTest() {
        // TODO: test reservePriceMet
    }

    /**
     * Test the property 'returnTerms'
     */
    @Test
    public void returnTermsTest() {
        // TODO: test returnTerms
    }

    /**
     * Test the property 'seller'
     */
    @Test
    public void sellerTest() {
        // TODO: test seller
    }

    /**
     * Test the property 'sellerItemRevision'
     */
    @Test
    public void sellerItemRevisionTest() {
        // TODO: test sellerItemRevision
    }

    /**
     * Test the property 'shipToLocations'
     */
    @Test
    public void shipToLocationsTest() {
        // TODO: test shipToLocations
    }

    /**
     * Test the property 'shippingOptions'
     */
    @Test
    public void shippingOptionsTest() {
        // TODO: test shippingOptions
    }

    /**
     * Test the property 'shortDescription'
     */
    @Test
    public void shortDescriptionTest() {
        // TODO: test shortDescription
    }

    /**
     * Test the property 'size'
     */
    @Test
    public void sizeTest() {
        // TODO: test size
    }

    /**
     * Test the property 'sizeSystem'
     */
    @Test
    public void sizeSystemTest() {
        // TODO: test sizeSystem
    }

    /**
     * Test the property 'sizeType'
     */
    @Test
    public void sizeTypeTest() {
        // TODO: test sizeType
    }

    /**
     * Test the property 'subtitle'
     */
    @Test
    public void subtitleTest() {
        // TODO: test subtitle
    }

    /**
     * Test the property 'taxes'
     */
    @Test
    public void taxesTest() {
        // TODO: test taxes
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'topRatedBuyingExperience'
     */
    @Test
    public void topRatedBuyingExperienceTest() {
        // TODO: test topRatedBuyingExperience
    }

    /**
     * Test the property 'uniqueBidderCount'
     */
    @Test
    public void uniqueBidderCountTest() {
        // TODO: test uniqueBidderCount
    }

    /**
     * Test the property 'unitPrice'
     */
    @Test
    public void unitPriceTest() {
        // TODO: test unitPrice
    }

    /**
     * Test the property 'unitPricingMeasure'
     */
    @Test
    public void unitPricingMeasureTest() {
        // TODO: test unitPricingMeasure
    }

}
