/*
 * Browse API
 * The Browse API has the following resources: item_summary: Lets shoppers search for specific items by keyword, GTIN, category, charity, product, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values. &nbsp;(Experimental) search_by_image: Lets shoppers search for specific items by image. You can refine the results by using URI parameters and filters. item: Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part. Provides a bridge between the eBay legacy APIs, such as Finding, and the RESTful APIs, which use different formats for the item IDs. &nbsp;(Experimental) shopping_cart: Provides the ability for eBay members to see the contents of their eBay cart, and add, remove, and change the quantity of items in their eBay cart.&nbsp;&nbsp; Note: This resource is not available in the eBay API Explorer. The item_summary, search_by_image, and item resource calls require an Application access token. The shopping_cart resource calls require a User access token.
 *
 * The version of the OpenAPI document: v1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AutoCorrections;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.ItemSummary;
import org.openapitools.client.model.Refinement;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SearchPagedCollection
 */
public class SearchPagedCollectionTest {
    private final SearchPagedCollection model = new SearchPagedCollection();

    /**
     * Model tests for SearchPagedCollection
     */
    @Test
    public void testSearchPagedCollection() {
        // TODO: test SearchPagedCollection
    }

    /**
     * Test the property 'autoCorrections'
     */
    @Test
    public void autoCorrectionsTest() {
        // TODO: test autoCorrections
    }

    /**
     * Test the property 'href'
     */
    @Test
    public void hrefTest() {
        // TODO: test href
    }

    /**
     * Test the property 'itemSummaries'
     */
    @Test
    public void itemSummariesTest() {
        // TODO: test itemSummaries
    }

    /**
     * Test the property 'limit'
     */
    @Test
    public void limitTest() {
        // TODO: test limit
    }

    /**
     * Test the property 'next'
     */
    @Test
    public void nextTest() {
        // TODO: test next
    }

    /**
     * Test the property 'offset'
     */
    @Test
    public void offsetTest() {
        // TODO: test offset
    }

    /**
     * Test the property 'prev'
     */
    @Test
    public void prevTest() {
        // TODO: test prev
    }

    /**
     * Test the property 'refinement'
     */
    @Test
    public void refinementTest() {
        // TODO: test refinement
    }

    /**
     * Test the property 'total'
     */
    @Test
    public void totalTest() {
        // TODO: test total
    }

    /**
     * Test the property 'warnings'
     */
    @Test
    public void warningsTest() {
        // TODO: test warnings
    }

}
