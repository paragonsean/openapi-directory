/**
 * Browse API
 * The Browse API has the following resources: item_summary: Lets shoppers search for specific items by keyword, GTIN, category, charity, product, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values. &nbsp;(Experimental) search_by_image: Lets shoppers search for specific items by image. You can refine the results by using URI parameters and filters. item: Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part. Provides a bridge between the eBay legacy APIs, such as Finding, and the RESTful APIs, which use different formats for the item IDs. &nbsp;(Experimental) shopping_cart: Provides the ability for eBay members to see the contents of their eBay cart, and add, remove, and change the quantity of items in their eBay cart.&nbsp;&nbsp; Note: This resource is not available in the eBay API Explorer. The item_summary, search_by_image, and item resource calls require an Application access token. The shopping_cart resource calls require a User access token.
 *
 * The version of the OpenAPI document: v1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AddCartItemInput from './model/AddCartItemInput';
import AdditionalProductIdentity from './model/AdditionalProductIdentity';
import Address from './model/Address';
import Amount from './model/Amount';
import Aspect from './model/Aspect';
import AspectDistribution from './model/AspectDistribution';
import AspectGroup from './model/AspectGroup';
import AspectValueDistribution from './model/AspectValueDistribution';
import AttributeNameValue from './model/AttributeNameValue';
import AutoCorrections from './model/AutoCorrections';
import AvailableCoupon from './model/AvailableCoupon';
import BuyingOptionDistribution from './model/BuyingOptionDistribution';
import CartItem from './model/CartItem';
import Category from './model/Category';
import CategoryDistribution from './model/CategoryDistribution';
import CommonDescriptions from './model/CommonDescriptions';
import CompatibilityPayload from './model/CompatibilityPayload';
import CompatibilityProperty from './model/CompatibilityProperty';
import CompatibilityResponse from './model/CompatibilityResponse';
import ConditionDistribution from './model/ConditionDistribution';
import ConvertedAmount from './model/ConvertedAmount';
import CoreItem from './model/CoreItem';
import Error from './model/Error';
import ErrorParameter from './model/ErrorParameter';
import EstimatedAvailability from './model/EstimatedAvailability';
import Image from './model/Image';
import Item from './model/Item';
import ItemGroup from './model/ItemGroup';
import ItemGroupSummary from './model/ItemGroupSummary';
import ItemLocationImpl from './model/ItemLocationImpl';
import ItemReturnTerms from './model/ItemReturnTerms';
import ItemSummary from './model/ItemSummary';
import Items from './model/Items';
import LegalAddress from './model/LegalAddress';
import MarketingPrice from './model/MarketingPrice';
import PaymentMethod from './model/PaymentMethod';
import PaymentMethodBrand from './model/PaymentMethodBrand';
import PickupOptionSummary from './model/PickupOptionSummary';
import Price from './model/Price';
import Product from './model/Product';
import ProductIdentity from './model/ProductIdentity';
import RatingHistogram from './model/RatingHistogram';
import Refinement from './model/Refinement';
import Region from './model/Region';
import RemoteShopcartResponse from './model/RemoteShopcartResponse';
import RemoveCartItemInput from './model/RemoveCartItemInput';
import ReviewRating from './model/ReviewRating';
import SearchByImageRequest from './model/SearchByImageRequest';
import SearchPagedCollection from './model/SearchPagedCollection';
import Seller from './model/Seller';
import SellerDetail from './model/SellerDetail';
import SellerLegalInfo from './model/SellerLegalInfo';
import ShipToLocation from './model/ShipToLocation';
import ShipToLocations from './model/ShipToLocations';
import ShipToRegion from './model/ShipToRegion';
import ShippingOption from './model/ShippingOption';
import ShippingOptionSummary from './model/ShippingOptionSummary';
import TargetLocation from './model/TargetLocation';
import TaxJurisdiction from './model/TaxJurisdiction';
import Taxes from './model/Taxes';
import TimeDuration from './model/TimeDuration';
import TypedNameValue from './model/TypedNameValue';
import UpdateCartItemInput from './model/UpdateCartItemInput';
import VatDetail from './model/VatDetail';
import ItemApi from './api/ItemApi';
import ItemSummaryApi from './api/ItemSummaryApi';
import SearchByImageApi from './api/SearchByImageApi';
import ShoppingCartApi from './api/ShoppingCartApi';


/**
* The Browse API has the following resources: item_summary: Lets shoppers search for specific items by keyword, GTIN, category, charity, product, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values. &amp;nbsp;(Experimental) search_by_image: Lets shoppers search for specific items by image. You can refine the results by using URI parameters and filters. item: Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part. Provides a bridge between the eBay legacy APIs, such as Finding, and the RESTful APIs, which use different formats for the item IDs. &amp;nbsp;(Experimental) shopping_cart: Provides the ability for eBay members to see the contents of their eBay cart, and add, remove, and change the quantity of items in their eBay cart.&amp;nbsp;&amp;nbsp; Note: This resource is not available in the eBay API Explorer. The item_summary, search_by_image, and item resource calls require an Application access token. The shopping_cart resource calls require a User access token..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var BrowseApi = require('index'); // See note below*.
* var xxxSvc = new BrowseApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new BrowseApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new BrowseApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new BrowseApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1.1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AddCartItemInput model constructor.
     * @property {module:model/AddCartItemInput}
     */
    AddCartItemInput,

    /**
     * The AdditionalProductIdentity model constructor.
     * @property {module:model/AdditionalProductIdentity}
     */
    AdditionalProductIdentity,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The Amount model constructor.
     * @property {module:model/Amount}
     */
    Amount,

    /**
     * The Aspect model constructor.
     * @property {module:model/Aspect}
     */
    Aspect,

    /**
     * The AspectDistribution model constructor.
     * @property {module:model/AspectDistribution}
     */
    AspectDistribution,

    /**
     * The AspectGroup model constructor.
     * @property {module:model/AspectGroup}
     */
    AspectGroup,

    /**
     * The AspectValueDistribution model constructor.
     * @property {module:model/AspectValueDistribution}
     */
    AspectValueDistribution,

    /**
     * The AttributeNameValue model constructor.
     * @property {module:model/AttributeNameValue}
     */
    AttributeNameValue,

    /**
     * The AutoCorrections model constructor.
     * @property {module:model/AutoCorrections}
     */
    AutoCorrections,

    /**
     * The AvailableCoupon model constructor.
     * @property {module:model/AvailableCoupon}
     */
    AvailableCoupon,

    /**
     * The BuyingOptionDistribution model constructor.
     * @property {module:model/BuyingOptionDistribution}
     */
    BuyingOptionDistribution,

    /**
     * The CartItem model constructor.
     * @property {module:model/CartItem}
     */
    CartItem,

    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category,

    /**
     * The CategoryDistribution model constructor.
     * @property {module:model/CategoryDistribution}
     */
    CategoryDistribution,

    /**
     * The CommonDescriptions model constructor.
     * @property {module:model/CommonDescriptions}
     */
    CommonDescriptions,

    /**
     * The CompatibilityPayload model constructor.
     * @property {module:model/CompatibilityPayload}
     */
    CompatibilityPayload,

    /**
     * The CompatibilityProperty model constructor.
     * @property {module:model/CompatibilityProperty}
     */
    CompatibilityProperty,

    /**
     * The CompatibilityResponse model constructor.
     * @property {module:model/CompatibilityResponse}
     */
    CompatibilityResponse,

    /**
     * The ConditionDistribution model constructor.
     * @property {module:model/ConditionDistribution}
     */
    ConditionDistribution,

    /**
     * The ConvertedAmount model constructor.
     * @property {module:model/ConvertedAmount}
     */
    ConvertedAmount,

    /**
     * The CoreItem model constructor.
     * @property {module:model/CoreItem}
     */
    CoreItem,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorParameter model constructor.
     * @property {module:model/ErrorParameter}
     */
    ErrorParameter,

    /**
     * The EstimatedAvailability model constructor.
     * @property {module:model/EstimatedAvailability}
     */
    EstimatedAvailability,

    /**
     * The Image model constructor.
     * @property {module:model/Image}
     */
    Image,

    /**
     * The Item model constructor.
     * @property {module:model/Item}
     */
    Item,

    /**
     * The ItemGroup model constructor.
     * @property {module:model/ItemGroup}
     */
    ItemGroup,

    /**
     * The ItemGroupSummary model constructor.
     * @property {module:model/ItemGroupSummary}
     */
    ItemGroupSummary,

    /**
     * The ItemLocationImpl model constructor.
     * @property {module:model/ItemLocationImpl}
     */
    ItemLocationImpl,

    /**
     * The ItemReturnTerms model constructor.
     * @property {module:model/ItemReturnTerms}
     */
    ItemReturnTerms,

    /**
     * The ItemSummary model constructor.
     * @property {module:model/ItemSummary}
     */
    ItemSummary,

    /**
     * The Items model constructor.
     * @property {module:model/Items}
     */
    Items,

    /**
     * The LegalAddress model constructor.
     * @property {module:model/LegalAddress}
     */
    LegalAddress,

    /**
     * The MarketingPrice model constructor.
     * @property {module:model/MarketingPrice}
     */
    MarketingPrice,

    /**
     * The PaymentMethod model constructor.
     * @property {module:model/PaymentMethod}
     */
    PaymentMethod,

    /**
     * The PaymentMethodBrand model constructor.
     * @property {module:model/PaymentMethodBrand}
     */
    PaymentMethodBrand,

    /**
     * The PickupOptionSummary model constructor.
     * @property {module:model/PickupOptionSummary}
     */
    PickupOptionSummary,

    /**
     * The Price model constructor.
     * @property {module:model/Price}
     */
    Price,

    /**
     * The Product model constructor.
     * @property {module:model/Product}
     */
    Product,

    /**
     * The ProductIdentity model constructor.
     * @property {module:model/ProductIdentity}
     */
    ProductIdentity,

    /**
     * The RatingHistogram model constructor.
     * @property {module:model/RatingHistogram}
     */
    RatingHistogram,

    /**
     * The Refinement model constructor.
     * @property {module:model/Refinement}
     */
    Refinement,

    /**
     * The Region model constructor.
     * @property {module:model/Region}
     */
    Region,

    /**
     * The RemoteShopcartResponse model constructor.
     * @property {module:model/RemoteShopcartResponse}
     */
    RemoteShopcartResponse,

    /**
     * The RemoveCartItemInput model constructor.
     * @property {module:model/RemoveCartItemInput}
     */
    RemoveCartItemInput,

    /**
     * The ReviewRating model constructor.
     * @property {module:model/ReviewRating}
     */
    ReviewRating,

    /**
     * The SearchByImageRequest model constructor.
     * @property {module:model/SearchByImageRequest}
     */
    SearchByImageRequest,

    /**
     * The SearchPagedCollection model constructor.
     * @property {module:model/SearchPagedCollection}
     */
    SearchPagedCollection,

    /**
     * The Seller model constructor.
     * @property {module:model/Seller}
     */
    Seller,

    /**
     * The SellerDetail model constructor.
     * @property {module:model/SellerDetail}
     */
    SellerDetail,

    /**
     * The SellerLegalInfo model constructor.
     * @property {module:model/SellerLegalInfo}
     */
    SellerLegalInfo,

    /**
     * The ShipToLocation model constructor.
     * @property {module:model/ShipToLocation}
     */
    ShipToLocation,

    /**
     * The ShipToLocations model constructor.
     * @property {module:model/ShipToLocations}
     */
    ShipToLocations,

    /**
     * The ShipToRegion model constructor.
     * @property {module:model/ShipToRegion}
     */
    ShipToRegion,

    /**
     * The ShippingOption model constructor.
     * @property {module:model/ShippingOption}
     */
    ShippingOption,

    /**
     * The ShippingOptionSummary model constructor.
     * @property {module:model/ShippingOptionSummary}
     */
    ShippingOptionSummary,

    /**
     * The TargetLocation model constructor.
     * @property {module:model/TargetLocation}
     */
    TargetLocation,

    /**
     * The TaxJurisdiction model constructor.
     * @property {module:model/TaxJurisdiction}
     */
    TaxJurisdiction,

    /**
     * The Taxes model constructor.
     * @property {module:model/Taxes}
     */
    Taxes,

    /**
     * The TimeDuration model constructor.
     * @property {module:model/TimeDuration}
     */
    TimeDuration,

    /**
     * The TypedNameValue model constructor.
     * @property {module:model/TypedNameValue}
     */
    TypedNameValue,

    /**
     * The UpdateCartItemInput model constructor.
     * @property {module:model/UpdateCartItemInput}
     */
    UpdateCartItemInput,

    /**
     * The VatDetail model constructor.
     * @property {module:model/VatDetail}
     */
    VatDetail,

    /**
    * The ItemApi service constructor.
    * @property {module:api/ItemApi}
    */
    ItemApi,

    /**
    * The ItemSummaryApi service constructor.
    * @property {module:api/ItemSummaryApi}
    */
    ItemSummaryApi,

    /**
    * The SearchByImageApi service constructor.
    * @property {module:api/SearchByImageApi}
    */
    SearchByImageApi,

    /**
    * The ShoppingCartApi service constructor.
    * @property {module:api/ShoppingCartApi}
    */
    ShoppingCartApi
};
