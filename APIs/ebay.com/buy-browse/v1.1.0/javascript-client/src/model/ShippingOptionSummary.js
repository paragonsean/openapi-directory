/**
 * Browse API
 * The Browse API has the following resources: item_summary: Lets shoppers search for specific items by keyword, GTIN, category, charity, product, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values. &nbsp;(Experimental) search_by_image: Lets shoppers search for specific items by image. You can refine the results by using URI parameters and filters. item: Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part. Provides a bridge between the eBay legacy APIs, such as Finding, and the RESTful APIs, which use different formats for the item IDs. &nbsp;(Experimental) shopping_cart: Provides the ability for eBay members to see the contents of their eBay cart, and add, remove, and change the quantity of items in their eBay cart.&nbsp;&nbsp; Note: This resource is not available in the eBay API Explorer. The item_summary, search_by_image, and item resource calls require an Application access token. The shopping_cart resource calls require a User access token.
 *
 * The version of the OpenAPI document: v1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConvertedAmount from './ConvertedAmount';

/**
 * The ShippingOptionSummary model module.
 * @module model/ShippingOptionSummary
 * @version v1.1.0
 */
class ShippingOptionSummary {
    /**
     * Constructs a new <code>ShippingOptionSummary</code>.
     * The type that defines the fields for the shipping information.
     * @alias module:model/ShippingOptionSummary
     */
    constructor() { 
        
        ShippingOptionSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShippingOptionSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShippingOptionSummary} obj Optional instance to populate.
     * @return {module:model/ShippingOptionSummary} The populated <code>ShippingOptionSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShippingOptionSummary();

            if (data.hasOwnProperty('guaranteedDelivery')) {
                obj['guaranteedDelivery'] = ApiClient.convertToType(data['guaranteedDelivery'], 'Boolean');
            }
            if (data.hasOwnProperty('maxEstimatedDeliveryDate')) {
                obj['maxEstimatedDeliveryDate'] = ApiClient.convertToType(data['maxEstimatedDeliveryDate'], 'String');
            }
            if (data.hasOwnProperty('minEstimatedDeliveryDate')) {
                obj['minEstimatedDeliveryDate'] = ApiClient.convertToType(data['minEstimatedDeliveryDate'], 'String');
            }
            if (data.hasOwnProperty('shippingCost')) {
                obj['shippingCost'] = ConvertedAmount.constructFromObject(data['shippingCost']);
            }
            if (data.hasOwnProperty('shippingCostType')) {
                obj['shippingCostType'] = ApiClient.convertToType(data['shippingCostType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShippingOptionSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShippingOptionSummary</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['maxEstimatedDeliveryDate'] && !(typeof data['maxEstimatedDeliveryDate'] === 'string' || data['maxEstimatedDeliveryDate'] instanceof String)) {
            throw new Error("Expected the field `maxEstimatedDeliveryDate` to be a primitive type in the JSON string but got " + data['maxEstimatedDeliveryDate']);
        }
        // ensure the json data is a string
        if (data['minEstimatedDeliveryDate'] && !(typeof data['minEstimatedDeliveryDate'] === 'string' || data['minEstimatedDeliveryDate'] instanceof String)) {
            throw new Error("Expected the field `minEstimatedDeliveryDate` to be a primitive type in the JSON string but got " + data['minEstimatedDeliveryDate']);
        }
        // validate the optional field `shippingCost`
        if (data['shippingCost']) { // data not null
          ConvertedAmount.validateJSON(data['shippingCost']);
        }
        // ensure the json data is a string
        if (data['shippingCostType'] && !(typeof data['shippingCostType'] === 'string' || data['shippingCostType'] instanceof String)) {
            throw new Error("Expected the field `shippingCostType` to be a primitive type in the JSON string but got " + data['shippingCostType']);
        }

        return true;
    }


}



/**
 * Indicates if the seller has committed to shipping the item with eBay Guaranteed Delivery. With eBay Guaranteed Delivery, the seller is committed to getting the line item to the buyer within 4 business days or less. See the Buying items with eBay Guaranteed Delivery help topic for more details about eBay Guaranteed Delivery.
 * @member {Boolean} guaranteedDelivery
 */
ShippingOptionSummary.prototype['guaranteedDelivery'] = undefined;

/**
 * The end date of the delivery window (latest projected delivery date). This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer. Note: For the best accuracy, always include the contextualLocation values in the X-EBAY-C-ENDUSERCTX request header.
 * @member {String} maxEstimatedDeliveryDate
 */
ShippingOptionSummary.prototype['maxEstimatedDeliveryDate'] = undefined;

/**
 * The start date of the delivery window (earliest projected delivery date). This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer. Note: For the best accuracy, always include the contextualLocation values in the X-EBAY-C-ENDUSERCTX request header.
 * @member {String} minEstimatedDeliveryDate
 */
ShippingOptionSummary.prototype['minEstimatedDeliveryDate'] = undefined;

/**
 * @member {module:model/ConvertedAmount} shippingCost
 */
ShippingOptionSummary.prototype['shippingCost'] = undefined;

/**
 * Indicates the type of shipping used to ship the item. Possible values are FIXED (flat-rate shipping) and CALCULATED (shipping cost calculated based on item and buyer location).
 * @member {String} shippingCostType
 */
ShippingOptionSummary.prototype['shippingCostType'] = undefined;






export default ShippingOptionSummary;

