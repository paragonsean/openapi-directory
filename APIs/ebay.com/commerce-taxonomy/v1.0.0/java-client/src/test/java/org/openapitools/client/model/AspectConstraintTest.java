/*
 * Taxonomy API
 * Use the Taxonomy API to discover the most appropriate eBay categories under which sellers can offer inventory items for sale, and the most likely categories under which buyers can browse or search for items to purchase. In addition, the Taxonomy API provides metadata about the required and recommended category aspects to include in listings, and also has two operations to retrieve parts compatibility information.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AspectConstraint
 */
public class AspectConstraintTest {
    private final AspectConstraint model = new AspectConstraint();

    /**
     * Model tests for AspectConstraint
     */
    @Test
    public void testAspectConstraint() {
        // TODO: test AspectConstraint
    }

    /**
     * Test the property 'aspectApplicableTo'
     */
    @Test
    public void aspectApplicableToTest() {
        // TODO: test aspectApplicableTo
    }

    /**
     * Test the property 'aspectDataType'
     */
    @Test
    public void aspectDataTypeTest() {
        // TODO: test aspectDataType
    }

    /**
     * Test the property 'aspectEnabledForVariations'
     */
    @Test
    public void aspectEnabledForVariationsTest() {
        // TODO: test aspectEnabledForVariations
    }

    /**
     * Test the property 'aspectFormat'
     */
    @Test
    public void aspectFormatTest() {
        // TODO: test aspectFormat
    }

    /**
     * Test the property 'aspectMaxLength'
     */
    @Test
    public void aspectMaxLengthTest() {
        // TODO: test aspectMaxLength
    }

    /**
     * Test the property 'aspectMode'
     */
    @Test
    public void aspectModeTest() {
        // TODO: test aspectMode
    }

    /**
     * Test the property 'aspectRequired'
     */
    @Test
    public void aspectRequiredTest() {
        // TODO: test aspectRequired
    }

    /**
     * Test the property 'aspectUsage'
     */
    @Test
    public void aspectUsageTest() {
        // TODO: test aspectUsage
    }

    /**
     * Test the property 'expectedRequiredByDate'
     */
    @Test
    public void expectedRequiredByDateTest() {
        // TODO: test expectedRequiredByDate
    }

    /**
     * Test the property 'itemToAspectCardinality'
     */
    @Test
    public void itemToAspectCardinalityTest() {
        // TODO: test itemToAspectCardinality
    }

}
