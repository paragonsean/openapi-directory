# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.category_suggestion import CategorySuggestion
from openapi_server import util


class CategorySuggestionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_suggestions: List[CategorySuggestion]=None, category_tree_id: str=None, category_tree_version: str=None):
        """CategorySuggestionResponse - a model defined in OpenAPI

        :param category_suggestions: The category_suggestions of this CategorySuggestionResponse.
        :param category_tree_id: The category_tree_id of this CategorySuggestionResponse.
        :param category_tree_version: The category_tree_version of this CategorySuggestionResponse.
        """
        self.openapi_types = {
            'category_suggestions': List[CategorySuggestion],
            'category_tree_id': str,
            'category_tree_version': str
        }

        self.attribute_map = {
            'category_suggestions': 'categorySuggestions',
            'category_tree_id': 'categoryTreeId',
            'category_tree_version': 'categoryTreeVersion'
        }

        self._category_suggestions = category_suggestions
        self._category_tree_id = category_tree_id
        self._category_tree_version = category_tree_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CategorySuggestionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CategorySuggestionResponse of this CategorySuggestionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_suggestions(self):
        """Gets the category_suggestions of this CategorySuggestionResponse.

        Contains details about one or more suggested categories that correspond to the provided keywords. The array of suggested categories is sorted in order of eBay's confidence of the relevance of each category (the first category is the most relevant). Important: This call is not supported in the Sandbox environment. It will return a response payload in which the categoryName fields contain random or boilerplate text regardless of the query submitted.

        :return: The category_suggestions of this CategorySuggestionResponse.
        :rtype: List[CategorySuggestion]
        """
        return self._category_suggestions

    @category_suggestions.setter
    def category_suggestions(self, category_suggestions):
        """Sets the category_suggestions of this CategorySuggestionResponse.

        Contains details about one or more suggested categories that correspond to the provided keywords. The array of suggested categories is sorted in order of eBay's confidence of the relevance of each category (the first category is the most relevant). Important: This call is not supported in the Sandbox environment. It will return a response payload in which the categoryName fields contain random or boilerplate text regardless of the query submitted.

        :param category_suggestions: The category_suggestions of this CategorySuggestionResponse.
        :type category_suggestions: List[CategorySuggestion]
        """

        self._category_suggestions = category_suggestions

    @property
    def category_tree_id(self):
        """Gets the category_tree_id of this CategorySuggestionResponse.

        The unique identifier of the eBay category tree from which suggestions are returned.

        :return: The category_tree_id of this CategorySuggestionResponse.
        :rtype: str
        """
        return self._category_tree_id

    @category_tree_id.setter
    def category_tree_id(self, category_tree_id):
        """Sets the category_tree_id of this CategorySuggestionResponse.

        The unique identifier of the eBay category tree from which suggestions are returned.

        :param category_tree_id: The category_tree_id of this CategorySuggestionResponse.
        :type category_tree_id: str
        """

        self._category_tree_id = category_tree_id

    @property
    def category_tree_version(self):
        """Gets the category_tree_version of this CategorySuggestionResponse.

        The version of the category tree identified by categoryTreeId. It's a good idea to cache this value for comparison so you can determine if this category tree has been modified in subsequent calls.

        :return: The category_tree_version of this CategorySuggestionResponse.
        :rtype: str
        """
        return self._category_tree_version

    @category_tree_version.setter
    def category_tree_version(self, category_tree_version):
        """Sets the category_tree_version of this CategorySuggestionResponse.

        The version of the category tree identified by categoryTreeId. It's a good idea to cache this value for comparison so you can determine if this category tree has been modified in subsequent calls.

        :param category_tree_version: The category_tree_version of this CategorySuggestionResponse.
        :type category_tree_version: str
        """

        self._category_tree_version = category_tree_version
