# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compatibility_property_value import CompatibilityPropertyValue
from openapi_server import util


class GetCompatibilityPropertyValuesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compatibility_property_values: List[CompatibilityPropertyValue]=None):
        """GetCompatibilityPropertyValuesResponse - a model defined in OpenAPI

        :param compatibility_property_values: The compatibility_property_values of this GetCompatibilityPropertyValuesResponse.
        """
        self.openapi_types = {
            'compatibility_property_values': List[CompatibilityPropertyValue]
        }

        self.attribute_map = {
            'compatibility_property_values': 'compatibilityPropertyValues'
        }

        self._compatibility_property_values = compatibility_property_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCompatibilityPropertyValuesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetCompatibilityPropertyValuesResponse of this GetCompatibilityPropertyValuesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compatibility_property_values(self):
        """Gets the compatibility_property_values of this GetCompatibilityPropertyValuesResponse.

        This array contains all compatible vehicle property values that match the specified eBay marketplace, specified eBay category, and filters in the request. If the compatibility_property parameter value in the request is 'Trim', each value returned in each value field will be a different vehicle trim, applicable to any filters that are set in the filter query parameter of the request, and also based on the eBay marketplace and category specified in the call request.

        :return: The compatibility_property_values of this GetCompatibilityPropertyValuesResponse.
        :rtype: List[CompatibilityPropertyValue]
        """
        return self._compatibility_property_values

    @compatibility_property_values.setter
    def compatibility_property_values(self, compatibility_property_values):
        """Sets the compatibility_property_values of this GetCompatibilityPropertyValuesResponse.

        This array contains all compatible vehicle property values that match the specified eBay marketplace, specified eBay category, and filters in the request. If the compatibility_property parameter value in the request is 'Trim', each value returned in each value field will be a different vehicle trim, applicable to any filters that are set in the filter query parameter of the request, and also based on the eBay marketplace and category specified in the call request.

        :param compatibility_property_values: The compatibility_property_values of this GetCompatibilityPropertyValuesResponse.
        :type compatibility_property_values: List[CompatibilityPropertyValue]
        """

        self._compatibility_property_values = compatibility_property_values
