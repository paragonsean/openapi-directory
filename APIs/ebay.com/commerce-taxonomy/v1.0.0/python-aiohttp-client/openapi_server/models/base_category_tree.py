# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BaseCategoryTree(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_tree_id: str=None, category_tree_version: str=None):
        """BaseCategoryTree - a model defined in OpenAPI

        :param category_tree_id: The category_tree_id of this BaseCategoryTree.
        :param category_tree_version: The category_tree_version of this BaseCategoryTree.
        """
        self.openapi_types = {
            'category_tree_id': str,
            'category_tree_version': str
        }

        self.attribute_map = {
            'category_tree_id': 'categoryTreeId',
            'category_tree_version': 'categoryTreeVersion'
        }

        self._category_tree_id = category_tree_id
        self._category_tree_version = category_tree_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BaseCategoryTree':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BaseCategoryTree of this BaseCategoryTree.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_tree_id(self):
        """Gets the category_tree_id of this BaseCategoryTree.

        The unique identifier of the eBay category tree for the specified marketplace.

        :return: The category_tree_id of this BaseCategoryTree.
        :rtype: str
        """
        return self._category_tree_id

    @category_tree_id.setter
    def category_tree_id(self, category_tree_id):
        """Sets the category_tree_id of this BaseCategoryTree.

        The unique identifier of the eBay category tree for the specified marketplace.

        :param category_tree_id: The category_tree_id of this BaseCategoryTree.
        :type category_tree_id: str
        """

        self._category_tree_id = category_tree_id

    @property
    def category_tree_version(self):
        """Gets the category_tree_version of this BaseCategoryTree.

        The version of the category tree identified by categoryTreeId. It's a good idea to cache this value for comparison so you can determine if this category tree has been modified in subsequent calls.

        :return: The category_tree_version of this BaseCategoryTree.
        :rtype: str
        """
        return self._category_tree_version

    @category_tree_version.setter
    def category_tree_version(self, category_tree_version):
        """Sets the category_tree_version of this BaseCategoryTree.

        The version of the category tree identified by categoryTreeId. It's a good idea to cache this value for comparison so you can determine if this category tree has been modified in subsequent calls.

        :param category_tree_version: The category_tree_version of this BaseCategoryTree.
        :type category_tree_version: str
        """

        self._category_tree_version = category_tree_version
