/**
 * Taxonomy API
 * Use the Taxonomy API to discover the most appropriate eBay categories under which sellers can offer inventory items for sale, and the most likely categories under which buyers can browse or search for items to purchase. In addition, the Taxonomy API provides metadata about the required and recommended category aspects to include in listings, and also has two operations to retrieve parts compatibility information.
 *
 * The version of the OpenAPI document: v1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIValueConstraint.h
 *
 * This type contains a list of the dependencies that identify when a particular value is available for a given aspect of a given category. Each dependency specifies the values of another aspect of the same category (the &lt;i&gt;control&lt;/i&gt; aspect), for which the given value of the given aspect can also be selected by the seller. This container consists of constraint information for the corresponding product aspect value.
 */

#ifndef OAIValueConstraint_H
#define OAIValueConstraint_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIValueConstraint : public OAIObject {
public:
    OAIValueConstraint();
    OAIValueConstraint(QString json);
    ~OAIValueConstraint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicableForLocalizedAspectName() const;
    void setApplicableForLocalizedAspectName(const QString &applicable_for_localized_aspect_name);
    bool is_applicable_for_localized_aspect_name_Set() const;
    bool is_applicable_for_localized_aspect_name_Valid() const;

    QList<QString> getApplicableForLocalizedAspectValues() const;
    void setApplicableForLocalizedAspectValues(const QList<QString> &applicable_for_localized_aspect_values);
    bool is_applicable_for_localized_aspect_values_Set() const;
    bool is_applicable_for_localized_aspect_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_applicable_for_localized_aspect_name;
    bool m_applicable_for_localized_aspect_name_isSet;
    bool m_applicable_for_localized_aspect_name_isValid;

    QList<QString> m_applicable_for_localized_aspect_values;
    bool m_applicable_for_localized_aspect_values_isSet;
    bool m_applicable_for_localized_aspect_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIValueConstraint)

#endif // OAIValueConstraint_H
