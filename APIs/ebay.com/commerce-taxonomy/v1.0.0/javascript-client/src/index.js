/**
 * Taxonomy API
 * Use the Taxonomy API to discover the most appropriate eBay categories under which sellers can offer inventory items for sale, and the most likely categories under which buyers can browse or search for items to purchase. In addition, the Taxonomy API provides metadata about the required and recommended category aspects to include in listings, and also has two operations to retrieve parts compatibility information.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AncestorReference from './model/AncestorReference';
import Aspect from './model/Aspect';
import AspectConstraint from './model/AspectConstraint';
import AspectMetadata from './model/AspectMetadata';
import AspectValue from './model/AspectValue';
import BaseCategoryTree from './model/BaseCategoryTree';
import Category from './model/Category';
import CategoryAspect from './model/CategoryAspect';
import CategorySubtree from './model/CategorySubtree';
import CategorySuggestion from './model/CategorySuggestion';
import CategorySuggestionResponse from './model/CategorySuggestionResponse';
import CategoryTree from './model/CategoryTree';
import CategoryTreeNode from './model/CategoryTreeNode';
import CompatibilityProperty from './model/CompatibilityProperty';
import CompatibilityPropertyValue from './model/CompatibilityPropertyValue';
import GetCategoriesAspectResponse from './model/GetCategoriesAspectResponse';
import GetCompatibilityMetadataResponse from './model/GetCompatibilityMetadataResponse';
import GetCompatibilityPropertyValuesResponse from './model/GetCompatibilityPropertyValuesResponse';
import RelevanceIndicator from './model/RelevanceIndicator';
import ValueConstraint from './model/ValueConstraint';
import CategoryTreeApi from './api/CategoryTreeApi';


/**
* Use the Taxonomy API to discover the most appropriate eBay categories under which sellers can offer inventory items for sale, and the most likely categories under which buyers can browse or search for items to purchase. In addition, the Taxonomy API provides metadata about the required and recommended category aspects to include in listings, and also has two operations to retrieve parts compatibility information..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var TaxonomyApi = require('index'); // See note below*.
* var xxxSvc = new TaxonomyApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new TaxonomyApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new TaxonomyApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new TaxonomyApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AncestorReference model constructor.
     * @property {module:model/AncestorReference}
     */
    AncestorReference,

    /**
     * The Aspect model constructor.
     * @property {module:model/Aspect}
     */
    Aspect,

    /**
     * The AspectConstraint model constructor.
     * @property {module:model/AspectConstraint}
     */
    AspectConstraint,

    /**
     * The AspectMetadata model constructor.
     * @property {module:model/AspectMetadata}
     */
    AspectMetadata,

    /**
     * The AspectValue model constructor.
     * @property {module:model/AspectValue}
     */
    AspectValue,

    /**
     * The BaseCategoryTree model constructor.
     * @property {module:model/BaseCategoryTree}
     */
    BaseCategoryTree,

    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category,

    /**
     * The CategoryAspect model constructor.
     * @property {module:model/CategoryAspect}
     */
    CategoryAspect,

    /**
     * The CategorySubtree model constructor.
     * @property {module:model/CategorySubtree}
     */
    CategorySubtree,

    /**
     * The CategorySuggestion model constructor.
     * @property {module:model/CategorySuggestion}
     */
    CategorySuggestion,

    /**
     * The CategorySuggestionResponse model constructor.
     * @property {module:model/CategorySuggestionResponse}
     */
    CategorySuggestionResponse,

    /**
     * The CategoryTree model constructor.
     * @property {module:model/CategoryTree}
     */
    CategoryTree,

    /**
     * The CategoryTreeNode model constructor.
     * @property {module:model/CategoryTreeNode}
     */
    CategoryTreeNode,

    /**
     * The CompatibilityProperty model constructor.
     * @property {module:model/CompatibilityProperty}
     */
    CompatibilityProperty,

    /**
     * The CompatibilityPropertyValue model constructor.
     * @property {module:model/CompatibilityPropertyValue}
     */
    CompatibilityPropertyValue,

    /**
     * The GetCategoriesAspectResponse model constructor.
     * @property {module:model/GetCategoriesAspectResponse}
     */
    GetCategoriesAspectResponse,

    /**
     * The GetCompatibilityMetadataResponse model constructor.
     * @property {module:model/GetCompatibilityMetadataResponse}
     */
    GetCompatibilityMetadataResponse,

    /**
     * The GetCompatibilityPropertyValuesResponse model constructor.
     * @property {module:model/GetCompatibilityPropertyValuesResponse}
     */
    GetCompatibilityPropertyValuesResponse,

    /**
     * The RelevanceIndicator model constructor.
     * @property {module:model/RelevanceIndicator}
     */
    RelevanceIndicator,

    /**
     * The ValueConstraint model constructor.
     * @property {module:model/ValueConstraint}
     */
    ValueConstraint,

    /**
    * The CategoryTreeApi service constructor.
    * @property {module:api/CategoryTreeApi}
    */
    CategoryTreeApi
};
