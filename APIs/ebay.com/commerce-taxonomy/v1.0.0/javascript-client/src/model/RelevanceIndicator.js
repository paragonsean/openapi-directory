/**
 * Taxonomy API
 * Use the Taxonomy API to discover the most appropriate eBay categories under which sellers can offer inventory items for sale, and the most likely categories under which buyers can browse or search for items to purchase. In addition, the Taxonomy API provides metadata about the required and recommended category aspects to include in listings, and also has two operations to retrieve parts compatibility information.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RelevanceIndicator model module.
 * @module model/RelevanceIndicator
 * @version v1.0.0
 */
class RelevanceIndicator {
    /**
     * Constructs a new <code>RelevanceIndicator</code>.
     * The relevance of this aspect. This field is returned if eBay has data on how many searches have been performed for listings in the category using this item aspect.&lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; This container is restricted to applications that have been granted permission to access this feature. You must submit an &lt;a href&#x3D;\&quot;https://developer.ebay.com/my/support/tickets?tab&#x3D;app-check\&quot;&gt;App Check ticket&lt;/a&gt; to request this access. In the App Check form, add a note to the &lt;b&gt;Application Title/Summary&lt;/b&gt; and/or &lt;b&gt;Application Details&lt;/b&gt; fields that you want access to &#39;Buyer Demand Data&#39; in the Taxonomy API.&lt;/span&gt;
     * @alias module:model/RelevanceIndicator
     */
    constructor() { 
        
        RelevanceIndicator.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RelevanceIndicator</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RelevanceIndicator} obj Optional instance to populate.
     * @return {module:model/RelevanceIndicator} The populated <code>RelevanceIndicator</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RelevanceIndicator();

            if (data.hasOwnProperty('searchCount')) {
                obj['searchCount'] = ApiClient.convertToType(data['searchCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RelevanceIndicator</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RelevanceIndicator</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The number of recent searches (based on 30 days of data) for the aspect.
 * @member {Number} searchCount
 */
RelevanceIndicator.prototype['searchCount'] = undefined;






export default RelevanceIndicator;

