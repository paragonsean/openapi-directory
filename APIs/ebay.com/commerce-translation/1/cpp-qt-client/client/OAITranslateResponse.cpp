/**
 * Translation API
 * This API allows 3rd party developers to translate item title, description, search query.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITranslateResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITranslateResponse::OAITranslateResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITranslateResponse::OAITranslateResponse() {
    this->initializeModel();
}

OAITranslateResponse::~OAITranslateResponse() {}

void OAITranslateResponse::initializeModel() {

    m_translations_isSet = false;
    m_translations_isValid = false;
}

void OAITranslateResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITranslateResponse::fromJsonObject(QJsonObject json) {

    m_translations_isValid = ::OpenAPI::fromJsonValue(m_translations, json[QString("translations")]);
    m_translations_isSet = !json[QString("translations")].isNull() && m_translations_isValid;
}

QString OAITranslateResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITranslateResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_translations.size() > 0) {
        obj.insert(QString("translations"), ::OpenAPI::toJsonValue(m_translations));
    }
    return obj;
}

QList<OAITranslation> OAITranslateResponse::getTranslations() const {
    return m_translations;
}
void OAITranslateResponse::setTranslations(const QList<OAITranslation> &translations) {
    m_translations = translations;
    m_translations_isSet = true;
}

bool OAITranslateResponse::is_translations_Set() const{
    return m_translations_isSet;
}

bool OAITranslateResponse::is_translations_Valid() const{
    return m_translations_isValid;
}

bool OAITranslateResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_translations.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITranslateResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
