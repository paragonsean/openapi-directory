# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Translation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _from: str=None, original_text: str=None, to: str=None, translated_text: str=None):
        """Translation - a model defined in OpenAPI

        :param _from: The _from of this Translation.
        :param original_text: The original_text of this Translation.
        :param to: The to of this Translation.
        :param translated_text: The translated_text of this Translation.
        """
        self.openapi_types = {
            '_from': str,
            'original_text': str,
            'to': str,
            'translated_text': str
        }

        self.attribute_map = {
            '_from': 'from',
            'original_text': 'originalText',
            'to': 'to',
            'translated_text': 'translatedText'
        }

        self.__from = _from
        self._original_text = original_text
        self._to = to
        self._translated_text = translated_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Translation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Translation of this Translation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _from(self):
        """Gets the _from of this Translation.

        The language of the input text. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/translation/types/LanguageEnum.html'>eBay API documentation</a>

        :return: The _from of this Translation.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this Translation.

        The language of the input text. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/translation/types/LanguageEnum.html'>eBay API documentation</a>

        :param _from: The _from of this Translation.
        :type _from: str
        """

        self.__from = _from

    @property
    def original_text(self):
        """Gets the original_text of this Translation.

        Original text.

        :return: The original_text of this Translation.
        :rtype: str
        """
        return self._original_text

    @original_text.setter
    def original_text(self, original_text):
        """Sets the original_text of this Translation.

        Original text.

        :param original_text: The original_text of this Translation.
        :type original_text: str
        """

        self._original_text = original_text

    @property
    def to(self):
        """Gets the to of this Translation.

        The language to use for the translation of th einput text. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/translation/types/LanguageEnum.html'>eBay API documentation</a>

        :return: The to of this Translation.
        :rtype: str
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this Translation.

        The language to use for the translation of th einput text. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/translation/types/LanguageEnum.html'>eBay API documentation</a>

        :param to: The to of this Translation.
        :type to: str
        """

        self._to = to

    @property
    def translated_text(self):
        """Gets the translated_text of this Translation.

        Translated text.

        :return: The translated_text of this Translation.
        :rtype: str
        """
        return self._translated_text

    @translated_text.setter
    def translated_text(self, translated_text):
        """Sets the translated_text of this Translation.

        Translated text.

        :param translated_text: The translated_text of this Translation.
        :type translated_text: str
        """

        self._translated_text = translated_text
