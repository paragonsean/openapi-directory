/**
 * Buy Marketing API
 * The Marketing API retrieves eBay products based on a metric, such as Best Selling, as well as products that were also bought and also viewed.
 *
 * The version of the OpenAPI document: v1_beta.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BestSellingProductResponse from '../model/BestSellingProductResponse';

/**
* MerchandisedProduct service.
* @module api/MerchandisedProductApi
* @version v1_beta.2.0
*/
export default class MerchandisedProductApi {

    /**
    * Constructs a new MerchandisedProductApi. 
    * @alias module:api/MerchandisedProductApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getMerchandisedProducts operation.
     * @callback module:api/MerchandisedProductApi~getMerchandisedProductsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BestSellingProductResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This method returns an array of products based on the category and metric specified. This includes details of the product, such as the eBay product ID (EPID), title, and user reviews and ratings for the product. You can use the <code>epid</code> returned by this method in the Browse API <b>search</b> method to retrieve items for this product. <h3><b>Restrictions </b></h3> <ul><li>To test <b> getMerchandisedProducts</b> in Sandbox, you must use category ID 9355 and the response will be mock data.  </li>   <li>For a list of supported sites and other restrictions, see <a href=\"/api-docs/buy/marketing/overview.html#API\">API Restrictions</a>.</li>  </ul>
     * @param {String} categoryId This query parameter limits the products returned to a specific eBay category.  <br /> <br />The list of eBay category IDs is not published and category IDs are not all the same across all the eBay maketplace. You can use the following techniques to find a category by site: <ul> <li>Use the <a href=\"https://pages.ebay.com/sellerinformation/news/categorychanges.html\" target=\"_blank\">Category Changes page</a>.</li> <li>Use the Taxonomy API. For details see <a href=\"/api-docs/buy/buy-categories.html\">Get Categories for Buy APIs</a>. </li>  <li>Use the Browse API and submit the following method to get the <b> dominantCategoryId</b> for an item. <br /><code>/buy/browse/v1/item_summary/search?q=<em>keyword</em>&fieldgroups=ASPECT_REFINEMENTS  </code></li></ul>  <b> Maximum: </b> 1 <br /> <b> Required: </b> 1 
     * @param {String} metricName This value filters the result set by the specified metric. Only products in this metric are returned. Currently, the only metric supported is <code> BEST_SELLING</code>. <br /><br /><b> Default: </b>BEST_SELLING <br /> <b> Maximum: </b> 1 <br /> <b> Required: </b> 1
     * @param {Object} opts Optional parameters
     * @param {String} [aspectFilter] The aspect name/value pairs used to further refine product results. <br /><br /> For example: <br />&nbsp;&nbsp;&nbsp;<code>/buy/marketing/v1_beta/merchandised_product?category_id=31388&metric_name=BEST_SELLING&aspect_filter=Brand:Canon</code>  <br /><br />You can use the Browse API <b>search</b> method with the <code>fieldgroups=ASPECT_REFINEMENTS</code> field to return the aspects of a product. For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/buy/marketing/types/gct:MarketingAspectFilter
     * @param {String} [limit] This value specifies the maximum number of products to return in a result set. <br /> <br /><span class=\"tablenote\"> <b>Note:</b> Maximum value means the method will return up <em>to</em> that many products per set, but it can be less than this value. If the number of products found is less than this value, the method will return all of the products matching the criteria.</span>  <br /><br /><b> Default:</b> 8<br /><b> Maximum: </b>100
     * @param {module:api/MerchandisedProductApi~getMerchandisedProductsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BestSellingProductResponse}
     */
    getMerchandisedProducts(categoryId, metricName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'categoryId' is set
      if (categoryId === undefined || categoryId === null) {
        throw new Error("Missing the required parameter 'categoryId' when calling getMerchandisedProducts");
      }
      // verify the required parameter 'metricName' is set
      if (metricName === undefined || metricName === null) {
        throw new Error("Missing the required parameter 'metricName' when calling getMerchandisedProducts");
      }

      let pathParams = {
      };
      let queryParams = {
        'aspect_filter': opts['aspectFilter'],
        'category_id': categoryId,
        'limit': opts['limit'],
        'metric_name': metricName
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Client_Credentials'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = BestSellingProductResponse;
      return this.apiClient.callApi(
        '/merchandised_product', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
