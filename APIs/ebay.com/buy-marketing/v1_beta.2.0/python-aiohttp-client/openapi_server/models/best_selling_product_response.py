# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error import Error
from openapi_server.models.merchandised_product import MerchandisedProduct
from openapi_server import util


class BestSellingProductResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, merchandised_products: List[MerchandisedProduct]=None, warnings: List[Error]=None):
        """BestSellingProductResponse - a model defined in OpenAPI

        :param merchandised_products: The merchandised_products of this BestSellingProductResponse.
        :param warnings: The warnings of this BestSellingProductResponse.
        """
        self.openapi_types = {
            'merchandised_products': List[MerchandisedProduct],
            'warnings': List[Error]
        }

        self.attribute_map = {
            'merchandised_products': 'merchandisedProducts',
            'warnings': 'warnings'
        }

        self._merchandised_products = merchandised_products
        self._warnings = warnings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BestSellingProductResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BestSellingProductResponse of this BestSellingProductResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def merchandised_products(self):
        """Gets the merchandised_products of this BestSellingProductResponse.

        An array of containers for the products.

        :return: The merchandised_products of this BestSellingProductResponse.
        :rtype: List[MerchandisedProduct]
        """
        return self._merchandised_products

    @merchandised_products.setter
    def merchandised_products(self, merchandised_products):
        """Sets the merchandised_products of this BestSellingProductResponse.

        An array of containers for the products.

        :param merchandised_products: The merchandised_products of this BestSellingProductResponse.
        :type merchandised_products: List[MerchandisedProduct]
        """

        self._merchandised_products = merchandised_products

    @property
    def warnings(self):
        """Gets the warnings of this BestSellingProductResponse.

        The container with all the warnings for the input request.

        :return: The warnings of this BestSellingProductResponse.
        :rtype: List[Error]
        """
        return self._warnings

    @warnings.setter
    def warnings(self, warnings):
        """Sets the warnings of this BestSellingProductResponse.

        The container with all the warnings for the input request.

        :param warnings: The warnings of this BestSellingProductResponse.
        :type warnings: List[Error]
        """

        self._warnings = warnings
