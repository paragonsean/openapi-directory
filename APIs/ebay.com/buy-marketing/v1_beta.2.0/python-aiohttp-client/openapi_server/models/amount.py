# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Amount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency: str=None, value: str=None):
        """Amount - a model defined in OpenAPI

        :param currency: The currency of this Amount.
        :param value: The value of this Amount.
        """
        self.openapi_types = {
            'currency': str,
            'value': str
        }

        self.attribute_map = {
            'currency': 'currency',
            'value': 'value'
        }

        self._currency = currency
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Amount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Amount of this Amount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency(self):
        """Gets the currency of this Amount.

        The three-letter <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\">ISO 4217</a> code representing the currency of the amount in the <b> value</b> field. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/marketing/types/bas:CurrencyCodeEnum'>eBay API documentation</a>

        :return: The currency of this Amount.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this Amount.

        The three-letter <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\">ISO 4217</a> code representing the currency of the amount in the <b> value</b> field. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/marketing/types/bas:CurrencyCodeEnum'>eBay API documentation</a>

        :param currency: The currency of this Amount.
        :type currency: str
        """

        self._currency = currency

    @property
    def value(self):
        """Gets the value of this Amount.

        The monetary amount, in the currency specified by the <b> currency</b> field. 

        :return: The value of this Amount.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Amount.

        The monetary amount, in the currency specified by the <b> currency</b> field. 

        :param value: The value of this Amount.
        :type value: str
        """

        self._value = value
