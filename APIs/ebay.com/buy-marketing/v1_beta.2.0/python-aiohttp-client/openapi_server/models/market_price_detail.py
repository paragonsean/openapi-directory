# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server import util


class MarketPriceDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, condition_group: str=None, condition_ids: List[str]=None, estimated_start_price: Amount=None):
        """MarketPriceDetail - a model defined in OpenAPI

        :param condition_group: The condition_group of this MarketPriceDetail.
        :param condition_ids: The condition_ids of this MarketPriceDetail.
        :param estimated_start_price: The estimated_start_price of this MarketPriceDetail.
        """
        self.openapi_types = {
            'condition_group': str,
            'condition_ids': List[str],
            'estimated_start_price': Amount
        }

        self.attribute_map = {
            'condition_group': 'conditionGroup',
            'condition_ids': 'conditionIds',
            'estimated_start_price': 'estimatedStartPrice'
        }

        self._condition_group = condition_group
        self._condition_ids = condition_ids
        self._estimated_start_price = estimated_start_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MarketPriceDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MarketPriceDetail of this MarketPriceDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def condition_group(self):
        """Gets the condition_group of this MarketPriceDetail.

        The name for the condition of the product. For example: NEW

        :return: The condition_group of this MarketPriceDetail.
        :rtype: str
        """
        return self._condition_group

    @condition_group.setter
    def condition_group(self, condition_group):
        """Sets the condition_group of this MarketPriceDetail.

        The name for the condition of the product. For example: NEW

        :param condition_group: The condition_group of this MarketPriceDetail.
        :type condition_group: str
        """

        self._condition_group = condition_group

    @property
    def condition_ids(self):
        """Gets the condition_ids of this MarketPriceDetail.

        An array of condition identifiers for the product.

        :return: The condition_ids of this MarketPriceDetail.
        :rtype: List[str]
        """
        return self._condition_ids

    @condition_ids.setter
    def condition_ids(self, condition_ids):
        """Sets the condition_ids of this MarketPriceDetail.

        An array of condition identifiers for the product.

        :param condition_ids: The condition_ids of this MarketPriceDetail.
        :type condition_ids: List[str]
        """

        self._condition_ids = condition_ids

    @property
    def estimated_start_price(self):
        """Gets the estimated_start_price of this MarketPriceDetail.


        :return: The estimated_start_price of this MarketPriceDetail.
        :rtype: Amount
        """
        return self._estimated_start_price

    @estimated_start_price.setter
    def estimated_start_price(self, estimated_start_price):
        """Sets the estimated_start_price of this MarketPriceDetail.


        :param estimated_start_price: The estimated_start_price of this MarketPriceDetail.
        :type estimated_start_price: Amount
        """

        self._estimated_start_price = estimated_start_price
