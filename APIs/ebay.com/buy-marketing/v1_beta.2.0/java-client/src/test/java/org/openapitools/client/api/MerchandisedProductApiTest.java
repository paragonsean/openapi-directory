/*
 * Buy Marketing API
 * The Marketing API retrieves eBay products based on a metric, such as Best Selling, as well as products that were also bought and also viewed.
 *
 * The version of the OpenAPI document: v1_beta.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BestSellingProductResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MerchandisedProductApi
 */
@Disabled
public class MerchandisedProductApiTest {

    private final MerchandisedProductApi api = new MerchandisedProductApi();

    /**
     * This method returns an array of products based on the category and metric specified. This includes details of the product, such as the eBay product ID (EPID), title, and user reviews and ratings for the product. You can use the &lt;code&gt;epid&lt;/code&gt; returned by this method in the Browse API &lt;b&gt;search&lt;/b&gt; method to retrieve items for this product. &lt;h3&gt;&lt;b&gt;Restrictions &lt;/b&gt;&lt;/h3&gt; &lt;ul&gt;&lt;li&gt;To test &lt;b&gt; getMerchandisedProducts&lt;/b&gt; in Sandbox, you must use category ID 9355 and the response will be mock data.  &lt;/li&gt;   &lt;li&gt;For a list of supported sites and other restrictions, see &lt;a href&#x3D;\&quot;/api-docs/buy/marketing/overview.html#API\&quot;&gt;API Restrictions&lt;/a&gt;.&lt;/li&gt;  &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMerchandisedProductsTest() throws ApiException {
        String categoryId = null;
        String metricName = null;
        String aspectFilter = null;
        String limit = null;
        BestSellingProductResponse response = api.getMerchandisedProducts(categoryId, metricName, aspectFilter, limit);
        // TODO: test validations
    }

}
