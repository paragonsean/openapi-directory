# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.category_type import CategoryType
from openapi_server.models.error import Error
from openapi_server.models.region_set import RegionSet
from openapi_server.models.shipping_option import ShippingOption
from openapi_server.models.time_duration import TimeDuration
from openapi_server import util


class SetFulfillmentPolicyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_types: List[CategoryType]=None, description: str=None, freight_shipping: bool=None, fulfillment_policy_id: str=None, global_shipping: bool=None, handling_time: TimeDuration=None, local_pickup: bool=None, marketplace_id: str=None, name: str=None, pickup_drop_off: bool=None, ship_to_locations: RegionSet=None, shipping_options: List[ShippingOption]=None, warnings: List[Error]=None):
        """SetFulfillmentPolicyResponse - a model defined in OpenAPI

        :param category_types: The category_types of this SetFulfillmentPolicyResponse.
        :param description: The description of this SetFulfillmentPolicyResponse.
        :param freight_shipping: The freight_shipping of this SetFulfillmentPolicyResponse.
        :param fulfillment_policy_id: The fulfillment_policy_id of this SetFulfillmentPolicyResponse.
        :param global_shipping: The global_shipping of this SetFulfillmentPolicyResponse.
        :param handling_time: The handling_time of this SetFulfillmentPolicyResponse.
        :param local_pickup: The local_pickup of this SetFulfillmentPolicyResponse.
        :param marketplace_id: The marketplace_id of this SetFulfillmentPolicyResponse.
        :param name: The name of this SetFulfillmentPolicyResponse.
        :param pickup_drop_off: The pickup_drop_off of this SetFulfillmentPolicyResponse.
        :param ship_to_locations: The ship_to_locations of this SetFulfillmentPolicyResponse.
        :param shipping_options: The shipping_options of this SetFulfillmentPolicyResponse.
        :param warnings: The warnings of this SetFulfillmentPolicyResponse.
        """
        self.openapi_types = {
            'category_types': List[CategoryType],
            'description': str,
            'freight_shipping': bool,
            'fulfillment_policy_id': str,
            'global_shipping': bool,
            'handling_time': TimeDuration,
            'local_pickup': bool,
            'marketplace_id': str,
            'name': str,
            'pickup_drop_off': bool,
            'ship_to_locations': RegionSet,
            'shipping_options': List[ShippingOption],
            'warnings': List[Error]
        }

        self.attribute_map = {
            'category_types': 'categoryTypes',
            'description': 'description',
            'freight_shipping': 'freightShipping',
            'fulfillment_policy_id': 'fulfillmentPolicyId',
            'global_shipping': 'globalShipping',
            'handling_time': 'handlingTime',
            'local_pickup': 'localPickup',
            'marketplace_id': 'marketplaceId',
            'name': 'name',
            'pickup_drop_off': 'pickupDropOff',
            'ship_to_locations': 'shipToLocations',
            'shipping_options': 'shippingOptions',
            'warnings': 'warnings'
        }

        self._category_types = category_types
        self._description = description
        self._freight_shipping = freight_shipping
        self._fulfillment_policy_id = fulfillment_policy_id
        self._global_shipping = global_shipping
        self._handling_time = handling_time
        self._local_pickup = local_pickup
        self._marketplace_id = marketplace_id
        self._name = name
        self._pickup_drop_off = pickup_drop_off
        self._ship_to_locations = ship_to_locations
        self._shipping_options = shipping_options
        self._warnings = warnings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetFulfillmentPolicyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SetFulfillmentPolicyResponse of this SetFulfillmentPolicyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_types(self):
        """Gets the category_types of this SetFulfillmentPolicyResponse.

        This container indicates whether the fulfillment business policy applies to motor vehicle listings, or if it applies to non-motor vehicle listings.

        :return: The category_types of this SetFulfillmentPolicyResponse.
        :rtype: List[CategoryType]
        """
        return self._category_types

    @category_types.setter
    def category_types(self, category_types):
        """Sets the category_types of this SetFulfillmentPolicyResponse.

        This container indicates whether the fulfillment business policy applies to motor vehicle listings, or if it applies to non-motor vehicle listings.

        :param category_types: The category_types of this SetFulfillmentPolicyResponse.
        :type category_types: List[CategoryType]
        """

        self._category_types = category_types

    @property
    def description(self):
        """Gets the description of this SetFulfillmentPolicyResponse.

        A seller-defined description of the fulfillment policy. This description is only for the seller's use, and is not exposed on any eBay pages. This field is returned if set for the policy. <br/><br/><b>Max length</b>: 250

        :return: The description of this SetFulfillmentPolicyResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SetFulfillmentPolicyResponse.

        A seller-defined description of the fulfillment policy. This description is only for the seller's use, and is not exposed on any eBay pages. This field is returned if set for the policy. <br/><br/><b>Max length</b>: 250

        :param description: The description of this SetFulfillmentPolicyResponse.
        :type description: str
        """

        self._description = description

    @property
    def freight_shipping(self):
        """Gets the freight_shipping of this SetFulfillmentPolicyResponse.

        If returned as <code>true</code>, the seller offers freight shipping. Freight shipping can be used for large items over 150 lbs.

        :return: The freight_shipping of this SetFulfillmentPolicyResponse.
        :rtype: bool
        """
        return self._freight_shipping

    @freight_shipping.setter
    def freight_shipping(self, freight_shipping):
        """Sets the freight_shipping of this SetFulfillmentPolicyResponse.

        If returned as <code>true</code>, the seller offers freight shipping. Freight shipping can be used for large items over 150 lbs.

        :param freight_shipping: The freight_shipping of this SetFulfillmentPolicyResponse.
        :type freight_shipping: bool
        """

        self._freight_shipping = freight_shipping

    @property
    def fulfillment_policy_id(self):
        """Gets the fulfillment_policy_id of this SetFulfillmentPolicyResponse.

        A unique eBay-assigned ID for a fulfillment business policy. This ID is generated when the policy is created.

        :return: The fulfillment_policy_id of this SetFulfillmentPolicyResponse.
        :rtype: str
        """
        return self._fulfillment_policy_id

    @fulfillment_policy_id.setter
    def fulfillment_policy_id(self, fulfillment_policy_id):
        """Sets the fulfillment_policy_id of this SetFulfillmentPolicyResponse.

        A unique eBay-assigned ID for a fulfillment business policy. This ID is generated when the policy is created.

        :param fulfillment_policy_id: The fulfillment_policy_id of this SetFulfillmentPolicyResponse.
        :type fulfillment_policy_id: str
        """

        self._fulfillment_policy_id = fulfillment_policy_id

    @property
    def global_shipping(self):
        """Gets the global_shipping of this SetFulfillmentPolicyResponse.

        If returned as <code>true</code>, the eBay Global Shipping Program will be used by the seller to ship items to international locations.<br /><br /><span class=\"tablenote\"><b>Note</b>: On the US marketplace, the <em><b>Global Shipping Program</b></em> is scheduled to be replaced by a new intermediated international shipping program called <em><b>eBay International Shipping</b></em>. US sellers who are opted in to the Global Shipping Program will be automatically opted in to eBay International Shipping when it becomes available to them. All US sellers will be migrated by March 31, 2023. <br /><br />eBay International Shipping is an account level setting, and no field needs to be set in a Fulfillment business policy to enable it. As long as the US seller's account is opted in to eBay International Shipping, this shipping option will be enabled automatically for all listings where international shipping is available. <br /><br />A US seller who is opted in to eBay International Shipping can also specify individual international shipping service options for a Fulfillment business policy.</span>

        :return: The global_shipping of this SetFulfillmentPolicyResponse.
        :rtype: bool
        """
        return self._global_shipping

    @global_shipping.setter
    def global_shipping(self, global_shipping):
        """Sets the global_shipping of this SetFulfillmentPolicyResponse.

        If returned as <code>true</code>, the eBay Global Shipping Program will be used by the seller to ship items to international locations.<br /><br /><span class=\"tablenote\"><b>Note</b>: On the US marketplace, the <em><b>Global Shipping Program</b></em> is scheduled to be replaced by a new intermediated international shipping program called <em><b>eBay International Shipping</b></em>. US sellers who are opted in to the Global Shipping Program will be automatically opted in to eBay International Shipping when it becomes available to them. All US sellers will be migrated by March 31, 2023. <br /><br />eBay International Shipping is an account level setting, and no field needs to be set in a Fulfillment business policy to enable it. As long as the US seller's account is opted in to eBay International Shipping, this shipping option will be enabled automatically for all listings where international shipping is available. <br /><br />A US seller who is opted in to eBay International Shipping can also specify individual international shipping service options for a Fulfillment business policy.</span>

        :param global_shipping: The global_shipping of this SetFulfillmentPolicyResponse.
        :type global_shipping: bool
        """

        self._global_shipping = global_shipping

    @property
    def handling_time(self):
        """Gets the handling_time of this SetFulfillmentPolicyResponse.


        :return: The handling_time of this SetFulfillmentPolicyResponse.
        :rtype: TimeDuration
        """
        return self._handling_time

    @handling_time.setter
    def handling_time(self, handling_time):
        """Sets the handling_time of this SetFulfillmentPolicyResponse.


        :param handling_time: The handling_time of this SetFulfillmentPolicyResponse.
        :type handling_time: TimeDuration
        """

        self._handling_time = handling_time

    @property
    def local_pickup(self):
        """Gets the local_pickup of this SetFulfillmentPolicyResponse.

        If returned as <code>true</code>, local pickup is available for this policy.

        :return: The local_pickup of this SetFulfillmentPolicyResponse.
        :rtype: bool
        """
        return self._local_pickup

    @local_pickup.setter
    def local_pickup(self, local_pickup):
        """Sets the local_pickup of this SetFulfillmentPolicyResponse.

        If returned as <code>true</code>, local pickup is available for this policy.

        :param local_pickup: The local_pickup of this SetFulfillmentPolicyResponse.
        :type local_pickup: bool
        """

        self._local_pickup = local_pickup

    @property
    def marketplace_id(self):
        """Gets the marketplace_id of this SetFulfillmentPolicyResponse.

        The ID of the eBay marketplace to which this fulfillment business policy applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay API documentation</a>

        :return: The marketplace_id of this SetFulfillmentPolicyResponse.
        :rtype: str
        """
        return self._marketplace_id

    @marketplace_id.setter
    def marketplace_id(self, marketplace_id):
        """Sets the marketplace_id of this SetFulfillmentPolicyResponse.

        The ID of the eBay marketplace to which this fulfillment business policy applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay API documentation</a>

        :param marketplace_id: The marketplace_id of this SetFulfillmentPolicyResponse.
        :type marketplace_id: str
        """

        self._marketplace_id = marketplace_id

    @property
    def name(self):
        """Gets the name of this SetFulfillmentPolicyResponse.

        A seller-defined name for this fulfillment business policy. Names must be unique for policies assigned to the same marketplace. <br/><br/><b>Max length</b>: 64

        :return: The name of this SetFulfillmentPolicyResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SetFulfillmentPolicyResponse.

        A seller-defined name for this fulfillment business policy. Names must be unique for policies assigned to the same marketplace. <br/><br/><b>Max length</b>: 64

        :param name: The name of this SetFulfillmentPolicyResponse.
        :type name: str
        """

        self._name = name

    @property
    def pickup_drop_off(self):
        """Gets the pickup_drop_off of this SetFulfillmentPolicyResponse.

        If returned as <code>true</code>, the seller offers the \"Click and Collect\" option. <br/><br/>Currently, \"Click and Collect\" is available only to large retail merchants the eBay AU and UK marketplaces.

        :return: The pickup_drop_off of this SetFulfillmentPolicyResponse.
        :rtype: bool
        """
        return self._pickup_drop_off

    @pickup_drop_off.setter
    def pickup_drop_off(self, pickup_drop_off):
        """Sets the pickup_drop_off of this SetFulfillmentPolicyResponse.

        If returned as <code>true</code>, the seller offers the \"Click and Collect\" option. <br/><br/>Currently, \"Click and Collect\" is available only to large retail merchants the eBay AU and UK marketplaces.

        :param pickup_drop_off: The pickup_drop_off of this SetFulfillmentPolicyResponse.
        :type pickup_drop_off: bool
        """

        self._pickup_drop_off = pickup_drop_off

    @property
    def ship_to_locations(self):
        """Gets the ship_to_locations of this SetFulfillmentPolicyResponse.


        :return: The ship_to_locations of this SetFulfillmentPolicyResponse.
        :rtype: RegionSet
        """
        return self._ship_to_locations

    @ship_to_locations.setter
    def ship_to_locations(self, ship_to_locations):
        """Sets the ship_to_locations of this SetFulfillmentPolicyResponse.


        :param ship_to_locations: The ship_to_locations of this SetFulfillmentPolicyResponse.
        :type ship_to_locations: RegionSet
        """

        self._ship_to_locations = ship_to_locations

    @property
    def shipping_options(self):
        """Gets the shipping_options of this SetFulfillmentPolicyResponse.

        This array is used to provide detailed information on the domestic and international shipping options available for the policy. A separate <b>ShippingOption</b> object covers domestic shipping service options and international shipping service options (if the seller ships to international locations). <br /><br />The <b>optionType</b> field indicates whether the <b>ShippingOption</b> object applies to domestic or international shipping, and the <b>costType</b> field indicates whether flat-rate shipping or calculated shipping will be used. <p>A separate <b>ShippingServices</b> object is used to specify cost and other details for every available domestic and international shipping service option. </p>

        :return: The shipping_options of this SetFulfillmentPolicyResponse.
        :rtype: List[ShippingOption]
        """
        return self._shipping_options

    @shipping_options.setter
    def shipping_options(self, shipping_options):
        """Sets the shipping_options of this SetFulfillmentPolicyResponse.

        This array is used to provide detailed information on the domestic and international shipping options available for the policy. A separate <b>ShippingOption</b> object covers domestic shipping service options and international shipping service options (if the seller ships to international locations). <br /><br />The <b>optionType</b> field indicates whether the <b>ShippingOption</b> object applies to domestic or international shipping, and the <b>costType</b> field indicates whether flat-rate shipping or calculated shipping will be used. <p>A separate <b>ShippingServices</b> object is used to specify cost and other details for every available domestic and international shipping service option. </p>

        :param shipping_options: The shipping_options of this SetFulfillmentPolicyResponse.
        :type shipping_options: List[ShippingOption]
        """

        self._shipping_options = shipping_options

    @property
    def warnings(self):
        """Gets the warnings of this SetFulfillmentPolicyResponse.

        An array of one or more errors or warnings that were generated during the processing of the request. If there were no issues with the request, this array will return empty.

        :return: The warnings of this SetFulfillmentPolicyResponse.
        :rtype: List[Error]
        """
        return self._warnings

    @warnings.setter
    def warnings(self, warnings):
        """Sets the warnings of this SetFulfillmentPolicyResponse.

        An array of one or more errors or warnings that were generated during the processing of the request. If there were no issues with the request, this array will return empty.

        :param warnings: The warnings of this SetFulfillmentPolicyResponse.
        :type warnings: List[Error]
        """

        self._warnings = warnings
