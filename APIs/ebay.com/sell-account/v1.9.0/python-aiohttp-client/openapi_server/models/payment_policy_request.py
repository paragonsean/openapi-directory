# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.category_type import CategoryType
from openapi_server.models.deposit import Deposit
from openapi_server.models.payment_method import PaymentMethod
from openapi_server.models.time_duration import TimeDuration
from openapi_server import util


class PaymentPolicyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_types: List[CategoryType]=None, deposit: Deposit=None, description: str=None, full_payment_due_in: TimeDuration=None, immediate_pay: bool=None, marketplace_id: str=None, name: str=None, payment_instructions: str=None, payment_methods: List[PaymentMethod]=None):
        """PaymentPolicyRequest - a model defined in OpenAPI

        :param category_types: The category_types of this PaymentPolicyRequest.
        :param deposit: The deposit of this PaymentPolicyRequest.
        :param description: The description of this PaymentPolicyRequest.
        :param full_payment_due_in: The full_payment_due_in of this PaymentPolicyRequest.
        :param immediate_pay: The immediate_pay of this PaymentPolicyRequest.
        :param marketplace_id: The marketplace_id of this PaymentPolicyRequest.
        :param name: The name of this PaymentPolicyRequest.
        :param payment_instructions: The payment_instructions of this PaymentPolicyRequest.
        :param payment_methods: The payment_methods of this PaymentPolicyRequest.
        """
        self.openapi_types = {
            'category_types': List[CategoryType],
            'deposit': Deposit,
            'description': str,
            'full_payment_due_in': TimeDuration,
            'immediate_pay': bool,
            'marketplace_id': str,
            'name': str,
            'payment_instructions': str,
            'payment_methods': List[PaymentMethod]
        }

        self.attribute_map = {
            'category_types': 'categoryTypes',
            'deposit': 'deposit',
            'description': 'description',
            'full_payment_due_in': 'fullPaymentDueIn',
            'immediate_pay': 'immediatePay',
            'marketplace_id': 'marketplaceId',
            'name': 'name',
            'payment_instructions': 'paymentInstructions',
            'payment_methods': 'paymentMethods'
        }

        self._category_types = category_types
        self._deposit = deposit
        self._description = description
        self._full_payment_due_in = full_payment_due_in
        self._immediate_pay = immediate_pay
        self._marketplace_id = marketplace_id
        self._name = name
        self._payment_instructions = payment_instructions
        self._payment_methods = payment_methods

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentPolicyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentPolicyRequest of this PaymentPolicyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_types(self):
        """Gets the category_types of this PaymentPolicyRequest.

        This container is used to specify whether the payment business policy applies to motor vehicle listings, or if it applies to non-motor vehicle listings.

        :return: The category_types of this PaymentPolicyRequest.
        :rtype: List[CategoryType]
        """
        return self._category_types

    @category_types.setter
    def category_types(self, category_types):
        """Sets the category_types of this PaymentPolicyRequest.

        This container is used to specify whether the payment business policy applies to motor vehicle listings, or if it applies to non-motor vehicle listings.

        :param category_types: The category_types of this PaymentPolicyRequest.
        :type category_types: List[CategoryType]
        """

        self._category_types = category_types

    @property
    def deposit(self):
        """Gets the deposit of this PaymentPolicyRequest.


        :return: The deposit of this PaymentPolicyRequest.
        :rtype: Deposit
        """
        return self._deposit

    @deposit.setter
    def deposit(self, deposit):
        """Sets the deposit of this PaymentPolicyRequest.


        :param deposit: The deposit of this PaymentPolicyRequest.
        :type deposit: Deposit
        """

        self._deposit = deposit

    @property
    def description(self):
        """Gets the description of this PaymentPolicyRequest.

        A seller-defined description of the payment business policy. This description is only for the seller's use, and is not exposed on any eBay pages.  <br/><br/><b>Max length</b>: 250

        :return: The description of this PaymentPolicyRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PaymentPolicyRequest.

        A seller-defined description of the payment business policy. This description is only for the seller's use, and is not exposed on any eBay pages.  <br/><br/><b>Max length</b>: 250

        :param description: The description of this PaymentPolicyRequest.
        :type description: str
        """

        self._description = description

    @property
    def full_payment_due_in(self):
        """Gets the full_payment_due_in of this PaymentPolicyRequest.


        :return: The full_payment_due_in of this PaymentPolicyRequest.
        :rtype: TimeDuration
        """
        return self._full_payment_due_in

    @full_payment_due_in.setter
    def full_payment_due_in(self, full_payment_due_in):
        """Sets the full_payment_due_in of this PaymentPolicyRequest.


        :param full_payment_due_in: The full_payment_due_in of this PaymentPolicyRequest.
        :type full_payment_due_in: TimeDuration
        """

        self._full_payment_due_in = full_payment_due_in

    @property
    def immediate_pay(self):
        """Gets the immediate_pay of this PaymentPolicyRequest.

        This field should be included and set to <code>true</code> if the seller wants to require immediate payment from the buyer for: <ul><li>A fixed-price item</li><li>An auction item where the buyer is using the 'Buy it Now' option</li><li>A deposit for a motor vehicle listing</li></ul><br /><b>Default:</b> False

        :return: The immediate_pay of this PaymentPolicyRequest.
        :rtype: bool
        """
        return self._immediate_pay

    @immediate_pay.setter
    def immediate_pay(self, immediate_pay):
        """Sets the immediate_pay of this PaymentPolicyRequest.

        This field should be included and set to <code>true</code> if the seller wants to require immediate payment from the buyer for: <ul><li>A fixed-price item</li><li>An auction item where the buyer is using the 'Buy it Now' option</li><li>A deposit for a motor vehicle listing</li></ul><br /><b>Default:</b> False

        :param immediate_pay: The immediate_pay of this PaymentPolicyRequest.
        :type immediate_pay: bool
        """

        self._immediate_pay = immediate_pay

    @property
    def marketplace_id(self):
        """Gets the marketplace_id of this PaymentPolicyRequest.

        The ID of the eBay marketplace to which this payment business policy applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay API documentation</a>

        :return: The marketplace_id of this PaymentPolicyRequest.
        :rtype: str
        """
        return self._marketplace_id

    @marketplace_id.setter
    def marketplace_id(self, marketplace_id):
        """Sets the marketplace_id of this PaymentPolicyRequest.

        The ID of the eBay marketplace to which this payment business policy applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay API documentation</a>

        :param marketplace_id: The marketplace_id of this PaymentPolicyRequest.
        :type marketplace_id: str
        """

        self._marketplace_id = marketplace_id

    @property
    def name(self):
        """Gets the name of this PaymentPolicyRequest.

        A seller-defined name for this payment business policy. Names must be unique for policies assigned to the same marketplace.<br /><br /><b>Max length:</b> 64

        :return: The name of this PaymentPolicyRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PaymentPolicyRequest.

        A seller-defined name for this payment business policy. Names must be unique for policies assigned to the same marketplace.<br /><br /><b>Max length:</b> 64

        :param name: The name of this PaymentPolicyRequest.
        :type name: str
        """

        self._name = name

    @property
    def payment_instructions(self):
        """Gets the payment_instructions of this PaymentPolicyRequest.

        <p class=\"tablenote\"><b>Note:</b> DO NOT USE THIS FIELD. Payment instructions are no longer supported by payment business policies.</p>A free-form string field that allows sellers to add detailed payment instructions to their listings.

        :return: The payment_instructions of this PaymentPolicyRequest.
        :rtype: str
        """
        return self._payment_instructions

    @payment_instructions.setter
    def payment_instructions(self, payment_instructions):
        """Sets the payment_instructions of this PaymentPolicyRequest.

        <p class=\"tablenote\"><b>Note:</b> DO NOT USE THIS FIELD. Payment instructions are no longer supported by payment business policies.</p>A free-form string field that allows sellers to add detailed payment instructions to their listings.

        :param payment_instructions: The payment_instructions of this PaymentPolicyRequest.
        :type payment_instructions: str
        """

        self._payment_instructions = payment_instructions

    @property
    def payment_methods(self):
        """Gets the payment_methods of this PaymentPolicyRequest.

        <p class=\"tablenote\"><b>Note:</b> This field applies only when the seller needs to specify one or more offline payment methods. eBay now manages the electronic payment options available to buyers to pay for the item.</p>This array is used to specify one or more offline payment methods that will be accepted for payment that occurs off of eBay's platform.

        :return: The payment_methods of this PaymentPolicyRequest.
        :rtype: List[PaymentMethod]
        """
        return self._payment_methods

    @payment_methods.setter
    def payment_methods(self, payment_methods):
        """Sets the payment_methods of this PaymentPolicyRequest.

        <p class=\"tablenote\"><b>Note:</b> This field applies only when the seller needs to specify one or more offline payment methods. eBay now manages the electronic payment options available to buyers to pay for the item.</p>This array is used to specify one or more offline payment methods that will be accepted for payment that occurs off of eBay's platform.

        :param payment_methods: The payment_methods of this PaymentPolicyRequest.
        :type payment_methods: List[PaymentMethod]
        """

        self._payment_methods = payment_methods
