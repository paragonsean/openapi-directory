# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CompactCustomPolicyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_policy_id: str=None, label: str=None, name: str=None, policy_type: str=None):
        """CompactCustomPolicyResponse - a model defined in OpenAPI

        :param custom_policy_id: The custom_policy_id of this CompactCustomPolicyResponse.
        :param label: The label of this CompactCustomPolicyResponse.
        :param name: The name of this CompactCustomPolicyResponse.
        :param policy_type: The policy_type of this CompactCustomPolicyResponse.
        """
        self.openapi_types = {
            'custom_policy_id': str,
            'label': str,
            'name': str,
            'policy_type': str
        }

        self.attribute_map = {
            'custom_policy_id': 'customPolicyId',
            'label': 'label',
            'name': 'name',
            'policy_type': 'policyType'
        }

        self._custom_policy_id = custom_policy_id
        self._label = label
        self._name = name
        self._policy_type = policy_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompactCustomPolicyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompactCustomPolicyResponse of this CompactCustomPolicyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_policy_id(self):
        """Gets the custom_policy_id of this CompactCustomPolicyResponse.

        The unique custom policy identifier for the policy being returned.<br/><br/><span class=\"tablenote\"><strong>Note:</strong> This value is automatically assigned by the system when the policy is created.</span>

        :return: The custom_policy_id of this CompactCustomPolicyResponse.
        :rtype: str
        """
        return self._custom_policy_id

    @custom_policy_id.setter
    def custom_policy_id(self, custom_policy_id):
        """Sets the custom_policy_id of this CompactCustomPolicyResponse.

        The unique custom policy identifier for the policy being returned.<br/><br/><span class=\"tablenote\"><strong>Note:</strong> This value is automatically assigned by the system when the policy is created.</span>

        :param custom_policy_id: The custom_policy_id of this CompactCustomPolicyResponse.
        :type custom_policy_id: str
        """

        self._custom_policy_id = custom_policy_id

    @property
    def label(self):
        """Gets the label of this CompactCustomPolicyResponse.

        Customer-facing label shown on View Item pages for items to which the policy applies. This seller-defined string is displayed as a system-generated hyperlink pointing to detailed policy information.<br/><br/><b>Max length:</b> 65

        :return: The label of this CompactCustomPolicyResponse.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this CompactCustomPolicyResponse.

        Customer-facing label shown on View Item pages for items to which the policy applies. This seller-defined string is displayed as a system-generated hyperlink pointing to detailed policy information.<br/><br/><b>Max length:</b> 65

        :param label: The label of this CompactCustomPolicyResponse.
        :type label: str
        """

        self._label = label

    @property
    def name(self):
        """Gets the name of this CompactCustomPolicyResponse.

        The seller-defined name for the custom policy. Names must be unique for policies assigned to the same seller, policy type, and eBay marketplace.<br /><span class=\"tablenote\"><strong>Note:</strong> This field is visible only to the seller. </span><br /><br /><b>Max length:</b> 65

        :return: The name of this CompactCustomPolicyResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CompactCustomPolicyResponse.

        The seller-defined name for the custom policy. Names must be unique for policies assigned to the same seller, policy type, and eBay marketplace.<br /><span class=\"tablenote\"><strong>Note:</strong> This field is visible only to the seller. </span><br /><br /><b>Max length:</b> 65

        :param name: The name of this CompactCustomPolicyResponse.
        :type name: str
        """

        self._name = name

    @property
    def policy_type(self):
        """Gets the policy_type of this CompactCustomPolicyResponse.

        Specifies the type of Custom Policy being returned. <br/><br/>Two Custom Policy types are supported: <ul><li>Product Compliance (PRODUCT_COMPLIANCE)</li> <li>Takeback (TAKE_BACK)</li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:CustomPolicyTypeEnum'>eBay API documentation</a>

        :return: The policy_type of this CompactCustomPolicyResponse.
        :rtype: str
        """
        return self._policy_type

    @policy_type.setter
    def policy_type(self, policy_type):
        """Sets the policy_type of this CompactCustomPolicyResponse.

        Specifies the type of Custom Policy being returned. <br/><br/>Two Custom Policy types are supported: <ul><li>Product Compliance (PRODUCT_COMPLIANCE)</li> <li>Takeback (TAKE_BACK)</li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:CustomPolicyTypeEnum'>eBay API documentation</a>

        :param policy_type: The policy_type of this CompactCustomPolicyResponse.
        :type policy_type: str
        """

        self._policy_type = policy_type
