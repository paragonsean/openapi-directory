# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.category_type import CategoryType
from openapi_server.models.error import Error
from openapi_server.models.international_return_override_type import InternationalReturnOverrideType
from openapi_server.models.time_duration import TimeDuration
from openapi_server import util


class SetReturnPolicyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_types: List[CategoryType]=None, description: str=None, extended_holiday_returns_offered: bool=None, international_override: InternationalReturnOverrideType=None, marketplace_id: str=None, name: str=None, refund_method: str=None, restocking_fee_percentage: str=None, return_instructions: str=None, return_method: str=None, return_period: TimeDuration=None, return_policy_id: str=None, return_shipping_cost_payer: str=None, returns_accepted: bool=None, warnings: List[Error]=None):
        """SetReturnPolicyResponse - a model defined in OpenAPI

        :param category_types: The category_types of this SetReturnPolicyResponse.
        :param description: The description of this SetReturnPolicyResponse.
        :param extended_holiday_returns_offered: The extended_holiday_returns_offered of this SetReturnPolicyResponse.
        :param international_override: The international_override of this SetReturnPolicyResponse.
        :param marketplace_id: The marketplace_id of this SetReturnPolicyResponse.
        :param name: The name of this SetReturnPolicyResponse.
        :param refund_method: The refund_method of this SetReturnPolicyResponse.
        :param restocking_fee_percentage: The restocking_fee_percentage of this SetReturnPolicyResponse.
        :param return_instructions: The return_instructions of this SetReturnPolicyResponse.
        :param return_method: The return_method of this SetReturnPolicyResponse.
        :param return_period: The return_period of this SetReturnPolicyResponse.
        :param return_policy_id: The return_policy_id of this SetReturnPolicyResponse.
        :param return_shipping_cost_payer: The return_shipping_cost_payer of this SetReturnPolicyResponse.
        :param returns_accepted: The returns_accepted of this SetReturnPolicyResponse.
        :param warnings: The warnings of this SetReturnPolicyResponse.
        """
        self.openapi_types = {
            'category_types': List[CategoryType],
            'description': str,
            'extended_holiday_returns_offered': bool,
            'international_override': InternationalReturnOverrideType,
            'marketplace_id': str,
            'name': str,
            'refund_method': str,
            'restocking_fee_percentage': str,
            'return_instructions': str,
            'return_method': str,
            'return_period': TimeDuration,
            'return_policy_id': str,
            'return_shipping_cost_payer': str,
            'returns_accepted': bool,
            'warnings': List[Error]
        }

        self.attribute_map = {
            'category_types': 'categoryTypes',
            'description': 'description',
            'extended_holiday_returns_offered': 'extendedHolidayReturnsOffered',
            'international_override': 'internationalOverride',
            'marketplace_id': 'marketplaceId',
            'name': 'name',
            'refund_method': 'refundMethod',
            'restocking_fee_percentage': 'restockingFeePercentage',
            'return_instructions': 'returnInstructions',
            'return_method': 'returnMethod',
            'return_period': 'returnPeriod',
            'return_policy_id': 'returnPolicyId',
            'return_shipping_cost_payer': 'returnShippingCostPayer',
            'returns_accepted': 'returnsAccepted',
            'warnings': 'warnings'
        }

        self._category_types = category_types
        self._description = description
        self._extended_holiday_returns_offered = extended_holiday_returns_offered
        self._international_override = international_override
        self._marketplace_id = marketplace_id
        self._name = name
        self._refund_method = refund_method
        self._restocking_fee_percentage = restocking_fee_percentage
        self._return_instructions = return_instructions
        self._return_method = return_method
        self._return_period = return_period
        self._return_policy_id = return_policy_id
        self._return_shipping_cost_payer = return_shipping_cost_payer
        self._returns_accepted = returns_accepted
        self._warnings = warnings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetReturnPolicyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SetReturnPolicyResponse of this SetReturnPolicyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_types(self):
        """Gets the category_types of this SetReturnPolicyResponse.

        This field always returns <code>ALL_EXCLUDING_MOTORS_VEHICLES</code> for return business policies, since return business policies are not applicable to motor vehicle listings.

        :return: The category_types of this SetReturnPolicyResponse.
        :rtype: List[CategoryType]
        """
        return self._category_types

    @category_types.setter
    def category_types(self, category_types):
        """Sets the category_types of this SetReturnPolicyResponse.

        This field always returns <code>ALL_EXCLUDING_MOTORS_VEHICLES</code> for return business policies, since return business policies are not applicable to motor vehicle listings.

        :param category_types: The category_types of this SetReturnPolicyResponse.
        :type category_types: List[CategoryType]
        """

        self._category_types = category_types

    @property
    def description(self):
        """Gets the description of this SetReturnPolicyResponse.

        A seller-defined description of the return business policy. This description is only for the seller's use, and is not exposed on any eBay pages. This field is returned if set for the policy. <br/><br/><b>Max length</b>: 250

        :return: The description of this SetReturnPolicyResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SetReturnPolicyResponse.

        A seller-defined description of the return business policy. This description is only for the seller's use, and is not exposed on any eBay pages. This field is returned if set for the policy. <br/><br/><b>Max length</b>: 250

        :param description: The description of this SetReturnPolicyResponse.
        :type description: str
        """

        self._description = description

    @property
    def extended_holiday_returns_offered(self):
        """Gets the extended_holiday_returns_offered of this SetReturnPolicyResponse.

        <p class=\"tablenote\"><span  style=\"color: #dd1e31;\"><b>Important!</b></span> This field is deprecated, since eBay no longer supports extended holiday returns. This field should no longer be returned.</p> 

        :return: The extended_holiday_returns_offered of this SetReturnPolicyResponse.
        :rtype: bool
        """
        return self._extended_holiday_returns_offered

    @extended_holiday_returns_offered.setter
    def extended_holiday_returns_offered(self, extended_holiday_returns_offered):
        """Sets the extended_holiday_returns_offered of this SetReturnPolicyResponse.

        <p class=\"tablenote\"><span  style=\"color: #dd1e31;\"><b>Important!</b></span> This field is deprecated, since eBay no longer supports extended holiday returns. This field should no longer be returned.</p> 

        :param extended_holiday_returns_offered: The extended_holiday_returns_offered of this SetReturnPolicyResponse.
        :type extended_holiday_returns_offered: bool
        """

        self._extended_holiday_returns_offered = extended_holiday_returns_offered

    @property
    def international_override(self):
        """Gets the international_override of this SetReturnPolicyResponse.


        :return: The international_override of this SetReturnPolicyResponse.
        :rtype: InternationalReturnOverrideType
        """
        return self._international_override

    @international_override.setter
    def international_override(self, international_override):
        """Sets the international_override of this SetReturnPolicyResponse.


        :param international_override: The international_override of this SetReturnPolicyResponse.
        :type international_override: InternationalReturnOverrideType
        """

        self._international_override = international_override

    @property
    def marketplace_id(self):
        """Gets the marketplace_id of this SetReturnPolicyResponse.

        The ID of the eBay marketplace to which this return business policy applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay API documentation</a>

        :return: The marketplace_id of this SetReturnPolicyResponse.
        :rtype: str
        """
        return self._marketplace_id

    @marketplace_id.setter
    def marketplace_id(self, marketplace_id):
        """Sets the marketplace_id of this SetReturnPolicyResponse.

        The ID of the eBay marketplace to which this return business policy applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay API documentation</a>

        :param marketplace_id: The marketplace_id of this SetReturnPolicyResponse.
        :type marketplace_id: str
        """

        self._marketplace_id = marketplace_id

    @property
    def name(self):
        """Gets the name of this SetReturnPolicyResponse.

        A seller-defined name for this return business policy. Names must be unique for policies assigned to the same marketplace.<br /><br /><b>Max length:</b> 64

        :return: The name of this SetReturnPolicyResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SetReturnPolicyResponse.

        A seller-defined name for this return business policy. Names must be unique for policies assigned to the same marketplace.<br /><br /><b>Max length:</b> 64

        :param name: The name of this SetReturnPolicyResponse.
        :type name: str
        """

        self._name = name

    @property
    def refund_method(self):
        """Gets the refund_method of this SetReturnPolicyResponse.

        If a seller indicates that they will accept buyer returns, this value will be <code>MONEY_BACK</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:RefundMethodEnum'>eBay API documentation</a>

        :return: The refund_method of this SetReturnPolicyResponse.
        :rtype: str
        """
        return self._refund_method

    @refund_method.setter
    def refund_method(self, refund_method):
        """Sets the refund_method of this SetReturnPolicyResponse.

        If a seller indicates that they will accept buyer returns, this value will be <code>MONEY_BACK</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:RefundMethodEnum'>eBay API documentation</a>

        :param refund_method: The refund_method of this SetReturnPolicyResponse.
        :type refund_method: str
        """

        self._refund_method = refund_method

    @property
    def restocking_fee_percentage(self):
        """Gets the restocking_fee_percentage of this SetReturnPolicyResponse.

        <p class=\"tablenote\"><span  style=\"color: #dd1e31;\"><b>Important!</b></span> This field is deprecated, since eBay no longer allows sellers to charge a restocking fee for buyer remorse returns.</p>

        :return: The restocking_fee_percentage of this SetReturnPolicyResponse.
        :rtype: str
        """
        return self._restocking_fee_percentage

    @restocking_fee_percentage.setter
    def restocking_fee_percentage(self, restocking_fee_percentage):
        """Sets the restocking_fee_percentage of this SetReturnPolicyResponse.

        <p class=\"tablenote\"><span  style=\"color: #dd1e31;\"><b>Important!</b></span> This field is deprecated, since eBay no longer allows sellers to charge a restocking fee for buyer remorse returns.</p>

        :param restocking_fee_percentage: The restocking_fee_percentage of this SetReturnPolicyResponse.
        :type restocking_fee_percentage: str
        """

        self._restocking_fee_percentage = restocking_fee_percentage

    @property
    def return_instructions(self):
        """Gets the return_instructions of this SetReturnPolicyResponse.

        This text-based field provides more details on seller-specified return instructions. <p class=\"tablenote\"><span  style=\"color: #dd1e31;\"><b>Important!</b></span> This field is no longer supported on many eBay marketplaces. To see if a marketplace and eBay category does support this field, call <a href=\"/api-docs/sell/metadata/resources/marketplace/methods/getReturnPolicies\">getReturnPolicies</a> method of the <b>Metadata API</b>. Then you will look for the <b>policyDescriptionEnabled</b> field with a value of <code>true</code> for the eBay category.</span></p><br/><b>Max length</b>: 5000 (8000 for DE)

        :return: The return_instructions of this SetReturnPolicyResponse.
        :rtype: str
        """
        return self._return_instructions

    @return_instructions.setter
    def return_instructions(self, return_instructions):
        """Sets the return_instructions of this SetReturnPolicyResponse.

        This text-based field provides more details on seller-specified return instructions. <p class=\"tablenote\"><span  style=\"color: #dd1e31;\"><b>Important!</b></span> This field is no longer supported on many eBay marketplaces. To see if a marketplace and eBay category does support this field, call <a href=\"/api-docs/sell/metadata/resources/marketplace/methods/getReturnPolicies\">getReturnPolicies</a> method of the <b>Metadata API</b>. Then you will look for the <b>policyDescriptionEnabled</b> field with a value of <code>true</code> for the eBay category.</span></p><br/><b>Max length</b>: 5000 (8000 for DE)

        :param return_instructions: The return_instructions of this SetReturnPolicyResponse.
        :type return_instructions: str
        """

        self._return_instructions = return_instructions

    @property
    def return_method(self):
        """Gets the return_method of this SetReturnPolicyResponse.

        This field will be returned if the seller is willing and able to offer a replacement item as an alternative to 'Money Back'. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:ReturnMethodEnum'>eBay API documentation</a>

        :return: The return_method of this SetReturnPolicyResponse.
        :rtype: str
        """
        return self._return_method

    @return_method.setter
    def return_method(self, return_method):
        """Sets the return_method of this SetReturnPolicyResponse.

        This field will be returned if the seller is willing and able to offer a replacement item as an alternative to 'Money Back'. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:ReturnMethodEnum'>eBay API documentation</a>

        :param return_method: The return_method of this SetReturnPolicyResponse.
        :type return_method: str
        """

        self._return_method = return_method

    @property
    def return_period(self):
        """Gets the return_period of this SetReturnPolicyResponse.


        :return: The return_period of this SetReturnPolicyResponse.
        :rtype: TimeDuration
        """
        return self._return_period

    @return_period.setter
    def return_period(self, return_period):
        """Sets the return_period of this SetReturnPolicyResponse.


        :param return_period: The return_period of this SetReturnPolicyResponse.
        :type return_period: TimeDuration
        """

        self._return_period = return_period

    @property
    def return_policy_id(self):
        """Gets the return_policy_id of this SetReturnPolicyResponse.

        A unique eBay-assigned ID for a return business policy. This ID is generated when the policy is created.

        :return: The return_policy_id of this SetReturnPolicyResponse.
        :rtype: str
        """
        return self._return_policy_id

    @return_policy_id.setter
    def return_policy_id(self, return_policy_id):
        """Sets the return_policy_id of this SetReturnPolicyResponse.

        A unique eBay-assigned ID for a return business policy. This ID is generated when the policy is created.

        :param return_policy_id: The return_policy_id of this SetReturnPolicyResponse.
        :type return_policy_id: str
        """

        self._return_policy_id = return_policy_id

    @property
    def return_shipping_cost_payer(self):
        """Gets the return_shipping_cost_payer of this SetReturnPolicyResponse.

        This field indicates who is responsible for paying for the shipping charges for returned items. The field can be set to either <code>BUYER</code> or <code>SELLER</code>.  <br/><br/>Note that the seller is always responsible for return shipping costs for SNAD-related issues.  <br/><br/>This container will be returned unless the business policy states that the seller does not accept returns. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:ReturnShippingCostPayerEnum'>eBay API documentation</a>

        :return: The return_shipping_cost_payer of this SetReturnPolicyResponse.
        :rtype: str
        """
        return self._return_shipping_cost_payer

    @return_shipping_cost_payer.setter
    def return_shipping_cost_payer(self, return_shipping_cost_payer):
        """Sets the return_shipping_cost_payer of this SetReturnPolicyResponse.

        This field indicates who is responsible for paying for the shipping charges for returned items. The field can be set to either <code>BUYER</code> or <code>SELLER</code>.  <br/><br/>Note that the seller is always responsible for return shipping costs for SNAD-related issues.  <br/><br/>This container will be returned unless the business policy states that the seller does not accept returns. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:ReturnShippingCostPayerEnum'>eBay API documentation</a>

        :param return_shipping_cost_payer: The return_shipping_cost_payer of this SetReturnPolicyResponse.
        :type return_shipping_cost_payer: str
        """

        self._return_shipping_cost_payer = return_shipping_cost_payer

    @property
    def returns_accepted(self):
        """Gets the returns_accepted of this SetReturnPolicyResponse.

        If set to <code>true</code>, the seller accepts returns. If set to <code>false</code>, this field indicates that the seller does not accept returns.

        :return: The returns_accepted of this SetReturnPolicyResponse.
        :rtype: bool
        """
        return self._returns_accepted

    @returns_accepted.setter
    def returns_accepted(self, returns_accepted):
        """Sets the returns_accepted of this SetReturnPolicyResponse.

        If set to <code>true</code>, the seller accepts returns. If set to <code>false</code>, this field indicates that the seller does not accept returns.

        :param returns_accepted: The returns_accepted of this SetReturnPolicyResponse.
        :type returns_accepted: bool
        """

        self._returns_accepted = returns_accepted

    @property
    def warnings(self):
        """Gets the warnings of this SetReturnPolicyResponse.

        An array of one or more errors or warnings that were generated during the processing of the request. If there were no issues with the request, this array will return empty.

        :return: The warnings of this SetReturnPolicyResponse.
        :rtype: List[Error]
        """
        return self._warnings

    @warnings.setter
    def warnings(self, warnings):
        """Sets the warnings of this SetReturnPolicyResponse.

        An array of one or more errors or warnings that were generated during the processing of the request. If there were no issues with the request, this array will return empty.

        :param warnings: The warnings of this SetReturnPolicyResponse.
        :type warnings: List[Error]
        """

        self._warnings = warnings
