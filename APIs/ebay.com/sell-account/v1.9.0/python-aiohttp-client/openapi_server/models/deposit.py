# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server.models.payment_method import PaymentMethod
from openapi_server.models.time_duration import TimeDuration
from openapi_server import util


class Deposit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: Amount=None, due_in: TimeDuration=None, payment_methods: List[PaymentMethod]=None):
        """Deposit - a model defined in OpenAPI

        :param amount: The amount of this Deposit.
        :param due_in: The due_in of this Deposit.
        :param payment_methods: The payment_methods of this Deposit.
        """
        self.openapi_types = {
            'amount': Amount,
            'due_in': TimeDuration,
            'payment_methods': List[PaymentMethod]
        }

        self.attribute_map = {
            'amount': 'amount',
            'due_in': 'dueIn',
            'payment_methods': 'paymentMethods'
        }

        self._amount = amount
        self._due_in = due_in
        self._payment_methods = payment_methods

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Deposit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Deposit of this Deposit.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this Deposit.


        :return: The amount of this Deposit.
        :rtype: Amount
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this Deposit.


        :param amount: The amount of this Deposit.
        :type amount: Amount
        """

        self._amount = amount

    @property
    def due_in(self):
        """Gets the due_in of this Deposit.


        :return: The due_in of this Deposit.
        :rtype: TimeDuration
        """
        return self._due_in

    @due_in.setter
    def due_in(self, due_in):
        """Sets the due_in of this Deposit.


        :param due_in: The due_in of this Deposit.
        :type due_in: TimeDuration
        """

        self._due_in = due_in

    @property
    def payment_methods(self):
        """Gets the payment_methods of this Deposit.

        This array is no longer applicable and should not be used since eBay now manages the electronic payment options available to buyers to pay the deposit.

        :return: The payment_methods of this Deposit.
        :rtype: List[PaymentMethod]
        """
        return self._payment_methods

    @payment_methods.setter
    def payment_methods(self, payment_methods):
        """Sets the payment_methods of this Deposit.

        This array is no longer applicable and should not be used since eBay now manages the electronic payment options available to buyers to pay the deposit.

        :param payment_methods: The payment_methods of this Deposit.
        :type payment_methods: List[PaymentMethod]
        """

        self._payment_methods = payment_methods
