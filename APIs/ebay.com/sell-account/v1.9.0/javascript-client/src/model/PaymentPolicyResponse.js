/**
 * Account API
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * The version of the OpenAPI document: v1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PaymentPolicy from './PaymentPolicy';

/**
 * The PaymentPolicyResponse model module.
 * @module model/PaymentPolicyResponse
 * @version v1.9.0
 */
class PaymentPolicyResponse {
    /**
     * Constructs a new <code>PaymentPolicyResponse</code>.
     * The response payload for the &lt;b&gt;getPaymentPolicies&lt;/b&gt; method. &lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note&lt;/b&gt;: Pagination has not yet been enabled for &lt;b&gt;getPaymentPolicies&lt;/b&gt;, so all of the pagination-related fields are for future use.&lt;/span&gt;
     * @alias module:model/PaymentPolicyResponse
     */
    constructor() { 
        
        PaymentPolicyResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PaymentPolicyResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentPolicyResponse} obj Optional instance to populate.
     * @return {module:model/PaymentPolicyResponse} The populated <code>PaymentPolicyResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentPolicyResponse();

            if (data.hasOwnProperty('href')) {
                obj['href'] = ApiClient.convertToType(data['href'], 'String');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('next')) {
                obj['next'] = ApiClient.convertToType(data['next'], 'String');
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
            if (data.hasOwnProperty('paymentPolicies')) {
                obj['paymentPolicies'] = ApiClient.convertToType(data['paymentPolicies'], [PaymentPolicy]);
            }
            if (data.hasOwnProperty('prev')) {
                obj['prev'] = ApiClient.convertToType(data['prev'], 'String');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentPolicyResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentPolicyResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['href'] && !(typeof data['href'] === 'string' || data['href'] instanceof String)) {
            throw new Error("Expected the field `href` to be a primitive type in the JSON string but got " + data['href']);
        }
        // ensure the json data is a string
        if (data['next'] && !(typeof data['next'] === 'string' || data['next'] instanceof String)) {
            throw new Error("Expected the field `next` to be a primitive type in the JSON string but got " + data['next']);
        }
        if (data['paymentPolicies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['paymentPolicies'])) {
                throw new Error("Expected the field `paymentPolicies` to be an array in the JSON data but got " + data['paymentPolicies']);
            }
            // validate the optional field `paymentPolicies` (array)
            for (const item of data['paymentPolicies']) {
                PaymentPolicy.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['prev'] && !(typeof data['prev'] === 'string' || data['prev'] instanceof String)) {
            throw new Error("Expected the field `prev` to be a primitive type in the JSON string but got " + data['prev']);
        }

        return true;
    }


}



/**
 * This field is for future use.
 * @member {String} href
 */
PaymentPolicyResponse.prototype['href'] = undefined;

/**
 * This field is for future use.
 * @member {Number} limit
 */
PaymentPolicyResponse.prototype['limit'] = undefined;

/**
 * This field is for future use.
 * @member {String} next
 */
PaymentPolicyResponse.prototype['next'] = undefined;

/**
 * This field is for future use.
 * @member {Number} offset
 */
PaymentPolicyResponse.prototype['offset'] = undefined;

/**
 * A list of all of the seller's payment business policies defined for the specified marketplace. This array will be returned as empty if no payment business policies are defined for the specified marketplace.
 * @member {Array.<module:model/PaymentPolicy>} paymentPolicies
 */
PaymentPolicyResponse.prototype['paymentPolicies'] = undefined;

/**
 * This field is for future use.
 * @member {String} prev
 */
PaymentPolicyResponse.prototype['prev'] = undefined;

/**
 * The total number of payment business policies retrieved in the result set.  <br/><br/>If no payment business policies are defined for the specified marketplace, this field is returned with a value of <code>0</code>.
 * @member {Number} total
 */
PaymentPolicyResponse.prototype['total'] = undefined;






export default PaymentPolicyResponse;

