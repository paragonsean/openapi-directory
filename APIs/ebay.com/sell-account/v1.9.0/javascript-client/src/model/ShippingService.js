/**
 * Account API
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * The version of the OpenAPI document: v1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';
import RegionSet from './RegionSet';

/**
 * The ShippingService model module.
 * @module model/ShippingService
 * @version v1.9.0
 */
class ShippingService {
    /**
     * Constructs a new <code>ShippingService</code>.
     * This type is used by the &lt;b&gt;shippingServices&lt;/b&gt; array, an array that provides details about every domestic and international shipping service option that is defined for the policy.
     * @alias module:model/ShippingService
     */
    constructor() { 
        
        ShippingService.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShippingService</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShippingService} obj Optional instance to populate.
     * @return {module:model/ShippingService} The populated <code>ShippingService</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShippingService();

            if (data.hasOwnProperty('additionalShippingCost')) {
                obj['additionalShippingCost'] = Amount.constructFromObject(data['additionalShippingCost']);
            }
            if (data.hasOwnProperty('buyerResponsibleForPickup')) {
                obj['buyerResponsibleForPickup'] = ApiClient.convertToType(data['buyerResponsibleForPickup'], 'Boolean');
            }
            if (data.hasOwnProperty('buyerResponsibleForShipping')) {
                obj['buyerResponsibleForShipping'] = ApiClient.convertToType(data['buyerResponsibleForShipping'], 'Boolean');
            }
            if (data.hasOwnProperty('cashOnDeliveryFee')) {
                obj['cashOnDeliveryFee'] = Amount.constructFromObject(data['cashOnDeliveryFee']);
            }
            if (data.hasOwnProperty('freeShipping')) {
                obj['freeShipping'] = ApiClient.convertToType(data['freeShipping'], 'Boolean');
            }
            if (data.hasOwnProperty('shipToLocations')) {
                obj['shipToLocations'] = RegionSet.constructFromObject(data['shipToLocations']);
            }
            if (data.hasOwnProperty('shippingCarrierCode')) {
                obj['shippingCarrierCode'] = ApiClient.convertToType(data['shippingCarrierCode'], 'String');
            }
            if (data.hasOwnProperty('shippingCost')) {
                obj['shippingCost'] = Amount.constructFromObject(data['shippingCost']);
            }
            if (data.hasOwnProperty('shippingServiceCode')) {
                obj['shippingServiceCode'] = ApiClient.convertToType(data['shippingServiceCode'], 'String');
            }
            if (data.hasOwnProperty('sortOrder')) {
                obj['sortOrder'] = ApiClient.convertToType(data['sortOrder'], 'Number');
            }
            if (data.hasOwnProperty('surcharge')) {
                obj['surcharge'] = Amount.constructFromObject(data['surcharge']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShippingService</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShippingService</code>.
     */
    static validateJSON(data) {
        // validate the optional field `additionalShippingCost`
        if (data['additionalShippingCost']) { // data not null
          Amount.validateJSON(data['additionalShippingCost']);
        }
        // validate the optional field `cashOnDeliveryFee`
        if (data['cashOnDeliveryFee']) { // data not null
          Amount.validateJSON(data['cashOnDeliveryFee']);
        }
        // validate the optional field `shipToLocations`
        if (data['shipToLocations']) { // data not null
          RegionSet.validateJSON(data['shipToLocations']);
        }
        // ensure the json data is a string
        if (data['shippingCarrierCode'] && !(typeof data['shippingCarrierCode'] === 'string' || data['shippingCarrierCode'] instanceof String)) {
            throw new Error("Expected the field `shippingCarrierCode` to be a primitive type in the JSON string but got " + data['shippingCarrierCode']);
        }
        // validate the optional field `shippingCost`
        if (data['shippingCost']) { // data not null
          Amount.validateJSON(data['shippingCost']);
        }
        // ensure the json data is a string
        if (data['shippingServiceCode'] && !(typeof data['shippingServiceCode'] === 'string' || data['shippingServiceCode'] instanceof String)) {
            throw new Error("Expected the field `shippingServiceCode` to be a primitive type in the JSON string but got " + data['shippingServiceCode']);
        }
        // validate the optional field `surcharge`
        if (data['surcharge']) { // data not null
          Amount.validateJSON(data['surcharge']);
        }

        return true;
    }


}



/**
 * @member {module:model/Amount} additionalShippingCost
 */
ShippingService.prototype['additionalShippingCost'] = undefined;

/**
 * This field should be included and set to <code>true</code> for a motor vehicle listing if it will be the buyer's responsibility to pick up the purchased motor vehicle after full payment is made. <br /><br />This field is only applicable to motor vehicle listings. In the majority of motor vehicle listings, the seller does make the buyer responsible for pickup or shipment of the vehicle. <br/><br/>This field is returned if set.<br/><br/><b>Default</b>: false
 * @member {Boolean} buyerResponsibleForPickup
 */
ShippingService.prototype['buyerResponsibleForPickup'] = undefined;

/**
 * This field should be included and set to <code>true</code> for a motor vehicle listing if it will be the buyer's responsibility to arrange for shipment of a purchased motor vehicle after full payment is made. <br /><br />This field is only applicable to motor vehicle listings. In the majority of motor vehicle listings, the seller does make the buyer responsible for pickup or shipment of the vehicle. <br/><br/>This field is returned if set.<br/><br/><b>Default</b>: false
 * @member {Boolean} buyerResponsibleForShipping
 */
ShippingService.prototype['buyerResponsibleForShipping'] = undefined;

/**
 * @member {module:model/Amount} cashOnDeliveryFee
 */
ShippingService.prototype['cashOnDeliveryFee'] = undefined;

/**
 * This field is included and set to <code>true</code> if the seller offers a free shipping option to the buyer. <br /><br />This field can only be included and set to <code>true</code> for the first domestic shipping service option specified in the <b>shippingServices</b> container (it is ignored if set for subsequent shipping services or for any international shipping service option). <br /><br />The first specified shipping service option has a <b>sortOrder</b> value of <code>1</code> or if the <b>sortOrderId</b> field is not used, it is the shipping service option that's specified first in the <b>shippingServices</b> container.<br/><br/>This container is returned if set.
 * @member {Boolean} freeShipping
 */
ShippingService.prototype['freeShipping'] = undefined;

/**
 * @member {module:model/RegionSet} shipToLocations
 */
ShippingService.prototype['shipToLocations'] = undefined;

/**
 * This field sets/indicates the shipping carrier, such as <code>USPS</code>, <code>FedEx</code>, or <code>UPS</code>. Although this field uses the <b>string</b> type, the seller must pass in a pre-defined enumeration value here. <br /><br />For a full list of shipping carrier enum values for a specified eBay marketplace, the <b>GeteBayDetails</b> call of the <b>Trading API</b> can be used, and the <b>DetailName</b> field's value should be set to <code>ShippingCarrierDetails</code>. The enum values for each shipping carriers can be found in each <b>ShippingCarrierDetails.ShippingCarrier</b> field in the response payload.<br/><br/> This field is actually optional, as the shipping carrier is also tied into the <b>shippingServiceCode</b> enum value, and that field is required for every specified shipping service option.<br/><br/>This field is returned if set.
 * @member {String} shippingCarrierCode
 */
ShippingService.prototype['shippingCarrierCode'] = undefined;

/**
 * @member {module:model/Amount} shippingCost
 */
ShippingService.prototype['shippingCost'] = undefined;

/**
 * This field sets/indicates the domestic or international shipping service option, such as <code>USPSPriority</code>, <code>FedEx2Day</code>, or <code>UPS3rdDay</code>. Although this field uses the <b>string</b> type, the seller must pass in a pre-defined enumeration value here. <br /><br />For a full list of shipping service option enum values for a specified eBay marketplace, the <b>GeteBayDetails</b> call of the <b>Trading API</b> can be used, and the <b>DetailName</b> field's value should be set to <code>ShippingServiceDetails</code>. <br /><br />The enum values for each shipping service option can be found in each <b>ShippingServiceDetails.ShippingService</b> field in the response payload. The seller must make sure that the shipping service option is still valid, which is indicated by a <code>true</code> value in the corresponding <b>ValidForSellingFlow</b> boolean field. International shipping service options are typically returned at the top of the response payload, and are indicated by an <b>InternationalService</b> boolean field that reads <code>true</code>. <br /><br />The <b>InternationalService</b> boolean field is not returned at all for domestic shipping service options. <br/><br/> This field is required for every specified shipping service option.<br/><br/>This field is returned if set.
 * @member {String} shippingServiceCode
 */
ShippingService.prototype['shippingServiceCode'] = undefined;

/**
 * The integer value set in this field controls the order of the corresponding domestic or international shipping service option in the View Item and Checkout pages. <br/><br/>Sellers can specify up to four domestic shipping services (in four separate <b>shippingService</b> containers), so valid values are 1, 2, 3, and 4. A shipping service option with a <b>sortOrder</b> value of <code>1</code> appears at the top of View Item and Checkout pages. Conversely, a shipping service option with a <b>sortOrder</b> value of <code>1</code> appears at the bottom of the list. <br/><br/>Sellers can specify up to five international shipping services (in five separate <b>shippingService</b> containers), so valid values for international shipping services are 1, 2, 3, 4, and 5. Similarly to domestic shipping service options, the <b>sortOrder</b> value of a international shipping service option controls the placement of that shipping service option in the View Item and Checkout pages. <br/><br/>If the <b>sortOrder</b> field is not supplied, the order of domestic and international shipping service options is determined by the order in which they are listed in the API call. <br/><br/><b>Min</b>: 1. <b>Max</b>: 4 (for domestic shipping service) or 5 (for international shipping service).
 * @member {Number} sortOrder
 */
ShippingService.prototype['sortOrder'] = undefined;

/**
 * @member {module:model/Amount} surcharge
 */
ShippingService.prototype['surcharge'] = undefined;






export default ShippingService;

