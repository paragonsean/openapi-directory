/**
 * Account API
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * The version of the OpenAPI document: v1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PaymentsProgramOnboardingSteps model module.
 * @module model/PaymentsProgramOnboardingSteps
 * @version v1.9.0
 */
class PaymentsProgramOnboardingSteps {
    /**
     * Constructs a new <code>PaymentsProgramOnboardingSteps</code>.
     * The payments program onboarding steps, status, and link.
     * @alias module:model/PaymentsProgramOnboardingSteps
     */
    constructor() { 
        
        PaymentsProgramOnboardingSteps.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PaymentsProgramOnboardingSteps</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentsProgramOnboardingSteps} obj Optional instance to populate.
     * @return {module:model/PaymentsProgramOnboardingSteps} The populated <code>PaymentsProgramOnboardingSteps</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentsProgramOnboardingSteps();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('webUrl')) {
                obj['webUrl'] = ApiClient.convertToType(data['webUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentsProgramOnboardingSteps</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentsProgramOnboardingSteps</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['webUrl'] && !(typeof data['webUrl'] === 'string' || data['webUrl'] instanceof String)) {
            throw new Error("Expected the field `webUrl` to be a primitive type in the JSON string but got " + data['webUrl']);
        }

        return true;
    }


}



/**
 * The name of the step in the steps array. Over time, these names are subject to change as processes change. The output sample contains example step names. Review an actual call response for updated step names. 
 * @member {String} name
 */
PaymentsProgramOnboardingSteps.prototype['name'] = undefined;

/**
 * This enumeration value indicates the status of the associated step. <p> <span class=\"tablenote\"><strong>Note:</strong> Only one step can be <code>IN_PROGRESS</code> at a time.</span></p> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:PaymentsProgramOnboardingStepStatus'>eBay API documentation</a>
 * @member {String} status
 */
PaymentsProgramOnboardingSteps.prototype['status'] = undefined;

/**
 * This URL provides access to the <code>IN_PROGRESS</code> step.
 * @member {String} webUrl
 */
PaymentsProgramOnboardingSteps.prototype['webUrl'] = undefined;






export default PaymentsProgramOnboardingSteps;

