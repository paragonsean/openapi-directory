/**
 * Account API
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * The version of the OpenAPI document: v1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomPolicy model module.
 * @module model/CustomPolicy
 * @version v1.9.0
 */
class CustomPolicy {
    /**
     * Constructs a new <code>CustomPolicy</code>.
     * This container defines a seller&#39;s custom policy identified by policy ID for the selected eBay marketplace. A successful call returns the requested policy information.
     * @alias module:model/CustomPolicy
     */
    constructor() { 
        
        CustomPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomPolicy} obj Optional instance to populate.
     * @return {module:model/CustomPolicy} The populated <code>CustomPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomPolicy();

            if (data.hasOwnProperty('customPolicyId')) {
                obj['customPolicyId'] = ApiClient.convertToType(data['customPolicyId'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('policyType')) {
                obj['policyType'] = ApiClient.convertToType(data['policyType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['customPolicyId'] && !(typeof data['customPolicyId'] === 'string' || data['customPolicyId'] instanceof String)) {
            throw new Error("Expected the field `customPolicyId` to be a primitive type in the JSON string but got " + data['customPolicyId']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['policyType'] && !(typeof data['policyType'] === 'string' || data['policyType'] instanceof String)) {
            throw new Error("Expected the field `policyType` to be a primitive type in the JSON string but got " + data['policyType']);
        }

        return true;
    }


}



/**
 * The unique custom policy identifier for a policy.<br/><br/><span class=\"tablenote\"><strong>Note:</strong> This value is automatically assigned by the system when the policy is created.</span>
 * @member {String} customPolicyId
 */
CustomPolicy.prototype['customPolicyId'] = undefined;

/**
 * Details of the seller's specific policy and terms associated with the policy. Buyers access this information from the View Item page for items to which the policy has been applied.<br/><br/><b>Max length:</b> 15,000
 * @member {String} description
 */
CustomPolicy.prototype['description'] = undefined;

/**
 * Customer-facing label shown on View Item pages for items to which the policy applies. This seller-defined string is displayed as a system-generated hyperlink pointing to detailed policy information.<br/><br/><b>Max length:</b> 65
 * @member {String} label
 */
CustomPolicy.prototype['label'] = undefined;

/**
 * The seller-defined name for the custom policy. Names must be unique for policies assigned to the same seller, policy type, and eBay marketplace.<br /><span class=\"tablenote\"><strong>Note:</strong> This field is visible only to the seller. </span><br/><br/><b>Max length:</b> 65
 * @member {String} name
 */
CustomPolicy.prototype['name'] = undefined;

/**
 * Specifies the type of Custom Policy. <br/><br/>Two Custom Policy types are supported: <ul><li>Product Compliance (PRODUCT_COMPLIANCE)</li> <li>Takeback (TAKE_BACK)</li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:CustomPolicyTypeEnum'>eBay API documentation</a>
 * @member {String} policyType
 */
CustomPolicy.prototype['policyType'] = undefined;






export default CustomPolicy;

