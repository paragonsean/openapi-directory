/**
 * Account API
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * The version of the OpenAPI document: v1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Program from './Program';

/**
 * The Programs model module.
 * @module model/Programs
 * @version v1.9.0
 */
class Programs {
    /**
     * Constructs a new <code>Programs</code>.
     * The base response type of the &lt;b&gt;getOptedInPrograms&lt;/b&gt; method.
     * @alias module:model/Programs
     */
    constructor() { 
        
        Programs.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Programs</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Programs} obj Optional instance to populate.
     * @return {module:model/Programs} The populated <code>Programs</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Programs();

            if (data.hasOwnProperty('programs')) {
                obj['programs'] = ApiClient.convertToType(data['programs'], [Program]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Programs</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Programs</code>.
     */
    static validateJSON(data) {
        if (data['programs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['programs'])) {
                throw new Error("Expected the field `programs` to be an array in the JSON data but got " + data['programs']);
            }
            // validate the optional field `programs` (array)
            for (const item of data['programs']) {
                Program.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * An array of seller programs that the seller's account is opted in to.
 * @member {Array.<module:model/Program>} programs
 */
Programs.prototype['programs'] = undefined;






export default Programs;

