/**
 * Account API
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * The version of the OpenAPI document: v1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Region from './Region';

/**
 * The RegionSet model module.
 * @module model/RegionSet
 * @version v1.9.0
 */
class RegionSet {
    /**
     * Constructs a new <code>RegionSet</code>.
     * This type consists of the &lt;b&gt;regionIncluded&lt;/b&gt; and &lt;b&gt;regionExcluded&lt;/b&gt; arrays, which indicate the areas to where the seller does and doesn&#39;t ship.
     * @alias module:model/RegionSet
     */
    constructor() { 
        
        RegionSet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RegionSet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RegionSet} obj Optional instance to populate.
     * @return {module:model/RegionSet} The populated <code>RegionSet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RegionSet();

            if (data.hasOwnProperty('regionExcluded')) {
                obj['regionExcluded'] = ApiClient.convertToType(data['regionExcluded'], [Region]);
            }
            if (data.hasOwnProperty('regionIncluded')) {
                obj['regionIncluded'] = ApiClient.convertToType(data['regionIncluded'], [Region]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RegionSet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RegionSet</code>.
     */
    static validateJSON(data) {
        if (data['regionExcluded']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['regionExcluded'])) {
                throw new Error("Expected the field `regionExcluded` to be an array in the JSON data but got " + data['regionExcluded']);
            }
            // validate the optional field `regionExcluded` (array)
            for (const item of data['regionExcluded']) {
                Region.validateJSON(item);
            };
        }
        if (data['regionIncluded']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['regionIncluded'])) {
                throw new Error("Expected the field `regionIncluded` to be an array in the JSON data but got " + data['regionIncluded']);
            }
            // validate the optional field `regionIncluded` (array)
            for (const item of data['regionIncluded']) {
                Region.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * An array of one or more <b>regionName</b> values that specify the areas to where a seller does not ship. A <b>regionExcluded</b> list should only be set in the top-level <b>shipToLocations</b> container and not within the <b>shippingServices.shipToLocations</b> container used to specify which shipping regions are serviced by each available shipping service option. <p>Many sellers are willing to ship to many international locations, but they may want to exclude some world regions or some countries as places they are willing to ship to.<br/><br/>This array will be returned as empty if no shipping regions are excluded with the fulfillment business policy.<br /> <br /><span class=\"tablenote\"><b>Note: </b> The <b>regionExcluded</b> array is not applicable for motor vehicle business policies on the US, CA, or UK marketplaces. If this array is used in a <b>createFulfillmentPolicy</b> or <b>updateFulfillmentPolicy</b> request, it will be ignored.</span>
 * @member {Array.<module:model/Region>} regionExcluded
 */
RegionSet.prototype['regionExcluded'] = undefined;

/**
 * An array of one or more <b>regionName</b> fields that specify the areas to where a seller ships. <br />Each eBay marketplace supports its own set of allowable shipping locations.<br /> <br /><span class=\"tablenote\"><b>Note: </b> The <b>regionIncluded</b> array is not applicable for motor vehicle business policies on the US, CA, or UK marketplaces. If this array is used in a <b>createFulfillmentPolicy</b> or <b>updateFulfillmentPolicy</b> request, it will be ignored.</span>
 * @member {Array.<module:model/Region>} regionIncluded
 */
RegionSet.prototype['regionIncluded'] = undefined;






export default RegionSet;

