/**
 * Account API
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * The version of the OpenAPI document: v1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SellerEligibilityResponse from './SellerEligibilityResponse';

/**
 * The SellerEligibilityMultiProgramResponse model module.
 * @module model/SellerEligibilityMultiProgramResponse
 * @version v1.9.0
 */
class SellerEligibilityMultiProgramResponse {
    /**
     * Constructs a new <code>SellerEligibilityMultiProgramResponse</code>.
     * The base response of the &lt;b&gt;getAdvertisingEligibility&lt;/b&gt; method that contains the seller eligibility information for one or more advertising programs.
     * @alias module:model/SellerEligibilityMultiProgramResponse
     */
    constructor() { 
        
        SellerEligibilityMultiProgramResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SellerEligibilityMultiProgramResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SellerEligibilityMultiProgramResponse} obj Optional instance to populate.
     * @return {module:model/SellerEligibilityMultiProgramResponse} The populated <code>SellerEligibilityMultiProgramResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SellerEligibilityMultiProgramResponse();

            if (data.hasOwnProperty('advertisingEligibility')) {
                obj['advertisingEligibility'] = ApiClient.convertToType(data['advertisingEligibility'], [SellerEligibilityResponse]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SellerEligibilityMultiProgramResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SellerEligibilityMultiProgramResponse</code>.
     */
    static validateJSON(data) {
        if (data['advertisingEligibility']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['advertisingEligibility'])) {
                throw new Error("Expected the field `advertisingEligibility` to be an array in the JSON data but got " + data['advertisingEligibility']);
            }
            // validate the optional field `advertisingEligibility` (array)
            for (const item of data['advertisingEligibility']) {
                SellerEligibilityResponse.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * An array of response fields that define the seller eligibility for eBay adverstising programs.
 * @member {Array.<module:model/SellerEligibilityResponse>} advertisingEligibility
 */
SellerEligibilityMultiProgramResponse.prototype['advertisingEligibility'] = undefined;






export default SellerEligibilityMultiProgramResponse;

