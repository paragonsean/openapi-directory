/**
 * Account API
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * The version of the OpenAPI document: v1.9.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentsProgramOnboardingResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentsProgramOnboardingResponse::OAIPaymentsProgramOnboardingResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentsProgramOnboardingResponse::OAIPaymentsProgramOnboardingResponse() {
    this->initializeModel();
}

OAIPaymentsProgramOnboardingResponse::~OAIPaymentsProgramOnboardingResponse() {}

void OAIPaymentsProgramOnboardingResponse::initializeModel() {

    m_onboarding_status_isSet = false;
    m_onboarding_status_isValid = false;

    m_steps_isSet = false;
    m_steps_isValid = false;
}

void OAIPaymentsProgramOnboardingResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentsProgramOnboardingResponse::fromJsonObject(QJsonObject json) {

    m_onboarding_status_isValid = ::OpenAPI::fromJsonValue(m_onboarding_status, json[QString("onboardingStatus")]);
    m_onboarding_status_isSet = !json[QString("onboardingStatus")].isNull() && m_onboarding_status_isValid;

    m_steps_isValid = ::OpenAPI::fromJsonValue(m_steps, json[QString("steps")]);
    m_steps_isSet = !json[QString("steps")].isNull() && m_steps_isValid;
}

QString OAIPaymentsProgramOnboardingResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentsProgramOnboardingResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_onboarding_status_isSet) {
        obj.insert(QString("onboardingStatus"), ::OpenAPI::toJsonValue(m_onboarding_status));
    }
    if (m_steps.size() > 0) {
        obj.insert(QString("steps"), ::OpenAPI::toJsonValue(m_steps));
    }
    return obj;
}

QString OAIPaymentsProgramOnboardingResponse::getOnboardingStatus() const {
    return m_onboarding_status;
}
void OAIPaymentsProgramOnboardingResponse::setOnboardingStatus(const QString &onboarding_status) {
    m_onboarding_status = onboarding_status;
    m_onboarding_status_isSet = true;
}

bool OAIPaymentsProgramOnboardingResponse::is_onboarding_status_Set() const{
    return m_onboarding_status_isSet;
}

bool OAIPaymentsProgramOnboardingResponse::is_onboarding_status_Valid() const{
    return m_onboarding_status_isValid;
}

QList<OAIPaymentsProgramOnboardingSteps> OAIPaymentsProgramOnboardingResponse::getSteps() const {
    return m_steps;
}
void OAIPaymentsProgramOnboardingResponse::setSteps(const QList<OAIPaymentsProgramOnboardingSteps> &steps) {
    m_steps = steps;
    m_steps_isSet = true;
}

bool OAIPaymentsProgramOnboardingResponse::is_steps_Set() const{
    return m_steps_isSet;
}

bool OAIPaymentsProgramOnboardingResponse::is_steps_Valid() const{
    return m_steps_isValid;
}

bool OAIPaymentsProgramOnboardingResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_onboarding_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_steps.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentsProgramOnboardingResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
