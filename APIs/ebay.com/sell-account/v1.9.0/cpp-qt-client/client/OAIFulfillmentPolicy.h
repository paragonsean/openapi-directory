/**
 * Account API
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * The version of the OpenAPI document: v1.9.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFulfillmentPolicy.h
 *
 * This type is used by the &lt;b&gt;fulfillmentPolicy&lt;/b&gt; response container, a container which defines a seller&#39;s fulfillment policy for a specific marketplace.
 */

#ifndef OAIFulfillmentPolicy_H
#define OAIFulfillmentPolicy_H

#include <QJsonObject>

#include "OAICategoryType.h"
#include "OAIRegionSet.h"
#include "OAIShippingOption.h"
#include "OAITimeDuration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICategoryType;
class OAITimeDuration;
class OAIRegionSet;
class OAIShippingOption;

class OAIFulfillmentPolicy : public OAIObject {
public:
    OAIFulfillmentPolicy();
    OAIFulfillmentPolicy(QString json);
    ~OAIFulfillmentPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICategoryType> getCategoryTypes() const;
    void setCategoryTypes(const QList<OAICategoryType> &category_types);
    bool is_category_types_Set() const;
    bool is_category_types_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isFreightShipping() const;
    void setFreightShipping(const bool &freight_shipping);
    bool is_freight_shipping_Set() const;
    bool is_freight_shipping_Valid() const;

    QString getFulfillmentPolicyId() const;
    void setFulfillmentPolicyId(const QString &fulfillment_policy_id);
    bool is_fulfillment_policy_id_Set() const;
    bool is_fulfillment_policy_id_Valid() const;

    bool isGlobalShipping() const;
    void setGlobalShipping(const bool &global_shipping);
    bool is_global_shipping_Set() const;
    bool is_global_shipping_Valid() const;

    OAITimeDuration getHandlingTime() const;
    void setHandlingTime(const OAITimeDuration &handling_time);
    bool is_handling_time_Set() const;
    bool is_handling_time_Valid() const;

    bool isLocalPickup() const;
    void setLocalPickup(const bool &local_pickup);
    bool is_local_pickup_Set() const;
    bool is_local_pickup_Valid() const;

    QString getMarketplaceId() const;
    void setMarketplaceId(const QString &marketplace_id);
    bool is_marketplace_id_Set() const;
    bool is_marketplace_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isPickupDropOff() const;
    void setPickupDropOff(const bool &pickup_drop_off);
    bool is_pickup_drop_off_Set() const;
    bool is_pickup_drop_off_Valid() const;

    OAIRegionSet getShipToLocations() const;
    void setShipToLocations(const OAIRegionSet &ship_to_locations);
    bool is_ship_to_locations_Set() const;
    bool is_ship_to_locations_Valid() const;

    QList<OAIShippingOption> getShippingOptions() const;
    void setShippingOptions(const QList<OAIShippingOption> &shipping_options);
    bool is_shipping_options_Set() const;
    bool is_shipping_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICategoryType> m_category_types;
    bool m_category_types_isSet;
    bool m_category_types_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_freight_shipping;
    bool m_freight_shipping_isSet;
    bool m_freight_shipping_isValid;

    QString m_fulfillment_policy_id;
    bool m_fulfillment_policy_id_isSet;
    bool m_fulfillment_policy_id_isValid;

    bool m_global_shipping;
    bool m_global_shipping_isSet;
    bool m_global_shipping_isValid;

    OAITimeDuration m_handling_time;
    bool m_handling_time_isSet;
    bool m_handling_time_isValid;

    bool m_local_pickup;
    bool m_local_pickup_isSet;
    bool m_local_pickup_isValid;

    QString m_marketplace_id;
    bool m_marketplace_id_isSet;
    bool m_marketplace_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_pickup_drop_off;
    bool m_pickup_drop_off_isSet;
    bool m_pickup_drop_off_isValid;

    OAIRegionSet m_ship_to_locations;
    bool m_ship_to_locations_isSet;
    bool m_ship_to_locations_isValid;

    QList<OAIShippingOption> m_shipping_options;
    bool m_shipping_options_isSet;
    bool m_shipping_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFulfillmentPolicy)

#endif // OAIFulfillmentPolicy_H
