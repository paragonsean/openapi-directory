/**
 * Account API
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * The version of the OpenAPI document: v1.9.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISetReturnPolicyResponse.h
 *
 * A complex type that is populated with a response containing a return policies.
 */

#ifndef OAISetReturnPolicyResponse_H
#define OAISetReturnPolicyResponse_H

#include <QJsonObject>

#include "OAICategoryType.h"
#include "OAIError.h"
#include "OAIInternationalReturnOverrideType.h"
#include "OAITimeDuration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICategoryType;
class OAIInternationalReturnOverrideType;
class OAITimeDuration;
class OAIError;

class OAISetReturnPolicyResponse : public OAIObject {
public:
    OAISetReturnPolicyResponse();
    OAISetReturnPolicyResponse(QString json);
    ~OAISetReturnPolicyResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICategoryType> getCategoryTypes() const;
    void setCategoryTypes(const QList<OAICategoryType> &category_types);
    bool is_category_types_Set() const;
    bool is_category_types_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isExtendedHolidayReturnsOffered() const;
    void setExtendedHolidayReturnsOffered(const bool &extended_holiday_returns_offered);
    bool is_extended_holiday_returns_offered_Set() const;
    bool is_extended_holiday_returns_offered_Valid() const;

    OAIInternationalReturnOverrideType getInternationalOverride() const;
    void setInternationalOverride(const OAIInternationalReturnOverrideType &international_override);
    bool is_international_override_Set() const;
    bool is_international_override_Valid() const;

    QString getMarketplaceId() const;
    void setMarketplaceId(const QString &marketplace_id);
    bool is_marketplace_id_Set() const;
    bool is_marketplace_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRefundMethod() const;
    void setRefundMethod(const QString &refund_method);
    bool is_refund_method_Set() const;
    bool is_refund_method_Valid() const;

    QString getRestockingFeePercentage() const;
    void setRestockingFeePercentage(const QString &restocking_fee_percentage);
    bool is_restocking_fee_percentage_Set() const;
    bool is_restocking_fee_percentage_Valid() const;

    QString getReturnInstructions() const;
    void setReturnInstructions(const QString &return_instructions);
    bool is_return_instructions_Set() const;
    bool is_return_instructions_Valid() const;

    QString getReturnMethod() const;
    void setReturnMethod(const QString &return_method);
    bool is_return_method_Set() const;
    bool is_return_method_Valid() const;

    OAITimeDuration getReturnPeriod() const;
    void setReturnPeriod(const OAITimeDuration &return_period);
    bool is_return_period_Set() const;
    bool is_return_period_Valid() const;

    QString getReturnPolicyId() const;
    void setReturnPolicyId(const QString &return_policy_id);
    bool is_return_policy_id_Set() const;
    bool is_return_policy_id_Valid() const;

    QString getReturnShippingCostPayer() const;
    void setReturnShippingCostPayer(const QString &return_shipping_cost_payer);
    bool is_return_shipping_cost_payer_Set() const;
    bool is_return_shipping_cost_payer_Valid() const;

    bool isReturnsAccepted() const;
    void setReturnsAccepted(const bool &returns_accepted);
    bool is_returns_accepted_Set() const;
    bool is_returns_accepted_Valid() const;

    QList<OAIError> getWarnings() const;
    void setWarnings(const QList<OAIError> &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICategoryType> m_category_types;
    bool m_category_types_isSet;
    bool m_category_types_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_extended_holiday_returns_offered;
    bool m_extended_holiday_returns_offered_isSet;
    bool m_extended_holiday_returns_offered_isValid;

    OAIInternationalReturnOverrideType m_international_override;
    bool m_international_override_isSet;
    bool m_international_override_isValid;

    QString m_marketplace_id;
    bool m_marketplace_id_isSet;
    bool m_marketplace_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_refund_method;
    bool m_refund_method_isSet;
    bool m_refund_method_isValid;

    QString m_restocking_fee_percentage;
    bool m_restocking_fee_percentage_isSet;
    bool m_restocking_fee_percentage_isValid;

    QString m_return_instructions;
    bool m_return_instructions_isSet;
    bool m_return_instructions_isValid;

    QString m_return_method;
    bool m_return_method_isSet;
    bool m_return_method_isValid;

    OAITimeDuration m_return_period;
    bool m_return_period_isSet;
    bool m_return_period_isValid;

    QString m_return_policy_id;
    bool m_return_policy_id_isSet;
    bool m_return_policy_id_isValid;

    QString m_return_shipping_cost_payer;
    bool m_return_shipping_cost_payer_isSet;
    bool m_return_shipping_cost_payer_isValid;

    bool m_returns_accepted;
    bool m_returns_accepted_isSet;
    bool m_returns_accepted_isValid;

    QList<OAIError> m_warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISetReturnPolicyResponse)

#endif // OAISetReturnPolicyResponse_H
