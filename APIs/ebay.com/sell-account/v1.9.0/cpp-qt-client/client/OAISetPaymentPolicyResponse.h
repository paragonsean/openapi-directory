/**
 * Account API
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * The version of the OpenAPI document: v1.9.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISetPaymentPolicyResponse.h
 *
 * Complex type that that gets populated with a response containing a payment policy.
 */

#ifndef OAISetPaymentPolicyResponse_H
#define OAISetPaymentPolicyResponse_H

#include <QJsonObject>

#include "OAICategoryType.h"
#include "OAIDeposit.h"
#include "OAIError.h"
#include "OAIPaymentMethod.h"
#include "OAITimeDuration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICategoryType;
class OAIDeposit;
class OAITimeDuration;
class OAIPaymentMethod;
class OAIError;

class OAISetPaymentPolicyResponse : public OAIObject {
public:
    OAISetPaymentPolicyResponse();
    OAISetPaymentPolicyResponse(QString json);
    ~OAISetPaymentPolicyResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICategoryType> getCategoryTypes() const;
    void setCategoryTypes(const QList<OAICategoryType> &category_types);
    bool is_category_types_Set() const;
    bool is_category_types_Valid() const;

    OAIDeposit getDeposit() const;
    void setDeposit(const OAIDeposit &deposit);
    bool is_deposit_Set() const;
    bool is_deposit_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAITimeDuration getFullPaymentDueIn() const;
    void setFullPaymentDueIn(const OAITimeDuration &full_payment_due_in);
    bool is_full_payment_due_in_Set() const;
    bool is_full_payment_due_in_Valid() const;

    bool isImmediatePay() const;
    void setImmediatePay(const bool &immediate_pay);
    bool is_immediate_pay_Set() const;
    bool is_immediate_pay_Valid() const;

    QString getMarketplaceId() const;
    void setMarketplaceId(const QString &marketplace_id);
    bool is_marketplace_id_Set() const;
    bool is_marketplace_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPaymentInstructions() const;
    void setPaymentInstructions(const QString &payment_instructions);
    bool is_payment_instructions_Set() const;
    bool is_payment_instructions_Valid() const;

    QList<OAIPaymentMethod> getPaymentMethods() const;
    void setPaymentMethods(const QList<OAIPaymentMethod> &payment_methods);
    bool is_payment_methods_Set() const;
    bool is_payment_methods_Valid() const;

    QString getPaymentPolicyId() const;
    void setPaymentPolicyId(const QString &payment_policy_id);
    bool is_payment_policy_id_Set() const;
    bool is_payment_policy_id_Valid() const;

    QList<OAIError> getWarnings() const;
    void setWarnings(const QList<OAIError> &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICategoryType> m_category_types;
    bool m_category_types_isSet;
    bool m_category_types_isValid;

    OAIDeposit m_deposit;
    bool m_deposit_isSet;
    bool m_deposit_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAITimeDuration m_full_payment_due_in;
    bool m_full_payment_due_in_isSet;
    bool m_full_payment_due_in_isValid;

    bool m_immediate_pay;
    bool m_immediate_pay_isSet;
    bool m_immediate_pay_isValid;

    QString m_marketplace_id;
    bool m_marketplace_id_isSet;
    bool m_marketplace_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_payment_instructions;
    bool m_payment_instructions_isSet;
    bool m_payment_instructions_isValid;

    QList<OAIPaymentMethod> m_payment_methods;
    bool m_payment_methods_isSet;
    bool m_payment_methods_isValid;

    QString m_payment_policy_id;
    bool m_payment_policy_id_isSet;
    bool m_payment_policy_id_isValid;

    QList<OAIError> m_warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISetPaymentPolicyResponse)

#endif // OAISetPaymentPolicyResponse_H
