/**
 * Account API
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * The version of the OpenAPI document: v1.9.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIShippingService.h
 *
 * This type is used by the &lt;b&gt;shippingServices&lt;/b&gt; array, an array that provides details about every domestic and international shipping service option that is defined for the policy.
 */

#ifndef OAIShippingService_H
#define OAIShippingService_H

#include <QJsonObject>

#include "OAIAmount.h"
#include "OAIRegionSet.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAmount;
class OAIRegionSet;

class OAIShippingService : public OAIObject {
public:
    OAIShippingService();
    OAIShippingService(QString json);
    ~OAIShippingService() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAmount getAdditionalShippingCost() const;
    void setAdditionalShippingCost(const OAIAmount &additional_shipping_cost);
    bool is_additional_shipping_cost_Set() const;
    bool is_additional_shipping_cost_Valid() const;

    bool isBuyerResponsibleForPickup() const;
    void setBuyerResponsibleForPickup(const bool &buyer_responsible_for_pickup);
    bool is_buyer_responsible_for_pickup_Set() const;
    bool is_buyer_responsible_for_pickup_Valid() const;

    bool isBuyerResponsibleForShipping() const;
    void setBuyerResponsibleForShipping(const bool &buyer_responsible_for_shipping);
    bool is_buyer_responsible_for_shipping_Set() const;
    bool is_buyer_responsible_for_shipping_Valid() const;

    OAIAmount getCashOnDeliveryFee() const;
    void setCashOnDeliveryFee(const OAIAmount &cash_on_delivery_fee);
    bool is_cash_on_delivery_fee_Set() const;
    bool is_cash_on_delivery_fee_Valid() const;

    bool isFreeShipping() const;
    void setFreeShipping(const bool &free_shipping);
    bool is_free_shipping_Set() const;
    bool is_free_shipping_Valid() const;

    OAIRegionSet getShipToLocations() const;
    void setShipToLocations(const OAIRegionSet &ship_to_locations);
    bool is_ship_to_locations_Set() const;
    bool is_ship_to_locations_Valid() const;

    QString getShippingCarrierCode() const;
    void setShippingCarrierCode(const QString &shipping_carrier_code);
    bool is_shipping_carrier_code_Set() const;
    bool is_shipping_carrier_code_Valid() const;

    OAIAmount getShippingCost() const;
    void setShippingCost(const OAIAmount &shipping_cost);
    bool is_shipping_cost_Set() const;
    bool is_shipping_cost_Valid() const;

    QString getShippingServiceCode() const;
    void setShippingServiceCode(const QString &shipping_service_code);
    bool is_shipping_service_code_Set() const;
    bool is_shipping_service_code_Valid() const;

    qint32 getSortOrder() const;
    void setSortOrder(const qint32 &sort_order);
    bool is_sort_order_Set() const;
    bool is_sort_order_Valid() const;

    OAIAmount getSurcharge() const;
    void setSurcharge(const OAIAmount &surcharge);
    bool is_surcharge_Set() const;
    bool is_surcharge_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAmount m_additional_shipping_cost;
    bool m_additional_shipping_cost_isSet;
    bool m_additional_shipping_cost_isValid;

    bool m_buyer_responsible_for_pickup;
    bool m_buyer_responsible_for_pickup_isSet;
    bool m_buyer_responsible_for_pickup_isValid;

    bool m_buyer_responsible_for_shipping;
    bool m_buyer_responsible_for_shipping_isSet;
    bool m_buyer_responsible_for_shipping_isValid;

    OAIAmount m_cash_on_delivery_fee;
    bool m_cash_on_delivery_fee_isSet;
    bool m_cash_on_delivery_fee_isValid;

    bool m_free_shipping;
    bool m_free_shipping_isSet;
    bool m_free_shipping_isValid;

    OAIRegionSet m_ship_to_locations;
    bool m_ship_to_locations_isSet;
    bool m_ship_to_locations_isValid;

    QString m_shipping_carrier_code;
    bool m_shipping_carrier_code_isSet;
    bool m_shipping_carrier_code_isValid;

    OAIAmount m_shipping_cost;
    bool m_shipping_cost_isSet;
    bool m_shipping_cost_isValid;

    QString m_shipping_service_code;
    bool m_shipping_service_code_isSet;
    bool m_shipping_service_code_isValid;

    qint32 m_sort_order;
    bool m_sort_order_isSet;
    bool m_sort_order_isValid;

    OAIAmount m_surcharge;
    bool m_surcharge_isSet;
    bool m_surcharge_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIShippingService)

#endif // OAIShippingService_H
