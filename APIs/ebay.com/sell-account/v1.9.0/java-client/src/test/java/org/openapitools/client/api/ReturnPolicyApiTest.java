/*
 * Account API
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * The version of the OpenAPI document: v1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ReturnPolicy;
import org.openapitools.client.model.ReturnPolicyRequest;
import org.openapitools.client.model.ReturnPolicyResponse;
import org.openapitools.client.model.SetReturnPolicyResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReturnPolicyApi
 */
@Disabled
public class ReturnPolicyApiTest {

    private final ReturnPolicyApi api = new ReturnPolicyApi();

    /**
     * This method creates a new return policy where the policy encapsulates seller&#39;s terms for returning items.  &lt;br/&gt;&lt;br/&gt;Each policy targets a specific marketplace, and you can create multiple policies for each marketplace. Return policies are not applicable to motor-vehicle listings.&lt;br/&gt;&lt;br/&gt;A successful request returns the &lt;b&gt;getReturnPolicy&lt;/b&gt; URI to the new policy in the &lt;b&gt;Location&lt;/b&gt; response header and the ID for the new policy is returned in the response payload.  &lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Tip:&lt;/b&gt; For details on creating and using the business policies supported by the Account API, see &lt;a href&#x3D;\&quot;/api-docs/sell/static/seller-accounts/business-policies.html\&quot;&gt;eBay business policies&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createReturnPolicyTest() throws ApiException {
        ReturnPolicyRequest returnPolicyRequest = null;
        SetReturnPolicyResponse response = api.createReturnPolicy(returnPolicyRequest);
        // TODO: test validations
    }

    /**
     * This method deletes a return policy. Supply the ID of the policy you want to delete in the &lt;b&gt;returnPolicyId&lt;/b&gt; path parameter.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteReturnPolicyTest() throws ApiException {
        String returnPolicyId = null;
        api.deleteReturnPolicy(returnPolicyId);
        // TODO: test validations
    }

    /**
     * This method retrieves all the return policies configured for the marketplace you specify using the &lt;code&gt;marketplace_id&lt;/code&gt; query parameter.  &lt;br/&gt;&lt;br/&gt;&lt;b&gt;Marketplaces and locales&lt;/b&gt;  &lt;br/&gt;&lt;br/&gt;Get the correct policies for a marketplace that supports multiple locales using the &lt;code&gt;Content-Language&lt;/code&gt; request header. For example, get the policies for the French locale of the Canadian marketplace by specifying &lt;code&gt;fr-CA&lt;/code&gt; for the &lt;code&gt;Content-Language&lt;/code&gt; header. Likewise, target the Dutch locale of the Belgium marketplace by setting &lt;code&gt;Content-Language: nl-BE&lt;/code&gt;. For details on header values, see &lt;a href&#x3D;\&quot;/api-docs/static/rest-request-components.html#HTTP\&quot; target&#x3D;\&quot;_blank\&quot;&gt;HTTP request headers&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getReturnPoliciesTest() throws ApiException {
        String marketplaceId = null;
        ReturnPolicyResponse response = api.getReturnPolicies(marketplaceId);
        // TODO: test validations
    }

    /**
     * This method retrieves the complete details of the return policy specified by the &lt;b&gt;returnPolicyId&lt;/b&gt; path parameter.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getReturnPolicyTest() throws ApiException {
        String returnPolicyId = null;
        ReturnPolicy response = api.getReturnPolicy(returnPolicyId);
        // TODO: test validations
    }

    /**
     * This method retrieves the details of a specific return policy. Supply both the policy &lt;code&gt;name&lt;/code&gt; and its associated &lt;code&gt;marketplace_id&lt;/code&gt; in the request query parameters.   &lt;br/&gt;&lt;br/&gt;&lt;b&gt;Marketplaces and locales&lt;/b&gt;  &lt;br/&gt;&lt;br/&gt;Get the correct policy for a marketplace that supports multiple locales using the &lt;code&gt;Content-Language&lt;/code&gt; request header. For example, get a policy for the French locale of the Canadian marketplace by specifying &lt;code&gt;fr-CA&lt;/code&gt; for the &lt;code&gt;Content-Language&lt;/code&gt; header. Likewise, target the Dutch locale of the Belgium marketplace by setting &lt;code&gt;Content-Language: nl-BE&lt;/code&gt;. For details on header values, see &lt;a href&#x3D;\&quot;/api-docs/static/rest-request-components.html#HTTP\&quot;&gt;HTTP request headers&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getReturnPolicyByNameTest() throws ApiException {
        String marketplaceId = null;
        String name = null;
        ReturnPolicy response = api.getReturnPolicyByName(marketplaceId, name);
        // TODO: test validations
    }

    /**
     * This method updates an existing return policy. Specify the policy you want to update using the &lt;b&gt;return_policy_id&lt;/b&gt; path parameter. Supply a complete policy payload with the updates you want to make; this call overwrites the existing policy with the new details specified in the payload.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateReturnPolicyTest() throws ApiException {
        String returnPolicyId = null;
        ReturnPolicyRequest returnPolicyRequest = null;
        SetReturnPolicyResponse response = api.updateReturnPolicy(returnPolicyId, returnPolicyRequest);
        // TODO: test validations
    }

}
