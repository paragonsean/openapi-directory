/*
 * Account API
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * The version of the OpenAPI document: v1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CategoryType;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.InternationalReturnOverrideType;
import org.openapitools.client.model.TimeDuration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A complex type that is populated with a response containing a return policies.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:39:42.418888-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SetReturnPolicyResponse {
  public static final String SERIALIZED_NAME_CATEGORY_TYPES = "categoryTypes";
  @SerializedName(SERIALIZED_NAME_CATEGORY_TYPES)
  private List<CategoryType> categoryTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EXTENDED_HOLIDAY_RETURNS_OFFERED = "extendedHolidayReturnsOffered";
  @SerializedName(SERIALIZED_NAME_EXTENDED_HOLIDAY_RETURNS_OFFERED)
  private Boolean extendedHolidayReturnsOffered;

  public static final String SERIALIZED_NAME_INTERNATIONAL_OVERRIDE = "internationalOverride";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_OVERRIDE)
  private InternationalReturnOverrideType internationalOverride;

  public static final String SERIALIZED_NAME_MARKETPLACE_ID = "marketplaceId";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_ID)
  private String marketplaceId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_REFUND_METHOD = "refundMethod";
  @SerializedName(SERIALIZED_NAME_REFUND_METHOD)
  private String refundMethod;

  public static final String SERIALIZED_NAME_RESTOCKING_FEE_PERCENTAGE = "restockingFeePercentage";
  @SerializedName(SERIALIZED_NAME_RESTOCKING_FEE_PERCENTAGE)
  private String restockingFeePercentage;

  public static final String SERIALIZED_NAME_RETURN_INSTRUCTIONS = "returnInstructions";
  @SerializedName(SERIALIZED_NAME_RETURN_INSTRUCTIONS)
  private String returnInstructions;

  public static final String SERIALIZED_NAME_RETURN_METHOD = "returnMethod";
  @SerializedName(SERIALIZED_NAME_RETURN_METHOD)
  private String returnMethod;

  public static final String SERIALIZED_NAME_RETURN_PERIOD = "returnPeriod";
  @SerializedName(SERIALIZED_NAME_RETURN_PERIOD)
  private TimeDuration returnPeriod;

  public static final String SERIALIZED_NAME_RETURN_POLICY_ID = "returnPolicyId";
  @SerializedName(SERIALIZED_NAME_RETURN_POLICY_ID)
  private String returnPolicyId;

  public static final String SERIALIZED_NAME_RETURN_SHIPPING_COST_PAYER = "returnShippingCostPayer";
  @SerializedName(SERIALIZED_NAME_RETURN_SHIPPING_COST_PAYER)
  private String returnShippingCostPayer;

  public static final String SERIALIZED_NAME_RETURNS_ACCEPTED = "returnsAccepted";
  @SerializedName(SERIALIZED_NAME_RETURNS_ACCEPTED)
  private Boolean returnsAccepted;

  public static final String SERIALIZED_NAME_WARNINGS = "warnings";
  @SerializedName(SERIALIZED_NAME_WARNINGS)
  private List<Error> warnings = new ArrayList<>();

  public SetReturnPolicyResponse() {
  }

  public SetReturnPolicyResponse categoryTypes(List<CategoryType> categoryTypes) {
    this.categoryTypes = categoryTypes;
    return this;
  }

  public SetReturnPolicyResponse addCategoryTypesItem(CategoryType categoryTypesItem) {
    if (this.categoryTypes == null) {
      this.categoryTypes = new ArrayList<>();
    }
    this.categoryTypes.add(categoryTypesItem);
    return this;
  }

  /**
   * This field always returns &lt;code&gt;ALL_EXCLUDING_MOTORS_VEHICLES&lt;/code&gt; for return business policies, since return business policies are not applicable to motor vehicle listings.
   * @return categoryTypes
   */
  @javax.annotation.Nullable
  public List<CategoryType> getCategoryTypes() {
    return categoryTypes;
  }

  public void setCategoryTypes(List<CategoryType> categoryTypes) {
    this.categoryTypes = categoryTypes;
  }


  public SetReturnPolicyResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * A seller-defined description of the return business policy. This description is only for the seller&#39;s use, and is not exposed on any eBay pages. This field is returned if set for the policy. &lt;br/&gt;&lt;br/&gt;&lt;b&gt;Max length&lt;/b&gt;: 250
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public SetReturnPolicyResponse extendedHolidayReturnsOffered(Boolean extendedHolidayReturnsOffered) {
    this.extendedHolidayReturnsOffered = extendedHolidayReturnsOffered;
    return this;
  }

  /**
   * &lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;span  style&#x3D;\&quot;color: #dd1e31;\&quot;&gt;&lt;b&gt;Important!&lt;/b&gt;&lt;/span&gt; This field is deprecated, since eBay no longer supports extended holiday returns. This field should no longer be returned.&lt;/p&gt; 
   * @return extendedHolidayReturnsOffered
   */
  @javax.annotation.Nullable
  public Boolean getExtendedHolidayReturnsOffered() {
    return extendedHolidayReturnsOffered;
  }

  public void setExtendedHolidayReturnsOffered(Boolean extendedHolidayReturnsOffered) {
    this.extendedHolidayReturnsOffered = extendedHolidayReturnsOffered;
  }


  public SetReturnPolicyResponse internationalOverride(InternationalReturnOverrideType internationalOverride) {
    this.internationalOverride = internationalOverride;
    return this;
  }

  /**
   * Get internationalOverride
   * @return internationalOverride
   */
  @javax.annotation.Nullable
  public InternationalReturnOverrideType getInternationalOverride() {
    return internationalOverride;
  }

  public void setInternationalOverride(InternationalReturnOverrideType internationalOverride) {
    this.internationalOverride = internationalOverride;
  }


  public SetReturnPolicyResponse marketplaceId(String marketplaceId) {
    this.marketplaceId = marketplaceId;
    return this;
  }

  /**
   * The ID of the eBay marketplace to which this return business policy applies. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return marketplaceId
   */
  @javax.annotation.Nullable
  public String getMarketplaceId() {
    return marketplaceId;
  }

  public void setMarketplaceId(String marketplaceId) {
    this.marketplaceId = marketplaceId;
  }


  public SetReturnPolicyResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * A seller-defined name for this return business policy. Names must be unique for policies assigned to the same marketplace.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Max length:&lt;/b&gt; 64
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public SetReturnPolicyResponse refundMethod(String refundMethod) {
    this.refundMethod = refundMethod;
    return this;
  }

  /**
   * If a seller indicates that they will accept buyer returns, this value will be &lt;code&gt;MONEY_BACK&lt;/code&gt;. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/api:RefundMethodEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return refundMethod
   */
  @javax.annotation.Nullable
  public String getRefundMethod() {
    return refundMethod;
  }

  public void setRefundMethod(String refundMethod) {
    this.refundMethod = refundMethod;
  }


  public SetReturnPolicyResponse restockingFeePercentage(String restockingFeePercentage) {
    this.restockingFeePercentage = restockingFeePercentage;
    return this;
  }

  /**
   * &lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;span  style&#x3D;\&quot;color: #dd1e31;\&quot;&gt;&lt;b&gt;Important!&lt;/b&gt;&lt;/span&gt; This field is deprecated, since eBay no longer allows sellers to charge a restocking fee for buyer remorse returns.&lt;/p&gt;
   * @return restockingFeePercentage
   */
  @javax.annotation.Nullable
  public String getRestockingFeePercentage() {
    return restockingFeePercentage;
  }

  public void setRestockingFeePercentage(String restockingFeePercentage) {
    this.restockingFeePercentage = restockingFeePercentage;
  }


  public SetReturnPolicyResponse returnInstructions(String returnInstructions) {
    this.returnInstructions = returnInstructions;
    return this;
  }

  /**
   * This text-based field provides more details on seller-specified return instructions. &lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;span  style&#x3D;\&quot;color: #dd1e31;\&quot;&gt;&lt;b&gt;Important!&lt;/b&gt;&lt;/span&gt; This field is no longer supported on many eBay marketplaces. To see if a marketplace and eBay category does support this field, call &lt;a href&#x3D;\&quot;/api-docs/sell/metadata/resources/marketplace/methods/getReturnPolicies\&quot;&gt;getReturnPolicies&lt;/a&gt; method of the &lt;b&gt;Metadata API&lt;/b&gt;. Then you will look for the &lt;b&gt;policyDescriptionEnabled&lt;/b&gt; field with a value of &lt;code&gt;true&lt;/code&gt; for the eBay category.&lt;/span&gt;&lt;/p&gt;&lt;br/&gt;&lt;b&gt;Max length&lt;/b&gt;: 5000 (8000 for DE)
   * @return returnInstructions
   */
  @javax.annotation.Nullable
  public String getReturnInstructions() {
    return returnInstructions;
  }

  public void setReturnInstructions(String returnInstructions) {
    this.returnInstructions = returnInstructions;
  }


  public SetReturnPolicyResponse returnMethod(String returnMethod) {
    this.returnMethod = returnMethod;
    return this;
  }

  /**
   * This field will be returned if the seller is willing and able to offer a replacement item as an alternative to &#39;Money Back&#39;. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/api:ReturnMethodEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return returnMethod
   */
  @javax.annotation.Nullable
  public String getReturnMethod() {
    return returnMethod;
  }

  public void setReturnMethod(String returnMethod) {
    this.returnMethod = returnMethod;
  }


  public SetReturnPolicyResponse returnPeriod(TimeDuration returnPeriod) {
    this.returnPeriod = returnPeriod;
    return this;
  }

  /**
   * Get returnPeriod
   * @return returnPeriod
   */
  @javax.annotation.Nullable
  public TimeDuration getReturnPeriod() {
    return returnPeriod;
  }

  public void setReturnPeriod(TimeDuration returnPeriod) {
    this.returnPeriod = returnPeriod;
  }


  public SetReturnPolicyResponse returnPolicyId(String returnPolicyId) {
    this.returnPolicyId = returnPolicyId;
    return this;
  }

  /**
   * A unique eBay-assigned ID for a return business policy. This ID is generated when the policy is created.
   * @return returnPolicyId
   */
  @javax.annotation.Nullable
  public String getReturnPolicyId() {
    return returnPolicyId;
  }

  public void setReturnPolicyId(String returnPolicyId) {
    this.returnPolicyId = returnPolicyId;
  }


  public SetReturnPolicyResponse returnShippingCostPayer(String returnShippingCostPayer) {
    this.returnShippingCostPayer = returnShippingCostPayer;
    return this;
  }

  /**
   * This field indicates who is responsible for paying for the shipping charges for returned items. The field can be set to either &lt;code&gt;BUYER&lt;/code&gt; or &lt;code&gt;SELLER&lt;/code&gt;.  &lt;br/&gt;&lt;br/&gt;Note that the seller is always responsible for return shipping costs for SNAD-related issues.  &lt;br/&gt;&lt;br/&gt;This container will be returned unless the business policy states that the seller does not accept returns. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/api:ReturnShippingCostPayerEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return returnShippingCostPayer
   */
  @javax.annotation.Nullable
  public String getReturnShippingCostPayer() {
    return returnShippingCostPayer;
  }

  public void setReturnShippingCostPayer(String returnShippingCostPayer) {
    this.returnShippingCostPayer = returnShippingCostPayer;
  }


  public SetReturnPolicyResponse returnsAccepted(Boolean returnsAccepted) {
    this.returnsAccepted = returnsAccepted;
    return this;
  }

  /**
   * If set to &lt;code&gt;true&lt;/code&gt;, the seller accepts returns. If set to &lt;code&gt;false&lt;/code&gt;, this field indicates that the seller does not accept returns.
   * @return returnsAccepted
   */
  @javax.annotation.Nullable
  public Boolean getReturnsAccepted() {
    return returnsAccepted;
  }

  public void setReturnsAccepted(Boolean returnsAccepted) {
    this.returnsAccepted = returnsAccepted;
  }


  public SetReturnPolicyResponse warnings(List<Error> warnings) {
    this.warnings = warnings;
    return this;
  }

  public SetReturnPolicyResponse addWarningsItem(Error warningsItem) {
    if (this.warnings == null) {
      this.warnings = new ArrayList<>();
    }
    this.warnings.add(warningsItem);
    return this;
  }

  /**
   * An array of one or more errors or warnings that were generated during the processing of the request. If there were no issues with the request, this array will return empty.
   * @return warnings
   */
  @javax.annotation.Nullable
  public List<Error> getWarnings() {
    return warnings;
  }

  public void setWarnings(List<Error> warnings) {
    this.warnings = warnings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SetReturnPolicyResponse setReturnPolicyResponse = (SetReturnPolicyResponse) o;
    return Objects.equals(this.categoryTypes, setReturnPolicyResponse.categoryTypes) &&
        Objects.equals(this.description, setReturnPolicyResponse.description) &&
        Objects.equals(this.extendedHolidayReturnsOffered, setReturnPolicyResponse.extendedHolidayReturnsOffered) &&
        Objects.equals(this.internationalOverride, setReturnPolicyResponse.internationalOverride) &&
        Objects.equals(this.marketplaceId, setReturnPolicyResponse.marketplaceId) &&
        Objects.equals(this.name, setReturnPolicyResponse.name) &&
        Objects.equals(this.refundMethod, setReturnPolicyResponse.refundMethod) &&
        Objects.equals(this.restockingFeePercentage, setReturnPolicyResponse.restockingFeePercentage) &&
        Objects.equals(this.returnInstructions, setReturnPolicyResponse.returnInstructions) &&
        Objects.equals(this.returnMethod, setReturnPolicyResponse.returnMethod) &&
        Objects.equals(this.returnPeriod, setReturnPolicyResponse.returnPeriod) &&
        Objects.equals(this.returnPolicyId, setReturnPolicyResponse.returnPolicyId) &&
        Objects.equals(this.returnShippingCostPayer, setReturnPolicyResponse.returnShippingCostPayer) &&
        Objects.equals(this.returnsAccepted, setReturnPolicyResponse.returnsAccepted) &&
        Objects.equals(this.warnings, setReturnPolicyResponse.warnings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryTypes, description, extendedHolidayReturnsOffered, internationalOverride, marketplaceId, name, refundMethod, restockingFeePercentage, returnInstructions, returnMethod, returnPeriod, returnPolicyId, returnShippingCostPayer, returnsAccepted, warnings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SetReturnPolicyResponse {\n");
    sb.append("    categoryTypes: ").append(toIndentedString(categoryTypes)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    extendedHolidayReturnsOffered: ").append(toIndentedString(extendedHolidayReturnsOffered)).append("\n");
    sb.append("    internationalOverride: ").append(toIndentedString(internationalOverride)).append("\n");
    sb.append("    marketplaceId: ").append(toIndentedString(marketplaceId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    refundMethod: ").append(toIndentedString(refundMethod)).append("\n");
    sb.append("    restockingFeePercentage: ").append(toIndentedString(restockingFeePercentage)).append("\n");
    sb.append("    returnInstructions: ").append(toIndentedString(returnInstructions)).append("\n");
    sb.append("    returnMethod: ").append(toIndentedString(returnMethod)).append("\n");
    sb.append("    returnPeriod: ").append(toIndentedString(returnPeriod)).append("\n");
    sb.append("    returnPolicyId: ").append(toIndentedString(returnPolicyId)).append("\n");
    sb.append("    returnShippingCostPayer: ").append(toIndentedString(returnShippingCostPayer)).append("\n");
    sb.append("    returnsAccepted: ").append(toIndentedString(returnsAccepted)).append("\n");
    sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("categoryTypes");
    openapiFields.add("description");
    openapiFields.add("extendedHolidayReturnsOffered");
    openapiFields.add("internationalOverride");
    openapiFields.add("marketplaceId");
    openapiFields.add("name");
    openapiFields.add("refundMethod");
    openapiFields.add("restockingFeePercentage");
    openapiFields.add("returnInstructions");
    openapiFields.add("returnMethod");
    openapiFields.add("returnPeriod");
    openapiFields.add("returnPolicyId");
    openapiFields.add("returnShippingCostPayer");
    openapiFields.add("returnsAccepted");
    openapiFields.add("warnings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SetReturnPolicyResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SetReturnPolicyResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SetReturnPolicyResponse is not found in the empty JSON string", SetReturnPolicyResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SetReturnPolicyResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SetReturnPolicyResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("categoryTypes") != null && !jsonObj.get("categoryTypes").isJsonNull()) {
        JsonArray jsonArraycategoryTypes = jsonObj.getAsJsonArray("categoryTypes");
        if (jsonArraycategoryTypes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("categoryTypes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `categoryTypes` to be an array in the JSON string but got `%s`", jsonObj.get("categoryTypes").toString()));
          }

          // validate the optional field `categoryTypes` (array)
          for (int i = 0; i < jsonArraycategoryTypes.size(); i++) {
            CategoryType.validateJsonElement(jsonArraycategoryTypes.get(i));
          };
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `internationalOverride`
      if (jsonObj.get("internationalOverride") != null && !jsonObj.get("internationalOverride").isJsonNull()) {
        InternationalReturnOverrideType.validateJsonElement(jsonObj.get("internationalOverride"));
      }
      if ((jsonObj.get("marketplaceId") != null && !jsonObj.get("marketplaceId").isJsonNull()) && !jsonObj.get("marketplaceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketplaceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketplaceId").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("refundMethod") != null && !jsonObj.get("refundMethod").isJsonNull()) && !jsonObj.get("refundMethod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `refundMethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("refundMethod").toString()));
      }
      if ((jsonObj.get("restockingFeePercentage") != null && !jsonObj.get("restockingFeePercentage").isJsonNull()) && !jsonObj.get("restockingFeePercentage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `restockingFeePercentage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("restockingFeePercentage").toString()));
      }
      if ((jsonObj.get("returnInstructions") != null && !jsonObj.get("returnInstructions").isJsonNull()) && !jsonObj.get("returnInstructions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnInstructions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnInstructions").toString()));
      }
      if ((jsonObj.get("returnMethod") != null && !jsonObj.get("returnMethod").isJsonNull()) && !jsonObj.get("returnMethod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnMethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnMethod").toString()));
      }
      // validate the optional field `returnPeriod`
      if (jsonObj.get("returnPeriod") != null && !jsonObj.get("returnPeriod").isJsonNull()) {
        TimeDuration.validateJsonElement(jsonObj.get("returnPeriod"));
      }
      if ((jsonObj.get("returnPolicyId") != null && !jsonObj.get("returnPolicyId").isJsonNull()) && !jsonObj.get("returnPolicyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnPolicyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnPolicyId").toString()));
      }
      if ((jsonObj.get("returnShippingCostPayer") != null && !jsonObj.get("returnShippingCostPayer").isJsonNull()) && !jsonObj.get("returnShippingCostPayer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnShippingCostPayer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnShippingCostPayer").toString()));
      }
      if (jsonObj.get("warnings") != null && !jsonObj.get("warnings").isJsonNull()) {
        JsonArray jsonArraywarnings = jsonObj.getAsJsonArray("warnings");
        if (jsonArraywarnings != null) {
          // ensure the json data is an array
          if (!jsonObj.get("warnings").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `warnings` to be an array in the JSON string but got `%s`", jsonObj.get("warnings").toString()));
          }

          // validate the optional field `warnings` (array)
          for (int i = 0; i < jsonArraywarnings.size(); i++) {
            Error.validateJsonElement(jsonArraywarnings.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SetReturnPolicyResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SetReturnPolicyResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SetReturnPolicyResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SetReturnPolicyResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<SetReturnPolicyResponse>() {
           @Override
           public void write(JsonWriter out, SetReturnPolicyResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SetReturnPolicyResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SetReturnPolicyResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SetReturnPolicyResponse
   * @throws IOException if the JSON string is invalid with respect to SetReturnPolicyResponse
   */
  public static SetReturnPolicyResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SetReturnPolicyResponse.class);
  }

  /**
   * Convert an instance of SetReturnPolicyResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

