/**
 * Listing API
 * <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited\" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units.</span><br /><br />Enables a seller adding an ad or item on a Partner's site to automatically create an eBay listing draft using the item details from the Partner's site.
 *
 * The version of the OpenAPI document: v1_beta.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItemDraft.h
 *
 * The type that defines the fields for the listing details.
 */

#ifndef OAIItemDraft_H
#define OAIItemDraft_H

#include <QJsonObject>

#include "OAICharity.h"
#include "OAIPricingSummary.h"
#include "OAIProduct.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICharity;
class OAIPricingSummary;
class OAIProduct;

class OAIItemDraft : public OAIObject {
public:
    OAIItemDraft();
    OAIItemDraft(QString json);
    ~OAIItemDraft() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategoryId() const;
    void setCategoryId(const QString &category_id);
    bool is_category_id_Set() const;
    bool is_category_id_Valid() const;

    OAICharity getCharity() const;
    void setCharity(const OAICharity &charity);
    bool is_charity_Set() const;
    bool is_charity_Valid() const;

    QString getCondition() const;
    void setCondition(const QString &condition);
    bool is_condition_Set() const;
    bool is_condition_Valid() const;

    QString getFormat() const;
    void setFormat(const QString &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    OAIPricingSummary getPricingSummary() const;
    void setPricingSummary(const OAIPricingSummary &pricing_summary);
    bool is_pricing_summary_Set() const;
    bool is_pricing_summary_Valid() const;

    OAIProduct getProduct() const;
    void setProduct(const OAIProduct &product);
    bool is_product_Set() const;
    bool is_product_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category_id;
    bool m_category_id_isSet;
    bool m_category_id_isValid;

    OAICharity m_charity;
    bool m_charity_isSet;
    bool m_charity_isValid;

    QString m_condition;
    bool m_condition_isSet;
    bool m_condition_isValid;

    QString m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    OAIPricingSummary m_pricing_summary;
    bool m_pricing_summary_isSet;
    bool m_pricing_summary_isValid;

    OAIProduct m_product;
    bool m_product_isSet;
    bool m_product_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItemDraft)

#endif // OAIItemDraft_H
