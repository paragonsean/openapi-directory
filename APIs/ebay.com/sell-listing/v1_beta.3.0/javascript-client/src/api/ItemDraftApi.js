/**
 * Listing API
 * <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited\" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units.</span><br /><br />Enables a seller adding an ad or item on a Partner's site to automatically create an eBay listing draft using the item details from the Partner's site.
 *
 * The version of the OpenAPI document: v1_beta.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ItemDraft from '../model/ItemDraft';
import ItemDraftResponse from '../model/ItemDraftResponse';

/**
* ItemDraft service.
* @module api/ItemDraftApi
* @version v1_beta.3.0
*/
export default class ItemDraftApi {

    /**
    * Constructs a new ItemDraftApi. 
    * @alias module:api/ItemDraftApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createItemDraft operation.
     * @callback module:api/ItemDraftApi~createItemDraftCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemDraftResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This call gives Partners the ability to create an eBay draft of a item for their seller using information from their site. This lets the Partner increase the exposure of items on their site and leverage the eBay user listing experience seamlessly. This experience provides guidance on pricing, aspects, etc. and recommendations that help create a listing that is complete and improves the exposure of the listing in search results. After the listing draft is created, the seller logs into their eBay account and uses the listing experience to finish the listing and publish the item on eBay.
     * @param {String} X_EBAY_C_MARKETPLACE_ID Use this header to specify an eBay marketplace ID. For a list of supported sites, see API Restrictions in the Listing API overview.
     * @param {Object} opts Optional parameters
     * @param {String} [contentLanguage] Use this header to specify the natural language of the seller. For details, see Content-Language in HTTP request headers. Required: For EBAY_CA in French. (Content-Language = fr-CA)
     * @param {module:model/ItemDraft} [itemDraft] 
     * @param {module:api/ItemDraftApi~createItemDraftCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemDraftResponse}
     */
    createItemDraft(X_EBAY_C_MARKETPLACE_ID, opts, callback) {
      opts = opts || {};
      let postBody = opts['itemDraft'];
      // verify the required parameter 'X_EBAY_C_MARKETPLACE_ID' is set
      if (X_EBAY_C_MARKETPLACE_ID === undefined || X_EBAY_C_MARKETPLACE_ID === null) {
        throw new Error("Missing the required parameter 'X_EBAY_C_MARKETPLACE_ID' when calling createItemDraft");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Content-Language': opts['contentLanguage'],
        'X-EBAY-C-MARKETPLACE-ID': X_EBAY_C_MARKETPLACE_ID
      };
      let formParams = {
      };

      let authNames = ['api_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ItemDraftResponse;
      return this.apiClient.callApi(
        '/item_draft/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
