/**
 * Listing API
 * <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited\" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units.</span><br /><br />Enables a seller adding an ad or item on a Partner's site to automatically create an eBay listing draft using the item details from the Partner's site.
 *
 * The version of the OpenAPI document: v1_beta.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';

/**
 * The PricingSummary model module.
 * @module model/PricingSummary
 * @version v1_beta.3.0
 */
class PricingSummary {
    /**
     * Constructs a new <code>PricingSummary</code>.
     * The type that defines the fields for the price details for an item.
     * @alias module:model/PricingSummary
     */
    constructor() { 
        
        PricingSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PricingSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PricingSummary} obj Optional instance to populate.
     * @return {module:model/PricingSummary} The populated <code>PricingSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PricingSummary();

            if (data.hasOwnProperty('auctionReservePrice')) {
                obj['auctionReservePrice'] = Amount.constructFromObject(data['auctionReservePrice']);
            }
            if (data.hasOwnProperty('auctionStartPrice')) {
                obj['auctionStartPrice'] = Amount.constructFromObject(data['auctionStartPrice']);
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = Amount.constructFromObject(data['price']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PricingSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PricingSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `auctionReservePrice`
        if (data['auctionReservePrice']) { // data not null
          Amount.validateJSON(data['auctionReservePrice']);
        }
        // validate the optional field `auctionStartPrice`
        if (data['auctionStartPrice']) { // data not null
          Amount.validateJSON(data['auctionStartPrice']);
        }
        // validate the optional field `price`
        if (data['price']) { // data not null
          Amount.validateJSON(data['price']);
        }

        return true;
    }


}



/**
 * @member {module:model/Amount} auctionReservePrice
 */
PricingSummary.prototype['auctionReservePrice'] = undefined;

/**
 * @member {module:model/Amount} auctionStartPrice
 */
PricingSummary.prototype['auctionStartPrice'] = undefined;

/**
 * @member {module:model/Amount} price
 */
PricingSummary.prototype['price'] = undefined;






export default PricingSummary;

