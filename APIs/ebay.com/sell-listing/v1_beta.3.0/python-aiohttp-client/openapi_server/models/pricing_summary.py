# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server import util


class PricingSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auction_reserve_price: Amount=None, auction_start_price: Amount=None, price: Amount=None):
        """PricingSummary - a model defined in OpenAPI

        :param auction_reserve_price: The auction_reserve_price of this PricingSummary.
        :param auction_start_price: The auction_start_price of this PricingSummary.
        :param price: The price of this PricingSummary.
        """
        self.openapi_types = {
            'auction_reserve_price': Amount,
            'auction_start_price': Amount,
            'price': Amount
        }

        self.attribute_map = {
            'auction_reserve_price': 'auctionReservePrice',
            'auction_start_price': 'auctionStartPrice',
            'price': 'price'
        }

        self._auction_reserve_price = auction_reserve_price
        self._auction_start_price = auction_start_price
        self._price = price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PricingSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PricingSummary of this PricingSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auction_reserve_price(self):
        """Gets the auction_reserve_price of this PricingSummary.


        :return: The auction_reserve_price of this PricingSummary.
        :rtype: Amount
        """
        return self._auction_reserve_price

    @auction_reserve_price.setter
    def auction_reserve_price(self, auction_reserve_price):
        """Sets the auction_reserve_price of this PricingSummary.


        :param auction_reserve_price: The auction_reserve_price of this PricingSummary.
        :type auction_reserve_price: Amount
        """

        self._auction_reserve_price = auction_reserve_price

    @property
    def auction_start_price(self):
        """Gets the auction_start_price of this PricingSummary.


        :return: The auction_start_price of this PricingSummary.
        :rtype: Amount
        """
        return self._auction_start_price

    @auction_start_price.setter
    def auction_start_price(self, auction_start_price):
        """Sets the auction_start_price of this PricingSummary.


        :param auction_start_price: The auction_start_price of this PricingSummary.
        :type auction_start_price: Amount
        """

        self._auction_start_price = auction_start_price

    @property
    def price(self):
        """Gets the price of this PricingSummary.


        :return: The price of this PricingSummary.
        :rtype: Amount
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this PricingSummary.


        :param price: The price of this PricingSummary.
        :type price: Amount
        """

        self._price = price
