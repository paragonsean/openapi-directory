/**
 * Marketing API
 * <p>The <i>Marketing API </i> offers two platforms that sellers can use to promote and advertise their products:</p> <ul><li><b>Promoted Listings</b> is an eBay ad service that lets sellers set up <i>ad campaigns </i> for the products they want to promote. eBay displays the ads in search results and in other marketing modules as <b>SPONSORED</b> listings. If an item in a Promoted Listings campaign sells, the seller is assessed a Promoted Listings fee, which is a seller-specified percentage applied to the sales price. For complete details, refer to the <a href=\"/api-docs/sell/static/marketing/pl-landing.html\">Promoted Listings playbook</a>.</li><li><b>Promotions Manager</b> gives sellers a way to offer discounts on specific items as a way to attract buyers to their inventory. Sellers can set up discounts (such as \"20% off\" and other types of offers) on specific items or on an entire customer order. To further attract buyers, eBay prominently displays promotion <i>teasers</i> throughout buyer flows. For complete details, see <a href=\"/api-docs/sell/static/marketing/promotions-manager.html\">Promotions Manager</a>.</li></ul>  <p><b>Marketing reports</b>, on both the Promoted Listings and Promotions Manager platforms, give sellers information that shows the effectiveness of their marketing strategies. The data gives sellers the ability to review and fine tune their marketing efforts.</p> <p class=\"tablenote\"><b>Important!</b> Sellers must have an active eBay Store subscription, and they must accept the <b>Terms and Conditions</b> before they can make requests to these APIs in the Production environment. There are also site-specific listings requirements and restrictions associated with these marketing tools, as listed in the \"requirements and restrictions\" sections for <a href=\"/api-docs/sell/marketing/static/overview.html#PL-requirements\">Promoted Listings</a> and <a href=\"/api-docs/sell/marketing/static/overview.html#PM-requirements\">Promotions Manager</a>.</p> <p>The table below lists all the Marketing API calls grouped by resource.</p>
 *
 * The version of the OpenAPI document: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ReportMetadata from '../model/ReportMetadata';
import ReportMetadatas from '../model/ReportMetadatas';

/**
* AdReportMetadata service.
* @module api/AdReportMetadataApi
* @version v1.15.0
*/
export default class AdReportMetadataApi {

    /**
    * Constructs a new AdReportMetadataApi. 
    * @alias module:api/AdReportMetadataApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getReportMetadata operation.
     * @callback module:api/AdReportMetadataApi~getReportMetadataCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReportMetadatas} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This call retrieves information that details the fields used in each of the Promoted Listings reports. Use the returned information to configure the different types of Promoted Listings reports.</br></br>The request for this method does not use a payload or any URI parameters.<br/><br/><span class=\"tablenote\"><b>Note:</b> The reporting of some data related to sales and ad-fees may require a 72-hour (<b>maximum</b>) adjustment period which is often referred to as the <i>Reconciliation Period</i>. Such adjustment periods should, on average, be minimal. However, at any given time, the <b>payments</b> tab may be used to view those amounts that have actually been charged.</span>
     * @param {module:api/AdReportMetadataApi~getReportMetadataCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReportMetadatas}
     */
    getReportMetadata(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReportMetadatas;
      return this.apiClient.callApi(
        '/ad_report_metadata', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getReportMetadataForReportType operation.
     * @callback module:api/AdReportMetadataApi~getReportMetadataForReportTypeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReportMetadata} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This call retrieves metadata that details the fields used by a specific Promoted Listings report type. Use the <b>report_type</b> path parameter to indicate metadata to retrieve.<br/><br/>This method does not use a request payload.<br/><br/><span class=\"tablenote\"><b>Note:</b> The reporting of some data related to sales and ad-fees may require a 72-hour (<b>maximum</b>) adjustment period which is often referred to as the <i>Reconciliation Period</i>. Such adjustment periods should, on average, be minimal. However, at any given time, the <b>payments</b> tab may be used to view those amounts that have actually been charged.</span>
     * @param {String} reportType The name of the report type whose metadata you want to retrieve.<br /><br /><span class=\"tablenote\"><b>Tip:</b> For details about available report types and their descriptions, refer to the <a href=\"/api-docs/sell/marketing/types/plr:ReportTypeEnum\">ReportTypeEnum</a>.</span>
     * @param {module:api/AdReportMetadataApi~getReportMetadataForReportTypeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReportMetadata}
     */
    getReportMetadataForReportType(reportType, callback) {
      let postBody = null;
      // verify the required parameter 'reportType' is set
      if (reportType === undefined || reportType === null) {
        throw new Error("Missing the required parameter 'reportType' when calling getReportMetadataForReportType");
      }

      let pathParams = {
        'report_type': reportType
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReportMetadata;
      return this.apiClient.callApi(
        '/ad_report_metadata/{report_type}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
