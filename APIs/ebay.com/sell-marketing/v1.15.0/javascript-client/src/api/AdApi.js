/**
 * Marketing API
 * <p>The <i>Marketing API </i> offers two platforms that sellers can use to promote and advertise their products:</p> <ul><li><b>Promoted Listings</b> is an eBay ad service that lets sellers set up <i>ad campaigns </i> for the products they want to promote. eBay displays the ads in search results and in other marketing modules as <b>SPONSORED</b> listings. If an item in a Promoted Listings campaign sells, the seller is assessed a Promoted Listings fee, which is a seller-specified percentage applied to the sales price. For complete details, refer to the <a href=\"/api-docs/sell/static/marketing/pl-landing.html\">Promoted Listings playbook</a>.</li><li><b>Promotions Manager</b> gives sellers a way to offer discounts on specific items as a way to attract buyers to their inventory. Sellers can set up discounts (such as \"20% off\" and other types of offers) on specific items or on an entire customer order. To further attract buyers, eBay prominently displays promotion <i>teasers</i> throughout buyer flows. For complete details, see <a href=\"/api-docs/sell/static/marketing/promotions-manager.html\">Promotions Manager</a>.</li></ul>  <p><b>Marketing reports</b>, on both the Promoted Listings and Promotions Manager platforms, give sellers information that shows the effectiveness of their marketing strategies. The data gives sellers the ability to review and fine tune their marketing efforts.</p> <p class=\"tablenote\"><b>Important!</b> Sellers must have an active eBay Store subscription, and they must accept the <b>Terms and Conditions</b> before they can make requests to these APIs in the Production environment. There are also site-specific listings requirements and restrictions associated with these marketing tools, as listed in the \"requirements and restrictions\" sections for <a href=\"/api-docs/sell/marketing/static/overview.html#PL-requirements\">Promoted Listings</a> and <a href=\"/api-docs/sell/marketing/static/overview.html#PM-requirements\">Promotions Manager</a>.</p> <p>The table below lists all the Marketing API calls grouped by resource.</p>
 *
 * The version of the OpenAPI document: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Ad from '../model/Ad';
import AdIds from '../model/AdIds';
import AdPagedCollectionResponse from '../model/AdPagedCollectionResponse';
import AdReferences from '../model/AdReferences';
import Ads from '../model/Ads';
import BulkAdResponse from '../model/BulkAdResponse';
import BulkAdUpdateResponse from '../model/BulkAdUpdateResponse';
import BulkAdUpdateStatusByListingIdResponse from '../model/BulkAdUpdateStatusByListingIdResponse';
import BulkAdUpdateStatusResponse from '../model/BulkAdUpdateStatusResponse';
import BulkCreateAdRequest from '../model/BulkCreateAdRequest';
import BulkCreateAdsByInventoryReferenceRequest from '../model/BulkCreateAdsByInventoryReferenceRequest';
import BulkCreateAdsByInventoryReferenceResponse from '../model/BulkCreateAdsByInventoryReferenceResponse';
import BulkDeleteAdRequest from '../model/BulkDeleteAdRequest';
import BulkDeleteAdResponse from '../model/BulkDeleteAdResponse';
import BulkDeleteAdsByInventoryReferenceRequest from '../model/BulkDeleteAdsByInventoryReferenceRequest';
import BulkDeleteAdsByInventoryReferenceResponse from '../model/BulkDeleteAdsByInventoryReferenceResponse';
import BulkUpdateAdStatusByListingIdRequest from '../model/BulkUpdateAdStatusByListingIdRequest';
import BulkUpdateAdStatusRequest from '../model/BulkUpdateAdStatusRequest';
import BulkUpdateAdsByInventoryReferenceResponse from '../model/BulkUpdateAdsByInventoryReferenceResponse';
import CreateAdRequest from '../model/CreateAdRequest';
import CreateAdsByInventoryReferenceRequest from '../model/CreateAdsByInventoryReferenceRequest';
import DeleteAdsByInventoryReferenceRequest from '../model/DeleteAdsByInventoryReferenceRequest';
import UpdateBidPercentageRequest from '../model/UpdateBidPercentageRequest';

/**
* Ad service.
* @module api/AdApi
* @version v1.15.0
*/
export default class AdApi {

    /**
    * Constructs a new AdApi. 
    * @alias module:api/AdApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the bulkCreateAdsByInventoryReference operation.
     * @callback module:api/AdApi~bulkCreateAdsByInventoryReferenceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BulkCreateAdsByInventoryReferenceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This method adds multiple listings that are managed with the <a href=\"/api-docs/sell/inventory/resources/methods\" title=\"Inventory API Reference\">Inventory API</a> to an existing Promoted Listings campaign.<br /><br />For Promoted Listings Standard (PLS) campaigns using the Cost Per Sale (CPS) model, bulk ads may be directly created for the listing.<br /><br />For each listing specified in the request, this method:<br /><ul><li>Creates an ad for the listing.</li> <li>Sets the bid percentage (also known as the <i>ad rate</i>) for the ads created.</li> <li>Associates the ads created with the specified campaign.</li></ul><br />To create ads for a listing, specify their <b>inventoryReferenceId</b> and <b>inventoryReferenceType</b>, plus the <b>bidPercentage</b> for the ad in the payload of the request. Specify the campaign to which you want to associate the ads using the <b>campaign_id</b> path parameter.<br /><br /><span class=\"tablenote\"><b>Note:</b> This method only applies to the Cost Per Sale (CPS) funding model; it does not apply to the Cost Per Click (CPC) funding model. See <a href=\"/api-docs/sell/static/marketing/pl-overview.html#funding-model\">Funding Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span><br /><br />Use <a href=\"/api-docs/sell/marketing/resources/campaign/methods/createCampaign\">createCampaign</a> to create a new campaign and use <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> to get a list of existing campaigns.
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that is generated when a campaign is created. Get a seller's campaign IDs by calling <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a>.
     * @param {module:model/BulkCreateAdsByInventoryReferenceRequest} bulkCreateAdsByInventoryReferenceRequest The container for the bulk request to create ads for eBay inventory reference IDs. eBay inventory reference IDs are seller-defined IDs used by theInventory API.
     * @param {module:api/AdApi~bulkCreateAdsByInventoryReferenceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BulkCreateAdsByInventoryReferenceResponse}
     */
    bulkCreateAdsByInventoryReference(campaignId, bulkCreateAdsByInventoryReferenceRequest, callback) {
      let postBody = bulkCreateAdsByInventoryReferenceRequest;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling bulkCreateAdsByInventoryReference");
      }
      // verify the required parameter 'bulkCreateAdsByInventoryReferenceRequest' is set
      if (bulkCreateAdsByInventoryReferenceRequest === undefined || bulkCreateAdsByInventoryReferenceRequest === null) {
        throw new Error("Missing the required parameter 'bulkCreateAdsByInventoryReferenceRequest' when calling bulkCreateAdsByInventoryReference");
      }

      let pathParams = {
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BulkCreateAdsByInventoryReferenceResponse;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/bulk_create_ads_by_inventory_reference', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the bulkCreateAdsByListingId operation.
     * @callback module:api/AdApi~bulkCreateAdsByListingIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BulkAdResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This method adds multiple listings to an existing Promoted Listings campaign using <b>listingId</b> values generated by the <a href=\"/Devzone/XML/docs/Reference/eBay/index.html\" title=\"Trading API Reference\">Trading API</a> or <a href=\"/api-docs/sell/inventory/resources/methods\" title=\"Inventory API Reference\">Inventory API</a>, or using values generated by an ad group ID.<p>For Promoted Listings Standard (PLS) campaigns using the Cost Per Sale (CPS) funding model, bulk ads may be directly created for the listing.</p><p>For each listing ID specified in the request, this method:</p>  <ul><li>Creates an ad for the listing.</li> <li>Sets the bid percentage (also known as the <i>ad rate</i>) for the ad.</li> <li>Associates the ad with the specified campaign.</li></ul><p>To create an ad for a listing, specify its <b>listingId</b>, plus the <b>bidPercentage</b> for the ad in the payload of the request. Specify the campaign to associate the ads with using the <b>campaign_id</b> path parameter. Listing IDs are generated by eBay when a seller creates listings with the Trading API.</p><p>You can specify a maximum of <b>500 listings per call</b> and each campaign can have ads for a maximum of 50,000 items. Be aware when using this call that each variation in a multiple-variation listing creates an individual ad.</p><p>For Promoted Listings Advanced (PLA) campaigns using the Cost Per Click (CPC) funding model, an ad group must be created first. If no ad group has been created for the campaign, ads cannot be created.</p><p>For the ad group specified in the request, this method associates the ad with the specified ad group.</p><p>To create an ad for an ad group, specify the name of the ad group plus the <b>defaultBid</b> for the ad in the payload of the request. Specify the campaign to associate the ads with using the <b>campaign_id</b> path parameter. Ad groups are generated using the <a href=\"/api-docs/sell/marketing/resources/adgroup/methods/createAdGroup\">createAdGroup</a>  method.</p> <p>You can specify one or more ad groups per campaign.</p><p>Use <a href=\"/api-docs/sell/marketing/resources/campaign/methods/createCampaign\">createCampaign</a> to create a new campaign and use <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> to get a list of existing campaigns.</p>
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that's generated when a campaign is created. Get a seller's campaign IDs by calling <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a>.
     * @param {module:model/BulkCreateAdRequest} bulkCreateAdRequest The container for the bulk request to create ads for eBay listing IDs. eBay listing IDs are generated by the Trading API and Inventory API when the listing is created on eBay.
     * @param {module:api/AdApi~bulkCreateAdsByListingIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BulkAdResponse}
     */
    bulkCreateAdsByListingId(campaignId, bulkCreateAdRequest, callback) {
      let postBody = bulkCreateAdRequest;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling bulkCreateAdsByListingId");
      }
      // verify the required parameter 'bulkCreateAdRequest' is set
      if (bulkCreateAdRequest === undefined || bulkCreateAdRequest === null) {
        throw new Error("Missing the required parameter 'bulkCreateAdRequest' when calling bulkCreateAdsByListingId");
      }

      let pathParams = {
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BulkAdResponse;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/bulk_create_ads_by_listing_id', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the bulkDeleteAdsByInventoryReference operation.
     * @callback module:api/AdApi~bulkDeleteAdsByInventoryReferenceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BulkDeleteAdsByInventoryReferenceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This method works with listings created with the <a href=\"/api-docs/sell/inventory/resources/methods\" title=\"Inventory API Reference\">Inventory API</a>.<br /><br />The method deletes a set of ads, as specified by a list of inventory reference IDs, from the specified campaign. <i>Inventory reference IDs</i> are seller-defined IDs that are used with the Inventory API</a>.<br /><br />Pass the <b>campaign_id</b> as a path parameter and populate the payload with a list of <b>inventoryReferenceId</b> and <b>inventoryReferenceType</b> pairs that you want to delete.<br /><br />Get the campaign IDs for a seller by calling <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> and call <a href=\"/api-docs/sell/marketing/resources/ad/methods/getAds\">getAds</a> to get a list of the seller's inventory reference IDs.<br /><br /><span class=\"tablenote\"><b>Note:</b> This method only applies to the Cost Per Sale (CPS) funding model; it does not apply to the Cost Per Click (CPC) funding model. See <a href=\"/api-docs/sell/static/marketing/pl-overview.html#funding-model\">Funding Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span>
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that's generated when a campaign is created. Get a seller's campaign IDs by calling <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a>.
     * @param {module:model/BulkDeleteAdsByInventoryReferenceRequest} bulkDeleteAdsByInventoryReferenceRequest This request works with listings created via the <a href=\"/api-docs/sell/inventory/resources/methods\">Inventory API</a>.<br /><br />The request is to delete a set of ads in bulk, as specified by a list of inventory reference IDs from the specified campaign.
     * @param {module:api/AdApi~bulkDeleteAdsByInventoryReferenceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BulkDeleteAdsByInventoryReferenceResponse}
     */
    bulkDeleteAdsByInventoryReference(campaignId, bulkDeleteAdsByInventoryReferenceRequest, callback) {
      let postBody = bulkDeleteAdsByInventoryReferenceRequest;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling bulkDeleteAdsByInventoryReference");
      }
      // verify the required parameter 'bulkDeleteAdsByInventoryReferenceRequest' is set
      if (bulkDeleteAdsByInventoryReferenceRequest === undefined || bulkDeleteAdsByInventoryReferenceRequest === null) {
        throw new Error("Missing the required parameter 'bulkDeleteAdsByInventoryReferenceRequest' when calling bulkDeleteAdsByInventoryReference");
      }

      let pathParams = {
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BulkDeleteAdsByInventoryReferenceResponse;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/bulk_delete_ads_by_inventory_reference', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the bulkDeleteAdsByListingId operation.
     * @callback module:api/AdApi~bulkDeleteAdsByListingIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BulkDeleteAdResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This method works with listing IDs created with either the <a href=\"/Devzone/XML/docs/Reference/eBay/index.html\" title=\"Trading API Reference\">Trading API</a> or the <a href=\"/api-docs/sell/inventory/resources/methods\" title=\"Inventory API Reference\">Inventory API</a>.<br /><br />The method deletes a set of ads, as specified by a list of <b>listingID</b> values from a Promoted Listings campaign. A listing ID value is generated by eBay when a seller creates a listing with either the Trading API and Inventory API.<br /><br />Pass the <b>campaign_id</b> as a path parameter and populate the payload with the set of listing IDs that you want to delete.<br /><br />Get the campaign IDs for a seller by calling <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> and call <a href=\"/api-docs/sell/marketing/resources/ad/methods/getAds\">getAds</a> to get a list of the seller's inventory reference IDs.<br /><br /><span class=\"tablenote\"><b>Note:</b> This method only applies to the Cost Per Sale (CPS) funding model; it does not apply to the Cost Per Click (CPC) funding model. See <a href=\"/api-docs/sell/static/marketing/pl-overview.html#funding-model\">Funding Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span><br /><br />When using the CPC funding model, use the <a href=\"/api-docs/sell/marketing/resources/ad/methods/bulkUpdateAdsStatusByListingId\">bulkUpdateAdsStatusByListingId</a> method to change the status of ads to ARCHIVED.
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that's generated when a campaign is created. Get a seller's campaign IDs by calling <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a>.
     * @param {module:model/BulkDeleteAdRequest} bulkDeleteAdRequest This request object defines the fields for the <b>bulkDeleteAdsByListingId</b> request.
     * @param {module:api/AdApi~bulkDeleteAdsByListingIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BulkDeleteAdResponse}
     */
    bulkDeleteAdsByListingId(campaignId, bulkDeleteAdRequest, callback) {
      let postBody = bulkDeleteAdRequest;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling bulkDeleteAdsByListingId");
      }
      // verify the required parameter 'bulkDeleteAdRequest' is set
      if (bulkDeleteAdRequest === undefined || bulkDeleteAdRequest === null) {
        throw new Error("Missing the required parameter 'bulkDeleteAdRequest' when calling bulkDeleteAdsByListingId");
      }

      let pathParams = {
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BulkDeleteAdResponse;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/bulk_delete_ads_by_listing_id', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the bulkUpdateAdsBidByInventoryReference operation.
     * @callback module:api/AdApi~bulkUpdateAdsBidByInventoryReferenceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BulkUpdateAdsByInventoryReferenceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This method works with listings created with either the <a href=\"/Devzone/XML/docs/Reference/eBay/index.html\" title=\"Trading API Reference\">Trading API</a> or the <a href=\"/api-docs/sell/inventory/resources/methods\" title=\"Inventory API Reference\">Inventory API</a>.  <p>The method updates the <b>bidPercentage</b> values for a set of ads associated with the specified campaign.</p>  <p>Specify the <b>campaign_id</b> as a path parameter and supply a set of listing IDs with their associated updated <b>bidPercentage</b> values in the request body. An eBay listing ID is generated when a listing is created with the Trading API.</p>  <p>Get the campaign IDs for a seller by calling <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> and call <a href=\"/api-docs/sell/marketing/resources/ad/methods/getAds\">getAds</a> to get a list of the seller's inventory reference IDs.</p><span class=\"tablenote\"><b>Note:</b> This method only applies to the Cost Per Sale (CPS) funding model; it does not apply to the Cost Per Click (CPC) funding model. See <a href=\"/api-docs/sell/static/marketing/pl-overview.html#funding-model\">Funding Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span>
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that's generated when a campaign is created. Get a seller's campaign IDs by calling <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a>.
     * @param {module:model/BulkCreateAdsByInventoryReferenceRequest} bulkCreateAdsByInventoryReferenceRequest This request object defines the fields for the <b>BulkCreateAdsByInventoryReference</b> request.
     * @param {module:api/AdApi~bulkUpdateAdsBidByInventoryReferenceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BulkUpdateAdsByInventoryReferenceResponse}
     */
    bulkUpdateAdsBidByInventoryReference(campaignId, bulkCreateAdsByInventoryReferenceRequest, callback) {
      let postBody = bulkCreateAdsByInventoryReferenceRequest;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling bulkUpdateAdsBidByInventoryReference");
      }
      // verify the required parameter 'bulkCreateAdsByInventoryReferenceRequest' is set
      if (bulkCreateAdsByInventoryReferenceRequest === undefined || bulkCreateAdsByInventoryReferenceRequest === null) {
        throw new Error("Missing the required parameter 'bulkCreateAdsByInventoryReferenceRequest' when calling bulkUpdateAdsBidByInventoryReference");
      }

      let pathParams = {
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BulkUpdateAdsByInventoryReferenceResponse;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/bulk_update_ads_bid_by_inventory_reference', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the bulkUpdateAdsBidByListingId operation.
     * @callback module:api/AdApi~bulkUpdateAdsBidByListingIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BulkAdUpdateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This method works with listings created with either the <a href=\"/Devzone/XML/docs/Reference/eBay/index.html\" title=\"Trading API Reference\">Trading API</a> or the <a href=\"/api-docs/sell/inventory/resources/methods\" title=\"Inventory API Reference\">Inventory API</a>.  <p>The method updates the <b>bidPercentage</b> values for a set of ads associated with the specified campaign.</p>  <p>Specify the <b>campaign_id</b> as a path parameter and supply a set of listing IDs with their associated updated <b>bidPercentage</b> values in the request body. An eBay listing ID is generated when a listing is created with the Trading API.</p>  <p>Get the campaign IDs for a seller by calling <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> and call <a href=\"/api-docs/sell/marketing/resources/ad/methods/getAds\">getAds</a> to get a list of the seller's inventory reference IDs.</p><span class=\"tablenote\"><b>Note:</b> This method only applies to the Cost Per Sale (CPS) funding model; it does not apply to the Cost Per Click (CPC) funding model. See <a href=\"/api-docs/sell/static/marketing/pl-overview.html#funding-model\">Funding Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span>
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that's generated when a campaign is created. Get a seller's campaign IDs by calling <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a>.
     * @param {module:model/BulkCreateAdRequest} bulkCreateAdRequest This request object defines the fields for the <b>BulkCreateAdsByListingId</b> request.
     * @param {module:api/AdApi~bulkUpdateAdsBidByListingIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BulkAdUpdateResponse}
     */
    bulkUpdateAdsBidByListingId(campaignId, bulkCreateAdRequest, callback) {
      let postBody = bulkCreateAdRequest;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling bulkUpdateAdsBidByListingId");
      }
      // verify the required parameter 'bulkCreateAdRequest' is set
      if (bulkCreateAdRequest === undefined || bulkCreateAdRequest === null) {
        throw new Error("Missing the required parameter 'bulkCreateAdRequest' when calling bulkUpdateAdsBidByListingId");
      }

      let pathParams = {
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BulkAdUpdateResponse;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/bulk_update_ads_bid_by_listing_id', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the bulkUpdateAdsStatus operation.
     * @callback module:api/AdApi~bulkUpdateAdsStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BulkAdUpdateStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <span class=\"tablenote\"><b>Note:</b> This method is only available for select partners who have been approved for the eBay Promoted Listings Advanced (PLA) program. For information about how to request access to this program, refer to <a href=\"/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests \" target=\"_blank \"> Promoted Listings Advanced Access Requests</a> in the Promoted Listings Playbook. To determine if a seller qualifies for PLA, use the <a href=\"/api-docs/sell/account/resources/advertising_eligibility/methods/getAdvertisingEligibility \" target=\"_blank \">getAdvertisingEligibility</a> method in Account API.</span><br />This method works with listings created with either the <a href= \"/Devzone/XML/docs/Reference/eBay/index.html\">Trading API</a> or the <a href=\"/api-docs/sell/inventory/resources/methods\">Inventory API</a>.<br /><br />This method updates the status of ads in bulk.<br /><br />Specify the <b>campaign_id</b> you want to update as a URI parameter, and configure the <b>adGroupStatus</b> in the request payload.
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that is generated when a campaign is created.<br /><br /><span class=\"tablenote\"><b>Note:</b> You can retrieve the campaign IDs for a specified seller using the <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> method.</span>
     * @param {module:model/BulkUpdateAdStatusRequest} bulkUpdateAdStatusRequest The bulk request to update the ads.
     * @param {module:api/AdApi~bulkUpdateAdsStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BulkAdUpdateStatusResponse}
     */
    bulkUpdateAdsStatus(campaignId, bulkUpdateAdStatusRequest, callback) {
      let postBody = bulkUpdateAdStatusRequest;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling bulkUpdateAdsStatus");
      }
      // verify the required parameter 'bulkUpdateAdStatusRequest' is set
      if (bulkUpdateAdStatusRequest === undefined || bulkUpdateAdStatusRequest === null) {
        throw new Error("Missing the required parameter 'bulkUpdateAdStatusRequest' when calling bulkUpdateAdsStatus");
      }

      let pathParams = {
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BulkAdUpdateStatusResponse;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/bulk_update_ads_status', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the bulkUpdateAdsStatusByListingId operation.
     * @callback module:api/AdApi~bulkUpdateAdsStatusByListingIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BulkAdUpdateStatusByListingIdResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <span class=\"tablenote\"><b>Note:</b> This method is only available for select partners who have been approved for the eBay Promoted Listings Advanced (PLA) program. For information about how to request access to this program, refer to <a href=\"/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests \" target=\"_blank \"> Promoted Listings Advanced Access Requests</a> in the Promoted Listings Playbook. To determine if a seller qualifies for PLA, use the <a href=\"/api-docs/sell/account/resources/advertising_eligibility/methods/getAdvertisingEligibility \" target=\"_blank \">getAdvertisingEligibility</a> method in Account API.</span><br />This method works with listings created with either the <a href=\"/Devzone/XML/docs/Reference/eBay/index.html\">Trading API</a> or the <a href=\"/api-docs/sell/inventory/resources/methods\">Inventory API</a>.<br /><br />The method updates the status of ads in bulk, based on listing ID values.<br /><br />Specify the <b>campaign_id</b> as a path parameter and supply a set of listing IDs with their updated <b>adStatus</b> values in the request body. An eBay listing ID is generated when a listing is created with the Trading API.<br /><br />Get the campaign IDs for a seller by calling <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> and call <a href=\"/api-docs/sell/marketing/resources/ad/methods/getAds\">getAds</a> to retrieve a list of seller inventory reference IDs.
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that is generated when a campaign is created.<br /><br /><span class=\"tablenote\"><b>Note:</b> You can retrieve the campaign IDs for a specified seller using the <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> method.</span>
     * @param {module:model/BulkUpdateAdStatusByListingIdRequest} bulkUpdateAdStatusByListingIdRequest The bulk request to update ads.
     * @param {module:api/AdApi~bulkUpdateAdsStatusByListingIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BulkAdUpdateStatusByListingIdResponse}
     */
    bulkUpdateAdsStatusByListingId(campaignId, bulkUpdateAdStatusByListingIdRequest, callback) {
      let postBody = bulkUpdateAdStatusByListingIdRequest;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling bulkUpdateAdsStatusByListingId");
      }
      // verify the required parameter 'bulkUpdateAdStatusByListingIdRequest' is set
      if (bulkUpdateAdStatusByListingIdRequest === undefined || bulkUpdateAdStatusByListingIdRequest === null) {
        throw new Error("Missing the required parameter 'bulkUpdateAdStatusByListingIdRequest' when calling bulkUpdateAdsStatusByListingId");
      }

      let pathParams = {
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BulkAdUpdateStatusByListingIdResponse;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/bulk_update_ads_status_by_listing_id', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createAdByListingId operation.
     * @callback module:api/AdApi~createAdByListingIdCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This method adds a listing to an existing Promoted Listings campaign using a <b>listingId</b> value generated by the <a href=\"/Devzone/XML/docs/Reference/eBay/index.html\" title=\"Trading API Reference\">Trading API</a> or <a href=\"/api-docs/sell/inventory/resources/methods\" title=\"Inventory API Reference\">Inventory API</a>, or using a value generated by an ad group ID. <p>For Promoted Listings Standard (PLS) campaigns using the Cost Per Sale (CPS) funding model, an ad may be directly created for the listing.</p><p>For the listing ID specified in the request, this method:</p>  <ul><li>Creates an ad for the listing.</li> <li>Sets the bid percentage (also known as the <i>ad rate</i>) for the ad.</li> <li>Associates the ad with the specified campaign.</li></ul>  <p>To create an ad for a listing, specify its <b>listingId</b>, plus the <b>bidPercentage</b> for the ad in the payload of the request. Specify the campaign to associate the ad with using the <b>campaign_id</b> path parameter. Listing IDs are generated by eBay when a seller creates listings with the Trading API.</p><p>For Promoted Listings Advanced (PLA) campaigns using the Cost Per Click (CPC) funding model, an ad group must be created first. If no ad group has been created for the campaign, an ad cannot be created.</p><p>For the ad group specified in the request, this method associates the ad with the specified ad group.</p><p>To create an ad for an ad group, specify the name of the ad group in the payload of the request. Specify the campaign to associate the ads with using the <b>campaign_id</b> path parameter. Ad groups are generated using the <a href=\"/api-docs/sell/marketing/resources/adgroup/methods/createAdGroup\">createAdGroup</a> method.</p> <p>You can specify one or more ad groups per campaign.</p><p>Use <a href=\"/api-docs/sell/marketing/resources/campaign/methods/createCampaign\">createCampaign</a> to create a new campaign and use <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> to get a list of existing campaigns.</p><p>This call has no response payload. If the ad is successfully created, a <code>201 Created</code> HTTP status code and the <a href=\"/api-docs/sell/marketing/resources/ad/methods/getAd\">getAd</a> URI of the ad are returned in the location header.</p>
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that is generated when a campaign is created.<br /><br /><span class=\"tablenote\"><b>Note:</b> You can retrieve the campaign IDs for a specified seller using the <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> method.</span>
     * @param {module:model/CreateAdRequest} createAdRequest This request object defines the fields used in the <b>createAdByListingId</b> request.
     * @param {module:api/AdApi~createAdByListingIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createAdByListingId(campaignId, createAdRequest, callback) {
      let postBody = createAdRequest;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling createAdByListingId");
      }
      // verify the required parameter 'createAdRequest' is set
      if (createAdRequest === undefined || createAdRequest === null) {
        throw new Error("Missing the required parameter 'createAdRequest' when calling createAdByListingId");
      }

      let pathParams = {
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/ad', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createAdsByInventoryReference operation.
     * @callback module:api/AdApi~createAdsByInventoryReferenceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdReferences} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This method adds a listing that is managed with the <a href=\"/api-docs/sell/inventory/resources/methods\" title=\"Inventory API Reference\">Inventory API</a> to an existing Promoted Listings campaign.<br /><br />For Promoted Listings Standard (PLS) campaigns using the Cost Per Sale (CPS) funding model, an ad may be directly created for the listing.<br /><br />For each listing specified in the request, this method:<br /><ul><li>Creates an ad for the listing.</li> <li>Sets the bid percentage (also known as the <i>ad rate</i>) for the ads created.</li> <li>Associates the created ad with the specified campaign.</li></ul><br />To create an ad for a listing, specify its <b>inventoryReferenceId</b> and <b>inventoryReferenceType</b>, plus the <b>bidPercentage</b> for the ad in the payload of the request. Specify the campaign to associate the ad with using the <b>campaign_id</b> path parameter.<br /><br /><span class=\"tablenote\"><b>Note:</b> This method only applies to the Cost Per Sale (CPS) funding model; it does not apply to the Cost Per Click (CPC) funding model. See <a href=\"/api-docs/sell/static/marketing/pl-overview.html#funding-model\">Funding Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span><br /><br />Use <a href=\"/api-docs/sell/marketing/resources/campaign/methods/createCampaign\">createCampaign</a> to create a new campaign and use <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> to get a list of existing campaigns.
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that is generated when a campaign is created.<br /><br /><span class=\"tablenote\"><b>Note:</b> You can retrieve the campaign IDs for a specified seller using the <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> method.</span>
     * @param {module:model/CreateAdsByInventoryReferenceRequest} createAdsByInventoryReferenceRequest This request object defines the fields used in the <b>createAdsByInventoryReference</b> request.
     * @param {module:api/AdApi~createAdsByInventoryReferenceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdReferences}
     */
    createAdsByInventoryReference(campaignId, createAdsByInventoryReferenceRequest, callback) {
      let postBody = createAdsByInventoryReferenceRequest;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling createAdsByInventoryReference");
      }
      // verify the required parameter 'createAdsByInventoryReferenceRequest' is set
      if (createAdsByInventoryReferenceRequest === undefined || createAdsByInventoryReferenceRequest === null) {
        throw new Error("Missing the required parameter 'createAdsByInventoryReferenceRequest' when calling createAdsByInventoryReference");
      }

      let pathParams = {
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AdReferences;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/create_ads_by_inventory_reference', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAd operation.
     * @callback module:api/AdApi~deleteAdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This method removes the specified ad from the specified campaign.<br /><br />Pass the ID of the ad to delete with the ID of the campaign associated with the ad as path parameters to the call.<br /><br />Call <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> to get the current list of the seller's campaign IDs.<br /><br /><span class=\"tablenote\"><b>Note:</b> This method only applies to the Cost Per Sale (CPS) funding model; it does not apply to the Cost Per Click (CPC) funding model. See <a href=\"/api-docs/sell/static/marketing/pl-overview.html#funding-model\">Funding Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span><br /><br />When using the CPC funding model, use the <b>bulkUpdateAdsStatusByListingId</b> method to change the status of ads to ARCHIVED.
     * @param {String} adId Identifier of an ad. This ID was generated when the ad was created.
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that is generated when a campaign is created.<br /><br /><span class=\"tablenote\"><b>Note:</b> You can retrieve the campaign IDs for a specified seller using the <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> method.</span>
     * @param {module:api/AdApi~deleteAdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteAd(adId, campaignId, callback) {
      let postBody = null;
      // verify the required parameter 'adId' is set
      if (adId === undefined || adId === null) {
        throw new Error("Missing the required parameter 'adId' when calling deleteAd");
      }
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling deleteAd");
      }

      let pathParams = {
        'ad_id': adId,
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/ad/{ad_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAdsByInventoryReference operation.
     * @callback module:api/AdApi~deleteAdsByInventoryReferenceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdIds} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This method works with listings that are managed with the <a href=\"/api-docs/sell/inventory/resources/methods\" title=\"Inventory API Reference\">Inventory API</a>.  <p>The method deletes ads using a list of seller-defined inventory reference IDs, used with the Inventory API, that are associated with the specified campaign ID.</p> <p>Specify the campaign ID (as a path parameter) and a list of <b>inventoryReferenceId</b> and <b>inventoryReferenceType</b> pairs to be deleted.</p>  <p>Call <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> to get a list of the seller's current campaign IDs.</p><span class=\"tablenote\"><b>Note:</b> This method only applies to the Cost Per Sale (CPS) funding model; it does not apply to the Cost Per Click (CPC) funding model. See <a href=\"/api-docs/sell/static/marketing/pl-overview.html#funding-model\">Funding Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span><br /><br />When using the CPC funding model, use the bulkUpdateAdsStatusByInventoryReference method to change the status of ads to ARCHIVED.
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that is generated when a campaign is created.<br /><br /><span class=\"tablenote\"><b>Note:</b> You can retrieve the campaign IDs for a specified seller using the <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> method.</span>
     * @param {module:model/DeleteAdsByInventoryReferenceRequest} deleteAdsByInventoryReferenceRequest This request object defines the fields for the <b>deleteAdsByInventoryReference</b> request.
     * @param {module:api/AdApi~deleteAdsByInventoryReferenceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdIds}
     */
    deleteAdsByInventoryReference(campaignId, deleteAdsByInventoryReferenceRequest, callback) {
      let postBody = deleteAdsByInventoryReferenceRequest;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling deleteAdsByInventoryReference");
      }
      // verify the required parameter 'deleteAdsByInventoryReferenceRequest' is set
      if (deleteAdsByInventoryReferenceRequest === undefined || deleteAdsByInventoryReferenceRequest === null) {
        throw new Error("Missing the required parameter 'deleteAdsByInventoryReferenceRequest' when calling deleteAdsByInventoryReference");
      }

      let pathParams = {
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AdIds;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/delete_ads_by_inventory_reference', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAd operation.
     * @callback module:api/AdApi~getAdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Ad} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This method retrieves the specified ad from the specified campaign.  <p>In the request, supply the <b>campaign_id</b> and <b>ad_id</b> as path parameters.</p> <p>Call <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> to retrieve a list of the seller's current campaign IDs and call <a href=\"/api-docs/sell/marketing/resources/ad/methods/getAds\">getAds</a> to retrieve their current ad IDs.</p>
     * @param {String} adId A unique identifier for an ad. This ID is generated when the ad is created.
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that is generated when a campaign is created.<br /><br /><span class=\"tablenote\"><b>Note:</b> You can retrieve the campaign IDs for a specified seller using the <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> method.</span>
     * @param {module:api/AdApi~getAdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Ad}
     */
    getAd(adId, campaignId, callback) {
      let postBody = null;
      // verify the required parameter 'adId' is set
      if (adId === undefined || adId === null) {
        throw new Error("Missing the required parameter 'adId' when calling getAd");
      }
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling getAd");
      }

      let pathParams = {
        'ad_id': adId,
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Ad;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/ad/{ad_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAds operation.
     * @callback module:api/AdApi~getAdsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdPagedCollectionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This method retrieves Promoted Listings ads that are associated with listings created with either the <a href=\"/Devzone/XML/docs/Reference/eBay/index.html\" title=\"Trading API Reference\">Trading API</a> or the <a href=\"/api-docs/sell/inventory/resources/methods\" title=\"Inventory API Reference\">Inventory API</a>. <p>The method retrieves ads related to the specified campaign. Specify the Promoted Listings campaign to target with the <b>campaign_id</b> path parameter.</p>  <p>Because of the large number of possible results, you can use query parameters to paginate the result set by specifying a <b>limit</b>, which dictates how many ads to return on each page of the response. You can also specify how many ads to skip in the result set before returning the first result using the <b>offset</b> path parameter.</p>  <p>Call <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> to retrieve the current campaign IDs for the seller.</p>
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that is generated when a campaign is created.<br /><br /><span class=\"tablenote\"><b>Note:</b> You can retrieve the campaign IDs for a specified seller using the <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> method.</span>
     * @param {Object} opts Optional parameters
     * @param {String} [adGroupIds] A comma-separated list of ad group IDs. The results will be filtered to only include active ads for these ad groups. Call <a href=\"/api-docs/sell/marketing/resources/adgroup/methods/getAdGroups\">getAdGroups</a> to retrieve the ad group ID for the ad group.<br /><br /><span class=\"tablenote\"><b>Note:</b> This field only applies to the Cost Per Click (CPC) funding model; it does not apply to the Cost Per Sale (CPS) funding model.</span>
     * @param {String} [adStatus] A comma-separated list of ad statuses. The results will be filtered to only include the given statuses of the ad. If none are provided, all ads are returned.
     * @param {String} [limit] Specifies the maximum number of ads to return on a page in the paginated response. <p><b>Default: </b>10 <br><b>Maximum:</b> 500</p>
     * @param {String} [listingIds] A comma-separated list of listing IDs. The response includes only active ads (ads associated with a RUNNING campaign). The results do not include listing IDs that are excluded by other conditions.
     * @param {String} [offset] Specifies the number of ads to skip in the result set before returning the first ad in the paginated response.  <p>Combine <b>offset</b> with the <b>limit</b> query parameter to control the items returned in the response. For example, if you supply an <b>offset</b> of <code>0</code> and a <b>limit</b> of <code>10</code>, the first page of the response contains the first 10 items from the complete list of items retrieved by the call. If <b>offset</b> is <code>10</code> and <b>limit</b> is <code>20</code>, the first page of the response contains items 11-30 from the complete result set.</p> <p><b>Default:</b> 0</p>
     * @param {module:api/AdApi~getAdsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdPagedCollectionResponse}
     */
    getAds(campaignId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling getAds");
      }

      let pathParams = {
        'campaign_id': campaignId
      };
      let queryParams = {
        'ad_group_ids': opts['adGroupIds'],
        'ad_status': opts['adStatus'],
        'limit': opts['limit'],
        'listing_ids': opts['listingIds'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AdPagedCollectionResponse;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/ad', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAdsByInventoryReference operation.
     * @callback module:api/AdApi~getAdsByInventoryReferenceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Ads} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This method retrieves Promoted Listings ads associated with listings that are managed with the <a href=\"/api-docs/sell/inventory/resources/methods\" title=\"Inventory API Reference\">Inventory API</a> from the specified campaign.<br /><br />Supply the <b>campaign_id</b> as a path parameter and use query parameters to specify the <b>inventory_reference_id</b> and <b>inventory_reference_type</b> pairs.<br /><br />In the Inventory API, an <i>inventory reference ID</i> is either a seller-defined <b>SKU</b> value or an <b>inventoryItemGroupKey</b> (a seller-defined ID for an inventory item group, which is an entity that's used in the Inventory API to create a multiple-variation listing). To indicate a listing managed by the Inventory API, you must always specify both an <b>inventory_reference_id</b> and the associated <b>inventory_reference_type</b>.<br /><br />Call <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> to retrieve all of the seller's the current campaign IDs.<br /><br /><span class=\"tablenote\"><b>Note:</b> This method only applies to the Cost Per Sale (CPS) funding model; it does not apply to the Cost Per Click (CPC) funding model. See <a href=\"/api-docs/sell/static/marketing/pl-overview.html#funding-model\">Funding Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span>
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that is generated when a campaign is created.<br /><br /><span class=\"tablenote\"><b>Note:</b> You can retrieve the campaign IDs for a specified seller using the <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> method.</span>
     * @param {String} inventoryReferenceId The inventory reference ID associated with the ad you want returned. A seller's inventory reference ID is the ID of either a listing or the ID of an inventory item group (the parent of a multi-variation listing, such as a shirt that is available in multiple sizes and colors). You must always supply in both an <b>inventory_reference_id</b> and an <b>inventory_reference_type</b>.
     * @param {String} inventoryReferenceType The type of the inventory reference ID. Set this value to either <code>INVENTORY_ITEM</CODE> (a single listing) or <code>INVENTORY_ITEM_GROUP</CODE> (a multi-variation listing). You must always pass in both an <b>inventory_reference_id</b> and an <b>inventory_reference_type</b>. 
     * @param {module:api/AdApi~getAdsByInventoryReferenceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Ads}
     */
    getAdsByInventoryReference(campaignId, inventoryReferenceId, inventoryReferenceType, callback) {
      let postBody = null;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling getAdsByInventoryReference");
      }
      // verify the required parameter 'inventoryReferenceId' is set
      if (inventoryReferenceId === undefined || inventoryReferenceId === null) {
        throw new Error("Missing the required parameter 'inventoryReferenceId' when calling getAdsByInventoryReference");
      }
      // verify the required parameter 'inventoryReferenceType' is set
      if (inventoryReferenceType === undefined || inventoryReferenceType === null) {
        throw new Error("Missing the required parameter 'inventoryReferenceType' when calling getAdsByInventoryReference");
      }

      let pathParams = {
        'campaign_id': campaignId
      };
      let queryParams = {
        'inventory_reference_id': inventoryReferenceId,
        'inventory_reference_type': inventoryReferenceType
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Ads;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/get_ads_by_inventory_reference', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateBid operation.
     * @callback module:api/AdApi~updateBidCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This method updates the bid percentage (also known as the \"ad rate\") for the specified ad in the specified campaign. <p>In the request, supply the <b>campaign_id</b> and <b>ad_id</b> as path parameters, and supply the new <b>bidPercentage</b> value in the payload of the call.</p>  <p>Call <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> to retrieve a seller's current campaign IDs and call <a href=\"/api-docs/sell/marketing/resources/ad/methods/getAds\">getAds</a> to get their ad IDs.</p><span class=\"tablenote\"><b>Note:</b> This method only applies to the Cost Per Sale (CPS) funding model; it does not apply to the Cost Per Click (CPC) funding model. See <a href=\"/api-docs/sell/static/marketing/pl-overview.html#funding-model\">Funding Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span>
     * @param {String} adId A unique eBay-assigned ID for an ad that's generated when an ad is created.
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that is generated when a campaign is created.<br /><br /><span class=\"tablenote\"><b>Note:</b> You can retrieve the campaign IDs for a specified seller using the <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> method.</span>
     * @param {module:model/UpdateBidPercentageRequest} updateBidPercentageRequest This type defines the fields for the <b>updateBid</b> request.
     * @param {module:api/AdApi~updateBidCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateBid(adId, campaignId, updateBidPercentageRequest, callback) {
      let postBody = updateBidPercentageRequest;
      // verify the required parameter 'adId' is set
      if (adId === undefined || adId === null) {
        throw new Error("Missing the required parameter 'adId' when calling updateBid");
      }
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling updateBid");
      }
      // verify the required parameter 'updateBidPercentageRequest' is set
      if (updateBidPercentageRequest === undefined || updateBidPercentageRequest === null) {
        throw new Error("Missing the required parameter 'updateBidPercentageRequest' when calling updateBid");
      }

      let pathParams = {
        'ad_id': adId,
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/ad/{ad_id}/update_bid', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
