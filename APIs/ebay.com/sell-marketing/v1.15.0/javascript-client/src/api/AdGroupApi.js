/**
 * Marketing API
 * <p>The <i>Marketing API </i> offers two platforms that sellers can use to promote and advertise their products:</p> <ul><li><b>Promoted Listings</b> is an eBay ad service that lets sellers set up <i>ad campaigns </i> for the products they want to promote. eBay displays the ads in search results and in other marketing modules as <b>SPONSORED</b> listings. If an item in a Promoted Listings campaign sells, the seller is assessed a Promoted Listings fee, which is a seller-specified percentage applied to the sales price. For complete details, refer to the <a href=\"/api-docs/sell/static/marketing/pl-landing.html\">Promoted Listings playbook</a>.</li><li><b>Promotions Manager</b> gives sellers a way to offer discounts on specific items as a way to attract buyers to their inventory. Sellers can set up discounts (such as \"20% off\" and other types of offers) on specific items or on an entire customer order. To further attract buyers, eBay prominently displays promotion <i>teasers</i> throughout buyer flows. For complete details, see <a href=\"/api-docs/sell/static/marketing/promotions-manager.html\">Promotions Manager</a>.</li></ul>  <p><b>Marketing reports</b>, on both the Promoted Listings and Promotions Manager platforms, give sellers information that shows the effectiveness of their marketing strategies. The data gives sellers the ability to review and fine tune their marketing efforts.</p> <p class=\"tablenote\"><b>Important!</b> Sellers must have an active eBay Store subscription, and they must accept the <b>Terms and Conditions</b> before they can make requests to these APIs in the Production environment. There are also site-specific listings requirements and restrictions associated with these marketing tools, as listed in the \"requirements and restrictions\" sections for <a href=\"/api-docs/sell/marketing/static/overview.html#PL-requirements\">Promoted Listings</a> and <a href=\"/api-docs/sell/marketing/static/overview.html#PM-requirements\">Promotions Manager</a>.</p> <p>The table below lists all the Marketing API calls grouped by resource.</p>
 *
 * The version of the OpenAPI document: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AdGroup from '../model/AdGroup';
import AdGroupPagedCollectionResponse from '../model/AdGroupPagedCollectionResponse';
import CreateAdGroupRequest from '../model/CreateAdGroupRequest';
import TargetedBidRequest from '../model/TargetedBidRequest';
import TargetedBidsPagedCollection from '../model/TargetedBidsPagedCollection';
import TargetedKeywordRequest from '../model/TargetedKeywordRequest';
import TargetedKeywordsPagedCollection from '../model/TargetedKeywordsPagedCollection';
import UpdateAdGroupRequest from '../model/UpdateAdGroupRequest';

/**
* AdGroup service.
* @module api/AdGroupApi
* @version v1.15.0
*/
export default class AdGroupApi {

    /**
    * Constructs a new AdGroupApi. 
    * @alias module:api/AdGroupApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createAdGroup operation.
     * @callback module:api/AdGroupApi~createAdGroupCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <span class=\"tablenote\"><b>Note:</b> This method is only available for select partners who have been approved for the eBay Promoted Listings Advanced (PLA) program. For information about how to request access to this program, refer to <a href=\"/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests \" target=\"_blank \"> Promoted Listings Advanced Access Requests</a> in the Promoted Listings Playbook. To determine if a seller qualifies for PLA, use the <a href=\"/api-docs/sell/account/resources/advertising_eligibility/methods/getAdvertisingEligibility \" target=\"_blank \">getAdvertisingEligibility</a> method in Account API.</span><br />This method adds an ad group to an existing PLA campaign that uses the Cost Per Click (CPC) funding model.<br /><br />To create an ad group for a campaign, specify the <b>defaultBid</b> for the ad group in the payload of the request. Then specify the campaign to which the ad group should be associated using the <b>campaign_id</b> path parameter.<br /><br />Each campaign can have one or more associated ad groups.
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that is generated when a campaign is created.<br /><br /><span class=\"tablenote\"><b>Note:</b> You can retrieve the campaign IDs for a specified seller using the <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> method.</span>
     * @param {module:model/CreateAdGroupRequest} createAdGroupRequest This type defines the fields for the <b>createAdGroup</b> request.
     * @param {module:api/AdGroupApi~createAdGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createAdGroup(campaignId, createAdGroupRequest, callback) {
      let postBody = createAdGroupRequest;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling createAdGroup");
      }
      // verify the required parameter 'createAdGroupRequest' is set
      if (createAdGroupRequest === undefined || createAdGroupRequest === null) {
        throw new Error("Missing the required parameter 'createAdGroupRequest' when calling createAdGroup");
      }

      let pathParams = {
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/ad_group', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAdGroup operation.
     * @callback module:api/AdGroupApi~getAdGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <span class=\"tablenote\"><b>Note:</b> This method is only available for select partners who have been approved for the eBay Promoted Listings Advanced (PLA) program. For information about how to request access to this program, refer to <a href=\"/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests \" target=\"_blank \"> Promoted Listings Advanced Access Requests</a> in the Promoted Listings Playbook. To determine if a seller qualifies for PLA, use the <a href=\"/api-docs/sell/account/resources/advertising_eligibility/methods/getAdvertisingEligibility \" target=\"_blank \">getAdvertisingEligibility</a> method in Account API.</span><br />This method retrieves the details of a specified ad group, such as the ad groupâ€™s default bid and status.<br /><br />In the request, specify the <b>campaign_id</b> and <b>ad_group_id</b> as path parameters.<br /><br />Call <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> to retrieve a list of the current campaign IDs for a seller and call <a href=\"/api-docs/sell/marketing/resources/adgroup/methods/getAdGroups\">getAdGroups</a> for the ad group ID of the ad group you wish to retrieve.
     * @param {String} adGroupId The ID of the ad group that shall be retrieved.
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that is generated when a campaign is created.<br /><br /><span class=\"tablenote\"><b>Note:</b> You can retrieve the campaign IDs for a specified seller using the <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> method.</span>
     * @param {module:api/AdGroupApi~getAdGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdGroup}
     */
    getAdGroup(adGroupId, campaignId, callback) {
      let postBody = null;
      // verify the required parameter 'adGroupId' is set
      if (adGroupId === undefined || adGroupId === null) {
        throw new Error("Missing the required parameter 'adGroupId' when calling getAdGroup");
      }
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling getAdGroup");
      }

      let pathParams = {
        'ad_group_id': adGroupId,
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AdGroup;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/ad_group/{ad_group_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAdGroups operation.
     * @callback module:api/AdGroupApi~getAdGroupsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdGroupPagedCollectionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <span class=\"tablenote\"><b>Note:</b> This method is only available for select partners who have been approved for the eBay Promoted Listings Advanced (PLA) program. For information about how to request access to this program, refer to <a href=\"/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests \" target=\"_blank \"> Promoted Listings Advanced Access Requests</a> in the Promoted Listings Playbook. To determine if a seller qualifies for PLA, use the <a href=\"/api-docs/sell/account/resources/advertising_eligibility/methods/getAdvertisingEligibility \" target=\"_blank \">getAdvertisingEligibility</a> method in Account API.</span><br />This method retrieves ad groups for the specified campaigns.<br /><br />Each campaign can only have <b>one</b> ad group.<br /><br />In the request, supply the <b>campaign_ids</b> as path parameters.<br /><br />Call <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> to retrieve a list of the current campaign IDs for a seller.
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that is generated when a campaign is created.<br /><br /><span class=\"tablenote\"><b>Note:</b> You can retrieve the campaign IDs for a specified seller using the <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> method.</span>
     * @param {Object} opts Optional parameters
     * @param {String} [adGroupStatus] A comma-separated list of ad group statuses. The results will be filtered to only include the given statuses of the ad group.<br /><br />The results might not include these ad groups if other search conditions exclude them.
     * @param {String} [limit] The number of results, from the current result set, to be returned in a single page.
     * @param {String} [offset] The number of results that will be skipped in the result set. This is used with the <b>limit</b> field to control the pagination of the output.<br /><br />For example, if the <b>offset</b> is set to <code>0</code> and the <b>limit</b> is set to <code>10</code>, the method will retrieve items 1 through 10 from the list of items returned. If the <b>offset</b> is set to <code>10</code> and the <b>limit</b> is set to <code>10</code>, the method will retrieve items 11 through 20 from the list of items returned.<br><br><b>Default</b>: <code>0</code>
     * @param {module:api/AdGroupApi~getAdGroupsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdGroupPagedCollectionResponse}
     */
    getAdGroups(campaignId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling getAdGroups");
      }

      let pathParams = {
        'campaign_id': campaignId
      };
      let queryParams = {
        'ad_group_status': opts['adGroupStatus'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AdGroupPagedCollectionResponse;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/ad_group', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the suggestBids operation.
     * @callback module:api/AdGroupApi~suggestBidsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TargetedBidsPagedCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <span class=\"tablenote\"><b>Note:</b> This method is only available for select partners who have been approved for the eBay Promoted Listings Advanced (PLA) program. For information about how to request access to this program, refer to <a href=\"/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests \" target=\"_blank \"> Promoted Listings Advanced Access Requests</a> in the Promoted Listings Playbook. To determine if a seller qualifies for PLA, use the <a href=\"/api-docs/sell/account/resources/advertising_eligibility/methods/getAdvertisingEligibility \" target=\"_blank \">getAdvertisingEligibility</a> method in Account API.</span><br />This method allows sellers to retrieve the suggested bids for input keywords and match type.
     * @param {String} adGroupId The ID of the ad group containing the keywords for which the bid suggestions will be provided.
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that is generated when a campaign is created.<br /><br /><span class=\"tablenote\"><b>Note:</b> You can retrieve the campaign IDs for a specified seller using the <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> method.</span>
     * @param {module:model/TargetedBidRequest} targetedBidRequest The data requested to retrieve the suggested bids.
     * @param {module:api/AdGroupApi~suggestBidsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TargetedBidsPagedCollection}
     */
    suggestBids(adGroupId, campaignId, targetedBidRequest, callback) {
      let postBody = targetedBidRequest;
      // verify the required parameter 'adGroupId' is set
      if (adGroupId === undefined || adGroupId === null) {
        throw new Error("Missing the required parameter 'adGroupId' when calling suggestBids");
      }
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling suggestBids");
      }
      // verify the required parameter 'targetedBidRequest' is set
      if (targetedBidRequest === undefined || targetedBidRequest === null) {
        throw new Error("Missing the required parameter 'targetedBidRequest' when calling suggestBids");
      }

      let pathParams = {
        'ad_group_id': adGroupId,
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TargetedBidsPagedCollection;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/ad_group/{ad_group_id}/suggest_bids', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the suggestKeywords operation.
     * @callback module:api/AdGroupApi~suggestKeywordsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TargetedKeywordsPagedCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <span class=\"tablenote\"><b>Note:</b> This method is only available for select partners who have been approved for the eBay Promoted Listings Advanced (PLA) program. For information about how to request access to this program, refer to <a href=\"/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests \" target=\"_blank \"> Promoted Listings Advanced Access Requests</a> in the Promoted Listings Playbook. To determine if a seller qualifies for PLA, use the <a href=\"/api-docs/sell/account/resources/advertising_eligibility/methods/getAdvertisingEligibility \" target=\"_blank \">getAdvertisingEligibility</a> method in Account API.</span><br />This method allows sellers to retrieve a list of keyword ideas to be targeted for Promoted Listings campaigns.
     * @param {String} adGroupId The ID of the ad group for which the keyword suggestions will be provided.
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that is generated when a campaign is created.<br /><br /><span class=\"tablenote\"><b>Note:</b> You can retrieve the campaign IDs for a specified seller using the <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> method.</span>
     * @param {Object} opts Optional parameters
     * @param {module:model/TargetedKeywordRequest} [targetedKeywordRequest] The required data to retrieve suggested keywords.
     * @param {module:api/AdGroupApi~suggestKeywordsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TargetedKeywordsPagedCollection}
     */
    suggestKeywords(adGroupId, campaignId, opts, callback) {
      opts = opts || {};
      let postBody = opts['targetedKeywordRequest'];
      // verify the required parameter 'adGroupId' is set
      if (adGroupId === undefined || adGroupId === null) {
        throw new Error("Missing the required parameter 'adGroupId' when calling suggestKeywords");
      }
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling suggestKeywords");
      }

      let pathParams = {
        'ad_group_id': adGroupId,
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TargetedKeywordsPagedCollection;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/ad_group/{ad_group_id}/suggest_keywords', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAdGroup operation.
     * @callback module:api/AdGroupApi~updateAdGroupCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <span class=\"tablenote\"><b>Note:</b> This method is only available for select partners who have been approved for the eBay Promoted Listings Advanced (PLA) program. For information about how to request access to this program, refer to <a href=\"/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests \" target=\"_blank \"> Promoted Listings Advanced Access Requests</a> in the Promoted Listings Playbook. To determine if a seller qualifies for PLA, use the <a href=\"/api-docs/sell/account/resources/advertising_eligibility/methods/getAdvertisingEligibility \" target=\"_blank \">getAdvertisingEligibility</a> method in Account API.</span><br />This method updates the ad group associated with a campaign.<br /><br />With this method, you can modify the <b>default bid</b> for the ad group, change the state of the ad group, or change the name of the ad group. Pass the <b>ad_group_id</b> you want to update as a URI parameter, and configure the <b>adGroupStatus</b> and <b>defaultBid</b> in the request payload.<br /><br />Call <a href=\"/api-docs/sell/marketing/resources/adgroup/methods/getAdGroup\">getAdGroup</a> to retrieve the current default bid and status of the ad group that you would like to update.
     * @param {String} adGroupId The ID of the ad group that shall be updated.
     * @param {String} campaignId A unique eBay-assigned ID for an ad campaign that is generated when a campaign is created.<br /><br /><span class=\"tablenote\"><b>Note:</b> You can retrieve the campaign IDs for a specified seller using the <a href=\"/api-docs/sell/marketing/resources/campaign/methods/getCampaigns\">getCampaigns</a> method.</span>
     * @param {module:model/UpdateAdGroupRequest} updateAdGroupRequest This type defines the fields for the <b>UpdateAdGroup</b> request.
     * @param {module:api/AdGroupApi~updateAdGroupCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateAdGroup(adGroupId, campaignId, updateAdGroupRequest, callback) {
      let postBody = updateAdGroupRequest;
      // verify the required parameter 'adGroupId' is set
      if (adGroupId === undefined || adGroupId === null) {
        throw new Error("Missing the required parameter 'adGroupId' when calling updateAdGroup");
      }
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling updateAdGroup");
      }
      // verify the required parameter 'updateAdGroupRequest' is set
      if (updateAdGroupRequest === undefined || updateAdGroupRequest === null) {
        throw new Error("Missing the required parameter 'updateAdGroupRequest' when calling updateAdGroup");
      }

      let pathParams = {
        'ad_group_id': adGroupId,
        'campaign_id': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_auth', 'api_auth'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/ad_campaign/{campaign_id}/ad_group/{ad_group_id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
