/**
 * Marketing API
 * <p>The <i>Marketing API </i> offers two platforms that sellers can use to promote and advertise their products:</p> <ul><li><b>Promoted Listings</b> is an eBay ad service that lets sellers set up <i>ad campaigns </i> for the products they want to promote. eBay displays the ads in search results and in other marketing modules as <b>SPONSORED</b> listings. If an item in a Promoted Listings campaign sells, the seller is assessed a Promoted Listings fee, which is a seller-specified percentage applied to the sales price. For complete details, refer to the <a href=\"/api-docs/sell/static/marketing/pl-landing.html\">Promoted Listings playbook</a>.</li><li><b>Promotions Manager</b> gives sellers a way to offer discounts on specific items as a way to attract buyers to their inventory. Sellers can set up discounts (such as \"20% off\" and other types of offers) on specific items or on an entire customer order. To further attract buyers, eBay prominently displays promotion <i>teasers</i> throughout buyer flows. For complete details, see <a href=\"/api-docs/sell/static/marketing/promotions-manager.html\">Promotions Manager</a>.</li></ul>  <p><b>Marketing reports</b>, on both the Promoted Listings and Promotions Manager platforms, give sellers information that shows the effectiveness of their marketing strategies. The data gives sellers the ability to review and fine tune their marketing efforts.</p> <p class=\"tablenote\"><b>Important!</b> Sellers must have an active eBay Store subscription, and they must accept the <b>Terms and Conditions</b> before they can make requests to these APIs in the Production environment. There are also site-specific listings requirements and restrictions associated with these marketing tools, as listed in the \"requirements and restrictions\" sections for <a href=\"/api-docs/sell/marketing/static/overview.html#PL-requirements\">Promoted Listings</a> and <a href=\"/api-docs/sell/marketing/static/overview.html#PM-requirements\">Promotions Manager</a>.</p> <p>The table below lists all the Marketing API calls grouped by resource.</p>
 *
 * The version of the OpenAPI document: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DiscountBenefit from './DiscountBenefit';
import InventoryCriterion from './InventoryCriterion';

/**
 * The SelectedInventoryDiscount model module.
 * @module model/SelectedInventoryDiscount
 * @version v1.15.0
 */
class SelectedInventoryDiscount {
    /**
     * Constructs a new <code>SelectedInventoryDiscount</code>.
     * This type defines the fields that describe the discounts applied to a set of inventory items and the order in which the selection rules are applied.
     * @alias module:model/SelectedInventoryDiscount
     */
    constructor() { 
        
        SelectedInventoryDiscount.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SelectedInventoryDiscount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SelectedInventoryDiscount} obj Optional instance to populate.
     * @return {module:model/SelectedInventoryDiscount} The populated <code>SelectedInventoryDiscount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SelectedInventoryDiscount();

            if (data.hasOwnProperty('discountBenefit')) {
                obj['discountBenefit'] = DiscountBenefit.constructFromObject(data['discountBenefit']);
            }
            if (data.hasOwnProperty('discountId')) {
                obj['discountId'] = ApiClient.convertToType(data['discountId'], 'String');
            }
            if (data.hasOwnProperty('inventoryCriterion')) {
                obj['inventoryCriterion'] = InventoryCriterion.constructFromObject(data['inventoryCriterion']);
            }
            if (data.hasOwnProperty('ruleOrder')) {
                obj['ruleOrder'] = ApiClient.convertToType(data['ruleOrder'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SelectedInventoryDiscount</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SelectedInventoryDiscount</code>.
     */
    static validateJSON(data) {
        // validate the optional field `discountBenefit`
        if (data['discountBenefit']) { // data not null
          DiscountBenefit.validateJSON(data['discountBenefit']);
        }
        // ensure the json data is a string
        if (data['discountId'] && !(typeof data['discountId'] === 'string' || data['discountId'] instanceof String)) {
            throw new Error("Expected the field `discountId` to be a primitive type in the JSON string but got " + data['discountId']);
        }
        // validate the optional field `inventoryCriterion`
        if (data['inventoryCriterion']) { // data not null
          InventoryCriterion.validateJSON(data['inventoryCriterion']);
        }

        return true;
    }


}



/**
 * @member {module:model/DiscountBenefit} discountBenefit
 */
SelectedInventoryDiscount.prototype['discountBenefit'] = undefined;

/**
 * A unique, eBay-generated ID that you can use to identify the discount. This field is ignored in POST and PUT operations.
 * @member {String} discountId
 */
SelectedInventoryDiscount.prototype['discountId'] = undefined;

/**
 * @member {module:model/InventoryCriterion} inventoryCriterion
 */
SelectedInventoryDiscount.prototype['inventoryCriterion'] = undefined;

/**
 * For markdown promotions, this field is reserved for future use. <!--This field specifies the precedence of this set of inventory criteria, which is taken into account if an item is selected for multiple discounts by different sets of criteria. The criteria with the highest priority (lowest ruleOrder value) takes precedence over criteria with a lower precedence.-->
 * @member {Number} ruleOrder
 */
SelectedInventoryDiscount.prototype['ruleOrder'] = undefined;






export default SelectedInventoryDiscount;

