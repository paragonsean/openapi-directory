/**
 * Marketing API
 * <p>The <i>Marketing API </i> offers two platforms that sellers can use to promote and advertise their products:</p> <ul><li><b>Promoted Listings</b> is an eBay ad service that lets sellers set up <i>ad campaigns </i> for the products they want to promote. eBay displays the ads in search results and in other marketing modules as <b>SPONSORED</b> listings. If an item in a Promoted Listings campaign sells, the seller is assessed a Promoted Listings fee, which is a seller-specified percentage applied to the sales price. For complete details, refer to the <a href=\"/api-docs/sell/static/marketing/pl-landing.html\">Promoted Listings playbook</a>.</li><li><b>Promotions Manager</b> gives sellers a way to offer discounts on specific items as a way to attract buyers to their inventory. Sellers can set up discounts (such as \"20% off\" and other types of offers) on specific items or on an entire customer order. To further attract buyers, eBay prominently displays promotion <i>teasers</i> throughout buyer flows. For complete details, see <a href=\"/api-docs/sell/static/marketing/promotions-manager.html\">Promotions Manager</a>.</li></ul>  <p><b>Marketing reports</b>, on both the Promoted Listings and Promotions Manager platforms, give sellers information that shows the effectiveness of their marketing strategies. The data gives sellers the ability to review and fine tune their marketing efforts.</p> <p class=\"tablenote\"><b>Important!</b> Sellers must have an active eBay Store subscription, and they must accept the <b>Terms and Conditions</b> before they can make requests to these APIs in the Production environment. There are also site-specific listings requirements and restrictions associated with these marketing tools, as listed in the \"requirements and restrictions\" sections for <a href=\"/api-docs/sell/marketing/static/overview.html#PL-requirements\">Promoted Listings</a> and <a href=\"/api-docs/sell/marketing/static/overview.html#PM-requirements\">Promotions Manager</a>.</p> <p>The table below lists all the Marketing API calls grouped by resource.</p>
 *
 * The version of the OpenAPI document: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DynamicAdRatePreference from './DynamicAdRatePreference';

/**
 * The FundingStrategy model module.
 * @module model/FundingStrategy
 * @version v1.15.0
 */
class FundingStrategy {
    /**
     * Constructs a new <code>FundingStrategy</code>.
     * This type defines how the Promoted Listings fee is calculated for a Promoted Listings ad campaign.
     * @alias module:model/FundingStrategy
     */
    constructor() { 
        
        FundingStrategy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FundingStrategy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FundingStrategy} obj Optional instance to populate.
     * @return {module:model/FundingStrategy} The populated <code>FundingStrategy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FundingStrategy();

            if (data.hasOwnProperty('adRateStrategy')) {
                obj['adRateStrategy'] = ApiClient.convertToType(data['adRateStrategy'], 'String');
            }
            if (data.hasOwnProperty('bidPercentage')) {
                obj['bidPercentage'] = ApiClient.convertToType(data['bidPercentage'], 'String');
            }
            if (data.hasOwnProperty('dynamicAdRatePreferences')) {
                obj['dynamicAdRatePreferences'] = ApiClient.convertToType(data['dynamicAdRatePreferences'], [DynamicAdRatePreference]);
            }
            if (data.hasOwnProperty('fundingModel')) {
                obj['fundingModel'] = ApiClient.convertToType(data['fundingModel'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FundingStrategy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FundingStrategy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['adRateStrategy'] && !(typeof data['adRateStrategy'] === 'string' || data['adRateStrategy'] instanceof String)) {
            throw new Error("Expected the field `adRateStrategy` to be a primitive type in the JSON string but got " + data['adRateStrategy']);
        }
        // ensure the json data is a string
        if (data['bidPercentage'] && !(typeof data['bidPercentage'] === 'string' || data['bidPercentage'] instanceof String)) {
            throw new Error("Expected the field `bidPercentage` to be a primitive type in the JSON string but got " + data['bidPercentage']);
        }
        if (data['dynamicAdRatePreferences']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dynamicAdRatePreferences'])) {
                throw new Error("Expected the field `dynamicAdRatePreferences` to be an array in the JSON data but got " + data['dynamicAdRatePreferences']);
            }
            // validate the optional field `dynamicAdRatePreferences` (array)
            for (const item of data['dynamicAdRatePreferences']) {
                DynamicAdRatePreference.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['fundingModel'] && !(typeof data['fundingModel'] === 'string' || data['fundingModel'] instanceof String)) {
            throw new Error("Expected the field `fundingModel` to be a primitive type in the JSON string but got " + data['fundingModel']);
        }

        return true;
    }


}



/**
 * The ad rate strategy that shall be applied to the campaign. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:AdRateStrategyEnum'>eBay API documentation</a>
 * @member {String} adRateStrategy
 */
FundingStrategy.prototype['adRateStrategy'] = undefined;

/**
 * The user-defined <b>bid percentage</b> (also known as the <i>ad rate</i>) sets the level that eBay increases the visibility in search results for the associated listing. The higher the <b>bidPercentage</b> value, the more eBay promotes the listing.  <br><br>The value specified here is also used to calculate the Promoted Listings fee. This percentage value is multiplied by the final sales price to determine the fee. <br><br>The Promoted Listings fee is determined at the time the transaction completes and the seller is assessed the fee only when an item sells through a Promoted Listings ad campaign. <br><br>The <b>bidPercentage</b> is a single precision value that is guided by the following rules: <ul><li>These values are <b>valid</b>:<br>&nbsp;&nbsp;&nbsp;<code>4.1</code>, &nbsp;&nbsp;&nbsp;<code>5.0</code>, &nbsp;&nbsp;&nbsp;<code>5.5</code>, ...</li>  <li>These values are <b>not valid</b>:<br /> &nbsp;&nbsp;&nbsp;<code>0.01</code>, &nbsp;&nbsp;&nbsp;<code>10.75</code>, &nbsp;&nbsp;&nbsp;<code>99.99</code>,<br /> &nbsp;&nbsp;&nbsp;and so on.</li></ul>This is the default bid percentage for the campaigns using the Cost Per Sale (CPS) funding model, and this value will be overridden by any ads in the campaign that have their own set bid percentages.<br /><br />If a bid percentage is not provided for an ad, eBay uses the default bid percentage of the associated campaign.<br /><br /><span class=\"tablenote\"><b>Note:</b>This field is only relevant for campaigns that use the CPS funding model and a fixed ad rate. It is not used for campaigns that use the Cost Per Click (CPC) funding model and should not be provided when the selected adRateStrategy for the campaign is dynamic.</span><br /><b>Minimum value:</b> 2.0 <br><b>Maximum value:</b> 100.0
 * @member {String} bidPercentage
 */
FundingStrategy.prototype['bidPercentage'] = undefined;

/**
 * A field that indicates whether a single, user-defined bid percentage (also known as the <i>ad rate</i>) should be used, or whether eBay should automatically adjust listings to maintain the daily suggested bid percentage.<br /><br /><span class=\"tablenote\"><span style=\"color:#004680\"><strong>Note:</strong></span> Dynamic adjustment is only applicable when the <b>adRateStrategy</b> is set to <code>DYNAMIC</code>.</span><br /><b>Default:</b> <code>FIXED</code>
 * @member {Array.<module:model/DynamicAdRatePreference>} dynamicAdRatePreferences
 */
FundingStrategy.prototype['dynamicAdRatePreferences'] = undefined;

/**
 * Indicates the model that eBay uses to calculate the Promoted Listings fee. <p>For a description of the funding model types, refer to <b>FundingModelTypeEnum</b>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:FundingModelEnum'>eBay API documentation</a>
 * @member {String} fundingModel
 */
FundingStrategy.prototype['fundingModel'] = undefined;






export default FundingStrategy;

