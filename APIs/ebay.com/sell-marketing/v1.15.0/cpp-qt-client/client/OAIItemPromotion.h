/**
 * Marketing API
 * <p>The <i>Marketing API </i> offers two platforms that sellers can use to promote and advertise their products:</p> <ul><li><b>Promoted Listings</b> is an eBay ad service that lets sellers set up <i>ad campaigns </i> for the products they want to promote. eBay displays the ads in search results and in other marketing modules as <b>SPONSORED</b> listings. If an item in a Promoted Listings campaign sells, the seller is assessed a Promoted Listings fee, which is a seller-specified percentage applied to the sales price. For complete details, refer to the <a href=\"/api-docs/sell/static/marketing/pl-landing.html\">Promoted Listings playbook</a>.</li><li><b>Promotions Manager</b> gives sellers a way to offer discounts on specific items as a way to attract buyers to their inventory. Sellers can set up discounts (such as \"20% off\" and other types of offers) on specific items or on an entire customer order. To further attract buyers, eBay prominently displays promotion <i>teasers</i> throughout buyer flows. For complete details, see <a href=\"/api-docs/sell/static/marketing/promotions-manager.html\">Promotions Manager</a>.</li></ul>  <p><b>Marketing reports</b>, on both the Promoted Listings and Promotions Manager platforms, give sellers information that shows the effectiveness of their marketing strategies. The data gives sellers the ability to review and fine tune their marketing efforts.</p> <p class=\"tablenote\"><b>Important!</b> Sellers must have an active eBay Store subscription, and they must accept the <b>Terms and Conditions</b> before they can make requests to these APIs in the Production environment. There are also site-specific listings requirements and restrictions associated with these marketing tools, as listed in the \"requirements and restrictions\" sections for <a href=\"/api-docs/sell/marketing/static/overview.html#PL-requirements\">Promoted Listings</a> and <a href=\"/api-docs/sell/marketing/static/overview.html#PM-requirements\">Promotions Manager</a>.</p> <p>The table below lists all the Marketing API calls grouped by resource.</p>
 *
 * The version of the OpenAPI document: v1.15.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItemPromotion.h
 *
 * This type defines the fields that describe a threshold promotion and includes the promotional discount, the items included in the promotion, and the rules that specify when the promotion is applied.
 */

#ifndef OAIItemPromotion_H
#define OAIItemPromotion_H

#include <QJsonObject>

#include "OAIAmount.h"
#include "OAICouponConfiguration.h"
#include "OAIDiscountRule.h"
#include "OAIInventoryCriterion.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAmount;
class OAICouponConfiguration;
class OAIDiscountRule;
class OAIInventoryCriterion;

class OAIItemPromotion : public OAIObject {
public:
    OAIItemPromotion();
    OAIItemPromotion(QString json);
    ~OAIItemPromotion() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isApplyDiscountToSingleItemOnly() const;
    void setApplyDiscountToSingleItemOnly(const bool &apply_discount_to_single_item_only);
    bool is_apply_discount_to_single_item_only_Set() const;
    bool is_apply_discount_to_single_item_only_Valid() const;

    OAIAmount getBudget() const;
    void setBudget(const OAIAmount &budget);
    bool is_budget_Set() const;
    bool is_budget_Valid() const;

    OAICouponConfiguration getCouponConfiguration() const;
    void setCouponConfiguration(const OAICouponConfiguration &coupon_configuration);
    bool is_coupon_configuration_Set() const;
    bool is_coupon_configuration_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIDiscountRule> getDiscountRules() const;
    void setDiscountRules(const QList<OAIDiscountRule> &discount_rules);
    bool is_discount_rules_Set() const;
    bool is_discount_rules_Valid() const;

    QString getEndDate() const;
    void setEndDate(const QString &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    OAIInventoryCriterion getInventoryCriterion() const;
    void setInventoryCriterion(const OAIInventoryCriterion &inventory_criterion);
    bool is_inventory_criterion_Set() const;
    bool is_inventory_criterion_Valid() const;

    QString getMarketplaceId() const;
    void setMarketplaceId(const QString &marketplace_id);
    bool is_marketplace_id_Set() const;
    bool is_marketplace_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPriority() const;
    void setPriority(const QString &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getPromotionImageUrl() const;
    void setPromotionImageUrl(const QString &promotion_image_url);
    bool is_promotion_image_url_Set() const;
    bool is_promotion_image_url_Valid() const;

    QString getPromotionStatus() const;
    void setPromotionStatus(const QString &promotion_status);
    bool is_promotion_status_Set() const;
    bool is_promotion_status_Valid() const;

    QString getPromotionType() const;
    void setPromotionType(const QString &promotion_type);
    bool is_promotion_type_Set() const;
    bool is_promotion_type_Valid() const;

    QString getStartDate() const;
    void setStartDate(const QString &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_apply_discount_to_single_item_only;
    bool m_apply_discount_to_single_item_only_isSet;
    bool m_apply_discount_to_single_item_only_isValid;

    OAIAmount m_budget;
    bool m_budget_isSet;
    bool m_budget_isValid;

    OAICouponConfiguration m_coupon_configuration;
    bool m_coupon_configuration_isSet;
    bool m_coupon_configuration_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIDiscountRule> m_discount_rules;
    bool m_discount_rules_isSet;
    bool m_discount_rules_isValid;

    QString m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    OAIInventoryCriterion m_inventory_criterion;
    bool m_inventory_criterion_isSet;
    bool m_inventory_criterion_isValid;

    QString m_marketplace_id;
    bool m_marketplace_id_isSet;
    bool m_marketplace_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_promotion_image_url;
    bool m_promotion_image_url_isSet;
    bool m_promotion_image_url_isValid;

    QString m_promotion_status;
    bool m_promotion_status_isSet;
    bool m_promotion_status_isValid;

    QString m_promotion_type;
    bool m_promotion_type_isSet;
    bool m_promotion_type_isValid;

    QString m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItemPromotion)

#endif // OAIItemPromotion_H
