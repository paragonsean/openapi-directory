/**
 * Marketing API
 * <p>The <i>Marketing API </i> offers two platforms that sellers can use to promote and advertise their products:</p> <ul><li><b>Promoted Listings</b> is an eBay ad service that lets sellers set up <i>ad campaigns </i> for the products they want to promote. eBay displays the ads in search results and in other marketing modules as <b>SPONSORED</b> listings. If an item in a Promoted Listings campaign sells, the seller is assessed a Promoted Listings fee, which is a seller-specified percentage applied to the sales price. For complete details, refer to the <a href=\"/api-docs/sell/static/marketing/pl-landing.html\">Promoted Listings playbook</a>.</li><li><b>Promotions Manager</b> gives sellers a way to offer discounts on specific items as a way to attract buyers to their inventory. Sellers can set up discounts (such as \"20% off\" and other types of offers) on specific items or on an entire customer order. To further attract buyers, eBay prominently displays promotion <i>teasers</i> throughout buyer flows. For complete details, see <a href=\"/api-docs/sell/static/marketing/promotions-manager.html\">Promotions Manager</a>.</li></ul>  <p><b>Marketing reports</b>, on both the Promoted Listings and Promotions Manager platforms, give sellers information that shows the effectiveness of their marketing strategies. The data gives sellers the ability to review and fine tune their marketing efforts.</p> <p class=\"tablenote\"><b>Important!</b> Sellers must have an active eBay Store subscription, and they must accept the <b>Terms and Conditions</b> before they can make requests to these APIs in the Production environment. There are also site-specific listings requirements and restrictions associated with these marketing tools, as listed in the \"requirements and restrictions\" sections for <a href=\"/api-docs/sell/marketing/static/overview.html#PL-requirements\">Promoted Listings</a> and <a href=\"/api-docs/sell/marketing/static/overview.html#PM-requirements\">Promotions Manager</a>.</p> <p>The table below lists all the Marketing API calls grouped by resource.</p>
 *
 * The version of the OpenAPI document: v1.15.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISelectedInventoryDiscount.h
 *
 * This type defines the fields that describe the discounts applied to a set of inventory items and the order in which the selection rules are applied.
 */

#ifndef OAISelectedInventoryDiscount_H
#define OAISelectedInventoryDiscount_H

#include <QJsonObject>

#include "OAIDiscountBenefit.h"
#include "OAIInventoryCriterion.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDiscountBenefit;
class OAIInventoryCriterion;

class OAISelectedInventoryDiscount : public OAIObject {
public:
    OAISelectedInventoryDiscount();
    OAISelectedInventoryDiscount(QString json);
    ~OAISelectedInventoryDiscount() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDiscountBenefit getDiscountBenefit() const;
    void setDiscountBenefit(const OAIDiscountBenefit &discount_benefit);
    bool is_discount_benefit_Set() const;
    bool is_discount_benefit_Valid() const;

    QString getDiscountId() const;
    void setDiscountId(const QString &discount_id);
    bool is_discount_id_Set() const;
    bool is_discount_id_Valid() const;

    OAIInventoryCriterion getInventoryCriterion() const;
    void setInventoryCriterion(const OAIInventoryCriterion &inventory_criterion);
    bool is_inventory_criterion_Set() const;
    bool is_inventory_criterion_Valid() const;

    qint32 getRuleOrder() const;
    void setRuleOrder(const qint32 &rule_order);
    bool is_rule_order_Set() const;
    bool is_rule_order_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDiscountBenefit m_discount_benefit;
    bool m_discount_benefit_isSet;
    bool m_discount_benefit_isValid;

    QString m_discount_id;
    bool m_discount_id_isSet;
    bool m_discount_id_isValid;

    OAIInventoryCriterion m_inventory_criterion;
    bool m_inventory_criterion_isSet;
    bool m_inventory_criterion_isValid;

    qint32 m_rule_order;
    bool m_rule_order_isSet;
    bool m_rule_order_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISelectedInventoryDiscount)

#endif // OAISelectedInventoryDiscount_H
