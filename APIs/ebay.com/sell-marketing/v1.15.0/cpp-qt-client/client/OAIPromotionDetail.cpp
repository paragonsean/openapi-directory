/**
 * Marketing API
 * <p>The <i>Marketing API </i> offers two platforms that sellers can use to promote and advertise their products:</p> <ul><li><b>Promoted Listings</b> is an eBay ad service that lets sellers set up <i>ad campaigns </i> for the products they want to promote. eBay displays the ads in search results and in other marketing modules as <b>SPONSORED</b> listings. If an item in a Promoted Listings campaign sells, the seller is assessed a Promoted Listings fee, which is a seller-specified percentage applied to the sales price. For complete details, refer to the <a href=\"/api-docs/sell/static/marketing/pl-landing.html\">Promoted Listings playbook</a>.</li><li><b>Promotions Manager</b> gives sellers a way to offer discounts on specific items as a way to attract buyers to their inventory. Sellers can set up discounts (such as \"20% off\" and other types of offers) on specific items or on an entire customer order. To further attract buyers, eBay prominently displays promotion <i>teasers</i> throughout buyer flows. For complete details, see <a href=\"/api-docs/sell/static/marketing/promotions-manager.html\">Promotions Manager</a>.</li></ul>  <p><b>Marketing reports</b>, on both the Promoted Listings and Promotions Manager platforms, give sellers information that shows the effectiveness of their marketing strategies. The data gives sellers the ability to review and fine tune their marketing efforts.</p> <p class=\"tablenote\"><b>Important!</b> Sellers must have an active eBay Store subscription, and they must accept the <b>Terms and Conditions</b> before they can make requests to these APIs in the Production environment. There are also site-specific listings requirements and restrictions associated with these marketing tools, as listed in the \"requirements and restrictions\" sections for <a href=\"/api-docs/sell/marketing/static/overview.html#PL-requirements\">Promoted Listings</a> and <a href=\"/api-docs/sell/marketing/static/overview.html#PM-requirements\">Promotions Manager</a>.</p> <p>The table below lists all the Marketing API calls grouped by resource.</p>
 *
 * The version of the OpenAPI document: v1.15.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPromotionDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPromotionDetail::OAIPromotionDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPromotionDetail::OAIPromotionDetail() {
    this->initializeModel();
}

OAIPromotionDetail::~OAIPromotionDetail() {}

void OAIPromotionDetail::initializeModel() {

    m_coupon_code_isSet = false;
    m_coupon_code_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_marketplace_id_isSet = false;
    m_marketplace_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_priority_isSet = false;
    m_priority_isValid = false;

    m_promotion_href_isSet = false;
    m_promotion_href_isValid = false;

    m_promotion_id_isSet = false;
    m_promotion_id_isValid = false;

    m_promotion_image_url_isSet = false;
    m_promotion_image_url_isValid = false;

    m_promotion_status_isSet = false;
    m_promotion_status_isValid = false;

    m_promotion_type_isSet = false;
    m_promotion_type_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;
}

void OAIPromotionDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPromotionDetail::fromJsonObject(QJsonObject json) {

    m_coupon_code_isValid = ::OpenAPI::fromJsonValue(m_coupon_code, json[QString("couponCode")]);
    m_coupon_code_isSet = !json[QString("couponCode")].isNull() && m_coupon_code_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("endDate")]);
    m_end_date_isSet = !json[QString("endDate")].isNull() && m_end_date_isValid;

    m_marketplace_id_isValid = ::OpenAPI::fromJsonValue(m_marketplace_id, json[QString("marketplaceId")]);
    m_marketplace_id_isSet = !json[QString("marketplaceId")].isNull() && m_marketplace_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("priority")]);
    m_priority_isSet = !json[QString("priority")].isNull() && m_priority_isValid;

    m_promotion_href_isValid = ::OpenAPI::fromJsonValue(m_promotion_href, json[QString("promotionHref")]);
    m_promotion_href_isSet = !json[QString("promotionHref")].isNull() && m_promotion_href_isValid;

    m_promotion_id_isValid = ::OpenAPI::fromJsonValue(m_promotion_id, json[QString("promotionId")]);
    m_promotion_id_isSet = !json[QString("promotionId")].isNull() && m_promotion_id_isValid;

    m_promotion_image_url_isValid = ::OpenAPI::fromJsonValue(m_promotion_image_url, json[QString("promotionImageUrl")]);
    m_promotion_image_url_isSet = !json[QString("promotionImageUrl")].isNull() && m_promotion_image_url_isValid;

    m_promotion_status_isValid = ::OpenAPI::fromJsonValue(m_promotion_status, json[QString("promotionStatus")]);
    m_promotion_status_isSet = !json[QString("promotionStatus")].isNull() && m_promotion_status_isValid;

    m_promotion_type_isValid = ::OpenAPI::fromJsonValue(m_promotion_type, json[QString("promotionType")]);
    m_promotion_type_isSet = !json[QString("promotionType")].isNull() && m_promotion_type_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;
}

QString OAIPromotionDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPromotionDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_coupon_code_isSet) {
        obj.insert(QString("couponCode"), ::OpenAPI::toJsonValue(m_coupon_code));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_end_date_isSet) {
        obj.insert(QString("endDate"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_marketplace_id_isSet) {
        obj.insert(QString("marketplaceId"), ::OpenAPI::toJsonValue(m_marketplace_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_priority_isSet) {
        obj.insert(QString("priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    if (m_promotion_href_isSet) {
        obj.insert(QString("promotionHref"), ::OpenAPI::toJsonValue(m_promotion_href));
    }
    if (m_promotion_id_isSet) {
        obj.insert(QString("promotionId"), ::OpenAPI::toJsonValue(m_promotion_id));
    }
    if (m_promotion_image_url_isSet) {
        obj.insert(QString("promotionImageUrl"), ::OpenAPI::toJsonValue(m_promotion_image_url));
    }
    if (m_promotion_status_isSet) {
        obj.insert(QString("promotionStatus"), ::OpenAPI::toJsonValue(m_promotion_status));
    }
    if (m_promotion_type_isSet) {
        obj.insert(QString("promotionType"), ::OpenAPI::toJsonValue(m_promotion_type));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    return obj;
}

QString OAIPromotionDetail::getCouponCode() const {
    return m_coupon_code;
}
void OAIPromotionDetail::setCouponCode(const QString &coupon_code) {
    m_coupon_code = coupon_code;
    m_coupon_code_isSet = true;
}

bool OAIPromotionDetail::is_coupon_code_Set() const{
    return m_coupon_code_isSet;
}

bool OAIPromotionDetail::is_coupon_code_Valid() const{
    return m_coupon_code_isValid;
}

QString OAIPromotionDetail::getDescription() const {
    return m_description;
}
void OAIPromotionDetail::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIPromotionDetail::is_description_Set() const{
    return m_description_isSet;
}

bool OAIPromotionDetail::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIPromotionDetail::getEndDate() const {
    return m_end_date;
}
void OAIPromotionDetail::setEndDate(const QString &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAIPromotionDetail::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAIPromotionDetail::is_end_date_Valid() const{
    return m_end_date_isValid;
}

QString OAIPromotionDetail::getMarketplaceId() const {
    return m_marketplace_id;
}
void OAIPromotionDetail::setMarketplaceId(const QString &marketplace_id) {
    m_marketplace_id = marketplace_id;
    m_marketplace_id_isSet = true;
}

bool OAIPromotionDetail::is_marketplace_id_Set() const{
    return m_marketplace_id_isSet;
}

bool OAIPromotionDetail::is_marketplace_id_Valid() const{
    return m_marketplace_id_isValid;
}

QString OAIPromotionDetail::getName() const {
    return m_name;
}
void OAIPromotionDetail::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPromotionDetail::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPromotionDetail::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIPromotionDetail::getPriority() const {
    return m_priority;
}
void OAIPromotionDetail::setPriority(const QString &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAIPromotionDetail::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAIPromotionDetail::is_priority_Valid() const{
    return m_priority_isValid;
}

QString OAIPromotionDetail::getPromotionHref() const {
    return m_promotion_href;
}
void OAIPromotionDetail::setPromotionHref(const QString &promotion_href) {
    m_promotion_href = promotion_href;
    m_promotion_href_isSet = true;
}

bool OAIPromotionDetail::is_promotion_href_Set() const{
    return m_promotion_href_isSet;
}

bool OAIPromotionDetail::is_promotion_href_Valid() const{
    return m_promotion_href_isValid;
}

QString OAIPromotionDetail::getPromotionId() const {
    return m_promotion_id;
}
void OAIPromotionDetail::setPromotionId(const QString &promotion_id) {
    m_promotion_id = promotion_id;
    m_promotion_id_isSet = true;
}

bool OAIPromotionDetail::is_promotion_id_Set() const{
    return m_promotion_id_isSet;
}

bool OAIPromotionDetail::is_promotion_id_Valid() const{
    return m_promotion_id_isValid;
}

QString OAIPromotionDetail::getPromotionImageUrl() const {
    return m_promotion_image_url;
}
void OAIPromotionDetail::setPromotionImageUrl(const QString &promotion_image_url) {
    m_promotion_image_url = promotion_image_url;
    m_promotion_image_url_isSet = true;
}

bool OAIPromotionDetail::is_promotion_image_url_Set() const{
    return m_promotion_image_url_isSet;
}

bool OAIPromotionDetail::is_promotion_image_url_Valid() const{
    return m_promotion_image_url_isValid;
}

QString OAIPromotionDetail::getPromotionStatus() const {
    return m_promotion_status;
}
void OAIPromotionDetail::setPromotionStatus(const QString &promotion_status) {
    m_promotion_status = promotion_status;
    m_promotion_status_isSet = true;
}

bool OAIPromotionDetail::is_promotion_status_Set() const{
    return m_promotion_status_isSet;
}

bool OAIPromotionDetail::is_promotion_status_Valid() const{
    return m_promotion_status_isValid;
}

QString OAIPromotionDetail::getPromotionType() const {
    return m_promotion_type;
}
void OAIPromotionDetail::setPromotionType(const QString &promotion_type) {
    m_promotion_type = promotion_type;
    m_promotion_type_isSet = true;
}

bool OAIPromotionDetail::is_promotion_type_Set() const{
    return m_promotion_type_isSet;
}

bool OAIPromotionDetail::is_promotion_type_Valid() const{
    return m_promotion_type_isValid;
}

QString OAIPromotionDetail::getStartDate() const {
    return m_start_date;
}
void OAIPromotionDetail::setStartDate(const QString &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIPromotionDetail::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIPromotionDetail::is_start_date_Valid() const{
    return m_start_date_isValid;
}

bool OAIPromotionDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_coupon_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_marketplace_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_href_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPromotionDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
