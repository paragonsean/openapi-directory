# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server.models.discount_benefit import DiscountBenefit
from openapi_server.models.discount_specification import DiscountSpecification
from openapi_server import util


class DiscountRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, discount_benefit: DiscountBenefit=None, discount_specification: DiscountSpecification=None, max_discount_amount: Amount=None, rule_order: int=None):
        """DiscountRule - a model defined in OpenAPI

        :param discount_benefit: The discount_benefit of this DiscountRule.
        :param discount_specification: The discount_specification of this DiscountRule.
        :param max_discount_amount: The max_discount_amount of this DiscountRule.
        :param rule_order: The rule_order of this DiscountRule.
        """
        self.openapi_types = {
            'discount_benefit': DiscountBenefit,
            'discount_specification': DiscountSpecification,
            'max_discount_amount': Amount,
            'rule_order': int
        }

        self.attribute_map = {
            'discount_benefit': 'discountBenefit',
            'discount_specification': 'discountSpecification',
            'max_discount_amount': 'maxDiscountAmount',
            'rule_order': 'ruleOrder'
        }

        self._discount_benefit = discount_benefit
        self._discount_specification = discount_specification
        self._max_discount_amount = max_discount_amount
        self._rule_order = rule_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DiscountRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DiscountRule of this DiscountRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def discount_benefit(self):
        """Gets the discount_benefit of this DiscountRule.


        :return: The discount_benefit of this DiscountRule.
        :rtype: DiscountBenefit
        """
        return self._discount_benefit

    @discount_benefit.setter
    def discount_benefit(self, discount_benefit):
        """Sets the discount_benefit of this DiscountRule.


        :param discount_benefit: The discount_benefit of this DiscountRule.
        :type discount_benefit: DiscountBenefit
        """

        self._discount_benefit = discount_benefit

    @property
    def discount_specification(self):
        """Gets the discount_specification of this DiscountRule.


        :return: The discount_specification of this DiscountRule.
        :rtype: DiscountSpecification
        """
        return self._discount_specification

    @discount_specification.setter
    def discount_specification(self, discount_specification):
        """Sets the discount_specification of this DiscountRule.


        :param discount_specification: The discount_specification of this DiscountRule.
        :type discount_specification: DiscountSpecification
        """

        self._discount_specification = discount_specification

    @property
    def max_discount_amount(self):
        """Gets the max_discount_amount of this DiscountRule.


        :return: The max_discount_amount of this DiscountRule.
        :rtype: Amount
        """
        return self._max_discount_amount

    @max_discount_amount.setter
    def max_discount_amount(self, max_discount_amount):
        """Sets the max_discount_amount of this DiscountRule.


        :param max_discount_amount: The max_discount_amount of this DiscountRule.
        :type max_discount_amount: Amount
        """

        self._max_discount_amount = max_discount_amount

    @property
    def rule_order(self):
        """Gets the rule_order of this DiscountRule.

        This field indicates the order in which the <b>discountRules</b> are presented. The value specified for this field must equal the associated <b>minQuantity</b> value. <br><br><i>Required if </i> you are creating a volume pricing promotion.

        :return: The rule_order of this DiscountRule.
        :rtype: int
        """
        return self._rule_order

    @rule_order.setter
    def rule_order(self, rule_order):
        """Sets the rule_order of this DiscountRule.

        This field indicates the order in which the <b>discountRules</b> are presented. The value specified for this field must equal the associated <b>minQuantity</b> value. <br><br><i>Required if </i> you are creating a volume pricing promotion.

        :param rule_order: The rule_order of this DiscountRule.
        :type rule_order: int
        """

        self._rule_order = rule_order
