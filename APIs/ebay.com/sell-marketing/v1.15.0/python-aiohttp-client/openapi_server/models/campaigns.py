# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.campaign import Campaign
from openapi_server import util


class Campaigns(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, campaigns: List[Campaign]=None):
        """Campaigns - a model defined in OpenAPI

        :param campaigns: The campaigns of this Campaigns.
        """
        self.openapi_types = {
            'campaigns': List[Campaign]
        }

        self.attribute_map = {
            'campaigns': 'campaigns'
        }

        self._campaigns = campaigns

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Campaigns':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Campaigns of this Campaigns.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def campaigns(self):
        """Gets the campaigns of this Campaigns.

        This is an array of one or campaigns that match the listing or inventory item group specified in the request.

        :return: The campaigns of this Campaigns.
        :rtype: List[Campaign]
        """
        return self._campaigns

    @campaigns.setter
    def campaigns(self, campaigns):
        """Sets the campaigns of this Campaigns.

        This is an array of one or campaigns that match the listing or inventory item group specified in the request.

        :param campaigns: The campaigns of this Campaigns.
        :type campaigns: List[Campaign]
        """

        self._campaigns = campaigns
