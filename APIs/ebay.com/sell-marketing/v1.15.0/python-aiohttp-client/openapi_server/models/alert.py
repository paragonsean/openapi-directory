# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alert_details import AlertDetails
from openapi_server import util


class Alert(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alert_type: str=None, details: List[AlertDetails]=None):
        """Alert - a model defined in OpenAPI

        :param alert_type: The alert_type of this Alert.
        :param details: The details of this Alert.
        """
        self.openapi_types = {
            'alert_type': str,
            'details': List[AlertDetails]
        }

        self.attribute_map = {
            'alert_type': 'alertType',
            'details': 'details'
        }

        self._alert_type = alert_type
        self._details = details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Alert':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Alert of this Alert.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alert_type(self):
        """Gets the alert_type of this Alert.

        The type of alert message. For example, an invalid bid percentage. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:AlertTypeEnum'>eBay API documentation</a>

        :return: The alert_type of this Alert.
        :rtype: str
        """
        return self._alert_type

    @alert_type.setter
    def alert_type(self, alert_type):
        """Sets the alert_type of this Alert.

        The type of alert message. For example, an invalid bid percentage. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:AlertTypeEnum'>eBay API documentation</a>

        :param alert_type: The alert_type of this Alert.
        :type alert_type: str
        """

        self._alert_type = alert_type

    @property
    def details(self):
        """Gets the details of this Alert.

        A description of the alert including dimensions and aspects.

        :return: The details of this Alert.
        :rtype: List[AlertDetails]
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this Alert.

        A description of the alert including dimensions and aspects.

        :param details: The details of this Alert.
        :type details: List[AlertDetails]
        """

        self._details = details
