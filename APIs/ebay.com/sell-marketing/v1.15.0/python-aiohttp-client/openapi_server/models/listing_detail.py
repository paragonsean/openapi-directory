# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server.models.item_markdown_status import ItemMarkdownStatus
from openapi_server import util


class ListingDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_price: Amount=None, free_shipping: bool=None, inventory_reference_id: str=None, inventory_reference_type: str=None, listing_category_id: str=None, listing_condition: str=None, listing_condition_id: str=None, listing_id: str=None, listing_promotion_statuses: List[ItemMarkdownStatus]=None, quantity: int=None, store_category_id: str=None, title: str=None):
        """ListingDetail - a model defined in OpenAPI

        :param current_price: The current_price of this ListingDetail.
        :param free_shipping: The free_shipping of this ListingDetail.
        :param inventory_reference_id: The inventory_reference_id of this ListingDetail.
        :param inventory_reference_type: The inventory_reference_type of this ListingDetail.
        :param listing_category_id: The listing_category_id of this ListingDetail.
        :param listing_condition: The listing_condition of this ListingDetail.
        :param listing_condition_id: The listing_condition_id of this ListingDetail.
        :param listing_id: The listing_id of this ListingDetail.
        :param listing_promotion_statuses: The listing_promotion_statuses of this ListingDetail.
        :param quantity: The quantity of this ListingDetail.
        :param store_category_id: The store_category_id of this ListingDetail.
        :param title: The title of this ListingDetail.
        """
        self.openapi_types = {
            'current_price': Amount,
            'free_shipping': bool,
            'inventory_reference_id': str,
            'inventory_reference_type': str,
            'listing_category_id': str,
            'listing_condition': str,
            'listing_condition_id': str,
            'listing_id': str,
            'listing_promotion_statuses': List[ItemMarkdownStatus],
            'quantity': int,
            'store_category_id': str,
            'title': str
        }

        self.attribute_map = {
            'current_price': 'currentPrice',
            'free_shipping': 'freeShipping',
            'inventory_reference_id': 'inventoryReferenceId',
            'inventory_reference_type': 'inventoryReferenceType',
            'listing_category_id': 'listingCategoryId',
            'listing_condition': 'listingCondition',
            'listing_condition_id': 'listingConditionId',
            'listing_id': 'listingId',
            'listing_promotion_statuses': 'listingPromotionStatuses',
            'quantity': 'quantity',
            'store_category_id': 'storeCategoryId',
            'title': 'title'
        }

        self._current_price = current_price
        self._free_shipping = free_shipping
        self._inventory_reference_id = inventory_reference_id
        self._inventory_reference_type = inventory_reference_type
        self._listing_category_id = listing_category_id
        self._listing_condition = listing_condition
        self._listing_condition_id = listing_condition_id
        self._listing_id = listing_id
        self._listing_promotion_statuses = listing_promotion_statuses
        self._quantity = quantity
        self._store_category_id = store_category_id
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListingDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListingDetail of this ListingDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_price(self):
        """Gets the current_price of this ListingDetail.


        :return: The current_price of this ListingDetail.
        :rtype: Amount
        """
        return self._current_price

    @current_price.setter
    def current_price(self, current_price):
        """Sets the current_price of this ListingDetail.


        :param current_price: The current_price of this ListingDetail.
        :type current_price: Amount
        """

        self._current_price = current_price

    @property
    def free_shipping(self):
        """Gets the free_shipping of this ListingDetail.

        If set to <code>true</code>, the seller pays for the shipping (or that the item is marked for local pickup only) In this case, the listing does not have an associated shipping cost for the first listed domestic-shipping option (even if the first domestic-shipping option specifies a flat-rate or calculated shipping option). If <code>false</code>, the buyer is required to pay for a flat-rate or calculated cost shipping service.

        :return: The free_shipping of this ListingDetail.
        :rtype: bool
        """
        return self._free_shipping

    @free_shipping.setter
    def free_shipping(self, free_shipping):
        """Sets the free_shipping of this ListingDetail.

        If set to <code>true</code>, the seller pays for the shipping (or that the item is marked for local pickup only) In this case, the listing does not have an associated shipping cost for the first listed domestic-shipping option (even if the first domestic-shipping option specifies a flat-rate or calculated shipping option). If <code>false</code>, the buyer is required to pay for a flat-rate or calculated cost shipping service.

        :param free_shipping: The free_shipping of this ListingDetail.
        :type free_shipping: bool
        """

        self._free_shipping = free_shipping

    @property
    def inventory_reference_id(self):
        """Gets the inventory_reference_id of this ListingDetail.

        The seller's inventory reference ID for a listing. Also known as the \"SKU\" or \"custom label,\" an inventory reference ID is either the ID of the listing or, if the listing has variations (such as a shirt that's available in multiple sizes and colors), the ID of the parent listing.

        :return: The inventory_reference_id of this ListingDetail.
        :rtype: str
        """
        return self._inventory_reference_id

    @inventory_reference_id.setter
    def inventory_reference_id(self, inventory_reference_id):
        """Sets the inventory_reference_id of this ListingDetail.

        The seller's inventory reference ID for a listing. Also known as the \"SKU\" or \"custom label,\" an inventory reference ID is either the ID of the listing or, if the listing has variations (such as a shirt that's available in multiple sizes and colors), the ID of the parent listing.

        :param inventory_reference_id: The inventory_reference_id of this ListingDetail.
        :type inventory_reference_id: str
        """

        self._inventory_reference_id = inventory_reference_id

    @property
    def inventory_reference_type(self):
        """Gets the inventory_reference_type of this ListingDetail.

        Indicates the type of the <b>inventoryReferenceId</b>, which can be either a single-SKU or a multi-SKU listing (<code>INVENTORY_ITEM</code> and <code>INVENTORY_ITEM_GROUP</code>, respectively).  <br><br><b>Note:</b> This value is not currently returned in the response.

        :return: The inventory_reference_type of this ListingDetail.
        :rtype: str
        """
        return self._inventory_reference_type

    @inventory_reference_type.setter
    def inventory_reference_type(self, inventory_reference_type):
        """Sets the inventory_reference_type of this ListingDetail.

        Indicates the type of the <b>inventoryReferenceId</b>, which can be either a single-SKU or a multi-SKU listing (<code>INVENTORY_ITEM</code> and <code>INVENTORY_ITEM_GROUP</code>, respectively).  <br><br><b>Note:</b> This value is not currently returned in the response.

        :param inventory_reference_type: The inventory_reference_type of this ListingDetail.
        :type inventory_reference_type: str
        """

        self._inventory_reference_type = inventory_reference_type

    @property
    def listing_category_id(self):
        """Gets the listing_category_id of this ListingDetail.

        The ID of the category that listing belongs to. The ID is a numeric and unique identifier for the category that is assigned by eBay.

        :return: The listing_category_id of this ListingDetail.
        :rtype: str
        """
        return self._listing_category_id

    @listing_category_id.setter
    def listing_category_id(self, listing_category_id):
        """Sets the listing_category_id of this ListingDetail.

        The ID of the category that listing belongs to. The ID is a numeric and unique identifier for the category that is assigned by eBay.

        :param listing_category_id: The listing_category_id of this ListingDetail.
        :type listing_category_id: str
        """

        self._listing_category_id = listing_category_id

    @property
    def listing_condition(self):
        """Gets the listing_condition of this ListingDetail.

        An eBay-assigned value that indicates condition of the associated item. For more information, see <a href=\"/api-docs/sell/static/metadata/condition-id-values.html\">Item condition ID and name values</a>.

        :return: The listing_condition of this ListingDetail.
        :rtype: str
        """
        return self._listing_condition

    @listing_condition.setter
    def listing_condition(self, listing_condition):
        """Sets the listing_condition of this ListingDetail.

        An eBay-assigned value that indicates condition of the associated item. For more information, see <a href=\"/api-docs/sell/static/metadata/condition-id-values.html\">Item condition ID and name values</a>.

        :param listing_condition: The listing_condition of this ListingDetail.
        :type listing_condition: str
        """

        self._listing_condition = listing_condition

    @property
    def listing_condition_id(self):
        """Gets the listing_condition_id of this ListingDetail.

        The ID of the condition associated with the item. For more information, see <a href=\"/api-docs/sell/static/metadata/condition-id-values.html\">Item condition ID and name values</a>.<br /><br /><span class=\"tablenote\"><b>Note: </b> This value is not currently returned in the response.</span>

        :return: The listing_condition_id of this ListingDetail.
        :rtype: str
        """
        return self._listing_condition_id

    @listing_condition_id.setter
    def listing_condition_id(self, listing_condition_id):
        """Sets the listing_condition_id of this ListingDetail.

        The ID of the condition associated with the item. For more information, see <a href=\"/api-docs/sell/static/metadata/condition-id-values.html\">Item condition ID and name values</a>.<br /><br /><span class=\"tablenote\"><b>Note: </b> This value is not currently returned in the response.</span>

        :param listing_condition_id: The listing_condition_id of this ListingDetail.
        :type listing_condition_id: str
        """

        self._listing_condition_id = listing_condition_id

    @property
    def listing_id(self):
        """Gets the listing_id of this ListingDetail.

        A unique eBay-assigned ID that is generated when the item is listed.

        :return: The listing_id of this ListingDetail.
        :rtype: str
        """
        return self._listing_id

    @listing_id.setter
    def listing_id(self, listing_id):
        """Sets the listing_id of this ListingDetail.

        A unique eBay-assigned ID that is generated when the item is listed.

        :param listing_id: The listing_id of this ListingDetail.
        :type listing_id: str
        """

        self._listing_id = listing_id

    @property
    def listing_promotion_statuses(self):
        """Gets the listing_promotion_statuses of this ListingDetail.

        A list of the status values assigned to the item and the date that each new status was assigned.

        :return: The listing_promotion_statuses of this ListingDetail.
        :rtype: List[ItemMarkdownStatus]
        """
        return self._listing_promotion_statuses

    @listing_promotion_statuses.setter
    def listing_promotion_statuses(self, listing_promotion_statuses):
        """Sets the listing_promotion_statuses of this ListingDetail.

        A list of the status values assigned to the item and the date that each new status was assigned.

        :param listing_promotion_statuses: The listing_promotion_statuses of this ListingDetail.
        :type listing_promotion_statuses: List[ItemMarkdownStatus]
        """

        self._listing_promotion_statuses = listing_promotion_statuses

    @property
    def quantity(self):
        """Gets the quantity of this ListingDetail.

        The number of items being sold in the listing.

        :return: The quantity of this ListingDetail.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this ListingDetail.

        The number of items being sold in the listing.

        :param quantity: The quantity of this ListingDetail.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def store_category_id(self):
        """Gets the store_category_id of this ListingDetail.

        Store CategoryId (if any) that to which the listing belongs. This field is blank if there is no seller Store category ID.

        :return: The store_category_id of this ListingDetail.
        :rtype: str
        """
        return self._store_category_id

    @store_category_id.setter
    def store_category_id(self, store_category_id):
        """Sets the store_category_id of this ListingDetail.

        Store CategoryId (if any) that to which the listing belongs. This field is blank if there is no seller Store category ID.

        :param store_category_id: The store_category_id of this ListingDetail.
        :type store_category_id: str
        """

        self._store_category_id = store_category_id

    @property
    def title(self):
        """Gets the title of this ListingDetail.

        The seller-defined title of the listing that a seller can use to identify the item.  This label is not displayed in end-user flows.

        :return: The title of this ListingDetail.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ListingDetail.

        The seller-defined title of the listing that a seller can use to identify the item.  This label is not displayed in end-user flows.

        :param title: The title of this ListingDetail.
        :type title: str
        """

        self._title = title
