# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProposedBid(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency: str=None, range_end: str=None, range_start: str=None, value: str=None):
        """ProposedBid - a model defined in OpenAPI

        :param currency: The currency of this ProposedBid.
        :param range_end: The range_end of this ProposedBid.
        :param range_start: The range_start of this ProposedBid.
        :param value: The value of this ProposedBid.
        """
        self.openapi_types = {
            'currency': str,
            'range_end': str,
            'range_start': str,
            'value': str
        }

        self.attribute_map = {
            'currency': 'currency',
            'range_end': 'rangeEnd',
            'range_start': 'rangeStart',
            'value': 'value'
        }

        self._currency = currency
        self._range_end = range_end
        self._range_start = range_start
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProposedBid':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProposedBid of this ProposedBid.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency(self):
        """Gets the currency of this ProposedBid.

        The base currency applied to the <b>value</b> field to establish a monetary amount.  <br><br>The currency is represented as a 3-letter <a href=\"https://www.iso.org/iso-4217-currency-codes.html \" title=\"https://www.iso.org \" target=\"_blank\">ISO 4217</a> currency code. For example, the code for the Canadian Dollar is <code>CAD</code>.  <br><br><b>Default:</b> The default currency of the eBay marketplace that hosts the listing. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/ba:CurrencyCodeEnum'>eBay API documentation</a>

        :return: The currency of this ProposedBid.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this ProposedBid.

        The base currency applied to the <b>value</b> field to establish a monetary amount.  <br><br>The currency is represented as a 3-letter <a href=\"https://www.iso.org/iso-4217-currency-codes.html \" title=\"https://www.iso.org \" target=\"_blank\">ISO 4217</a> currency code. For example, the code for the Canadian Dollar is <code>CAD</code>.  <br><br><b>Default:</b> The default currency of the eBay marketplace that hosts the listing. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/ba:CurrencyCodeEnum'>eBay API documentation</a>

        :param currency: The currency of this ProposedBid.
        :type currency: str
        """

        self._currency = currency

    @property
    def range_end(self):
        """Gets the range_end of this ProposedBid.

        The end of the range specified for the bid.

        :return: The range_end of this ProposedBid.
        :rtype: str
        """
        return self._range_end

    @range_end.setter
    def range_end(self, range_end):
        """Sets the range_end of this ProposedBid.

        The end of the range specified for the bid.

        :param range_end: The range_end of this ProposedBid.
        :type range_end: str
        """

        self._range_end = range_end

    @property
    def range_start(self):
        """Gets the range_start of this ProposedBid.

        The start of the range specified for the bid.

        :return: The range_start of this ProposedBid.
        :rtype: str
        """
        return self._range_start

    @range_start.setter
    def range_start(self, range_start):
        """Sets the range_start of this ProposedBid.

        The start of the range specified for the bid.

        :param range_start: The range_start of this ProposedBid.
        :type range_start: str
        """

        self._range_start = range_start

    @property
    def value(self):
        """Gets the value of this ProposedBid.

        The value of the proposed bid.

        :return: The value of this ProposedBid.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ProposedBid.

        The value of the proposed bid.

        :param value: The value of this ProposedBid.
        :type value: str
        """

        self._value = value
