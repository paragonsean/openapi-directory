# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.selection_rule import SelectionRule
from openapi_server import util


class CampaignCriterion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_select_future_inventory: bool=None, criterion_type: str=None, selection_rules: List[SelectionRule]=None):
        """CampaignCriterion - a model defined in OpenAPI

        :param auto_select_future_inventory: The auto_select_future_inventory of this CampaignCriterion.
        :param criterion_type: The criterion_type of this CampaignCriterion.
        :param selection_rules: The selection_rules of this CampaignCriterion.
        """
        self.openapi_types = {
            'auto_select_future_inventory': bool,
            'criterion_type': str,
            'selection_rules': List[SelectionRule]
        }

        self.attribute_map = {
            'auto_select_future_inventory': 'autoSelectFutureInventory',
            'criterion_type': 'criterionType',
            'selection_rules': 'selectionRules'
        }

        self._auto_select_future_inventory = auto_select_future_inventory
        self._criterion_type = criterion_type
        self._selection_rules = selection_rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CampaignCriterion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CampaignCriterion of this CampaignCriterion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_select_future_inventory(self):
        """Gets the auto_select_future_inventory of this CampaignCriterion.

        A field used to indicate whether listings shall be automatically added to, or removed from, a Promoted Listings campaign based on the rules that have been configured for the campaign.<br /><br />If set to <code>true</code>, eBay adds all listings matching the campaign criterion to the campaign, including any new listings created from the items in a seller's inventory.<br /><br /><b>Default:</b> <code>false</code>

        :return: The auto_select_future_inventory of this CampaignCriterion.
        :rtype: bool
        """
        return self._auto_select_future_inventory

    @auto_select_future_inventory.setter
    def auto_select_future_inventory(self, auto_select_future_inventory):
        """Sets the auto_select_future_inventory of this CampaignCriterion.

        A field used to indicate whether listings shall be automatically added to, or removed from, a Promoted Listings campaign based on the rules that have been configured for the campaign.<br /><br />If set to <code>true</code>, eBay adds all listings matching the campaign criterion to the campaign, including any new listings created from the items in a seller's inventory.<br /><br /><b>Default:</b> <code>false</code>

        :param auto_select_future_inventory: The auto_select_future_inventory of this CampaignCriterion.
        :type auto_select_future_inventory: bool
        """

        self._auto_select_future_inventory = auto_select_future_inventory

    @property
    def criterion_type(self):
        """Gets the criterion_type of this CampaignCriterion.

        This enum defines the criterion (selection rule) types. Currently, the only criterion type supported is <code>INVENTORY_PARTITION</code>, and you must specify this value if you manage your items with the Inventory API and you want to include items based on their inventory reference IDs.  <br><br>Do not include this field if you manage your listings with Trading API/legacy model. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:CriterionTypeEnum'>eBay API documentation</a>

        :return: The criterion_type of this CampaignCriterion.
        :rtype: str
        """
        return self._criterion_type

    @criterion_type.setter
    def criterion_type(self, criterion_type):
        """Sets the criterion_type of this CampaignCriterion.

        This enum defines the criterion (selection rule) types. Currently, the only criterion type supported is <code>INVENTORY_PARTITION</code>, and you must specify this value if you manage your items with the Inventory API and you want to include items based on their inventory reference IDs.  <br><br>Do not include this field if you manage your listings with Trading API/legacy model. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:CriterionTypeEnum'>eBay API documentation</a>

        :param criterion_type: The criterion_type of this CampaignCriterion.
        :type criterion_type: str
        """

        self._criterion_type = criterion_type

    @property
    def selection_rules(self):
        """Gets the selection_rules of this CampaignCriterion.

        This container shows all of the rules/inclusion filters used to add listings to the campaign. For information on using the contained fields, see <a href= \"/api-docs/sell/static/marketing/using-the-selectionrules-container.html#Campaign \">Promoted Listing campaigns</a>.

        :return: The selection_rules of this CampaignCriterion.
        :rtype: List[SelectionRule]
        """
        return self._selection_rules

    @selection_rules.setter
    def selection_rules(self, selection_rules):
        """Sets the selection_rules of this CampaignCriterion.

        This container shows all of the rules/inclusion filters used to add listings to the campaign. For information on using the contained fields, see <a href= \"/api-docs/sell/static/marketing/using-the-selectionrules-container.html#Campaign \">Promoted Listing campaigns</a>.

        :param selection_rules: The selection_rules of this CampaignCriterion.
        :type selection_rules: List[SelectionRule]
        """

        self._selection_rules = selection_rules
