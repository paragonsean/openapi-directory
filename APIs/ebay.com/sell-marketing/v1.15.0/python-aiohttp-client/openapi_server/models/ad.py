# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alert import Alert
from openapi_server import util


class Ad(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ad_group_id: str=None, ad_id: str=None, ad_status: str=None, alerts: List[Alert]=None, bid_percentage: str=None, inventory_reference_id: str=None, inventory_reference_type: str=None, listing_id: str=None):
        """Ad - a model defined in OpenAPI

        :param ad_group_id: The ad_group_id of this Ad.
        :param ad_id: The ad_id of this Ad.
        :param ad_status: The ad_status of this Ad.
        :param alerts: The alerts of this Ad.
        :param bid_percentage: The bid_percentage of this Ad.
        :param inventory_reference_id: The inventory_reference_id of this Ad.
        :param inventory_reference_type: The inventory_reference_type of this Ad.
        :param listing_id: The listing_id of this Ad.
        """
        self.openapi_types = {
            'ad_group_id': str,
            'ad_id': str,
            'ad_status': str,
            'alerts': List[Alert],
            'bid_percentage': str,
            'inventory_reference_id': str,
            'inventory_reference_type': str,
            'listing_id': str
        }

        self.attribute_map = {
            'ad_group_id': 'adGroupId',
            'ad_id': 'adId',
            'ad_status': 'adStatus',
            'alerts': 'alerts',
            'bid_percentage': 'bidPercentage',
            'inventory_reference_id': 'inventoryReferenceId',
            'inventory_reference_type': 'inventoryReferenceType',
            'listing_id': 'listingId'
        }

        self._ad_group_id = ad_group_id
        self._ad_id = ad_id
        self._ad_status = ad_status
        self._alerts = alerts
        self._bid_percentage = bid_percentage
        self._inventory_reference_id = inventory_reference_id
        self._inventory_reference_type = inventory_reference_type
        self._listing_id = listing_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Ad':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Ad of this Ad.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ad_group_id(self):
        """Gets the ad_group_id of this Ad.

        A unique eBay-assigned ID for an ad group in a campaign that uses the Cost Per Click (CPC) funding model. This ID is created after a successful <a href=\"/api-docs/sell/marketing/resources/adgroup/methods/createAdGroup\">createAdGroup</a> call, and all ad groups must be associated with a CPC campaign.

        :return: The ad_group_id of this Ad.
        :rtype: str
        """
        return self._ad_group_id

    @ad_group_id.setter
    def ad_group_id(self, ad_group_id):
        """Sets the ad_group_id of this Ad.

        A unique eBay-assigned ID for an ad group in a campaign that uses the Cost Per Click (CPC) funding model. This ID is created after a successful <a href=\"/api-docs/sell/marketing/resources/adgroup/methods/createAdGroup\">createAdGroup</a> call, and all ad groups must be associated with a CPC campaign.

        :param ad_group_id: The ad_group_id of this Ad.
        :type ad_group_id: str
        """

        self._ad_group_id = ad_group_id

    @property
    def ad_id(self):
        """Gets the ad_id of this Ad.

        A unique eBay-assigned ID that is generated when the ad is created.

        :return: The ad_id of this Ad.
        :rtype: str
        """
        return self._ad_id

    @ad_id.setter
    def ad_id(self, ad_id):
        """Sets the ad_id of this Ad.

        A unique eBay-assigned ID that is generated when the ad is created.

        :param ad_id: The ad_id of this Ad.
        :type ad_id: str
        """

        self._ad_id = ad_id

    @property
    def ad_status(self):
        """Gets the ad_status of this Ad.

        The current status of the CPC ad.<br /><br /><b>Valid Values:</b><ul><li><code>ACTIVE</code></li><li><code>PAUSED</code></li><li><code>ARCHIVED</code></li></ul><span class=\"tablenote\"><b>Note:</b> This type only applies to the Cost Per Click (CPC) funding model; it does not apply to the Cost Per Sale (CPS) funding model.</span> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:AdStatusEnum'>eBay API documentation</a>

        :return: The ad_status of this Ad.
        :rtype: str
        """
        return self._ad_status

    @ad_status.setter
    def ad_status(self, ad_status):
        """Sets the ad_status of this Ad.

        The current status of the CPC ad.<br /><br /><b>Valid Values:</b><ul><li><code>ACTIVE</code></li><li><code>PAUSED</code></li><li><code>ARCHIVED</code></li></ul><span class=\"tablenote\"><b>Note:</b> This type only applies to the Cost Per Click (CPC) funding model; it does not apply to the Cost Per Sale (CPS) funding model.</span> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:AdStatusEnum'>eBay API documentation</a>

        :param ad_status: The ad_status of this Ad.
        :type ad_status: str
        """

        self._ad_status = ad_status

    @property
    def alerts(self):
        """Gets the alerts of this Ad.

        An array containing alert messages for the ad.

        :return: The alerts of this Ad.
        :rtype: List[Alert]
        """
        return self._alerts

    @alerts.setter
    def alerts(self, alerts):
        """Sets the alerts of this Ad.

        An array containing alert messages for the ad.

        :param alerts: The alerts of this Ad.
        :type alerts: List[Alert]
        """

        self._alerts = alerts

    @property
    def bid_percentage(self):
        """Gets the bid_percentage of this Ad.

        The user-defined <b>bid percentage</b> (also known as the <i>ad rate</i>) sets the level that eBay increases the visibility in search results for the associated listing. The higher the <b>bidPercentage</b> value, the more eBay promotes the listing.  <br><br>The value specified here is also used to calculate the Promoted Listings fee. This percentage value is multiplied by the final sales price to determine the fee. <br><br>The Promoted Listings fee is determined at the time the transaction completes and the seller is assessed the fee only when an item sells through a Promoted Listings ad campaign. <br><br>The <b>bidPercentage</b> is a single precision value that is guided by the following rules: <ul><li>These values are <b>valid</b>:<br>&nbsp;&nbsp;&nbsp;<code>4.1</code>, &nbsp;&nbsp;&nbsp;<code>5.0</code>, &nbsp;&nbsp;&nbsp;<code>5.5</code>, ...</li>  <li>These values are <b>not valid</b>:<br /> &nbsp;&nbsp;&nbsp;<code>0.01</code>, &nbsp;&nbsp;&nbsp;<code>10.75</code>, &nbsp;&nbsp;&nbsp;<code>99.99</code>,<br /> &nbsp;&nbsp;&nbsp;and so on.</li></ul>This is default bid percentage for the campaigns using the Cost Per Sale (CPS) funding model, and this value will be overridden by any ads in the campaign that have their own set bid percentages.<br /><br />If a bid percentage is not provided for an ad, eBay uses the default bid percentage of the associated campaign.<br /><br /><span class=\"tablenote\"><b>Note:</b>This field will always be returned for campaigns that use the Cost Per Sale (CPS) funding model. It will not be returned for campaigns that use the Cost Per Click (CPC) funding model.</span><br /><b>Minimum value:</b> 2.0 <br><b>Maximum value:</b> 100.0

        :return: The bid_percentage of this Ad.
        :rtype: str
        """
        return self._bid_percentage

    @bid_percentage.setter
    def bid_percentage(self, bid_percentage):
        """Sets the bid_percentage of this Ad.

        The user-defined <b>bid percentage</b> (also known as the <i>ad rate</i>) sets the level that eBay increases the visibility in search results for the associated listing. The higher the <b>bidPercentage</b> value, the more eBay promotes the listing.  <br><br>The value specified here is also used to calculate the Promoted Listings fee. This percentage value is multiplied by the final sales price to determine the fee. <br><br>The Promoted Listings fee is determined at the time the transaction completes and the seller is assessed the fee only when an item sells through a Promoted Listings ad campaign. <br><br>The <b>bidPercentage</b> is a single precision value that is guided by the following rules: <ul><li>These values are <b>valid</b>:<br>&nbsp;&nbsp;&nbsp;<code>4.1</code>, &nbsp;&nbsp;&nbsp;<code>5.0</code>, &nbsp;&nbsp;&nbsp;<code>5.5</code>, ...</li>  <li>These values are <b>not valid</b>:<br /> &nbsp;&nbsp;&nbsp;<code>0.01</code>, &nbsp;&nbsp;&nbsp;<code>10.75</code>, &nbsp;&nbsp;&nbsp;<code>99.99</code>,<br /> &nbsp;&nbsp;&nbsp;and so on.</li></ul>This is default bid percentage for the campaigns using the Cost Per Sale (CPS) funding model, and this value will be overridden by any ads in the campaign that have their own set bid percentages.<br /><br />If a bid percentage is not provided for an ad, eBay uses the default bid percentage of the associated campaign.<br /><br /><span class=\"tablenote\"><b>Note:</b>This field will always be returned for campaigns that use the Cost Per Sale (CPS) funding model. It will not be returned for campaigns that use the Cost Per Click (CPC) funding model.</span><br /><b>Minimum value:</b> 2.0 <br><b>Maximum value:</b> 100.0

        :param bid_percentage: The bid_percentage of this Ad.
        :type bid_percentage: str
        """

        self._bid_percentage = bid_percentage

    @property
    def inventory_reference_id(self):
        """Gets the inventory_reference_id of this Ad.

        An ID that identifies a single-item listing or multiple-variation listing that is managed with the <a href=\"/api-docs/sell/inventory/resources/methods\" title=\"Inventory API Reference\">Inventory API</a>. <p>The <i>inventory reference ID</i> is a seller-defined value that can be either an <b>SKU</b> for a single-item listing or an <b>inventoryItemGroupKey</b> for a multiple-value listing.</p>  <p>An <i>inventoryItemGroupKey</i> is a value that the seller defines to indicate a listing that's the parent of an inventory item group (a multiple-variation listing, such as a listing for a shirt that's available in multiple sizes and colors).</p><p>This field is only returned if the ad is associated with a SKU or an inventory item group value.</p>

        :return: The inventory_reference_id of this Ad.
        :rtype: str
        """
        return self._inventory_reference_id

    @inventory_reference_id.setter
    def inventory_reference_id(self, inventory_reference_id):
        """Sets the inventory_reference_id of this Ad.

        An ID that identifies a single-item listing or multiple-variation listing that is managed with the <a href=\"/api-docs/sell/inventory/resources/methods\" title=\"Inventory API Reference\">Inventory API</a>. <p>The <i>inventory reference ID</i> is a seller-defined value that can be either an <b>SKU</b> for a single-item listing or an <b>inventoryItemGroupKey</b> for a multiple-value listing.</p>  <p>An <i>inventoryItemGroupKey</i> is a value that the seller defines to indicate a listing that's the parent of an inventory item group (a multiple-variation listing, such as a listing for a shirt that's available in multiple sizes and colors).</p><p>This field is only returned if the ad is associated with a SKU or an inventory item group value.</p>

        :param inventory_reference_id: The inventory_reference_id of this Ad.
        :type inventory_reference_id: str
        """

        self._inventory_reference_id = inventory_reference_id

    @property
    def inventory_reference_type(self):
        """Gets the inventory_reference_type of this Ad.

        The enumeration value returned here indicates the type of listing the inventoryReferenceId references. The value returned here will be <code>INVENTORY_ITEM</code> for a single-variation listing, or <code>INVENTORY_ITEM_GROUP</code> for a multiple-variation listing. <p>This field is only returned if the ad is associated with a SKU or an inventory item group value.</p> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:InventoryReferenceTypeEnum'>eBay API documentation</a>

        :return: The inventory_reference_type of this Ad.
        :rtype: str
        """
        return self._inventory_reference_type

    @inventory_reference_type.setter
    def inventory_reference_type(self, inventory_reference_type):
        """Sets the inventory_reference_type of this Ad.

        The enumeration value returned here indicates the type of listing the inventoryReferenceId references. The value returned here will be <code>INVENTORY_ITEM</code> for a single-variation listing, or <code>INVENTORY_ITEM_GROUP</code> for a multiple-variation listing. <p>This field is only returned if the ad is associated with a SKU or an inventory item group value.</p> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:InventoryReferenceTypeEnum'>eBay API documentation</a>

        :param inventory_reference_type: The inventory_reference_type of this Ad.
        :type inventory_reference_type: str
        """

        self._inventory_reference_type = inventory_reference_type

    @property
    def listing_id(self):
        """Gets the listing_id of this Ad.

        A unique eBay-assigned ID that is generated when a listing is created.

        :return: The listing_id of this Ad.
        :rtype: str
        """
        return self._listing_id

    @listing_id.setter
    def listing_id(self, listing_id):
        """Sets the listing_id of this Ad.

        A unique eBay-assigned ID that is generated when a listing is created.

        :param listing_id: The listing_id of this Ad.
        :type listing_id: str
        """

        self._listing_id = listing_id
