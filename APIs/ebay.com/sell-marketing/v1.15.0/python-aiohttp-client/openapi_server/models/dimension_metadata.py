# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimension_key_annotation import DimensionKeyAnnotation
from openapi_server import util


class DimensionMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_type: str=None, dimension_key: str=None, dimension_key_annotations: List[DimensionKeyAnnotation]=None):
        """DimensionMetadata - a model defined in OpenAPI

        :param data_type: The data_type of this DimensionMetadata.
        :param dimension_key: The dimension_key of this DimensionMetadata.
        :param dimension_key_annotations: The dimension_key_annotations of this DimensionMetadata.
        """
        self.openapi_types = {
            'data_type': str,
            'dimension_key': str,
            'dimension_key_annotations': List[DimensionKeyAnnotation]
        }

        self.attribute_map = {
            'data_type': 'dataType',
            'dimension_key': 'dimensionKey',
            'dimension_key_annotations': 'dimensionKeyAnnotations'
        }

        self._data_type = data_type
        self._dimension_key = dimension_key
        self._dimension_key_annotations = dimension_key_annotations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DimensionMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DimensionMetadata of this DimensionMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_type(self):
        """Gets the data_type of this DimensionMetadata.

        The data type of the dimension value used to create the report. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:DataTypeEnum'>eBay API documentation</a>

        :return: The data_type of this DimensionMetadata.
        :rtype: str
        """
        return self._data_type

    @data_type.setter
    def data_type(self, data_type):
        """Sets the data_type of this DimensionMetadata.

        The data type of the dimension value used to create the report. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:DataTypeEnum'>eBay API documentation</a>

        :param data_type: The data_type of this DimensionMetadata.
        :type data_type: str
        """

        self._data_type = data_type

    @property
    def dimension_key(self):
        """Gets the dimension_key of this DimensionMetadata.

        The name of the dimension used to create the report.

        :return: The dimension_key of this DimensionMetadata.
        :rtype: str
        """
        return self._dimension_key

    @dimension_key.setter
    def dimension_key(self, dimension_key):
        """Sets the dimension_key of this DimensionMetadata.

        The name of the dimension used to create the report.

        :param dimension_key: The dimension_key of this DimensionMetadata.
        :type dimension_key: str
        """

        self._dimension_key = dimension_key

    @property
    def dimension_key_annotations(self):
        """Gets the dimension_key_annotations of this DimensionMetadata.

        An list of annotation keys associated with the specified dimension of the report.

        :return: The dimension_key_annotations of this DimensionMetadata.
        :rtype: List[DimensionKeyAnnotation]
        """
        return self._dimension_key_annotations

    @dimension_key_annotations.setter
    def dimension_key_annotations(self, dimension_key_annotations):
        """Sets the dimension_key_annotations of this DimensionMetadata.

        An list of annotation keys associated with the specified dimension of the report.

        :param dimension_key_annotations: The dimension_key_annotations of this DimensionMetadata.
        :type dimension_key_annotations: List[DimensionKeyAnnotation]
        """

        self._dimension_key_annotations = dimension_key_annotations
