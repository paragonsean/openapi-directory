# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server.models.coupon_configuration import CouponConfiguration
from openapi_server.models.discount_rule import DiscountRule
from openapi_server.models.inventory_criterion import InventoryCriterion
from openapi_server import util


class ItemPromotion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, apply_discount_to_single_item_only: bool=None, budget: Amount=None, coupon_configuration: CouponConfiguration=None, description: str=None, discount_rules: List[DiscountRule]=None, end_date: str=None, inventory_criterion: InventoryCriterion=None, marketplace_id: str=None, name: str=None, priority: str=None, promotion_image_url: str=None, promotion_status: str=None, promotion_type: str=None, start_date: str=None):
        """ItemPromotion - a model defined in OpenAPI

        :param apply_discount_to_single_item_only: The apply_discount_to_single_item_only of this ItemPromotion.
        :param budget: The budget of this ItemPromotion.
        :param coupon_configuration: The coupon_configuration of this ItemPromotion.
        :param description: The description of this ItemPromotion.
        :param discount_rules: The discount_rules of this ItemPromotion.
        :param end_date: The end_date of this ItemPromotion.
        :param inventory_criterion: The inventory_criterion of this ItemPromotion.
        :param marketplace_id: The marketplace_id of this ItemPromotion.
        :param name: The name of this ItemPromotion.
        :param priority: The priority of this ItemPromotion.
        :param promotion_image_url: The promotion_image_url of this ItemPromotion.
        :param promotion_status: The promotion_status of this ItemPromotion.
        :param promotion_type: The promotion_type of this ItemPromotion.
        :param start_date: The start_date of this ItemPromotion.
        """
        self.openapi_types = {
            'apply_discount_to_single_item_only': bool,
            'budget': Amount,
            'coupon_configuration': CouponConfiguration,
            'description': str,
            'discount_rules': List[DiscountRule],
            'end_date': str,
            'inventory_criterion': InventoryCriterion,
            'marketplace_id': str,
            'name': str,
            'priority': str,
            'promotion_image_url': str,
            'promotion_status': str,
            'promotion_type': str,
            'start_date': str
        }

        self.attribute_map = {
            'apply_discount_to_single_item_only': 'applyDiscountToSingleItemOnly',
            'budget': 'budget',
            'coupon_configuration': 'couponConfiguration',
            'description': 'description',
            'discount_rules': 'discountRules',
            'end_date': 'endDate',
            'inventory_criterion': 'inventoryCriterion',
            'marketplace_id': 'marketplaceId',
            'name': 'name',
            'priority': 'priority',
            'promotion_image_url': 'promotionImageUrl',
            'promotion_status': 'promotionStatus',
            'promotion_type': 'promotionType',
            'start_date': 'startDate'
        }

        self._apply_discount_to_single_item_only = apply_discount_to_single_item_only
        self._budget = budget
        self._coupon_configuration = coupon_configuration
        self._description = description
        self._discount_rules = discount_rules
        self._end_date = end_date
        self._inventory_criterion = inventory_criterion
        self._marketplace_id = marketplace_id
        self._name = name
        self._priority = priority
        self._promotion_image_url = promotion_image_url
        self._promotion_status = promotion_status
        self._promotion_type = promotion_type
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ItemPromotion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ItemPromotion of this ItemPromotion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def apply_discount_to_single_item_only(self):
        """Gets the apply_discount_to_single_item_only of this ItemPromotion.

        This flag is relevant in only when <b>promotionType</b> is set to <code>VOLUME_DISCOUNT</code>. For details on volume pricing promotions, see <a href=\"/api-docs/sell/static/marketing/pm-volume-discounts.html\">Configuring volume pricing discounts</a>.  <br><br>If set to <code>true</code>, the discount is applied only when the buyer purchases multiple quantities of a single item in the promotion. Otherwise, the promotional discount applies to multiple quantities of any items in the promotion. Different variations of a multi-variation item are considered to be the same item. Note that this flag is not relevant if the <b>inventoryCriterion</b> container identifies a single listing ID for the promotion.

        :return: The apply_discount_to_single_item_only of this ItemPromotion.
        :rtype: bool
        """
        return self._apply_discount_to_single_item_only

    @apply_discount_to_single_item_only.setter
    def apply_discount_to_single_item_only(self, apply_discount_to_single_item_only):
        """Sets the apply_discount_to_single_item_only of this ItemPromotion.

        This flag is relevant in only when <b>promotionType</b> is set to <code>VOLUME_DISCOUNT</code>. For details on volume pricing promotions, see <a href=\"/api-docs/sell/static/marketing/pm-volume-discounts.html\">Configuring volume pricing discounts</a>.  <br><br>If set to <code>true</code>, the discount is applied only when the buyer purchases multiple quantities of a single item in the promotion. Otherwise, the promotional discount applies to multiple quantities of any items in the promotion. Different variations of a multi-variation item are considered to be the same item. Note that this flag is not relevant if the <b>inventoryCriterion</b> container identifies a single listing ID for the promotion.

        :param apply_discount_to_single_item_only: The apply_discount_to_single_item_only of this ItemPromotion.
        :type apply_discount_to_single_item_only: bool
        """

        self._apply_discount_to_single_item_only = apply_discount_to_single_item_only

    @property
    def budget(self):
        """Gets the budget of this ItemPromotion.


        :return: The budget of this ItemPromotion.
        :rtype: Amount
        """
        return self._budget

    @budget.setter
    def budget(self, budget):
        """Sets the budget of this ItemPromotion.


        :param budget: The budget of this ItemPromotion.
        :type budget: Amount
        """

        self._budget = budget

    @property
    def coupon_configuration(self):
        """Gets the coupon_configuration of this ItemPromotion.


        :return: The coupon_configuration of this ItemPromotion.
        :rtype: CouponConfiguration
        """
        return self._coupon_configuration

    @coupon_configuration.setter
    def coupon_configuration(self, coupon_configuration):
        """Sets the coupon_configuration of this ItemPromotion.


        :param coupon_configuration: The coupon_configuration of this ItemPromotion.
        :type coupon_configuration: CouponConfiguration
        """

        self._coupon_configuration = coupon_configuration

    @property
    def description(self):
        """Gets the description of this ItemPromotion.

        This is the seller-defined \"tag line\" for the offer, such as \"Save on designer shoes.\"  <br><br>The tag line appears under the \"offer-type text\" that is generated for the promotion and is displayed on the offer tile that's shown on the seller's <b>All Offers</b> page, and on the event page for the promotion.  <p class=\"tablenote\"><b>Note:</b> Offer-type text is a teaser that's presented throughout the buyer's journey through the sales flow and is generated by eBay. The offer-type text is not editable by the seller&mdash;it's derived from the settings in the <b>discountRules</b> and <b>discountSpecification</b> fields&mdash;and can be, for example, \"Extra 20% off when you buy 3+\".</p>  <br><b>Maximum length:</b> 50 <br><br><i>Required if</i> you are configuring CODED_COUPON, ORDER_DISCOUNT, or MARKDOWN_SALE promotions (and not valid for VOLUME_DISCOUNT promotions).

        :return: The description of this ItemPromotion.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ItemPromotion.

        This is the seller-defined \"tag line\" for the offer, such as \"Save on designer shoes.\"  <br><br>The tag line appears under the \"offer-type text\" that is generated for the promotion and is displayed on the offer tile that's shown on the seller's <b>All Offers</b> page, and on the event page for the promotion.  <p class=\"tablenote\"><b>Note:</b> Offer-type text is a teaser that's presented throughout the buyer's journey through the sales flow and is generated by eBay. The offer-type text is not editable by the seller&mdash;it's derived from the settings in the <b>discountRules</b> and <b>discountSpecification</b> fields&mdash;and can be, for example, \"Extra 20% off when you buy 3+\".</p>  <br><b>Maximum length:</b> 50 <br><br><i>Required if</i> you are configuring CODED_COUPON, ORDER_DISCOUNT, or MARKDOWN_SALE promotions (and not valid for VOLUME_DISCOUNT promotions).

        :param description: The description of this ItemPromotion.
        :type description: str
        """

        self._description = description

    @property
    def discount_rules(self):
        """Gets the discount_rules of this ItemPromotion.

        This container defines a promotion using the following two required fields: <ul><li><b>discountBenefit</b> &ndash; Defines a discount as either a monetary amount or a percentage that is subtracted from the sales price of an item, a set of items, or an order.</li>  <li><b>discountSpecification</b> &ndash; Defines a set of rules that determine when the promotion is applied.</li></ul> <p class=\"tablenote\"><b>Note:</b> For volume pricing, you must specify at least two and not more than four <b>discountBenefit</b>/<b>discountSpecification</b> pairs. In addition, you must define each set of rules with a <b>ruleOrder</b> value that corresponds with the order of volume discounts you present.</p>  <p><b>Tip:</b> Refer to <a href=\"/api-docs/sell/static/marketing/pm-specifying-discounts.html\">Specifying item promotion discounts</a> for information and examples on how to combine <b>discountBenefit</b> and <b>discountSpecification</b> to create different types of promotions.</p>

        :return: The discount_rules of this ItemPromotion.
        :rtype: List[DiscountRule]
        """
        return self._discount_rules

    @discount_rules.setter
    def discount_rules(self, discount_rules):
        """Sets the discount_rules of this ItemPromotion.

        This container defines a promotion using the following two required fields: <ul><li><b>discountBenefit</b> &ndash; Defines a discount as either a monetary amount or a percentage that is subtracted from the sales price of an item, a set of items, or an order.</li>  <li><b>discountSpecification</b> &ndash; Defines a set of rules that determine when the promotion is applied.</li></ul> <p class=\"tablenote\"><b>Note:</b> For volume pricing, you must specify at least two and not more than four <b>discountBenefit</b>/<b>discountSpecification</b> pairs. In addition, you must define each set of rules with a <b>ruleOrder</b> value that corresponds with the order of volume discounts you present.</p>  <p><b>Tip:</b> Refer to <a href=\"/api-docs/sell/static/marketing/pm-specifying-discounts.html\">Specifying item promotion discounts</a> for information and examples on how to combine <b>discountBenefit</b> and <b>discountSpecification</b> to create different types of promotions.</p>

        :param discount_rules: The discount_rules of this ItemPromotion.
        :type discount_rules: List[DiscountRule]
        """

        self._discount_rules = discount_rules

    @property
    def end_date(self):
        """Gets the end_date of this ItemPromotion.

        The date and time the promotion ends in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>). For display purposes, convert this time into the local time of the seller.

        :return: The end_date of this ItemPromotion.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this ItemPromotion.

        The date and time the promotion ends in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>). For display purposes, convert this time into the local time of the seller.

        :param end_date: The end_date of this ItemPromotion.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def inventory_criterion(self):
        """Gets the inventory_criterion of this ItemPromotion.


        :return: The inventory_criterion of this ItemPromotion.
        :rtype: InventoryCriterion
        """
        return self._inventory_criterion

    @inventory_criterion.setter
    def inventory_criterion(self, inventory_criterion):
        """Sets the inventory_criterion of this ItemPromotion.


        :param inventory_criterion: The inventory_criterion of this ItemPromotion.
        :type inventory_criterion: InventoryCriterion
        """

        self._inventory_criterion = inventory_criterion

    @property
    def marketplace_id(self):
        """Gets the marketplace_id of this ItemPromotion.

        The eBay marketplace ID of the site where the threshold promotion is hosted. Threshold promotions are currently supported on a limited number of eBay marketplaces.  <p><b>Valid values:</b></p>  <ul><li><code>EBAY_AU</code> = Australia</li> <li><code>EBAY_DE</code> = Germany</li> <li><code>EBAY_ES</code> = Spain</li> <li><code>EBAY_FR</code> = France</li> <li><code>EBAY_GB</code> = Great Britain</li> <li><code>EBAY_IT</code> = Italy</li> <li><code>EBAY_US</code> = United States</li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/ba:MarketplaceIdEnum'>eBay API documentation</a>

        :return: The marketplace_id of this ItemPromotion.
        :rtype: str
        """
        return self._marketplace_id

    @marketplace_id.setter
    def marketplace_id(self, marketplace_id):
        """Sets the marketplace_id of this ItemPromotion.

        The eBay marketplace ID of the site where the threshold promotion is hosted. Threshold promotions are currently supported on a limited number of eBay marketplaces.  <p><b>Valid values:</b></p>  <ul><li><code>EBAY_AU</code> = Australia</li> <li><code>EBAY_DE</code> = Germany</li> <li><code>EBAY_ES</code> = Spain</li> <li><code>EBAY_FR</code> = France</li> <li><code>EBAY_GB</code> = Great Britain</li> <li><code>EBAY_IT</code> = Italy</li> <li><code>EBAY_US</code> = United States</li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/ba:MarketplaceIdEnum'>eBay API documentation</a>

        :param marketplace_id: The marketplace_id of this ItemPromotion.
        :type marketplace_id: str
        """

        self._marketplace_id = marketplace_id

    @property
    def name(self):
        """Gets the name of this ItemPromotion.

        The seller-defined name or \"title\" of the promotion that the seller can use to identify a promotion. This label is not displayed in end-user flows.  <br><br><b>Maximum length:</b> 90

        :return: The name of this ItemPromotion.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ItemPromotion.

        The seller-defined name or \"title\" of the promotion that the seller can use to identify a promotion. This label is not displayed in end-user flows.  <br><br><b>Maximum length:</b> 90

        :param name: The name of this ItemPromotion.
        :type name: str
        """

        self._name = name

    @property
    def priority(self):
        """Gets the priority of this ItemPromotion.

        Applicable for only <b>ORDER_DISCOUNT</b> promotions, this field indicates the precedence of the promotion, which is used to determine the position of a promotion on the seller's <b>All Offers</b> page. If an item is associated with multiple promotions, the promotion with the higher priority takes precedence. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionPriorityEnum'>eBay API documentation</a>

        :return: The priority of this ItemPromotion.
        :rtype: str
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this ItemPromotion.

        Applicable for only <b>ORDER_DISCOUNT</b> promotions, this field indicates the precedence of the promotion, which is used to determine the position of a promotion on the seller's <b>All Offers</b> page. If an item is associated with multiple promotions, the promotion with the higher priority takes precedence. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionPriorityEnum'>eBay API documentation</a>

        :param priority: The priority of this ItemPromotion.
        :type priority: str
        """

        self._priority = priority

    @property
    def promotion_image_url(self):
        """Gets the promotion_image_url of this ItemPromotion.

        Required for CODED_COUPON, MARKDOWN_SALE, and ORDER_DISCOUNT promotions, and not valid for VOLUME_DISCOUNT promotions.  <br><br>Populate this field with a URL that points to an image to be used with the promotion. This image is displayed on the seller's <b>All Offers</b> page. The URL must point to either JPEG or PNG image and it must be a minimum of 500x500 pixels in dimension and cannot exceed 12Mb in size.

        :return: The promotion_image_url of this ItemPromotion.
        :rtype: str
        """
        return self._promotion_image_url

    @promotion_image_url.setter
    def promotion_image_url(self, promotion_image_url):
        """Sets the promotion_image_url of this ItemPromotion.

        Required for CODED_COUPON, MARKDOWN_SALE, and ORDER_DISCOUNT promotions, and not valid for VOLUME_DISCOUNT promotions.  <br><br>Populate this field with a URL that points to an image to be used with the promotion. This image is displayed on the seller's <b>All Offers</b> page. The URL must point to either JPEG or PNG image and it must be a minimum of 500x500 pixels in dimension and cannot exceed 12Mb in size.

        :param promotion_image_url: The promotion_image_url of this ItemPromotion.
        :type promotion_image_url: str
        """

        self._promotion_image_url = promotion_image_url

    @property
    def promotion_status(self):
        """Gets the promotion_status of this ItemPromotion.

        The current status of the promotion. When creating a new promotion, this value must be set to either <code>DRAFT</code> or <code>SCHEDULED</code>.  <br><br>Note that you must set this value to <code>SCHEDULED</code> when you update a <b>RUNNING</b> promotion. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionStatusEnum'>eBay API documentation</a>

        :return: The promotion_status of this ItemPromotion.
        :rtype: str
        """
        return self._promotion_status

    @promotion_status.setter
    def promotion_status(self, promotion_status):
        """Sets the promotion_status of this ItemPromotion.

        The current status of the promotion. When creating a new promotion, this value must be set to either <code>DRAFT</code> or <code>SCHEDULED</code>.  <br><br>Note that you must set this value to <code>SCHEDULED</code> when you update a <b>RUNNING</b> promotion. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionStatusEnum'>eBay API documentation</a>

        :param promotion_status: The promotion_status of this ItemPromotion.
        :type promotion_status: str
        """

        self._promotion_status = promotion_status

    @property
    def promotion_type(self):
        """Gets the promotion_type of this ItemPromotion.

        Use this field to specify the type of the promotion you are creating. <p>The supported types are:</p> <ul><li><code>CODED_COUPON</code> &ndash; A coupon code promotion set with <b>createItemPromotion</b>.</li> <li><code>MARKDOWN_SALE</code> &ndash; A markdown promotion set with <b>createItemPriceMarkdownPromotion</b>.</li> <li><code>ORDER_DISCOUNT</code> &ndash; A threshold promotion set with <b>createItemPromotion</b>.</li> <li><code>VOLUME_DISCOUNT</code> &ndash; A volume pricing promotion set with <b>createItemPromotion</b>.</li></ul> <p>See the <a href=\"/api-docs/sell/static/marketing/promotions-manager.html\" target=\"_blank\">Promotions Manager</a> documentation for details.</p> <p><i>Required if </i> you are creating a volume pricing promotion (<code>VOLUME_DISCOUNT</code>).</p> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionTypeEnum'>eBay API documentation</a>

        :return: The promotion_type of this ItemPromotion.
        :rtype: str
        """
        return self._promotion_type

    @promotion_type.setter
    def promotion_type(self, promotion_type):
        """Sets the promotion_type of this ItemPromotion.

        Use this field to specify the type of the promotion you are creating. <p>The supported types are:</p> <ul><li><code>CODED_COUPON</code> &ndash; A coupon code promotion set with <b>createItemPromotion</b>.</li> <li><code>MARKDOWN_SALE</code> &ndash; A markdown promotion set with <b>createItemPriceMarkdownPromotion</b>.</li> <li><code>ORDER_DISCOUNT</code> &ndash; A threshold promotion set with <b>createItemPromotion</b>.</li> <li><code>VOLUME_DISCOUNT</code> &ndash; A volume pricing promotion set with <b>createItemPromotion</b>.</li></ul> <p>See the <a href=\"/api-docs/sell/static/marketing/promotions-manager.html\" target=\"_blank\">Promotions Manager</a> documentation for details.</p> <p><i>Required if </i> you are creating a volume pricing promotion (<code>VOLUME_DISCOUNT</code>).</p> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionTypeEnum'>eBay API documentation</a>

        :param promotion_type: The promotion_type of this ItemPromotion.
        :type promotion_type: str
        """

        self._promotion_type = promotion_type

    @property
    def start_date(self):
        """Gets the start_date of this ItemPromotion.

        The date and time the promotion starts in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>). For display purposes, convert this time into the local time of the seller.

        :return: The start_date of this ItemPromotion.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this ItemPromotion.

        The date and time the promotion starts in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>). For display purposes, convert this time into the local time of the seller.

        :param start_date: The start_date of this ItemPromotion.
        :type start_date: str
        """

        self._start_date = start_date
