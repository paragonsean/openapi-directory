# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdditionalInfoData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metric_key: str=None, value: str=None):
        """AdditionalInfoData - a model defined in OpenAPI

        :param metric_key: The metric_key of this AdditionalInfoData.
        :param value: The value of this AdditionalInfoData.
        """
        self.openapi_types = {
            'metric_key': str,
            'value': str
        }

        self.attribute_map = {
            'metric_key': 'metricKey',
            'value': 'value'
        }

        self._metric_key = metric_key
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdditionalInfoData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdditionalInfoData of this AdditionalInfoData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metric_key(self):
        """Gets the metric_key of this AdditionalInfoData.

        The metric used to provide additional information for the suggested keyword.<br /><br /><strong>Valid Values:</strong> <ul><li><code>ACTIVE_SELLER_COUNT</code></li><li><code>SEARCH_VOLUME</code></li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MetricEnum'>eBay API documentation</a>

        :return: The metric_key of this AdditionalInfoData.
        :rtype: str
        """
        return self._metric_key

    @metric_key.setter
    def metric_key(self, metric_key):
        """Sets the metric_key of this AdditionalInfoData.

        The metric used to provide additional information for the suggested keyword.<br /><br /><strong>Valid Values:</strong> <ul><li><code>ACTIVE_SELLER_COUNT</code></li><li><code>SEARCH_VOLUME</code></li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MetricEnum'>eBay API documentation</a>

        :param metric_key: The metric_key of this AdditionalInfoData.
        :type metric_key: str
        """

        self._metric_key = metric_key

    @property
    def value(self):
        """Gets the value of this AdditionalInfoData.

        The data provided for the specified metric.<br /><br /><span class=\"tablenote\"><span style=\"color:#004680\"><strong>Note:</strong></span> All metric data is compiled for the marketplace associated with the specified campaign ID.</span>

        :return: The value of this AdditionalInfoData.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this AdditionalInfoData.

        The data provided for the specified metric.<br /><br /><span class=\"tablenote\"><span style=\"color:#004680\"><strong>Note:</strong></span> All metric data is compiled for the marketplace associated with the specified campaign ID.</span>

        :param value: The value of this AdditionalInfoData.
        :type value: str
        """

        self._value = value
