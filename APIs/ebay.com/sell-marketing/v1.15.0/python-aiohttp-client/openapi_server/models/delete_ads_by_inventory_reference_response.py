# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error import Error
from openapi_server import util


class DeleteAdsByInventoryReferenceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ad_ids: List[str]=None, errors: List[Error]=None, inventory_reference_id: str=None, inventory_reference_type: str=None, status_code: int=None):
        """DeleteAdsByInventoryReferenceResponse - a model defined in OpenAPI

        :param ad_ids: The ad_ids of this DeleteAdsByInventoryReferenceResponse.
        :param errors: The errors of this DeleteAdsByInventoryReferenceResponse.
        :param inventory_reference_id: The inventory_reference_id of this DeleteAdsByInventoryReferenceResponse.
        :param inventory_reference_type: The inventory_reference_type of this DeleteAdsByInventoryReferenceResponse.
        :param status_code: The status_code of this DeleteAdsByInventoryReferenceResponse.
        """
        self.openapi_types = {
            'ad_ids': List[str],
            'errors': List[Error],
            'inventory_reference_id': str,
            'inventory_reference_type': str,
            'status_code': int
        }

        self.attribute_map = {
            'ad_ids': 'adIds',
            'errors': 'errors',
            'inventory_reference_id': 'inventoryReferenceId',
            'inventory_reference_type': 'inventoryReferenceType',
            'status_code': 'statusCode'
        }

        self._ad_ids = ad_ids
        self._errors = errors
        self._inventory_reference_id = inventory_reference_id
        self._inventory_reference_type = inventory_reference_type
        self._status_code = status_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteAdsByInventoryReferenceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteAdsByInventoryReferenceResponse of this DeleteAdsByInventoryReferenceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ad_ids(self):
        """Gets the ad_ids of this DeleteAdsByInventoryReferenceResponse.

        The unique identifier of the ad that was deleted, or the ad that the seller attempted to delete.<span class=\"tablenote\"><b>Note:</b>Although the field name is plural and it is an array, only one ad ID will be returned here since there can be only one ad per listing.</span>

        :return: The ad_ids of this DeleteAdsByInventoryReferenceResponse.
        :rtype: List[str]
        """
        return self._ad_ids

    @ad_ids.setter
    def ad_ids(self, ad_ids):
        """Sets the ad_ids of this DeleteAdsByInventoryReferenceResponse.

        The unique identifier of the ad that was deleted, or the ad that the seller attempted to delete.<span class=\"tablenote\"><b>Note:</b>Although the field name is plural and it is an array, only one ad ID will be returned here since there can be only one ad per listing.</span>

        :param ad_ids: The ad_ids of this DeleteAdsByInventoryReferenceResponse.
        :type ad_ids: List[str]
        """

        self._ad_ids = ad_ids

    @property
    def errors(self):
        """Gets the errors of this DeleteAdsByInventoryReferenceResponse.

        The container for the errors associated with the request.

        :return: The errors of this DeleteAdsByInventoryReferenceResponse.
        :rtype: List[Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this DeleteAdsByInventoryReferenceResponse.

        The container for the errors associated with the request.

        :param errors: The errors of this DeleteAdsByInventoryReferenceResponse.
        :type errors: List[Error]
        """

        self._errors = errors

    @property
    def inventory_reference_id(self):
        """Gets the inventory_reference_id of this DeleteAdsByInventoryReferenceResponse.

        The inventory reference ID is a seller-defined SKU value for a single-item listing, or a seller-defined identifier for an inventory item group. Both of these values are defined when using the Inventory API, and an inventory item group is used to create a multiple-variation listing.

        :return: The inventory_reference_id of this DeleteAdsByInventoryReferenceResponse.
        :rtype: str
        """
        return self._inventory_reference_id

    @inventory_reference_id.setter
    def inventory_reference_id(self, inventory_reference_id):
        """Sets the inventory_reference_id of this DeleteAdsByInventoryReferenceResponse.

        The inventory reference ID is a seller-defined SKU value for a single-item listing, or a seller-defined identifier for an inventory item group. Both of these values are defined when using the Inventory API, and an inventory item group is used to create a multiple-variation listing.

        :param inventory_reference_id: The inventory_reference_id of this DeleteAdsByInventoryReferenceResponse.
        :type inventory_reference_id: str
        """

        self._inventory_reference_id = inventory_reference_id

    @property
    def inventory_reference_type(self):
        """Gets the inventory_reference_type of this DeleteAdsByInventoryReferenceResponse.

        The enumeration value returned here indicates if the ad was for a single-variation listing or a multiple-variation listing. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:InventoryReferenceTypeEnum'>eBay API documentation</a>

        :return: The inventory_reference_type of this DeleteAdsByInventoryReferenceResponse.
        :rtype: str
        """
        return self._inventory_reference_type

    @inventory_reference_type.setter
    def inventory_reference_type(self, inventory_reference_type):
        """Sets the inventory_reference_type of this DeleteAdsByInventoryReferenceResponse.

        The enumeration value returned here indicates if the ad was for a single-variation listing or a multiple-variation listing. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:InventoryReferenceTypeEnum'>eBay API documentation</a>

        :param inventory_reference_type: The inventory_reference_type of this DeleteAdsByInventoryReferenceResponse.
        :type inventory_reference_type: str
        """

        self._inventory_reference_type = inventory_reference_type

    @property
    def status_code(self):
        """Gets the status_code of this DeleteAdsByInventoryReferenceResponse.

        An HTTP status code indicating if the corresponding ad was successfully deleted or not. <code>200 Successful</code> should be returned for successfully deleted ads. <span class=\"tablenote\"><b>Note:</b>A status code is returned for each ad that the seller deletes, or attempts to delete.</span>

        :return: The status_code of this DeleteAdsByInventoryReferenceResponse.
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this DeleteAdsByInventoryReferenceResponse.

        An HTTP status code indicating if the corresponding ad was successfully deleted or not. <code>200 Successful</code> should be returned for successfully deleted ads. <span class=\"tablenote\"><b>Note:</b>A status code is returned for each ad that the seller deletes, or attempts to delete.</span>

        :param status_code: The status_code of this DeleteAdsByInventoryReferenceResponse.
        :type status_code: int
        """

        self._status_code = status_code
