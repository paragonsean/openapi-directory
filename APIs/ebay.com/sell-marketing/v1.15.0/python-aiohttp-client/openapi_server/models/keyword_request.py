# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class KeywordRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, keyword_text: str=None, match_type: str=None):
        """KeywordRequest - a model defined in OpenAPI

        :param keyword_text: The keyword_text of this KeywordRequest.
        :param match_type: The match_type of this KeywordRequest.
        """
        self.openapi_types = {
            'keyword_text': str,
            'match_type': str
        }

        self.attribute_map = {
            'keyword_text': 'keywordText',
            'match_type': 'matchType'
        }

        self._keyword_text = keyword_text
        self._match_type = match_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KeywordRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KeywordRequest of this KeywordRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def keyword_text(self):
        """Gets the keyword_text of this KeywordRequest.

        The text of the keyword. Keywords are not case sensitive and compound words can be used without additional encoding (for example, tennis ball).<br /><br /><b>Maximum number of characters: </b>100 <br /><br /><b>Maximum number of words: </b>10 

        :return: The keyword_text of this KeywordRequest.
        :rtype: str
        """
        return self._keyword_text

    @keyword_text.setter
    def keyword_text(self, keyword_text):
        """Sets the keyword_text of this KeywordRequest.

        The text of the keyword. Keywords are not case sensitive and compound words can be used without additional encoding (for example, tennis ball).<br /><br /><b>Maximum number of characters: </b>100 <br /><br /><b>Maximum number of words: </b>10 

        :param keyword_text: The keyword_text of this KeywordRequest.
        :type keyword_text: str
        """

        self._keyword_text = keyword_text

    @property
    def match_type(self):
        """Gets the match_type of this KeywordRequest.

        A field that defines the match type for the keyword.<br /><br /><b>Valid Values:</b><ul><li><code>BROAD</code></li><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MatchTypeEnum'>eBay API documentation</a>

        :return: The match_type of this KeywordRequest.
        :rtype: str
        """
        return self._match_type

    @match_type.setter
    def match_type(self, match_type):
        """Sets the match_type of this KeywordRequest.

        A field that defines the match type for the keyword.<br /><br /><b>Valid Values:</b><ul><li><code>BROAD</code></li><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MatchTypeEnum'>eBay API documentation</a>

        :param match_type: The match_type of this KeywordRequest.
        :type match_type: str
        """

        self._match_type = match_type
