# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TargetedKeywordRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_info: List[str]=None, exclusions: List[str]=None, listing_ids: List[str]=None, match_type: str=None):
        """TargetedKeywordRequest - a model defined in OpenAPI

        :param additional_info: The additional_info of this TargetedKeywordRequest.
        :param exclusions: The exclusions of this TargetedKeywordRequest.
        :param listing_ids: The listing_ids of this TargetedKeywordRequest.
        :param match_type: The match_type of this TargetedKeywordRequest.
        """
        self.openapi_types = {
            'additional_info': List[str],
            'exclusions': List[str],
            'listing_ids': List[str],
            'match_type': str
        }

        self.attribute_map = {
            'additional_info': 'additionalInfo',
            'exclusions': 'exclusions',
            'listing_ids': 'listingIds',
            'match_type': 'matchType'
        }

        self._additional_info = additional_info
        self._exclusions = exclusions
        self._listing_ids = listing_ids
        self._match_type = match_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TargetedKeywordRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TargetedKeywordRequest of this TargetedKeywordRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_info(self):
        """Gets the additional_info of this TargetedKeywordRequest.

        A field used to indicate whether additional information and insight data shall be provided for suggested keywords.<br /><br /><strong>Valid Value:</strong> <code>KEYWORD_INSIGHTS</code>

        :return: The additional_info of this TargetedKeywordRequest.
        :rtype: List[str]
        """
        return self._additional_info

    @additional_info.setter
    def additional_info(self, additional_info):
        """Sets the additional_info of this TargetedKeywordRequest.

        A field used to indicate whether additional information and insight data shall be provided for suggested keywords.<br /><br /><strong>Valid Value:</strong> <code>KEYWORD_INSIGHTS</code>

        :param additional_info: The additional_info of this TargetedKeywordRequest.
        :type additional_info: List[str]
        """

        self._additional_info = additional_info

    @property
    def exclusions(self):
        """Gets the exclusions of this TargetedKeywordRequest.

        A field used to indicate that the keywords already selected by sellers for the specified listing IDs should be filtered out of the response, and only new and unique keyword recommendations shall be returned.<br /><br /><strong>Valid Value:</strong> <code>ADOPTED_KEYWORDS</code>

        :return: The exclusions of this TargetedKeywordRequest.
        :rtype: List[str]
        """
        return self._exclusions

    @exclusions.setter
    def exclusions(self, exclusions):
        """Sets the exclusions of this TargetedKeywordRequest.

        A field used to indicate that the keywords already selected by sellers for the specified listing IDs should be filtered out of the response, and only new and unique keyword recommendations shall be returned.<br /><br /><strong>Valid Value:</strong> <code>ADOPTED_KEYWORDS</code>

        :param exclusions: The exclusions of this TargetedKeywordRequest.
        :type exclusions: List[str]
        """

        self._exclusions = exclusions

    @property
    def listing_ids(self):
        """Gets the listing_ids of this TargetedKeywordRequest.

        A set of comma-separated listing IDs in the paginated collection. <br /><br /><b>Maximum number of listings requested: </b>300

        :return: The listing_ids of this TargetedKeywordRequest.
        :rtype: List[str]
        """
        return self._listing_ids

    @listing_ids.setter
    def listing_ids(self, listing_ids):
        """Sets the listing_ids of this TargetedKeywordRequest.

        A set of comma-separated listing IDs in the paginated collection. <br /><br /><b>Maximum number of listings requested: </b>300

        :param listing_ids: The listing_ids of this TargetedKeywordRequest.
        :type listing_ids: List[str]
        """

        self._listing_ids = listing_ids

    @property
    def match_type(self):
        """Gets the match_type of this TargetedKeywordRequest.

        A field that defines the match type for the keyword.<br /><br /><b>Valid Values:</b><ul><li><code>BROAD</code></li><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MatchTypeEnum'>eBay API documentation</a>

        :return: The match_type of this TargetedKeywordRequest.
        :rtype: str
        """
        return self._match_type

    @match_type.setter
    def match_type(self, match_type):
        """Sets the match_type of this TargetedKeywordRequest.

        A field that defines the match type for the keyword.<br /><br /><b>Valid Values:</b><ul><li><code>BROAD</code></li><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MatchTypeEnum'>eBay API documentation</a>

        :param match_type: The match_type of this TargetedKeywordRequest.
        :type match_type: str
        """

        self._match_type = match_type
