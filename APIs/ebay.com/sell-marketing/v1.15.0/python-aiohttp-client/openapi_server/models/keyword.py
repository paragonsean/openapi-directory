# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server import util


class Keyword(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ad_group_id: str=None, bid: Amount=None, keyword_id: str=None, keyword_status: str=None, keyword_text: str=None, match_type: str=None):
        """Keyword - a model defined in OpenAPI

        :param ad_group_id: The ad_group_id of this Keyword.
        :param bid: The bid of this Keyword.
        :param keyword_id: The keyword_id of this Keyword.
        :param keyword_status: The keyword_status of this Keyword.
        :param keyword_text: The keyword_text of this Keyword.
        :param match_type: The match_type of this Keyword.
        """
        self.openapi_types = {
            'ad_group_id': str,
            'bid': Amount,
            'keyword_id': str,
            'keyword_status': str,
            'keyword_text': str,
            'match_type': str
        }

        self.attribute_map = {
            'ad_group_id': 'adGroupId',
            'bid': 'bid',
            'keyword_id': 'keywordId',
            'keyword_status': 'keywordStatus',
            'keyword_text': 'keywordText',
            'match_type': 'matchType'
        }

        self._ad_group_id = ad_group_id
        self._bid = bid
        self._keyword_id = keyword_id
        self._keyword_status = keyword_status
        self._keyword_text = keyword_text
        self._match_type = match_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Keyword':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Keyword of this Keyword.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ad_group_id(self):
        """Gets the ad_group_id of this Keyword.

        This field identifies the ad group that the keyword is associated with.

        :return: The ad_group_id of this Keyword.
        :rtype: str
        """
        return self._ad_group_id

    @ad_group_id.setter
    def ad_group_id(self, ad_group_id):
        """Sets the ad_group_id of this Keyword.

        This field identifies the ad group that the keyword is associated with.

        :param ad_group_id: The ad_group_id of this Keyword.
        :type ad_group_id: str
        """

        self._ad_group_id = ad_group_id

    @property
    def bid(self):
        """Gets the bid of this Keyword.


        :return: The bid of this Keyword.
        :rtype: Amount
        """
        return self._bid

    @bid.setter
    def bid(self, bid):
        """Sets the bid of this Keyword.


        :param bid: The bid of this Keyword.
        :type bid: Amount
        """

        self._bid = bid

    @property
    def keyword_id(self):
        """Gets the keyword_id of this Keyword.

        The unique identifier of a keyword.

        :return: The keyword_id of this Keyword.
        :rtype: str
        """
        return self._keyword_id

    @keyword_id.setter
    def keyword_id(self, keyword_id):
        """Sets the keyword_id of this Keyword.

        The unique identifier of a keyword.

        :param keyword_id: The keyword_id of this Keyword.
        :type keyword_id: str
        """

        self._keyword_id = keyword_id

    @property
    def keyword_status(self):
        """Gets the keyword_status of this Keyword.

        The status of the keyword.<br /><br /><b>Valid Values:</b><ul><li><code>ACTIVE</code></li><li><code>PAUSED</code></li><li><code>ARCHIVED</code></li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:KeywordStatusEnum'>eBay API documentation</a>

        :return: The keyword_status of this Keyword.
        :rtype: str
        """
        return self._keyword_status

    @keyword_status.setter
    def keyword_status(self, keyword_status):
        """Sets the keyword_status of this Keyword.

        The status of the keyword.<br /><br /><b>Valid Values:</b><ul><li><code>ACTIVE</code></li><li><code>PAUSED</code></li><li><code>ARCHIVED</code></li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:KeywordStatusEnum'>eBay API documentation</a>

        :param keyword_status: The keyword_status of this Keyword.
        :type keyword_status: str
        """

        self._keyword_status = keyword_status

    @property
    def keyword_text(self):
        """Gets the keyword_text of this Keyword.

        The text of the keyword.

        :return: The keyword_text of this Keyword.
        :rtype: str
        """
        return self._keyword_text

    @keyword_text.setter
    def keyword_text(self, keyword_text):
        """Sets the keyword_text of this Keyword.

        The text of the keyword.

        :param keyword_text: The keyword_text of this Keyword.
        :type keyword_text: str
        """

        self._keyword_text = keyword_text

    @property
    def match_type(self):
        """Gets the match_type of this Keyword.

        A field that defines the match type for the keyword.<br /><br /><b>Valid Values:</b><ul><li><code>BROAD</code></li><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MatchTypeEnum'>eBay API documentation</a>

        :return: The match_type of this Keyword.
        :rtype: str
        """
        return self._match_type

    @match_type.setter
    def match_type(self, match_type):
        """Sets the match_type of this Keyword.

        A field that defines the match type for the keyword.<br /><br /><b>Valid Values:</b><ul><li><code>BROAD</code></li><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MatchTypeEnum'>eBay API documentation</a>

        :param match_type: The match_type of this Keyword.
        :type match_type: str
        """

        self._match_type = match_type
