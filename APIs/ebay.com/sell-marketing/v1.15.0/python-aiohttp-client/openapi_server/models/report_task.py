# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimension import Dimension
from openapi_server.models.inventory_reference import InventoryReference
from openapi_server import util


class ReportTask(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, campaign_ids: List[str]=None, date_from: str=None, date_to: str=None, dimensions: List[Dimension]=None, funding_models: List[str]=None, inventory_references: List[InventoryReference]=None, listing_ids: List[str]=None, marketplace_id: str=None, metric_keys: List[str]=None, report_expiration_date: str=None, report_format: str=None, report_href: str=None, report_id: str=None, report_name: str=None, report_task_completion_date: str=None, report_task_creation_date: str=None, report_task_expected_completion_date: str=None, report_task_id: str=None, report_task_status: str=None, report_task_status_message: str=None, report_type: str=None):
        """ReportTask - a model defined in OpenAPI

        :param campaign_ids: The campaign_ids of this ReportTask.
        :param date_from: The date_from of this ReportTask.
        :param date_to: The date_to of this ReportTask.
        :param dimensions: The dimensions of this ReportTask.
        :param funding_models: The funding_models of this ReportTask.
        :param inventory_references: The inventory_references of this ReportTask.
        :param listing_ids: The listing_ids of this ReportTask.
        :param marketplace_id: The marketplace_id of this ReportTask.
        :param metric_keys: The metric_keys of this ReportTask.
        :param report_expiration_date: The report_expiration_date of this ReportTask.
        :param report_format: The report_format of this ReportTask.
        :param report_href: The report_href of this ReportTask.
        :param report_id: The report_id of this ReportTask.
        :param report_name: The report_name of this ReportTask.
        :param report_task_completion_date: The report_task_completion_date of this ReportTask.
        :param report_task_creation_date: The report_task_creation_date of this ReportTask.
        :param report_task_expected_completion_date: The report_task_expected_completion_date of this ReportTask.
        :param report_task_id: The report_task_id of this ReportTask.
        :param report_task_status: The report_task_status of this ReportTask.
        :param report_task_status_message: The report_task_status_message of this ReportTask.
        :param report_type: The report_type of this ReportTask.
        """
        self.openapi_types = {
            'campaign_ids': List[str],
            'date_from': str,
            'date_to': str,
            'dimensions': List[Dimension],
            'funding_models': List[str],
            'inventory_references': List[InventoryReference],
            'listing_ids': List[str],
            'marketplace_id': str,
            'metric_keys': List[str],
            'report_expiration_date': str,
            'report_format': str,
            'report_href': str,
            'report_id': str,
            'report_name': str,
            'report_task_completion_date': str,
            'report_task_creation_date': str,
            'report_task_expected_completion_date': str,
            'report_task_id': str,
            'report_task_status': str,
            'report_task_status_message': str,
            'report_type': str
        }

        self.attribute_map = {
            'campaign_ids': 'campaignIds',
            'date_from': 'dateFrom',
            'date_to': 'dateTo',
            'dimensions': 'dimensions',
            'funding_models': 'fundingModels',
            'inventory_references': 'inventoryReferences',
            'listing_ids': 'listingIds',
            'marketplace_id': 'marketplaceId',
            'metric_keys': 'metricKeys',
            'report_expiration_date': 'reportExpirationDate',
            'report_format': 'reportFormat',
            'report_href': 'reportHref',
            'report_id': 'reportId',
            'report_name': 'reportName',
            'report_task_completion_date': 'reportTaskCompletionDate',
            'report_task_creation_date': 'reportTaskCreationDate',
            'report_task_expected_completion_date': 'reportTaskExpectedCompletionDate',
            'report_task_id': 'reportTaskId',
            'report_task_status': 'reportTaskStatus',
            'report_task_status_message': 'reportTaskStatusMessage',
            'report_type': 'reportType'
        }

        self._campaign_ids = campaign_ids
        self._date_from = date_from
        self._date_to = date_to
        self._dimensions = dimensions
        self._funding_models = funding_models
        self._inventory_references = inventory_references
        self._listing_ids = listing_ids
        self._marketplace_id = marketplace_id
        self._metric_keys = metric_keys
        self._report_expiration_date = report_expiration_date
        self._report_format = report_format
        self._report_href = report_href
        self._report_id = report_id
        self._report_name = report_name
        self._report_task_completion_date = report_task_completion_date
        self._report_task_creation_date = report_task_creation_date
        self._report_task_expected_completion_date = report_task_expected_completion_date
        self._report_task_id = report_task_id
        self._report_task_status = report_task_status
        self._report_task_status_message = report_task_status_message
        self._report_type = report_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportTask':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportTask of this ReportTask.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def campaign_ids(self):
        """Gets the campaign_ids of this ReportTask.

        A list of IDs for the campaigns that are included in the report. A campaign ID is a unique eBay-assigned identifier of the campaign that's generated when the campaign is created.<br /><br />Call <b>getCampaigns</b> to return the current campaign IDs for a seller.

        :return: The campaign_ids of this ReportTask.
        :rtype: List[str]
        """
        return self._campaign_ids

    @campaign_ids.setter
    def campaign_ids(self, campaign_ids):
        """Sets the campaign_ids of this ReportTask.

        A list of IDs for the campaigns that are included in the report. A campaign ID is a unique eBay-assigned identifier of the campaign that's generated when the campaign is created.<br /><br />Call <b>getCampaigns</b> to return the current campaign IDs for a seller.

        :param campaign_ids: The campaign_ids of this ReportTask.
        :type campaign_ids: List[str]
        """

        self._campaign_ids = campaign_ids

    @property
    def date_from(self):
        """Gets the date_from of this ReportTask.

        The date defining the start of the timespan covered by the report, formatted as an <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html \" title=\"https://www.iso.org \" target=\"_blank\">ISO 8601</a> timestamp.

        :return: The date_from of this ReportTask.
        :rtype: str
        """
        return self._date_from

    @date_from.setter
    def date_from(self, date_from):
        """Sets the date_from of this ReportTask.

        The date defining the start of the timespan covered by the report, formatted as an <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html \" title=\"https://www.iso.org \" target=\"_blank\">ISO 8601</a> timestamp.

        :param date_from: The date_from of this ReportTask.
        :type date_from: str
        """

        self._date_from = date_from

    @property
    def date_to(self):
        """Gets the date_to of this ReportTask.

        The date defining the end of the timespan covered by the report, formatted as an <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html \" title=\"https://www.iso.org \" target=\"_blank\">ISO 8601</a> timestamp.

        :return: The date_to of this ReportTask.
        :rtype: str
        """
        return self._date_to

    @date_to.setter
    def date_to(self, date_to):
        """Sets the date_to of this ReportTask.

        The date defining the end of the timespan covered by the report, formatted as an <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html \" title=\"https://www.iso.org \" target=\"_blank\">ISO 8601</a> timestamp.

        :param date_to: The date_to of this ReportTask.
        :type date_to: str
        """

        self._date_to = date_to

    @property
    def dimensions(self):
        """Gets the dimensions of this ReportTask.

        A list containing the dimension in the report.

        :return: The dimensions of this ReportTask.
        :rtype: List[Dimension]
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this ReportTask.

        A list containing the dimension in the report.

        :param dimensions: The dimensions of this ReportTask.
        :type dimensions: List[Dimension]
        """

        self._dimensions = dimensions

    @property
    def funding_models(self):
        """Gets the funding_models of this ReportTask.

        The funding model for the campaign that shall be included in the report.<br /><br /><span class=\"tablenote\"><span style=\"color:#004680\"><strong>Note:</strong></span> The default funding model for Promoted Listings reports is <code>COST_PER_SALE</code>.</span><br /><br /><b>Valid Values:</b><ul><li><code>COST_PER_SALE</code></li><li><code>COST_PER_CLICK</code></li></ul>

        :return: The funding_models of this ReportTask.
        :rtype: List[str]
        """
        return self._funding_models

    @funding_models.setter
    def funding_models(self, funding_models):
        """Sets the funding_models of this ReportTask.

        The funding model for the campaign that shall be included in the report.<br /><br /><span class=\"tablenote\"><span style=\"color:#004680\"><strong>Note:</strong></span> The default funding model for Promoted Listings reports is <code>COST_PER_SALE</code>.</span><br /><br /><b>Valid Values:</b><ul><li><code>COST_PER_SALE</code></li><li><code>COST_PER_CLICK</code></li></ul>

        :param funding_models: The funding_models of this ReportTask.
        :type funding_models: List[str]
        """

        self._funding_models = funding_models

    @property
    def inventory_references(self):
        """Gets the inventory_references of this ReportTask.

        If supplied in the request, this field returns a list of the seller's inventory reference IDs included in the report.  <p>Each item is referenced by a pair of <b>inventoryRefernceID</b> and <b>inventoryReferenceType</b> values, where an inventory reference ID can be either a seller-defined <b>SKU</b> value or an <b>inventoryItemGroupKey</b>. An <b>inventoryItemGroupKey</b> is seller-defined ID for an inventory item group (a multiple-variation listing), and is created and used by the <a href=\"/api-docs/sell/inventory/resources/methods\">Inventory API</a>.</p>

        :return: The inventory_references of this ReportTask.
        :rtype: List[InventoryReference]
        """
        return self._inventory_references

    @inventory_references.setter
    def inventory_references(self, inventory_references):
        """Sets the inventory_references of this ReportTask.

        If supplied in the request, this field returns a list of the seller's inventory reference IDs included in the report.  <p>Each item is referenced by a pair of <b>inventoryRefernceID</b> and <b>inventoryReferenceType</b> values, where an inventory reference ID can be either a seller-defined <b>SKU</b> value or an <b>inventoryItemGroupKey</b>. An <b>inventoryItemGroupKey</b> is seller-defined ID for an inventory item group (a multiple-variation listing), and is created and used by the <a href=\"/api-docs/sell/inventory/resources/methods\">Inventory API</a>.</p>

        :param inventory_references: The inventory_references of this ReportTask.
        :type inventory_references: List[InventoryReference]
        """

        self._inventory_references = inventory_references

    @property
    def listing_ids(self):
        """Gets the listing_ids of this ReportTask.

        If supplied in the request, this field returns a list of the listing IDs included in the report. A listing ID is an eBay-assigned ID that's generated when a listing is created.

        :return: The listing_ids of this ReportTask.
        :rtype: List[str]
        """
        return self._listing_ids

    @listing_ids.setter
    def listing_ids(self, listing_ids):
        """Sets the listing_ids of this ReportTask.

        If supplied in the request, this field returns a list of the listing IDs included in the report. A listing ID is an eBay-assigned ID that's generated when a listing is created.

        :param listing_ids: The listing_ids of this ReportTask.
        :type listing_ids: List[str]
        """

        self._listing_ids = listing_ids

    @property
    def marketplace_id(self):
        """Gets the marketplace_id of this ReportTask.

        The ID of the eBay marketplace used by the report task. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/ba:MarketplaceIdEnum'>eBay API documentation</a>

        :return: The marketplace_id of this ReportTask.
        :rtype: str
        """
        return self._marketplace_id

    @marketplace_id.setter
    def marketplace_id(self, marketplace_id):
        """Sets the marketplace_id of this ReportTask.

        The ID of the eBay marketplace used by the report task. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/ba:MarketplaceIdEnum'>eBay API documentation</a>

        :param marketplace_id: The marketplace_id of this ReportTask.
        :type marketplace_id: str
        """

        self._marketplace_id = marketplace_id

    @property
    def metric_keys(self):
        """Gets the metric_keys of this ReportTask.

        A list of metrics for the report task.

        :return: The metric_keys of this ReportTask.
        :rtype: List[str]
        """
        return self._metric_keys

    @metric_keys.setter
    def metric_keys(self, metric_keys):
        """Sets the metric_keys of this ReportTask.

        A list of metrics for the report task.

        :param metric_keys: The metric_keys of this ReportTask.
        :type metric_keys: List[str]
        """

        self._metric_keys = metric_keys

    @property
    def report_expiration_date(self):
        """Gets the report_expiration_date of this ReportTask.

        The date after which the report is no longer be available. Reports are available for 30 days and you cannot download a report after it has expired.  <br><br><b>Format (UTC): </b> yyyy-MM-ddThh:mm:ss.sssZ

        :return: The report_expiration_date of this ReportTask.
        :rtype: str
        """
        return self._report_expiration_date

    @report_expiration_date.setter
    def report_expiration_date(self, report_expiration_date):
        """Sets the report_expiration_date of this ReportTask.

        The date after which the report is no longer be available. Reports are available for 30 days and you cannot download a report after it has expired.  <br><br><b>Format (UTC): </b> yyyy-MM-ddThh:mm:ss.sssZ

        :param report_expiration_date: The report_expiration_date of this ReportTask.
        :type report_expiration_date: str
        """

        self._report_expiration_date = report_expiration_date

    @property
    def report_format(self):
        """Gets the report_format of this ReportTask.

        Indicates the format of the report. Currently, only <code>TSV_GZIP</code> is supported. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:ReportFormatEnum'>eBay API documentation</a>

        :return: The report_format of this ReportTask.
        :rtype: str
        """
        return self._report_format

    @report_format.setter
    def report_format(self, report_format):
        """Sets the report_format of this ReportTask.

        Indicates the format of the report. Currently, only <code>TSV_GZIP</code> is supported. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:ReportFormatEnum'>eBay API documentation</a>

        :param report_format: The report_format of this ReportTask.
        :type report_format: str
        """

        self._report_format = report_format

    @property
    def report_href(self):
        """Gets the report_href of this ReportTask.

        The URL of the generated report, which can be used to download the report once it has been generated.

        :return: The report_href of this ReportTask.
        :rtype: str
        """
        return self._report_href

    @report_href.setter
    def report_href(self, report_href):
        """Sets the report_href of this ReportTask.

        The URL of the generated report, which can be used to download the report once it has been generated.

        :param report_href: The report_href of this ReportTask.
        :type report_href: str
        """

        self._report_href = report_href

    @property
    def report_id(self):
        """Gets the report_id of this ReportTask.

        A unique eBay-assigned ID for the report.

        :return: The report_id of this ReportTask.
        :rtype: str
        """
        return self._report_id

    @report_id.setter
    def report_id(self, report_id):
        """Sets the report_id of this ReportTask.

        A unique eBay-assigned ID for the report.

        :param report_id: The report_id of this ReportTask.
        :type report_id: str
        """

        self._report_id = report_id

    @property
    def report_name(self):
        """Gets the report_name of this ReportTask.

        An eBay-assigned name for the report that's created by the <b>createReportTask</b> call. This name is unique for the seller.

        :return: The report_name of this ReportTask.
        :rtype: str
        """
        return self._report_name

    @report_name.setter
    def report_name(self, report_name):
        """Sets the report_name of this ReportTask.

        An eBay-assigned name for the report that's created by the <b>createReportTask</b> call. This name is unique for the seller.

        :param report_name: The report_name of this ReportTask.
        :type report_name: str
        """

        self._report_name = report_name

    @property
    def report_task_completion_date(self):
        """Gets the report_task_completion_date of this ReportTask.

        The date the report task completed the report generation.  <br><br><b>Format (UTC): </b> yyyy-MM-ddThh:mm:ss.sssZ

        :return: The report_task_completion_date of this ReportTask.
        :rtype: str
        """
        return self._report_task_completion_date

    @report_task_completion_date.setter
    def report_task_completion_date(self, report_task_completion_date):
        """Sets the report_task_completion_date of this ReportTask.

        The date the report task completed the report generation.  <br><br><b>Format (UTC): </b> yyyy-MM-ddThh:mm:ss.sssZ

        :param report_task_completion_date: The report_task_completion_date of this ReportTask.
        :type report_task_completion_date: str
        """

        self._report_task_completion_date = report_task_completion_date

    @property
    def report_task_creation_date(self):
        """Gets the report_task_creation_date of this ReportTask.

        The date the report task was created.  <br><br><b>Format (UTC): </b> yyyy-MM-ddThh:mm:ss.sssZ

        :return: The report_task_creation_date of this ReportTask.
        :rtype: str
        """
        return self._report_task_creation_date

    @report_task_creation_date.setter
    def report_task_creation_date(self, report_task_creation_date):
        """Sets the report_task_creation_date of this ReportTask.

        The date the report task was created.  <br><br><b>Format (UTC): </b> yyyy-MM-ddThh:mm:ss.sssZ

        :param report_task_creation_date: The report_task_creation_date of this ReportTask.
        :type report_task_creation_date: str
        """

        self._report_task_creation_date = report_task_creation_date

    @property
    def report_task_expected_completion_date(self):
        """Gets the report_task_expected_completion_date of this ReportTask.

        The date the report task is expected to complete the report generation.  <br><br><b>Format (UTC): </b> yyyy-MM-ddThh:mm:ss.sssZ

        :return: The report_task_expected_completion_date of this ReportTask.
        :rtype: str
        """
        return self._report_task_expected_completion_date

    @report_task_expected_completion_date.setter
    def report_task_expected_completion_date(self, report_task_expected_completion_date):
        """Sets the report_task_expected_completion_date of this ReportTask.

        The date the report task is expected to complete the report generation.  <br><br><b>Format (UTC): </b> yyyy-MM-ddThh:mm:ss.sssZ

        :param report_task_expected_completion_date: The report_task_expected_completion_date of this ReportTask.
        :type report_task_expected_completion_date: str
        """

        self._report_task_expected_completion_date = report_task_expected_completion_date

    @property
    def report_task_id(self):
        """Gets the report_task_id of this ReportTask.

        The unique eBay-assigned ID of the report task. This value is generated when the report task is created with a call to <b>createReportTask</b>.

        :return: The report_task_id of this ReportTask.
        :rtype: str
        """
        return self._report_task_id

    @report_task_id.setter
    def report_task_id(self, report_task_id):
        """Sets the report_task_id of this ReportTask.

        The unique eBay-assigned ID of the report task. This value is generated when the report task is created with a call to <b>createReportTask</b>.

        :param report_task_id: The report_task_id of this ReportTask.
        :type report_task_id: str
        """

        self._report_task_id = report_task_id

    @property
    def report_task_status(self):
        """Gets the report_task_status of this ReportTask.

        Indicates the current state of the report task. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:TaskStatusEnum'>eBay API documentation</a>

        :return: The report_task_status of this ReportTask.
        :rtype: str
        """
        return self._report_task_status

    @report_task_status.setter
    def report_task_status(self, report_task_status):
        """Sets the report_task_status of this ReportTask.

        Indicates the current state of the report task. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:TaskStatusEnum'>eBay API documentation</a>

        :param report_task_status: The report_task_status of this ReportTask.
        :type report_task_status: str
        """

        self._report_task_status = report_task_status

    @property
    def report_task_status_message(self):
        """Gets the report_task_status_message of this ReportTask.

        A status message with additional information about the report task.

        :return: The report_task_status_message of this ReportTask.
        :rtype: str
        """
        return self._report_task_status_message

    @report_task_status_message.setter
    def report_task_status_message(self, report_task_status_message):
        """Sets the report_task_status_message of this ReportTask.

        A status message with additional information about the report task.

        :param report_task_status_message: The report_task_status_message of this ReportTask.
        :type report_task_status_message: str
        """

        self._report_task_status_message = report_task_status_message

    @property
    def report_type(self):
        """Gets the report_type of this ReportTask.

        Indicates type of report associated with the report task.<br/><br/><span class=\"tablenote\"><b>Note:</b> INVENTORY_PERFORMANCE_REPORT is not currently available; availability date is pending.</span> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:ReportTypeEnum'>eBay API documentation</a>

        :return: The report_type of this ReportTask.
        :rtype: str
        """
        return self._report_type

    @report_type.setter
    def report_type(self, report_type):
        """Sets the report_type of this ReportTask.

        Indicates type of report associated with the report task.<br/><br/><span class=\"tablenote\"><b>Note:</b> INVENTORY_PERFORMANCE_REPORT is not currently available; availability date is pending.</span> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:ReportTypeEnum'>eBay API documentation</a>

        :param report_type: The report_type of this ReportTask.
        :type report_type: str
        """

        self._report_type = report_type
