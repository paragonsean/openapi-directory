# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Dimension(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotation_keys: List[str]=None, dimension_key: str=None):
        """Dimension - a model defined in OpenAPI

        :param annotation_keys: The annotation_keys of this Dimension.
        :param dimension_key: The dimension_key of this Dimension.
        """
        self.openapi_types = {
            'annotation_keys': List[str],
            'dimension_key': str
        }

        self.attribute_map = {
            'annotation_keys': 'annotationKeys',
            'dimension_key': 'dimensionKey'
        }

        self._annotation_keys = annotation_keys
        self._dimension_key = dimension_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dimension':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Dimension of this Dimension.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotation_keys(self):
        """Gets the annotation_keys of this Dimension.

        A list of annotations associated with the dimension of the report.

        :return: The annotation_keys of this Dimension.
        :rtype: List[str]
        """
        return self._annotation_keys

    @annotation_keys.setter
    def annotation_keys(self, annotation_keys):
        """Sets the annotation_keys of this Dimension.

        A list of annotations associated with the dimension of the report.

        :param annotation_keys: The annotation_keys of this Dimension.
        :type annotation_keys: List[str]
        """

        self._annotation_keys = annotation_keys

    @property
    def dimension_key(self):
        """Gets the dimension_key of this Dimension.

        The name of the dimension on which the report is based. <p>A dimension is an attribute to which the report data applies.</p>

        :return: The dimension_key of this Dimension.
        :rtype: str
        """
        return self._dimension_key

    @dimension_key.setter
    def dimension_key(self, dimension_key):
        """Sets the dimension_key of this Dimension.

        The name of the dimension on which the report is based. <p>A dimension is an attribute to which the report data applies.</p>

        :param dimension_key: The dimension_key of this Dimension.
        :type dimension_key: str
        """

        self._dimension_key = dimension_key
