# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimension_metadata import DimensionMetadata
from openapi_server.models.metric_metadata import MetricMetadata
from openapi_server import util


class ReportMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dimension_metadata: List[DimensionMetadata]=None, max_number_of_dimensions_to_request: int=None, max_number_of_metrics_to_request: int=None, metric_metadata: List[MetricMetadata]=None, report_type: str=None):
        """ReportMetadata - a model defined in OpenAPI

        :param dimension_metadata: The dimension_metadata of this ReportMetadata.
        :param max_number_of_dimensions_to_request: The max_number_of_dimensions_to_request of this ReportMetadata.
        :param max_number_of_metrics_to_request: The max_number_of_metrics_to_request of this ReportMetadata.
        :param metric_metadata: The metric_metadata of this ReportMetadata.
        :param report_type: The report_type of this ReportMetadata.
        """
        self.openapi_types = {
            'dimension_metadata': List[DimensionMetadata],
            'max_number_of_dimensions_to_request': int,
            'max_number_of_metrics_to_request': int,
            'metric_metadata': List[MetricMetadata],
            'report_type': str
        }

        self.attribute_map = {
            'dimension_metadata': 'dimensionMetadata',
            'max_number_of_dimensions_to_request': 'maxNumberOfDimensionsToRequest',
            'max_number_of_metrics_to_request': 'maxNumberOfMetricsToRequest',
            'metric_metadata': 'metricMetadata',
            'report_type': 'reportType'
        }

        self._dimension_metadata = dimension_metadata
        self._max_number_of_dimensions_to_request = max_number_of_dimensions_to_request
        self._max_number_of_metrics_to_request = max_number_of_metrics_to_request
        self._metric_metadata = metric_metadata
        self._report_type = report_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportMetadata of this ReportMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dimension_metadata(self):
        """Gets the dimension_metadata of this ReportMetadata.

        A list containing the metadata for the dimension used in the report.

        :return: The dimension_metadata of this ReportMetadata.
        :rtype: List[DimensionMetadata]
        """
        return self._dimension_metadata

    @dimension_metadata.setter
    def dimension_metadata(self, dimension_metadata):
        """Sets the dimension_metadata of this ReportMetadata.

        A list containing the metadata for the dimension used in the report.

        :param dimension_metadata: The dimension_metadata of this ReportMetadata.
        :type dimension_metadata: List[DimensionMetadata]
        """

        self._dimension_metadata = dimension_metadata

    @property
    def max_number_of_dimensions_to_request(self):
        """Gets the max_number_of_dimensions_to_request of this ReportMetadata.

        The maximum number of dimensions that can be requested for the specified report type.

        :return: The max_number_of_dimensions_to_request of this ReportMetadata.
        :rtype: int
        """
        return self._max_number_of_dimensions_to_request

    @max_number_of_dimensions_to_request.setter
    def max_number_of_dimensions_to_request(self, max_number_of_dimensions_to_request):
        """Sets the max_number_of_dimensions_to_request of this ReportMetadata.

        The maximum number of dimensions that can be requested for the specified report type.

        :param max_number_of_dimensions_to_request: The max_number_of_dimensions_to_request of this ReportMetadata.
        :type max_number_of_dimensions_to_request: int
        """

        self._max_number_of_dimensions_to_request = max_number_of_dimensions_to_request

    @property
    def max_number_of_metrics_to_request(self):
        """Gets the max_number_of_metrics_to_request of this ReportMetadata.

        The maximum number of metrics that can be requested for the specified report type.

        :return: The max_number_of_metrics_to_request of this ReportMetadata.
        :rtype: int
        """
        return self._max_number_of_metrics_to_request

    @max_number_of_metrics_to_request.setter
    def max_number_of_metrics_to_request(self, max_number_of_metrics_to_request):
        """Sets the max_number_of_metrics_to_request of this ReportMetadata.

        The maximum number of metrics that can be requested for the specified report type.

        :param max_number_of_metrics_to_request: The max_number_of_metrics_to_request of this ReportMetadata.
        :type max_number_of_metrics_to_request: int
        """

        self._max_number_of_metrics_to_request = max_number_of_metrics_to_request

    @property
    def metric_metadata(self):
        """Gets the metric_metadata of this ReportMetadata.

        A list containing the metadata for the metrics in the report.

        :return: The metric_metadata of this ReportMetadata.
        :rtype: List[MetricMetadata]
        """
        return self._metric_metadata

    @metric_metadata.setter
    def metric_metadata(self, metric_metadata):
        """Sets the metric_metadata of this ReportMetadata.

        A list containing the metadata for the metrics in the report.

        :param metric_metadata: The metric_metadata of this ReportMetadata.
        :type metric_metadata: List[MetricMetadata]
        """

        self._metric_metadata = metric_metadata

    @property
    def report_type(self):
        """Gets the report_type of this ReportMetadata.

        The <b>report_type</b>, as specified in the request to create the report task.<br/><br/><span class=\"tablenote\"><b>Note:</b> INVENTORY_PERFORMANCE_REPORT is not currently available; availability date is pending.</span> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:ReportTypeEnum'>eBay API documentation</a>

        :return: The report_type of this ReportMetadata.
        :rtype: str
        """
        return self._report_type

    @report_type.setter
    def report_type(self, report_type):
        """Sets the report_type of this ReportMetadata.

        The <b>report_type</b>, as specified in the request to create the report task.<br/><br/><span class=\"tablenote\"><b>Note:</b> INVENTORY_PERFORMANCE_REPORT is not currently available; availability date is pending.</span> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:ReportTypeEnum'>eBay API documentation</a>

        :param report_type: The report_type of this ReportMetadata.
        :type report_type: str
        """

        self._report_type = report_type
