# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateNegativeKeywordIdRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, negative_keyword_id: str=None, negative_keyword_status: str=None):
        """UpdateNegativeKeywordIdRequest - a model defined in OpenAPI

        :param negative_keyword_id: The negative_keyword_id of this UpdateNegativeKeywordIdRequest.
        :param negative_keyword_status: The negative_keyword_status of this UpdateNegativeKeywordIdRequest.
        """
        self.openapi_types = {
            'negative_keyword_id': str,
            'negative_keyword_status': str
        }

        self.attribute_map = {
            'negative_keyword_id': 'negativeKeywordId',
            'negative_keyword_status': 'negativeKeywordStatus'
        }

        self._negative_keyword_id = negative_keyword_id
        self._negative_keyword_status = negative_keyword_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNegativeKeywordIdRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateNegativeKeywordIdRequest of this UpdateNegativeKeywordIdRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def negative_keyword_id(self):
        """Gets the negative_keyword_id of this UpdateNegativeKeywordIdRequest.

        A unique eBay-assigned ID for a negative keyword. This keyword ID will be generated for each successfully created negative keyword.

        :return: The negative_keyword_id of this UpdateNegativeKeywordIdRequest.
        :rtype: str
        """
        return self._negative_keyword_id

    @negative_keyword_id.setter
    def negative_keyword_id(self, negative_keyword_id):
        """Sets the negative_keyword_id of this UpdateNegativeKeywordIdRequest.

        A unique eBay-assigned ID for a negative keyword. This keyword ID will be generated for each successfully created negative keyword.

        :param negative_keyword_id: The negative_keyword_id of this UpdateNegativeKeywordIdRequest.
        :type negative_keyword_id: str
        """

        self._negative_keyword_id = negative_keyword_id

    @property
    def negative_keyword_status(self):
        """Gets the negative_keyword_status of this UpdateNegativeKeywordIdRequest.

        A field that defines the status of the negative keyword. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:NegativeKeywordStatusEnum'>eBay API documentation</a>

        :return: The negative_keyword_status of this UpdateNegativeKeywordIdRequest.
        :rtype: str
        """
        return self._negative_keyword_status

    @negative_keyword_status.setter
    def negative_keyword_status(self, negative_keyword_status):
        """Sets the negative_keyword_status of this UpdateNegativeKeywordIdRequest.

        A field that defines the status of the negative keyword. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:NegativeKeywordStatusEnum'>eBay API documentation</a>

        :param negative_keyword_status: The negative_keyword_status of this UpdateNegativeKeywordIdRequest.
        :type negative_keyword_status: str
        """

        self._negative_keyword_status = negative_keyword_status
