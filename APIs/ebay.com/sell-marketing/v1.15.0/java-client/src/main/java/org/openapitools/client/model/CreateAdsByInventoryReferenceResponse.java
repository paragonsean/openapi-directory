/*
 * Marketing API
 * <p>The <i>Marketing API </i> offers two platforms that sellers can use to promote and advertise their products:</p> <ul><li><b>Promoted Listings</b> is an eBay ad service that lets sellers set up <i>ad campaigns </i> for the products they want to promote. eBay displays the ads in search results and in other marketing modules as <b>SPONSORED</b> listings. If an item in a Promoted Listings campaign sells, the seller is assessed a Promoted Listings fee, which is a seller-specified percentage applied to the sales price. For complete details, refer to the <a href=\"/api-docs/sell/static/marketing/pl-landing.html\">Promoted Listings playbook</a>.</li><li><b>Promotions Manager</b> gives sellers a way to offer discounts on specific items as a way to attract buyers to their inventory. Sellers can set up discounts (such as \"20% off\" and other types of offers) on specific items or on an entire customer order. To further attract buyers, eBay prominently displays promotion <i>teasers</i> throughout buyer flows. For complete details, see <a href=\"/api-docs/sell/static/marketing/promotions-manager.html\">Promotions Manager</a>.</li></ul>  <p><b>Marketing reports</b>, on both the Promoted Listings and Promotions Manager platforms, give sellers information that shows the effectiveness of their marketing strategies. The data gives sellers the ability to review and fine tune their marketing efforts.</p> <p class=\"tablenote\"><b>Important!</b> Sellers must have an active eBay Store subscription, and they must accept the <b>Terms and Conditions</b> before they can make requests to these APIs in the Production environment. There are also site-specific listings requirements and restrictions associated with these marketing tools, as listed in the \"requirements and restrictions\" sections for <a href=\"/api-docs/sell/marketing/static/overview.html#PL-requirements\">Promoted Listings</a> and <a href=\"/api-docs/sell/marketing/static/overview.html#PM-requirements\">Promotions Manager</a>.</p> <p>The table below lists all the Marketing API calls grouped by resource.</p>
 *
 * The version of the OpenAPI document: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AdReference;
import org.openapitools.client.model.Error;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * This type defines the fields returned when you create an ad by inventory reference ID.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:39:56.470009-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateAdsByInventoryReferenceResponse {
  public static final String SERIALIZED_NAME_AD_GROUP_ID = "adGroupId";
  @SerializedName(SERIALIZED_NAME_AD_GROUP_ID)
  private String adGroupId;

  public static final String SERIALIZED_NAME_ADS = "ads";
  @SerializedName(SERIALIZED_NAME_ADS)
  private List<AdReference> ads = new ArrayList<>();

  public static final String SERIALIZED_NAME_ERRORS = "errors";
  @SerializedName(SERIALIZED_NAME_ERRORS)
  private List<Error> errors = new ArrayList<>();

  public static final String SERIALIZED_NAME_INVENTORY_REFERENCE_ID = "inventoryReferenceId";
  @SerializedName(SERIALIZED_NAME_INVENTORY_REFERENCE_ID)
  private String inventoryReferenceId;

  public static final String SERIALIZED_NAME_INVENTORY_REFERENCE_TYPE = "inventoryReferenceType";
  @SerializedName(SERIALIZED_NAME_INVENTORY_REFERENCE_TYPE)
  private String inventoryReferenceType;

  public static final String SERIALIZED_NAME_STATUS_CODE = "statusCode";
  @SerializedName(SERIALIZED_NAME_STATUS_CODE)
  private Integer statusCode;

  public CreateAdsByInventoryReferenceResponse() {
  }

  public CreateAdsByInventoryReferenceResponse adGroupId(String adGroupId) {
    this.adGroupId = adGroupId;
    return this;
  }

  /**
   * A unique eBay-assigned ID for an ad group in a Promoted Listings Advanced (PLA) campaign that uses the Cost Per Click (CPC) funding model.&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; This field will always be returned for campaigns that use the CPC funding model. It will not be returned for campaigns that use the Cost Per Sale (CPS) funding model.&lt;/span&gt;
   * @return adGroupId
   */
  @javax.annotation.Nullable
  public String getAdGroupId() {
    return adGroupId;
  }

  public void setAdGroupId(String adGroupId) {
    this.adGroupId = adGroupId;
  }


  public CreateAdsByInventoryReferenceResponse ads(List<AdReference> ads) {
    this.ads = ads;
    return this;
  }

  public CreateAdsByInventoryReferenceResponse addAdsItem(AdReference adsItem) {
    if (this.ads == null) {
      this.ads = new ArrayList<>();
    }
    this.ads.add(adsItem);
    return this;
  }

  /**
   * A list of ad IDs. An ad ID is generated for each successfully created ad.
   * @return ads
   */
  @javax.annotation.Nullable
  public List<AdReference> getAds() {
    return ads;
  }

  public void setAds(List<AdReference> ads) {
    this.ads = ads;
  }


  public CreateAdsByInventoryReferenceResponse errors(List<Error> errors) {
    this.errors = errors;
    return this;
  }

  public CreateAdsByInventoryReferenceResponse addErrorsItem(Error errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

  /**
   * An array of errors or warnings associated with the create-ads request.
   * @return errors
   */
  @javax.annotation.Nullable
  public List<Error> getErrors() {
    return errors;
  }

  public void setErrors(List<Error> errors) {
    this.errors = errors;
  }


  public CreateAdsByInventoryReferenceResponse inventoryReferenceId(String inventoryReferenceId) {
    this.inventoryReferenceId = inventoryReferenceId;
    return this;
  }

  /**
   * An ID that identifies a single-item listing or multiple-variation listing that is managed with the &lt;a href&#x3D;\&quot;/api-docs/sell/inventory/resources/methods\&quot; title&#x3D;\&quot;Inventory API Reference\&quot;&gt;Inventory API&lt;/a&gt;. &lt;p&gt;The &lt;i&gt;inventory reference ID&lt;/i&gt; is a seller-defined value that can be either an &lt;b&gt;SKU&lt;/b&gt; for a single-item listing or an &lt;b&gt;inventoryItemGroupKey&lt;/b&gt; for a multiple-value listing.&lt;/p&gt;
   * @return inventoryReferenceId
   */
  @javax.annotation.Nullable
  public String getInventoryReferenceId() {
    return inventoryReferenceId;
  }

  public void setInventoryReferenceId(String inventoryReferenceId) {
    this.inventoryReferenceId = inventoryReferenceId;
  }


  public CreateAdsByInventoryReferenceResponse inventoryReferenceType(String inventoryReferenceType) {
    this.inventoryReferenceType = inventoryReferenceType;
    return this;
  }

  /**
   * Indicates the type of item the &lt;b&gt;inventoryReferenceId&lt;/b&gt; references. The item can be either an &lt;code&gt;INVENTORY_ITEM&lt;/code&gt; or &lt;code&gt;INVENTORY_ITEM_GROUP&lt;/code&gt;. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/marketing/types/pls:InventoryReferenceTypeEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return inventoryReferenceType
   */
  @javax.annotation.Nullable
  public String getInventoryReferenceType() {
    return inventoryReferenceType;
  }

  public void setInventoryReferenceType(String inventoryReferenceType) {
    this.inventoryReferenceType = inventoryReferenceType;
  }


  public CreateAdsByInventoryReferenceResponse statusCode(Integer statusCode) {
    this.statusCode = statusCode;
    return this;
  }

  /**
   * An HTTP status code that indicates the response-status of the request. Check this code to see if the ads were successfuly created.
   * @return statusCode
   */
  @javax.annotation.Nullable
  public Integer getStatusCode() {
    return statusCode;
  }

  public void setStatusCode(Integer statusCode) {
    this.statusCode = statusCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAdsByInventoryReferenceResponse createAdsByInventoryReferenceResponse = (CreateAdsByInventoryReferenceResponse) o;
    return Objects.equals(this.adGroupId, createAdsByInventoryReferenceResponse.adGroupId) &&
        Objects.equals(this.ads, createAdsByInventoryReferenceResponse.ads) &&
        Objects.equals(this.errors, createAdsByInventoryReferenceResponse.errors) &&
        Objects.equals(this.inventoryReferenceId, createAdsByInventoryReferenceResponse.inventoryReferenceId) &&
        Objects.equals(this.inventoryReferenceType, createAdsByInventoryReferenceResponse.inventoryReferenceType) &&
        Objects.equals(this.statusCode, createAdsByInventoryReferenceResponse.statusCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adGroupId, ads, errors, inventoryReferenceId, inventoryReferenceType, statusCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAdsByInventoryReferenceResponse {\n");
    sb.append("    adGroupId: ").append(toIndentedString(adGroupId)).append("\n");
    sb.append("    ads: ").append(toIndentedString(ads)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    inventoryReferenceId: ").append(toIndentedString(inventoryReferenceId)).append("\n");
    sb.append("    inventoryReferenceType: ").append(toIndentedString(inventoryReferenceType)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adGroupId");
    openapiFields.add("ads");
    openapiFields.add("errors");
    openapiFields.add("inventoryReferenceId");
    openapiFields.add("inventoryReferenceType");
    openapiFields.add("statusCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateAdsByInventoryReferenceResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateAdsByInventoryReferenceResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateAdsByInventoryReferenceResponse is not found in the empty JSON string", CreateAdsByInventoryReferenceResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateAdsByInventoryReferenceResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateAdsByInventoryReferenceResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("adGroupId") != null && !jsonObj.get("adGroupId").isJsonNull()) && !jsonObj.get("adGroupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adGroupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adGroupId").toString()));
      }
      if (jsonObj.get("ads") != null && !jsonObj.get("ads").isJsonNull()) {
        JsonArray jsonArrayads = jsonObj.getAsJsonArray("ads");
        if (jsonArrayads != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ads").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ads` to be an array in the JSON string but got `%s`", jsonObj.get("ads").toString()));
          }

          // validate the optional field `ads` (array)
          for (int i = 0; i < jsonArrayads.size(); i++) {
            AdReference.validateJsonElement(jsonArrayads.get(i));
          };
        }
      }
      if (jsonObj.get("errors") != null && !jsonObj.get("errors").isJsonNull()) {
        JsonArray jsonArrayerrors = jsonObj.getAsJsonArray("errors");
        if (jsonArrayerrors != null) {
          // ensure the json data is an array
          if (!jsonObj.get("errors").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `errors` to be an array in the JSON string but got `%s`", jsonObj.get("errors").toString()));
          }

          // validate the optional field `errors` (array)
          for (int i = 0; i < jsonArrayerrors.size(); i++) {
            Error.validateJsonElement(jsonArrayerrors.get(i));
          };
        }
      }
      if ((jsonObj.get("inventoryReferenceId") != null && !jsonObj.get("inventoryReferenceId").isJsonNull()) && !jsonObj.get("inventoryReferenceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inventoryReferenceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inventoryReferenceId").toString()));
      }
      if ((jsonObj.get("inventoryReferenceType") != null && !jsonObj.get("inventoryReferenceType").isJsonNull()) && !jsonObj.get("inventoryReferenceType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inventoryReferenceType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inventoryReferenceType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateAdsByInventoryReferenceResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateAdsByInventoryReferenceResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateAdsByInventoryReferenceResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateAdsByInventoryReferenceResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateAdsByInventoryReferenceResponse>() {
           @Override
           public void write(JsonWriter out, CreateAdsByInventoryReferenceResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateAdsByInventoryReferenceResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateAdsByInventoryReferenceResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateAdsByInventoryReferenceResponse
   * @throws IOException if the JSON string is invalid with respect to CreateAdsByInventoryReferenceResponse
   */
  public static CreateAdsByInventoryReferenceResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateAdsByInventoryReferenceResponse.class);
  }

  /**
   * Convert an instance of CreateAdsByInventoryReferenceResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

