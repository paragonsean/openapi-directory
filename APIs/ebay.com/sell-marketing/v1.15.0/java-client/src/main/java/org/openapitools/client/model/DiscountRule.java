/*
 * Marketing API
 * <p>The <i>Marketing API </i> offers two platforms that sellers can use to promote and advertise their products:</p> <ul><li><b>Promoted Listings</b> is an eBay ad service that lets sellers set up <i>ad campaigns </i> for the products they want to promote. eBay displays the ads in search results and in other marketing modules as <b>SPONSORED</b> listings. If an item in a Promoted Listings campaign sells, the seller is assessed a Promoted Listings fee, which is a seller-specified percentage applied to the sales price. For complete details, refer to the <a href=\"/api-docs/sell/static/marketing/pl-landing.html\">Promoted Listings playbook</a>.</li><li><b>Promotions Manager</b> gives sellers a way to offer discounts on specific items as a way to attract buyers to their inventory. Sellers can set up discounts (such as \"20% off\" and other types of offers) on specific items or on an entire customer order. To further attract buyers, eBay prominently displays promotion <i>teasers</i> throughout buyer flows. For complete details, see <a href=\"/api-docs/sell/static/marketing/promotions-manager.html\">Promotions Manager</a>.</li></ul>  <p><b>Marketing reports</b>, on both the Promoted Listings and Promotions Manager platforms, give sellers information that shows the effectiveness of their marketing strategies. The data gives sellers the ability to review and fine tune their marketing efforts.</p> <p class=\"tablenote\"><b>Important!</b> Sellers must have an active eBay Store subscription, and they must accept the <b>Terms and Conditions</b> before they can make requests to these APIs in the Production environment. There are also site-specific listings requirements and restrictions associated with these marketing tools, as listed in the \"requirements and restrictions\" sections for <a href=\"/api-docs/sell/marketing/static/overview.html#PL-requirements\">Promoted Listings</a> and <a href=\"/api-docs/sell/marketing/static/overview.html#PM-requirements\">Promotions Manager</a>.</p> <p>The table below lists all the Marketing API calls grouped by resource.</p>
 *
 * The version of the OpenAPI document: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Amount;
import org.openapitools.client.model.DiscountBenefit;
import org.openapitools.client.model.DiscountSpecification;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * This complex type defines a promotion as being either a monetary amount or a percentage of a sales price that&#39;s subtracted from the price of an item or order. &lt;p&gt;Set the amount of the discount and the rules that govern when the discount triggers using the &lt;b&gt;discountBenefit&lt;/b&gt; and &lt;b&gt;discountSpecification&lt;/b&gt; fields.&lt;/p&gt;  &lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; In &lt;b&gt;volume pricing promotions&lt;/b&gt;, you must configure at least two &lt;b&gt;discountRule&lt;/b&gt; containers and at most four.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:39:56.470009-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DiscountRule {
  public static final String SERIALIZED_NAME_DISCOUNT_BENEFIT = "discountBenefit";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_BENEFIT)
  private DiscountBenefit discountBenefit;

  public static final String SERIALIZED_NAME_DISCOUNT_SPECIFICATION = "discountSpecification";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_SPECIFICATION)
  private DiscountSpecification discountSpecification;

  public static final String SERIALIZED_NAME_MAX_DISCOUNT_AMOUNT = "maxDiscountAmount";
  @SerializedName(SERIALIZED_NAME_MAX_DISCOUNT_AMOUNT)
  private Amount maxDiscountAmount;

  public static final String SERIALIZED_NAME_RULE_ORDER = "ruleOrder";
  @SerializedName(SERIALIZED_NAME_RULE_ORDER)
  private Integer ruleOrder;

  public DiscountRule() {
  }

  public DiscountRule discountBenefit(DiscountBenefit discountBenefit) {
    this.discountBenefit = discountBenefit;
    return this;
  }

  /**
   * Get discountBenefit
   * @return discountBenefit
   */
  @javax.annotation.Nullable
  public DiscountBenefit getDiscountBenefit() {
    return discountBenefit;
  }

  public void setDiscountBenefit(DiscountBenefit discountBenefit) {
    this.discountBenefit = discountBenefit;
  }


  public DiscountRule discountSpecification(DiscountSpecification discountSpecification) {
    this.discountSpecification = discountSpecification;
    return this;
  }

  /**
   * Get discountSpecification
   * @return discountSpecification
   */
  @javax.annotation.Nullable
  public DiscountSpecification getDiscountSpecification() {
    return discountSpecification;
  }

  public void setDiscountSpecification(DiscountSpecification discountSpecification) {
    this.discountSpecification = discountSpecification;
  }


  public DiscountRule maxDiscountAmount(Amount maxDiscountAmount) {
    this.maxDiscountAmount = maxDiscountAmount;
    return this;
  }

  /**
   * Get maxDiscountAmount
   * @return maxDiscountAmount
   */
  @javax.annotation.Nullable
  public Amount getMaxDiscountAmount() {
    return maxDiscountAmount;
  }

  public void setMaxDiscountAmount(Amount maxDiscountAmount) {
    this.maxDiscountAmount = maxDiscountAmount;
  }


  public DiscountRule ruleOrder(Integer ruleOrder) {
    this.ruleOrder = ruleOrder;
    return this;
  }

  /**
   * This field indicates the order in which the &lt;b&gt;discountRules&lt;/b&gt; are presented. The value specified for this field must equal the associated &lt;b&gt;minQuantity&lt;/b&gt; value. &lt;br&gt;&lt;br&gt;&lt;i&gt;Required if &lt;/i&gt; you are creating a volume pricing promotion.
   * @return ruleOrder
   */
  @javax.annotation.Nullable
  public Integer getRuleOrder() {
    return ruleOrder;
  }

  public void setRuleOrder(Integer ruleOrder) {
    this.ruleOrder = ruleOrder;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DiscountRule discountRule = (DiscountRule) o;
    return Objects.equals(this.discountBenefit, discountRule.discountBenefit) &&
        Objects.equals(this.discountSpecification, discountRule.discountSpecification) &&
        Objects.equals(this.maxDiscountAmount, discountRule.maxDiscountAmount) &&
        Objects.equals(this.ruleOrder, discountRule.ruleOrder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(discountBenefit, discountSpecification, maxDiscountAmount, ruleOrder);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DiscountRule {\n");
    sb.append("    discountBenefit: ").append(toIndentedString(discountBenefit)).append("\n");
    sb.append("    discountSpecification: ").append(toIndentedString(discountSpecification)).append("\n");
    sb.append("    maxDiscountAmount: ").append(toIndentedString(maxDiscountAmount)).append("\n");
    sb.append("    ruleOrder: ").append(toIndentedString(ruleOrder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("discountBenefit");
    openapiFields.add("discountSpecification");
    openapiFields.add("maxDiscountAmount");
    openapiFields.add("ruleOrder");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DiscountRule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DiscountRule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DiscountRule is not found in the empty JSON string", DiscountRule.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DiscountRule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DiscountRule` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `discountBenefit`
      if (jsonObj.get("discountBenefit") != null && !jsonObj.get("discountBenefit").isJsonNull()) {
        DiscountBenefit.validateJsonElement(jsonObj.get("discountBenefit"));
      }
      // validate the optional field `discountSpecification`
      if (jsonObj.get("discountSpecification") != null && !jsonObj.get("discountSpecification").isJsonNull()) {
        DiscountSpecification.validateJsonElement(jsonObj.get("discountSpecification"));
      }
      // validate the optional field `maxDiscountAmount`
      if (jsonObj.get("maxDiscountAmount") != null && !jsonObj.get("maxDiscountAmount").isJsonNull()) {
        Amount.validateJsonElement(jsonObj.get("maxDiscountAmount"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DiscountRule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DiscountRule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DiscountRule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DiscountRule.class));

       return (TypeAdapter<T>) new TypeAdapter<DiscountRule>() {
           @Override
           public void write(JsonWriter out, DiscountRule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DiscountRule read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DiscountRule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DiscountRule
   * @throws IOException if the JSON string is invalid with respect to DiscountRule
   */
  public static DiscountRule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DiscountRule.class);
  }

  /**
   * Convert an instance of DiscountRule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

