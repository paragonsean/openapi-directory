/*
 * Marketing API
 * <p>The <i>Marketing API </i> offers two platforms that sellers can use to promote and advertise their products:</p> <ul><li><b>Promoted Listings</b> is an eBay ad service that lets sellers set up <i>ad campaigns </i> for the products they want to promote. eBay displays the ads in search results and in other marketing modules as <b>SPONSORED</b> listings. If an item in a Promoted Listings campaign sells, the seller is assessed a Promoted Listings fee, which is a seller-specified percentage applied to the sales price. For complete details, refer to the <a href=\"/api-docs/sell/static/marketing/pl-landing.html\">Promoted Listings playbook</a>.</li><li><b>Promotions Manager</b> gives sellers a way to offer discounts on specific items as a way to attract buyers to their inventory. Sellers can set up discounts (such as \"20% off\" and other types of offers) on specific items or on an entire customer order. To further attract buyers, eBay prominently displays promotion <i>teasers</i> throughout buyer flows. For complete details, see <a href=\"/api-docs/sell/static/marketing/promotions-manager.html\">Promotions Manager</a>.</li></ul>  <p><b>Marketing reports</b>, on both the Promoted Listings and Promotions Manager platforms, give sellers information that shows the effectiveness of their marketing strategies. The data gives sellers the ability to review and fine tune their marketing efforts.</p> <p class=\"tablenote\"><b>Important!</b> Sellers must have an active eBay Store subscription, and they must accept the <b>Terms and Conditions</b> before they can make requests to these APIs in the Production environment. There are also site-specific listings requirements and restrictions associated with these marketing tools, as listed in the \"requirements and restrictions\" sections for <a href=\"/api-docs/sell/marketing/static/overview.html#PL-requirements\">Promoted Listings</a> and <a href=\"/api-docs/sell/marketing/static/overview.html#PM-requirements\">Promotions Manager</a>.</p> <p>The table below lists all the Marketing API calls grouped by resource.</p>
 *
 * The version of the OpenAPI document: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * This container defines a coded coupon promotion. It is required if the promotion type is CODED_COUPON.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:39:56.470009-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CouponConfiguration {
  public static final String SERIALIZED_NAME_COUPON_CODE = "couponCode";
  @SerializedName(SERIALIZED_NAME_COUPON_CODE)
  private String couponCode;

  public static final String SERIALIZED_NAME_COUPON_TYPE = "couponType";
  @SerializedName(SERIALIZED_NAME_COUPON_TYPE)
  private String couponType;

  public static final String SERIALIZED_NAME_MAX_COUPON_REDEMPTION_PER_USER = "maxCouponRedemptionPerUser";
  @SerializedName(SERIALIZED_NAME_MAX_COUPON_REDEMPTION_PER_USER)
  private Integer maxCouponRedemptionPerUser;

  public CouponConfiguration() {
  }

  public CouponConfiguration couponCode(String couponCode) {
    this.couponCode = couponCode;
    return this;
  }

  /**
   * A unique code that buyers can use during checkout to receive a discount. The code must be unique across eBay. &lt;br&gt;&lt;br&gt;The code must be from 8-15 alphanumeric characters and can contain no more than two dashes ( - ).&lt;br&gt;&lt;br&gt;This is required when the promotion type is CODED_COUPON.
   * @return couponCode
   */
  @javax.annotation.Nullable
  public String getCouponCode() {
    return couponCode;
  }

  public void setCouponCode(String couponCode) {
    this.couponCode = couponCode;
  }


  public CouponConfiguration couponType(String couponType) {
    this.couponType = couponType;
    return this;
  }

  /**
   * This indicates the type of Coded Coupon promotion, and is required when the promotion type is &lt;b&gt;CODED_COUPON&lt;/b&gt;.&lt;br&gt;&lt;br&gt;Supported types:&lt;ul&gt;&lt;li&gt;&lt;b&gt;PRIVATE_SINGLE_SELLER_COUPON:&lt;/b&gt; Anyone can use and share the coupon code, but it isn&#39;t posted on eBay.&lt;/li&gt;&lt;li&gt;&lt;b&gt;PUBLIC_SINGLE_SELLER_COUPON:&lt;/b&gt; Anyone can find the coupon code on eBay and use it.&lt;/li&gt;&lt;/ul&gt; For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/marketing/types/sme:CouponTypeEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return couponType
   */
  @javax.annotation.Nullable
  public String getCouponType() {
    return couponType;
  }

  public void setCouponType(String couponType) {
    this.couponType = couponType;
  }


  public CouponConfiguration maxCouponRedemptionPerUser(Integer maxCouponRedemptionPerUser) {
    this.maxCouponRedemptionPerUser = maxCouponRedemptionPerUser;
    return this;
  }

  /**
   * This sets the limit on the number of times a buyer can use this coupon. The range of values is 1-10. If no value is provided, a buyer can use the coupon an unlimited number of times.
   * @return maxCouponRedemptionPerUser
   */
  @javax.annotation.Nullable
  public Integer getMaxCouponRedemptionPerUser() {
    return maxCouponRedemptionPerUser;
  }

  public void setMaxCouponRedemptionPerUser(Integer maxCouponRedemptionPerUser) {
    this.maxCouponRedemptionPerUser = maxCouponRedemptionPerUser;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CouponConfiguration couponConfiguration = (CouponConfiguration) o;
    return Objects.equals(this.couponCode, couponConfiguration.couponCode) &&
        Objects.equals(this.couponType, couponConfiguration.couponType) &&
        Objects.equals(this.maxCouponRedemptionPerUser, couponConfiguration.maxCouponRedemptionPerUser);
  }

  @Override
  public int hashCode() {
    return Objects.hash(couponCode, couponType, maxCouponRedemptionPerUser);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CouponConfiguration {\n");
    sb.append("    couponCode: ").append(toIndentedString(couponCode)).append("\n");
    sb.append("    couponType: ").append(toIndentedString(couponType)).append("\n");
    sb.append("    maxCouponRedemptionPerUser: ").append(toIndentedString(maxCouponRedemptionPerUser)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("couponCode");
    openapiFields.add("couponType");
    openapiFields.add("maxCouponRedemptionPerUser");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CouponConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CouponConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CouponConfiguration is not found in the empty JSON string", CouponConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CouponConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CouponConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("couponCode") != null && !jsonObj.get("couponCode").isJsonNull()) && !jsonObj.get("couponCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `couponCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("couponCode").toString()));
      }
      if ((jsonObj.get("couponType") != null && !jsonObj.get("couponType").isJsonNull()) && !jsonObj.get("couponType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `couponType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("couponType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CouponConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CouponConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CouponConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CouponConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<CouponConfiguration>() {
           @Override
           public void write(JsonWriter out, CouponConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CouponConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CouponConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CouponConfiguration
   * @throws IOException if the JSON string is invalid with respect to CouponConfiguration
   */
  public static CouponConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CouponConfiguration.class);
  }

  /**
   * Convert an instance of CouponConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

