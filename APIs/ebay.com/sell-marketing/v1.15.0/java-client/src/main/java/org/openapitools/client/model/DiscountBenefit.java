/*
 * Marketing API
 * <p>The <i>Marketing API </i> offers two platforms that sellers can use to promote and advertise their products:</p> <ul><li><b>Promoted Listings</b> is an eBay ad service that lets sellers set up <i>ad campaigns </i> for the products they want to promote. eBay displays the ads in search results and in other marketing modules as <b>SPONSORED</b> listings. If an item in a Promoted Listings campaign sells, the seller is assessed a Promoted Listings fee, which is a seller-specified percentage applied to the sales price. For complete details, refer to the <a href=\"/api-docs/sell/static/marketing/pl-landing.html\">Promoted Listings playbook</a>.</li><li><b>Promotions Manager</b> gives sellers a way to offer discounts on specific items as a way to attract buyers to their inventory. Sellers can set up discounts (such as \"20% off\" and other types of offers) on specific items or on an entire customer order. To further attract buyers, eBay prominently displays promotion <i>teasers</i> throughout buyer flows. For complete details, see <a href=\"/api-docs/sell/static/marketing/promotions-manager.html\">Promotions Manager</a>.</li></ul>  <p><b>Marketing reports</b>, on both the Promoted Listings and Promotions Manager platforms, give sellers information that shows the effectiveness of their marketing strategies. The data gives sellers the ability to review and fine tune their marketing efforts.</p> <p class=\"tablenote\"><b>Important!</b> Sellers must have an active eBay Store subscription, and they must accept the <b>Terms and Conditions</b> before they can make requests to these APIs in the Production environment. There are also site-specific listings requirements and restrictions associated with these marketing tools, as listed in the \"requirements and restrictions\" sections for <a href=\"/api-docs/sell/marketing/static/overview.html#PL-requirements\">Promoted Listings</a> and <a href=\"/api-docs/sell/marketing/static/overview.html#PM-requirements\">Promotions Manager</a>.</p> <p>The table below lists all the Marketing API calls grouped by resource.</p>
 *
 * The version of the OpenAPI document: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Amount;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * This container defines the promotional discount as either a monetary amount or a percentage of the sales price.  &lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Important!:&lt;/b&gt; You must populate one and only one of the fields in this container: &lt;ul&gt;&lt;li&gt;&lt;b&gt;amountOffItem&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;amountOffOrder&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;percentageOffItem&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;percentageOffOrder&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;  &lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Tip:&lt;/b&gt; Refer to &lt;a href&#x3D;\&quot;/api-docs/sell/static/marketing/pm-specifying-discounts.html\&quot;&gt;Configuring discounts for threshold promotions&lt;/a&gt; for information and examples on how to combine &lt;b&gt;discountBenefit&lt;/b&gt; and &lt;b&gt;discountSpecification&lt;/b&gt; values to create different types of promotions.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:39:56.470009-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DiscountBenefit {
  public static final String SERIALIZED_NAME_AMOUNT_OFF_ITEM = "amountOffItem";
  @SerializedName(SERIALIZED_NAME_AMOUNT_OFF_ITEM)
  private Amount amountOffItem;

  public static final String SERIALIZED_NAME_AMOUNT_OFF_ORDER = "amountOffOrder";
  @SerializedName(SERIALIZED_NAME_AMOUNT_OFF_ORDER)
  private Amount amountOffOrder;

  public static final String SERIALIZED_NAME_PERCENTAGE_OFF_ITEM = "percentageOffItem";
  @SerializedName(SERIALIZED_NAME_PERCENTAGE_OFF_ITEM)
  private String percentageOffItem;

  public static final String SERIALIZED_NAME_PERCENTAGE_OFF_ORDER = "percentageOffOrder";
  @SerializedName(SERIALIZED_NAME_PERCENTAGE_OFF_ORDER)
  private String percentageOffOrder;

  public DiscountBenefit() {
  }

  public DiscountBenefit amountOffItem(Amount amountOffItem) {
    this.amountOffItem = amountOffItem;
    return this;
  }

  /**
   * Get amountOffItem
   * @return amountOffItem
   */
  @javax.annotation.Nullable
  public Amount getAmountOffItem() {
    return amountOffItem;
  }

  public void setAmountOffItem(Amount amountOffItem) {
    this.amountOffItem = amountOffItem;
  }


  public DiscountBenefit amountOffOrder(Amount amountOffOrder) {
    this.amountOffOrder = amountOffOrder;
    return this;
  }

  /**
   * Get amountOffOrder
   * @return amountOffOrder
   */
  @javax.annotation.Nullable
  public Amount getAmountOffOrder() {
    return amountOffOrder;
  }

  public void setAmountOffOrder(Amount amountOffOrder) {
    this.amountOffOrder = amountOffOrder;
  }


  public DiscountBenefit percentageOffItem(String percentageOffItem) {
    this.percentageOffItem = percentageOffItem;
    return this;
  }

  /**
   * The percentage applied to the sales price that is discounted off the promoted item (or items) when the promotion criteria is met.  &lt;br&gt;&lt;br&gt;Valid integer values for percentage off: &amp;nbsp;&amp;nbsp;&lt;b&gt;Min:&lt;/b&gt; &lt;code&gt;5&lt;/code&gt; &amp;nbsp;&amp;nbsp;&lt;b&gt;Max:&lt;/b&gt; &lt;code&gt;80&lt;/code&gt;
   * @return percentageOffItem
   */
  @javax.annotation.Nullable
  public String getPercentageOffItem() {
    return percentageOffItem;
  }

  public void setPercentageOffItem(String percentageOffItem) {
    this.percentageOffItem = percentageOffItem;
  }


  public DiscountBenefit percentageOffOrder(String percentageOffOrder) {
    this.percentageOffOrder = percentageOffOrder;
    return this;
  }

  /**
   * Used for threshold promotions, this is the percentage of the order price that is discounted off the order when the promotion criteria is met. This field is not value for markdown promotions.  &lt;br&gt;&lt;br&gt;Valid integer values for ORDER_DISCOUNT promotions: &amp;nbsp;&amp;nbsp;&lt;b&gt;Min:&lt;/b&gt; &lt;code&gt;5&lt;/code&gt; &amp;nbsp;&amp;nbsp;&lt;b&gt;Max:&lt;/b&gt; &lt;code&gt;80&lt;/code&gt;  &lt;br&gt;&lt;br&gt;For VOLUME_DISCOUNT promotions: Must be set to &lt;code&gt;0&lt;/code&gt; for the first discount rule.
   * @return percentageOffOrder
   */
  @javax.annotation.Nullable
  public String getPercentageOffOrder() {
    return percentageOffOrder;
  }

  public void setPercentageOffOrder(String percentageOffOrder) {
    this.percentageOffOrder = percentageOffOrder;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DiscountBenefit discountBenefit = (DiscountBenefit) o;
    return Objects.equals(this.amountOffItem, discountBenefit.amountOffItem) &&
        Objects.equals(this.amountOffOrder, discountBenefit.amountOffOrder) &&
        Objects.equals(this.percentageOffItem, discountBenefit.percentageOffItem) &&
        Objects.equals(this.percentageOffOrder, discountBenefit.percentageOffOrder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amountOffItem, amountOffOrder, percentageOffItem, percentageOffOrder);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DiscountBenefit {\n");
    sb.append("    amountOffItem: ").append(toIndentedString(amountOffItem)).append("\n");
    sb.append("    amountOffOrder: ").append(toIndentedString(amountOffOrder)).append("\n");
    sb.append("    percentageOffItem: ").append(toIndentedString(percentageOffItem)).append("\n");
    sb.append("    percentageOffOrder: ").append(toIndentedString(percentageOffOrder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amountOffItem");
    openapiFields.add("amountOffOrder");
    openapiFields.add("percentageOffItem");
    openapiFields.add("percentageOffOrder");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DiscountBenefit
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DiscountBenefit.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DiscountBenefit is not found in the empty JSON string", DiscountBenefit.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DiscountBenefit.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DiscountBenefit` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `amountOffItem`
      if (jsonObj.get("amountOffItem") != null && !jsonObj.get("amountOffItem").isJsonNull()) {
        Amount.validateJsonElement(jsonObj.get("amountOffItem"));
      }
      // validate the optional field `amountOffOrder`
      if (jsonObj.get("amountOffOrder") != null && !jsonObj.get("amountOffOrder").isJsonNull()) {
        Amount.validateJsonElement(jsonObj.get("amountOffOrder"));
      }
      if ((jsonObj.get("percentageOffItem") != null && !jsonObj.get("percentageOffItem").isJsonNull()) && !jsonObj.get("percentageOffItem").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `percentageOffItem` to be a primitive type in the JSON string but got `%s`", jsonObj.get("percentageOffItem").toString()));
      }
      if ((jsonObj.get("percentageOffOrder") != null && !jsonObj.get("percentageOffOrder").isJsonNull()) && !jsonObj.get("percentageOffOrder").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `percentageOffOrder` to be a primitive type in the JSON string but got `%s`", jsonObj.get("percentageOffOrder").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DiscountBenefit.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DiscountBenefit' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DiscountBenefit> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DiscountBenefit.class));

       return (TypeAdapter<T>) new TypeAdapter<DiscountBenefit>() {
           @Override
           public void write(JsonWriter out, DiscountBenefit value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DiscountBenefit read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DiscountBenefit given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DiscountBenefit
   * @throws IOException if the JSON string is invalid with respect to DiscountBenefit
   */
  public static DiscountBenefit fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DiscountBenefit.class);
  }

  /**
   * Convert an instance of DiscountBenefit to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

