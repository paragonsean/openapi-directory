/*
 * Marketing API
 * <p>The <i>Marketing API </i> offers two platforms that sellers can use to promote and advertise their products:</p> <ul><li><b>Promoted Listings</b> is an eBay ad service that lets sellers set up <i>ad campaigns </i> for the products they want to promote. eBay displays the ads in search results and in other marketing modules as <b>SPONSORED</b> listings. If an item in a Promoted Listings campaign sells, the seller is assessed a Promoted Listings fee, which is a seller-specified percentage applied to the sales price. For complete details, refer to the <a href=\"/api-docs/sell/static/marketing/pl-landing.html\">Promoted Listings playbook</a>.</li><li><b>Promotions Manager</b> gives sellers a way to offer discounts on specific items as a way to attract buyers to their inventory. Sellers can set up discounts (such as \"20% off\" and other types of offers) on specific items or on an entire customer order. To further attract buyers, eBay prominently displays promotion <i>teasers</i> throughout buyer flows. For complete details, see <a href=\"/api-docs/sell/static/marketing/promotions-manager.html\">Promotions Manager</a>.</li></ul>  <p><b>Marketing reports</b>, on both the Promoted Listings and Promotions Manager platforms, give sellers information that shows the effectiveness of their marketing strategies. The data gives sellers the ability to review and fine tune their marketing efforts.</p> <p class=\"tablenote\"><b>Important!</b> Sellers must have an active eBay Store subscription, and they must accept the <b>Terms and Conditions</b> before they can make requests to these APIs in the Production environment. There are also site-specific listings requirements and restrictions associated with these marketing tools, as listed in the \"requirements and restrictions\" sections for <a href=\"/api-docs/sell/marketing/static/overview.html#PL-requirements\">Promoted Listings</a> and <a href=\"/api-docs/sell/marketing/static/overview.html#PM-requirements\">Promotions Manager</a>.</p> <p>The table below lists all the Marketing API calls grouped by resource.</p>
 *
 * The version of the OpenAPI document: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * This type defines the fields needed to delete an ad by its inventory reference ID.  You must always supply both &lt;b&gt;inventory_reference_id&lt;/b&gt; and &lt;b&gt;inventory_reference_type&lt;/b&gt;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:39:56.470009-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DeleteAdsByInventoryReferenceRequest {
  public static final String SERIALIZED_NAME_INVENTORY_REFERENCE_ID = "inventoryReferenceId";
  @SerializedName(SERIALIZED_NAME_INVENTORY_REFERENCE_ID)
  private String inventoryReferenceId;

  public static final String SERIALIZED_NAME_INVENTORY_REFERENCE_TYPE = "inventoryReferenceType";
  @SerializedName(SERIALIZED_NAME_INVENTORY_REFERENCE_TYPE)
  private String inventoryReferenceType;

  public DeleteAdsByInventoryReferenceRequest() {
  }

  public DeleteAdsByInventoryReferenceRequest inventoryReferenceId(String inventoryReferenceId) {
    this.inventoryReferenceId = inventoryReferenceId;
    return this;
  }

  /**
   * The inventory reference ID is a seller-defined SKU value for a single-item listing, or a seller-defined identifier for an inventory item group. Both of these values are defined when using the Inventory API, and an inventory item group is used to create a multiple-variation listing.
   * @return inventoryReferenceId
   */
  @javax.annotation.Nullable
  public String getInventoryReferenceId() {
    return inventoryReferenceId;
  }

  public void setInventoryReferenceId(String inventoryReferenceId) {
    this.inventoryReferenceId = inventoryReferenceId;
  }


  public DeleteAdsByInventoryReferenceRequest inventoryReferenceType(String inventoryReferenceType) {
    this.inventoryReferenceType = inventoryReferenceType;
    return this;
  }

  /**
   * The enumeration value passed into this field indicates the type of value used for the corresponding &lt;b&gt;inventoryReferenceId&lt;/b&gt; value. The enumeration value used here will either be &lt;code&gt;INVENTORY_ITEM&lt;/code&gt; (to delete the ad for a single SKU listing) or &lt;code&gt;INVENTORY_ITEM_GROUP&lt;/code&gt; (to delete the ad for a multiple-variation listing). For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/marketing/types/pls:InventoryReferenceTypeEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return inventoryReferenceType
   */
  @javax.annotation.Nullable
  public String getInventoryReferenceType() {
    return inventoryReferenceType;
  }

  public void setInventoryReferenceType(String inventoryReferenceType) {
    this.inventoryReferenceType = inventoryReferenceType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteAdsByInventoryReferenceRequest deleteAdsByInventoryReferenceRequest = (DeleteAdsByInventoryReferenceRequest) o;
    return Objects.equals(this.inventoryReferenceId, deleteAdsByInventoryReferenceRequest.inventoryReferenceId) &&
        Objects.equals(this.inventoryReferenceType, deleteAdsByInventoryReferenceRequest.inventoryReferenceType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inventoryReferenceId, inventoryReferenceType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteAdsByInventoryReferenceRequest {\n");
    sb.append("    inventoryReferenceId: ").append(toIndentedString(inventoryReferenceId)).append("\n");
    sb.append("    inventoryReferenceType: ").append(toIndentedString(inventoryReferenceType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("inventoryReferenceId");
    openapiFields.add("inventoryReferenceType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DeleteAdsByInventoryReferenceRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DeleteAdsByInventoryReferenceRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeleteAdsByInventoryReferenceRequest is not found in the empty JSON string", DeleteAdsByInventoryReferenceRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DeleteAdsByInventoryReferenceRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeleteAdsByInventoryReferenceRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("inventoryReferenceId") != null && !jsonObj.get("inventoryReferenceId").isJsonNull()) && !jsonObj.get("inventoryReferenceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inventoryReferenceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inventoryReferenceId").toString()));
      }
      if ((jsonObj.get("inventoryReferenceType") != null && !jsonObj.get("inventoryReferenceType").isJsonNull()) && !jsonObj.get("inventoryReferenceType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inventoryReferenceType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inventoryReferenceType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeleteAdsByInventoryReferenceRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeleteAdsByInventoryReferenceRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeleteAdsByInventoryReferenceRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeleteAdsByInventoryReferenceRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<DeleteAdsByInventoryReferenceRequest>() {
           @Override
           public void write(JsonWriter out, DeleteAdsByInventoryReferenceRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeleteAdsByInventoryReferenceRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DeleteAdsByInventoryReferenceRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DeleteAdsByInventoryReferenceRequest
   * @throws IOException if the JSON string is invalid with respect to DeleteAdsByInventoryReferenceRequest
   */
  public static DeleteAdsByInventoryReferenceRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeleteAdsByInventoryReferenceRequest.class);
  }

  /**
   * Convert an instance of DeleteAdsByInventoryReferenceRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

