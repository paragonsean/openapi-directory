/*
 * Marketing API
 * <p>The <i>Marketing API </i> offers two platforms that sellers can use to promote and advertise their products:</p> <ul><li><b>Promoted Listings</b> is an eBay ad service that lets sellers set up <i>ad campaigns </i> for the products they want to promote. eBay displays the ads in search results and in other marketing modules as <b>SPONSORED</b> listings. If an item in a Promoted Listings campaign sells, the seller is assessed a Promoted Listings fee, which is a seller-specified percentage applied to the sales price. For complete details, refer to the <a href=\"/api-docs/sell/static/marketing/pl-landing.html\">Promoted Listings playbook</a>.</li><li><b>Promotions Manager</b> gives sellers a way to offer discounts on specific items as a way to attract buyers to their inventory. Sellers can set up discounts (such as \"20% off\" and other types of offers) on specific items or on an entire customer order. To further attract buyers, eBay prominently displays promotion <i>teasers</i> throughout buyer flows. For complete details, see <a href=\"/api-docs/sell/static/marketing/promotions-manager.html\">Promotions Manager</a>.</li></ul>  <p><b>Marketing reports</b>, on both the Promoted Listings and Promotions Manager platforms, give sellers information that shows the effectiveness of their marketing strategies. The data gives sellers the ability to review and fine tune their marketing efforts.</p> <p class=\"tablenote\"><b>Important!</b> Sellers must have an active eBay Store subscription, and they must accept the <b>Terms and Conditions</b> before they can make requests to these APIs in the Production environment. There are also site-specific listings requirements and restrictions associated with these marketing tools, as listed in the \"requirements and restrictions\" sections for <a href=\"/api-docs/sell/marketing/static/overview.html#PL-requirements\">Promoted Listings</a> and <a href=\"/api-docs/sell/marketing/static/overview.html#PM-requirements\">Promotions Manager</a>.</p> <p>The table below lists all the Marketing API calls grouped by resource.</p>
 *
 * The version of the OpenAPI document: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * This type defines the fields that describe a promotion. This includes all the information about a promotion except for the listings that are a part of the promotion.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:39:56.470009-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PromotionDetail {
  public static final String SERIALIZED_NAME_COUPON_CODE = "couponCode";
  @SerializedName(SERIALIZED_NAME_COUPON_CODE)
  private String couponCode;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  public static final String SERIALIZED_NAME_MARKETPLACE_ID = "marketplaceId";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_ID)
  private String marketplaceId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private String priority;

  public static final String SERIALIZED_NAME_PROMOTION_HREF = "promotionHref";
  @SerializedName(SERIALIZED_NAME_PROMOTION_HREF)
  private String promotionHref;

  public static final String SERIALIZED_NAME_PROMOTION_ID = "promotionId";
  @SerializedName(SERIALIZED_NAME_PROMOTION_ID)
  private String promotionId;

  public static final String SERIALIZED_NAME_PROMOTION_IMAGE_URL = "promotionImageUrl";
  @SerializedName(SERIALIZED_NAME_PROMOTION_IMAGE_URL)
  private String promotionImageUrl;

  public static final String SERIALIZED_NAME_PROMOTION_STATUS = "promotionStatus";
  @SerializedName(SERIALIZED_NAME_PROMOTION_STATUS)
  private String promotionStatus;

  public static final String SERIALIZED_NAME_PROMOTION_TYPE = "promotionType";
  @SerializedName(SERIALIZED_NAME_PROMOTION_TYPE)
  private String promotionType;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;

  public PromotionDetail() {
  }

  public PromotionDetail couponCode(String couponCode) {
    this.couponCode = couponCode;
    return this;
  }

  /**
   * A unique code that buyers can use during checkout to receive a discount. The code must be unique across eBay.
   * @return couponCode
   */
  @javax.annotation.Nullable
  public String getCouponCode() {
    return couponCode;
  }

  public void setCouponCode(String couponCode) {
    this.couponCode = couponCode;
  }


  public PromotionDetail description(String description) {
    this.description = description;
    return this;
  }

  /**
   * This is the seller-defined \&quot;tag line\&quot; for the offer, such as \&quot;Save on designer shoes.\&quot; Tag lines appear under the \&quot;offer-type text\&quot; that is generated for a promotion and displayed under the offer tile that is shown on the seller&#39;s &lt;b&gt;All Offers&lt;/b&gt; page and on the promotion&#39;s event page.  &lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; Offer-type text is a teaser that&#39;s presented throughout the buyer&#39;s journey through the sales flow and is generated by eBay. This text is not editable by the seller&amp;mdash;it&#39;s derived from the settings in the &lt;b&gt;discountRules&lt;/b&gt; and &lt;b&gt;discountSpecification&lt;/b&gt; fields&amp;mdash;and can be, for example, \&quot;Extra 20% off when you buy 3+\&quot;.&lt;/p&gt;  &lt;br&gt;&lt;b&gt;Maximum length:&lt;/b&gt; 50 &lt;br&gt;&lt;br&gt;&lt;i&gt;Required if&lt;/i&gt; you are configuring ORDER_DISCOUNT or MARKDOWN_SALE promotions (and not valid for VOLUME_DISCOUNT promotions).
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public PromotionDetail endDate(String endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * The date and time the promotion ends in UTC format (&lt;code&gt;yyyy-MM-ddThh:mm:ssZ&lt;/code&gt;). For display purposes, convert this time into the local time of the seller.
   * @return endDate
   */
  @javax.annotation.Nullable
  public String getEndDate() {
    return endDate;
  }

  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }


  public PromotionDetail marketplaceId(String marketplaceId) {
    this.marketplaceId = marketplaceId;
    return this;
  }

  /**
   * The eBay marketplace ID of the site where the promotion is hosted. Threshold promotions are supported on a select set of marketplaces while markdown promotions are supported on all eBay marketplaces. &lt;p&gt;&lt;b&gt;Valid values for threshold promotions are as follows:&lt;/b&gt;&lt;/p&gt;  &lt;ul class&#x3D;\&quot;compact\&quot;&gt;&lt;li&gt;&lt;code&gt;EBAY_AU&lt;/code&gt; &#x3D; Australia&lt;/li&gt; &lt;li&gt;&lt;code&gt;EBAY_DE&lt;/code&gt; &#x3D; Germany&lt;/li&gt; &lt;li&gt;&lt;code&gt;EBAY_ES&lt;/code&gt; &#x3D; Spain&lt;/li&gt; &lt;li&gt;&lt;code&gt;EBAY_FR&lt;/code&gt; &#x3D; France&lt;/li&gt; &lt;li&gt;&lt;code&gt;EBAY_GB&lt;/code&gt; &#x3D; Great Britain&lt;/li&gt; &lt;li&gt;&lt;code&gt;EBAY_IT&lt;/code&gt; &#x3D; Italy&lt;/li&gt; &lt;li&gt;&lt;code&gt;EBAY_US&lt;/code&gt; &#x3D; United States&lt;/li&gt;&lt;/ul&gt; For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/marketing/types/ba:MarketplaceIdEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return marketplaceId
   */
  @javax.annotation.Nullable
  public String getMarketplaceId() {
    return marketplaceId;
  }

  public void setMarketplaceId(String marketplaceId) {
    this.marketplaceId = marketplaceId;
  }


  public PromotionDetail name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The seller-defined name or \&quot;title\&quot; of the promotion, such as \&quot;Buy 1 Get 1\&quot;, that the seller can use to identify a promotion. This label is not displayed in end-user flows.  &lt;br&gt;&lt;br&gt;&lt;b&gt;Maximum length:&lt;/b&gt; 90
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public PromotionDetail priority(String priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Applicable for only &lt;b&gt;ORDER_DISCOUNT&lt;/b&gt; promotions, this field indicates the precedence of the promotion, which is used to determine the position of a promotion on the seller&#39;s &lt;b&gt;All Offers&lt;/b&gt; page. If an item is associated with multiple promotions, the promotion with the higher priority takes precedence. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionPriorityEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return priority
   */
  @javax.annotation.Nullable
  public String getPriority() {
    return priority;
  }

  public void setPriority(String priority) {
    this.priority = priority;
  }


  public PromotionDetail promotionHref(String promotionHref) {
    this.promotionHref = promotionHref;
    return this;
  }

  /**
   * The URI of the promotion details.
   * @return promotionHref
   */
  @javax.annotation.Nullable
  public String getPromotionHref() {
    return promotionHref;
  }

  public void setPromotionHref(String promotionHref) {
    this.promotionHref = promotionHref;
  }


  public PromotionDetail promotionId(String promotionId) {
    this.promotionId = promotionId;
    return this;
  }

  /**
   * A unique eBay-assigned ID for the promotion that&#39;s generated when the promotion is created.
   * @return promotionId
   */
  @javax.annotation.Nullable
  public String getPromotionId() {
    return promotionId;
  }

  public void setPromotionId(String promotionId) {
    this.promotionId = promotionId;
  }


  public PromotionDetail promotionImageUrl(String promotionImageUrl) {
    this.promotionImageUrl = promotionImageUrl;
    return this;
  }

  /**
   * Required for CODED_COUPON, MARKDOWN_SALE, and ORDER_DISCOUNT promotions, and not applicable for &lt;b&gt;VOLUME_DISCOUNT&lt;/b&gt; promotions, this field is a URL that points to an image for the promotion. This image is displayed on the seller&#39;s &lt;b&gt;All Offers&lt;/b&gt; page. The URL must point to either JPEG or PNG image and it must be a minimum of 500x500 pixels in dimension and cannot exceed 12Mb in size.
   * @return promotionImageUrl
   */
  @javax.annotation.Nullable
  public String getPromotionImageUrl() {
    return promotionImageUrl;
  }

  public void setPromotionImageUrl(String promotionImageUrl) {
    this.promotionImageUrl = promotionImageUrl;
  }


  public PromotionDetail promotionStatus(String promotionStatus) {
    this.promotionStatus = promotionStatus;
    return this;
  }

  /**
   * The current status of the promotion. When creating a new promotion, you must set this value to either &lt;code&gt;DRAFT&lt;/code&gt; or &lt;code&gt;SCHEDULED&lt;/code&gt;. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionStatusEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return promotionStatus
   */
  @javax.annotation.Nullable
  public String getPromotionStatus() {
    return promotionStatus;
  }

  public void setPromotionStatus(String promotionStatus) {
    this.promotionStatus = promotionStatus;
  }


  public PromotionDetail promotionType(String promotionType) {
    this.promotionType = promotionType;
    return this;
  }

  /**
   * Indicates type of the promotion, either &lt;code&gt;CODED_COUPON&lt;/code&gt;, &lt;code&gt;MARKDOWN_SALE&lt;/code&gt;, &lt;code&gt;ORDER_DISCOUNT&lt;/code&gt;, or &lt;code&gt;VOLUME_DISCOUNT&lt;/code&gt;. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionTypeEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return promotionType
   */
  @javax.annotation.Nullable
  public String getPromotionType() {
    return promotionType;
  }

  public void setPromotionType(String promotionType) {
    this.promotionType = promotionType;
  }


  public PromotionDetail startDate(String startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * The date and time the promotion starts in UTC format (&lt;code&gt;yyyy-MM-ddThh:mm:ssZ&lt;/code&gt;). For display purposes, convert this time into the local time of the seller.
   * @return startDate
   */
  @javax.annotation.Nullable
  public String getStartDate() {
    return startDate;
  }

  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PromotionDetail promotionDetail = (PromotionDetail) o;
    return Objects.equals(this.couponCode, promotionDetail.couponCode) &&
        Objects.equals(this.description, promotionDetail.description) &&
        Objects.equals(this.endDate, promotionDetail.endDate) &&
        Objects.equals(this.marketplaceId, promotionDetail.marketplaceId) &&
        Objects.equals(this.name, promotionDetail.name) &&
        Objects.equals(this.priority, promotionDetail.priority) &&
        Objects.equals(this.promotionHref, promotionDetail.promotionHref) &&
        Objects.equals(this.promotionId, promotionDetail.promotionId) &&
        Objects.equals(this.promotionImageUrl, promotionDetail.promotionImageUrl) &&
        Objects.equals(this.promotionStatus, promotionDetail.promotionStatus) &&
        Objects.equals(this.promotionType, promotionDetail.promotionType) &&
        Objects.equals(this.startDate, promotionDetail.startDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(couponCode, description, endDate, marketplaceId, name, priority, promotionHref, promotionId, promotionImageUrl, promotionStatus, promotionType, startDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PromotionDetail {\n");
    sb.append("    couponCode: ").append(toIndentedString(couponCode)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    marketplaceId: ").append(toIndentedString(marketplaceId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    promotionHref: ").append(toIndentedString(promotionHref)).append("\n");
    sb.append("    promotionId: ").append(toIndentedString(promotionId)).append("\n");
    sb.append("    promotionImageUrl: ").append(toIndentedString(promotionImageUrl)).append("\n");
    sb.append("    promotionStatus: ").append(toIndentedString(promotionStatus)).append("\n");
    sb.append("    promotionType: ").append(toIndentedString(promotionType)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("couponCode");
    openapiFields.add("description");
    openapiFields.add("endDate");
    openapiFields.add("marketplaceId");
    openapiFields.add("name");
    openapiFields.add("priority");
    openapiFields.add("promotionHref");
    openapiFields.add("promotionId");
    openapiFields.add("promotionImageUrl");
    openapiFields.add("promotionStatus");
    openapiFields.add("promotionType");
    openapiFields.add("startDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PromotionDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PromotionDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PromotionDetail is not found in the empty JSON string", PromotionDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PromotionDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PromotionDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("couponCode") != null && !jsonObj.get("couponCode").isJsonNull()) && !jsonObj.get("couponCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `couponCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("couponCode").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("endDate") != null && !jsonObj.get("endDate").isJsonNull()) && !jsonObj.get("endDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endDate").toString()));
      }
      if ((jsonObj.get("marketplaceId") != null && !jsonObj.get("marketplaceId").isJsonNull()) && !jsonObj.get("marketplaceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketplaceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketplaceId").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("priority") != null && !jsonObj.get("priority").isJsonNull()) && !jsonObj.get("priority").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priority` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priority").toString()));
      }
      if ((jsonObj.get("promotionHref") != null && !jsonObj.get("promotionHref").isJsonNull()) && !jsonObj.get("promotionHref").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `promotionHref` to be a primitive type in the JSON string but got `%s`", jsonObj.get("promotionHref").toString()));
      }
      if ((jsonObj.get("promotionId") != null && !jsonObj.get("promotionId").isJsonNull()) && !jsonObj.get("promotionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `promotionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("promotionId").toString()));
      }
      if ((jsonObj.get("promotionImageUrl") != null && !jsonObj.get("promotionImageUrl").isJsonNull()) && !jsonObj.get("promotionImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `promotionImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("promotionImageUrl").toString()));
      }
      if ((jsonObj.get("promotionStatus") != null && !jsonObj.get("promotionStatus").isJsonNull()) && !jsonObj.get("promotionStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `promotionStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("promotionStatus").toString()));
      }
      if ((jsonObj.get("promotionType") != null && !jsonObj.get("promotionType").isJsonNull()) && !jsonObj.get("promotionType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `promotionType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("promotionType").toString()));
      }
      if ((jsonObj.get("startDate") != null && !jsonObj.get("startDate").isJsonNull()) && !jsonObj.get("startDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startDate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PromotionDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PromotionDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PromotionDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PromotionDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<PromotionDetail>() {
           @Override
           public void write(JsonWriter out, PromotionDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PromotionDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PromotionDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PromotionDetail
   * @throws IOException if the JSON string is invalid with respect to PromotionDetail
   */
  public static PromotionDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PromotionDetail.class);
  }

  /**
   * Convert an instance of PromotionDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

