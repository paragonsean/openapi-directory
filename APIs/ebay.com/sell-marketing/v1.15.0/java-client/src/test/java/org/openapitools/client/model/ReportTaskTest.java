/*
 * Marketing API
 * <p>The <i>Marketing API </i> offers two platforms that sellers can use to promote and advertise their products:</p> <ul><li><b>Promoted Listings</b> is an eBay ad service that lets sellers set up <i>ad campaigns </i> for the products they want to promote. eBay displays the ads in search results and in other marketing modules as <b>SPONSORED</b> listings. If an item in a Promoted Listings campaign sells, the seller is assessed a Promoted Listings fee, which is a seller-specified percentage applied to the sales price. For complete details, refer to the <a href=\"/api-docs/sell/static/marketing/pl-landing.html\">Promoted Listings playbook</a>.</li><li><b>Promotions Manager</b> gives sellers a way to offer discounts on specific items as a way to attract buyers to their inventory. Sellers can set up discounts (such as \"20% off\" and other types of offers) on specific items or on an entire customer order. To further attract buyers, eBay prominently displays promotion <i>teasers</i> throughout buyer flows. For complete details, see <a href=\"/api-docs/sell/static/marketing/promotions-manager.html\">Promotions Manager</a>.</li></ul>  <p><b>Marketing reports</b>, on both the Promoted Listings and Promotions Manager platforms, give sellers information that shows the effectiveness of their marketing strategies. The data gives sellers the ability to review and fine tune their marketing efforts.</p> <p class=\"tablenote\"><b>Important!</b> Sellers must have an active eBay Store subscription, and they must accept the <b>Terms and Conditions</b> before they can make requests to these APIs in the Production environment. There are also site-specific listings requirements and restrictions associated with these marketing tools, as listed in the \"requirements and restrictions\" sections for <a href=\"/api-docs/sell/marketing/static/overview.html#PL-requirements\">Promoted Listings</a> and <a href=\"/api-docs/sell/marketing/static/overview.html#PM-requirements\">Promotions Manager</a>.</p> <p>The table below lists all the Marketing API calls grouped by resource.</p>
 *
 * The version of the OpenAPI document: v1.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Dimension;
import org.openapitools.client.model.InventoryReference;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ReportTask
 */
public class ReportTaskTest {
    private final ReportTask model = new ReportTask();

    /**
     * Model tests for ReportTask
     */
    @Test
    public void testReportTask() {
        // TODO: test ReportTask
    }

    /**
     * Test the property 'campaignIds'
     */
    @Test
    public void campaignIdsTest() {
        // TODO: test campaignIds
    }

    /**
     * Test the property 'dateFrom'
     */
    @Test
    public void dateFromTest() {
        // TODO: test dateFrom
    }

    /**
     * Test the property 'dateTo'
     */
    @Test
    public void dateToTest() {
        // TODO: test dateTo
    }

    /**
     * Test the property 'dimensions'
     */
    @Test
    public void dimensionsTest() {
        // TODO: test dimensions
    }

    /**
     * Test the property 'fundingModels'
     */
    @Test
    public void fundingModelsTest() {
        // TODO: test fundingModels
    }

    /**
     * Test the property 'inventoryReferences'
     */
    @Test
    public void inventoryReferencesTest() {
        // TODO: test inventoryReferences
    }

    /**
     * Test the property 'listingIds'
     */
    @Test
    public void listingIdsTest() {
        // TODO: test listingIds
    }

    /**
     * Test the property 'marketplaceId'
     */
    @Test
    public void marketplaceIdTest() {
        // TODO: test marketplaceId
    }

    /**
     * Test the property 'metricKeys'
     */
    @Test
    public void metricKeysTest() {
        // TODO: test metricKeys
    }

    /**
     * Test the property 'reportExpirationDate'
     */
    @Test
    public void reportExpirationDateTest() {
        // TODO: test reportExpirationDate
    }

    /**
     * Test the property 'reportFormat'
     */
    @Test
    public void reportFormatTest() {
        // TODO: test reportFormat
    }

    /**
     * Test the property 'reportHref'
     */
    @Test
    public void reportHrefTest() {
        // TODO: test reportHref
    }

    /**
     * Test the property 'reportId'
     */
    @Test
    public void reportIdTest() {
        // TODO: test reportId
    }

    /**
     * Test the property 'reportName'
     */
    @Test
    public void reportNameTest() {
        // TODO: test reportName
    }

    /**
     * Test the property 'reportTaskCompletionDate'
     */
    @Test
    public void reportTaskCompletionDateTest() {
        // TODO: test reportTaskCompletionDate
    }

    /**
     * Test the property 'reportTaskCreationDate'
     */
    @Test
    public void reportTaskCreationDateTest() {
        // TODO: test reportTaskCreationDate
    }

    /**
     * Test the property 'reportTaskExpectedCompletionDate'
     */
    @Test
    public void reportTaskExpectedCompletionDateTest() {
        // TODO: test reportTaskExpectedCompletionDate
    }

    /**
     * Test the property 'reportTaskId'
     */
    @Test
    public void reportTaskIdTest() {
        // TODO: test reportTaskId
    }

    /**
     * Test the property 'reportTaskStatus'
     */
    @Test
    public void reportTaskStatusTest() {
        // TODO: test reportTaskStatus
    }

    /**
     * Test the property 'reportTaskStatusMessage'
     */
    @Test
    public void reportTaskStatusMessageTest() {
        // TODO: test reportTaskStatusMessage
    }

    /**
     * Test the property 'reportType'
     */
    @Test
    public void reportTypeTest() {
        // TODO: test reportType
    }

}
