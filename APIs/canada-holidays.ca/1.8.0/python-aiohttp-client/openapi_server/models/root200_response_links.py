# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.root200_response_links_holidays import Root200ResponseLinksHolidays
from openapi_server.models.root200_response_links_provinces import Root200ResponseLinksProvinces
from openapi_server.models.root200_response_links_self import Root200ResponseLinksSelf
from openapi_server.models.root200_response_links_spec import Root200ResponseLinksSpec
from openapi_server import util


class Root200ResponseLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, holidays: Root200ResponseLinksHolidays=None, provinces: Root200ResponseLinksProvinces=None, _self: Root200ResponseLinksSelf=None, spec: Root200ResponseLinksSpec=None):
        """Root200ResponseLinks - a model defined in OpenAPI

        :param holidays: The holidays of this Root200ResponseLinks.
        :param provinces: The provinces of this Root200ResponseLinks.
        :param _self: The _self of this Root200ResponseLinks.
        :param spec: The spec of this Root200ResponseLinks.
        """
        self.openapi_types = {
            'holidays': Root200ResponseLinksHolidays,
            'provinces': Root200ResponseLinksProvinces,
            '_self': Root200ResponseLinksSelf,
            'spec': Root200ResponseLinksSpec
        }

        self.attribute_map = {
            'holidays': 'holidays',
            'provinces': 'provinces',
            '_self': 'self',
            'spec': 'spec'
        }

        self._holidays = holidays
        self._provinces = provinces
        self.__self = _self
        self._spec = spec

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Root200ResponseLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Root_200_response__links of this Root200ResponseLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def holidays(self):
        """Gets the holidays of this Root200ResponseLinks.


        :return: The holidays of this Root200ResponseLinks.
        :rtype: Root200ResponseLinksHolidays
        """
        return self._holidays

    @holidays.setter
    def holidays(self, holidays):
        """Sets the holidays of this Root200ResponseLinks.


        :param holidays: The holidays of this Root200ResponseLinks.
        :type holidays: Root200ResponseLinksHolidays
        """

        self._holidays = holidays

    @property
    def provinces(self):
        """Gets the provinces of this Root200ResponseLinks.


        :return: The provinces of this Root200ResponseLinks.
        :rtype: Root200ResponseLinksProvinces
        """
        return self._provinces

    @provinces.setter
    def provinces(self, provinces):
        """Sets the provinces of this Root200ResponseLinks.


        :param provinces: The provinces of this Root200ResponseLinks.
        :type provinces: Root200ResponseLinksProvinces
        """

        self._provinces = provinces

    @property
    def _self(self):
        """Gets the _self of this Root200ResponseLinks.


        :return: The _self of this Root200ResponseLinks.
        :rtype: Root200ResponseLinksSelf
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this Root200ResponseLinks.


        :param _self: The _self of this Root200ResponseLinks.
        :type _self: Root200ResponseLinksSelf
        """

        self.__self = _self

    @property
    def spec(self):
        """Gets the spec of this Root200ResponseLinks.


        :return: The spec of this Root200ResponseLinks.
        :rtype: Root200ResponseLinksSpec
        """
        return self._spec

    @spec.setter
    def spec(self, spec):
        """Sets the spec of this Root200ResponseLinks.


        :param spec: The spec of this Root200ResponseLinks.
        :type spec: Root200ResponseLinksSpec
        """

        self._spec = spec
