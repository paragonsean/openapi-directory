/**
 * Canada Holidays API
 * This API lists all 31 public holidays for all 13 provinces and territories in Canada, including federal holidays.
 *
 * The version of the OpenAPI document: 1.8.0
 * Contact: paul@pcraig3.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Holiday200Response from '../model/Holiday200Response';
import Holiday400Response from '../model/Holiday400Response';
import Holidays200Response from '../model/Holidays200Response';

/**
* Holidays service.
* @module api/HolidaysApi
* @version 1.8.0
*/
export default class HolidaysApi {

    /**
    * Constructs a new HolidaysApi. 
    * @alias module:api/HolidaysApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the holiday operation.
     * @callback module:api/HolidaysApi~holidayCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Holiday200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a holiday by id
     * Returns one Canadian statutory holiday by integer id. Returns a 404 response for invalid ids.
     * @param {Number} holidayId Primary key for a holiday
     * @param {Object} opts Optional parameters
     * @param {Number} [year = 2023)] A calendar year
     * @param {module:model/String} [optional = 'false')] A boolean parameter. If false or 0 (default), will return provinces for which this is a legislated holiday. If true or 1, will return provinces which optionally celebrate this holiday.
     * @param {module:api/HolidaysApi~holidayCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Holiday200Response}
     */
    holiday(holidayId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'holidayId' is set
      if (holidayId === undefined || holidayId === null) {
        throw new Error("Missing the required parameter 'holidayId' when calling holiday");
      }

      let pathParams = {
        'holidayId': holidayId
      };
      let queryParams = {
        'year': opts['year'],
        'optional': opts['optional']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Holiday200Response;
      return this.apiClient.callApi(
        '/api/v1/holidays/{holidayId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the holidays operation.
     * @callback module:api/HolidaysApi~holidaysCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Holidays200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all holidays
     * Returns Canadian public holidays. Each holiday lists the regions that observe it.
     * @param {Object} opts Optional parameters
     * @param {Number} [year = 2023)] A calendar year
     * @param {module:model/String} [federal] A boolean parameter. If true or 1, will return only federal holidays. If false or 0, will return no federal holidays.
     * @param {module:model/String} [optional = 'false')] A boolean parameter. If false or 0 (default), will return only legislated holidays. If true or 1, will return optional holidays from Alberta and BC.
     * @param {module:api/HolidaysApi~holidaysCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Holidays200Response}
     */
    holidays(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'year': opts['year'],
        'federal': opts['federal'],
        'optional': opts['optional']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Holidays200Response;
      return this.apiClient.callApi(
        '/api/v1/holidays', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
