/**
 * Canada Holidays API
 * This API lists all 31 public holidays for all 13 provinces and territories in Canada, including federal holidays.
 *
 * The version of the OpenAPI document: 1.8.0
 * Contact: paul@pcraig3.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Holiday400Response from '../model/Holiday400Response';
import Province200Response from '../model/Province200Response';
import Provinces200Response from '../model/Provinces200Response';

/**
* Provinces service.
* @module api/ProvincesApi
* @version 1.8.0
*/
export default class ProvincesApi {

    /**
    * Constructs a new ProvincesApi. 
    * @alias module:api/ProvincesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the province operation.
     * @callback module:api/ProvincesApi~provinceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Province200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a province or territory by abbreviation
     * Returns a Canadian province or territory with its associated holidays. Returns a 404 response for invalid abbreviations.
     * @param {module:model/String} provinceId A Canadian province abbreviation
     * @param {Object} opts Optional parameters
     * @param {Number} [year = 2023)] A calendar year
     * @param {module:model/String} [optional = 'false')] A boolean parameter (AB and BC only). If false or 0 (default), will return only legislated holidays. If true or 1, will return optional holidays from Alberta and BC.
     * @param {module:api/ProvincesApi~provinceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Province200Response}
     */
    province(provinceId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'provinceId' is set
      if (provinceId === undefined || provinceId === null) {
        throw new Error("Missing the required parameter 'provinceId' when calling province");
      }

      let pathParams = {
        'provinceId': provinceId
      };
      let queryParams = {
        'year': opts['year'],
        'optional': opts['optional']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Province200Response;
      return this.apiClient.callApi(
        '/api/v1/provinces/{provinceId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the provinces operation.
     * @callback module:api/ProvincesApi~provincesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Provinces200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all provinces
     * Returns provinces and territories in Canada. Each province or territory lists its associated holidays.
     * @param {Object} opts Optional parameters
     * @param {Number} [year = 2023)] A calendar year
     * @param {module:model/String} [optional = 'false')] A boolean parameter. If false or 0 (default), will return only legislated holidays. If true or 1, will return optional holidays from Alberta and BC.
     * @param {module:api/ProvincesApi~provincesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Provinces200Response}
     */
    provinces(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'year': opts['year'],
        'optional': opts['optional']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Provinces200Response;
      return this.apiClient.callApi(
        '/api/v1/provinces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
