/**
 * Canada Holidays API
 * This API lists all 31 public holidays for all 13 provinces and territories in Canada, including federal holidays.
 *
 * The version of the OpenAPI document: 1.8.0
 * Contact: paul@pcraig3.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHolidays_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHolidays_200_response::OAIHolidays_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHolidays_200_response::OAIHolidays_200_response() {
    this->initializeModel();
}

OAIHolidays_200_response::~OAIHolidays_200_response() {}

void OAIHolidays_200_response::initializeModel() {

    m_holidays_isSet = false;
    m_holidays_isValid = false;
}

void OAIHolidays_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHolidays_200_response::fromJsonObject(QJsonObject json) {

    m_holidays_isValid = ::OpenAPI::fromJsonValue(m_holidays, json[QString("holidays")]);
    m_holidays_isSet = !json[QString("holidays")].isNull() && m_holidays_isValid;
}

QString OAIHolidays_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHolidays_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_holidays.size() > 0) {
        obj.insert(QString("holidays"), ::OpenAPI::toJsonValue(m_holidays));
    }
    return obj;
}

QList<OAIHoliday> OAIHolidays_200_response::getHolidays() const {
    return m_holidays;
}
void OAIHolidays_200_response::setHolidays(const QList<OAIHoliday> &holidays) {
    m_holidays = holidays;
    m_holidays_isSet = true;
}

bool OAIHolidays_200_response::is_holidays_Set() const{
    return m_holidays_isSet;
}

bool OAIHolidays_200_response::is_holidays_Valid() const{
    return m_holidays_isValid;
}

bool OAIHolidays_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_holidays.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHolidays_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
