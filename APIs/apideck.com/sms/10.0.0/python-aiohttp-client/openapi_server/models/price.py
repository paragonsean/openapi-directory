# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server import util


class Price(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency: Currency=None, per_unit: str=None, total_amount: str=None):
        """Price - a model defined in OpenAPI

        :param currency: The currency of this Price.
        :param per_unit: The per_unit of this Price.
        :param total_amount: The total_amount of this Price.
        """
        self.openapi_types = {
            'currency': Currency,
            'per_unit': str,
            'total_amount': str
        }

        self.attribute_map = {
            'currency': 'currency',
            'per_unit': 'per_unit',
            'total_amount': 'total_amount'
        }

        self._currency = currency
        self._per_unit = per_unit
        self._total_amount = total_amount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Price':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Price of this Price.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency(self):
        """Gets the currency of this Price.


        :return: The currency of this Price.
        :rtype: Currency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this Price.


        :param currency: The currency of this Price.
        :type currency: Currency
        """

        self._currency = currency

    @property
    def per_unit(self):
        """Gets the per_unit of this Price.

        

        :return: The per_unit of this Price.
        :rtype: str
        """
        return self._per_unit

    @per_unit.setter
    def per_unit(self, per_unit):
        """Sets the per_unit of this Price.

        

        :param per_unit: The per_unit of this Price.
        :type per_unit: str
        """

        self._per_unit = per_unit

    @property
    def total_amount(self):
        """Gets the total_amount of this Price.

        

        :return: The total_amount of this Price.
        :rtype: str
        """
        return self._total_amount

    @total_amount.setter
    def total_amount(self, total_amount):
        """Sets the total_amount of this Price.

        

        :param total_amount: The total_amount of this Price.
        :type total_amount: str
        """

        self._total_amount = total_amount
