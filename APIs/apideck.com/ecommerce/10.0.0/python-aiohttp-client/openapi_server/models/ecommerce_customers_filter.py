# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EcommerceCustomersFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, phone_number: str=None):
        """EcommerceCustomersFilter - a model defined in OpenAPI

        :param email: The email of this EcommerceCustomersFilter.
        :param phone_number: The phone_number of this EcommerceCustomersFilter.
        """
        self.openapi_types = {
            'email': str,
            'phone_number': str
        }

        self.attribute_map = {
            'email': 'email',
            'phone_number': 'phone_number'
        }

        self._email = email
        self._phone_number = phone_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EcommerceCustomersFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EcommerceCustomersFilter of this EcommerceCustomersFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this EcommerceCustomersFilter.

        Customer email address to filter on

        :return: The email of this EcommerceCustomersFilter.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this EcommerceCustomersFilter.

        Customer email address to filter on

        :param email: The email of this EcommerceCustomersFilter.
        :type email: str
        """

        self._email = email

    @property
    def phone_number(self):
        """Gets the phone_number of this EcommerceCustomersFilter.

        Customer phone number to filter on

        :return: The phone_number of this EcommerceCustomersFilter.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this EcommerceCustomersFilter.

        Customer phone number to filter on

        :param phone_number: The phone_number of this EcommerceCustomersFilter.
        :type phone_number: str
        """

        self._phone_number = phone_number
