# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.email import Email
from openapi_server.models.phone_number import PhoneNumber
from openapi_server import util


class LinkedEcommerceCustomer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, company_name: str=None, emails: List[Email]=None, first_name: str=None, id: str=None, last_name: str=None, name: str=None, phone_numbers: List[PhoneNumber]=None):
        """LinkedEcommerceCustomer - a model defined in OpenAPI

        :param company_name: The company_name of this LinkedEcommerceCustomer.
        :param emails: The emails of this LinkedEcommerceCustomer.
        :param first_name: The first_name of this LinkedEcommerceCustomer.
        :param id: The id of this LinkedEcommerceCustomer.
        :param last_name: The last_name of this LinkedEcommerceCustomer.
        :param name: The name of this LinkedEcommerceCustomer.
        :param phone_numbers: The phone_numbers of this LinkedEcommerceCustomer.
        """
        self.openapi_types = {
            'company_name': str,
            'emails': List[Email],
            'first_name': str,
            'id': str,
            'last_name': str,
            'name': str,
            'phone_numbers': List[PhoneNumber]
        }

        self.attribute_map = {
            'company_name': 'company_name',
            'emails': 'emails',
            'first_name': 'first_name',
            'id': 'id',
            'last_name': 'last_name',
            'name': 'name',
            'phone_numbers': 'phone_numbers'
        }

        self._company_name = company_name
        self._emails = emails
        self._first_name = first_name
        self._id = id
        self._last_name = last_name
        self._name = name
        self._phone_numbers = phone_numbers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LinkedEcommerceCustomer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LinkedEcommerceCustomer of this LinkedEcommerceCustomer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company_name(self):
        """Gets the company_name of this LinkedEcommerceCustomer.

        Company name of the customer

        :return: The company_name of this LinkedEcommerceCustomer.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this LinkedEcommerceCustomer.

        Company name of the customer

        :param company_name: The company_name of this LinkedEcommerceCustomer.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def emails(self):
        """Gets the emails of this LinkedEcommerceCustomer.


        :return: The emails of this LinkedEcommerceCustomer.
        :rtype: List[Email]
        """
        return self._emails

    @emails.setter
    def emails(self, emails):
        """Sets the emails of this LinkedEcommerceCustomer.


        :param emails: The emails of this LinkedEcommerceCustomer.
        :type emails: List[Email]
        """

        self._emails = emails

    @property
    def first_name(self):
        """Gets the first_name of this LinkedEcommerceCustomer.

        First name of the customer

        :return: The first_name of this LinkedEcommerceCustomer.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this LinkedEcommerceCustomer.

        First name of the customer

        :param first_name: The first_name of this LinkedEcommerceCustomer.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def id(self):
        """Gets the id of this LinkedEcommerceCustomer.

        The ID of the customer this entity is linked to.

        :return: The id of this LinkedEcommerceCustomer.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LinkedEcommerceCustomer.

        The ID of the customer this entity is linked to.

        :param id: The id of this LinkedEcommerceCustomer.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def last_name(self):
        """Gets the last_name of this LinkedEcommerceCustomer.

        Last name of the customer

        :return: The last_name of this LinkedEcommerceCustomer.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this LinkedEcommerceCustomer.

        Last name of the customer

        :param last_name: The last_name of this LinkedEcommerceCustomer.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def name(self):
        """Gets the name of this LinkedEcommerceCustomer.

        Full name of the customer

        :return: The name of this LinkedEcommerceCustomer.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LinkedEcommerceCustomer.

        Full name of the customer

        :param name: The name of this LinkedEcommerceCustomer.
        :type name: str
        """

        self._name = name

    @property
    def phone_numbers(self):
        """Gets the phone_numbers of this LinkedEcommerceCustomer.


        :return: The phone_numbers of this LinkedEcommerceCustomer.
        :rtype: List[PhoneNumber]
        """
        return self._phone_numbers

    @phone_numbers.setter
    def phone_numbers(self, phone_numbers):
        """Sets the phone_numbers of this LinkedEcommerceCustomer.


        :param phone_numbers: The phone_numbers of this LinkedEcommerceCustomer.
        :type phone_numbers: List[PhoneNumber]
        """

        self._phone_numbers = phone_numbers
