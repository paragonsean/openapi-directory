# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order_fulfillments_inner_pickup_details_curbside_pickup_details import OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails
from openapi_server.models.order_fulfillments_inner_pickup_details_recipient import OrderFulfillmentsInnerPickupDetailsRecipient
from openapi_server import util


class OrderFulfillmentsInnerPickupDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accepted_at: datetime=None, auto_complete_duration: str=None, cancel_reason: str=None, canceled_at: datetime=None, curbside_pickup_details: OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails=None, expired_at: datetime=None, expires_at: datetime=None, is_curbside_pickup: bool=None, note: str=None, picked_up_at: datetime=None, pickup_at: datetime=None, pickup_window_duration: str=None, placed_at: datetime=None, prep_time_duration: str=None, ready_at: datetime=None, recipient: OrderFulfillmentsInnerPickupDetailsRecipient=None, rejected_at: datetime=None, schedule_type: str=None):
        """OrderFulfillmentsInnerPickupDetails - a model defined in OpenAPI

        :param accepted_at: The accepted_at of this OrderFulfillmentsInnerPickupDetails.
        :param auto_complete_duration: The auto_complete_duration of this OrderFulfillmentsInnerPickupDetails.
        :param cancel_reason: The cancel_reason of this OrderFulfillmentsInnerPickupDetails.
        :param canceled_at: The canceled_at of this OrderFulfillmentsInnerPickupDetails.
        :param curbside_pickup_details: The curbside_pickup_details of this OrderFulfillmentsInnerPickupDetails.
        :param expired_at: The expired_at of this OrderFulfillmentsInnerPickupDetails.
        :param expires_at: The expires_at of this OrderFulfillmentsInnerPickupDetails.
        :param is_curbside_pickup: The is_curbside_pickup of this OrderFulfillmentsInnerPickupDetails.
        :param note: The note of this OrderFulfillmentsInnerPickupDetails.
        :param picked_up_at: The picked_up_at of this OrderFulfillmentsInnerPickupDetails.
        :param pickup_at: The pickup_at of this OrderFulfillmentsInnerPickupDetails.
        :param pickup_window_duration: The pickup_window_duration of this OrderFulfillmentsInnerPickupDetails.
        :param placed_at: The placed_at of this OrderFulfillmentsInnerPickupDetails.
        :param prep_time_duration: The prep_time_duration of this OrderFulfillmentsInnerPickupDetails.
        :param ready_at: The ready_at of this OrderFulfillmentsInnerPickupDetails.
        :param recipient: The recipient of this OrderFulfillmentsInnerPickupDetails.
        :param rejected_at: The rejected_at of this OrderFulfillmentsInnerPickupDetails.
        :param schedule_type: The schedule_type of this OrderFulfillmentsInnerPickupDetails.
        """
        self.openapi_types = {
            'accepted_at': datetime,
            'auto_complete_duration': str,
            'cancel_reason': str,
            'canceled_at': datetime,
            'curbside_pickup_details': OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails,
            'expired_at': datetime,
            'expires_at': datetime,
            'is_curbside_pickup': bool,
            'note': str,
            'picked_up_at': datetime,
            'pickup_at': datetime,
            'pickup_window_duration': str,
            'placed_at': datetime,
            'prep_time_duration': str,
            'ready_at': datetime,
            'recipient': OrderFulfillmentsInnerPickupDetailsRecipient,
            'rejected_at': datetime,
            'schedule_type': str
        }

        self.attribute_map = {
            'accepted_at': 'accepted_at',
            'auto_complete_duration': 'auto_complete_duration',
            'cancel_reason': 'cancel_reason',
            'canceled_at': 'canceled_at',
            'curbside_pickup_details': 'curbside_pickup_details',
            'expired_at': 'expired_at',
            'expires_at': 'expires_at',
            'is_curbside_pickup': 'is_curbside_pickup',
            'note': 'note',
            'picked_up_at': 'picked_up_at',
            'pickup_at': 'pickup_at',
            'pickup_window_duration': 'pickup_window_duration',
            'placed_at': 'placed_at',
            'prep_time_duration': 'prep_time_duration',
            'ready_at': 'ready_at',
            'recipient': 'recipient',
            'rejected_at': 'rejected_at',
            'schedule_type': 'schedule_type'
        }

        self._accepted_at = accepted_at
        self._auto_complete_duration = auto_complete_duration
        self._cancel_reason = cancel_reason
        self._canceled_at = canceled_at
        self._curbside_pickup_details = curbside_pickup_details
        self._expired_at = expired_at
        self._expires_at = expires_at
        self._is_curbside_pickup = is_curbside_pickup
        self._note = note
        self._picked_up_at = picked_up_at
        self._pickup_at = pickup_at
        self._pickup_window_duration = pickup_window_duration
        self._placed_at = placed_at
        self._prep_time_duration = prep_time_duration
        self._ready_at = ready_at
        self._recipient = recipient
        self._rejected_at = rejected_at
        self._schedule_type = schedule_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderFulfillmentsInnerPickupDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Order_fulfillments_inner_pickup_details of this OrderFulfillmentsInnerPickupDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accepted_at(self):
        """Gets the accepted_at of this OrderFulfillmentsInnerPickupDetails.


        :return: The accepted_at of this OrderFulfillmentsInnerPickupDetails.
        :rtype: datetime
        """
        return self._accepted_at

    @accepted_at.setter
    def accepted_at(self, accepted_at):
        """Sets the accepted_at of this OrderFulfillmentsInnerPickupDetails.


        :param accepted_at: The accepted_at of this OrderFulfillmentsInnerPickupDetails.
        :type accepted_at: datetime
        """

        self._accepted_at = accepted_at

    @property
    def auto_complete_duration(self):
        """Gets the auto_complete_duration of this OrderFulfillmentsInnerPickupDetails.

        The duration of time after which an open and accepted pickup fulfillment is automatically moved to the COMPLETED state. The duration must be in RFC 3339 format (for example, 'P1W3D').

        :return: The auto_complete_duration of this OrderFulfillmentsInnerPickupDetails.
        :rtype: str
        """
        return self._auto_complete_duration

    @auto_complete_duration.setter
    def auto_complete_duration(self, auto_complete_duration):
        """Sets the auto_complete_duration of this OrderFulfillmentsInnerPickupDetails.

        The duration of time after which an open and accepted pickup fulfillment is automatically moved to the COMPLETED state. The duration must be in RFC 3339 format (for example, 'P1W3D').

        :param auto_complete_duration: The auto_complete_duration of this OrderFulfillmentsInnerPickupDetails.
        :type auto_complete_duration: str
        """

        self._auto_complete_duration = auto_complete_duration

    @property
    def cancel_reason(self):
        """Gets the cancel_reason of this OrderFulfillmentsInnerPickupDetails.

        A description of why the pickup was canceled.

        :return: The cancel_reason of this OrderFulfillmentsInnerPickupDetails.
        :rtype: str
        """
        return self._cancel_reason

    @cancel_reason.setter
    def cancel_reason(self, cancel_reason):
        """Sets the cancel_reason of this OrderFulfillmentsInnerPickupDetails.

        A description of why the pickup was canceled.

        :param cancel_reason: The cancel_reason of this OrderFulfillmentsInnerPickupDetails.
        :type cancel_reason: str
        """

        self._cancel_reason = cancel_reason

    @property
    def canceled_at(self):
        """Gets the canceled_at of this OrderFulfillmentsInnerPickupDetails.

        Indicating when the fulfillment was canceled. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").

        :return: The canceled_at of this OrderFulfillmentsInnerPickupDetails.
        :rtype: datetime
        """
        return self._canceled_at

    @canceled_at.setter
    def canceled_at(self, canceled_at):
        """Sets the canceled_at of this OrderFulfillmentsInnerPickupDetails.

        Indicating when the fulfillment was canceled. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").

        :param canceled_at: The canceled_at of this OrderFulfillmentsInnerPickupDetails.
        :type canceled_at: datetime
        """

        self._canceled_at = canceled_at

    @property
    def curbside_pickup_details(self):
        """Gets the curbside_pickup_details of this OrderFulfillmentsInnerPickupDetails.


        :return: The curbside_pickup_details of this OrderFulfillmentsInnerPickupDetails.
        :rtype: OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails
        """
        return self._curbside_pickup_details

    @curbside_pickup_details.setter
    def curbside_pickup_details(self, curbside_pickup_details):
        """Sets the curbside_pickup_details of this OrderFulfillmentsInnerPickupDetails.


        :param curbside_pickup_details: The curbside_pickup_details of this OrderFulfillmentsInnerPickupDetails.
        :type curbside_pickup_details: OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails
        """

        self._curbside_pickup_details = curbside_pickup_details

    @property
    def expired_at(self):
        """Gets the expired_at of this OrderFulfillmentsInnerPickupDetails.

        Indicating when the fulfillment expired. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").

        :return: The expired_at of this OrderFulfillmentsInnerPickupDetails.
        :rtype: datetime
        """
        return self._expired_at

    @expired_at.setter
    def expired_at(self, expired_at):
        """Sets the expired_at of this OrderFulfillmentsInnerPickupDetails.

        Indicating when the fulfillment expired. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").

        :param expired_at: The expired_at of this OrderFulfillmentsInnerPickupDetails.
        :type expired_at: datetime
        """

        self._expired_at = expired_at

    @property
    def expires_at(self):
        """Gets the expires_at of this OrderFulfillmentsInnerPickupDetails.

        Indicating when this fulfillment expires if it is not accepted. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\"). The expiration time can only be set up to 7 days in the future. If `expires_at` is not set, this pickup fulfillment is automatically accepted when  placed.

        :return: The expires_at of this OrderFulfillmentsInnerPickupDetails.
        :rtype: datetime
        """
        return self._expires_at

    @expires_at.setter
    def expires_at(self, expires_at):
        """Sets the expires_at of this OrderFulfillmentsInnerPickupDetails.

        Indicating when this fulfillment expires if it is not accepted. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\"). The expiration time can only be set up to 7 days in the future. If `expires_at` is not set, this pickup fulfillment is automatically accepted when  placed.

        :param expires_at: The expires_at of this OrderFulfillmentsInnerPickupDetails.
        :type expires_at: datetime
        """

        self._expires_at = expires_at

    @property
    def is_curbside_pickup(self):
        """Gets the is_curbside_pickup of this OrderFulfillmentsInnerPickupDetails.

        If set to `true`, indicates that this pickup order is for curbside pickup, not in-store pickup.

        :return: The is_curbside_pickup of this OrderFulfillmentsInnerPickupDetails.
        :rtype: bool
        """
        return self._is_curbside_pickup

    @is_curbside_pickup.setter
    def is_curbside_pickup(self, is_curbside_pickup):
        """Sets the is_curbside_pickup of this OrderFulfillmentsInnerPickupDetails.

        If set to `true`, indicates that this pickup order is for curbside pickup, not in-store pickup.

        :param is_curbside_pickup: The is_curbside_pickup of this OrderFulfillmentsInnerPickupDetails.
        :type is_curbside_pickup: bool
        """

        self._is_curbside_pickup = is_curbside_pickup

    @property
    def note(self):
        """Gets the note of this OrderFulfillmentsInnerPickupDetails.

        A note meant to provide additional instructions about the pickup fulfillment displayed in the Square Point of Sale application and set by the API.

        :return: The note of this OrderFulfillmentsInnerPickupDetails.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this OrderFulfillmentsInnerPickupDetails.

        A note meant to provide additional instructions about the pickup fulfillment displayed in the Square Point of Sale application and set by the API.

        :param note: The note of this OrderFulfillmentsInnerPickupDetails.
        :type note: str
        """

        self._note = note

    @property
    def picked_up_at(self):
        """Gets the picked_up_at of this OrderFulfillmentsInnerPickupDetails.

        Indicating when the fulfillment was picked up by the recipient. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").

        :return: The picked_up_at of this OrderFulfillmentsInnerPickupDetails.
        :rtype: datetime
        """
        return self._picked_up_at

    @picked_up_at.setter
    def picked_up_at(self, picked_up_at):
        """Sets the picked_up_at of this OrderFulfillmentsInnerPickupDetails.

        Indicating when the fulfillment was picked up by the recipient. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").

        :param picked_up_at: The picked_up_at of this OrderFulfillmentsInnerPickupDetails.
        :type picked_up_at: datetime
        """

        self._picked_up_at = picked_up_at

    @property
    def pickup_at(self):
        """Gets the pickup_at of this OrderFulfillmentsInnerPickupDetails.

        The timestamp that represents the start of the pickup window. Must be in RFC 3339 timestamp format, e.g.,  \"2016-09-04T23:59:33.123Z\".  For fulfillments with the schedule type `ASAP`, this is automatically set to the current time plus the expected duration to prepare the fulfillment.

        :return: The pickup_at of this OrderFulfillmentsInnerPickupDetails.
        :rtype: datetime
        """
        return self._pickup_at

    @pickup_at.setter
    def pickup_at(self, pickup_at):
        """Sets the pickup_at of this OrderFulfillmentsInnerPickupDetails.

        The timestamp that represents the start of the pickup window. Must be in RFC 3339 timestamp format, e.g.,  \"2016-09-04T23:59:33.123Z\".  For fulfillments with the schedule type `ASAP`, this is automatically set to the current time plus the expected duration to prepare the fulfillment.

        :param pickup_at: The pickup_at of this OrderFulfillmentsInnerPickupDetails.
        :type pickup_at: datetime
        """

        self._pickup_at = pickup_at

    @property
    def pickup_window_duration(self):
        """Gets the pickup_window_duration of this OrderFulfillmentsInnerPickupDetails.

        The window of time in which the order should be picked up after the `pickup_at` timestamp. Must be in RFC 3339 duration format, e.g., \"P1W3D\". Can be used as an informational guideline for merchants.

        :return: The pickup_window_duration of this OrderFulfillmentsInnerPickupDetails.
        :rtype: str
        """
        return self._pickup_window_duration

    @pickup_window_duration.setter
    def pickup_window_duration(self, pickup_window_duration):
        """Sets the pickup_window_duration of this OrderFulfillmentsInnerPickupDetails.

        The window of time in which the order should be picked up after the `pickup_at` timestamp. Must be in RFC 3339 duration format, e.g., \"P1W3D\". Can be used as an informational guideline for merchants.

        :param pickup_window_duration: The pickup_window_duration of this OrderFulfillmentsInnerPickupDetails.
        :type pickup_window_duration: str
        """

        self._pickup_window_duration = pickup_window_duration

    @property
    def placed_at(self):
        """Gets the placed_at of this OrderFulfillmentsInnerPickupDetails.

        Indicating when the fulfillment was placed. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").

        :return: The placed_at of this OrderFulfillmentsInnerPickupDetails.
        :rtype: datetime
        """
        return self._placed_at

    @placed_at.setter
    def placed_at(self, placed_at):
        """Sets the placed_at of this OrderFulfillmentsInnerPickupDetails.

        Indicating when the fulfillment was placed. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").

        :param placed_at: The placed_at of this OrderFulfillmentsInnerPickupDetails.
        :type placed_at: datetime
        """

        self._placed_at = placed_at

    @property
    def prep_time_duration(self):
        """Gets the prep_time_duration of this OrderFulfillmentsInnerPickupDetails.

        The duration of time it takes to prepare this fulfillment. The duration must be in RFC 3339 format (for example, \"P1W3D\").

        :return: The prep_time_duration of this OrderFulfillmentsInnerPickupDetails.
        :rtype: str
        """
        return self._prep_time_duration

    @prep_time_duration.setter
    def prep_time_duration(self, prep_time_duration):
        """Sets the prep_time_duration of this OrderFulfillmentsInnerPickupDetails.

        The duration of time it takes to prepare this fulfillment. The duration must be in RFC 3339 format (for example, \"P1W3D\").

        :param prep_time_duration: The prep_time_duration of this OrderFulfillmentsInnerPickupDetails.
        :type prep_time_duration: str
        """

        self._prep_time_duration = prep_time_duration

    @property
    def ready_at(self):
        """Gets the ready_at of this OrderFulfillmentsInnerPickupDetails.

        Indicating when the fulfillment is marked as ready for pickup. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").

        :return: The ready_at of this OrderFulfillmentsInnerPickupDetails.
        :rtype: datetime
        """
        return self._ready_at

    @ready_at.setter
    def ready_at(self, ready_at):
        """Sets the ready_at of this OrderFulfillmentsInnerPickupDetails.

        Indicating when the fulfillment is marked as ready for pickup. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").

        :param ready_at: The ready_at of this OrderFulfillmentsInnerPickupDetails.
        :type ready_at: datetime
        """

        self._ready_at = ready_at

    @property
    def recipient(self):
        """Gets the recipient of this OrderFulfillmentsInnerPickupDetails.


        :return: The recipient of this OrderFulfillmentsInnerPickupDetails.
        :rtype: OrderFulfillmentsInnerPickupDetailsRecipient
        """
        return self._recipient

    @recipient.setter
    def recipient(self, recipient):
        """Sets the recipient of this OrderFulfillmentsInnerPickupDetails.


        :param recipient: The recipient of this OrderFulfillmentsInnerPickupDetails.
        :type recipient: OrderFulfillmentsInnerPickupDetailsRecipient
        """

        self._recipient = recipient

    @property
    def rejected_at(self):
        """Gets the rejected_at of this OrderFulfillmentsInnerPickupDetails.

        Indicating when the fulfillment was rejected. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").

        :return: The rejected_at of this OrderFulfillmentsInnerPickupDetails.
        :rtype: datetime
        """
        return self._rejected_at

    @rejected_at.setter
    def rejected_at(self, rejected_at):
        """Sets the rejected_at of this OrderFulfillmentsInnerPickupDetails.

        Indicating when the fulfillment was rejected. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").

        :param rejected_at: The rejected_at of this OrderFulfillmentsInnerPickupDetails.
        :type rejected_at: datetime
        """

        self._rejected_at = rejected_at

    @property
    def schedule_type(self):
        """Gets the schedule_type of this OrderFulfillmentsInnerPickupDetails.

        The schedule type of the pickup fulfillment.

        :return: The schedule_type of this OrderFulfillmentsInnerPickupDetails.
        :rtype: str
        """
        return self._schedule_type

    @schedule_type.setter
    def schedule_type(self, schedule_type):
        """Sets the schedule_type of this OrderFulfillmentsInnerPickupDetails.

        The schedule type of the pickup fulfillment.

        :param schedule_type: The schedule_type of this OrderFulfillmentsInnerPickupDetails.
        :type schedule_type: str
        """
        allowed_values = ["scheduled"]  # noqa: E501
        if schedule_type not in allowed_values:
            raise ValueError(
                "Invalid value for `schedule_type` ({0}), must be one of {1}"
                .format(schedule_type, allowed_values)
            )

        self._schedule_type = schedule_type
