# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server import util


class OrderLineItemsInnerModifiersInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alternate_name: str=None, amount: int=None, currency: Currency=None, id: str=None, modifier_group_id: str=None, name: str=None):
        """OrderLineItemsInnerModifiersInner - a model defined in OpenAPI

        :param alternate_name: The alternate_name of this OrderLineItemsInnerModifiersInner.
        :param amount: The amount of this OrderLineItemsInnerModifiersInner.
        :param currency: The currency of this OrderLineItemsInnerModifiersInner.
        :param id: The id of this OrderLineItemsInnerModifiersInner.
        :param modifier_group_id: The modifier_group_id of this OrderLineItemsInnerModifiersInner.
        :param name: The name of this OrderLineItemsInnerModifiersInner.
        """
        self.openapi_types = {
            'alternate_name': str,
            'amount': int,
            'currency': Currency,
            'id': str,
            'modifier_group_id': str,
            'name': str
        }

        self.attribute_map = {
            'alternate_name': 'alternate_name',
            'amount': 'amount',
            'currency': 'currency',
            'id': 'id',
            'modifier_group_id': 'modifier_group_id',
            'name': 'name'
        }

        self._alternate_name = alternate_name
        self._amount = amount
        self._currency = currency
        self._id = id
        self._modifier_group_id = modifier_group_id
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderLineItemsInnerModifiersInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Order_line_items_inner_modifiers_inner of this OrderLineItemsInnerModifiersInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alternate_name(self):
        """Gets the alternate_name of this OrderLineItemsInnerModifiersInner.


        :return: The alternate_name of this OrderLineItemsInnerModifiersInner.
        :rtype: str
        """
        return self._alternate_name

    @alternate_name.setter
    def alternate_name(self, alternate_name):
        """Sets the alternate_name of this OrderLineItemsInnerModifiersInner.


        :param alternate_name: The alternate_name of this OrderLineItemsInnerModifiersInner.
        :type alternate_name: str
        """

        self._alternate_name = alternate_name

    @property
    def amount(self):
        """Gets the amount of this OrderLineItemsInnerModifiersInner.


        :return: The amount of this OrderLineItemsInnerModifiersInner.
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this OrderLineItemsInnerModifiersInner.


        :param amount: The amount of this OrderLineItemsInnerModifiersInner.
        :type amount: int
        """

        self._amount = amount

    @property
    def currency(self):
        """Gets the currency of this OrderLineItemsInnerModifiersInner.


        :return: The currency of this OrderLineItemsInnerModifiersInner.
        :rtype: Currency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this OrderLineItemsInnerModifiersInner.


        :param currency: The currency of this OrderLineItemsInnerModifiersInner.
        :type currency: Currency
        """

        self._currency = currency

    @property
    def id(self):
        """Gets the id of this OrderLineItemsInnerModifiersInner.


        :return: The id of this OrderLineItemsInnerModifiersInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrderLineItemsInnerModifiersInner.


        :param id: The id of this OrderLineItemsInnerModifiersInner.
        :type id: str
        """

        self._id = id

    @property
    def modifier_group_id(self):
        """Gets the modifier_group_id of this OrderLineItemsInnerModifiersInner.


        :return: The modifier_group_id of this OrderLineItemsInnerModifiersInner.
        :rtype: str
        """
        return self._modifier_group_id

    @modifier_group_id.setter
    def modifier_group_id(self, modifier_group_id):
        """Sets the modifier_group_id of this OrderLineItemsInnerModifiersInner.


        :param modifier_group_id: The modifier_group_id of this OrderLineItemsInnerModifiersInner.
        :type modifier_group_id: str
        """

        self._modifier_group_id = modifier_group_id

    @property
    def name(self):
        """Gets the name of this OrderLineItemsInnerModifiersInner.


        :return: The name of this OrderLineItemsInnerModifiersInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this OrderLineItemsInnerModifiersInner.


        :param name: The name of this OrderLineItemsInnerModifiersInner.
        :type name: str
        """

        self._name = name
