# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server import util


class OrderPaymentsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: int=None, currency: Currency=None, id: str=None):
        """OrderPaymentsInner - a model defined in OpenAPI

        :param amount: The amount of this OrderPaymentsInner.
        :param currency: The currency of this OrderPaymentsInner.
        :param id: The id of this OrderPaymentsInner.
        """
        self.openapi_types = {
            'amount': int,
            'currency': Currency,
            'id': str
        }

        self.attribute_map = {
            'amount': 'amount',
            'currency': 'currency',
            'id': 'id'
        }

        self._amount = amount
        self._currency = currency
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderPaymentsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Order_payments_inner of this OrderPaymentsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this OrderPaymentsInner.


        :return: The amount of this OrderPaymentsInner.
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this OrderPaymentsInner.


        :param amount: The amount of this OrderPaymentsInner.
        :type amount: int
        """

        self._amount = amount

    @property
    def currency(self):
        """Gets the currency of this OrderPaymentsInner.


        :return: The currency of this OrderPaymentsInner.
        :rtype: Currency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this OrderPaymentsInner.


        :param currency: The currency of this OrderPaymentsInner.
        :type currency: Currency
        """

        self._currency = currency

    @property
    def id(self):
        """Gets the id of this OrderPaymentsInner.

        A unique identifier for an object.

        :return: The id of this OrderPaymentsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrderPaymentsInner.

        A unique identifier for an object.

        :param id: The id of this OrderPaymentsInner.
        :type id: str
        """

        self._id = id
