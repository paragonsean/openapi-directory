# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server import util


class OrderLineItemsInnerAppliedDiscountsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: int=None, currency: Currency=None, discount_id: str=None, id: str=None):
        """OrderLineItemsInnerAppliedDiscountsInner - a model defined in OpenAPI

        :param amount: The amount of this OrderLineItemsInnerAppliedDiscountsInner.
        :param currency: The currency of this OrderLineItemsInnerAppliedDiscountsInner.
        :param discount_id: The discount_id of this OrderLineItemsInnerAppliedDiscountsInner.
        :param id: The id of this OrderLineItemsInnerAppliedDiscountsInner.
        """
        self.openapi_types = {
            'amount': int,
            'currency': Currency,
            'discount_id': str,
            'id': str
        }

        self.attribute_map = {
            'amount': 'amount',
            'currency': 'currency',
            'discount_id': 'discount_id',
            'id': 'id'
        }

        self._amount = amount
        self._currency = currency
        self._discount_id = discount_id
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderLineItemsInnerAppliedDiscountsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Order_line_items_inner_applied_discounts_inner of this OrderLineItemsInnerAppliedDiscountsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this OrderLineItemsInnerAppliedDiscountsInner.


        :return: The amount of this OrderLineItemsInnerAppliedDiscountsInner.
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this OrderLineItemsInnerAppliedDiscountsInner.


        :param amount: The amount of this OrderLineItemsInnerAppliedDiscountsInner.
        :type amount: int
        """

        self._amount = amount

    @property
    def currency(self):
        """Gets the currency of this OrderLineItemsInnerAppliedDiscountsInner.


        :return: The currency of this OrderLineItemsInnerAppliedDiscountsInner.
        :rtype: Currency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this OrderLineItemsInnerAppliedDiscountsInner.


        :param currency: The currency of this OrderLineItemsInnerAppliedDiscountsInner.
        :type currency: Currency
        """

        self._currency = currency

    @property
    def discount_id(self):
        """Gets the discount_id of this OrderLineItemsInnerAppliedDiscountsInner.


        :return: The discount_id of this OrderLineItemsInnerAppliedDiscountsInner.
        :rtype: str
        """
        return self._discount_id

    @discount_id.setter
    def discount_id(self, discount_id):
        """Sets the discount_id of this OrderLineItemsInnerAppliedDiscountsInner.


        :param discount_id: The discount_id of this OrderLineItemsInnerAppliedDiscountsInner.
        :type discount_id: str
        """

        self._discount_id = discount_id

    @property
    def id(self):
        """Gets the id of this OrderLineItemsInnerAppliedDiscountsInner.

        A unique identifier for an object.

        :return: The id of this OrderLineItemsInnerAppliedDiscountsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrderLineItemsInnerAppliedDiscountsInner.

        A unique identifier for an object.

        :param id: The id of this OrderLineItemsInnerAppliedDiscountsInner.
        :type id: str
        """

        self._id = id
