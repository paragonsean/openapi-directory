# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, buyer_arrived_at: datetime=None, curbside_details: str=None):
        """OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails - a model defined in OpenAPI

        :param buyer_arrived_at: The buyer_arrived_at of this OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails.
        :param curbside_details: The curbside_details of this OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails.
        """
        self.openapi_types = {
            'buyer_arrived_at': datetime,
            'curbside_details': str
        }

        self.attribute_map = {
            'buyer_arrived_at': 'buyer_arrived_at',
            'curbside_details': 'curbside_details'
        }

        self._buyer_arrived_at = buyer_arrived_at
        self._curbside_details = curbside_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Order_fulfillments_inner_pickup_details_curbside_pickup_details of this OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def buyer_arrived_at(self):
        """Gets the buyer_arrived_at of this OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails.

        Indicating when the buyer arrived and is waiting for pickup. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").

        :return: The buyer_arrived_at of this OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails.
        :rtype: datetime
        """
        return self._buyer_arrived_at

    @buyer_arrived_at.setter
    def buyer_arrived_at(self, buyer_arrived_at):
        """Sets the buyer_arrived_at of this OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails.

        Indicating when the buyer arrived and is waiting for pickup. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").

        :param buyer_arrived_at: The buyer_arrived_at of this OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails.
        :type buyer_arrived_at: datetime
        """

        self._buyer_arrived_at = buyer_arrived_at

    @property
    def curbside_details(self):
        """Gets the curbside_details of this OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails.

        Specific details for curbside pickup, such as parking number and vehicle model.

        :return: The curbside_details of this OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails.
        :rtype: str
        """
        return self._curbside_details

    @curbside_details.setter
    def curbside_details(self, curbside_details):
        """Sets the curbside_details of this OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails.

        Specific details for curbside pickup, such as parking number and vehicle model.

        :param curbside_details: The curbside_details of this OrderFulfillmentsInnerPickupDetailsCurbsidePickupDetails.
        :type curbside_details: str
        """
        if curbside_details is not None and len(curbside_details) > 250:
            raise ValueError("Invalid value for `curbside_details`, length must be less than or equal to `250`")

        self._curbside_details = curbside_details
