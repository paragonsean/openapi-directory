# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_resource_linked_resources_inner import ApiResourceLinkedResourcesInner
from openapi_server.models.resource_status import ResourceStatus
from openapi_server import util


class ApiResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, linked_resources: List[ApiResourceLinkedResourcesInner]=None, name: str=None, _schema: object=None, status: ResourceStatus=None):
        """ApiResource - a model defined in OpenAPI

        :param id: The id of this ApiResource.
        :param linked_resources: The linked_resources of this ApiResource.
        :param name: The name of this ApiResource.
        :param _schema: The _schema of this ApiResource.
        :param status: The status of this ApiResource.
        """
        self.openapi_types = {
            'id': str,
            'linked_resources': List[ApiResourceLinkedResourcesInner],
            'name': str,
            '_schema': object,
            'status': ResourceStatus
        }

        self.attribute_map = {
            'id': 'id',
            'linked_resources': 'linked_resources',
            'name': 'name',
            '_schema': 'schema',
            'status': 'status'
        }

        self._id = id
        self._linked_resources = linked_resources
        self._name = name
        self.__schema = _schema
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiResource of this ApiResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ApiResource.

        ID of the resource, typically a lowercased version of name.

        :return: The id of this ApiResource.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ApiResource.

        ID of the resource, typically a lowercased version of name.

        :param id: The id of this ApiResource.
        :type id: str
        """

        self._id = id

    @property
    def linked_resources(self):
        """Gets the linked_resources of this ApiResource.

        List of linked resources.

        :return: The linked_resources of this ApiResource.
        :rtype: List[ApiResourceLinkedResourcesInner]
        """
        return self._linked_resources

    @linked_resources.setter
    def linked_resources(self, linked_resources):
        """Sets the linked_resources of this ApiResource.

        List of linked resources.

        :param linked_resources: The linked_resources of this ApiResource.
        :type linked_resources: List[ApiResourceLinkedResourcesInner]
        """

        self._linked_resources = linked_resources

    @property
    def name(self):
        """Gets the name of this ApiResource.

        Name of the resource (plural)

        :return: The name of this ApiResource.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApiResource.

        Name of the resource (plural)

        :param name: The name of this ApiResource.
        :type name: str
        """

        self._name = name

    @property
    def _schema(self):
        """Gets the _schema of this ApiResource.

        JSON Schema of the resource in our Unified API

        :return: The _schema of this ApiResource.
        :rtype: object
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this ApiResource.

        JSON Schema of the resource in our Unified API

        :param _schema: The _schema of this ApiResource.
        :type _schema: object
        """

        self.__schema = _schema

    @property
    def status(self):
        """Gets the status of this ApiResource.


        :return: The status of this ApiResource.
        :rtype: ResourceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ApiResource.


        :param status: The status of this ApiResource.
        :type status: ResourceStatus
        """

        self._status = status
