# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_status import ResourceStatus
from openapi_server import util


class LinkedConnectorResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, downstream_id: str=None, downstream_name: str=None, id: str=None, name: str=None, status: ResourceStatus=None):
        """LinkedConnectorResource - a model defined in OpenAPI

        :param downstream_id: The downstream_id of this LinkedConnectorResource.
        :param downstream_name: The downstream_name of this LinkedConnectorResource.
        :param id: The id of this LinkedConnectorResource.
        :param name: The name of this LinkedConnectorResource.
        :param status: The status of this LinkedConnectorResource.
        """
        self.openapi_types = {
            'downstream_id': str,
            'downstream_name': str,
            'id': str,
            'name': str,
            'status': ResourceStatus
        }

        self.attribute_map = {
            'downstream_id': 'downstream_id',
            'downstream_name': 'downstream_name',
            'id': 'id',
            'name': 'name',
            'status': 'status'
        }

        self._downstream_id = downstream_id
        self._downstream_name = downstream_name
        self._id = id
        self._name = name
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LinkedConnectorResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LinkedConnectorResource of this LinkedConnectorResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def downstream_id(self):
        """Gets the downstream_id of this LinkedConnectorResource.

        ID of the resource in the Connector's API (downstream)

        :return: The downstream_id of this LinkedConnectorResource.
        :rtype: str
        """
        return self._downstream_id

    @downstream_id.setter
    def downstream_id(self, downstream_id):
        """Sets the downstream_id of this LinkedConnectorResource.

        ID of the resource in the Connector's API (downstream)

        :param downstream_id: The downstream_id of this LinkedConnectorResource.
        :type downstream_id: str
        """

        self._downstream_id = downstream_id

    @property
    def downstream_name(self):
        """Gets the downstream_name of this LinkedConnectorResource.

        Name of the resource in the Connector's API (downstream)

        :return: The downstream_name of this LinkedConnectorResource.
        :rtype: str
        """
        return self._downstream_name

    @downstream_name.setter
    def downstream_name(self, downstream_name):
        """Sets the downstream_name of this LinkedConnectorResource.

        Name of the resource in the Connector's API (downstream)

        :param downstream_name: The downstream_name of this LinkedConnectorResource.
        :type downstream_name: str
        """

        self._downstream_name = downstream_name

    @property
    def id(self):
        """Gets the id of this LinkedConnectorResource.

        ID of the resource, typically a lowercased version of name.

        :return: The id of this LinkedConnectorResource.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LinkedConnectorResource.

        ID of the resource, typically a lowercased version of name.

        :param id: The id of this LinkedConnectorResource.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this LinkedConnectorResource.

        Name of the resource (plural)

        :return: The name of this LinkedConnectorResource.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LinkedConnectorResource.

        Name of the resource (plural)

        :param name: The name of this LinkedConnectorResource.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this LinkedConnectorResource.


        :return: The status of this LinkedConnectorResource.
        :rtype: ResourceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this LinkedConnectorResource.


        :param status: The status of this LinkedConnectorResource.
        :type status: ResourceStatus
        """

        self._status = status
