# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.connector_status import ConnectorStatus
from openapi_server.models.unified_api_id import UnifiedApiId
from openapi_server import util


class ConnectorsFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: ConnectorStatus=None, unified_api: UnifiedApiId=None):
        """ConnectorsFilter - a model defined in OpenAPI

        :param status: The status of this ConnectorsFilter.
        :param unified_api: The unified_api of this ConnectorsFilter.
        """
        self.openapi_types = {
            'status': ConnectorStatus,
            'unified_api': UnifiedApiId
        }

        self.attribute_map = {
            'status': 'status',
            'unified_api': 'unified_api'
        }

        self._status = status
        self._unified_api = unified_api

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConnectorsFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConnectorsFilter of this ConnectorsFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this ConnectorsFilter.


        :return: The status of this ConnectorsFilter.
        :rtype: ConnectorStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ConnectorsFilter.


        :param status: The status of this ConnectorsFilter.
        :type status: ConnectorStatus
        """

        self._status = status

    @property
    def unified_api(self):
        """Gets the unified_api of this ConnectorsFilter.


        :return: The unified_api of this ConnectorsFilter.
        :rtype: UnifiedApiId
        """
        return self._unified_api

    @unified_api.setter
    def unified_api(self, unified_api):
        """Sets the unified_api of this ConnectorsFilter.


        :param unified_api: The unified_api of this ConnectorsFilter.
        :type unified_api: UnifiedApiId
        """

        self._unified_api = unified_api
