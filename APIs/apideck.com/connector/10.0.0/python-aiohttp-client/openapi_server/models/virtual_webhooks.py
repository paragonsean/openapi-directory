# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.request_rate import RequestRate
from openapi_server import util


class VirtualWebhooks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, request_rate: RequestRate=None, resources: object=None):
        """VirtualWebhooks - a model defined in OpenAPI

        :param request_rate: The request_rate of this VirtualWebhooks.
        :param resources: The resources of this VirtualWebhooks.
        """
        self.openapi_types = {
            'request_rate': RequestRate,
            'resources': object
        }

        self.attribute_map = {
            'request_rate': 'request_rate',
            'resources': 'resources'
        }

        self._request_rate = request_rate
        self._resources = resources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualWebhooks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Virtual_Webhooks of this VirtualWebhooks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def request_rate(self):
        """Gets the request_rate of this VirtualWebhooks.


        :return: The request_rate of this VirtualWebhooks.
        :rtype: RequestRate
        """
        return self._request_rate

    @request_rate.setter
    def request_rate(self, request_rate):
        """Sets the request_rate of this VirtualWebhooks.


        :param request_rate: The request_rate of this VirtualWebhooks.
        :type request_rate: RequestRate
        """
        if request_rate is None:
            raise ValueError("Invalid value for `request_rate`, must not be `None`")

        self._request_rate = request_rate

    @property
    def resources(self):
        """Gets the resources of this VirtualWebhooks.

        The resources that will be requested from downstream.

        :return: The resources of this VirtualWebhooks.
        :rtype: object
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this VirtualWebhooks.

        The resources that will be requested from downstream.

        :param resources: The resources of this VirtualWebhooks.
        :type resources: object
        """

        self._resources = resources
