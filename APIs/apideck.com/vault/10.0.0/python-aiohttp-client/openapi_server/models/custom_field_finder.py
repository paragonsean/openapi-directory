# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomFieldFinder(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, finder: str=None, id: str=None, name: str=None, value: object=None):
        """CustomFieldFinder - a model defined in OpenAPI

        :param description: The description of this CustomFieldFinder.
        :param finder: The finder of this CustomFieldFinder.
        :param id: The id of this CustomFieldFinder.
        :param name: The name of this CustomFieldFinder.
        :param value: The value of this CustomFieldFinder.
        """
        self.openapi_types = {
            'description': str,
            'finder': str,
            'id': str,
            'name': str,
            'value': object
        }

        self.attribute_map = {
            'description': 'description',
            'finder': 'finder',
            'id': 'id',
            'name': 'name',
            'value': 'value'
        }

        self._description = description
        self._finder = finder
        self._id = id
        self._name = name
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomFieldFinder':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomFieldFinder of this CustomFieldFinder.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this CustomFieldFinder.

        More information about the custom field

        :return: The description of this CustomFieldFinder.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CustomFieldFinder.

        More information about the custom field

        :param description: The description of this CustomFieldFinder.
        :type description: str
        """

        self._description = description

    @property
    def finder(self):
        """Gets the finder of this CustomFieldFinder.

        JSONPath finder for retrieving this value when mapping a response payload from downstream

        :return: The finder of this CustomFieldFinder.
        :rtype: str
        """
        return self._finder

    @finder.setter
    def finder(self, finder):
        """Sets the finder of this CustomFieldFinder.

        JSONPath finder for retrieving this value when mapping a response payload from downstream

        :param finder: The finder of this CustomFieldFinder.
        :type finder: str
        """

        self._finder = finder

    @property
    def id(self):
        """Gets the id of this CustomFieldFinder.

        Custom Field ID

        :return: The id of this CustomFieldFinder.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CustomFieldFinder.

        Custom Field ID

        :param id: The id of this CustomFieldFinder.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this CustomFieldFinder.

        Custom Field name to use as a label if provided

        :return: The name of this CustomFieldFinder.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CustomFieldFinder.

        Custom Field name to use as a label if provided

        :param name: The name of this CustomFieldFinder.
        :type name: str
        """

        self._name = name

    @property
    def value(self):
        """Gets the value of this CustomFieldFinder.

        Custom Field value

        :return: The value of this CustomFieldFinder.
        :rtype: object
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this CustomFieldFinder.

        Custom Field value

        :param value: The value of this CustomFieldFinder.
        :type value: object
        """

        self._value = value
