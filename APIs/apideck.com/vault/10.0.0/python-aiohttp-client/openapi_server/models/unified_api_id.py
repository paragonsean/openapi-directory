# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UnifiedApiId(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ACCOUNTING = 'accounting'
    ATS = 'ats'
    CALENDAR = 'calendar'
    CRM = 'crm'
    CSP = 'csp'
    CUSTOMER_MINUS_SUPPORT = 'customer-support'
    ECOMMERCE = 'ecommerce'
    EMAIL = 'email'
    EMAIL_MINUS_MARKETING = 'email-marketing'
    EXPENSE_MINUS_MANAGEMENT = 'expense-management'
    FILE_MINUS_STORAGE = 'file-storage'
    FORM = 'form'
    HRIS = 'hris'
    LEAD = 'lead'
    PAYROLL = 'payroll'
    POS = 'pos'
    PROCUREMENT = 'procurement'
    PROJECT_MINUS_MANAGEMENT = 'project-management'
    SCRIPT = 'script'
    SMS = 'sms'
    SPREADSHEET = 'spreadsheet'
    TEAM_MINUS_MESSAGING = 'team-messaging'
    ISSUE_MINUS_TRACKING = 'issue-tracking'
    TIME_MINUS_REGISTRATION = 'time-registration'
    TRANSACTIONAL_MINUS_EMAIL = 'transactional-email'
    VAULT = 'vault'
    DATA_MINUS_WAREHOUSE = 'data-warehouse'

    def __init__(self):
        """UnifiedApiId - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UnifiedApiId':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UnifiedApiId of this UnifiedApiId.
        """
        return util.deserialize_model(dikt, cls)
