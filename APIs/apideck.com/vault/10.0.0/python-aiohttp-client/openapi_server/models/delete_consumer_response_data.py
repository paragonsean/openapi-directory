# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteConsumerResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, consumer_id: str=None):
        """DeleteConsumerResponseData - a model defined in OpenAPI

        :param consumer_id: The consumer_id of this DeleteConsumerResponseData.
        """
        self.openapi_types = {
            'consumer_id': str
        }

        self.attribute_map = {
            'consumer_id': 'consumer_id'
        }

        self._consumer_id = consumer_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteConsumerResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteConsumerResponse_data of this DeleteConsumerResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def consumer_id(self):
        """Gets the consumer_id of this DeleteConsumerResponseData.

        Unique consumer identifier. You can freely choose a consumer ID yourself. Most of the time, this is an ID of your internal data model that represents a user or account in your system (for example account:12345). If the consumer doesn't exist yet, Vault will upsert a consumer based on your ID.

        :return: The consumer_id of this DeleteConsumerResponseData.
        :rtype: str
        """
        return self._consumer_id

    @consumer_id.setter
    def consumer_id(self, consumer_id):
        """Sets the consumer_id of this DeleteConsumerResponseData.

        Unique consumer identifier. You can freely choose a consumer ID yourself. Most of the time, this is an ID of your internal data model that represents a user or account in your system (for example account:12345). If the consumer doesn't exist yet, Vault will upsert a consumer based on your ID.

        :param consumer_id: The consumer_id of this DeleteConsumerResponseData.
        :type consumer_id: str
        """

        self._consumer_id = consumer_id
