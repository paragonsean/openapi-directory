# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SessionTheme(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, favicon: str=None, logo: str=None, primary_color: str=None, privacy_url: str=None, sidepanel_background_color: str=None, sidepanel_text_color: str=None, terms_url: str=None, vault_name: str=None):
        """SessionTheme - a model defined in OpenAPI

        :param favicon: The favicon of this SessionTheme.
        :param logo: The logo of this SessionTheme.
        :param primary_color: The primary_color of this SessionTheme.
        :param privacy_url: The privacy_url of this SessionTheme.
        :param sidepanel_background_color: The sidepanel_background_color of this SessionTheme.
        :param sidepanel_text_color: The sidepanel_text_color of this SessionTheme.
        :param terms_url: The terms_url of this SessionTheme.
        :param vault_name: The vault_name of this SessionTheme.
        """
        self.openapi_types = {
            'favicon': str,
            'logo': str,
            'primary_color': str,
            'privacy_url': str,
            'sidepanel_background_color': str,
            'sidepanel_text_color': str,
            'terms_url': str,
            'vault_name': str
        }

        self.attribute_map = {
            'favicon': 'favicon',
            'logo': 'logo',
            'primary_color': 'primary_color',
            'privacy_url': 'privacy_url',
            'sidepanel_background_color': 'sidepanel_background_color',
            'sidepanel_text_color': 'sidepanel_text_color',
            'terms_url': 'terms_url',
            'vault_name': 'vault_name'
        }

        self._favicon = favicon
        self._logo = logo
        self._primary_color = primary_color
        self._privacy_url = privacy_url
        self._sidepanel_background_color = sidepanel_background_color
        self._sidepanel_text_color = sidepanel_text_color
        self._terms_url = terms_url
        self._vault_name = vault_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SessionTheme':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Session_theme of this SessionTheme.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def favicon(self):
        """Gets the favicon of this SessionTheme.

        The URL to the favicon to use for Vault.

        :return: The favicon of this SessionTheme.
        :rtype: str
        """
        return self._favicon

    @favicon.setter
    def favicon(self, favicon):
        """Sets the favicon of this SessionTheme.

        The URL to the favicon to use for Vault.

        :param favicon: The favicon of this SessionTheme.
        :type favicon: str
        """

        self._favicon = favicon

    @property
    def logo(self):
        """Gets the logo of this SessionTheme.

        The URL to the logo to use for Vault.

        :return: The logo of this SessionTheme.
        :rtype: str
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this SessionTheme.

        The URL to the logo to use for Vault.

        :param logo: The logo of this SessionTheme.
        :type logo: str
        """

        self._logo = logo

    @property
    def primary_color(self):
        """Gets the primary_color of this SessionTheme.

        The primary color to use for Vault.

        :return: The primary_color of this SessionTheme.
        :rtype: str
        """
        return self._primary_color

    @primary_color.setter
    def primary_color(self, primary_color):
        """Sets the primary_color of this SessionTheme.

        The primary color to use for Vault.

        :param primary_color: The primary_color of this SessionTheme.
        :type primary_color: str
        """

        self._primary_color = primary_color

    @property
    def privacy_url(self):
        """Gets the privacy_url of this SessionTheme.

        The URL to the privacy policy that will be shown in the sidebar.

        :return: The privacy_url of this SessionTheme.
        :rtype: str
        """
        return self._privacy_url

    @privacy_url.setter
    def privacy_url(self, privacy_url):
        """Sets the privacy_url of this SessionTheme.

        The URL to the privacy policy that will be shown in the sidebar.

        :param privacy_url: The privacy_url of this SessionTheme.
        :type privacy_url: str
        """

        self._privacy_url = privacy_url

    @property
    def sidepanel_background_color(self):
        """Gets the sidepanel_background_color of this SessionTheme.

        The background color to use for the sidebar.

        :return: The sidepanel_background_color of this SessionTheme.
        :rtype: str
        """
        return self._sidepanel_background_color

    @sidepanel_background_color.setter
    def sidepanel_background_color(self, sidepanel_background_color):
        """Sets the sidepanel_background_color of this SessionTheme.

        The background color to use for the sidebar.

        :param sidepanel_background_color: The sidepanel_background_color of this SessionTheme.
        :type sidepanel_background_color: str
        """

        self._sidepanel_background_color = sidepanel_background_color

    @property
    def sidepanel_text_color(self):
        """Gets the sidepanel_text_color of this SessionTheme.

        The text color to use for the sidebar.

        :return: The sidepanel_text_color of this SessionTheme.
        :rtype: str
        """
        return self._sidepanel_text_color

    @sidepanel_text_color.setter
    def sidepanel_text_color(self, sidepanel_text_color):
        """Sets the sidepanel_text_color of this SessionTheme.

        The text color to use for the sidebar.

        :param sidepanel_text_color: The sidepanel_text_color of this SessionTheme.
        :type sidepanel_text_color: str
        """

        self._sidepanel_text_color = sidepanel_text_color

    @property
    def terms_url(self):
        """Gets the terms_url of this SessionTheme.

        The URL to the terms and conditions that will be shown in the sidebar.

        :return: The terms_url of this SessionTheme.
        :rtype: str
        """
        return self._terms_url

    @terms_url.setter
    def terms_url(self, terms_url):
        """Sets the terms_url of this SessionTheme.

        The URL to the terms and conditions that will be shown in the sidebar.

        :param terms_url: The terms_url of this SessionTheme.
        :type terms_url: str
        """

        self._terms_url = terms_url

    @property
    def vault_name(self):
        """Gets the vault_name of this SessionTheme.

        The name that will be shown in the sidebar.

        :return: The vault_name of this SessionTheme.
        :rtype: str
        """
        return self._vault_name

    @vault_name.setter
    def vault_name(self, vault_name):
        """Sets the vault_name of this SessionTheme.

        The name that will be shown in the sidebar.

        :param vault_name: The vault_name of this SessionTheme.
        :type vault_name: str
        """

        self._vault_name = vault_name
