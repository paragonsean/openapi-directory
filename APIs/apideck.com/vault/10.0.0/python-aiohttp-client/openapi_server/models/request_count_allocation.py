# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RequestCountAllocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, proxy: float=None, unify: float=None, vault: float=None):
        """RequestCountAllocation - a model defined in OpenAPI

        :param proxy: The proxy of this RequestCountAllocation.
        :param unify: The unify of this RequestCountAllocation.
        :param vault: The vault of this RequestCountAllocation.
        """
        self.openapi_types = {
            'proxy': float,
            'unify': float,
            'vault': float
        }

        self.attribute_map = {
            'proxy': 'proxy',
            'unify': 'unify',
            'vault': 'vault'
        }

        self._proxy = proxy
        self._unify = unify
        self._vault = vault

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RequestCountAllocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RequestCountAllocation of this RequestCountAllocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def proxy(self):
        """Gets the proxy of this RequestCountAllocation.


        :return: The proxy of this RequestCountAllocation.
        :rtype: float
        """
        return self._proxy

    @proxy.setter
    def proxy(self, proxy):
        """Sets the proxy of this RequestCountAllocation.


        :param proxy: The proxy of this RequestCountAllocation.
        :type proxy: float
        """

        self._proxy = proxy

    @property
    def unify(self):
        """Gets the unify of this RequestCountAllocation.


        :return: The unify of this RequestCountAllocation.
        :rtype: float
        """
        return self._unify

    @unify.setter
    def unify(self, unify):
        """Sets the unify of this RequestCountAllocation.


        :param unify: The unify of this RequestCountAllocation.
        :type unify: float
        """

        self._unify = unify

    @property
    def vault(self):
        """Gets the vault of this RequestCountAllocation.


        :return: The vault of this RequestCountAllocation.
        :rtype: float
        """
        return self._vault

    @vault.setter
    def vault(self, vault):
        """Sets the vault of this RequestCountAllocation.


        :param vault: The vault of this RequestCountAllocation.
        :type vault: float
        """

        self._vault = vault
