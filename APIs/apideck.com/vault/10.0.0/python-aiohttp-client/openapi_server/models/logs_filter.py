# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LogsFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connector_id: str=None, exclude_unified_apis: str=None, status_code: float=None):
        """LogsFilter - a model defined in OpenAPI

        :param connector_id: The connector_id of this LogsFilter.
        :param exclude_unified_apis: The exclude_unified_apis of this LogsFilter.
        :param status_code: The status_code of this LogsFilter.
        """
        self.openapi_types = {
            'connector_id': str,
            'exclude_unified_apis': str,
            'status_code': float
        }

        self.attribute_map = {
            'connector_id': 'connector_id',
            'exclude_unified_apis': 'exclude_unified_apis',
            'status_code': 'status_code'
        }

        self._connector_id = connector_id
        self._exclude_unified_apis = exclude_unified_apis
        self._status_code = status_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LogsFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LogsFilter of this LogsFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connector_id(self):
        """Gets the connector_id of this LogsFilter.


        :return: The connector_id of this LogsFilter.
        :rtype: str
        """
        return self._connector_id

    @connector_id.setter
    def connector_id(self, connector_id):
        """Sets the connector_id of this LogsFilter.


        :param connector_id: The connector_id of this LogsFilter.
        :type connector_id: str
        """

        self._connector_id = connector_id

    @property
    def exclude_unified_apis(self):
        """Gets the exclude_unified_apis of this LogsFilter.


        :return: The exclude_unified_apis of this LogsFilter.
        :rtype: str
        """
        return self._exclude_unified_apis

    @exclude_unified_apis.setter
    def exclude_unified_apis(self, exclude_unified_apis):
        """Sets the exclude_unified_apis of this LogsFilter.


        :param exclude_unified_apis: The exclude_unified_apis of this LogsFilter.
        :type exclude_unified_apis: str
        """

        self._exclude_unified_apis = exclude_unified_apis

    @property
    def status_code(self):
        """Gets the status_code of this LogsFilter.


        :return: The status_code of this LogsFilter.
        :rtype: float
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this LogsFilter.


        :param status_code: The status_code of this LogsFilter.
        :type status_code: float
        """

        self._status_code = status_code
