# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.request_count_allocation import RequestCountAllocation
from openapi_server import util


class ConsumerRequestCountsInDateRangeResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aggregated_request_count: float=None, application_id: str=None, consumer_id: str=None, end_datetime: str=None, request_counts: RequestCountAllocation=None, start_datetime: str=None):
        """ConsumerRequestCountsInDateRangeResponseData - a model defined in OpenAPI

        :param aggregated_request_count: The aggregated_request_count of this ConsumerRequestCountsInDateRangeResponseData.
        :param application_id: The application_id of this ConsumerRequestCountsInDateRangeResponseData.
        :param consumer_id: The consumer_id of this ConsumerRequestCountsInDateRangeResponseData.
        :param end_datetime: The end_datetime of this ConsumerRequestCountsInDateRangeResponseData.
        :param request_counts: The request_counts of this ConsumerRequestCountsInDateRangeResponseData.
        :param start_datetime: The start_datetime of this ConsumerRequestCountsInDateRangeResponseData.
        """
        self.openapi_types = {
            'aggregated_request_count': float,
            'application_id': str,
            'consumer_id': str,
            'end_datetime': str,
            'request_counts': RequestCountAllocation,
            'start_datetime': str
        }

        self.attribute_map = {
            'aggregated_request_count': 'aggregated_request_count',
            'application_id': 'application_id',
            'consumer_id': 'consumer_id',
            'end_datetime': 'end_datetime',
            'request_counts': 'request_counts',
            'start_datetime': 'start_datetime'
        }

        self._aggregated_request_count = aggregated_request_count
        self._application_id = application_id
        self._consumer_id = consumer_id
        self._end_datetime = end_datetime
        self._request_counts = request_counts
        self._start_datetime = start_datetime

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConsumerRequestCountsInDateRangeResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConsumerRequestCountsInDateRangeResponse_data of this ConsumerRequestCountsInDateRangeResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aggregated_request_count(self):
        """Gets the aggregated_request_count of this ConsumerRequestCountsInDateRangeResponseData.


        :return: The aggregated_request_count of this ConsumerRequestCountsInDateRangeResponseData.
        :rtype: float
        """
        return self._aggregated_request_count

    @aggregated_request_count.setter
    def aggregated_request_count(self, aggregated_request_count):
        """Sets the aggregated_request_count of this ConsumerRequestCountsInDateRangeResponseData.


        :param aggregated_request_count: The aggregated_request_count of this ConsumerRequestCountsInDateRangeResponseData.
        :type aggregated_request_count: float
        """

        self._aggregated_request_count = aggregated_request_count

    @property
    def application_id(self):
        """Gets the application_id of this ConsumerRequestCountsInDateRangeResponseData.


        :return: The application_id of this ConsumerRequestCountsInDateRangeResponseData.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this ConsumerRequestCountsInDateRangeResponseData.


        :param application_id: The application_id of this ConsumerRequestCountsInDateRangeResponseData.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def consumer_id(self):
        """Gets the consumer_id of this ConsumerRequestCountsInDateRangeResponseData.


        :return: The consumer_id of this ConsumerRequestCountsInDateRangeResponseData.
        :rtype: str
        """
        return self._consumer_id

    @consumer_id.setter
    def consumer_id(self, consumer_id):
        """Sets the consumer_id of this ConsumerRequestCountsInDateRangeResponseData.


        :param consumer_id: The consumer_id of this ConsumerRequestCountsInDateRangeResponseData.
        :type consumer_id: str
        """

        self._consumer_id = consumer_id

    @property
    def end_datetime(self):
        """Gets the end_datetime of this ConsumerRequestCountsInDateRangeResponseData.


        :return: The end_datetime of this ConsumerRequestCountsInDateRangeResponseData.
        :rtype: str
        """
        return self._end_datetime

    @end_datetime.setter
    def end_datetime(self, end_datetime):
        """Sets the end_datetime of this ConsumerRequestCountsInDateRangeResponseData.


        :param end_datetime: The end_datetime of this ConsumerRequestCountsInDateRangeResponseData.
        :type end_datetime: str
        """

        self._end_datetime = end_datetime

    @property
    def request_counts(self):
        """Gets the request_counts of this ConsumerRequestCountsInDateRangeResponseData.


        :return: The request_counts of this ConsumerRequestCountsInDateRangeResponseData.
        :rtype: RequestCountAllocation
        """
        return self._request_counts

    @request_counts.setter
    def request_counts(self, request_counts):
        """Sets the request_counts of this ConsumerRequestCountsInDateRangeResponseData.


        :param request_counts: The request_counts of this ConsumerRequestCountsInDateRangeResponseData.
        :type request_counts: RequestCountAllocation
        """

        self._request_counts = request_counts

    @property
    def start_datetime(self):
        """Gets the start_datetime of this ConsumerRequestCountsInDateRangeResponseData.


        :return: The start_datetime of this ConsumerRequestCountsInDateRangeResponseData.
        :rtype: str
        """
        return self._start_datetime

    @start_datetime.setter
    def start_datetime(self, start_datetime):
        """Sets the start_datetime of this ConsumerRequestCountsInDateRangeResponseData.


        :param start_datetime: The start_datetime of this ConsumerRequestCountsInDateRangeResponseData.
        :type start_datetime: str
        """

        self._start_datetime = start_datetime
