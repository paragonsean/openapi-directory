# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConsumerMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_name: str=None, email: str=None, image: str=None, user_name: str=None):
        """ConsumerMetadata - a model defined in OpenAPI

        :param account_name: The account_name of this ConsumerMetadata.
        :param email: The email of this ConsumerMetadata.
        :param image: The image of this ConsumerMetadata.
        :param user_name: The user_name of this ConsumerMetadata.
        """
        self.openapi_types = {
            'account_name': str,
            'email': str,
            'image': str,
            'user_name': str
        }

        self.attribute_map = {
            'account_name': 'account_name',
            'email': 'email',
            'image': 'image',
            'user_name': 'user_name'
        }

        self._account_name = account_name
        self._email = email
        self._image = image
        self._user_name = user_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConsumerMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConsumerMetadata of this ConsumerMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_name(self):
        """Gets the account_name of this ConsumerMetadata.

        The name of the account as shown in the sidebar.

        :return: The account_name of this ConsumerMetadata.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this ConsumerMetadata.

        The name of the account as shown in the sidebar.

        :param account_name: The account_name of this ConsumerMetadata.
        :type account_name: str
        """

        self._account_name = account_name

    @property
    def email(self):
        """Gets the email of this ConsumerMetadata.

        The email of the user as shown in the sidebar.

        :return: The email of this ConsumerMetadata.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ConsumerMetadata.

        The email of the user as shown in the sidebar.

        :param email: The email of this ConsumerMetadata.
        :type email: str
        """

        self._email = email

    @property
    def image(self):
        """Gets the image of this ConsumerMetadata.

        The avatar of the user in the sidebar. Must be a valid URL

        :return: The image of this ConsumerMetadata.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this ConsumerMetadata.

        The avatar of the user in the sidebar. Must be a valid URL

        :param image: The image of this ConsumerMetadata.
        :type image: str
        """

        self._image = image

    @property
    def user_name(self):
        """Gets the user_name of this ConsumerMetadata.

        The name of the user as shown in the sidebar.

        :return: The user_name of this ConsumerMetadata.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this ConsumerMetadata.

        The name of the user as shown in the sidebar.

        :param user_name: The user_name of this ConsumerMetadata.
        :type user_name: str
        """

        self._user_name = user_name
