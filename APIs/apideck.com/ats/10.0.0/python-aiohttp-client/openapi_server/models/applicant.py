# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server.models.applicant_social_links_inner import ApplicantSocialLinksInner
from openapi_server.models.applicant_websites_inner import ApplicantWebsitesInner
from openapi_server.models.custom_field import CustomField
from openapi_server.models.email import Email
from openapi_server.models.phone_number import PhoneNumber
from openapi_server import util


class Applicant(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, addresses: List[Address]=None, anonymized: bool=None, application_ids: List[str]=None, applications: List[str]=None, archived: bool=None, birthday: date=None, confidential: bool=None, coordinator_id: str=None, cover_letter: str=None, created_at: datetime=None, created_by: str=None, custom_fields: List[CustomField]=None, custom_mappings: object=None, cv_url: str=None, deleted: bool=None, deleted_at: datetime=None, deleted_by: str=None, emails: List[Email]=None, first_name: str=None, followers: List[str]=None, headline: str=None, id: str=None, initials: str=None, job_url: str=None, last_interaction_at: datetime=None, last_name: str=None, middle_name: str=None, name: str=None, owner_id: str=None, phone_numbers: List[PhoneNumber]=None, photo_url: str=None, position_id: str=None, record_url: str=None, recruiter_id: str=None, rejected_at: datetime=None, social_links: List[ApplicantSocialLinksInner]=None, source_id: str=None, sourced_by: str=None, sources: List[str]=None, stage_id: str=None, tags: List[str]=None, title: str=None, updated_at: datetime=None, updated_by: str=None, websites: List[ApplicantWebsitesInner]=None):
        """Applicant - a model defined in OpenAPI

        :param addresses: The addresses of this Applicant.
        :param anonymized: The anonymized of this Applicant.
        :param application_ids: The application_ids of this Applicant.
        :param applications: The applications of this Applicant.
        :param archived: The archived of this Applicant.
        :param birthday: The birthday of this Applicant.
        :param confidential: The confidential of this Applicant.
        :param coordinator_id: The coordinator_id of this Applicant.
        :param cover_letter: The cover_letter of this Applicant.
        :param created_at: The created_at of this Applicant.
        :param created_by: The created_by of this Applicant.
        :param custom_fields: The custom_fields of this Applicant.
        :param custom_mappings: The custom_mappings of this Applicant.
        :param cv_url: The cv_url of this Applicant.
        :param deleted: The deleted of this Applicant.
        :param deleted_at: The deleted_at of this Applicant.
        :param deleted_by: The deleted_by of this Applicant.
        :param emails: The emails of this Applicant.
        :param first_name: The first_name of this Applicant.
        :param followers: The followers of this Applicant.
        :param headline: The headline of this Applicant.
        :param id: The id of this Applicant.
        :param initials: The initials of this Applicant.
        :param job_url: The job_url of this Applicant.
        :param last_interaction_at: The last_interaction_at of this Applicant.
        :param last_name: The last_name of this Applicant.
        :param middle_name: The middle_name of this Applicant.
        :param name: The name of this Applicant.
        :param owner_id: The owner_id of this Applicant.
        :param phone_numbers: The phone_numbers of this Applicant.
        :param photo_url: The photo_url of this Applicant.
        :param position_id: The position_id of this Applicant.
        :param record_url: The record_url of this Applicant.
        :param recruiter_id: The recruiter_id of this Applicant.
        :param rejected_at: The rejected_at of this Applicant.
        :param social_links: The social_links of this Applicant.
        :param source_id: The source_id of this Applicant.
        :param sourced_by: The sourced_by of this Applicant.
        :param sources: The sources of this Applicant.
        :param stage_id: The stage_id of this Applicant.
        :param tags: The tags of this Applicant.
        :param title: The title of this Applicant.
        :param updated_at: The updated_at of this Applicant.
        :param updated_by: The updated_by of this Applicant.
        :param websites: The websites of this Applicant.
        """
        self.openapi_types = {
            'addresses': List[Address],
            'anonymized': bool,
            'application_ids': List[str],
            'applications': List[str],
            'archived': bool,
            'birthday': date,
            'confidential': bool,
            'coordinator_id': str,
            'cover_letter': str,
            'created_at': datetime,
            'created_by': str,
            'custom_fields': List[CustomField],
            'custom_mappings': object,
            'cv_url': str,
            'deleted': bool,
            'deleted_at': datetime,
            'deleted_by': str,
            'emails': List[Email],
            'first_name': str,
            'followers': List[str],
            'headline': str,
            'id': str,
            'initials': str,
            'job_url': str,
            'last_interaction_at': datetime,
            'last_name': str,
            'middle_name': str,
            'name': str,
            'owner_id': str,
            'phone_numbers': List[PhoneNumber],
            'photo_url': str,
            'position_id': str,
            'record_url': str,
            'recruiter_id': str,
            'rejected_at': datetime,
            'social_links': List[ApplicantSocialLinksInner],
            'source_id': str,
            'sourced_by': str,
            'sources': List[str],
            'stage_id': str,
            'tags': List[str],
            'title': str,
            'updated_at': datetime,
            'updated_by': str,
            'websites': List[ApplicantWebsitesInner]
        }

        self.attribute_map = {
            'addresses': 'addresses',
            'anonymized': 'anonymized',
            'application_ids': 'application_ids',
            'applications': 'applications',
            'archived': 'archived',
            'birthday': 'birthday',
            'confidential': 'confidential',
            'coordinator_id': 'coordinator_id',
            'cover_letter': 'cover_letter',
            'created_at': 'created_at',
            'created_by': 'created_by',
            'custom_fields': 'custom_fields',
            'custom_mappings': 'custom_mappings',
            'cv_url': 'cv_url',
            'deleted': 'deleted',
            'deleted_at': 'deleted_at',
            'deleted_by': 'deleted_by',
            'emails': 'emails',
            'first_name': 'first_name',
            'followers': 'followers',
            'headline': 'headline',
            'id': 'id',
            'initials': 'initials',
            'job_url': 'job_url',
            'last_interaction_at': 'last_interaction_at',
            'last_name': 'last_name',
            'middle_name': 'middle_name',
            'name': 'name',
            'owner_id': 'owner_id',
            'phone_numbers': 'phone_numbers',
            'photo_url': 'photo_url',
            'position_id': 'position_id',
            'record_url': 'record_url',
            'recruiter_id': 'recruiter_id',
            'rejected_at': 'rejected_at',
            'social_links': 'social_links',
            'source_id': 'source_id',
            'sourced_by': 'sourced_by',
            'sources': 'sources',
            'stage_id': 'stage_id',
            'tags': 'tags',
            'title': 'title',
            'updated_at': 'updated_at',
            'updated_by': 'updated_by',
            'websites': 'websites'
        }

        self._addresses = addresses
        self._anonymized = anonymized
        self._application_ids = application_ids
        self._applications = applications
        self._archived = archived
        self._birthday = birthday
        self._confidential = confidential
        self._coordinator_id = coordinator_id
        self._cover_letter = cover_letter
        self._created_at = created_at
        self._created_by = created_by
        self._custom_fields = custom_fields
        self._custom_mappings = custom_mappings
        self._cv_url = cv_url
        self._deleted = deleted
        self._deleted_at = deleted_at
        self._deleted_by = deleted_by
        self._emails = emails
        self._first_name = first_name
        self._followers = followers
        self._headline = headline
        self._id = id
        self._initials = initials
        self._job_url = job_url
        self._last_interaction_at = last_interaction_at
        self._last_name = last_name
        self._middle_name = middle_name
        self._name = name
        self._owner_id = owner_id
        self._phone_numbers = phone_numbers
        self._photo_url = photo_url
        self._position_id = position_id
        self._record_url = record_url
        self._recruiter_id = recruiter_id
        self._rejected_at = rejected_at
        self._social_links = social_links
        self._source_id = source_id
        self._sourced_by = sourced_by
        self._sources = sources
        self._stage_id = stage_id
        self._tags = tags
        self._title = title
        self._updated_at = updated_at
        self._updated_by = updated_by
        self._websites = websites

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Applicant':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Applicant of this Applicant.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def addresses(self):
        """Gets the addresses of this Applicant.


        :return: The addresses of this Applicant.
        :rtype: List[Address]
        """
        return self._addresses

    @addresses.setter
    def addresses(self, addresses):
        """Sets the addresses of this Applicant.


        :param addresses: The addresses of this Applicant.
        :type addresses: List[Address]
        """

        self._addresses = addresses

    @property
    def anonymized(self):
        """Gets the anonymized of this Applicant.


        :return: The anonymized of this Applicant.
        :rtype: bool
        """
        return self._anonymized

    @anonymized.setter
    def anonymized(self, anonymized):
        """Sets the anonymized of this Applicant.


        :param anonymized: The anonymized of this Applicant.
        :type anonymized: bool
        """

        self._anonymized = anonymized

    @property
    def application_ids(self):
        """Gets the application_ids of this Applicant.


        :return: The application_ids of this Applicant.
        :rtype: List[str]
        """
        return self._application_ids

    @application_ids.setter
    def application_ids(self, application_ids):
        """Sets the application_ids of this Applicant.


        :param application_ids: The application_ids of this Applicant.
        :type application_ids: List[str]
        """

        self._application_ids = application_ids

    @property
    def applications(self):
        """Gets the applications of this Applicant.


        :return: The applications of this Applicant.
        :rtype: List[str]
        """
        return self._applications

    @applications.setter
    def applications(self, applications):
        """Sets the applications of this Applicant.


        :param applications: The applications of this Applicant.
        :type applications: List[str]
        """

        self._applications = applications

    @property
    def archived(self):
        """Gets the archived of this Applicant.


        :return: The archived of this Applicant.
        :rtype: bool
        """
        return self._archived

    @archived.setter
    def archived(self, archived):
        """Sets the archived of this Applicant.


        :param archived: The archived of this Applicant.
        :type archived: bool
        """

        self._archived = archived

    @property
    def birthday(self):
        """Gets the birthday of this Applicant.

        The date of birth of the person.

        :return: The birthday of this Applicant.
        :rtype: date
        """
        return self._birthday

    @birthday.setter
    def birthday(self, birthday):
        """Sets the birthday of this Applicant.

        The date of birth of the person.

        :param birthday: The birthday of this Applicant.
        :type birthday: date
        """

        self._birthday = birthday

    @property
    def confidential(self):
        """Gets the confidential of this Applicant.


        :return: The confidential of this Applicant.
        :rtype: bool
        """
        return self._confidential

    @confidential.setter
    def confidential(self, confidential):
        """Sets the confidential of this Applicant.


        :param confidential: The confidential of this Applicant.
        :type confidential: bool
        """

        self._confidential = confidential

    @property
    def coordinator_id(self):
        """Gets the coordinator_id of this Applicant.


        :return: The coordinator_id of this Applicant.
        :rtype: str
        """
        return self._coordinator_id

    @coordinator_id.setter
    def coordinator_id(self, coordinator_id):
        """Sets the coordinator_id of this Applicant.


        :param coordinator_id: The coordinator_id of this Applicant.
        :type coordinator_id: str
        """

        self._coordinator_id = coordinator_id

    @property
    def cover_letter(self):
        """Gets the cover_letter of this Applicant.


        :return: The cover_letter of this Applicant.
        :rtype: str
        """
        return self._cover_letter

    @cover_letter.setter
    def cover_letter(self, cover_letter):
        """Sets the cover_letter of this Applicant.


        :param cover_letter: The cover_letter of this Applicant.
        :type cover_letter: str
        """

        self._cover_letter = cover_letter

    @property
    def created_at(self):
        """Gets the created_at of this Applicant.

        The date and time when the object was created.

        :return: The created_at of this Applicant.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Applicant.

        The date and time when the object was created.

        :param created_at: The created_at of this Applicant.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this Applicant.

        The user who created the object.

        :return: The created_by of this Applicant.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this Applicant.

        The user who created the object.

        :param created_by: The created_by of this Applicant.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def custom_fields(self):
        """Gets the custom_fields of this Applicant.


        :return: The custom_fields of this Applicant.
        :rtype: List[CustomField]
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this Applicant.


        :param custom_fields: The custom_fields of this Applicant.
        :type custom_fields: List[CustomField]
        """

        self._custom_fields = custom_fields

    @property
    def custom_mappings(self):
        """Gets the custom_mappings of this Applicant.

        When custom mappings are configured on the resource, the result is included here.

        :return: The custom_mappings of this Applicant.
        :rtype: object
        """
        return self._custom_mappings

    @custom_mappings.setter
    def custom_mappings(self, custom_mappings):
        """Sets the custom_mappings of this Applicant.

        When custom mappings are configured on the resource, the result is included here.

        :param custom_mappings: The custom_mappings of this Applicant.
        :type custom_mappings: object
        """

        self._custom_mappings = custom_mappings

    @property
    def cv_url(self):
        """Gets the cv_url of this Applicant.


        :return: The cv_url of this Applicant.
        :rtype: str
        """
        return self._cv_url

    @cv_url.setter
    def cv_url(self, cv_url):
        """Sets the cv_url of this Applicant.


        :param cv_url: The cv_url of this Applicant.
        :type cv_url: str
        """

        self._cv_url = cv_url

    @property
    def deleted(self):
        """Gets the deleted of this Applicant.

        Flag to indicate if the object is deleted.

        :return: The deleted of this Applicant.
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this Applicant.

        Flag to indicate if the object is deleted.

        :param deleted: The deleted of this Applicant.
        :type deleted: bool
        """

        self._deleted = deleted

    @property
    def deleted_at(self):
        """Gets the deleted_at of this Applicant.

        The time at which the object was deleted.

        :return: The deleted_at of this Applicant.
        :rtype: datetime
        """
        return self._deleted_at

    @deleted_at.setter
    def deleted_at(self, deleted_at):
        """Sets the deleted_at of this Applicant.

        The time at which the object was deleted.

        :param deleted_at: The deleted_at of this Applicant.
        :type deleted_at: datetime
        """

        self._deleted_at = deleted_at

    @property
    def deleted_by(self):
        """Gets the deleted_by of this Applicant.

        The user who deleted the object.

        :return: The deleted_by of this Applicant.
        :rtype: str
        """
        return self._deleted_by

    @deleted_by.setter
    def deleted_by(self, deleted_by):
        """Sets the deleted_by of this Applicant.

        The user who deleted the object.

        :param deleted_by: The deleted_by of this Applicant.
        :type deleted_by: str
        """

        self._deleted_by = deleted_by

    @property
    def emails(self):
        """Gets the emails of this Applicant.


        :return: The emails of this Applicant.
        :rtype: List[Email]
        """
        return self._emails

    @emails.setter
    def emails(self, emails):
        """Sets the emails of this Applicant.


        :param emails: The emails of this Applicant.
        :type emails: List[Email]
        """

        self._emails = emails

    @property
    def first_name(self):
        """Gets the first_name of this Applicant.

        The first name of the person.

        :return: The first_name of this Applicant.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this Applicant.

        The first name of the person.

        :param first_name: The first_name of this Applicant.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def followers(self):
        """Gets the followers of this Applicant.


        :return: The followers of this Applicant.
        :rtype: List[str]
        """
        return self._followers

    @followers.setter
    def followers(self, followers):
        """Sets the followers of this Applicant.


        :param followers: The followers of this Applicant.
        :type followers: List[str]
        """

        self._followers = followers

    @property
    def headline(self):
        """Gets the headline of this Applicant.

        Typically a list of previous companies where the contact has worked or schools that the contact has attended

        :return: The headline of this Applicant.
        :rtype: str
        """
        return self._headline

    @headline.setter
    def headline(self, headline):
        """Sets the headline of this Applicant.

        Typically a list of previous companies where the contact has worked or schools that the contact has attended

        :param headline: The headline of this Applicant.
        :type headline: str
        """

        self._headline = headline

    @property
    def id(self):
        """Gets the id of this Applicant.

        A unique identifier for an object.

        :return: The id of this Applicant.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Applicant.

        A unique identifier for an object.

        :param id: The id of this Applicant.
        :type id: str
        """

        self._id = id

    @property
    def initials(self):
        """Gets the initials of this Applicant.

        The initials of the person, usually derived from their first, middle, and last names.

        :return: The initials of this Applicant.
        :rtype: str
        """
        return self._initials

    @initials.setter
    def initials(self, initials):
        """Sets the initials of this Applicant.

        The initials of the person, usually derived from their first, middle, and last names.

        :param initials: The initials of this Applicant.
        :type initials: str
        """

        self._initials = initials

    @property
    def job_url(self):
        """Gets the job_url of this Applicant.


        :return: The job_url of this Applicant.
        :rtype: str
        """
        return self._job_url

    @job_url.setter
    def job_url(self, job_url):
        """Sets the job_url of this Applicant.


        :param job_url: The job_url of this Applicant.
        :type job_url: str
        """

        self._job_url = job_url

    @property
    def last_interaction_at(self):
        """Gets the last_interaction_at of this Applicant.


        :return: The last_interaction_at of this Applicant.
        :rtype: datetime
        """
        return self._last_interaction_at

    @last_interaction_at.setter
    def last_interaction_at(self, last_interaction_at):
        """Sets the last_interaction_at of this Applicant.


        :param last_interaction_at: The last_interaction_at of this Applicant.
        :type last_interaction_at: datetime
        """

        self._last_interaction_at = last_interaction_at

    @property
    def last_name(self):
        """Gets the last_name of this Applicant.

        The last name of the person.

        :return: The last_name of this Applicant.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this Applicant.

        The last name of the person.

        :param last_name: The last_name of this Applicant.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def middle_name(self):
        """Gets the middle_name of this Applicant.

        Middle name of the person.

        :return: The middle_name of this Applicant.
        :rtype: str
        """
        return self._middle_name

    @middle_name.setter
    def middle_name(self, middle_name):
        """Sets the middle_name of this Applicant.

        Middle name of the person.

        :param middle_name: The middle_name of this Applicant.
        :type middle_name: str
        """

        self._middle_name = middle_name

    @property
    def name(self):
        """Gets the name of this Applicant.

        The name of an applicant.

        :return: The name of this Applicant.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Applicant.

        The name of an applicant.

        :param name: The name of this Applicant.
        :type name: str
        """

        self._name = name

    @property
    def owner_id(self):
        """Gets the owner_id of this Applicant.


        :return: The owner_id of this Applicant.
        :rtype: str
        """
        return self._owner_id

    @owner_id.setter
    def owner_id(self, owner_id):
        """Sets the owner_id of this Applicant.


        :param owner_id: The owner_id of this Applicant.
        :type owner_id: str
        """

        self._owner_id = owner_id

    @property
    def phone_numbers(self):
        """Gets the phone_numbers of this Applicant.


        :return: The phone_numbers of this Applicant.
        :rtype: List[PhoneNumber]
        """
        return self._phone_numbers

    @phone_numbers.setter
    def phone_numbers(self, phone_numbers):
        """Sets the phone_numbers of this Applicant.


        :param phone_numbers: The phone_numbers of this Applicant.
        :type phone_numbers: List[PhoneNumber]
        """

        self._phone_numbers = phone_numbers

    @property
    def photo_url(self):
        """Gets the photo_url of this Applicant.

        The URL of the photo of a person.

        :return: The photo_url of this Applicant.
        :rtype: str
        """
        return self._photo_url

    @photo_url.setter
    def photo_url(self, photo_url):
        """Sets the photo_url of this Applicant.

        The URL of the photo of a person.

        :param photo_url: The photo_url of this Applicant.
        :type photo_url: str
        """

        self._photo_url = photo_url

    @property
    def position_id(self):
        """Gets the position_id of this Applicant.

        The PositionId the applicant applied for.

        :return: The position_id of this Applicant.
        :rtype: str
        """
        return self._position_id

    @position_id.setter
    def position_id(self, position_id):
        """Sets the position_id of this Applicant.

        The PositionId the applicant applied for.

        :param position_id: The position_id of this Applicant.
        :type position_id: str
        """

        self._position_id = position_id

    @property
    def record_url(self):
        """Gets the record_url of this Applicant.


        :return: The record_url of this Applicant.
        :rtype: str
        """
        return self._record_url

    @record_url.setter
    def record_url(self, record_url):
        """Sets the record_url of this Applicant.


        :param record_url: The record_url of this Applicant.
        :type record_url: str
        """

        self._record_url = record_url

    @property
    def recruiter_id(self):
        """Gets the recruiter_id of this Applicant.


        :return: The recruiter_id of this Applicant.
        :rtype: str
        """
        return self._recruiter_id

    @recruiter_id.setter
    def recruiter_id(self, recruiter_id):
        """Sets the recruiter_id of this Applicant.


        :param recruiter_id: The recruiter_id of this Applicant.
        :type recruiter_id: str
        """

        self._recruiter_id = recruiter_id

    @property
    def rejected_at(self):
        """Gets the rejected_at of this Applicant.


        :return: The rejected_at of this Applicant.
        :rtype: datetime
        """
        return self._rejected_at

    @rejected_at.setter
    def rejected_at(self, rejected_at):
        """Sets the rejected_at of this Applicant.


        :param rejected_at: The rejected_at of this Applicant.
        :type rejected_at: datetime
        """

        self._rejected_at = rejected_at

    @property
    def social_links(self):
        """Gets the social_links of this Applicant.


        :return: The social_links of this Applicant.
        :rtype: List[ApplicantSocialLinksInner]
        """
        return self._social_links

    @social_links.setter
    def social_links(self, social_links):
        """Sets the social_links of this Applicant.


        :param social_links: The social_links of this Applicant.
        :type social_links: List[ApplicantSocialLinksInner]
        """

        self._social_links = social_links

    @property
    def source_id(self):
        """Gets the source_id of this Applicant.


        :return: The source_id of this Applicant.
        :rtype: str
        """
        return self._source_id

    @source_id.setter
    def source_id(self, source_id):
        """Sets the source_id of this Applicant.


        :param source_id: The source_id of this Applicant.
        :type source_id: str
        """

        self._source_id = source_id

    @property
    def sourced_by(self):
        """Gets the sourced_by of this Applicant.


        :return: The sourced_by of this Applicant.
        :rtype: str
        """
        return self._sourced_by

    @sourced_by.setter
    def sourced_by(self, sourced_by):
        """Sets the sourced_by of this Applicant.


        :param sourced_by: The sourced_by of this Applicant.
        :type sourced_by: str
        """

        self._sourced_by = sourced_by

    @property
    def sources(self):
        """Gets the sources of this Applicant.


        :return: The sources of this Applicant.
        :rtype: List[str]
        """
        return self._sources

    @sources.setter
    def sources(self, sources):
        """Sets the sources of this Applicant.


        :param sources: The sources of this Applicant.
        :type sources: List[str]
        """

        self._sources = sources

    @property
    def stage_id(self):
        """Gets the stage_id of this Applicant.


        :return: The stage_id of this Applicant.
        :rtype: str
        """
        return self._stage_id

    @stage_id.setter
    def stage_id(self, stage_id):
        """Sets the stage_id of this Applicant.


        :param stage_id: The stage_id of this Applicant.
        :type stage_id: str
        """

        self._stage_id = stage_id

    @property
    def tags(self):
        """Gets the tags of this Applicant.


        :return: The tags of this Applicant.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Applicant.


        :param tags: The tags of this Applicant.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def title(self):
        """Gets the title of this Applicant.

        The job title of the person.

        :return: The title of this Applicant.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Applicant.

        The job title of the person.

        :param title: The title of this Applicant.
        :type title: str
        """

        self._title = title

    @property
    def updated_at(self):
        """Gets the updated_at of this Applicant.

        The date and time when the object was last updated.

        :return: The updated_at of this Applicant.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Applicant.

        The date and time when the object was last updated.

        :param updated_at: The updated_at of this Applicant.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def updated_by(self):
        """Gets the updated_by of this Applicant.

        The user who last updated the object.

        :return: The updated_by of this Applicant.
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this Applicant.

        The user who last updated the object.

        :param updated_by: The updated_by of this Applicant.
        :type updated_by: str
        """

        self._updated_by = updated_by

    @property
    def websites(self):
        """Gets the websites of this Applicant.


        :return: The websites of this Applicant.
        :rtype: List[ApplicantWebsitesInner]
        """
        return self._websites

    @websites.setter
    def websites(self, websites):
        """Sets the websites of this Applicant.


        :param websites: The websites of this Applicant.
        :type websites: List[ApplicantWebsitesInner]
        """

        self._websites = websites
