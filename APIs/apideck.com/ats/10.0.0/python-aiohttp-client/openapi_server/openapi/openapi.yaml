openapi: 3.0.0
info:
  contact:
    email: hello@apideck.com
    url: https://developers.apideck.com
  description: |+
    Welcome to the ATS API.

    You can use this API to access all ATS API endpoints.

    ## Base URL

    The base URL for all API requests is `https://unify.apideck.com`

    ## Headers

    Custom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.

    | Name                  | Type    | Required | Description                                                                                                                                                    |
    | --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |
    | x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |
    | x-apideck-service-id  | String  | No       | Describe the service you want to call (e.g., pipedrive). Only needed when a customer has activated multiple integrations for the same Unified API.             |
    | x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |
    | x-apideck-app-id      | String  | Yes      | The application id of your Unify application. Available at https://app.apideck.com/unify/api-keys.                                                             |
    | Authorization         | String  | Yes      | Bearer API KEY                                                                                                                                                 |

    ## Authorization

    You can interact with the API through the authorization methods below.

    <!-- ReDoc-Inject: <security-definitions> -->

    ## Pagination

    All API resources have support for bulk retrieval via list APIs.  Apideck uses cursor-based pagination via the optional `cursor` and `limit` parameters.

    To fetch the first page of results, call the list API without a `cursor` parameter. Afterwards you can fetch subsequent pages by providing a cursor parameter. You will find the next cursor in the response body in `meta.cursors.next`. If `meta.cursors.next` is `null` you're at the end of the list.

    In the REST API you can also use the `links` from the response for added convenience. Simply call the URL in `links.next` to get the next page of results.

    ### Query Parameters

    | Name   | Type   | Required | Description                                                                                                        |
    | ------ | ------ | -------- | ------------------------------------------------------------------------------------------------------------------ |
    | cursor | String | No       | Cursor to start from. You can find cursors for next & previous pages in the meta.cursors property of the response. |
    | limit  | Number | No       | Number of results to return. Minimum 1, Maximum 200, Default 20                                                    |

    ### Response Body

    | Name                  | Type   | Description                                                        |
    | --------------------- | ------ | ------------------------------------------------------------------ |
    | meta.cursors.previous | String | Cursor to navigate to the previous page of results through the API |
    | meta.cursors.current  | String | Cursor to navigate to the current page of results through the API  |
    | meta.cursors.next     | String | Cursor to navigate to the next page of results through the API     |
    | meta.items_on_page    | Number | Number of items returned in the data property of the response      |
    | links.previous        | String | Link to navigate to the previous page of results through the API   |
    | links.current         | String | Link to navigate to the current page of results through the API    |
    | links.next            | String | Link to navigate to the next page of results through the API       |

    ⚠️ `meta.cursors.previous`/`links.previous` is not available for all connectors.

    ## SDKs and API Clients

    We currently offer a [Node.js](https://developers.apideck.com/sdks/node), [PHP](https://developers.apideck.com/sdks/php) and [.NET](https://developers.apideck.com/sdks/dot-net) SDK.
    Need another SDK? [Request the SDK of your choice](https://integrations.apideck.com/request).

    ## Debugging

    Because of the nature of the abstraction we do in Apideck Unify we still provide the option to the receive raw requests and responses being handled underlying. By including the raw flag `?raw=true` in your requests you can still receive the full request. Please note that this increases the response size and can introduce extra latency.

    ## Errors

    The API returns standard HTTP response codes to indicate success or failure of the API requests. For errors, we also return a customized error message inside the JSON response. You can see the returned HTTP status codes below.

    | Code | Title                | Description                                                                                                                                                                                              |
    | ---- | -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
    | 200  | OK                   | The request message has been successfully processed, and it has produced a response. The response message varies, depending on the request method and the requested data.                                |
    | 201  | Created              | The request has been fulfilled and has resulted in one or more new resources being created.                                                                                                              |
    | 204  | No Content           | The server has successfully fulfilled the request and that there is no additional content to send in the response payload body.                                                                          |
    | 400  | Bad Request          | The receiving server cannot understand the request because of malformed syntax. Do not repeat the request without first modifying it; check the request for errors, fix them and then retry the request. |
    | 401  | Unauthorized         | The request has not been applied because it lacks valid authentication credentials for the target resource.                                                                                              |
    | 402  | Payment Required     | Subscription data is incomplete or out of date. You'll need to provide payment details to continue.                                                                                                      |
    | 403  | Forbidden            | You do not have the appropriate user rights to access the request. Do not repeat the request.                                                                                                            |
    | 404  | Not Found            | The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.                                                                           |
    | 409  | Conflict             | The request could not be completed due to a conflict with the current state of the target resource.                                                                                                      |
    | 422  | Unprocessable Entity | The server understands the content type of the request entity, and the syntax of the request entity is correct but was unable to process the contained instructions.                                     |
    | 429  | Too Many Requests    | You sent too many requests in a given amount of time ("rate limit"). Try again later                                                                                                                     |
    | 5xx  | Server Errors        | Something went wrong with the Unify API. These errors are logged on our side. You can contact our team to resolve the issue.                                                                             |

    ### Handling errors

    The Unify API and SDKs can produce errors for many reasons, such as a failed requests due to misconfigured integrations, invalid parameters, authentication errors, and network unavailability.

    ### Error Types

    #### RequestValidationError

    Request is not valid for the current endpoint. The response body will include details on the validation error. Check the spelling and types of your attributes, and ensure you are not passing data that is outside of the specification.

    #### UnsupportedFiltersError

    Filters in the request are valid, but not supported by the connector. Remove the unsupported filter(s) to get a successful response.

    #### UnsupportedSortFieldError

    Sort field (`sort[by]`) in the request is valid, but not supported by the connector. Replace or remove the sort field to get a successful response.

    #### InvalidCursorError

    Pagination cursor in the request is not valid for the current connector. Make sure to use a cursor returned from the API, for the same connector.

    #### ConnectorExecutionError

    A Unified API request made via one of our downstream connectors returned an unexpected error. The `status_code` returned is proxied through to error response along with their original response via the error detail.

    #### UnauthorizedError

    We were unable to authorize the request as made. This can happen for a number of reasons, from missing header params to passing an incorrect authorization token. Verify your Api Key is being set correctly in the authorization header. ie: `Authorization: 'Bearer sk_live_***'`

    #### ConnectorCredentialsError

    A request using a given connector has not been authorized. Ensure the connector you are trying to use has been configured correctly and been authorized for use.

    #### ConnectorDisabledError

    A request has been made to a connector that has since been disabled. This may be temporary - You can contact our team to resolve the issue.

    #### ConnectorRateLimitError

    You sent too many request to a connector. These rate limits vary from connector to connector. You will need to try again later.

    #### RequestLimitError

    You have reached the number of requests included in your Free Tier Subscription. You will no be able to make further requests until this limit resets at the end of the month, or talk to us about upgrading your subscription to continue immediately.

    #### EntityNotFoundError

    You've made a request for a resource or route that does not exist. Verify your path parameters or any identifiers used to fetch this resource.

    #### OAuthCredentialsNotFoundError

    When adding a connector integration that implements OAuth, both a `client_id` and `client_secret` must be provided before any authorizations can be performed. Verify the integration has been configured properly before continuing.

    #### IntegrationNotFoundError

    The requested connector integration could not be found associated to your `application_id`. Verify your `application_id` is correct, and that this connector has been added and configured for your application.

    #### ConnectionNotFoundError

    A valid connection could not be found associated to your `application_id`. Something _may_ have interrupted the authorization flow. You may need to start the connector authorization process again.

    #### ConnectionSettingsError

    The connector has required settings that were not supplied. Verify `connection.settings` contains all required settings for the connector to be callable.

    #### ConnectorNotFoundError

    A request was made for an unknown connector. Verify your `service_id` is spelled correctly, and that this connector is enabled for your provided `unified_api`.

    #### OAuthRedirectUriError

    A request was made either in a connector authorization flow, or attempting to revoke connector access without a valid `redirect_uri`. This is the url the user should be returned to on completion of process.

    #### OAuthInvalidStateError

    The state param is required and is used to ensure the outgoing authorization state has not been altered before the user is redirected back. It also contains required params needed to identify the connector being used. If this has been altered, the authorization will not succeed.

    #### OAuthCodeExchangeError

    When attempting to exchange the authorization code for an `access_token` during an OAuth flow, an error occurred. This may be temporary. You can reattempt authorization or contact our team to resolve the issue.

    #### OAuthConnectorError

    It seems something went wrong on the connector side. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### MappingError

    There was an error attempting to retrieve the mapping for a given attribute. We've been notified and are working to fix this issue.

    #### ConnectorMappingNotFoundError

    It seems the implementation for this connector is incomplete. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorResponseMappingNotFoundError

    We were unable to retrieve the response mapping for this connector. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorOperationMappingNotFoundError

    Connector mapping has not been implemented for the requested operation. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorWorkflowMappingError

    The composite api calls required for this operation have not been mapped entirely. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorOperationUnsupportedError

    You're attempting a call that is not supported by the connector. It's likely this operation is supported by another connector, but we're unable to implement for this one.

    #### PaginationNotSupportedError

    Pagination is not yet supported for this connector, try removing limit and/or cursor from the query. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    ## API Design

    ### API Styles and data formats

    #### REST API

    The API is organized around [REST](https://restfulapi.net/), providing simple and predictable URIs to access and modify objects. Requests support standard HTTP methods like GET, PUT, POST, and DELETE and standard status codes. JSON is returned by all API responses, including errors. In all API requests, you must set the content-type HTTP header to application/json. All API requests must be made over HTTPS. Calls made over HTTP will fail.

    ##### Available HTTP methods

    The Apideck API uses HTTP verbs to understand if you want to read (GET), delete (DELETE) or create (POST) an object. When your web application cannot do a POST or DELETE, we provide the ability to set the method through the query parameter \_method.

    ```
    POST /messages
    GET /messages
    GET /messages/{messageId}
    PATCH /messages/{messageId}
    DELETE /messages/{messageId}
    ```

    Response bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise. For some endpoints and use cases we divert from REST to provide a better developer experience.

    ### Schema

    All API requests and response bodies adhere to a common JSON format representing individual items, collections of items, links to related items and additional meta data.

    ### Meta

    Meta data can be represented as a top level member named “meta”. Any information may be provided in the meta data. It’s most common use is to return the total number of records when requesting a collection of resources.

    ### Idempotence (upcoming)

    To prevent the creation of duplicate resources, every POST method (such as one that creates a consumer record) must specify a unique value for the X-Unique-Transaction-ID header name. Uniquely identifying each unique POST request ensures that the API processes a given request once and only once.

    Uniquely identifying new resource-creation POSTs is especially important when the outcome of a response is ambiguous because of a transient service interruption, such as a server-side timeout or network disruption. If a service interruption occurs, then the client application can safely retry the uniquely identified request without creating duplicate operations. (API endpoints that guarantee that every uniquely identified request is processed only once no matter how many times that uniquely identifiable request is made are described as idempotent.)

    ### Request IDs

    Each API request has an associated request identifier. You can find this value in the response headers, under Request-Id. You can also find request identifiers in the URLs of individual request logs in your Dashboard. If you need to contact us about a specific request, providing the request identifier will ensure the fastest possible resolution.

    ### Fixed field types

    #### Dates

    The dates returned by the API are all represented in UTC (ISO8601 format).

    This example `2019-11-14T00:55:31.820Z` is defined by the ISO 8601 standard. The T in the middle separates the year-month-day portion from the hour-minute-second portion. The Z on the end means UTC, that is, an offset-from-UTC of zero hours-minutes-seconds. The Z is pronounced "Zulu" per military/aviation tradition.

    The ISO 8601 standard is more modern. The formats are wisely designed to be easy to parse by machine as well as easy to read by humans across cultures.

    #### Prices and Currencies

    All prices returned by the API are represented as integer amounts in a currency’s smallest unit. For example, $5 USD would be returned as 500 (i.e, 500 cents).

    For zero-decimal currencies, amounts will still be provided as an integer but without the need to divide by 100. For example, an amount of ¥5 (JPY) would be returned as 5.

    All currency codes conform to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).

    ## Support

    If you have problems or need help with your case, you can always reach out to our Support.

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: ATS API
  version: 10.0.0
  x-apideck-api: ats
  x-apideck-sdk-support: true
  x-apisguru-categories:
  - developer_tools
  x-logo:
    url: https://developers.apideck.com/icon.png
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/apideck-libraries/openapi-specs/master/ats.yml
    version: "3.0"
  x-providerName: apideck.com
  x-serviceName: ats
  x-tags:
  - partner
externalDocs:
  description: Apideck Developer Docs
  url: https://developers.apideck.com
servers:
- url: https://unify.apideck.com
security:
- apiKey: []
tags:
- description: ""
  name: Offers
  x-apideck-model:
    $ref: '#/components/schemas/Offer'
  x-apideck-resource-id: offers
  x-apideck-upcoming: true
- description: ""
  name: Activities
  x-apideck-model:
    $ref: '#/components/schemas/AtsActivity'
  x-apideck-resource-id: activities
  x-apideck-upcoming: true
- description: ""
  name: Jobs
  x-apideck-model:
    $ref: '#/components/schemas/Job'
  x-apideck-resource-id: jobs
- description: ""
  name: Applicants
  x-apideck-model:
    $ref: '#/components/schemas/Applicant'
  x-apideck-resource-id: applicants
- description: ""
  name: Applications
  x-apideck-model:
    $ref: '#/components/schemas/Application'
  x-apideck-resource-id: applications
paths:
  /ats/applicants:
    get:
      description: List Applicants
      operationId: applicants_all
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Cursor to start from. You can find cursors for next/previous
          pages in the meta.cursors property of the response.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Number of results to return. Minimum 1, Maximum 200, Default\
          \ 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: Apply filters
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/ApplicantsFilter'
        style: deepObject
      - description: "Optional unmapped key/values that will be passed through to\
          \ downstream as query parameters. Ie: ?pass_through[search]=leads becomes\
          \ ?search=leads"
        explode: true
        in: query
        name: pass_through
        required: false
        schema:
          $ref: '#/components/schemas/PassThroughQuery'
        style: deepObject
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicantsResponse'
          description: Applicants
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: List Applicants
      tags:
      - Applicants
      x-apideck-api: ats
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.ats.applicantsAll({})
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.applicants_controller
    post:
      description: Create Applicant
      operationId: applicants_add
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Applicant'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApplicantResponse'
          description: Applicants
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Create Applicant
      tags:
      - Applicants
      x-apideck-api: ats
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            applicant: {
              position_id: '123',
              name: 'Elon Musk',
              first_name: 'Elon',
              last_name: 'Musk',
              middle_name: 'D.',
              initials: 'EM',
              birthday: '2000-08-12',
              cover_letter:
                'I submit this application to express my sincere interest in the API developer position. In the previous role, I was responsible for leadership and ...',
              photo_url: 'https://unavatar.io/elon-musk',
              headline: 'PepsiCo, Inc, Central Perk',
              title: 'CEO',
              emails: [
                {
                  id: '123',
                  email: 'elon@musk.com',
                  type: 'primary'
                }
              ],
              custom_fields: [
                {
                  id: '2389328923893298',
                  name: 'employee_level',
                  description: 'Employee Level',
                  value: 'Uses Salesforce and Marketo'
                }
              ],
              phone_numbers: [
                {
                  id: '12345',
                  country_code: '1',
                  area_code: '323',
                  number: '111-111-1111',
                  extension: '105',
                  type: 'primary'
                }
              ],
              addresses: [
                {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                }
              ],
              websites: [
                {
                  id: '12345',
                  url: 'http://example.com',
                  type: 'primary'
                }
              ],
              social_links: [
                {
                  id: '12345',
                  url: 'https://www.twitter.com/apideck',
                  type: 'twitter'
                }
              ],
              stage_id: '12345',
              recruiter_id: '12345',
              coordinator_id: '12345',
              application_ids: [
                'a0d636c6-43b3-4bde-8c70-85b707d992f4',
                'a98lfd96-43b3-4bde-8c70-85b707d992e6'
              ],
              applications: ['a0d636c6-43b3-4bde-8c70-85b707d992f4', 'a98lfd96-43b3-4bde-8c70-85b707d992e6'],
              followers: ['a0d636c6-43b3-4bde-8c70-85b707d992f4', 'a98lfd96-43b3-4bde-8c70-85b707d992e6'],
              sources: ['Job site'],
              confidential: false,
              anonymized: true,
              tags: ['New'],
              archived: false,
              owner_id: '54321',
              record_url: 'https://app.intercom.io/contacts/12345',
              custom_mappings: {},
              deleted: true
            }
          }

          try {
            const { data } = await apideck.ats.applicantsAdd(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.applicants_controller
      x-codegen-request-body-name: body
  /ats/applicants/{id}:
    delete:
      description: Delete Applicant
      operationId: applicants_delete
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteApplicantResponse'
          description: Applicants
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Delete Applicant
      tags:
      - Applicants
      x-apideck-api: ats
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.ats.applicantsDelete({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.applicants_controller
    get:
      description: Get Applicant
      operationId: applicants_one
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicantResponse'
          description: Applicants
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Get Applicant
      tags:
      - Applicants
      x-apideck-api: ats
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.ats.applicantsOne({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.applicants_controller
    patch:
      description: Update Applicant
      operationId: applicants_update
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Applicant'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApplicantResponse'
          description: Applicants
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Update Applicant
      tags:
      - Applicants
      x-apideck-api: ats
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            id: 'id_example',
            applicant: {
              position_id: '123',
              name: 'Elon Musk',
              first_name: 'Elon',
              last_name: 'Musk',
              middle_name: 'D.',
              initials: 'EM',
              birthday: '2000-08-12',
              cover_letter:
                'I submit this application to express my sincere interest in the API developer position. In the previous role, I was responsible for leadership and ...',
              photo_url: 'https://unavatar.io/elon-musk',
              headline: 'PepsiCo, Inc, Central Perk',
              title: 'CEO',
              emails: [
                {
                  id: '123',
                  email: 'elon@musk.com',
                  type: 'primary'
                }
              ],
              custom_fields: [
                {
                  id: '2389328923893298',
                  name: 'employee_level',
                  description: 'Employee Level',
                  value: 'Uses Salesforce and Marketo'
                }
              ],
              phone_numbers: [
                {
                  id: '12345',
                  country_code: '1',
                  area_code: '323',
                  number: '111-111-1111',
                  extension: '105',
                  type: 'primary'
                }
              ],
              addresses: [
                {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                }
              ],
              websites: [
                {
                  id: '12345',
                  url: 'http://example.com',
                  type: 'primary'
                }
              ],
              social_links: [
                {
                  id: '12345',
                  url: 'https://www.twitter.com/apideck',
                  type: 'twitter'
                }
              ],
              stage_id: '12345',
              recruiter_id: '12345',
              coordinator_id: '12345',
              application_ids: [
                'a0d636c6-43b3-4bde-8c70-85b707d992f4',
                'a98lfd96-43b3-4bde-8c70-85b707d992e6'
              ],
              applications: ['a0d636c6-43b3-4bde-8c70-85b707d992f4', 'a98lfd96-43b3-4bde-8c70-85b707d992e6'],
              followers: ['a0d636c6-43b3-4bde-8c70-85b707d992f4', 'a98lfd96-43b3-4bde-8c70-85b707d992e6'],
              sources: ['Job site'],
              confidential: false,
              anonymized: true,
              tags: ['New'],
              archived: false,
              owner_id: '54321',
              record_url: 'https://app.intercom.io/contacts/12345',
              custom_mappings: {},
              deleted: true
            }
          }

          try {
            const { data } = await apideck.ats.applicantsUpdate(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.applicants_controller
      x-codegen-request-body-name: body
  /ats/applications:
    get:
      description: List Applications
      operationId: applications_all
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Cursor to start from. You can find cursors for next/previous
          pages in the meta.cursors property of the response.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Optional unmapped key/values that will be passed through to\
          \ downstream as query parameters. Ie: ?pass_through[search]=leads becomes\
          \ ?search=leads"
        explode: true
        in: query
        name: pass_through
        required: false
        schema:
          $ref: '#/components/schemas/PassThroughQuery'
        style: deepObject
      - description: "Number of results to return. Minimum 1, Maximum 200, Default\
          \ 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationsResponse'
          description: Applications
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: List Applications
      tags:
      - Applications
      x-apideck-api: ats
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.ats.applicationsAll({})
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.applications_controller
    post:
      description: Create Application
      operationId: applications_add
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApplicationResponse'
          description: Applications
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Create Application
      tags:
      - Applications
      x-apideck-api: ats
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            application: {
              applicant_id: '12345',
              job_id: '12345',
              status: 'open',
              stage: {
                id: '12345',
                name: '12345'
              },
              custom_mappings: {}
            }
          }

          try {
            const { data } = await apideck.ats.applicationsAdd(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.applications_controller
      x-codegen-request-body-name: body
  /ats/applications/{id}:
    delete:
      description: Delete Application
      operationId: applications_delete
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteApplicationResponse'
          description: Applications
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Delete Application
      tags:
      - Applications
      x-apideck-api: ats
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.ats.applicationsDelete({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.applications_controller
    get:
      description: Get Application
      operationId: applications_one
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationResponse'
          description: Applications
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Get Application
      tags:
      - Applications
      x-apideck-api: ats
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.ats.applicationsOne({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.applications_controller
    patch:
      description: Update Application
      operationId: applications_update
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApplicationResponse'
          description: Applications
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Update Application
      tags:
      - Applications
      x-apideck-api: ats
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            id: 'id_example',
            application: {
              applicant_id: '12345',
              job_id: '12345',
              status: 'open',
              stage: {
                id: '12345',
                name: '12345'
              },
              custom_mappings: {}
            }
          }

          try {
            const { data } = await apideck.ats.applicationsUpdate(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.applications_controller
      x-codegen-request-body-name: body
  /ats/jobs:
    get:
      description: List Jobs
      operationId: jobs_all
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Cursor to start from. You can find cursors for next/previous
          pages in the meta.cursors property of the response.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Number of results to return. Minimum 1, Maximum 200, Default\
          \ 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: "Optional unmapped key/values that will be passed through to\
          \ downstream as query parameters. Ie: ?pass_through[search]=leads becomes\
          \ ?search=leads"
        explode: true
        in: query
        name: pass_through
        required: false
        schema:
          $ref: '#/components/schemas/PassThroughQuery'
        style: deepObject
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobsResponse'
          description: Jobs
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: List Jobs
      tags:
      - Jobs
      x-apideck-api: ats
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.ats.jobsAll({})
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.jobs_controller
  /ats/jobs/{id}:
    get:
      description: Get Job
      operationId: jobs_one
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobResponse'
          description: Jobs
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Get Job
      tags:
      - Jobs
      x-apideck-api: ats
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.ats.jobsOne({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.jobs_controller
components:
  parameters:
    applicantsFilter:
      description: Apply filters
      explode: true
      in: query
      name: filter
      required: false
      schema:
        $ref: '#/components/schemas/ApplicantsFilter'
      style: deepObject
    applicationId:
      description: The ID of your Unify application
      example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
      explode: false
      in: header
      name: x-apideck-app-id
      required: true
      schema:
        type: string
      style: simple
    consumerId:
      description: ID of the consumer which you want to get or push data from
      explode: false
      in: header
      name: x-apideck-consumer-id
      required: true
      schema:
        type: string
      style: simple
    cursor:
      description: Cursor to start from. You can find cursors for next/previous pages
        in the meta.cursors property of the response.
      explode: true
      in: query
      name: cursor
      required: false
      schema:
        nullable: true
        type: string
      style: form
    fields:
      description: "The 'fields' parameter allows API users to specify the fields\
        \ they want to include in the API response. If this parameter is not present,\
        \ the API will return all available fields. If this parameter is present,\
        \ only the fields specified in the comma-separated string will be included\
        \ in the response. Nested properties can also be requested by using a dot\
        \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
        \ />In the example above, the response will only include the fields \"name\"\
        , \"email\" and \"addresses.city\". If any other fields are available, they\
        \ will be excluded."
      example: "id,updated_at"
      explode: true
      in: query
      name: fields
      required: false
      schema:
        nullable: true
        type: string
      style: form
    id:
      description: ID of the record you are acting upon.
      explode: false
      in: path
      name: id
      required: true
      schema:
        type: string
      style: simple
    limit:
      description: "Number of results to return. Minimum 1, Maximum 200, Default 20"
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 20
        maximum: 200
        minimum: 1
        type: integer
      style: form
    passThrough:
      description: "Optional unmapped key/values that will be passed through to downstream\
        \ as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads"
      explode: true
      in: query
      name: pass_through
      required: false
      schema:
        $ref: '#/components/schemas/PassThroughQuery'
      style: deepObject
    raw:
      description: Include raw response. Mostly used for debugging purposes
      explode: true
      in: query
      name: raw
      required: false
      schema:
        default: false
        type: boolean
      style: form
    serviceId:
      description: "Provide the service id you want to call (e.g., pipedrive). Only\
        \ needed when a consumer has activated multiple integrations for a Unified\
        \ API."
      explode: false
      in: header
      name: x-apideck-service-id
      required: false
      schema:
        type: string
      style: simple
  responses:
    Applicant:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Applicant'
      description: Applicants
    AtsActivity:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AtsActivity'
      description: Activities
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestResponse'
      description: Bad Request
    CreateApplicantResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateApplicantResponse'
      description: Applicants
    CreateApplicationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateApplicationResponse'
      description: Applications
    CreateJobResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateJobResponse'
      description: Jobs
    DeleteApplicantResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteApplicantResponse'
      description: Applicants
    DeleteApplicationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteApplicationResponse'
      description: Applications
    DeleteJobResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteJobResponse'
      description: Jobs
    GetApplicantResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetApplicantResponse'
      description: Applicants
    GetApplicantsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetApplicantsResponse'
      description: Applicants
    GetApplicationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetApplicationResponse'
      description: Applications
    GetApplicationsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetApplicationsResponse'
      description: Applications
    GetJobResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetJobResponse'
      description: Jobs
    GetJobsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetJobsResponse'
      description: Jobs
    Job:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Job'
      description: Jobs
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundResponse'
      description: The specified resource was not found
    NotImplementedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotImplementedResponse'
      description: Not Implemented
    Offer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Offer'
      description: Offers
    PaymentRequiredResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentRequiredResponse'
      description: Payment Required
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TooManyRequestsResponse'
      description: Too Many Requests
    UnauthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedResponse'
      description: Unauthorized
    UnexpectedErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnexpectedErrorResponse'
      description: Unexpected error
    UnprocessableResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnprocessableResponse'
      description: Unprocessable
    UpdateApplicantResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateApplicantResponse'
      description: Applicants
    UpdateApplicationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateApplicationResponse'
      description: Applications
    UpdateJobResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateJobResponse'
      description: Jobs
  schemas:
    Address:
      additionalProperties: false
      example:
        country: US
        contact_name: Elon Musk
        website: https://elonmusk.com
        line4: delivery instructions
        notes: Address notes or delivery instructions.
        string: "25 Spring Street, Blackburn, VIC 3130"
        city: San Francisco
        latitude: "40.759211"
        county: Santa Clara
        type: primary
        row_version: 1-12345
        name: HQ US
        street_number: "25"
        phone_number: 111-111-1111
        id: "123"
        salutation: Mr
        state: CA
        fax: 122-111-1111
        line3: "Suite #"
        postal_code: "94104"
        line2: "apt #"
        email: elon@musk.com
        line1: Main street
        longitude: "-73.984638"
      properties:
        city:
          description: Name of city.
          example: San Francisco
          nullable: true
          title: city
          type: string
        contact_name:
          description: Name of the contact person at the address
          example: Elon Musk
          nullable: true
          title: contact_name
          type: string
        country:
          description: country code according to ISO 3166-1 alpha-2.
          example: US
          nullable: true
          title: country
          type: string
        county:
          description: "Address field that holds a sublocality, such as a county"
          example: Santa Clara
          nullable: true
          title: county
          type: string
        email:
          description: Email address of the address
          example: elon@musk.com
          nullable: true
          title: email
          type: string
        fax:
          description: Fax number of the address
          example: 122-111-1111
          nullable: true
          title: fax
          type: string
        id:
          description: Unique identifier for the address.
          example: "123"
          nullable: true
          title: id
          type: string
        latitude:
          description: Latitude of the address
          example: "40.759211"
          nullable: true
          title: latitude
          type: string
        line1:
          description: "Line 1 of the address e.g. number, street, suite, apt #, etc."
          example: Main street
          nullable: true
          title: line1
          type: string
        line2:
          description: Line 2 of the address
          example: "apt #"
          nullable: true
          title: line2
          type: string
        line3:
          description: Line 3 of the address
          example: "Suite #"
          nullable: true
          title: line3
          type: string
        line4:
          description: Line 4 of the address
          example: delivery instructions
          nullable: true
          title: line4
          type: string
        longitude:
          description: Longitude of the address
          example: "-73.984638"
          nullable: true
          title: longitude
          type: string
        name:
          description: The name of the address.
          example: HQ US
          nullable: true
          title: name
          type: string
        notes:
          description: Additional notes
          example: Address notes or delivery instructions.
          nullable: true
          title: Notes
          type: string
        phone_number:
          description: Phone number of the address
          example: 111-111-1111
          nullable: true
          title: phone_number
          type: string
        postal_code:
          description: Zip code or equivalent.
          example: "94104"
          nullable: true
          title: postal_code
          type: string
        row_version:
          description: A binary value used to detect updates to a object and prevent
            data conflicts. It is incremented each time an update is made to the object.
          example: 1-12345
          nullable: true
          title: Row version
          type: string
        salutation:
          description: Salutation of the contact person at the address
          example: Mr
          nullable: true
          title: salutation
          type: string
        state:
          description: Name of state
          example: CA
          nullable: true
          title: state
          type: string
        street_number:
          description: Street number
          example: "25"
          nullable: true
          title: street_number
          type: string
        string:
          description: The address string. Some APIs don't provide structured address
            data.
          example: "25 Spring Street, Blackburn, VIC 3130"
          nullable: true
          title: string
          type: string
        type:
          description: The type of address.
          enum:
          - primary
          - secondary
          - home
          - office
          - shipping
          - billing
          - other
          example: primary
          nullable: true
          title: type
          type: string
          x-apideck-enum-id: addresses.type
        website:
          description: Website of the address
          example: https://elonmusk.com
          nullable: true
          title: website
          type: string
      title: Address
      type: object
      x-apideck-schema-id: Address
      x-apideck-weights:
        city: high
        contact_name: edge-case
        country: high
        county: edge-case
        email: edge-case
        fax: edge-case
        id: edge-case
        latitude: low
        line1: high
        line2: low
        line3: edge-case
        line4: edge-case
        longitude: low
        name: edge-case
        phone_number: edge-case
        postal_code: high
        row_version: edge-case
        salutation: edge-case
        state: high
        street_number: low
        string: low
        type: critical
        website: edge-case
    Anonymized:
      example: true
      title: Anonymized
      type: boolean
    Applicant:
      additionalProperties: false
      example:
        birthday: 2000-08-12
        addresses:
        - country: US
          contact_name: Elon Musk
          website: https://elonmusk.com
          line4: delivery instructions
          notes: Address notes or delivery instructions.
          string: "25 Spring Street, Blackburn, VIC 3130"
          city: San Francisco
          latitude: "40.759211"
          county: Santa Clara
          type: primary
          row_version: 1-12345
          name: HQ US
          street_number: "25"
          phone_number: 111-111-1111
          id: "123"
          salutation: Mr
          state: CA
          fax: 122-111-1111
          line3: "Suite #"
          postal_code: "94104"
          line2: "apt #"
          email: elon@musk.com
          line1: Main street
          longitude: "-73.984638"
        - country: US
          contact_name: Elon Musk
          website: https://elonmusk.com
          line4: delivery instructions
          notes: Address notes or delivery instructions.
          string: "25 Spring Street, Blackburn, VIC 3130"
          city: San Francisco
          latitude: "40.759211"
          county: Santa Clara
          type: primary
          row_version: 1-12345
          name: HQ US
          street_number: "25"
          phone_number: 111-111-1111
          id: "123"
          salutation: Mr
          state: CA
          fax: 122-111-1111
          line3: "Suite #"
          postal_code: "94104"
          line2: "apt #"
          email: elon@musk.com
          line1: Main street
          longitude: "-73.984638"
        sources:
        - Job site
        owner_id: "54321"
        social_links:
        - id: "12345"
          type: twitter
          url: https://www.twitter.com/apideck
        - id: "12345"
          type: twitter
          url: https://www.twitter.com/apideck
        anonymized: true
        created_at: 2020-09-30T07:43:32Z
        deleted_by: "12345"
        title: CEO
        custom_mappings: "{}"
        emails:
        - id: "123"
          type: primary
          email: elon@musk.com
        - id: "123"
          type: primary
          email: elon@musk.com
        archived: false
        cover_letter: "I submit this application to express my sincere interest in\
          \ the API developer position. In the previous role, I was responsible for\
          \ leadership and ..."
        record_url: https://app.intercom.io/contacts/12345
        updated_at: 2020-09-30T07:43:32Z
        id: "12345"
        photo_url: https://unavatar.io/elon-musk
        first_name: Elon
        headline: "PepsiCo, Inc, Central Perk"
        confidential: false
        rejected_at: 2020-09-30T07:43:32Z
        application_ids:
        - a0d636c6-43b3-4bde-8c70-85b707d992f4
        - a98lfd96-43b3-4bde-8c70-85b707d992e6
        custom_fields:
        - name: employee_level
          description: Employee Level
          id: "2389328923893298"
          value: Uses Salesforce and Marketo
        - name: employee_level
          description: Employee Level
          id: "2389328923893298"
          value: Uses Salesforce and Marketo
        initials: EM
        stage_id: "12345"
        last_name: Musk
        sourced_by: "12345"
        recruiter_id: "12345"
        middle_name: D.
        created_by: "12345"
        deleted_at: 2020-09-30T07:43:32Z
        tags:
        - New
        phone_numbers:
        - country_code: "1"
          number: 111-111-1111
          extension: "105"
          area_code: "323"
          id: "12345"
          type: primary
        - country_code: "1"
          number: 111-111-1111
          extension: "105"
          area_code: "323"
          id: "12345"
          type: primary
        deleted: true
        followers:
        - a0d636c6-43b3-4bde-8c70-85b707d992f4
        - a98lfd96-43b3-4bde-8c70-85b707d992e6
        last_interaction_at: 2020-09-30T07:43:32Z
        cv_url: https://recruitee-main.s3.eu-central-1.amazonaws.com/candidates/36615291/pdf_cv_38swhu4w42k1.pdf?response-content-disposition=inline&response-content-type=application%2Fpdf&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAQYHB7CA5RLR4Y3ON%2F20220514%2Feu-central-1%2Fs3%2Faws4_request&X-Amz-Date=20220514T235654Z&X-Amz-Expires=36000&X-Amz-SignedHeaders=host&X-Amz-Signature=72c0621f5976db75b54de487eb821a8e73480d7f2a6a4a9713ab997944b0561f
        name: Elon Musk
        updated_by: "12345"
        websites:
        - id: "12345"
          type: primary
          url: http://example.com
        - id: "12345"
          type: primary
          url: http://example.com
        source_id: "12345"
        coordinator_id: "12345"
        job_url: https://democompany.recruitee.com/o/example-talent-pool
        applications:
        - a0d636c6-43b3-4bde-8c70-85b707d992f4
        - a98lfd96-43b3-4bde-8c70-85b707d992e6
        position_id: "123"
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/Address'
          title: addresses
          type: array
        anonymized:
          example: true
          title: Anonymized
          type: boolean
        application_ids:
          example:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          - a98lfd96-43b3-4bde-8c70-85b707d992e6
          items:
            type: string
          nullable: true
          title: application_ids
          type: array
        applications:
          example:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          - a98lfd96-43b3-4bde-8c70-85b707d992e6
          items:
            type: string
          nullable: true
          title: applications
          type: array
        archived:
          example: false
          nullable: true
          title: Archived
          type: boolean
        birthday:
          description: The date of birth of the person.
          example: 2000-08-12
          format: date
          nullable: true
          title: Birth Date
          type: string
        confidential:
          example: false
          title: Confidential
          type: boolean
        coordinator_id:
          example: "12345"
          title: Coordinator ID
          type: string
        cover_letter:
          example: "I submit this application to express my sincere interest in the\
            \ API developer position. In the previous role, I was responsible for\
            \ leadership and ..."
          title: Cover letter
          type: string
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        custom_fields:
          items:
            $ref: '#/components/schemas/CustomField'
          title: custom_fields
          type: array
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: custom_mappings
          type: object
          x-apideck-schema-id: CustomMappings
        cv_url:
          example: https://recruitee-main.s3.eu-central-1.amazonaws.com/candidates/36615291/pdf_cv_38swhu4w42k1.pdf?response-content-disposition=inline&response-content-type=application%2Fpdf&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAQYHB7CA5RLR4Y3ON%2F20220514%2Feu-central-1%2Fs3%2Faws4_request&X-Amz-Date=20220514T235654Z&X-Amz-Expires=36000&X-Amz-SignedHeaders=host&X-Amz-Signature=72c0621f5976db75b54de487eb821a8e73480d7f2a6a4a9713ab997944b0561f
          readOnly: true
          title: CV URL
          type: string
        deleted:
          description: Flag to indicate if the object is deleted.
          example: true
          nullable: true
          title: Deleted
          type: boolean
        deleted_at:
          description: The time at which the object was deleted.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Deleted at (timestamp)
          type: string
        deleted_by:
          description: The user who deleted the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Deleted by
          type: string
        emails:
          items:
            $ref: '#/components/schemas/Email'
          title: emails
          type: array
        first_name:
          description: The first name of the person.
          example: Elon
          nullable: true
          title: First name
          type: string
        followers:
          example:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          - a98lfd96-43b3-4bde-8c70-85b707d992e6
          items:
            type: string
          nullable: true
          title: followers
          type: array
        headline:
          description: Typically a list of previous companies where the contact has
            worked or schools that the contact has attended
          example: "PepsiCo, Inc, Central Perk"
          title: Headline
          type: string
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        initials:
          description: "The initials of the person, usually derived from their first,\
            \ middle, and last names."
          example: EM
          nullable: true
          title: Initials
          type: string
        job_url:
          example: https://democompany.recruitee.com/o/example-talent-pool
          nullable: true
          readOnly: true
          title: Job URL
          type: string
        last_interaction_at:
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Last interaction at (timestamp)
          type: string
        last_name:
          description: The last name of the person.
          example: Musk
          nullable: true
          title: Last name
          type: string
        middle_name:
          description: Middle name of the person.
          example: D.
          nullable: true
          title: Middle name
          type: string
        name:
          description: The name of an applicant.
          example: Elon Musk
          title: name
          type: string
        owner_id:
          example: "54321"
          nullable: true
          title: Owner ID
          type: string
        phone_numbers:
          items:
            $ref: '#/components/schemas/PhoneNumber'
          title: phone_numbers
          type: array
        photo_url:
          description: The URL of the photo of a person.
          example: https://unavatar.io/elon-musk
          nullable: true
          title: Photo URL
          type: string
        position_id:
          description: The PositionId the applicant applied for.
          example: "123"
          title: position_id
          type: string
        record_url:
          example: https://app.intercom.io/contacts/12345
          nullable: true
          title: Record URL
          type: string
        recruiter_id:
          example: "12345"
          title: Recruiter ID
          type: string
        rejected_at:
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Rejected at (timestamp)
          type: string
        social_links:
          items:
            $ref: '#/components/schemas/Applicant_social_links_inner'
          title: social_links
          type: array
        source_id:
          example: "12345"
          readOnly: true
          title: Source ID
          type: string
        sourced_by:
          example: "12345"
          nullable: true
          readOnly: true
          title: Sourced by
          type: string
        sources:
          example:
          - Job site
          items:
            type: string
          nullable: true
          title: sources
          type: array
        stage_id:
          example: "12345"
          title: Stage
          type: string
        tags:
          example:
          - New
          items:
            type: string
          nullable: true
          title: tags
          type: array
          x-apideck-schema-id: Tags
        title:
          description: The job title of the person.
          example: CEO
          nullable: true
          title: Job title
          type: string
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
        websites:
          items:
            $ref: '#/components/schemas/Applicant_websites_inner'
          title: websites
          type: array
      title: Applicant
      type: object
      x-apideck-schema-id: Applicant
      x-apideck-weights:
        addresses: high
        anonymized: low
        applications: medium
        archived: medium
        birthday: high
        confidential: medium
        coordinator_id: medium
        cover_letter: low
        created_at: medium
        created_by: edge-case
        custom_fields: edge-case
        cv_url: high
        deleted: medium
        deleted_at: medium
        deleted_by: medium
        emails: high
        first_name: high
        followers: low
        headline: medium
        id: critical
        initials: low
        job_url: medium
        last_interaction_at: medium
        last_name: high
        middle_name: low
        name: critical
        owner_id: high
        phone_numbers: high
        photo_url: medium
        position_id: medium
        record_url: low
        recruiter_id: medium
        rejected_at: high
        social_links: medium
        source_id: low
        sourced_by: high
        sources: low
        stage_id: low
        tags: low
        title: high
        updated_at: medium
        updated_by: edge-case
        websites: medium
    ApplicantsFilter:
      additionalProperties: false
      example:
        job_id: "1234"
      properties:
        job_id:
          description: Id of the job to filter on
          example: "1234"
          type: string
      type: object
      x-apideck-schema-id: ApplicantsFilter
    Application:
      additionalProperties: false
      example:
        applicant_id: "12345"
        stage:
          name: "12345"
          id: "12345"
        updated_at: 2020-09-30T07:43:32Z
        job_id: "12345"
        updated_by: "12345"
        created_at: 2020-09-30T07:43:32Z
        id: "12345"
        created_by: "12345"
        custom_mappings: "{}"
        status: open
      properties:
        applicant_id:
          example: "12345"
          nullable: true
          title: Applicant ID
          type: string
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: custom_mappings
          type: object
          x-apideck-schema-id: CustomMappings
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        job_id:
          example: "12345"
          nullable: true
          title: Job ID
          type: string
        stage:
          $ref: '#/components/schemas/Application_stage'
        status:
          enum:
          - open
          - rejected
          - hired
          - converted
          - other
          example: open
          nullable: true
          title: Status
          type: string
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
      required:
      - applicant_id
      - job_id
      title: Application
      type: object
      x-apideck-weights:
        applicant_id: critical
        created_at: medium
        created_by: edge-case
        id: high
        job_id: critical
        stage: high
        status: high
        updated_at: medium
        updated_by: edge-case
    Archived:
      example: false
      nullable: true
      title: Archived
      type: boolean
    AtsActivity:
      additionalProperties: false
      properties:
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: custom_mappings
          type: object
          x-apideck-schema-id: CustomMappings
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
      type: object
      x-apideck-schema-id: AtsActivity
      x-apideck-weights:
        created_at: medium
        created_by: edge-case
        id: high
        updated_at: medium
        updated_by: edge-case
    AtsEventType:
      enum:
      - '*'
      - ats.job.created
      - ats.job.updated
      - ats.job.deleted
      - ats.applicant.created
      - ats.applicant.updated
      - ats.applicant.deleted
      - ats.application.created
      - ats.application.updated
      - ats.application.deleted
      example: ats.job.created
      title: AtsEventType
      type: string
    AtsWebhookEvent:
      allOf:
      - properties:
          consumer_id:
            description: "Unique consumer identifier. You can freely choose a consumer\
              \ ID yourself. Most of the time, this is an ID of your internal data\
              \ model that represents a user or account in your system (for example\
              \ account:12345). If the consumer doesn't exist yet, Vault will upsert\
              \ a consumer based on your ID."
            example: test_consumer_id
            type: string
          entity_id:
            description: The service provider's ID of the entity that triggered this
              event
            example: 123456ASDF
            type: string
          entity_type:
            description: The type entity that triggered this event
            example: Company
            type: string
          entity_url:
            description: The url to retrieve entity detail.
            example: https://unify.apideck.com/crm/contacts/123456
            type: string
          event_id:
            description: Unique reference to this request event
            example: 9755c355-56c3-4a2f-a2da-86ff4411fccb
            type: string
          execution_attempt:
            description: The current count this request event has been attempted
            example: 2
            type: number
          occurred_at:
            description: ISO Datetime for when the original event occurred
            example: 2021-10-01T03:14:55.419Z
            type: string
          service_id:
            description: Service provider identifier
            example: close
            type: string
          unified_api:
            description: Name of Apideck Unified API
            enum:
            - accounting
            - ats
            - calendar
            - crm
            - csp
            - customer-support
            - ecommerce
            - email
            - email-marketing
            - expense-management
            - file-storage
            - form
            - hris
            - lead
            - payroll
            - pos
            - procurement
            - project-management
            - script
            - sms
            - spreadsheet
            - team-messaging
            - issue-tracking
            - time-registration
            - transactional-email
            - vault
            - data-warehouse
            example: crm
            type: string
            x-apideck-enum-id: unified_api
        type: object
        x-apideck-schema-id: WebhookEvent
      - properties:
          event_type:
            $ref: '#/components/schemas/AtsEventType'
        type: object
      x-sdk-exclude: true
    BadRequestResponse:
      example:
        ref: https://developers.apideck.com/errors#requestvalidationerror
        type_name: RequestValidationError
        status_code: 400
        detail: Missing property foobar
        error: Bad Request
        message: Invalid Params
      properties:
        detail:
          $ref: '#/components/schemas/BadRequestResponse_detail'
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1
            standard (RFC 7231)
          example: Bad Request
          title: error
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Invalid Params
          title: message
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#requestvalidationerror
          title: ref
          type: string
        status_code:
          description: HTTP status code
          example: 400
          title: status_code
          type: number
        type_name:
          description: The type of error returned
          example: RequestValidationError
          title: type_name
          type: string
      title: BadRequestResponse
      type: object
      x-apideck-schema-id: BadRequest
    Code:
      description: The code of the job.
      example: 123-OC
      title: Code
      type: string
    CreateApplicantResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: Applicants
        service: lever
        operation: add
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: add
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: Applicants
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: lever
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: CreateApplicantResponse
      type: object
    CreateApplicationResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: Applications
        service: sap-successfactors
        operation: add
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: add
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: Applications
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: sap-successfactors
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: CreateApplicationResponse
      type: object
    CreateJobResponse:
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: add
          type: string
        resource:
          description: Unified API resource name
          example: Jobs
          type: string
        service:
          description: Apideck ID of service provider
          example: sage-hr
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      type: object
      x-apideck-schema-id: CreateJobResponse
    CreatedAt:
      description: The date and time when the object was created.
      example: 2020-09-30T07:43:32Z
      format: date-time
      nullable: true
      readOnly: true
      title: Created at (timestamp)
      type: string
    CreatedBy:
      description: The user who created the object.
      example: "12345"
      nullable: true
      readOnly: true
      title: Created by
      type: string
    Currency:
      description: "Indicates the associated currency for an amount of money. Values\
        \ correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
      enum:
      - UNKNOWN_CURRENCY
      - AED
      - AFN
      - ALL
      - AMD
      - ANG
      - AOA
      - ARS
      - AUD
      - AWG
      - AZN
      - BAM
      - BBD
      - BDT
      - BGN
      - BHD
      - BIF
      - BMD
      - BND
      - BOB
      - BOV
      - BRL
      - BSD
      - BTN
      - BWP
      - BYR
      - BZD
      - CAD
      - CDF
      - CHE
      - CHF
      - CHW
      - CLF
      - CLP
      - CNY
      - COP
      - COU
      - CRC
      - CUC
      - CUP
      - CVE
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EGP
      - ERN
      - ETB
      - EUR
      - FJD
      - FKP
      - GBP
      - GEL
      - GHS
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - INR
      - IQD
      - IRR
      - ISK
      - JMD
      - JOD
      - JPY
      - KES
      - KGS
      - KHR
      - KMF
      - KPW
      - KRW
      - KWD
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - LTL
      - LVL
      - LYD
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MRO
      - MUR
      - MVR
      - MWK
      - MXN
      - MXV
      - MYR
      - MZN
      - NAD
      - NGN
      - NIO
      - NOK
      - NPR
      - NZD
      - OMR
      - PAB
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PYG
      - QAR
      - RON
      - RSD
      - RUB
      - RWF
      - SAR
      - SBD
      - SCR
      - SDG
      - SEK
      - SGD
      - SHP
      - SLL
      - SOS
      - SRD
      - SSP
      - STD
      - SVC
      - SYP
      - SZL
      - THB
      - TJS
      - TMT
      - TND
      - TOP
      - TRC
      - TRY
      - TTD
      - TWD
      - TZS
      - UAH
      - UGX
      - USD
      - USN
      - USS
      - UYI
      - UYU
      - UZS
      - VEF
      - VND
      - VUV
      - WST
      - XAF
      - XAG
      - XAU
      - XBA
      - XBB
      - XBC
      - XBD
      - XCD
      - XDR
      - XOF
      - XPD
      - XPF
      - XPT
      - XTS
      - XXX
      - YER
      - ZAR
      - ZMK
      - ZMW
      - BTC
      - ETH
      example: USD
      nullable: true
      title: Currency
      type: string
      x-apideck-enum-coverage-ignore: true
      x-apideck-enum-id: currencies
      x-enum-elements:
      - description: Unknown currency
        name: UNKNOWN_CURRENCY
      - description: United Arab Emirates dirham
        name: AED
      - description: Afghan afghani
        name: AFN
      - description: Albanian lek
        name: ALL
      - description: Armenian dram
        name: AMD
      - description: Netherlands Antillean guilder
        name: ANG
      - description: Angolan kwanza
        name: AOA
      - description: Argentine peso
        name: ARS
      - description: Australian dollar
        name: AUD
      - description: Aruban florin
        name: AWG
      - description: Azerbaijani manat
        name: AZN
      - description: Bosnia and Herzegovina convertible mark
        name: BAM
      - description: Barbados dollar
        name: BBD
      - description: Bangladeshi taka
        name: BDT
      - description: Bulgarian lev
        name: BGN
      - description: Bahraini dinar
        name: BHD
      - description: Burundian franc
        name: BIF
      - description: Bermudian dollar
        name: BMD
      - description: Brunei dollar
        name: BND
      - description: Boliviano
        name: BOB
      - description: Bolivian Mvdol
        name: BOV
      - description: Brazilian real
        name: BRL
      - description: Bahamian dollar
        name: BSD
      - description: Bhutanese ngultrum
        name: BTN
      - description: Botswana pula
        name: BWP
      - description: Belarusian ruble
        name: BYR
      - description: Belize dollar
        name: BZD
      - description: Canadian dollar
        name: CAD
      - description: Congolese franc
        name: CDF
      - description: WIR Euro
        name: CHE
      - description: Swiss franc
        name: CHF
      - description: WIR Franc
        name: CHW
      - description: Unidad de Fomento
        name: CLF
      - description: Chilean peso
        name: CLP
      - description: Chinese yuan
        name: CNY
      - description: Colombian peso
        name: COP
      - description: Unidad de Valor Real
        name: COU
      - description: Costa Rican colon
        name: CRC
      - description: Cuban convertible peso
        name: CUC
      - description: Cuban peso
        name: CUP
      - description: Cape Verdean escudo
        name: CVE
      - description: Czech koruna
        name: CZK
      - description: Djiboutian franc
        name: DJF
      - description: Danish krone
        name: DKK
      - description: Dominican peso
        name: DOP
      - description: Algerian dinar
        name: DZD
      - description: Egyptian pound
        name: EGP
      - description: Eritrean nakfa
        name: ERN
      - description: Ethiopian birr
        name: ETB
      - description: Euro
        name: EUR
      - description: Fiji dollar
        name: FJD
      - description: Falkland Islands pound
        name: FKP
      - description: Pound sterling
        name: GBP
      - description: Georgian lari
        name: GEL
      - description: Ghanaian cedi
        name: GHS
      - description: Gibraltar pound
        name: GIP
      - description: Gambian dalasi
        name: GMD
      - description: Guinean franc
        name: GNF
      - description: Guatemalan quetzal
        name: GTQ
      - description: Guyanese dollar
        name: GYD
      - description: Hong Kong dollar
        name: HKD
      - description: Honduran lempira
        name: HNL
      - description: Croatian kuna
        name: HRK
      - description: Haitian gourde
        name: HTG
      - description: Hungarian forint
        name: HUF
      - description: Indonesian rupiah
        name: IDR
      - description: Israeli new shekel
        name: ILS
      - description: Indian rupee
        name: INR
      - description: Iraqi dinar
        name: IQD
      - description: Iranian rial
        name: IRR
      - description: Icelandic króna
        name: ISK
      - description: Jamaican dollar
        name: JMD
      - description: Jordanian dinar
        name: JOD
      - description: Japanese yen
        name: JPY
      - description: Kenyan shilling
        name: KES
      - description: Kyrgyzstani som
        name: KGS
      - description: Cambodian riel
        name: KHR
      - description: Comoro franc
        name: KMF
      - description: North Korean won
        name: KPW
      - description: South Korean won
        name: KRW
      - description: Kuwaiti dinar
        name: KWD
      - description: Cayman Islands dollar
        name: KYD
      - description: Kazakhstani tenge
        name: KZT
      - description: Lao kip
        name: LAK
      - description: Lebanese pound
        name: LBP
      - description: Sri Lankan rupee
        name: LKR
      - description: Liberian dollar
        name: LRD
      - description: Lesotho loti
        name: LSL
      - description: Lithuanian litas
        name: LTL
      - description: Latvian lats
        name: LVL
      - description: Libyan dinar
        name: LYD
      - description: Moroccan dirham
        name: MAD
      - description: Moldovan leu
        name: MDL
      - description: Malagasy ariary
        name: MGA
      - description: Macedonian denar
        name: MKD
      - description: Myanmar kyat
        name: MMK
      - description: Mongolian tögrög
        name: MNT
      - description: Macanese pataca
        name: MOP
      - description: Mauritanian ouguiya
        name: MRO
      - description: Mauritian rupee
        name: MUR
      - description: Maldivian rufiyaa
        name: MVR
      - description: Malawian kwacha
        name: MWK
      - description: Mexican peso
        name: MXN
      - description: Mexican Unidad de Inversion
        name: MXV
      - description: Malaysian ringgit
        name: MYR
      - description: Mozambican metical
        name: MZN
      - description: Namibian dollar
        name: NAD
      - description: Nigerian naira
        name: NGN
      - description: Nicaraguan córdoba
        name: NIO
      - description: Norwegian krone
        name: NOK
      - description: Nepalese rupee
        name: NPR
      - description: New Zealand dollar
        name: NZD
      - description: Omani rial
        name: OMR
      - description: Panamanian balboa
        name: PAB
      - description: Peruvian sol
        name: PEN
      - description: Papua New Guinean kina
        name: PGK
      - description: Philippine peso
        name: PHP
      - description: Pakistani rupee
        name: PKR
      - description: Polish złoty
        name: PLN
      - description: Paraguayan guaraní
        name: PYG
      - description: Qatari riyal
        name: QAR
      - description: Romanian leu
        name: RON
      - description: Serbian dinar
        name: RSD
      - description: Russian ruble
        name: RUB
      - description: Rwandan franc
        name: RWF
      - description: Saudi riyal
        name: SAR
      - description: Solomon Islands dollar
        name: SBD
      - description: Seychelles rupee
        name: SCR
      - description: Sudanese pound
        name: SDG
      - description: Swedish krona
        name: SEK
      - description: Singapore dollar
        name: SGD
      - description: Saint Helena pound
        name: SHP
      - description: Sierra Leonean leone
        name: SLL
      - description: Somali shilling
        name: SOS
      - description: Surinamese dollar
        name: SRD
      - description: South Sudanese pound
        name: SSP
      - description: São Tomé and Príncipe dobra
        name: STD
      - description: Salvadoran colón
        name: SVC
      - description: Syrian pound
        name: SYP
      - description: Swazi lilangeni
        name: SZL
      - description: Thai baht
        name: THB
      - description: Tajikstani somoni
        name: TJS
      - description: Turkmenistan manat
        name: TMT
      - description: Tunisian dinar
        name: TND
      - description: Tongan pa'anga
        name: TOP
      - description: Turkish lira
        name: TRY
      - description: Trinidad and Tobago dollar
        name: TTD
      - description: New Taiwan dollar
        name: TWD
      - description: Tanzanian shilling
        name: TZS
      - description: Ukrainian hryvnia
        name: UAH
      - description: Ugandan shilling
        name: UGX
      - description: United States dollar
        name: USD
      - description: United States dollar (next day)
        name: USN
      - description: United States dollar (same day)
        name: USS
      - description: Uruguay Peso en Unidedades Indexadas
        name: UYI
      - description: Uruguyan peso
        name: UYU
      - description: Uzbekistan som
        name: UZS
      - description: Venezuelan bolívar soberano
        name: VEF
      - description: Vietnamese đồng
        name: VND
      - description: Vanuatu vatu
        name: VUV
      - description: Samoan tala
        name: WST
      - description: CFA franc BEAC
        name: XAF
      - description: Silver
        name: XAG
      - description: Gold
        name: XAU
      - description: European Composite Unit
        name: XBA
      - description: European Monetary Unit
        name: XBB
      - description: European Unit of Account 9
        name: XBC
      - description: European Unit of Account 17
        name: XBD
      - description: East Caribbean dollar
        name: XCD
      - description: Special drawing rights (International Monetary Fund)
        name: XDR
      - description: CFA franc BCEAO
        name: XOF
      - description: Palladium
        name: XPD
      - description: CFP franc
        name: XPF
      - description: Platinum
        name: XPT
      - description: Code reserved for testing
        name: XTS
      - description: No currency
        name: XXX
      - description: Yemeni rial
        name: YER
      - description: South African rand
        name: ZAR
      - description: Zambian kwacha
        name: ZMK
      - description: Zambian kwacha
        name: ZMW
      - description: Bitcoin
        name: BTC
      - description: Ether
        name: ETH
    CustomField:
      additionalProperties: false
      example:
        name: employee_level
        description: Employee Level
        id: "2389328923893298"
        value: Uses Salesforce and Marketo
      properties:
        description:
          description: More information about the custom field
          example: Employee Level
          nullable: true
          title: Description
          type: string
        id:
          description: Unique identifier for the custom field.
          example: "2389328923893298"
          nullable: true
          title: ID
          type: string
        name:
          description: Name of the custom field.
          example: employee_level
          nullable: true
          title: Name
          type: string
        value:
          $ref: '#/components/schemas/CustomField_value'
      required:
      - id
      title: CustomField
      type: object
      x-apideck-schema-id: CustomField
      x-apideck-weights:
        description: edge-case
        id: critical
        name: medium
        value: critical
    CustomMappings:
      description: "When custom mappings are configured on the resource, the result\
        \ is included here."
      nullable: true
      title: custom_mappings
      type: object
      x-apideck-schema-id: CustomMappings
    DeleteApplicantResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: Applicants
        service: lever
        operation: delete
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: delete
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: Applicants
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: lever
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: DeleteApplicantResponse
      type: object
    DeleteApplicationResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: Applications
        service: sap-successfactors
        operation: delete
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: delete
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: Applications
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: sap-successfactors
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: DeleteApplicationResponse
      type: object
    DeleteJobResponse:
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: delete
          type: string
        resource:
          description: Unified API resource name
          example: Jobs
          type: string
        service:
          description: Apideck ID of service provider
          example: sage-hr
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      type: object
      x-apideck-schema-id: DeleteJobResponse
    Deleted:
      description: Flag to indicate if the object is deleted.
      example: true
      nullable: true
      title: Deleted
      type: boolean
    DeletedAt:
      description: The time at which the object was deleted.
      example: 2020-09-30T07:43:32Z
      format: date-time
      nullable: true
      readOnly: true
      title: Deleted at (timestamp)
      type: string
    DeletedBy:
      description: The user who deleted the object.
      example: "12345"
      nullable: true
      readOnly: true
      title: Deleted by
      type: string
    Department:
      additionalProperties: false
      example:
        code: "2"
        updated_at: 2020-09-30T07:43:32Z
        parent_id: "22345"
        name: R&D
        updated_by: "12345"
        created_at: 2020-09-30T07:43:32Z
        description: R&D
        id: "12345"
        created_by: "12345"
        custom_mappings: "{}"
      properties:
        code:
          example: "2"
          nullable: true
          title: Code
          type: string
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: custom_mappings
          type: object
          x-apideck-schema-id: CustomMappings
        description:
          example: R&D
          nullable: true
          title: Description
          type: string
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        name:
          description: Department name
          example: R&D
          nullable: true
          title: Name
          type: string
        parent_id:
          description: Parent ID
          example: "22345"
          nullable: true
          readOnly: true
          title: parent_id
          type: string
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
      title: Department
      type: object
      x-apideck-schema-id: Department
      x-apideck-weights:
        code: medium
        created_at: medium
        created_by: edge-case
        description: low
        id: critical
        name: critical
        parent_id: medium
        updated_at: medium
        updated_by: edge-case
    Description:
      description: A description of the object.
      example: A description
      nullable: true
      title: Description
      type: string
    Email:
      additionalProperties: false
      example:
        id: "123"
        type: primary
        email: elon@musk.com
      properties:
        email:
          description: Email address
          example: elon@musk.com
          format: email
          minLength: 1
          nullable: true
          title: email
          type: string
        id:
          description: Unique identifier for the email address
          example: "123"
          nullable: true
          title: id
          type: string
        type:
          description: Email type
          enum:
          - primary
          - secondary
          - work
          - personal
          - billing
          - other
          example: primary
          nullable: true
          title: type
          type: string
          x-apideck-enum-id: emails.type
      required:
      - email
      title: Email
      type: object
      x-apideck-schema-id: Email
      x-apideck-weights:
        email: critical
        id: edge-case
        type: critical
    GetApplicantResponse:
      example:
        status_code: 200
        data:
          birthday: 2000-08-12
          addresses:
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          sources:
          - Job site
          owner_id: "54321"
          social_links:
          - id: "12345"
            type: twitter
            url: https://www.twitter.com/apideck
          - id: "12345"
            type: twitter
            url: https://www.twitter.com/apideck
          anonymized: true
          created_at: 2020-09-30T07:43:32Z
          deleted_by: "12345"
          title: CEO
          custom_mappings: "{}"
          emails:
          - id: "123"
            type: primary
            email: elon@musk.com
          - id: "123"
            type: primary
            email: elon@musk.com
          archived: false
          cover_letter: "I submit this application to express my sincere interest\
            \ in the API developer position. In the previous role, I was responsible\
            \ for leadership and ..."
          record_url: https://app.intercom.io/contacts/12345
          updated_at: 2020-09-30T07:43:32Z
          id: "12345"
          photo_url: https://unavatar.io/elon-musk
          first_name: Elon
          headline: "PepsiCo, Inc, Central Perk"
          confidential: false
          rejected_at: 2020-09-30T07:43:32Z
          application_ids:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          - a98lfd96-43b3-4bde-8c70-85b707d992e6
          custom_fields:
          - name: employee_level
            description: Employee Level
            id: "2389328923893298"
            value: Uses Salesforce and Marketo
          - name: employee_level
            description: Employee Level
            id: "2389328923893298"
            value: Uses Salesforce and Marketo
          initials: EM
          stage_id: "12345"
          last_name: Musk
          sourced_by: "12345"
          recruiter_id: "12345"
          middle_name: D.
          created_by: "12345"
          deleted_at: 2020-09-30T07:43:32Z
          tags:
          - New
          phone_numbers:
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          deleted: true
          followers:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          - a98lfd96-43b3-4bde-8c70-85b707d992e6
          last_interaction_at: 2020-09-30T07:43:32Z
          cv_url: https://recruitee-main.s3.eu-central-1.amazonaws.com/candidates/36615291/pdf_cv_38swhu4w42k1.pdf?response-content-disposition=inline&response-content-type=application%2Fpdf&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAQYHB7CA5RLR4Y3ON%2F20220514%2Feu-central-1%2Fs3%2Faws4_request&X-Amz-Date=20220514T235654Z&X-Amz-Expires=36000&X-Amz-SignedHeaders=host&X-Amz-Signature=72c0621f5976db75b54de487eb821a8e73480d7f2a6a4a9713ab997944b0561f
          name: Elon Musk
          updated_by: "12345"
          websites:
          - id: "12345"
            type: primary
            url: http://example.com
          - id: "12345"
            type: primary
            url: http://example.com
          source_id: "12345"
          coordinator_id: "12345"
          job_url: https://democompany.recruitee.com/o/example-talent-pool
          applications:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          - a98lfd96-43b3-4bde-8c70-85b707d992e6
          position_id: "123"
        resource: Applicants
        service: lever
        operation: one
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/Applicant'
        operation:
          description: Operation performed
          example: one
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: Applicants
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: lever
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetApplicantResponse
      type: object
      x-apideck-schema-id: GetApplicantResponse
    GetApplicantsResponse:
      example:
        status_code: 200
        data:
        - birthday: 2000-08-12
          addresses:
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          sources:
          - Job site
          owner_id: "54321"
          social_links:
          - id: "12345"
            type: twitter
            url: https://www.twitter.com/apideck
          - id: "12345"
            type: twitter
            url: https://www.twitter.com/apideck
          anonymized: true
          created_at: 2020-09-30T07:43:32Z
          deleted_by: "12345"
          title: CEO
          custom_mappings: "{}"
          emails:
          - id: "123"
            type: primary
            email: elon@musk.com
          - id: "123"
            type: primary
            email: elon@musk.com
          archived: false
          cover_letter: "I submit this application to express my sincere interest\
            \ in the API developer position. In the previous role, I was responsible\
            \ for leadership and ..."
          record_url: https://app.intercom.io/contacts/12345
          updated_at: 2020-09-30T07:43:32Z
          id: "12345"
          photo_url: https://unavatar.io/elon-musk
          first_name: Elon
          headline: "PepsiCo, Inc, Central Perk"
          confidential: false
          rejected_at: 2020-09-30T07:43:32Z
          application_ids:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          - a98lfd96-43b3-4bde-8c70-85b707d992e6
          custom_fields:
          - name: employee_level
            description: Employee Level
            id: "2389328923893298"
            value: Uses Salesforce and Marketo
          - name: employee_level
            description: Employee Level
            id: "2389328923893298"
            value: Uses Salesforce and Marketo
          initials: EM
          stage_id: "12345"
          last_name: Musk
          sourced_by: "12345"
          recruiter_id: "12345"
          middle_name: D.
          created_by: "12345"
          deleted_at: 2020-09-30T07:43:32Z
          tags:
          - New
          phone_numbers:
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          deleted: true
          followers:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          - a98lfd96-43b3-4bde-8c70-85b707d992e6
          last_interaction_at: 2020-09-30T07:43:32Z
          cv_url: https://recruitee-main.s3.eu-central-1.amazonaws.com/candidates/36615291/pdf_cv_38swhu4w42k1.pdf?response-content-disposition=inline&response-content-type=application%2Fpdf&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAQYHB7CA5RLR4Y3ON%2F20220514%2Feu-central-1%2Fs3%2Faws4_request&X-Amz-Date=20220514T235654Z&X-Amz-Expires=36000&X-Amz-SignedHeaders=host&X-Amz-Signature=72c0621f5976db75b54de487eb821a8e73480d7f2a6a4a9713ab997944b0561f
          name: Elon Musk
          updated_by: "12345"
          websites:
          - id: "12345"
            type: primary
            url: http://example.com
          - id: "12345"
            type: primary
            url: http://example.com
          source_id: "12345"
          coordinator_id: "12345"
          job_url: https://democompany.recruitee.com/o/example-talent-pool
          applications:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          - a98lfd96-43b3-4bde-8c70-85b707d992e6
          position_id: "123"
        - birthday: 2000-08-12
          addresses:
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          sources:
          - Job site
          owner_id: "54321"
          social_links:
          - id: "12345"
            type: twitter
            url: https://www.twitter.com/apideck
          - id: "12345"
            type: twitter
            url: https://www.twitter.com/apideck
          anonymized: true
          created_at: 2020-09-30T07:43:32Z
          deleted_by: "12345"
          title: CEO
          custom_mappings: "{}"
          emails:
          - id: "123"
            type: primary
            email: elon@musk.com
          - id: "123"
            type: primary
            email: elon@musk.com
          archived: false
          cover_letter: "I submit this application to express my sincere interest\
            \ in the API developer position. In the previous role, I was responsible\
            \ for leadership and ..."
          record_url: https://app.intercom.io/contacts/12345
          updated_at: 2020-09-30T07:43:32Z
          id: "12345"
          photo_url: https://unavatar.io/elon-musk
          first_name: Elon
          headline: "PepsiCo, Inc, Central Perk"
          confidential: false
          rejected_at: 2020-09-30T07:43:32Z
          application_ids:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          - a98lfd96-43b3-4bde-8c70-85b707d992e6
          custom_fields:
          - name: employee_level
            description: Employee Level
            id: "2389328923893298"
            value: Uses Salesforce and Marketo
          - name: employee_level
            description: Employee Level
            id: "2389328923893298"
            value: Uses Salesforce and Marketo
          initials: EM
          stage_id: "12345"
          last_name: Musk
          sourced_by: "12345"
          recruiter_id: "12345"
          middle_name: D.
          created_by: "12345"
          deleted_at: 2020-09-30T07:43:32Z
          tags:
          - New
          phone_numbers:
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          deleted: true
          followers:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          - a98lfd96-43b3-4bde-8c70-85b707d992e6
          last_interaction_at: 2020-09-30T07:43:32Z
          cv_url: https://recruitee-main.s3.eu-central-1.amazonaws.com/candidates/36615291/pdf_cv_38swhu4w42k1.pdf?response-content-disposition=inline&response-content-type=application%2Fpdf&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAQYHB7CA5RLR4Y3ON%2F20220514%2Feu-central-1%2Fs3%2Faws4_request&X-Amz-Date=20220514T235654Z&X-Amz-Expires=36000&X-Amz-SignedHeaders=host&X-Amz-Signature=72c0621f5976db75b54de487eb821a8e73480d7f2a6a4a9713ab997944b0561f
          name: Elon Musk
          updated_by: "12345"
          websites:
          - id: "12345"
            type: primary
            url: http://example.com
          - id: "12345"
            type: primary
            url: http://example.com
          source_id: "12345"
          coordinator_id: "12345"
          job_url: https://democompany.recruitee.com/o/example-talent-pool
          applications:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          - a98lfd96-43b3-4bde-8c70-85b707d992e6
          position_id: "123"
        resource: Applicants
        meta:
          cursors:
            next: em9oby1jcm06OnBhZ2U6OjM=
            current: em9oby1jcm06OnBhZ2U6OjI=
            previous: em9oby1jcm06OnBhZ2U6OjE=
          items_on_page: 50
        service: lever
        links:
          next: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          current: https://unify.apideck.com/crm/companies
          previous: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
        operation: all
        status: OK
      properties:
        data:
          items:
            $ref: '#/components/schemas/Applicant'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
        operation:
          description: Operation performed
          example: all
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: Applicants
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: lever
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetApplicantsResponse
      type: object
      x-apideck-schema-id: GetApplicantsResponse
    GetApplicationResponse:
      example:
        status_code: 200
        data:
          applicant_id: "12345"
          stage:
            name: "12345"
            id: "12345"
          updated_at: 2020-09-30T07:43:32Z
          job_id: "12345"
          updated_by: "12345"
          created_at: 2020-09-30T07:43:32Z
          id: "12345"
          created_by: "12345"
          custom_mappings: "{}"
          status: open
        resource: Applications
        service: sap-successfactors
        operation: one
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/Application'
        operation:
          description: Operation performed
          example: one
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: Applications
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: sap-successfactors
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetApplicationResponse
      type: object
    GetApplicationsResponse:
      example:
        status_code: 200
        data:
        - applicant_id: "12345"
          stage:
            name: "12345"
            id: "12345"
          updated_at: 2020-09-30T07:43:32Z
          job_id: "12345"
          updated_by: "12345"
          created_at: 2020-09-30T07:43:32Z
          id: "12345"
          created_by: "12345"
          custom_mappings: "{}"
          status: open
        - applicant_id: "12345"
          stage:
            name: "12345"
            id: "12345"
          updated_at: 2020-09-30T07:43:32Z
          job_id: "12345"
          updated_by: "12345"
          created_at: 2020-09-30T07:43:32Z
          id: "12345"
          created_by: "12345"
          custom_mappings: "{}"
          status: open
        resource: Applications
        meta:
          cursors:
            next: em9oby1jcm06OnBhZ2U6OjM=
            current: em9oby1jcm06OnBhZ2U6OjI=
            previous: em9oby1jcm06OnBhZ2U6OjE=
          items_on_page: 50
        service: sap-successfactors
        links:
          next: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          current: https://unify.apideck.com/crm/companies
          previous: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
        operation: all
        status: OK
      properties:
        data:
          items:
            $ref: '#/components/schemas/Application'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
        operation:
          description: Operation performed
          example: all
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: Applications
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: sap-successfactors
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetApplicationsResponse
      type: object
    GetJobResponse:
      example:
        status_code: 200
        data:
          closing_date: 2020-10-30
          addresses:
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          available_to_employees: false
          code: 123-OC
          owner_id: "54321"
          closing_html: closing_html
          created_at: 2020-09-30T07:43:32Z
          description: A description
          language: EN
          experience: Director/ Vice President
          remote: true
          salary:
            min: 8000
            max: 10000
            currency: USD
            interval: year
          title: CEO
          branch:
            id: "123"
            name: HQ NY
          job_portal_url: job_portal_url
          custom_mappings: "{}"
          closing: The closing section of the job description
          record_url: https://app.intercom.io/contacts/12345
          hiring_managers:
          - "123456"
          updated_at: 2020-09-30T07:43:32Z
          employment_terms: full-time
          links:
          - type: job_portal
            url: https://app.intercom.io/contacts/12345
          - type: job_portal
            url: https://app.intercom.io/contacts/12345
          id: "12345"
          recruiters:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          department:
            code: "2"
            updated_at: 2020-09-30T07:43:32Z
            parent_id: "22345"
            name: R&D
            updated_by: "12345"
            created_at: 2020-09-30T07:43:32Z
            description: R&D
            id: "12345"
            created_by: "12345"
            custom_mappings: "{}"
          published_at: 2020-09-30T07:43:32Z
          slug: ceo
          confidential: false
          visibility: internal
          blocks:
          - content: string
            title: string
          custom_fields:
          - name: employee_level
            description: Employee Level
            id: "2389328923893298"
            value: Uses Salesforce and Marketo
          - name: employee_level
            description: Employee Level
            id: "2389328923893298"
            value: Uses Salesforce and Marketo
          created_by: "12345"
          url: url
          tags:
          - New
          sequence: 3
          deleted: true
          followers:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          - a98lfd96-43b3-4bde-8c70-85b707d992e6
          requisition_id: abc123
          updated_by: "12345"
          location: San Francisco
          description_html: description_html
          status: completed
        resource: Jobs
        service: lever
        operation: one
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/Job'
        operation:
          description: Operation performed
          example: one
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: Jobs
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: lever
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetJobResponse
      type: object
      x-apideck-schema-id: GetJobResponse
    GetJobsResponse:
      example:
        status_code: 200
        data:
        - closing_date: 2020-10-30
          addresses:
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          available_to_employees: false
          code: 123-OC
          owner_id: "54321"
          closing_html: closing_html
          created_at: 2020-09-30T07:43:32Z
          description: A description
          language: EN
          experience: Director/ Vice President
          remote: true
          salary:
            min: 8000
            max: 10000
            currency: USD
            interval: year
          title: CEO
          branch:
            id: "123"
            name: HQ NY
          job_portal_url: job_portal_url
          custom_mappings: "{}"
          closing: The closing section of the job description
          record_url: https://app.intercom.io/contacts/12345
          hiring_managers:
          - "123456"
          updated_at: 2020-09-30T07:43:32Z
          employment_terms: full-time
          links:
          - type: job_portal
            url: https://app.intercom.io/contacts/12345
          - type: job_portal
            url: https://app.intercom.io/contacts/12345
          id: "12345"
          recruiters:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          department:
            code: "2"
            updated_at: 2020-09-30T07:43:32Z
            parent_id: "22345"
            name: R&D
            updated_by: "12345"
            created_at: 2020-09-30T07:43:32Z
            description: R&D
            id: "12345"
            created_by: "12345"
            custom_mappings: "{}"
          published_at: 2020-09-30T07:43:32Z
          slug: ceo
          confidential: false
          visibility: internal
          blocks:
          - content: string
            title: string
          custom_fields:
          - name: employee_level
            description: Employee Level
            id: "2389328923893298"
            value: Uses Salesforce and Marketo
          - name: employee_level
            description: Employee Level
            id: "2389328923893298"
            value: Uses Salesforce and Marketo
          created_by: "12345"
          url: url
          tags:
          - New
          sequence: 3
          deleted: true
          followers:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          - a98lfd96-43b3-4bde-8c70-85b707d992e6
          requisition_id: abc123
          updated_by: "12345"
          location: San Francisco
          description_html: description_html
          status: completed
        - closing_date: 2020-10-30
          addresses:
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          available_to_employees: false
          code: 123-OC
          owner_id: "54321"
          closing_html: closing_html
          created_at: 2020-09-30T07:43:32Z
          description: A description
          language: EN
          experience: Director/ Vice President
          remote: true
          salary:
            min: 8000
            max: 10000
            currency: USD
            interval: year
          title: CEO
          branch:
            id: "123"
            name: HQ NY
          job_portal_url: job_portal_url
          custom_mappings: "{}"
          closing: The closing section of the job description
          record_url: https://app.intercom.io/contacts/12345
          hiring_managers:
          - "123456"
          updated_at: 2020-09-30T07:43:32Z
          employment_terms: full-time
          links:
          - type: job_portal
            url: https://app.intercom.io/contacts/12345
          - type: job_portal
            url: https://app.intercom.io/contacts/12345
          id: "12345"
          recruiters:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          department:
            code: "2"
            updated_at: 2020-09-30T07:43:32Z
            parent_id: "22345"
            name: R&D
            updated_by: "12345"
            created_at: 2020-09-30T07:43:32Z
            description: R&D
            id: "12345"
            created_by: "12345"
            custom_mappings: "{}"
          published_at: 2020-09-30T07:43:32Z
          slug: ceo
          confidential: false
          visibility: internal
          blocks:
          - content: string
            title: string
          custom_fields:
          - name: employee_level
            description: Employee Level
            id: "2389328923893298"
            value: Uses Salesforce and Marketo
          - name: employee_level
            description: Employee Level
            id: "2389328923893298"
            value: Uses Salesforce and Marketo
          created_by: "12345"
          url: url
          tags:
          - New
          sequence: 3
          deleted: true
          followers:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          - a98lfd96-43b3-4bde-8c70-85b707d992e6
          requisition_id: abc123
          updated_by: "12345"
          location: San Francisco
          description_html: description_html
          status: completed
        resource: Jobs
        meta:
          cursors:
            next: em9oby1jcm06OnBhZ2U6OjM=
            current: em9oby1jcm06OnBhZ2U6OjI=
            previous: em9oby1jcm06OnBhZ2U6OjE=
          items_on_page: 50
        service: lever
        links:
          next: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          current: https://unify.apideck.com/crm/companies
          previous: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
        operation: all
        status: OK
      properties:
        data:
          items:
            $ref: '#/components/schemas/Job'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
        operation:
          description: Operation performed
          example: all
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: Jobs
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: lever
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetJobsResponse
      type: object
      x-apideck-schema-id: GetJobsResponse
    Id:
      description: A unique identifier for an object.
      example: "12345"
      readOnly: true
      title: ID
      type: string
    Initials:
      description: "The initials of the person, usually derived from their first,\
        \ middle, and last names."
      example: EM
      nullable: true
      title: Initials
      type: string
    Job:
      additionalProperties: false
      example:
        closing_date: 2020-10-30
        addresses:
        - country: US
          contact_name: Elon Musk
          website: https://elonmusk.com
          line4: delivery instructions
          notes: Address notes or delivery instructions.
          string: "25 Spring Street, Blackburn, VIC 3130"
          city: San Francisco
          latitude: "40.759211"
          county: Santa Clara
          type: primary
          row_version: 1-12345
          name: HQ US
          street_number: "25"
          phone_number: 111-111-1111
          id: "123"
          salutation: Mr
          state: CA
          fax: 122-111-1111
          line3: "Suite #"
          postal_code: "94104"
          line2: "apt #"
          email: elon@musk.com
          line1: Main street
          longitude: "-73.984638"
        - country: US
          contact_name: Elon Musk
          website: https://elonmusk.com
          line4: delivery instructions
          notes: Address notes or delivery instructions.
          string: "25 Spring Street, Blackburn, VIC 3130"
          city: San Francisco
          latitude: "40.759211"
          county: Santa Clara
          type: primary
          row_version: 1-12345
          name: HQ US
          street_number: "25"
          phone_number: 111-111-1111
          id: "123"
          salutation: Mr
          state: CA
          fax: 122-111-1111
          line3: "Suite #"
          postal_code: "94104"
          line2: "apt #"
          email: elon@musk.com
          line1: Main street
          longitude: "-73.984638"
        available_to_employees: false
        code: 123-OC
        owner_id: "54321"
        closing_html: closing_html
        created_at: 2020-09-30T07:43:32Z
        description: A description
        language: EN
        experience: Director/ Vice President
        remote: true
        salary:
          min: 8000
          max: 10000
          currency: USD
          interval: year
        title: CEO
        branch:
          id: "123"
          name: HQ NY
        job_portal_url: job_portal_url
        custom_mappings: "{}"
        closing: The closing section of the job description
        record_url: https://app.intercom.io/contacts/12345
        hiring_managers:
        - "123456"
        updated_at: 2020-09-30T07:43:32Z
        employment_terms: full-time
        links:
        - type: job_portal
          url: https://app.intercom.io/contacts/12345
        - type: job_portal
          url: https://app.intercom.io/contacts/12345
        id: "12345"
        recruiters:
        - a0d636c6-43b3-4bde-8c70-85b707d992f4
        department:
          code: "2"
          updated_at: 2020-09-30T07:43:32Z
          parent_id: "22345"
          name: R&D
          updated_by: "12345"
          created_at: 2020-09-30T07:43:32Z
          description: R&D
          id: "12345"
          created_by: "12345"
          custom_mappings: "{}"
        published_at: 2020-09-30T07:43:32Z
        slug: ceo
        confidential: false
        visibility: internal
        blocks:
        - content: string
          title: string
        custom_fields:
        - name: employee_level
          description: Employee Level
          id: "2389328923893298"
          value: Uses Salesforce and Marketo
        - name: employee_level
          description: Employee Level
          id: "2389328923893298"
          value: Uses Salesforce and Marketo
        created_by: "12345"
        url: url
        tags:
        - New
        sequence: 3
        deleted: true
        followers:
        - a0d636c6-43b3-4bde-8c70-85b707d992f4
        - a98lfd96-43b3-4bde-8c70-85b707d992e6
        requisition_id: abc123
        updated_by: "12345"
        location: San Francisco
        description_html: description_html
        status: completed
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/Address'
          title: addresses
          type: array
        available_to_employees:
          description: Specifies whether an employee of the organization can apply
            for the job.
          example: false
          title: Available to employees
          type: boolean
        blocks:
          example:
          - content: string
            title: string
          items:
            $ref: '#/components/schemas/Job_blocks_inner'
          title: blocks
          type: array
        branch:
          $ref: '#/components/schemas/Branch'
        closing:
          example: The closing section of the job description
          nullable: true
          title: Closing
          type: string
        closing_date:
          example: 2020-10-30
          format: date
          nullable: true
          title: closing_date
          type: string
        closing_html:
          description: The closing section of the job description in HTML format
          nullable: true
          title: Closing
          type: string
        code:
          description: The code of the job.
          example: 123-OC
          title: Code
          type: string
        confidential:
          example: false
          title: Confidential
          type: boolean
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        custom_fields:
          items:
            $ref: '#/components/schemas/CustomField'
          title: custom_fields
          type: array
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: custom_mappings
          type: object
          x-apideck-schema-id: CustomMappings
        deleted:
          description: Flag to indicate if the object is deleted.
          example: true
          nullable: true
          title: Deleted
          type: boolean
        department:
          $ref: '#/components/schemas/Department'
        description:
          description: A description of the object.
          example: A description
          nullable: true
          title: Description
          type: string
        description_html:
          description: The job description in HTML format
          nullable: true
          title: Description (HTML)
          type: string
        employment_terms:
          enum:
          - full-time
          - part-time
          - internship
          - contractor
          - employee
          - freelance
          - temp
          - seasonal
          - volunteer
          - other
          example: full-time
          nullable: true
          title: employment_terms
          type: string
          x-apideck-enum-id: jobs.employment_terms
        experience:
          description: Level of experience required for the job role.
          example: Director/ Vice President
          title: Experience
          type: string
        followers:
          example:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          - a98lfd96-43b3-4bde-8c70-85b707d992e6
          items:
            example: "12345"
            readOnly: true
            type: string
          nullable: true
          title: followers
          type: array
        hiring_managers:
          example:
          - "123456"
          items:
            example: "12345"
            readOnly: true
            type: string
            x-apideck-weights:
              id: medium
          title: hiring_managers
          type: array
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        job_portal_url:
          deprecated: true
          description: URL of the job portal
          nullable: true
          title: URL
          type: string
        language:
          description: language code according to ISO 639-1. For the United States
            - EN
          example: EN
          nullable: true
          title: Language
          type: string
        links:
          items:
            $ref: '#/components/schemas/Job_links_inner'
          minLength: 1
          title: links
          type: array
        location:
          description: Specifies the location for the job posting.
          example: San Francisco
          nullable: true
          title: Location
          type: string
        owner_id:
          example: "54321"
          nullable: true
          title: Owner ID
          type: string
        published_at:
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Published at (timestamp)
          type: string
        record_url:
          deprecated: true
          example: https://app.intercom.io/contacts/12345
          nullable: true
          title: Record URL
          type: string
        recruiters:
          description: The recruiter is generally someone who is tasked to help the
            hiring manager find and screen qualified applicant
          example:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          items:
            example: "12345"
            readOnly: true
            type: string
          nullable: true
          title: recruiters
          type: array
        remote:
          description: Specifies whether the posting is for a remote job.
          example: true
          nullable: true
          title: Remote
          type: boolean
        requisition_id:
          description: A job's Requisition ID (Req ID) allows your organization to
            identify and track a job based on alphanumeric naming conventions unique
            to your company's internal processes.
          example: abc123
          title: Requisition ID
          type: string
        salary:
          $ref: '#/components/schemas/Job_salary'
        sequence:
          description: Sequence in relation to other jobs.
          example: 3
          title: sequence
          type: integer
        slug:
          example: ceo
          nullable: true
          title: slug
          type: string
        status:
          $ref: '#/components/schemas/JobStatus'
        tags:
          example:
          - New
          items:
            type: string
          nullable: true
          title: tags
          type: array
          x-apideck-schema-id: Tags
        title:
          description: The job title of the person.
          example: CEO
          nullable: true
          title: Job title
          type: string
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
        url:
          deprecated: true
          description: URL of the job description
          nullable: true
          title: URL
          type: string
        visibility:
          description: The visibility of the job
          enum:
          - draft
          - public
          - internal
          example: internal
          title: visibility
          type: string
          x-apideck-enum-id: jobs.visibility
      title: Job
      type: object
      x-apideck-schema-id: Job
      x-apideck-strict-any-of:
      - required:
        - description_html
      - required:
        - description
      x-apideck-weights:
        addresses: low
        available_to_employees: medium
        blocks: edge-case
        branch: low
        closing: medium
        closing_date: high
        closing_html: edge-case
        code: low
        confidential: medium
        created_at: critical
        created_by: edge-case
        custom_fields: critical
        deleted: medium
        department: medium
        description: high
        description_html: high
        employment_terms: low
        experience: low
        followers: low
        hiring_managers: low
        id: high
        job_portal_url: medium
        language: medium
        links: critical
        location: critical
        owner_id: high
        published_at: high
        record_url: low
        recruiters: low
        remote: low
        requisition_id: medium
        salary: critical
        sequence: low
        slug: low
        status: critical
        tags: low
        title: critical
        updated_at: medium
        updated_by: edge-case
        url: high
        visibility: low
    JobStatus:
      description: The status of the job.
      enum:
      - draft
      - internal
      - published
      - completed
      - on-hold
      - private
      example: completed
      title: JobStatus
      type: string
      x-apideck-enum-id: jobs.status
    Language:
      description: language code according to ISO 639-1. For the United States - EN
      example: EN
      nullable: true
      title: Language
      type: string
    LastInteractionAt:
      example: 2020-09-30T07:43:32Z
      format: date-time
      nullable: true
      readOnly: true
      title: Last interaction at (timestamp)
      type: string
    Links:
      description: Links to navigate to previous or next pages through the API
      example:
        next: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
        current: https://unify.apideck.com/crm/companies
        previous: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
      properties:
        current:
          description: Link to navigate to the current page through the API
          example: https://unify.apideck.com/crm/companies
          title: current
          type: string
        next:
          description: Link to navigate to the previous page through the API
          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          nullable: true
          title: next
          type: string
        previous:
          description: Link to navigate to the previous page through the API
          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
          nullable: true
          title: previous
          type: string
      title: Links
      type: object
      x-apideck-schema-id: Links
    Meta:
      description: Response metadata
      example:
        cursors:
          next: em9oby1jcm06OnBhZ2U6OjM=
          current: em9oby1jcm06OnBhZ2U6OjI=
          previous: em9oby1jcm06OnBhZ2U6OjE=
        items_on_page: 50
      properties:
        cursors:
          $ref: '#/components/schemas/Meta_cursors'
        items_on_page:
          description: Number of items returned in the data property of the response
          example: 50
          title: items_on_page
          type: integer
      title: Meta
      type: object
      x-apideck-schema-id: Meta
    NotFoundResponse:
      example:
        ref: https://developers.apideck.com/errors#entitynotfounderror
        type_name: EntityNotFoundError
        status_code: 404
        detail: "Could not find widget with id: '123'"
        error: Not Found
        message: Unknown Widget
      properties:
        detail:
          $ref: '#/components/schemas/NotFoundResponse_detail'
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1
            standard (RFC 7231)
          example: Not Found
          title: error
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Unknown Widget
          title: message
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#entitynotfounderror
          title: ref
          type: string
        status_code:
          description: HTTP status code
          example: 404
          title: status_code
          type: number
        type_name:
          description: The type of error returned
          example: EntityNotFoundError
          title: type_name
          type: string
      title: NotFoundResponse
      type: object
      x-apideck-schema-id: NotFound
    NotImplementedResponse:
      properties:
        detail:
          $ref: '#/components/schemas/NotImplementedResponse_detail'
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1
            standard (RFC 7231)
          example: Not Implemented
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Unmapped Attribute
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#mappingerror
          type: string
        status_code:
          description: HTTP status code
          example: 501
          type: number
        type_name:
          description: The type of error returned
          example: MappingError
          type: string
      type: object
      x-apideck-schema-id: NotImplemented
    Offer:
      additionalProperties: false
      properties:
        application_id:
          example: abc123
          title: Application ID
          type: string
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: custom_mappings
          type: object
          x-apideck-schema-id: CustomMappings
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
      type: object
      x-apideck-schema-id: Offer
      x-apideck-weights:
        created_at: medium
        created_by: edge-case
        id: high
        updated_at: medium
        updated_by: edge-case
    OwnerId:
      example: "54321"
      nullable: true
      title: Owner ID
      type: string
    PassThroughQuery:
      additionalProperties: true
      example:
        search: San Francisco
      properties:
        example_downstream_property:
          description: "All passthrough query parameters are passed along to the connector\
            \ as is (?pass_through[search]=leads becomes ?search=leads)"
          type: string
      type: object
    PaymentRequiredResponse:
      example:
        ref: https://developers.apideck.com/errors#requestlimiterror
        type_name: RequestLimitError
        status_code: 402
        detail: You have reached your limit of 2000
        error: Payment Required
        message: Request Limit Reached
      properties:
        detail:
          description: Contains parameter or domain specific information related to
            the error and why it occurred.
          example: You have reached your limit of 2000
          title: detail
          type: string
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1
            standard (RFC 7231)
          example: Payment Required
          title: error
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Request Limit Reached
          title: message
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#requestlimiterror
          title: ref
          type: string
        status_code:
          description: HTTP status code
          example: 402
          title: status_code
          type: number
        type_name:
          description: The type of error returned
          example: RequestLimitError
          title: type_name
          type: string
      title: PaymentRequiredResponse
      type: object
      x-apideck-schema-id: PaymentRequired
    PhoneNumber:
      additionalProperties: false
      example:
        country_code: "1"
        number: 111-111-1111
        extension: "105"
        area_code: "323"
        id: "12345"
        type: primary
      properties:
        area_code:
          description: "The area code of the phone number, e.g. 323"
          example: "323"
          nullable: true
          title: Area code
          type: string
        country_code:
          description: "The country code of the phone number, e.g. +1"
          example: "1"
          nullable: true
          title: Country code
          type: string
        extension:
          description: The extension of the phone number
          example: "105"
          nullable: true
          title: Phone extension
          type: string
        id:
          description: Unique identifier of the phone number
          example: "12345"
          nullable: true
          title: id
          type: string
        number:
          description: The phone number
          example: 111-111-1111
          minLength: 1
          title: Phone number
          type: string
        type:
          description: The type of phone number
          enum:
          - primary
          - secondary
          - home
          - work
          - office
          - mobile
          - assistant
          - fax
          - direct-dial-in
          - personal
          - other
          example: primary
          nullable: true
          title: type
          type: string
          x-apideck-enum-id: phone_numbers.type
      required:
      - number
      title: PhoneNumber
      type: object
      x-apideck-schema-id: PhoneNumber
      x-apideck-weights:
        area_code: edge-case
        country_code: edge-case
        extension: edge-case
        id: edge-case
        number: critical
        type: critical
    PublishedAt:
      example: 2020-09-30T07:43:32Z
      format: date-time
      nullable: true
      readOnly: true
      title: Published at (timestamp)
      type: string
    RecordUrl:
      example: https://app.intercom.io/contacts/12345
      nullable: true
      title: Record URL
      type: string
    RowVersion:
      description: A binary value used to detect updates to a object and prevent data
        conflicts. It is incremented each time an update is made to the object.
      example: 1-12345
      nullable: true
      title: Row version
      type: string
    Tags:
      example:
      - New
      items:
        type: string
      nullable: true
      title: tags
      type: array
      x-apideck-schema-id: Tags
    Title:
      description: The job title of the person.
      example: CEO
      nullable: true
      title: Job title
      type: string
    TooManyRequestsResponse:
      properties:
        detail:
          $ref: '#/components/schemas/TooManyRequestsResponse_detail'
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1
            standard (RFC 6585)
          example: Too Many Requests
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Connector Rate Limit Error
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#connectorratelimiterror
          type: string
        status_code:
          description: HTTP status code
          example: 429
          type: number
        type_name:
          description: The type of error returned
          example: ConnectorRateLimitError
          type: string
      type: object
      x-apideck-schema-id: TooManyRequests
    UnauthorizedResponse:
      example:
        ref: https://developers.apideck.com/errors#unauthorizederror
        type_name: UnauthorizedError
        status_code: 401
        detail: Failed to generate valid JWT Session. Verify applicationId is correct
        error: Unauthorized
        message: Unauthorized Request
      properties:
        detail:
          description: Contains parameter or domain specific information related to
            the error and why it occurred.
          example: Failed to generate valid JWT Session. Verify applicationId is correct
          title: detail
          type: string
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1
            standard (RFC 7231)
          example: Unauthorized
          title: error
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Unauthorized Request
          title: message
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#unauthorizederror
          title: ref
          type: string
        status_code:
          description: HTTP status code
          example: 401
          title: status_code
          type: number
        type_name:
          description: The type of error returned
          example: UnauthorizedError
          title: type_name
          type: string
      title: UnauthorizedResponse
      type: object
      x-apideck-schema-id: Unauthorized
    UnexpectedErrorResponse:
      example:
        ref: https://developers.apideck.com/errors#unauthorizederror
        type_name: RequestHeadersValidationError
        status_code: 400
        detail: "Missing Header: x-apideck-consumer-id"
        error: Bad Request
        message: Invalid Params
      properties:
        detail:
          $ref: '#/components/schemas/UnexpectedErrorResponse_detail'
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1
            standard (RFC 7231)
          example: Bad Request
          title: error
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Invalid Params
          title: message
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#unauthorizederror
          title: ref
          type: string
        status_code:
          description: HTTP status code
          example: 400
          title: status_code
          type: number
        type_name:
          description: The type of error returned
          example: RequestHeadersValidationError
          title: type_name
          type: string
      title: UnexpectedErrorResponse
      type: object
      x-apideck-schema-id: Error
    UnifiedId:
      example:
        id: "12345"
      properties:
        id:
          description: The unique identifier of the resource
          example: "12345"
          readOnly: true
          title: Id
          type: string
      required:
      - id
      title: UnifiedId
      type: object
      x-apideck-schema-id: Id
    UnprocessableResponse:
      example:
        ref: https://developers.apideck.com/errors#invalidstateerror
        type_name: InvalidStateError
        status_code: 422
        detail: "Unprocessable request, please verify your request headers and body."
        error: Unprocessable Entity
        message: Invalid State
      properties:
        detail:
          description: Contains parameter or domain specific information related to
            the error and why it occurred.
          example: "Unprocessable request, please verify your request headers and\
            \ body."
          title: detail
          type: string
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1
            standard (RFC 7231)
          example: Unprocessable Entity
          title: error
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Invalid State
          title: message
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#invalidstateerror
          title: ref
          type: string
        status_code:
          description: HTTP status code
          example: 422
          title: status_code
          type: number
        type_name:
          description: The type of error returned
          example: InvalidStateError
          title: type_name
          type: string
      title: UnprocessableResponse
      type: object
      x-apideck-schema-id: Unprocessable
    UpdateApplicantResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: Applicants
        service: lever
        operation: update
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: update
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: Applicants
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: lever
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: UpdateApplicantResponse
      type: object
    UpdateApplicationResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: Applications
        service: sap-successfactors
        operation: update
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: update
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: Applications
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: sap-successfactors
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: UpdateApplicationResponse
      type: object
    UpdateJobResponse:
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: update
          type: string
        resource:
          description: Unified API resource name
          example: Jobs
          type: string
        service:
          description: Apideck ID of service provider
          example: sage-hr
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      type: object
      x-apideck-schema-id: UpdateJobResponse
    UpdatedAt:
      description: The date and time when the object was last updated.
      example: 2020-09-30T07:43:32Z
      format: date-time
      nullable: true
      readOnly: true
      title: Updated at (timestamp)
      type: string
    UpdatedBy:
      description: The user who last updated the object.
      example: "12345"
      nullable: true
      readOnly: true
      title: Updated by
      type: string
    Url:
      description: The url pointing to the job.
      example: https://downstreamconnector.com/job?id=123
      format: uri
      pattern: ^(https?)://
      type: string
    Applicant_social_links_inner:
      additionalProperties: false
      example:
        id: "12345"
        type: twitter
        url: https://www.twitter.com/apideck
      properties:
        id:
          description: Unique identifier of the social link
          example: "12345"
          nullable: true
          title: id
          type: string
        type:
          description: "Type of the social link, e.g. twitter"
          example: twitter
          nullable: true
          title: type
          type: string
        url:
          description: "URL of the social link, e.g. https://www.twitter.com/apideck"
          example: https://www.twitter.com/apideck
          minLength: 1
          title: url
          type: string
      required:
      - url
      title: Applicant_social_links_inner
      type: object
      x-apideck-schema-id: SocialLink
      x-apideck-weights:
        id: edge-case
        type: critical
        url: critical
    Applicant_websites_inner:
      additionalProperties: false
      example:
        id: "12345"
        type: primary
        url: http://example.com
      properties:
        id:
          description: Unique identifier for the website
          example: "12345"
          nullable: true
          title: id
          type: string
        type:
          description: The type of website
          enum:
          - primary
          - secondary
          - work
          - personal
          - other
          example: primary
          nullable: true
          title: type
          type: string
          x-apideck-enum-id: websites.type
        url:
          description: The website URL
          example: http://example.com
          minLength: 1
          title: url
          type: string
      required:
      - url
      title: Applicant_websites_inner
      type: object
      x-apideck-schema-id: Website
      x-apideck-weights:
        id: edge-case
        type: critical
        url: critical
    Application_stage:
      example:
        name: "12345"
        id: "12345"
      properties:
        id:
          description: "Stage the candidate should be in. If omitted, the default\
            \ stage for this job will be used."
          example: "12345"
          nullable: true
          title: Stage ID
          type: string
        name:
          example: "12345"
          nullable: true
          title: Stage name
          type: string
      title: Application_stage
      type: object
    BadRequestResponse_detail:
      anyOf:
      - example: Missing property foobar
        type: string
      - example:
          missing:
          - foobar: required
        type: object
      description: Contains parameter or domain specific information related to the
        error and why it occurred.
      title: BadRequestResponse_detail
    CustomField_value:
      anyOf:
      - example: Uses Salesforce and Marketo
        nullable: true
        type: string
      - example: 10
        nullable: true
        type: number
      - example: true
        nullable: true
        type: boolean
      - example:
          foo: bar
        nullable: true
        type: object
      - items:
          type: string
        type: array
      - items:
          type: object
        type: array
      title: CustomField_value
    Job_blocks_inner:
      properties:
        content:
          title: content
          type: string
        title:
          title: title
          type: string
      title: Job_blocks_inner
      x-apideck-weights:
        content: medium
        title: medium
    Branch:
      description: Details of the branch for which the job is created.
      example:
        id: "123"
        name: HQ NY
      properties:
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        name:
          description: Name of the branch.
          example: HQ NY
          type: string
      title: Branch
      type: object
      x-apideck-weights:
        id: medium
        name: medium
    Job_links_inner:
      example:
        type: job_portal
        url: https://app.intercom.io/contacts/12345
      properties:
        type:
          enum:
          - job_portal
          - job_description
          example: job_portal
          title: type
          type: string
        url:
          example: https://app.intercom.io/contacts/12345
          title: url
          type: string
      title: Job_links_inner
      type: object
      x-apideck-weights:
        type: critical
        url: critical
    Job_salary:
      example:
        min: 8000
        max: 10000
        currency: USD
        interval: year
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        interval:
          example: year
          nullable: true
          title: interval
          type: string
        max:
          description: Maximum salary payable for the job role.
          example: 10000
          title: max
          type: integer
        min:
          description: Minimum salary payable for the job role.
          example: 8000
          title: min
          type: integer
      title: Job_salary
      type: object
      x-apideck-weights:
        currency: medium
        interval: edge-case
        max: medium
        min: medium
    Meta_cursors:
      description: Cursors to navigate to previous or next pages through the API
      example:
        next: em9oby1jcm06OnBhZ2U6OjM=
        current: em9oby1jcm06OnBhZ2U6OjI=
        previous: em9oby1jcm06OnBhZ2U6OjE=
      properties:
        current:
          description: Cursor to navigate to the current page of results through the
            API
          example: em9oby1jcm06OnBhZ2U6OjI=
          nullable: true
          title: current
          type: string
        next:
          description: Cursor to navigate to the next page of results through the
            API
          example: em9oby1jcm06OnBhZ2U6OjM=
          nullable: true
          title: next
          type: string
        previous:
          description: Cursor to navigate to the previous page of results through
            the API
          example: em9oby1jcm06OnBhZ2U6OjE=
          nullable: true
          title: previous
          type: string
      title: Meta_cursors
      type: object
    NotFoundResponse_detail:
      anyOf:
      - example: "Could not find widget with id: '123'"
        type: string
      - example:
          not_found:
            entity: widget
            id: "123"
        type: object
      description: Contains parameter or domain specific information related to the
        error and why it occurred.
      title: NotFoundResponse_detail
    NotImplementedResponse_detail:
      anyOf:
      - example: Failed to retrieve Widget tokenUrl from 'components.securitySchemes.OAuth2.flows'
        type: string
      - type: object
      description: Contains parameter or domain specific information related to the
        error and why it occurred.
      title: NotImplementedResponse_detail
    TooManyRequestsResponse_detail:
      properties:
        context:
          title: context
          type: string
        error:
          additionalProperties: true
          title: error
          type: object
      title: TooManyRequestsResponse_detail
      type: object
    UnexpectedErrorResponse_detail:
      anyOf:
      - example: "Missing Header: x-apideck-consumer-id"
        type: string
      - example:
          missing:
          - x-apideck-consumer-id: required
        type: object
      description: Contains parameter or domain specific information related to the
        error and why it occurred.
      title: UnexpectedErrorResponse_detail
  securitySchemes:
    apiKey:
      description: "To use API you have to sign up and get your own API key. Unify\
        \ API accounts have sandbox mode and live mode API keys. \nTo change modes\
        \ just use the appropriate key to get a live or test object. You can find\
        \ your API keys on the unify settings of your Apideck app.\nYour Apideck application_id\
        \ can also be found on the same page.\n\nAuthenticate your API requests by\
        \ including your test or live secret API key in the request header. \n\n-\
        \ Bearer authorization header: `Authorization: Bearer <your-apideck-api-key>`\n\
        - Application id header: `x-apideck-app-id: <your-apideck-app-id>`\n\nYou\
        \ should use the public keys on the SDKs and the secret keys to authenticate\
        \ API requests.\n\n**Do not share or include your secret API keys on client\
        \ side code.** Your API keys carry significant privileges. Please ensure to\
        \ keep them 100% secure and be sure to not share your secret API keys in areas\
        \ that are publicly accessible like GitHub.\n\nLearn how to set the Authorization\
        \ header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key\n\
        \nGo to Unify to grab your API KEY https://app.apideck.com/unify/api-keys\n"
      in: header
      name: Authorization
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_apiKey
x-webhooks:
  ApplicantCreated:
    post:
      description: Event broadcast when an applicant has been created.
      operationId: applicantCreated
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AtsEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: applicant
                entity_url: https://unify.apideck.com/ats/applicants/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: ats.applicant.created
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: lever
                unified_api: ats
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AtsWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Applicant Created
      tags:
      - Webhook Events
      x-apideck-event-type: ats.applicant.created
      x-apideck-upcoming: true
  ApplicantDeleted:
    post:
      description: Event broadcast when an applicant has been deleted.
      operationId: applicantDeleted
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AtsEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: applicant
                entity_url: https://unify.apideck.com/ats/applicants/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: ats.applicant.deleted
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: lever
                unified_api: ats
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AtsWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Applicant Deleted
      tags:
      - Webhook Events
      x-apideck-event-type: ats.applicant.deleted
      x-apideck-upcoming: true
  ApplicantUpdated:
    post:
      description: Event broadcast when an applicant has been updated.
      operationId: applicantUpdated
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AtsEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: applicant
                entity_url: https://unify.apideck.com/ats/applicants/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: ats.applicant.updated
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: lever
                unified_api: ats
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AtsWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Applicant Updated
      tags:
      - Webhook Events
      x-apideck-event-type: ats.applicant.updated
      x-apideck-upcoming: true
  ApplicationCreated:
    post:
      description: Event broadcast when an application has been created.
      operationId: applicationCreated
      parameters:
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: application
                entity_url: https://unify.apideck.com/ats/applications/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: ats.application.created
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: lever
                unified_api: ats
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AtsWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully
      security: []
      summary: Application Created
      tags:
      - Webhook Events
      x-apideck-event-type: ats.application.created
  ApplicationDeleted:
    post:
      description: Event broadcast when an application has been deleted.
      operationId: applicationDeleted
      parameters:
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: application
                entity_url: https://unify.apideck.com/ats/applications/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: ats.application.deleted
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: lever
                unified_api: ats
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AtsWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully
      security: []
      summary: Application Deleted
      tags:
      - Webhook Events
      x-apideck-event-type: ats.application.deleted
  ApplicationUpdated:
    post:
      description: Event broadcast when an application has been updated.
      operationId: applicationUpdated
      parameters:
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: application
                entity_url: https://unify.apideck.com/ats/applications/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: ats.application.updated
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: lever
                unified_api: ats
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AtsWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully
      security: []
      summary: Application Updated
      tags:
      - Webhook Events
      x-apideck-event-type: ats.application.updated
  JobCreated:
    post:
      description: Event broadcast when a job has been created.
      operationId: jobCreated
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AtsEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: job
                entity_url: https://unify.apideck.com/ats/jobs/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: ats.job.created
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: lever
                unified_api: ats
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AtsWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Job Created
      tags:
      - Webhook Events
      x-apideck-event-type: ats.job.created
  JobDeleted:
    post:
      description: Event broadcast when a job has been deleted.
      operationId: jobDeleted
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AtsEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: job
                entity_url: https://unify.apideck.com/ats/jobs/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: ats.job.deleted
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: lever
                unified_api: ats
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AtsWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Job Deleted
      tags:
      - Webhook Events
      x-apideck-event-type: ats.job.deleted
  JobUpdated:
    post:
      description: Event broadcast when a job has been updated.
      operationId: jobUpdated
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AtsEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: job
                entity_url: https://unify.apideck.com/ats/jobs/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: ats.job.updated
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: lever
                unified_api: ats
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AtsWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Job Updated
      tags:
      - Webhook Events
      x-apideck-event-type: ats.job.updated
  x-sdk-exclude: true
