# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PaymentsFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, invoice_number: str=None):
        """PaymentsFilter - a model defined in OpenAPI

        :param invoice_number: The invoice_number of this PaymentsFilter.
        """
        self.openapi_types = {
            'invoice_number': str
        }

        self.attribute_map = {
            'invoice_number': 'invoice_number'
        }

        self._invoice_number = invoice_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentsFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentsFilter of this PaymentsFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invoice_number(self):
        """Gets the invoice_number of this PaymentsFilter.

        Invoice number for payments to filter on

        :return: The invoice_number of this PaymentsFilter.
        :rtype: str
        """
        return self._invoice_number

    @invoice_number.setter
    def invoice_number(self, invoice_number):
        """Sets the invoice_number of this PaymentsFilter.

        Invoice number for payments to filter on

        :param invoice_number: The invoice_number of this PaymentsFilter.
        :type invoice_number: str
        """

        self._invoice_number = invoice_number
