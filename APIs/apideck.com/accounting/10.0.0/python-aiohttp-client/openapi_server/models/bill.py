# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bank_account import BankAccount
from openapi_server.models.bill_line_item import BillLineItem
from openapi_server.models.currency import Currency
from openapi_server.models.linked_ledger_account import LinkedLedgerAccount
from openapi_server.models.linked_supplier import LinkedSupplier
from openapi_server import util


class Bill(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accounting_by_row: bool=None, balance: float=None, bank_account: BankAccount=None, bill_date: date=None, bill_number: str=None, channel: str=None, created_at: datetime=None, created_by: str=None, currency: Currency=None, currency_rate: float=None, custom_mappings: object=None, deposit: float=None, discount_percentage: float=None, downstream_id: str=None, due_date: date=None, id: str=None, language: str=None, ledger_account: LinkedLedgerAccount=None, line_items: List[BillLineItem]=None, notes: str=None, paid_date: date=None, payment_method: str=None, po_number: str=None, reference: str=None, row_version: str=None, status: str=None, sub_total: float=None, supplier: LinkedSupplier=None, tax_code: str=None, tax_inclusive: bool=None, terms: str=None, total: float=None, total_tax: float=None, updated_at: datetime=None, updated_by: str=None):
        """Bill - a model defined in OpenAPI

        :param accounting_by_row: The accounting_by_row of this Bill.
        :param balance: The balance of this Bill.
        :param bank_account: The bank_account of this Bill.
        :param bill_date: The bill_date of this Bill.
        :param bill_number: The bill_number of this Bill.
        :param channel: The channel of this Bill.
        :param created_at: The created_at of this Bill.
        :param created_by: The created_by of this Bill.
        :param currency: The currency of this Bill.
        :param currency_rate: The currency_rate of this Bill.
        :param custom_mappings: The custom_mappings of this Bill.
        :param deposit: The deposit of this Bill.
        :param discount_percentage: The discount_percentage of this Bill.
        :param downstream_id: The downstream_id of this Bill.
        :param due_date: The due_date of this Bill.
        :param id: The id of this Bill.
        :param language: The language of this Bill.
        :param ledger_account: The ledger_account of this Bill.
        :param line_items: The line_items of this Bill.
        :param notes: The notes of this Bill.
        :param paid_date: The paid_date of this Bill.
        :param payment_method: The payment_method of this Bill.
        :param po_number: The po_number of this Bill.
        :param reference: The reference of this Bill.
        :param row_version: The row_version of this Bill.
        :param status: The status of this Bill.
        :param sub_total: The sub_total of this Bill.
        :param supplier: The supplier of this Bill.
        :param tax_code: The tax_code of this Bill.
        :param tax_inclusive: The tax_inclusive of this Bill.
        :param terms: The terms of this Bill.
        :param total: The total of this Bill.
        :param total_tax: The total_tax of this Bill.
        :param updated_at: The updated_at of this Bill.
        :param updated_by: The updated_by of this Bill.
        """
        self.openapi_types = {
            'accounting_by_row': bool,
            'balance': float,
            'bank_account': BankAccount,
            'bill_date': date,
            'bill_number': str,
            'channel': str,
            'created_at': datetime,
            'created_by': str,
            'currency': Currency,
            'currency_rate': float,
            'custom_mappings': object,
            'deposit': float,
            'discount_percentage': float,
            'downstream_id': str,
            'due_date': date,
            'id': str,
            'language': str,
            'ledger_account': LinkedLedgerAccount,
            'line_items': List[BillLineItem],
            'notes': str,
            'paid_date': date,
            'payment_method': str,
            'po_number': str,
            'reference': str,
            'row_version': str,
            'status': str,
            'sub_total': float,
            'supplier': LinkedSupplier,
            'tax_code': str,
            'tax_inclusive': bool,
            'terms': str,
            'total': float,
            'total_tax': float,
            'updated_at': datetime,
            'updated_by': str
        }

        self.attribute_map = {
            'accounting_by_row': 'accounting_by_row',
            'balance': 'balance',
            'bank_account': 'bank_account',
            'bill_date': 'bill_date',
            'bill_number': 'bill_number',
            'channel': 'channel',
            'created_at': 'created_at',
            'created_by': 'created_by',
            'currency': 'currency',
            'currency_rate': 'currency_rate',
            'custom_mappings': 'custom_mappings',
            'deposit': 'deposit',
            'discount_percentage': 'discount_percentage',
            'downstream_id': 'downstream_id',
            'due_date': 'due_date',
            'id': 'id',
            'language': 'language',
            'ledger_account': 'ledger_account',
            'line_items': 'line_items',
            'notes': 'notes',
            'paid_date': 'paid_date',
            'payment_method': 'payment_method',
            'po_number': 'po_number',
            'reference': 'reference',
            'row_version': 'row_version',
            'status': 'status',
            'sub_total': 'sub_total',
            'supplier': 'supplier',
            'tax_code': 'tax_code',
            'tax_inclusive': 'tax_inclusive',
            'terms': 'terms',
            'total': 'total',
            'total_tax': 'total_tax',
            'updated_at': 'updated_at',
            'updated_by': 'updated_by'
        }

        self._accounting_by_row = accounting_by_row
        self._balance = balance
        self._bank_account = bank_account
        self._bill_date = bill_date
        self._bill_number = bill_number
        self._channel = channel
        self._created_at = created_at
        self._created_by = created_by
        self._currency = currency
        self._currency_rate = currency_rate
        self._custom_mappings = custom_mappings
        self._deposit = deposit
        self._discount_percentage = discount_percentage
        self._downstream_id = downstream_id
        self._due_date = due_date
        self._id = id
        self._language = language
        self._ledger_account = ledger_account
        self._line_items = line_items
        self._notes = notes
        self._paid_date = paid_date
        self._payment_method = payment_method
        self._po_number = po_number
        self._reference = reference
        self._row_version = row_version
        self._status = status
        self._sub_total = sub_total
        self._supplier = supplier
        self._tax_code = tax_code
        self._tax_inclusive = tax_inclusive
        self._terms = terms
        self._total = total
        self._total_tax = total_tax
        self._updated_at = updated_at
        self._updated_by = updated_by

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Bill':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Bill of this Bill.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accounting_by_row(self):
        """Gets the accounting_by_row of this Bill.

        Indicates if accounting by row is used (true) or not (false). Accounting by row means that a separate ledger transaction is created for each row.

        :return: The accounting_by_row of this Bill.
        :rtype: bool
        """
        return self._accounting_by_row

    @accounting_by_row.setter
    def accounting_by_row(self, accounting_by_row):
        """Sets the accounting_by_row of this Bill.

        Indicates if accounting by row is used (true) or not (false). Accounting by row means that a separate ledger transaction is created for each row.

        :param accounting_by_row: The accounting_by_row of this Bill.
        :type accounting_by_row: bool
        """

        self._accounting_by_row = accounting_by_row

    @property
    def balance(self):
        """Gets the balance of this Bill.

        Balance of bill due.

        :return: The balance of this Bill.
        :rtype: float
        """
        return self._balance

    @balance.setter
    def balance(self, balance):
        """Sets the balance of this Bill.

        Balance of bill due.

        :param balance: The balance of this Bill.
        :type balance: float
        """

        self._balance = balance

    @property
    def bank_account(self):
        """Gets the bank_account of this Bill.


        :return: The bank_account of this Bill.
        :rtype: BankAccount
        """
        return self._bank_account

    @bank_account.setter
    def bank_account(self, bank_account):
        """Sets the bank_account of this Bill.


        :param bank_account: The bank_account of this Bill.
        :type bank_account: BankAccount
        """

        self._bank_account = bank_account

    @property
    def bill_date(self):
        """Gets the bill_date of this Bill.

        Date bill was issued - YYYY-MM-DD.

        :return: The bill_date of this Bill.
        :rtype: date
        """
        return self._bill_date

    @bill_date.setter
    def bill_date(self, bill_date):
        """Sets the bill_date of this Bill.

        Date bill was issued - YYYY-MM-DD.

        :param bill_date: The bill_date of this Bill.
        :type bill_date: date
        """

        self._bill_date = bill_date

    @property
    def bill_number(self):
        """Gets the bill_number of this Bill.

        Reference to supplier bill number

        :return: The bill_number of this Bill.
        :rtype: str
        """
        return self._bill_number

    @bill_number.setter
    def bill_number(self, bill_number):
        """Sets the bill_number of this Bill.

        Reference to supplier bill number

        :param bill_number: The bill_number of this Bill.
        :type bill_number: str
        """

        self._bill_number = bill_number

    @property
    def channel(self):
        """Gets the channel of this Bill.

        The channel through which the transaction is processed.

        :return: The channel of this Bill.
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this Bill.

        The channel through which the transaction is processed.

        :param channel: The channel of this Bill.
        :type channel: str
        """

        self._channel = channel

    @property
    def created_at(self):
        """Gets the created_at of this Bill.

        The date and time when the object was created.

        :return: The created_at of this Bill.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Bill.

        The date and time when the object was created.

        :param created_at: The created_at of this Bill.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this Bill.

        The user who created the object.

        :return: The created_by of this Bill.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this Bill.

        The user who created the object.

        :param created_by: The created_by of this Bill.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def currency(self):
        """Gets the currency of this Bill.


        :return: The currency of this Bill.
        :rtype: Currency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this Bill.


        :param currency: The currency of this Bill.
        :type currency: Currency
        """

        self._currency = currency

    @property
    def currency_rate(self):
        """Gets the currency_rate of this Bill.

        Currency Exchange Rate at the time entity was recorded/generated.

        :return: The currency_rate of this Bill.
        :rtype: float
        """
        return self._currency_rate

    @currency_rate.setter
    def currency_rate(self, currency_rate):
        """Sets the currency_rate of this Bill.

        Currency Exchange Rate at the time entity was recorded/generated.

        :param currency_rate: The currency_rate of this Bill.
        :type currency_rate: float
        """

        self._currency_rate = currency_rate

    @property
    def custom_mappings(self):
        """Gets the custom_mappings of this Bill.

        When custom mappings are configured on the resource, the result is included here.

        :return: The custom_mappings of this Bill.
        :rtype: object
        """
        return self._custom_mappings

    @custom_mappings.setter
    def custom_mappings(self, custom_mappings):
        """Sets the custom_mappings of this Bill.

        When custom mappings are configured on the resource, the result is included here.

        :param custom_mappings: The custom_mappings of this Bill.
        :type custom_mappings: object
        """

        self._custom_mappings = custom_mappings

    @property
    def deposit(self):
        """Gets the deposit of this Bill.

        Amount of deposit made to this bill.

        :return: The deposit of this Bill.
        :rtype: float
        """
        return self._deposit

    @deposit.setter
    def deposit(self, deposit):
        """Sets the deposit of this Bill.

        Amount of deposit made to this bill.

        :param deposit: The deposit of this Bill.
        :type deposit: float
        """

        self._deposit = deposit

    @property
    def discount_percentage(self):
        """Gets the discount_percentage of this Bill.

        Discount percentage applied to this transaction.

        :return: The discount_percentage of this Bill.
        :rtype: float
        """
        return self._discount_percentage

    @discount_percentage.setter
    def discount_percentage(self, discount_percentage):
        """Sets the discount_percentage of this Bill.

        Discount percentage applied to this transaction.

        :param discount_percentage: The discount_percentage of this Bill.
        :type discount_percentage: float
        """

        self._discount_percentage = discount_percentage

    @property
    def downstream_id(self):
        """Gets the downstream_id of this Bill.

        The third-party API ID of original entity

        :return: The downstream_id of this Bill.
        :rtype: str
        """
        return self._downstream_id

    @downstream_id.setter
    def downstream_id(self, downstream_id):
        """Sets the downstream_id of this Bill.

        The third-party API ID of original entity

        :param downstream_id: The downstream_id of this Bill.
        :type downstream_id: str
        """

        self._downstream_id = downstream_id

    @property
    def due_date(self):
        """Gets the due_date of this Bill.

        The due date is the date on which a payment is scheduled to be received - YYYY-MM-DD.

        :return: The due_date of this Bill.
        :rtype: date
        """
        return self._due_date

    @due_date.setter
    def due_date(self, due_date):
        """Sets the due_date of this Bill.

        The due date is the date on which a payment is scheduled to be received - YYYY-MM-DD.

        :param due_date: The due_date of this Bill.
        :type due_date: date
        """

        self._due_date = due_date

    @property
    def id(self):
        """Gets the id of this Bill.

        A unique identifier for an object.

        :return: The id of this Bill.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Bill.

        A unique identifier for an object.

        :param id: The id of this Bill.
        :type id: str
        """

        self._id = id

    @property
    def language(self):
        """Gets the language of this Bill.

        language code according to ISO 639-1. For the United States - EN

        :return: The language of this Bill.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this Bill.

        language code according to ISO 639-1. For the United States - EN

        :param language: The language of this Bill.
        :type language: str
        """

        self._language = language

    @property
    def ledger_account(self):
        """Gets the ledger_account of this Bill.


        :return: The ledger_account of this Bill.
        :rtype: LinkedLedgerAccount
        """
        return self._ledger_account

    @ledger_account.setter
    def ledger_account(self, ledger_account):
        """Sets the ledger_account of this Bill.


        :param ledger_account: The ledger_account of this Bill.
        :type ledger_account: LinkedLedgerAccount
        """

        self._ledger_account = ledger_account

    @property
    def line_items(self):
        """Gets the line_items of this Bill.


        :return: The line_items of this Bill.
        :rtype: List[BillLineItem]
        """
        return self._line_items

    @line_items.setter
    def line_items(self, line_items):
        """Sets the line_items of this Bill.


        :param line_items: The line_items of this Bill.
        :type line_items: List[BillLineItem]
        """

        self._line_items = line_items

    @property
    def notes(self):
        """Gets the notes of this Bill.


        :return: The notes of this Bill.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this Bill.


        :param notes: The notes of this Bill.
        :type notes: str
        """

        self._notes = notes

    @property
    def paid_date(self):
        """Gets the paid_date of this Bill.

        The paid date is the date on which a payment was sent to the supplier - YYYY-MM-DD.

        :return: The paid_date of this Bill.
        :rtype: date
        """
        return self._paid_date

    @paid_date.setter
    def paid_date(self, paid_date):
        """Sets the paid_date of this Bill.

        The paid date is the date on which a payment was sent to the supplier - YYYY-MM-DD.

        :param paid_date: The paid_date of this Bill.
        :type paid_date: date
        """

        self._paid_date = paid_date

    @property
    def payment_method(self):
        """Gets the payment_method of this Bill.

        Payment method used for the transaction, such as cash, credit card, bank transfer, or check

        :return: The payment_method of this Bill.
        :rtype: str
        """
        return self._payment_method

    @payment_method.setter
    def payment_method(self, payment_method):
        """Sets the payment_method of this Bill.

        Payment method used for the transaction, such as cash, credit card, bank transfer, or check

        :param payment_method: The payment_method of this Bill.
        :type payment_method: str
        """

        self._payment_method = payment_method

    @property
    def po_number(self):
        """Gets the po_number of this Bill.

        A PO Number uniquely identifies a purchase order and is generally defined by the buyer. The buyer will match the PO number in the invoice to the Purchase Order.

        :return: The po_number of this Bill.
        :rtype: str
        """
        return self._po_number

    @po_number.setter
    def po_number(self, po_number):
        """Sets the po_number of this Bill.

        A PO Number uniquely identifies a purchase order and is generally defined by the buyer. The buyer will match the PO number in the invoice to the Purchase Order.

        :param po_number: The po_number of this Bill.
        :type po_number: str
        """

        self._po_number = po_number

    @property
    def reference(self):
        """Gets the reference of this Bill.

        Optional bill reference.

        :return: The reference of this Bill.
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this Bill.

        Optional bill reference.

        :param reference: The reference of this Bill.
        :type reference: str
        """

        self._reference = reference

    @property
    def row_version(self):
        """Gets the row_version of this Bill.

        A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.

        :return: The row_version of this Bill.
        :rtype: str
        """
        return self._row_version

    @row_version.setter
    def row_version(self, row_version):
        """Sets the row_version of this Bill.

        A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.

        :param row_version: The row_version of this Bill.
        :type row_version: str
        """

        self._row_version = row_version

    @property
    def status(self):
        """Gets the status of this Bill.

        Invoice status

        :return: The status of this Bill.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Bill.

        Invoice status

        :param status: The status of this Bill.
        :type status: str
        """
        allowed_values = [None,"draft", "submitted", "authorised", "partially_paid", "paid", "void", "credit", "deleted"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def sub_total(self):
        """Gets the sub_total of this Bill.

        Sub-total amount, normally before tax.

        :return: The sub_total of this Bill.
        :rtype: float
        """
        return self._sub_total

    @sub_total.setter
    def sub_total(self, sub_total):
        """Sets the sub_total of this Bill.

        Sub-total amount, normally before tax.

        :param sub_total: The sub_total of this Bill.
        :type sub_total: float
        """

        self._sub_total = sub_total

    @property
    def supplier(self):
        """Gets the supplier of this Bill.


        :return: The supplier of this Bill.
        :rtype: LinkedSupplier
        """
        return self._supplier

    @supplier.setter
    def supplier(self, supplier):
        """Sets the supplier of this Bill.


        :param supplier: The supplier of this Bill.
        :type supplier: LinkedSupplier
        """

        self._supplier = supplier

    @property
    def tax_code(self):
        """Gets the tax_code of this Bill.

        Applicable tax id/code override if tax is not supplied on a line item basis.

        :return: The tax_code of this Bill.
        :rtype: str
        """
        return self._tax_code

    @tax_code.setter
    def tax_code(self, tax_code):
        """Sets the tax_code of this Bill.

        Applicable tax id/code override if tax is not supplied on a line item basis.

        :param tax_code: The tax_code of this Bill.
        :type tax_code: str
        """

        self._tax_code = tax_code

    @property
    def tax_inclusive(self):
        """Gets the tax_inclusive of this Bill.

        Amounts are including tax

        :return: The tax_inclusive of this Bill.
        :rtype: bool
        """
        return self._tax_inclusive

    @tax_inclusive.setter
    def tax_inclusive(self, tax_inclusive):
        """Sets the tax_inclusive of this Bill.

        Amounts are including tax

        :param tax_inclusive: The tax_inclusive of this Bill.
        :type tax_inclusive: bool
        """

        self._tax_inclusive = tax_inclusive

    @property
    def terms(self):
        """Gets the terms of this Bill.

        Terms of payment.

        :return: The terms of this Bill.
        :rtype: str
        """
        return self._terms

    @terms.setter
    def terms(self, terms):
        """Sets the terms of this Bill.

        Terms of payment.

        :param terms: The terms of this Bill.
        :type terms: str
        """

        self._terms = terms

    @property
    def total(self):
        """Gets the total of this Bill.

        Total amount of bill, including tax.

        :return: The total of this Bill.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this Bill.

        Total amount of bill, including tax.

        :param total: The total of this Bill.
        :type total: float
        """

        self._total = total

    @property
    def total_tax(self):
        """Gets the total_tax of this Bill.

        Total tax amount applied to this bill.

        :return: The total_tax of this Bill.
        :rtype: float
        """
        return self._total_tax

    @total_tax.setter
    def total_tax(self, total_tax):
        """Sets the total_tax of this Bill.

        Total tax amount applied to this bill.

        :param total_tax: The total_tax of this Bill.
        :type total_tax: float
        """

        self._total_tax = total_tax

    @property
    def updated_at(self):
        """Gets the updated_at of this Bill.

        The date and time when the object was last updated.

        :return: The updated_at of this Bill.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Bill.

        The date and time when the object was last updated.

        :param updated_at: The updated_at of this Bill.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def updated_by(self):
        """Gets the updated_by of this Bill.

        The user who last updated the object.

        :return: The updated_by of this Bill.
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this Bill.

        The user who last updated the object.

        :param updated_by: The updated_by of this Bill.
        :type updated_by: str
        """

        self._updated_by = updated_by
