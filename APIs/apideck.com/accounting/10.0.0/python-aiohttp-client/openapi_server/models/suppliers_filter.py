# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SuppliersFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, company_name: str=None, display_name: str=None, email: str=None, first_name: str=None, last_name: str=None):
        """SuppliersFilter - a model defined in OpenAPI

        :param company_name: The company_name of this SuppliersFilter.
        :param display_name: The display_name of this SuppliersFilter.
        :param email: The email of this SuppliersFilter.
        :param first_name: The first_name of this SuppliersFilter.
        :param last_name: The last_name of this SuppliersFilter.
        """
        self.openapi_types = {
            'company_name': str,
            'display_name': str,
            'email': str,
            'first_name': str,
            'last_name': str
        }

        self.attribute_map = {
            'company_name': 'company_name',
            'display_name': 'display_name',
            'email': 'email',
            'first_name': 'first_name',
            'last_name': 'last_name'
        }

        self._company_name = company_name
        self._display_name = display_name
        self._email = email
        self._first_name = first_name
        self._last_name = last_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SuppliersFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SuppliersFilter of this SuppliersFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company_name(self):
        """Gets the company_name of this SuppliersFilter.

        Company Name of supplier to search for

        :return: The company_name of this SuppliersFilter.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this SuppliersFilter.

        Company Name of supplier to search for

        :param company_name: The company_name of this SuppliersFilter.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def display_name(self):
        """Gets the display_name of this SuppliersFilter.

        Display Name of supplier to search for

        :return: The display_name of this SuppliersFilter.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this SuppliersFilter.

        Display Name of supplier to search for

        :param display_name: The display_name of this SuppliersFilter.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def email(self):
        """Gets the email of this SuppliersFilter.

        Email of supplier to search for

        :return: The email of this SuppliersFilter.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this SuppliersFilter.

        Email of supplier to search for

        :param email: The email of this SuppliersFilter.
        :type email: str
        """

        self._email = email

    @property
    def first_name(self):
        """Gets the first_name of this SuppliersFilter.

        First name of supplier to search for

        :return: The first_name of this SuppliersFilter.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this SuppliersFilter.

        First name of supplier to search for

        :param first_name: The first_name of this SuppliersFilter.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this SuppliersFilter.

        Last name of supplier to search for

        :return: The last_name of this SuppliersFilter.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this SuppliersFilter.

        Last name of supplier to search for

        :param last_name: The last_name of this SuppliersFilter.
        :type last_name: str
        """

        self._last_name = last_name
