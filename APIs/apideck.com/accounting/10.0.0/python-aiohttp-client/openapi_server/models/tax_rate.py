# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tax_components_inner import TaxComponentsInner
from openapi_server import util


class TaxRate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, components: List[TaxComponentsInner]=None, created_at: datetime=None, created_by: str=None, custom_mappings: object=None, description: str=None, effective_tax_rate: float=None, id: str=None, name: str=None, original_tax_rate_id: str=None, report_tax_type: str=None, row_version: str=None, status: str=None, tax_payable_account_id: str=None, tax_remitted_account_id: str=None, total_tax_rate: float=None, type: str=None, updated_at: datetime=None, updated_by: str=None):
        """TaxRate - a model defined in OpenAPI

        :param code: The code of this TaxRate.
        :param components: The components of this TaxRate.
        :param created_at: The created_at of this TaxRate.
        :param created_by: The created_by of this TaxRate.
        :param custom_mappings: The custom_mappings of this TaxRate.
        :param description: The description of this TaxRate.
        :param effective_tax_rate: The effective_tax_rate of this TaxRate.
        :param id: The id of this TaxRate.
        :param name: The name of this TaxRate.
        :param original_tax_rate_id: The original_tax_rate_id of this TaxRate.
        :param report_tax_type: The report_tax_type of this TaxRate.
        :param row_version: The row_version of this TaxRate.
        :param status: The status of this TaxRate.
        :param tax_payable_account_id: The tax_payable_account_id of this TaxRate.
        :param tax_remitted_account_id: The tax_remitted_account_id of this TaxRate.
        :param total_tax_rate: The total_tax_rate of this TaxRate.
        :param type: The type of this TaxRate.
        :param updated_at: The updated_at of this TaxRate.
        :param updated_by: The updated_by of this TaxRate.
        """
        self.openapi_types = {
            'code': str,
            'components': List[TaxComponentsInner],
            'created_at': datetime,
            'created_by': str,
            'custom_mappings': object,
            'description': str,
            'effective_tax_rate': float,
            'id': str,
            'name': str,
            'original_tax_rate_id': str,
            'report_tax_type': str,
            'row_version': str,
            'status': str,
            'tax_payable_account_id': str,
            'tax_remitted_account_id': str,
            'total_tax_rate': float,
            'type': str,
            'updated_at': datetime,
            'updated_by': str
        }

        self.attribute_map = {
            'code': 'code',
            'components': 'components',
            'created_at': 'created_at',
            'created_by': 'created_by',
            'custom_mappings': 'custom_mappings',
            'description': 'description',
            'effective_tax_rate': 'effective_tax_rate',
            'id': 'id',
            'name': 'name',
            'original_tax_rate_id': 'original_tax_rate_id',
            'report_tax_type': 'report_tax_type',
            'row_version': 'row_version',
            'status': 'status',
            'tax_payable_account_id': 'tax_payable_account_id',
            'tax_remitted_account_id': 'tax_remitted_account_id',
            'total_tax_rate': 'total_tax_rate',
            'type': 'type',
            'updated_at': 'updated_at',
            'updated_by': 'updated_by'
        }

        self._code = code
        self._components = components
        self._created_at = created_at
        self._created_by = created_by
        self._custom_mappings = custom_mappings
        self._description = description
        self._effective_tax_rate = effective_tax_rate
        self._id = id
        self._name = name
        self._original_tax_rate_id = original_tax_rate_id
        self._report_tax_type = report_tax_type
        self._row_version = row_version
        self._status = status
        self._tax_payable_account_id = tax_payable_account_id
        self._tax_remitted_account_id = tax_remitted_account_id
        self._total_tax_rate = total_tax_rate
        self._type = type
        self._updated_at = updated_at
        self._updated_by = updated_by

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaxRate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaxRate of this TaxRate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this TaxRate.

        Tax code assigned to identify this tax rate.

        :return: The code of this TaxRate.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this TaxRate.

        Tax code assigned to identify this tax rate.

        :param code: The code of this TaxRate.
        :type code: str
        """

        self._code = code

    @property
    def components(self):
        """Gets the components of this TaxRate.


        :return: The components of this TaxRate.
        :rtype: List[TaxComponentsInner]
        """
        return self._components

    @components.setter
    def components(self, components):
        """Sets the components of this TaxRate.


        :param components: The components of this TaxRate.
        :type components: List[TaxComponentsInner]
        """

        self._components = components

    @property
    def created_at(self):
        """Gets the created_at of this TaxRate.

        The date and time when the object was created.

        :return: The created_at of this TaxRate.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this TaxRate.

        The date and time when the object was created.

        :param created_at: The created_at of this TaxRate.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this TaxRate.

        The user who created the object.

        :return: The created_by of this TaxRate.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this TaxRate.

        The user who created the object.

        :param created_by: The created_by of this TaxRate.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def custom_mappings(self):
        """Gets the custom_mappings of this TaxRate.

        When custom mappings are configured on the resource, the result is included here.

        :return: The custom_mappings of this TaxRate.
        :rtype: object
        """
        return self._custom_mappings

    @custom_mappings.setter
    def custom_mappings(self, custom_mappings):
        """Sets the custom_mappings of this TaxRate.

        When custom mappings are configured on the resource, the result is included here.

        :param custom_mappings: The custom_mappings of this TaxRate.
        :type custom_mappings: object
        """

        self._custom_mappings = custom_mappings

    @property
    def description(self):
        """Gets the description of this TaxRate.

        Description of tax rate

        :return: The description of this TaxRate.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this TaxRate.

        Description of tax rate

        :param description: The description of this TaxRate.
        :type description: str
        """

        self._description = description

    @property
    def effective_tax_rate(self):
        """Gets the effective_tax_rate of this TaxRate.

        Effective tax rate

        :return: The effective_tax_rate of this TaxRate.
        :rtype: float
        """
        return self._effective_tax_rate

    @effective_tax_rate.setter
    def effective_tax_rate(self, effective_tax_rate):
        """Sets the effective_tax_rate of this TaxRate.

        Effective tax rate

        :param effective_tax_rate: The effective_tax_rate of this TaxRate.
        :type effective_tax_rate: float
        """

        self._effective_tax_rate = effective_tax_rate

    @property
    def id(self):
        """Gets the id of this TaxRate.

        ID assigned to identify this tax rate.

        :return: The id of this TaxRate.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TaxRate.

        ID assigned to identify this tax rate.

        :param id: The id of this TaxRate.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this TaxRate.

        Name assigned to identify this tax rate.

        :return: The name of this TaxRate.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TaxRate.

        Name assigned to identify this tax rate.

        :param name: The name of this TaxRate.
        :type name: str
        """
        if name is not None and len(name) < 1:
            raise ValueError("Invalid value for `name`, length must be greater than or equal to `1`")

        self._name = name

    @property
    def original_tax_rate_id(self):
        """Gets the original_tax_rate_id of this TaxRate.

        ID of the original tax rate from which the new tax rate is derived. Helps to understand the relationship between corresponding tax rate entities.

        :return: The original_tax_rate_id of this TaxRate.
        :rtype: str
        """
        return self._original_tax_rate_id

    @original_tax_rate_id.setter
    def original_tax_rate_id(self, original_tax_rate_id):
        """Sets the original_tax_rate_id of this TaxRate.

        ID of the original tax rate from which the new tax rate is derived. Helps to understand the relationship between corresponding tax rate entities.

        :param original_tax_rate_id: The original_tax_rate_id of this TaxRate.
        :type original_tax_rate_id: str
        """

        self._original_tax_rate_id = original_tax_rate_id

    @property
    def report_tax_type(self):
        """Gets the report_tax_type of this TaxRate.

        Report Tax type to aggregate tax collected or paid for reporting purposes

        :return: The report_tax_type of this TaxRate.
        :rtype: str
        """
        return self._report_tax_type

    @report_tax_type.setter
    def report_tax_type(self, report_tax_type):
        """Sets the report_tax_type of this TaxRate.

        Report Tax type to aggregate tax collected or paid for reporting purposes

        :param report_tax_type: The report_tax_type of this TaxRate.
        :type report_tax_type: str
        """

        self._report_tax_type = report_tax_type

    @property
    def row_version(self):
        """Gets the row_version of this TaxRate.

        A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.

        :return: The row_version of this TaxRate.
        :rtype: str
        """
        return self._row_version

    @row_version.setter
    def row_version(self, row_version):
        """Sets the row_version of this TaxRate.

        A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.

        :param row_version: The row_version of this TaxRate.
        :type row_version: str
        """

        self._row_version = row_version

    @property
    def status(self):
        """Gets the status of this TaxRate.

        Tax rate status

        :return: The status of this TaxRate.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this TaxRate.

        Tax rate status

        :param status: The status of this TaxRate.
        :type status: str
        """
        allowed_values = [None,"active", "inactive", "archived"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def tax_payable_account_id(self):
        """Gets the tax_payable_account_id of this TaxRate.

        Unique identifier for the account for tax collected.

        :return: The tax_payable_account_id of this TaxRate.
        :rtype: str
        """
        return self._tax_payable_account_id

    @tax_payable_account_id.setter
    def tax_payable_account_id(self, tax_payable_account_id):
        """Sets the tax_payable_account_id of this TaxRate.

        Unique identifier for the account for tax collected.

        :param tax_payable_account_id: The tax_payable_account_id of this TaxRate.
        :type tax_payable_account_id: str
        """

        self._tax_payable_account_id = tax_payable_account_id

    @property
    def tax_remitted_account_id(self):
        """Gets the tax_remitted_account_id of this TaxRate.

        Unique identifier for the account for tax remitted.

        :return: The tax_remitted_account_id of this TaxRate.
        :rtype: str
        """
        return self._tax_remitted_account_id

    @tax_remitted_account_id.setter
    def tax_remitted_account_id(self, tax_remitted_account_id):
        """Sets the tax_remitted_account_id of this TaxRate.

        Unique identifier for the account for tax remitted.

        :param tax_remitted_account_id: The tax_remitted_account_id of this TaxRate.
        :type tax_remitted_account_id: str
        """

        self._tax_remitted_account_id = tax_remitted_account_id

    @property
    def total_tax_rate(self):
        """Gets the total_tax_rate of this TaxRate.

        Not compounded sum of the components of a tax rate

        :return: The total_tax_rate of this TaxRate.
        :rtype: float
        """
        return self._total_tax_rate

    @total_tax_rate.setter
    def total_tax_rate(self, total_tax_rate):
        """Sets the total_tax_rate of this TaxRate.

        Not compounded sum of the components of a tax rate

        :param total_tax_rate: The total_tax_rate of this TaxRate.
        :type total_tax_rate: float
        """

        self._total_tax_rate = total_tax_rate

    @property
    def type(self):
        """Gets the type of this TaxRate.

        Tax type used to indicate the source of tax collected or paid

        :return: The type of this TaxRate.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this TaxRate.

        Tax type used to indicate the source of tax collected or paid

        :param type: The type of this TaxRate.
        :type type: str
        """

        self._type = type

    @property
    def updated_at(self):
        """Gets the updated_at of this TaxRate.

        The date and time when the object was last updated.

        :return: The updated_at of this TaxRate.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this TaxRate.

        The date and time when the object was last updated.

        :param updated_at: The updated_at of this TaxRate.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def updated_by(self):
        """Gets the updated_by of this TaxRate.

        The user who last updated the object.

        :return: The updated_by of this TaxRate.
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this TaxRate.

        The user who last updated the object.

        :param updated_by: The updated_by of this TaxRate.
        :type updated_by: str
        """

        self._updated_by = updated_by
