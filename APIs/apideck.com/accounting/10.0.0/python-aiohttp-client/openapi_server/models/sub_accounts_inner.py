# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubAccountsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sub_name: str=None, id: str=None):
        """SubAccountsInner - a model defined in OpenAPI

        :param account_sub_name: The account_sub_name of this SubAccountsInner.
        :param id: The id of this SubAccountsInner.
        """
        self.openapi_types = {
            'account_sub_name': str,
            'id': str
        }

        self.attribute_map = {
            'account_sub_name': 'account_sub_name',
            'id': 'id'
        }

        self._account_sub_name = account_sub_name
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubAccountsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Sub_accounts_inner of this SubAccountsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sub_name(self):
        """Gets the account_sub_name of this SubAccountsInner.

        The name of the sub account.

        :return: The account_sub_name of this SubAccountsInner.
        :rtype: str
        """
        return self._account_sub_name

    @account_sub_name.setter
    def account_sub_name(self, account_sub_name):
        """Sets the account_sub_name of this SubAccountsInner.

        The name of the sub account.

        :param account_sub_name: The account_sub_name of this SubAccountsInner.
        :type account_sub_name: str
        """

        self._account_sub_name = account_sub_name

    @property
    def id(self):
        """Gets the id of this SubAccountsInner.

        The ID of the sub account.

        :return: The id of this SubAccountsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SubAccountsInner.

        The ID of the sub account.

        :param id: The id of this SubAccountsInner.
        :type id: str
        """

        self._id = id
