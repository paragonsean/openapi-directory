# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.balance_sheet_assets import BalanceSheetAssets
from openapi_server.models.balance_sheet_equity import BalanceSheetEquity
from openapi_server.models.balance_sheet_liabilities import BalanceSheetLiabilities
import re
from openapi_server import util


class BalanceSheet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assets: BalanceSheetAssets=None, created_at: datetime=None, created_by: str=None, custom_mappings: object=None, end_date: str=None, equity: BalanceSheetEquity=None, id: str=None, liabilities: BalanceSheetLiabilities=None, report_name: str=None, start_date: str=None, updated_at: datetime=None, updated_by: str=None):
        """BalanceSheet - a model defined in OpenAPI

        :param assets: The assets of this BalanceSheet.
        :param created_at: The created_at of this BalanceSheet.
        :param created_by: The created_by of this BalanceSheet.
        :param custom_mappings: The custom_mappings of this BalanceSheet.
        :param end_date: The end_date of this BalanceSheet.
        :param equity: The equity of this BalanceSheet.
        :param id: The id of this BalanceSheet.
        :param liabilities: The liabilities of this BalanceSheet.
        :param report_name: The report_name of this BalanceSheet.
        :param start_date: The start_date of this BalanceSheet.
        :param updated_at: The updated_at of this BalanceSheet.
        :param updated_by: The updated_by of this BalanceSheet.
        """
        self.openapi_types = {
            'assets': BalanceSheetAssets,
            'created_at': datetime,
            'created_by': str,
            'custom_mappings': object,
            'end_date': str,
            'equity': BalanceSheetEquity,
            'id': str,
            'liabilities': BalanceSheetLiabilities,
            'report_name': str,
            'start_date': str,
            'updated_at': datetime,
            'updated_by': str
        }

        self.attribute_map = {
            'assets': 'assets',
            'created_at': 'created_at',
            'created_by': 'created_by',
            'custom_mappings': 'custom_mappings',
            'end_date': 'end_date',
            'equity': 'equity',
            'id': 'id',
            'liabilities': 'liabilities',
            'report_name': 'report_name',
            'start_date': 'start_date',
            'updated_at': 'updated_at',
            'updated_by': 'updated_by'
        }

        self._assets = assets
        self._created_at = created_at
        self._created_by = created_by
        self._custom_mappings = custom_mappings
        self._end_date = end_date
        self._equity = equity
        self._id = id
        self._liabilities = liabilities
        self._report_name = report_name
        self._start_date = start_date
        self._updated_at = updated_at
        self._updated_by = updated_by

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BalanceSheet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BalanceSheet of this BalanceSheet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assets(self):
        """Gets the assets of this BalanceSheet.


        :return: The assets of this BalanceSheet.
        :rtype: BalanceSheetAssets
        """
        return self._assets

    @assets.setter
    def assets(self, assets):
        """Sets the assets of this BalanceSheet.


        :param assets: The assets of this BalanceSheet.
        :type assets: BalanceSheetAssets
        """
        if assets is None:
            raise ValueError("Invalid value for `assets`, must not be `None`")

        self._assets = assets

    @property
    def created_at(self):
        """Gets the created_at of this BalanceSheet.

        The date and time when the object was created.

        :return: The created_at of this BalanceSheet.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this BalanceSheet.

        The date and time when the object was created.

        :param created_at: The created_at of this BalanceSheet.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this BalanceSheet.

        The user who created the object.

        :return: The created_by of this BalanceSheet.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this BalanceSheet.

        The user who created the object.

        :param created_by: The created_by of this BalanceSheet.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def custom_mappings(self):
        """Gets the custom_mappings of this BalanceSheet.

        When custom mappings are configured on the resource, the result is included here.

        :return: The custom_mappings of this BalanceSheet.
        :rtype: object
        """
        return self._custom_mappings

    @custom_mappings.setter
    def custom_mappings(self, custom_mappings):
        """Sets the custom_mappings of this BalanceSheet.

        When custom mappings are configured on the resource, the result is included here.

        :param custom_mappings: The custom_mappings of this BalanceSheet.
        :type custom_mappings: object
        """

        self._custom_mappings = custom_mappings

    @property
    def end_date(self):
        """Gets the end_date of this BalanceSheet.

        The start date of the report

        :return: The end_date of this BalanceSheet.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this BalanceSheet.

        The start date of the report

        :param end_date: The end_date of this BalanceSheet.
        :type end_date: str
        """
        if end_date is not None and not re.search(r'^\d{4}-\d{2}-\d{2}$', end_date):
            raise ValueError("Invalid value for `end_date`, must be a follow pattern or equal to `/^\d{4}-\d{2}-\d{2}$/`")

        self._end_date = end_date

    @property
    def equity(self):
        """Gets the equity of this BalanceSheet.


        :return: The equity of this BalanceSheet.
        :rtype: BalanceSheetEquity
        """
        return self._equity

    @equity.setter
    def equity(self, equity):
        """Sets the equity of this BalanceSheet.


        :param equity: The equity of this BalanceSheet.
        :type equity: BalanceSheetEquity
        """
        if equity is None:
            raise ValueError("Invalid value for `equity`, must not be `None`")

        self._equity = equity

    @property
    def id(self):
        """Gets the id of this BalanceSheet.

        A unique identifier for an object.

        :return: The id of this BalanceSheet.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BalanceSheet.

        A unique identifier for an object.

        :param id: The id of this BalanceSheet.
        :type id: str
        """

        self._id = id

    @property
    def liabilities(self):
        """Gets the liabilities of this BalanceSheet.


        :return: The liabilities of this BalanceSheet.
        :rtype: BalanceSheetLiabilities
        """
        return self._liabilities

    @liabilities.setter
    def liabilities(self, liabilities):
        """Sets the liabilities of this BalanceSheet.


        :param liabilities: The liabilities of this BalanceSheet.
        :type liabilities: BalanceSheetLiabilities
        """
        if liabilities is None:
            raise ValueError("Invalid value for `liabilities`, must not be `None`")

        self._liabilities = liabilities

    @property
    def report_name(self):
        """Gets the report_name of this BalanceSheet.

        The name of the report

        :return: The report_name of this BalanceSheet.
        :rtype: str
        """
        return self._report_name

    @report_name.setter
    def report_name(self, report_name):
        """Sets the report_name of this BalanceSheet.

        The name of the report

        :param report_name: The report_name of this BalanceSheet.
        :type report_name: str
        """
        if report_name is None:
            raise ValueError("Invalid value for `report_name`, must not be `None`")

        self._report_name = report_name

    @property
    def start_date(self):
        """Gets the start_date of this BalanceSheet.

        The start date of the report

        :return: The start_date of this BalanceSheet.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this BalanceSheet.

        The start date of the report

        :param start_date: The start_date of this BalanceSheet.
        :type start_date: str
        """
        if start_date is None:
            raise ValueError("Invalid value for `start_date`, must not be `None`")
        if start_date is not None and not re.search(r'^\d{4}-\d{2}-\d{2}$', start_date):
            raise ValueError("Invalid value for `start_date`, must be a follow pattern or equal to `/^\d{4}-\d{2}-\d{2}$/`")

        self._start_date = start_date

    @property
    def updated_at(self):
        """Gets the updated_at of this BalanceSheet.

        The date and time when the object was last updated.

        :return: The updated_at of this BalanceSheet.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this BalanceSheet.

        The date and time when the object was last updated.

        :param updated_at: The updated_at of this BalanceSheet.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def updated_by(self):
        """Gets the updated_by of this BalanceSheet.

        The user who last updated the object.

        :return: The updated_by of this BalanceSheet.
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this BalanceSheet.

        The user who last updated the object.

        :param updated_by: The updated_by of this BalanceSheet.
        :type updated_by: str
        """

        self._updated_by = updated_by
