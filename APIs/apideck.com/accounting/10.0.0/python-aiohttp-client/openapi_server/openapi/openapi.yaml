openapi: 3.0.3
info:
  contact:
    email: hello@apideck.com
    url: https://developers.apideck.com
  description: |+
    Welcome to the Accounting API.

    You can use this API to access all Accounting API endpoints.

    ## Base URL

    The base URL for all API requests is `https://unify.apideck.com`

    ## Headers

    Custom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.

    | Name                  | Type    | Required | Description                                                                                                                                                    |
    | --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |
    | x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |
    | x-apideck-service-id  | String  | No       | Describe the service you want to call (e.g., pipedrive). Only needed when a customer has activated multiple integrations for the same Unified API.             |
    | x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |
    | x-apideck-app-id      | String  | Yes      | The application id of your Unify application. Available at https://app.apideck.com/unify/api-keys.                                                             |
    | Authorization         | String  | Yes      | Bearer API KEY                                                                                                                                                 |

    ## Authorization

    You can interact with the API through the authorization methods below.

    <!-- ReDoc-Inject: <security-definitions> -->

    ## Pagination

    All API resources have support for bulk retrieval via list APIs.  Apideck uses cursor-based pagination via the optional `cursor` and `limit` parameters.

    To fetch the first page of results, call the list API without a `cursor` parameter. Afterwards you can fetch subsequent pages by providing a cursor parameter. You will find the next cursor in the response body in `meta.cursors.next`. If `meta.cursors.next` is `null` you're at the end of the list.

    In the REST API you can also use the `links` from the response for added convenience. Simply call the URL in `links.next` to get the next page of results.

    ### Query Parameters

    | Name   | Type   | Required | Description                                                                                                        |
    | ------ | ------ | -------- | ------------------------------------------------------------------------------------------------------------------ |
    | cursor | String | No       | Cursor to start from. You can find cursors for next & previous pages in the meta.cursors property of the response. |
    | limit  | Number | No       | Number of results to return. Minimum 1, Maximum 200, Default 20                                                    |

    ### Response Body

    | Name                  | Type   | Description                                                        |
    | --------------------- | ------ | ------------------------------------------------------------------ |
    | meta.cursors.previous | String | Cursor to navigate to the previous page of results through the API |
    | meta.cursors.current  | String | Cursor to navigate to the current page of results through the API  |
    | meta.cursors.next     | String | Cursor to navigate to the next page of results through the API     |
    | meta.items_on_page    | Number | Number of items returned in the data property of the response      |
    | links.previous        | String | Link to navigate to the previous page of results through the API   |
    | links.current         | String | Link to navigate to the current page of results through the API    |
    | links.next            | String | Link to navigate to the next page of results through the API       |

    ⚠️ `meta.cursors.previous`/`links.previous` is not available for all connectors.

    ## SDKs and API Clients

    We currently offer a [Node.js](https://developers.apideck.com/sdks/node), [PHP](https://developers.apideck.com/sdks/php) and [.NET](https://developers.apideck.com/sdks/dot-net) SDK.
    Need another SDK? [Request the SDK of your choice](https://integrations.apideck.com/request).

    ## Debugging

    Because of the nature of the abstraction we do in Apideck Unify we still provide the option to the receive raw requests and responses being handled underlying. By including the raw flag `?raw=true` in your requests you can still receive the full request. Please note that this increases the response size and can introduce extra latency.

    ## Errors

    The API returns standard HTTP response codes to indicate success or failure of the API requests. For errors, we also return a customized error message inside the JSON response. You can see the returned HTTP status codes below.

    | Code | Title                | Description                                                                                                                                                                                              |
    | ---- | -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
    | 200  | OK                   | The request message has been successfully processed, and it has produced a response. The response message varies, depending on the request method and the requested data.                                |
    | 201  | Created              | The request has been fulfilled and has resulted in one or more new resources being created.                                                                                                              |
    | 204  | No Content           | The server has successfully fulfilled the request and that there is no additional content to send in the response payload body.                                                                          |
    | 400  | Bad Request          | The receiving server cannot understand the request because of malformed syntax. Do not repeat the request without first modifying it; check the request for errors, fix them and then retry the request. |
    | 401  | Unauthorized         | The request has not been applied because it lacks valid authentication credentials for the target resource.                                                                                              |
    | 402  | Payment Required     | Subscription data is incomplete or out of date. You'll need to provide payment details to continue.                                                                                                      |
    | 403  | Forbidden            | You do not have the appropriate user rights to access the request. Do not repeat the request.                                                                                                            |
    | 404  | Not Found            | The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.                                                                           |
    | 409  | Conflict             | The request could not be completed due to a conflict with the current state of the target resource.                                                                                                      |
    | 422  | Unprocessable Entity | The server understands the content type of the request entity, and the syntax of the request entity is correct but was unable to process the contained instructions.                                     |
    | 429  | Too Many Requests    | You sent too many requests in a given amount of time ("rate limit"). Try again later                                                                                                                     |
    | 5xx  | Server Errors        | Something went wrong with the Unify API. These errors are logged on our side. You can contact our team to resolve the issue.                                                                             |

    ### Handling errors

    The Unify API and SDKs can produce errors for many reasons, such as a failed requests due to misconfigured integrations, invalid parameters, authentication errors, and network unavailability.

    ### Error Types

    #### RequestValidationError

    Request is not valid for the current endpoint. The response body will include details on the validation error. Check the spelling and types of your attributes, and ensure you are not passing data that is outside of the specification.

    #### UnsupportedFiltersError

    Filters in the request are valid, but not supported by the connector. Remove the unsupported filter(s) to get a successful response.

    #### UnsupportedSortFieldError

    Sort field (`sort[by]`) in the request is valid, but not supported by the connector. Replace or remove the sort field to get a successful response.

    #### InvalidCursorError

    Pagination cursor in the request is not valid for the current connector. Make sure to use a cursor returned from the API, for the same connector.

    #### ConnectorExecutionError

    A Unified API request made via one of our downstream connectors returned an unexpected error. The `status_code` returned is proxied through to error response along with their original response via the error detail.

    #### UnauthorizedError

    We were unable to authorize the request as made. This can happen for a number of reasons, from missing header params to passing an incorrect authorization token. Verify your Api Key is being set correctly in the authorization header. ie: `Authorization: 'Bearer sk_live_***'`

    #### ConnectorCredentialsError

    A request using a given connector has not been authorized. Ensure the connector you are trying to use has been configured correctly and been authorized for use.

    #### ConnectorDisabledError

    A request has been made to a connector that has since been disabled. This may be temporary - You can contact our team to resolve the issue.

    #### ConnectorRateLimitError

    You sent too many request to a connector. These rate limits vary from connector to connector. You will need to try again later.

    #### RequestLimitError

    You have reached the number of requests included in your Free Tier Subscription. You will no be able to make further requests until this limit resets at the end of the month, or talk to us about upgrading your subscription to continue immediately.

    #### EntityNotFoundError

    You've made a request for a resource or route that does not exist. Verify your path parameters or any identifiers used to fetch this resource.

    #### OAuthCredentialsNotFoundError

    When adding a connector integration that implements OAuth, both a `client_id` and `client_secret` must be provided before any authorizations can be performed. Verify the integration has been configured properly before continuing.

    #### IntegrationNotFoundError

    The requested connector integration could not be found associated to your `application_id`. Verify your `application_id` is correct, and that this connector has been added and configured for your application.

    #### ConnectionNotFoundError

    A valid connection could not be found associated to your `application_id`. Something _may_ have interrupted the authorization flow. You may need to start the connector authorization process again.

    #### ConnectionSettingsError

    The connector has required settings that were not supplied. Verify `connection.settings` contains all required settings for the connector to be callable.

    #### ConnectorNotFoundError

    A request was made for an unknown connector. Verify your `service_id` is spelled correctly, and that this connector is enabled for your provided `unified_api`.

    #### OAuthRedirectUriError

    A request was made either in a connector authorization flow, or attempting to revoke connector access without a valid `redirect_uri`. This is the url the user should be returned to on completion of process.

    #### OAuthInvalidStateError

    The state param is required and is used to ensure the outgoing authorization state has not been altered before the user is redirected back. It also contains required params needed to identify the connector being used. If this has been altered, the authorization will not succeed.

    #### OAuthCodeExchangeError

    When attempting to exchange the authorization code for an `access_token` during an OAuth flow, an error occurred. This may be temporary. You can reattempt authorization or contact our team to resolve the issue.

    #### OAuthConnectorError

    It seems something went wrong on the connector side. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### MappingError

    There was an error attempting to retrieve the mapping for a given attribute. We've been notified and are working to fix this issue.

    #### ConnectorMappingNotFoundError

    It seems the implementation for this connector is incomplete. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorResponseMappingNotFoundError

    We were unable to retrieve the response mapping for this connector. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorOperationMappingNotFoundError

    Connector mapping has not been implemented for the requested operation. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorWorkflowMappingError

    The composite api calls required for this operation have not been mapped entirely. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorOperationUnsupportedError

    You're attempting a call that is not supported by the connector. It's likely this operation is supported by another connector, but we're unable to implement for this one.

    #### PaginationNotSupportedError

    Pagination is not yet supported for this connector, try removing limit and/or cursor from the query. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    ## API Design

    ### API Styles and data formats

    #### REST API

    The API is organized around [REST](https://restfulapi.net/), providing simple and predictable URIs to access and modify objects. Requests support standard HTTP methods like GET, PUT, POST, and DELETE and standard status codes. JSON is returned by all API responses, including errors. In all API requests, you must set the content-type HTTP header to application/json. All API requests must be made over HTTPS. Calls made over HTTP will fail.

    ##### Available HTTP methods

    The Apideck API uses HTTP verbs to understand if you want to read (GET), delete (DELETE) or create (POST) an object. When your web application cannot do a POST or DELETE, we provide the ability to set the method through the query parameter \_method.

    ```
    POST /messages
    GET /messages
    GET /messages/{messageId}
    PATCH /messages/{messageId}
    DELETE /messages/{messageId}
    ```

    Response bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise. For some endpoints and use cases we divert from REST to provide a better developer experience.

    ### Schema

    All API requests and response bodies adhere to a common JSON format representing individual items, collections of items, links to related items and additional meta data.

    ### Meta

    Meta data can be represented as a top level member named “meta”. Any information may be provided in the meta data. It’s most common use is to return the total number of records when requesting a collection of resources.

    ### Idempotence (upcoming)

    To prevent the creation of duplicate resources, every POST method (such as one that creates a consumer record) must specify a unique value for the X-Unique-Transaction-ID header name. Uniquely identifying each unique POST request ensures that the API processes a given request once and only once.

    Uniquely identifying new resource-creation POSTs is especially important when the outcome of a response is ambiguous because of a transient service interruption, such as a server-side timeout or network disruption. If a service interruption occurs, then the client application can safely retry the uniquely identified request without creating duplicate operations. (API endpoints that guarantee that every uniquely identified request is processed only once no matter how many times that uniquely identifiable request is made are described as idempotent.)

    ### Request IDs

    Each API request has an associated request identifier. You can find this value in the response headers, under Request-Id. You can also find request identifiers in the URLs of individual request logs in your Dashboard. If you need to contact us about a specific request, providing the request identifier will ensure the fastest possible resolution.

    ### Fixed field types

    #### Dates

    The dates returned by the API are all represented in UTC (ISO8601 format).

    This example `2019-11-14T00:55:31.820Z` is defined by the ISO 8601 standard. The T in the middle separates the year-month-day portion from the hour-minute-second portion. The Z on the end means UTC, that is, an offset-from-UTC of zero hours-minutes-seconds. The Z is pronounced "Zulu" per military/aviation tradition.

    The ISO 8601 standard is more modern. The formats are wisely designed to be easy to parse by machine as well as easy to read by humans across cultures.

    #### Prices and Currencies

    All prices returned by the API are represented as integer amounts in a currency’s smallest unit. For example, $5 USD would be returned as 500 (i.e, 500 cents).

    For zero-decimal currencies, amounts will still be provided as an integer but without the need to divide by 100. For example, an amount of ¥5 (JPY) would be returned as 5.

    All currency codes conform to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).

    ## Support

    If you have problems or need help with your case, you can always reach out to our Support.

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Accounting API
  version: 10.0.0
  x-apideck-api: accounting
  x-apideck-sdk-support: true
  x-apisguru-categories:
  - developer_tools
  x-logo:
    url: https://developers.apideck.com/icon.png
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/apideck-libraries/openapi-specs/master/accounting.yml
    version: "3.0"
  x-providerName: apideck.com
  x-serviceName: accounting
  x-tags:
  - partner
externalDocs:
  description: Apideck Developer Docs
  url: https://developers.apideck.com
servers:
- url: https://unify.apideck.com
security:
- apiKey: []
tags:
- description: ""
  name: Bills
  x-apideck-model:
    $ref: '#/components/schemas/Bill'
  x-apideck-resource-id: bills
- description: ""
  name: Company Info
  x-apideck-model:
    $ref: '#/components/schemas/CompanyInfo'
  x-apideck-resource-id: company-info
- description: ""
  name: Credit Notes
  x-apideck-model:
    $ref: '#/components/schemas/CreditNote'
  x-apideck-resource-id: credit-notes
- description: ""
  name: Customers
  x-apideck-model:
    $ref: '#/components/schemas/Customer'
  x-apideck-resource-id: customers
- description: ""
  name: Invoices
  x-apideck-model:
    $ref: '#/components/schemas/Invoice'
  x-apideck-resource-id: invoices
- description: Invoice items are stored from invoice lines to be used later on when
    creating new invoices.
  name: Invoice Items
  x-apideck-model:
    $ref: '#/components/schemas/InvoiceItem'
  x-apideck-resource-id: invoice-items
- description: ""
  name: Ledger Accounts
  x-apideck-model:
    $ref: '#/components/schemas/LedgerAccount'
  x-apideck-resource-id: ledger-accounts
- description: ""
  name: Payments
  x-apideck-model:
    $ref: '#/components/schemas/Payment'
  x-apideck-resource-id: payments
- description: ""
  name: Suppliers
  x-apideck-model:
    $ref: '#/components/schemas/Supplier'
  x-apideck-resource-id: suppliers
- description: ""
  name: Tax Rates
  x-apideck-model:
    $ref: '#/components/schemas/TaxRate'
  x-apideck-resource-id: tax-rates
- description: ""
  name: Balance Sheet
  x-apideck-model:
    $ref: '#/components/schemas/BalanceSheet'
  x-apideck-resource-id: balance-sheet
- description: ""
  name: Profit and Loss
  x-apideck-model:
    $ref: '#/components/schemas/ProfitAndLoss'
  x-apideck-resource-id: profit-and-loss
- description: ""
  name: Journal Entries
  x-apideck-model:
    $ref: '#/components/schemas/JournalEntry'
  x-apideck-resource-id: journal-entries
- description: ""
  name: Purchase Orders
  x-apideck-model:
    $ref: '#/components/schemas/PurchaseOrder'
  x-apideck-resource-id: purchase-orders
paths:
  /accounting/balance-sheet:
    get:
      description: Get BalanceSheet
      operationId: balance_sheet_one
      parameters:
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: "Optional unmapped key/values that will be passed through to\
          \ downstream as query parameters. Ie: ?pass_through[search]=leads becomes\
          \ ?search=leads"
        explode: true
        in: query
        name: pass_through
        required: false
        schema:
          $ref: '#/components/schemas/PassThroughQuery'
        style: deepObject
      - description: Apply filters
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/BalanceSheetFilter'
        style: deepObject
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBalanceSheetResponse'
          description: BalanceSheet
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Get BalanceSheet
      tags:
      - Balance Sheet
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.balanceSheetOne({})
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.balance_sheet_controller
  /accounting/bills:
    get:
      description: List Bills
      operationId: bills_all
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Cursor to start from. You can find cursors for next/previous
          pages in the meta.cursors property of the response.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Number of results to return. Minimum 1, Maximum 200, Default\
          \ 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: Apply sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/BillsSort'
        style: deepObject
      - description: "Optional unmapped key/values that will be passed through to\
          \ downstream as query parameters. Ie: ?pass_through[search]=leads becomes\
          \ ?search=leads"
        explode: true
        in: query
        name: pass_through
        required: false
        schema:
          $ref: '#/components/schemas/PassThroughQuery'
        style: deepObject
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBillsResponse'
          description: Bills
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: List Bills
      tags:
      - Bills
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: clearbooks-uk
        description: Clearbooks does not support setting the pagination size.
      - connector: freshbooks
        description: The Freshbooks Bills api is currently in beta.
      - connector: netsuite
        description: The minimun page size accepted for Netsuite is 5.
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.billsAll({})
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.bills_controller
    post:
      description: Create Bill
      operationId: bills_add
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bill'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBillResponse'
          description: Bill created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Create Bill
      tags:
      - Bills
      x-apideck-api: accounting
      x-apideck-gotchas:
      - Procountor only accepts the following values for the channel field: "EMAIL,\
          \ MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING."
        Procountor only accepts the following values for the language field: "EN,\
          \ FI, SV, ET, NO, and DA."
        Procountor only accepts the following values for the payment_method field: "BANK_TRANSFER,\
          \ DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT, OTHER,\
          \ CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR,\
          \ DKLMPKRE, NETS."
        connector: procountor-fi
        description: ""
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            bill: {
              bill_number: '10001',
              supplier: {
                id: '12345',
                display_name: 'Windsurf Shop',
                address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                }
              },
              currency: 'USD',
              currency_rate: 0.69,
              tax_inclusive: true,
              bill_date: '2020-09-30',
              due_date: '2020-10-30',
              paid_date: '2020-10-30',
              po_number: '90000117',
              reference: '123456',
              line_items: [
                {
                  row_id: '12345',
                  code: '120-C',
                  line_number: 1,
                  description:
                    'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                  type: 'expense_account',
                  tax_amount: 27500,
                  total_amount: 27500,
                  quantity: 1,
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  discount_percentage: 0.01,
                  discount_amount: 19.99,
                  location_id: '1234',
                  department_id: '1234',
                  item: {
                    id: '12344',
                    code: '120-C',
                    name: 'Model Y'
                  },
                  tax_rate: {
                    id: '123456',
                    rate: 10
                  },
                  ledger_account: {
                    id: '123456',
                    nominal_code: 'N091',
                    code: '453'
                  },
                  row_version: '1-12345'
                }
              ],
              terms: 'Net 30 days',
              balance: 27500,
              deposit: 0,
              sub_total: 27500,
              total_tax: 2500,
              total: 27500,
              tax_code: '1234',
              notes: 'Some notes about this bill.',
              status: 'draft',
              ledger_account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              payment_method: 'cash',
              channel: 'email',
              language: 'EN',
              accounting_by_row: false,
              bank_account: {
                bank_name: 'Monzo',
                account_number: '123465',
                account_name: 'SPACEX LLC',
                account_type: 'credit_card',
                iban: 'CH2989144532982975332',
                bic: 'AUDSCHGGXXX',
                routing_number: '012345678',
                bsb_number: '062-001',
                branch_identifier: '001',
                bank_code: 'BNH',
                currency: 'USD'
              },
              discount_percentage: 5.5,
              row_version: '1-12345',
              custom_mappings: {}
            }
          }

          try {
            const { data } = await apideck.accounting.billsAdd(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.bills_controller
      x-codegen-request-body-name: body
  /accounting/bills/{id}:
    delete:
      description: Delete Bill
      operationId: bills_delete
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBillResponse'
          description: Bill deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Delete Bill
      tags:
      - Bills
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.billsDelete({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.bills_controller
    get:
      description: Get Bill
      operationId: bills_one
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBillResponse'
          description: Bill
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Get Bill
      tags:
      - Bills
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: freshbooks
        description: The Freshbooks Bills api is currently in beta.
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.billsOne({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.bills_controller
    patch:
      description: Update Bill
      operationId: bills_update
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bill'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBillResponse'
          description: Bill Updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Update Bill
      tags:
      - Bills
      x-apideck-api: accounting
      x-apideck-gotchas:
      - Procountor only accepts the following values for the channel field: "EMAIL,\
          \ MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING."
        Procountor only accepts the following values for the language field: "EN,\
          \ FI, SV, ET, NO, and DA."
        Procountor only accepts the following values for the payment_method field: "BANK_TRANSFER,\
          \ DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT, OTHER,\
          \ CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR,\
          \ DKLMPKRE, NETS."
        connector: procountor-fi
        description: ""
      - connector: Quickbooks
        description: Quickbooks requires the supplier.id to be sent in order to make
          update operations.
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            id: 'id_example',
            bill: {
              bill_number: '10001',
              supplier: {
                id: '12345',
                display_name: 'Windsurf Shop',
                address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                }
              },
              currency: 'USD',
              currency_rate: 0.69,
              tax_inclusive: true,
              bill_date: '2020-09-30',
              due_date: '2020-10-30',
              paid_date: '2020-10-30',
              po_number: '90000117',
              reference: '123456',
              line_items: [
                {
                  row_id: '12345',
                  code: '120-C',
                  line_number: 1,
                  description:
                    'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                  type: 'expense_account',
                  tax_amount: 27500,
                  total_amount: 27500,
                  quantity: 1,
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  discount_percentage: 0.01,
                  discount_amount: 19.99,
                  location_id: '1234',
                  department_id: '1234',
                  item: {
                    id: '12344',
                    code: '120-C',
                    name: 'Model Y'
                  },
                  tax_rate: {
                    id: '123456',
                    rate: 10
                  },
                  ledger_account: {
                    id: '123456',
                    nominal_code: 'N091',
                    code: '453'
                  },
                  row_version: '1-12345'
                }
              ],
              terms: 'Net 30 days',
              balance: 27500,
              deposit: 0,
              sub_total: 27500,
              total_tax: 2500,
              total: 27500,
              tax_code: '1234',
              notes: 'Some notes about this bill.',
              status: 'draft',
              ledger_account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              payment_method: 'cash',
              channel: 'email',
              language: 'EN',
              accounting_by_row: false,
              bank_account: {
                bank_name: 'Monzo',
                account_number: '123465',
                account_name: 'SPACEX LLC',
                account_type: 'credit_card',
                iban: 'CH2989144532982975332',
                bic: 'AUDSCHGGXXX',
                routing_number: '012345678',
                bsb_number: '062-001',
                branch_identifier: '001',
                bank_code: 'BNH',
                currency: 'USD'
              },
              discount_percentage: 5.5,
              row_version: '1-12345',
              custom_mappings: {}
            }
          }

          try {
            const { data } = await apideck.accounting.billsUpdate(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.bills_controller
      x-codegen-request-body-name: body
  /accounting/company-info:
    get:
      description: Get company info
      operationId: company_info_one
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCompanyInfoResponse'
          description: CompanyInfo
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Get company info
      tags:
      - Company Info
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.companyInfoOne({})
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.company_info_controller
  /accounting/credit-notes:
    get:
      description: List Credit Notes
      operationId: credit_notes_all
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Cursor to start from. You can find cursors for next/previous
          pages in the meta.cursors property of the response.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Number of results to return. Minimum 1, Maximum 200, Default\
          \ 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: "Optional unmapped key/values that will be passed through to\
          \ downstream as query parameters. Ie: ?pass_through[search]=leads becomes\
          \ ?search=leads"
        explode: true
        in: query
        name: pass_through
        required: false
        schema:
          $ref: '#/components/schemas/PassThroughQuery'
        style: deepObject
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCreditNotesResponse'
          description: Credit Notes
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: List Credit Notes
      tags:
      - Credit Notes
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: clearbooks-uk
        description: Clearbooks does not support setting the pagination size.
      - connector: netsuite
        description: The minimun page size accepted for Netsuite is 5.
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.creditNotesAll({})
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.credit_notes_controller
    post:
      description: Create Credit Note
      operationId: credit_notes_add
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditNote'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCreditNoteResponse'
          description: Credit Note created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Create Credit Note
      tags:
      - Credit Notes
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            creditNote: {
              number: 'OIT00546',
              customer: {
                id: '12345',
                display_name: 'Windsurf Shop',
                name: 'Windsurf Shop'
              },
              currency: 'USD',
              currency_rate: 0.69,
              tax_inclusive: true,
              sub_total: 27500,
              total_amount: 49.99,
              total_tax: 2500,
              tax_code: '1234',
              balance: 27500,
              remaining_credit: 27500,
              status: 'authorised',
              reference: '123456',
              date_issued: '2021-05-01T12:00:00.000Z',
              date_paid: '2021-05-01T12:00:00.000Z',
              type: 'accounts_receivable_credit',
              account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              line_items: [
                {
                  row_id: '12345',
                  code: '120-C',
                  line_number: 1,
                  description:
                    'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                  type: 'sales_item',
                  tax_amount: 27500,
                  total_amount: 27500,
                  quantity: 1,
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  discount_percentage: 0.01,
                  discount_amount: 19.99,
                  location_id: '1234',
                  department_id: '1234',
                  item: {
                    id: '12344',
                    code: '120-C',
                    name: 'Model Y'
                  },
                  tax_rate: {
                    id: '123456',
                    rate: 10
                  },
                  ledger_account: {
                    id: '123456',
                    nominal_code: 'N091',
                    code: '453'
                  },
                  custom_mappings: {},
                  row_version: '1-12345'
                }
              ],
              allocations: [
                {
                  id: '123456',
                  type: 'invoice',
                  amount: 49.99
                }
              ],
              note: 'Some notes about this credit note',
              terms: 'Some terms about this credit note',
              custom_mappings: {},
              row_version: '1-12345'
            }
          }

          try {
            const { data } = await apideck.accounting.creditNotesAdd(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.credit_notes_controller
      x-codegen-request-body-name: body
  /accounting/credit-notes/{id}:
    delete:
      description: Delete Credit Note
      operationId: credit_notes_delete
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCreditNoteResponse'
          description: Credit Note deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Delete Credit Note
      tags:
      - Credit Notes
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: xero
        description: Xero will only allow deleting a Credit Note if it is in draft
          status.
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.creditNotesDelete({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.credit_notes_controller
    get:
      description: Get Credit Note
      operationId: credit_notes_one
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCreditNoteResponse'
          description: Credit Note
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Get Credit Note
      tags:
      - Credit Notes
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.creditNotesOne({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.credit_notes_controller
    patch:
      description: Update Credit Note
      operationId: credit_notes_update
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditNote'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCreditNoteResponse'
          description: Credit Note updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Update Credit Note
      tags:
      - Credit Notes
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: xero
        description: Xero will only allow updating a Credit Note when it has not yet
          been allocated.
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            id: 'id_example',
            creditNote: {
              number: 'OIT00546',
              customer: {
                id: '12345',
                display_name: 'Windsurf Shop',
                name: 'Windsurf Shop'
              },
              currency: 'USD',
              currency_rate: 0.69,
              tax_inclusive: true,
              sub_total: 27500,
              total_amount: 49.99,
              total_tax: 2500,
              tax_code: '1234',
              balance: 27500,
              remaining_credit: 27500,
              status: 'authorised',
              reference: '123456',
              date_issued: '2021-05-01T12:00:00.000Z',
              date_paid: '2021-05-01T12:00:00.000Z',
              type: 'accounts_receivable_credit',
              account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              line_items: [
                {
                  row_id: '12345',
                  code: '120-C',
                  line_number: 1,
                  description:
                    'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                  type: 'sales_item',
                  tax_amount: 27500,
                  total_amount: 27500,
                  quantity: 1,
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  discount_percentage: 0.01,
                  discount_amount: 19.99,
                  location_id: '1234',
                  department_id: '1234',
                  item: {
                    id: '12344',
                    code: '120-C',
                    name: 'Model Y'
                  },
                  tax_rate: {
                    id: '123456',
                    rate: 10
                  },
                  ledger_account: {
                    id: '123456',
                    nominal_code: 'N091',
                    code: '453'
                  },
                  custom_mappings: {},
                  row_version: '1-12345'
                }
              ],
              allocations: [
                {
                  id: '123456',
                  type: 'invoice',
                  amount: 49.99
                }
              ],
              note: 'Some notes about this credit note',
              terms: 'Some terms about this credit note',
              custom_mappings: {},
              row_version: '1-12345'
            }
          }

          try {
            const { data } = await apideck.accounting.creditNotesUpdate(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.credit_notes_controller
      x-codegen-request-body-name: body
  /accounting/customers:
    get:
      description: List Customers
      operationId: customers_all
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Cursor to start from. You can find cursors for next/previous
          pages in the meta.cursors property of the response.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Number of results to return. Minimum 1, Maximum 200, Default\
          \ 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: Apply filters
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/CustomersFilter'
        style: deepObject
      - description: "Optional unmapped key/values that will be passed through to\
          \ downstream as query parameters. Ie: ?pass_through[search]=leads becomes\
          \ ?search=leads"
        explode: true
        in: query
        name: pass_through
        required: false
        schema:
          $ref: '#/components/schemas/PassThroughQuery'
        style: deepObject
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomersResponse'
          description: Customers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: List Customers
      tags:
      - Customers
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: netsuite
        description: The minimun page size accepted for Netsuite is 5.
      - connector: clearbooks-uk
        description: Clearbooks does not support setting the pagination size.
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.customersAll({})
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.customers_controller
    post:
      description: Create Customer
      operationId: customers_add
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomerResponse'
          description: Customers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Create Customer
      tags:
      - Customers
      x-apideck-api: accounting
      x-apideck-gotchas:
      - Procountor only accepts the following values for the channel field: "EMAIL,\
          \ MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING."
        Procountor only accepts the following values for the payment_method field: "BANK_TRANSFER,\
          \ DIRECT_DEBIT, DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT,\
          \ OTHER, CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR,\
          \ DKLMPKRE, NETS."
        connector: procountor-fi
        description: ""
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            customer: {
              display_id: 'EMP00101',
              display_name: 'Windsurf Shop',
              company_name: 'SpaceX',
              title: 'CEO',
              first_name: 'Elon',
              middle_name: 'D.',
              last_name: 'Musk',
              suffix: 'Jr.',
              individual: true,
              project: false,
              addresses: [
                {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                }
              ],
              phone_numbers: [
                {
                  id: '12345',
                  country_code: '1',
                  area_code: '323',
                  number: '111-111-1111',
                  extension: '105',
                  type: 'primary'
                }
              ],
              emails: [
                {
                  id: '123',
                  email: 'elon@musk.com',
                  type: 'primary'
                }
              ],
              websites: [
                {
                  id: '12345',
                  url: 'http://example.com',
                  type: 'primary'
                }
              ],
              bank_accounts: [
                {
                  bank_name: 'Monzo',
                  account_number: '123465',
                  account_name: 'SPACEX LLC',
                  account_type: 'credit_card',
                  iban: 'CH2989144532982975332',
                  bic: 'AUDSCHGGXXX',
                  routing_number: '012345678',
                  bsb_number: '062-001',
                  branch_identifier: '001',
                  bank_code: 'BNH',
                  currency: 'USD'
                }
              ],
              notes: 'Some notes about this customer',
              tax_rate: {
                id: '123456',
                rate: 10
              },
              tax_number: 'US123945459',
              currency: 'USD',
              account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              parent: {
                id: '12345',
                name: 'Windsurf Shop'
              },
              status: 'active',
              payment_method: 'cash',
              channel: 'email',
              custom_mappings: {},
              row_version: '1-12345'
            }
          }

          try {
            const { data } = await apideck.accounting.customersAdd(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.customers_controller
      x-codegen-request-body-name: body
  /accounting/customers/{id}:
    delete:
      description: Delete Customer
      operationId: customers_delete
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCustomerResponse'
          description: Customers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Delete Customer
      tags:
      - Customers
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.customersDelete({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.customers_controller
    get:
      description: Get Customer
      operationId: customers_one
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerResponse'
          description: Customer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Get Customer
      tags:
      - Customers
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.customersOne({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.customers_controller
    patch:
      description: Update Customer
      operationId: customers_update
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCustomerResponse'
          description: Customers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Update Customer
      tags:
      - Customers
      x-apideck-api: accounting
      x-apideck-gotchas:
      - Procountor only accepts the following values for the channel field: "EMAIL,\
          \ MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING."
        Procountor only accepts the following values for the payment_method field: "BANK_TRANSFER,\
          \ DIRECT_DEBIT, DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT,\
          \ OTHER, CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR,\
          \ DKLMPKRE, NETS."
        connector: procountor-fi
        description: ""
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            id: 'id_example',
            customer: {
              display_id: 'EMP00101',
              display_name: 'Windsurf Shop',
              company_name: 'SpaceX',
              title: 'CEO',
              first_name: 'Elon',
              middle_name: 'D.',
              last_name: 'Musk',
              suffix: 'Jr.',
              individual: true,
              project: false,
              addresses: [
                {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                }
              ],
              phone_numbers: [
                {
                  id: '12345',
                  country_code: '1',
                  area_code: '323',
                  number: '111-111-1111',
                  extension: '105',
                  type: 'primary'
                }
              ],
              emails: [
                {
                  id: '123',
                  email: 'elon@musk.com',
                  type: 'primary'
                }
              ],
              websites: [
                {
                  id: '12345',
                  url: 'http://example.com',
                  type: 'primary'
                }
              ],
              bank_accounts: [
                {
                  bank_name: 'Monzo',
                  account_number: '123465',
                  account_name: 'SPACEX LLC',
                  account_type: 'credit_card',
                  iban: 'CH2989144532982975332',
                  bic: 'AUDSCHGGXXX',
                  routing_number: '012345678',
                  bsb_number: '062-001',
                  branch_identifier: '001',
                  bank_code: 'BNH',
                  currency: 'USD'
                }
              ],
              notes: 'Some notes about this customer',
              tax_rate: {
                id: '123456',
                rate: 10
              },
              tax_number: 'US123945459',
              currency: 'USD',
              account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              parent: {
                id: '12345',
                name: 'Windsurf Shop'
              },
              status: 'active',
              payment_method: 'cash',
              channel: 'email',
              custom_mappings: {},
              row_version: '1-12345'
            }
          }

          try {
            const { data } = await apideck.accounting.customersUpdate(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.customers_controller
      x-codegen-request-body-name: body
  /accounting/invoice-items:
    get:
      description: List Invoice Items
      operationId: invoice_items_all
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Cursor to start from. You can find cursors for next/previous
          pages in the meta.cursors property of the response.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Number of results to return. Minimum 1, Maximum 200, Default\
          \ 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: Apply filters
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/InvoiceItemsFilter'
        style: deepObject
      - description: "Optional unmapped key/values that will be passed through to\
          \ downstream as query parameters. Ie: ?pass_through[search]=leads becomes\
          \ ?search=leads"
        explode: true
        in: query
        name: pass_through
        required: false
        schema:
          $ref: '#/components/schemas/PassThroughQuery'
        style: deepObject
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInvoiceItemsResponse'
          description: InvoiceItems
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: List Invoice Items
      tags:
      - Invoice Items
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: netsuite
        description: The minimun page size accepted for Netsuite is 5.
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.invoiceItemsAll({})
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.invoice_items_controller
    post:
      description: Create Invoice Item
      operationId: invoice_items_add
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceItem'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInvoiceItemResponse'
          description: InvoiceItems
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Create Invoice Item
      tags:
      - Invoice Items
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            invoiceItem: {
              name: 'Model Y',
              description:
                'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
              code: '120-C',
              sold: true,
              purchased: true,
              tracked: true,
              taxable: true,
              inventory_date: '2020-10-30',
              type: 'inventory',
              sales_details: {
                unit_price: 27500.5,
                unit_of_measure: 'pc.',
                tax_inclusive: true,
                tax_rate: {
                  id: '123456',
                  rate: 10
                }
              },
              purchase_details: {
                unit_price: 27500.5,
                unit_of_measure: 'pc.',
                tax_inclusive: true,
                tax_rate: {
                  id: '123456',
                  rate: 10
                }
              },
              quantity: 1,
              unit_price: 27500.5,
              asset_account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              income_account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              expense_account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              tracking_category: {
                id: '123456',
                name: 'New York'
              },
              active: true,
              custom_mappings: {},
              row_version: '1-12345'
            }
          }

          try {
            const { data } = await apideck.accounting.invoiceItemsAdd(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.invoice_items_controller
      x-codegen-request-body-name: body
  /accounting/invoice-items/{id}:
    delete:
      description: Delete Invoice Item
      operationId: invoice_items_delete
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTaxRateResponse'
          description: InvoiceItems
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Delete Invoice Item
      tags:
      - Invoice Items
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.invoiceItemsDelete({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.invoice_items_controller
    get:
      description: Get Invoice Item
      operationId: invoice_items_one
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInvoiceItemResponse'
          description: InvoiceItems
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Get Invoice Item
      tags:
      - Invoice Items
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.invoiceItemsOne({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.invoice_items_controller
    patch:
      description: Update Invoice Item
      operationId: invoice_items_update
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceItem'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInvoiceItemsResponse'
          description: InvoiceItems
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Update Invoice Item
      tags:
      - Invoice Items
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            id: 'id_example',
            invoiceItem: {
              name: 'Model Y',
              description:
                'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
              code: '120-C',
              sold: true,
              purchased: true,
              tracked: true,
              taxable: true,
              inventory_date: '2020-10-30',
              type: 'inventory',
              sales_details: {
                unit_price: 27500.5,
                unit_of_measure: 'pc.',
                tax_inclusive: true,
                tax_rate: {
                  id: '123456',
                  rate: 10
                }
              },
              purchase_details: {
                unit_price: 27500.5,
                unit_of_measure: 'pc.',
                tax_inclusive: true,
                tax_rate: {
                  id: '123456',
                  rate: 10
                }
              },
              quantity: 1,
              unit_price: 27500.5,
              asset_account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              income_account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              expense_account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              tracking_category: {
                id: '123456',
                name: 'New York'
              },
              active: true,
              custom_mappings: {},
              row_version: '1-12345'
            }
          }

          try {
            const { data } = await apideck.accounting.invoiceItemsUpdate(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.invoice_items_controller
      x-codegen-request-body-name: body
  /accounting/invoices:
    get:
      description: List Invoices
      operationId: invoices_all
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Cursor to start from. You can find cursors for next/previous
          pages in the meta.cursors property of the response.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Number of results to return. Minimum 1, Maximum 200, Default\
          \ 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: Apply sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/InvoicesSort'
        style: deepObject
      - description: "Optional unmapped key/values that will be passed through to\
          \ downstream as query parameters. Ie: ?pass_through[search]=leads becomes\
          \ ?search=leads"
        explode: true
        in: query
        name: pass_through
        required: false
        schema:
          $ref: '#/components/schemas/PassThroughQuery'
        style: deepObject
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInvoicesResponse'
          description: Invoices
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: List Invoices
      tags:
      - Invoices
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: clearbooks-uk
        description: Clearbooks does not support setting the pagination size.
      - connector: netsuite
        description: The minimun page size accepted for Netsuite is 5.
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.invoicesAll({})
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.invoices_controller
    post:
      description: Create Invoice
      operationId: invoices_add
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInvoiceResponse'
          description: Invoice created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Create Invoice
      tags:
      - Invoices
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: quickbooks
        description: Quickbooks offers limited (regional) support for applying discount
          on a Line Item. Including discount_percentage or discount_amount applies
          to entire invoice. The default type for a Line Item is a sales item if no
          type has been provided.
      - Procountor only accepts the following values for the channel field: "EMAIL,\
          \ MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING."
        Procountor only accepts the following values for the language field: "EN,\
          \ FI, SV, ET, NO, and DA."
        Procountor only accepts the following values for the payment_method field: "BANK_TRANSFER,\
          \ DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT, OTHER,\
          \ CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR,\
          \ DKLMPKRE, NETS."
        connector: procountor-fi
        description: ""
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            invoice: {
              type: 'service',
              number: 'OIT00546',
              customer: {
                id: '12345',
                display_name: 'Windsurf Shop',
                name: 'Windsurf Shop'
              },
              invoice_date: '2020-09-30',
              due_date: '2020-09-30',
              terms: 'Net 30 days',
              po_number: '90000117',
              reference: '123456',
              status: 'draft',
              invoice_sent: true,
              currency: 'USD',
              currency_rate: 0.69,
              tax_inclusive: true,
              sub_total: 27500,
              total_tax: 2500,
              tax_code: '1234',
              discount_percentage: 5.5,
              discount_amount: 25,
              total: 27500,
              balance: 27500,
              deposit: 0,
              customer_memo: 'Thank you for your business and have a great day!',
              tracking_category: {
                id: '123456',
                name: 'New York'
              },
              line_items: [
                {
                  row_id: '12345',
                  code: '120-C',
                  line_number: 1,
                  description:
                    'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                  type: 'sales_item',
                  tax_amount: 27500,
                  total_amount: 27500,
                  quantity: 1,
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  discount_percentage: 0.01,
                  discount_amount: 19.99,
                  location_id: '1234',
                  department_id: '1234',
                  item: {
                    id: '12344',
                    code: '120-C',
                    name: 'Model Y'
                  },
                  tax_rate: {
                    id: '123456',
                    rate: 10
                  },
                  ledger_account: {
                    id: '123456',
                    nominal_code: 'N091',
                    code: '453'
                  },
                  custom_mappings: {},
                  row_version: '1-12345'
                }
              ],
              billing_address: {
                id: '123',
                type: 'primary',
                string: '25 Spring Street, Blackburn, VIC 3130',
                name: 'HQ US',
                line1: 'Main street',
                line2: 'apt #',
                line3: 'Suite #',
                line4: 'delivery instructions',
                street_number: '25',
                city: 'San Francisco',
                state: 'CA',
                postal_code: '94104',
                country: 'US',
                latitude: '40.759211',
                longitude: '-73.984638',
                county: 'Santa Clara',
                contact_name: 'Elon Musk',
                salutation: 'Mr',
                phone_number: '111-111-1111',
                fax: '122-111-1111',
                email: 'elon@musk.com',
                website: 'https://elonmusk.com',
                notes: 'Address notes or delivery instructions.',
                row_version: '1-12345'
              },
              shipping_address: {
                id: '123',
                type: 'primary',
                string: '25 Spring Street, Blackburn, VIC 3130',
                name: 'HQ US',
                line1: 'Main street',
                line2: 'apt #',
                line3: 'Suite #',
                line4: 'delivery instructions',
                street_number: '25',
                city: 'San Francisco',
                state: 'CA',
                postal_code: '94104',
                country: 'US',
                latitude: '40.759211',
                longitude: '-73.984638',
                county: 'Santa Clara',
                contact_name: 'Elon Musk',
                salutation: 'Mr',
                phone_number: '111-111-1111',
                fax: '122-111-1111',
                email: 'elon@musk.com',
                website: 'https://elonmusk.com',
                notes: 'Address notes or delivery instructions.',
                row_version: '1-12345'
              },
              template_id: '123456',
              source_document_url: 'https://www.invoicesolution.com/invoice/123456',
              payment_method: 'cash',
              channel: 'email',
              language: 'EN',
              accounting_by_row: false,
              bank_account: {
                bank_name: 'Monzo',
                account_number: '123465',
                account_name: 'SPACEX LLC',
                account_type: 'credit_card',
                iban: 'CH2989144532982975332',
                bic: 'AUDSCHGGXXX',
                routing_number: '012345678',
                bsb_number: '062-001',
                branch_identifier: '001',
                bank_code: 'BNH',
                currency: 'USD'
              },
              ledger_account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              custom_mappings: {},
              row_version: '1-12345'
            }
          }

          try {
            const { data } = await apideck.accounting.invoicesAdd(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.invoices_controller
      x-codegen-request-body-name: body
  /accounting/invoices/{id}:
    delete:
      description: Delete Invoice
      operationId: invoices_delete
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInvoiceResponse'
          description: Invoice deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Delete Invoice
      tags:
      - Invoices
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.invoicesDelete({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.invoices_controller
    get:
      description: Get Invoice
      operationId: invoices_one
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInvoiceResponse'
          description: Invoice
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Get Invoice
      tags:
      - Invoices
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.invoicesOne({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.invoices_controller
    patch:
      description: Update Invoice
      operationId: invoices_update
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInvoiceResponse'
          description: Invoice updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Update Invoice
      tags:
      - Invoices
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: quickbooks
        description: Quickbooks offers limited (regional) support for applying discount
          on a Line Item. Including discount_percentage or discount_amount applies
          to entire invoice. The default type for a Line Item is a sales item if no
          type has been provided.
      - Procountor only accepts the following values for the channel field: "EMAIL,\
          \ MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING."
        Procountor only accepts the following values for the language field: "EN,\
          \ FI, SV, ET, NO, and DA."
        Procountor only accepts the following values for the payment_method field: "BANK_TRANSFER,\
          \ DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT, OTHER,\
          \ CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR,\
          \ DKLMPKRE, NETS."
        connector: procountor-fi
        description: ""
      - connector: exact-online
        description: "To configure the shipping address for invoices, it is recommended\
          \ to update the customer resource. If there is a need to change this property,\
          \ modifying the customer information is advised."
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            id: 'id_example',
            invoice: {
              type: 'service',
              number: 'OIT00546',
              customer: {
                id: '12345',
                display_name: 'Windsurf Shop',
                name: 'Windsurf Shop'
              },
              invoice_date: '2020-09-30',
              due_date: '2020-09-30',
              terms: 'Net 30 days',
              po_number: '90000117',
              reference: '123456',
              status: 'draft',
              invoice_sent: true,
              currency: 'USD',
              currency_rate: 0.69,
              tax_inclusive: true,
              sub_total: 27500,
              total_tax: 2500,
              tax_code: '1234',
              discount_percentage: 5.5,
              discount_amount: 25,
              total: 27500,
              balance: 27500,
              deposit: 0,
              customer_memo: 'Thank you for your business and have a great day!',
              tracking_category: {
                id: '123456',
                name: 'New York'
              },
              line_items: [
                {
                  row_id: '12345',
                  code: '120-C',
                  line_number: 1,
                  description:
                    'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                  type: 'sales_item',
                  tax_amount: 27500,
                  total_amount: 27500,
                  quantity: 1,
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  discount_percentage: 0.01,
                  discount_amount: 19.99,
                  location_id: '1234',
                  department_id: '1234',
                  item: {
                    id: '12344',
                    code: '120-C',
                    name: 'Model Y'
                  },
                  tax_rate: {
                    id: '123456',
                    rate: 10
                  },
                  ledger_account: {
                    id: '123456',
                    nominal_code: 'N091',
                    code: '453'
                  },
                  custom_mappings: {},
                  row_version: '1-12345'
                }
              ],
              billing_address: {
                id: '123',
                type: 'primary',
                string: '25 Spring Street, Blackburn, VIC 3130',
                name: 'HQ US',
                line1: 'Main street',
                line2: 'apt #',
                line3: 'Suite #',
                line4: 'delivery instructions',
                street_number: '25',
                city: 'San Francisco',
                state: 'CA',
                postal_code: '94104',
                country: 'US',
                latitude: '40.759211',
                longitude: '-73.984638',
                county: 'Santa Clara',
                contact_name: 'Elon Musk',
                salutation: 'Mr',
                phone_number: '111-111-1111',
                fax: '122-111-1111',
                email: 'elon@musk.com',
                website: 'https://elonmusk.com',
                notes: 'Address notes or delivery instructions.',
                row_version: '1-12345'
              },
              shipping_address: {
                id: '123',
                type: 'primary',
                string: '25 Spring Street, Blackburn, VIC 3130',
                name: 'HQ US',
                line1: 'Main street',
                line2: 'apt #',
                line3: 'Suite #',
                line4: 'delivery instructions',
                street_number: '25',
                city: 'San Francisco',
                state: 'CA',
                postal_code: '94104',
                country: 'US',
                latitude: '40.759211',
                longitude: '-73.984638',
                county: 'Santa Clara',
                contact_name: 'Elon Musk',
                salutation: 'Mr',
                phone_number: '111-111-1111',
                fax: '122-111-1111',
                email: 'elon@musk.com',
                website: 'https://elonmusk.com',
                notes: 'Address notes or delivery instructions.',
                row_version: '1-12345'
              },
              template_id: '123456',
              source_document_url: 'https://www.invoicesolution.com/invoice/123456',
              payment_method: 'cash',
              channel: 'email',
              language: 'EN',
              accounting_by_row: false,
              bank_account: {
                bank_name: 'Monzo',
                account_number: '123465',
                account_name: 'SPACEX LLC',
                account_type: 'credit_card',
                iban: 'CH2989144532982975332',
                bic: 'AUDSCHGGXXX',
                routing_number: '012345678',
                bsb_number: '062-001',
                branch_identifier: '001',
                bank_code: 'BNH',
                currency: 'USD'
              },
              ledger_account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              custom_mappings: {},
              row_version: '1-12345'
            }
          }

          try {
            const { data } = await apideck.accounting.invoicesUpdate(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.invoices_controller
      x-codegen-request-body-name: body
  /accounting/journal-entries:
    get:
      description: List Journal Entries
      operationId: journal_entries_all
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Cursor to start from. You can find cursors for next/previous
          pages in the meta.cursors property of the response.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Number of results to return. Minimum 1, Maximum 200, Default\
          \ 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: "Optional unmapped key/values that will be passed through to\
          \ downstream as query parameters. Ie: ?pass_through[search]=leads becomes\
          \ ?search=leads"
        explode: true
        in: query
        name: pass_through
        required: false
        schema:
          $ref: '#/components/schemas/PassThroughQuery'
        style: deepObject
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJournalEntriesResponse'
          description: JournalEntry
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: List Journal Entries
      tags:
      - Journal Entries
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: netsuite
        description: The minimun page size accepted for Netsuite is 5.
      - connector: xero
        description: "Xero will return 100 items for each call, so the limit parameter\
          \ is ignored."
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.journalEntriesAll({})
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.journal_entries_controller
    post:
      description: Create Journal Entry
      operationId: journal_entries_add
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntry'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateJournalEntryResponse'
          description: JournalEntries
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Create Journal Entry
      tags:
      - Journal Entries
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: procountor-fi
        description: |
          Procountor only accepts the following values for the tax_code field: SALES, PURCHASE.
      - connector: xero
        description: "When creating journal entries, the returned ID is collected\
          \ from Xero with a maximum of 100 new journal items per day. If more than\
          \ 100 journal entries are created in a single day, the id returned will\
          \ be of the manual journal."
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            journalEntry: {
              title: 'Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry',
              currency_rate: 0.69,
              currency: 'USD',
              line_items: [
                {
                  description:
                    'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                  tax_amount: 27500,
                  sub_total: 27500,
                  total_amount: 27500,
                  type: 'debit',
                  tax_rate: {
                    id: '123456',
                    rate: 10
                  },
                  tracking_category: {
                    id: '123456',
                    name: 'New York'
                  },
                  ledger_account: {
                    id: '123456',
                    nominal_code: 'N091',
                    code: '453'
                  },
                  customer: {
                    id: '12345',
                    display_name: 'Windsurf Shop',
                    name: 'Windsurf Shop'
                  },
                  supplier: {
                    id: '12345',
                    display_name: 'Windsurf Shop',
                    address: {
                      id: '123',
                      type: 'primary',
                      string: '25 Spring Street, Blackburn, VIC 3130',
                      name: 'HQ US',
                      line1: 'Main street',
                      line2: 'apt #',
                      line3: 'Suite #',
                      line4: 'delivery instructions',
                      street_number: '25',
                      city: 'San Francisco',
                      state: 'CA',
                      postal_code: '94104',
                      country: 'US',
                      latitude: '40.759211',
                      longitude: '-73.984638',
                      county: 'Santa Clara',
                      contact_name: 'Elon Musk',
                      salutation: 'Mr',
                      phone_number: '111-111-1111',
                      fax: '122-111-1111',
                      email: 'elon@musk.com',
                      website: 'https://elonmusk.com',
                      notes: 'Address notes or delivery instructions.',
                      row_version: '1-12345'
                    }
                  }
                },
                {
                  description:
                    'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                  tax_amount: 27500,
                  sub_total: 27500,
                  total_amount: 27500,
                  type: 'debit',
                  tax_rate: {
                    id: '123456',
                    rate: 10
                  },
                  tracking_category: {
                    id: '123456',
                    name: 'New York'
                  },
                  ledger_account: {
                    id: '123456',
                    nominal_code: 'N091',
                    code: '453'
                  },
                  customer: {
                    id: '12345',
                    display_name: 'Windsurf Shop',
                    name: 'Windsurf Shop'
                  },
                  supplier: {
                    id: '12345',
                    display_name: 'Windsurf Shop',
                    address: {
                      id: '123',
                      type: 'primary',
                      string: '25 Spring Street, Blackburn, VIC 3130',
                      name: 'HQ US',
                      line1: 'Main street',
                      line2: 'apt #',
                      line3: 'Suite #',
                      line4: 'delivery instructions',
                      street_number: '25',
                      city: 'San Francisco',
                      state: 'CA',
                      postal_code: '94104',
                      country: 'US',
                      latitude: '40.759211',
                      longitude: '-73.984638',
                      county: 'Santa Clara',
                      contact_name: 'Elon Musk',
                      salutation: 'Mr',
                      phone_number: '111-111-1111',
                      fax: '122-111-1111',
                      email: 'elon@musk.com',
                      website: 'https://elonmusk.com',
                      notes: 'Address notes or delivery instructions.',
                      row_version: '1-12345'
                    }
                  }
                }
              ],
              memo: 'Thank you for your business and have a great day!',
              posted_at: '2020-09-30T07:43:32.000Z',
              journal_symbol: 'IND',
              tax_type: 'sales',
              tax_code: '1234',
              number: 'OIT00546',
              custom_mappings: {},
              row_version: '1-12345'
            }
          }

          try {
            const { data } = await apideck.accounting.journalEntriesAdd(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.journal_entries_controller
      x-codegen-request-body-name: body
  /accounting/journal-entries/{id}:
    delete:
      description: Delete Journal Entry
      operationId: journal_entries_delete
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteJournalEntryResponse'
          description: JournalEntries
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Delete Journal Entry
      tags:
      - Journal Entries
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.journalEntriesDelete({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.journal_entries_controller
    get:
      description: Get Journal Entry
      operationId: journal_entries_one
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJournalEntryResponse'
          description: JournalEntries
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Get Journal Entry
      tags:
      - Journal Entries
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.journalEntriesOne({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.journal_entries_controller
    patch:
      description: Update Journal Entry
      operationId: journal_entries_update
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntry'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateJournalEntryResponse'
          description: JournalEntries
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Update Journal Entry
      tags:
      - Journal Entries
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: procountor-fi
        description: |
          Procountor only accepts the following values for the tax_code field: SALES, PURCHASE.
          Procountor requires row_version to be set when updating a journal entry. The row_version should be equivalent to the current row_version of the resource
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            id: 'id_example',
            journalEntry: {
              title: 'Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry',
              currency_rate: 0.69,
              currency: 'USD',
              line_items: [
                {
                  description:
                    'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                  tax_amount: 27500,
                  sub_total: 27500,
                  total_amount: 27500,
                  type: 'debit',
                  tax_rate: {
                    id: '123456',
                    rate: 10
                  },
                  tracking_category: {
                    id: '123456',
                    name: 'New York'
                  },
                  ledger_account: {
                    id: '123456',
                    nominal_code: 'N091',
                    code: '453'
                  },
                  customer: {
                    id: '12345',
                    display_name: 'Windsurf Shop',
                    name: 'Windsurf Shop'
                  },
                  supplier: {
                    id: '12345',
                    display_name: 'Windsurf Shop',
                    address: {
                      id: '123',
                      type: 'primary',
                      string: '25 Spring Street, Blackburn, VIC 3130',
                      name: 'HQ US',
                      line1: 'Main street',
                      line2: 'apt #',
                      line3: 'Suite #',
                      line4: 'delivery instructions',
                      street_number: '25',
                      city: 'San Francisco',
                      state: 'CA',
                      postal_code: '94104',
                      country: 'US',
                      latitude: '40.759211',
                      longitude: '-73.984638',
                      county: 'Santa Clara',
                      contact_name: 'Elon Musk',
                      salutation: 'Mr',
                      phone_number: '111-111-1111',
                      fax: '122-111-1111',
                      email: 'elon@musk.com',
                      website: 'https://elonmusk.com',
                      notes: 'Address notes or delivery instructions.',
                      row_version: '1-12345'
                    }
                  }
                },
                {
                  description:
                    'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                  tax_amount: 27500,
                  sub_total: 27500,
                  total_amount: 27500,
                  type: 'debit',
                  tax_rate: {
                    id: '123456',
                    rate: 10
                  },
                  tracking_category: {
                    id: '123456',
                    name: 'New York'
                  },
                  ledger_account: {
                    id: '123456',
                    nominal_code: 'N091',
                    code: '453'
                  },
                  customer: {
                    id: '12345',
                    display_name: 'Windsurf Shop',
                    name: 'Windsurf Shop'
                  },
                  supplier: {
                    id: '12345',
                    display_name: 'Windsurf Shop',
                    address: {
                      id: '123',
                      type: 'primary',
                      string: '25 Spring Street, Blackburn, VIC 3130',
                      name: 'HQ US',
                      line1: 'Main street',
                      line2: 'apt #',
                      line3: 'Suite #',
                      line4: 'delivery instructions',
                      street_number: '25',
                      city: 'San Francisco',
                      state: 'CA',
                      postal_code: '94104',
                      country: 'US',
                      latitude: '40.759211',
                      longitude: '-73.984638',
                      county: 'Santa Clara',
                      contact_name: 'Elon Musk',
                      salutation: 'Mr',
                      phone_number: '111-111-1111',
                      fax: '122-111-1111',
                      email: 'elon@musk.com',
                      website: 'https://elonmusk.com',
                      notes: 'Address notes or delivery instructions.',
                      row_version: '1-12345'
                    }
                  }
                }
              ],
              memo: 'Thank you for your business and have a great day!',
              posted_at: '2020-09-30T07:43:32.000Z',
              journal_symbol: 'IND',
              tax_type: 'sales',
              tax_code: '1234',
              number: 'OIT00546',
              custom_mappings: {},
              row_version: '1-12345'
            }
          }

          try {
            const { data } = await apideck.accounting.journalEntriesUpdate(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.journal_entries_controller
      x-codegen-request-body-name: body
  /accounting/ledger-accounts:
    get:
      description: List Ledger Accounts
      operationId: ledger_accounts_all
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Cursor to start from. You can find cursors for next/previous
          pages in the meta.cursors property of the response.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Number of results to return. Minimum 1, Maximum 200, Default\
          \ 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: "Optional unmapped key/values that will be passed through to\
          \ downstream as query parameters. Ie: ?pass_through[search]=leads becomes\
          \ ?search=leads"
        explode: true
        in: query
        name: pass_through
        required: false
        schema:
          $ref: '#/components/schemas/PassThroughQuery'
        style: deepObject
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLedgerAccountsResponse'
          description: LedgerAccounts
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: List Ledger Accounts
      tags:
      - Ledger Accounts
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: netsuite
        description: The minimun page size accepted for Netsuite is 5.
      - connector: clearbooks-uk
        description: Clearbooks does not support setting the pagination size.
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.ledgerAccountsAll({})
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.ledger_accounts_controller
    post:
      description: Create Ledger Account
      operationId: ledger_accounts_add
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LedgerAccount'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLedgerAccountResponse'
          description: LedgerAccount created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Create Ledger Account
      tags:
      - Ledger Accounts
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            ledgerAccount: {
              display_id: '1-12345',
              nominal_code: 'N091',
              code: '453',
              classification: 'asset',
              type: 'bank',
              sub_type: 'CHECKING_ACCOUNT',
              name: 'Bank account',
              fully_qualified_name: 'Asset.Bank.Checking_Account',
              description: 'Main checking account',
              opening_balance: 75000,
              current_balance: 20000,
              currency: 'USD',
              tax_type: 'NONE',
              tax_rate: {
                id: '123456',
                rate: 10
              },
              level: 1,
              active: true,
              status: 'active',
              header: true,
              bank_account: {
                bank_name: 'Monzo',
                account_number: '123465',
                account_name: 'SPACEX LLC',
                account_type: 'credit_card',
                iban: 'CH2989144532982975332',
                bic: 'AUDSCHGGXXX',
                routing_number: '012345678',
                bsb_number: '062-001',
                branch_identifier: '001',
                bank_code: 'BNH',
                currency: 'USD'
              },
              parent_account: {
                id: '12345',
                name: 'Bank Accounts',
                display_id: '1-1100'
              },
              sub_account: false,
              last_reconciliation_date: '2020-09-30',
              custom_mappings: {},
              row_version: '1-12345'
            }
          }

          try {
            const { data } = await apideck.accounting.ledgerAccountsAdd(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.ledger_accounts_controller
      x-codegen-request-body-name: body
  /accounting/ledger-accounts/{id}:
    delete:
      description: Delete Ledger Account
      operationId: ledger_accounts_delete
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLedgerAccountResponse'
          description: LedgerAccount deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Delete Ledger Account
      tags:
      - Ledger Accounts
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.ledgerAccountsDelete({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.ledger_accounts_controller
    get:
      description: Get Ledger Account
      operationId: ledger_accounts_one
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLedgerAccountResponse'
          description: LedgerAccount
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Get Ledger Account
      tags:
      - Ledger Accounts
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.ledgerAccountsOne({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.ledger_accounts_controller
    patch:
      description: Update Ledger Account
      operationId: ledger_accounts_update
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LedgerAccount'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLedgerAccountResponse'
          description: LedgerAccount updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Update Ledger Account
      tags:
      - Ledger Accounts
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            id: 'id_example',
            ledgerAccount: {
              display_id: '1-12345',
              nominal_code: 'N091',
              code: '453',
              classification: 'asset',
              type: 'bank',
              sub_type: 'CHECKING_ACCOUNT',
              name: 'Bank account',
              fully_qualified_name: 'Asset.Bank.Checking_Account',
              description: 'Main checking account',
              opening_balance: 75000,
              current_balance: 20000,
              currency: 'USD',
              tax_type: 'NONE',
              tax_rate: {
                id: '123456',
                rate: 10
              },
              level: 1,
              active: true,
              status: 'active',
              header: true,
              bank_account: {
                bank_name: 'Monzo',
                account_number: '123465',
                account_name: 'SPACEX LLC',
                account_type: 'credit_card',
                iban: 'CH2989144532982975332',
                bic: 'AUDSCHGGXXX',
                routing_number: '012345678',
                bsb_number: '062-001',
                branch_identifier: '001',
                bank_code: 'BNH',
                currency: 'USD'
              },
              parent_account: {
                id: '12345',
                name: 'Bank Accounts',
                display_id: '1-1100'
              },
              sub_account: false,
              last_reconciliation_date: '2020-09-30',
              custom_mappings: {},
              row_version: '1-12345'
            }
          }

          try {
            const { data } = await apideck.accounting.ledgerAccountsUpdate(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.ledger_accounts_controller
      x-codegen-request-body-name: body
  /accounting/payments:
    get:
      description: List Payments
      operationId: payments_all
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Cursor to start from. You can find cursors for next/previous
          pages in the meta.cursors property of the response.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Number of results to return. Minimum 1, Maximum 200, Default\
          \ 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: Apply filters
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/PaymentsFilter'
        style: deepObject
      - description: "Optional unmapped key/values that will be passed through to\
          \ downstream as query parameters. Ie: ?pass_through[search]=leads becomes\
          \ ?search=leads"
        explode: true
        in: query
        name: pass_through
        required: false
        schema:
          $ref: '#/components/schemas/PassThroughQuery'
        style: deepObject
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentsResponse'
          description: Payments
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: List Payments
      tags:
      - Payments
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: netsuite
        description: The minimun page size accepted for Netsuite is 5.
      - connector: kashflow
        description: "Kashflow only allows to retrieve payments by invoice, so in\
          \ order to use this endpoint the filter[invoice_number] parameter is required."
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.paymentsAll({})
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.payments_controller
    post:
      description: Create Payment
      operationId: payments_add
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePaymentResponse'
          description: Payment created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Create Payment
      tags:
      - Payments
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            payment: {
              currency: 'USD',
              currency_rate: 0.69,
              total_amount: 49.99,
              reference: '123456',
              payment_method: 'Credit Card',
              payment_method_reference: '123456',
              payment_method_id: '123456',
              accounts_receivable_account_type: 'Account',
              accounts_receivable_account_id: '123456',
              account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              transaction_date: '2021-05-01T12:00:00.000Z',
              customer: {
                id: '12345',
                display_name: 'Windsurf Shop',
                name: 'Windsurf Shop'
              },
              supplier: {
                id: '12345',
                display_name: 'Windsurf Shop',
                address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                }
              },
              reconciled: true,
              status: 'authorised',
              type: 'accounts_receivable',
              allocations: [
                {
                  id: '123456',
                  type: 'invoice',
                  amount: 49.99
                }
              ],
              note: 'Some notes about this payment',
              row_version: '1-12345',
              display_id: '123456',
              custom_mappings: {}
            }
          }

          try {
            const { data } = await apideck.accounting.paymentsAdd(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.payments_controller
      x-codegen-request-body-name: body
  /accounting/payments/{id}:
    delete:
      description: Delete Payment
      operationId: payments_delete
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePaymentResponse'
          description: Payment deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Delete Payment
      tags:
      - Payments
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.paymentsDelete({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.payments_controller
    get:
      description: Get Payment
      operationId: payments_one
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentResponse'
          description: Payment
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Get Payment
      tags:
      - Payments
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.paymentsOne({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.payments_controller
    patch:
      description: Update Payment
      operationId: payments_update
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePaymentResponse'
          description: Payment Updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Update Payment
      tags:
      - Payments
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            id: 'id_example',
            payment: {
              currency: 'USD',
              currency_rate: 0.69,
              total_amount: 49.99,
              reference: '123456',
              payment_method: 'Credit Card',
              payment_method_reference: '123456',
              payment_method_id: '123456',
              accounts_receivable_account_type: 'Account',
              accounts_receivable_account_id: '123456',
              account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              transaction_date: '2021-05-01T12:00:00.000Z',
              customer: {
                id: '12345',
                display_name: 'Windsurf Shop',
                name: 'Windsurf Shop'
              },
              supplier: {
                id: '12345',
                display_name: 'Windsurf Shop',
                address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                }
              },
              reconciled: true,
              status: 'authorised',
              type: 'accounts_receivable',
              allocations: [
                {
                  id: '123456',
                  type: 'invoice',
                  amount: 49.99
                }
              ],
              note: 'Some notes about this payment',
              row_version: '1-12345',
              display_id: '123456',
              custom_mappings: {}
            }
          }

          try {
            const { data } = await apideck.accounting.paymentsUpdate(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.payments_controller
      x-codegen-request-body-name: body
  /accounting/profit-and-loss:
    get:
      description: Get Profit and Loss
      operationId: profit_and_loss_one
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Apply filters
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/ProfitAndLossFilter'
        style: deepObject
      - description: "Optional unmapped key/values that will be passed through to\
          \ downstream as query parameters. Ie: ?pass_through[search]=leads becomes\
          \ ?search=leads"
        explode: true
        in: query
        name: pass_through
        required: false
        schema:
          $ref: '#/components/schemas/PassThroughQuery'
        style: deepObject
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProfitAndLossResponse'
          description: Profit & Loss Report
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Get Profit and Loss
      tags:
      - Profit and Loss
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.profitAndLossOne({})
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.profit_and_loss_controller
  /accounting/purchase-orders:
    get:
      description: List Purchase Orders
      operationId: purchase_orders_all
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Cursor to start from. You can find cursors for next/previous
          pages in the meta.cursors property of the response.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Optional unmapped key/values that will be passed through to\
          \ downstream as query parameters. Ie: ?pass_through[search]=leads becomes\
          \ ?search=leads"
        explode: true
        in: query
        name: pass_through
        required: false
        schema:
          $ref: '#/components/schemas/PassThroughQuery'
        style: deepObject
      - description: "Number of results to return. Minimum 1, Maximum 200, Default\
          \ 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPurchaseOrdersResponse'
          description: PurchaseOrders
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: List Purchase Orders
      tags:
      - Purchase Orders
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: netsuite
        description: The minimun page size accepted for Netsuite is 5.
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.purchaseOrdersAll({})
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.purchase_orders_controller
    post:
      description: Create Purchase Order
      operationId: purchase_orders_add
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrder'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePurchaseOrderResponse'
          description: PurchaseOrders
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Create Purchase Order
      tags:
      - Purchase Orders
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: xero
        description: "Xero accepts a shipping address as a string instead of separate\
          \ fields. Ie: `23 Main Street\r\nCentral City\r\nMarineville\r\n1234\r\n\
          `"
      - Procountor only accepts the following values for the channel field: "EMAIL,\
          \ MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING."
        Procountor only accepts the following values for the payment_method field: "BANK_TRANSFER,\
          \ DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT, OTHER,\
          \ CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR,\
          \ DKLMPKRE, NETS."
        connector: procountor-fi
        description: ""
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            purchaseOrder: {
              po_number: '90000117',
              reference: '123456',
              supplier: {
                id: '12345',
                display_name: 'Windsurf Shop',
                address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                }
              },
              status: 'open',
              issued_date: '2020-09-30',
              delivery_date: '2020-09-30',
              expected_arrival_date: '2020-09-30',
              currency: 'USD',
              currency_rate: 0.69,
              sub_total: 27500,
              total_tax: 2500,
              total: 27500,
              tax_inclusive: true,
              line_items: [
                {
                  row_id: '12345',
                  code: '120-C',
                  line_number: 1,
                  description:
                    'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                  type: 'sales_item',
                  tax_amount: 27500,
                  total_amount: 27500,
                  quantity: 1,
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  discount_percentage: 0.01,
                  discount_amount: 19.99,
                  location_id: '1234',
                  department_id: '1234',
                  item: {
                    id: '12344',
                    code: '120-C',
                    name: 'Model Y'
                  },
                  tax_rate: {
                    id: '123456',
                    rate: 10
                  },
                  ledger_account: {
                    id: '123456',
                    nominal_code: 'N091',
                    code: '453'
                  },
                  custom_mappings: {},
                  row_version: '1-12345'
                }
              ],
              shipping_address: {
                id: '123',
                type: 'primary',
                string: '25 Spring Street, Blackburn, VIC 3130',
                name: 'HQ US',
                line1: 'Main street',
                line2: 'apt #',
                line3: 'Suite #',
                line4: 'delivery instructions',
                street_number: '25',
                city: 'San Francisco',
                state: 'CA',
                postal_code: '94104',
                country: 'US',
                latitude: '40.759211',
                longitude: '-73.984638',
                county: 'Santa Clara',
                contact_name: 'Elon Musk',
                salutation: 'Mr',
                phone_number: '111-111-1111',
                fax: '122-111-1111',
                email: 'elon@musk.com',
                website: 'https://elonmusk.com',
                notes: 'Address notes or delivery instructions.',
                row_version: '1-12345'
              },
              ledger_account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              template_id: '123456',
              discount_percentage: 5.5,
              bank_account: {
                bank_name: 'Monzo',
                account_number: '123465',
                account_name: 'SPACEX LLC',
                account_type: 'credit_card',
                iban: 'CH2989144532982975332',
                bic: 'AUDSCHGGXXX',
                routing_number: '012345678',
                bsb_number: '062-001',
                branch_identifier: '001',
                bank_code: 'BNH',
                currency: 'USD'
              },
              accounting_by_row: false,
              due_date: '2020-10-30',
              payment_method: 'cash',
              tax_code: '1234',
              channel: 'email',
              memo: 'Thank you for the partnership and have a great day!',
              custom_mappings: {},
              row_version: '1-12345'
            }
          }

          try {
            const { data } = await apideck.accounting.purchaseOrdersAdd(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.purchase_orders_controller
      x-codegen-request-body-name: body
  /accounting/purchase-orders/{id}:
    delete:
      description: Delete Purchase Order
      operationId: purchase_orders_delete
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePurchaseOrderResponse'
          description: PurchaseOrders
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Delete Purchase Order
      tags:
      - Purchase Orders
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.purchaseOrdersDelete({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.purchase_orders_controller
    get:
      description: Get Purchase Order
      operationId: purchase_orders_one
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPurchaseOrderResponse'
          description: PurchaseOrders
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Get Purchase Order
      tags:
      - Purchase Orders
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.purchaseOrdersOne({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.purchase_orders_controller
    patch:
      description: Update Purchase Order
      operationId: purchase_orders_update
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrder'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePurchaseOrderResponse'
          description: PurchaseOrders
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Update Purchase Order
      tags:
      - Purchase Orders
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: xero
        description: "Xero accepts a shipping address as a string instead of separate\
          \ fields. Ie: `23 Main Street\r\nCentral City\r\nMarineville\r\n1234\r\n\
          `"
      - Procountor only accepts the following values for the channel field: "EMAIL,\
          \ MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING."
        Procountor only accepts the following values for the payment_method field: "BANK_TRANSFER,\
          \ DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT, OTHER,\
          \ CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR,\
          \ DKLMPKRE, NETS."
        connector: procountor-fi
        description: ""
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            id: 'id_example',
            purchaseOrder: {
              po_number: '90000117',
              reference: '123456',
              supplier: {
                id: '12345',
                display_name: 'Windsurf Shop',
                address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                }
              },
              status: 'open',
              issued_date: '2020-09-30',
              delivery_date: '2020-09-30',
              expected_arrival_date: '2020-09-30',
              currency: 'USD',
              currency_rate: 0.69,
              sub_total: 27500,
              total_tax: 2500,
              total: 27500,
              tax_inclusive: true,
              line_items: [
                {
                  row_id: '12345',
                  code: '120-C',
                  line_number: 1,
                  description:
                    'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                  type: 'sales_item',
                  tax_amount: 27500,
                  total_amount: 27500,
                  quantity: 1,
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  discount_percentage: 0.01,
                  discount_amount: 19.99,
                  location_id: '1234',
                  department_id: '1234',
                  item: {
                    id: '12344',
                    code: '120-C',
                    name: 'Model Y'
                  },
                  tax_rate: {
                    id: '123456',
                    rate: 10
                  },
                  ledger_account: {
                    id: '123456',
                    nominal_code: 'N091',
                    code: '453'
                  },
                  custom_mappings: {},
                  row_version: '1-12345'
                }
              ],
              shipping_address: {
                id: '123',
                type: 'primary',
                string: '25 Spring Street, Blackburn, VIC 3130',
                name: 'HQ US',
                line1: 'Main street',
                line2: 'apt #',
                line3: 'Suite #',
                line4: 'delivery instructions',
                street_number: '25',
                city: 'San Francisco',
                state: 'CA',
                postal_code: '94104',
                country: 'US',
                latitude: '40.759211',
                longitude: '-73.984638',
                county: 'Santa Clara',
                contact_name: 'Elon Musk',
                salutation: 'Mr',
                phone_number: '111-111-1111',
                fax: '122-111-1111',
                email: 'elon@musk.com',
                website: 'https://elonmusk.com',
                notes: 'Address notes or delivery instructions.',
                row_version: '1-12345'
              },
              ledger_account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              template_id: '123456',
              discount_percentage: 5.5,
              bank_account: {
                bank_name: 'Monzo',
                account_number: '123465',
                account_name: 'SPACEX LLC',
                account_type: 'credit_card',
                iban: 'CH2989144532982975332',
                bic: 'AUDSCHGGXXX',
                routing_number: '012345678',
                bsb_number: '062-001',
                branch_identifier: '001',
                bank_code: 'BNH',
                currency: 'USD'
              },
              accounting_by_row: false,
              due_date: '2020-10-30',
              payment_method: 'cash',
              tax_code: '1234',
              channel: 'email',
              memo: 'Thank you for the partnership and have a great day!',
              custom_mappings: {},
              row_version: '1-12345'
            }
          }

          try {
            const { data } = await apideck.accounting.purchaseOrdersUpdate(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.purchase_orders_controller
      x-codegen-request-body-name: body
  /accounting/suppliers:
    get:
      description: List Suppliers
      operationId: suppliers_all
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Cursor to start from. You can find cursors for next/previous
          pages in the meta.cursors property of the response.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Number of results to return. Minimum 1, Maximum 200, Default\
          \ 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: Apply filters
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/SuppliersFilter'
        style: deepObject
      - description: "Optional unmapped key/values that will be passed through to\
          \ downstream as query parameters. Ie: ?pass_through[search]=leads becomes\
          \ ?search=leads"
        explode: true
        in: query
        name: pass_through
        required: false
        schema:
          $ref: '#/components/schemas/PassThroughQuery'
        style: deepObject
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSuppliersResponse'
          description: Suppliers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: List Suppliers
      tags:
      - Suppliers
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: clearbooks-uk
        description: Clearbooks does not support setting the pagination size.
      - Procountor only accepts the following values for the channel field: "EMAIL,\
          \ MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING."
        Procountor only accepts the following values for the payment_method field: "BANK_TRANSFER,\
          \ DIRECT_DEBIT, DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT,\
          \ OTHER, CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR,\
          \ DKLMPKRE, NETS."
        connector: procountor-fi
        description: ""
      - connector: netsuite
        description: The minimun page size accepted for Netsuite is 5.
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.suppliersAll({})
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.suppliers_controller
    post:
      description: Create Supplier
      operationId: suppliers_add
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSupplierResponse'
          description: Supplier created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Create Supplier
      tags:
      - Suppliers
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            supplier: {
              display_id: 'EMP00101',
              display_name: 'Windsurf Shop',
              company_name: 'SpaceX',
              title: 'CEO',
              first_name: 'Elon',
              middle_name: 'D.',
              last_name: 'Musk',
              suffix: 'Jr.',
              individual: true,
              addresses: [
                {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                }
              ],
              phone_numbers: [
                {
                  id: '12345',
                  country_code: '1',
                  area_code: '323',
                  number: '111-111-1111',
                  extension: '105',
                  type: 'primary'
                }
              ],
              emails: [
                {
                  id: '123',
                  email: 'elon@musk.com',
                  type: 'primary'
                }
              ],
              websites: [
                {
                  id: '12345',
                  url: 'http://example.com',
                  type: 'primary'
                }
              ],
              bank_accounts: [
                {
                  bank_name: 'Monzo',
                  account_number: '123465',
                  account_name: 'SPACEX LLC',
                  account_type: 'credit_card',
                  iban: 'CH2989144532982975332',
                  bic: 'AUDSCHGGXXX',
                  routing_number: '012345678',
                  bsb_number: '062-001',
                  branch_identifier: '001',
                  bank_code: 'BNH',
                  currency: 'USD'
                }
              ],
              notes: 'Some notes about this supplier',
              tax_rate: {
                id: '123456',
                rate: 10
              },
              tax_number: 'US123945459',
              currency: 'USD',
              account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              status: 'active',
              payment_method: 'cash',
              channel: 'email',
              custom_mappings: {},
              row_version: '1-12345'
            }
          }

          try {
            const { data } = await apideck.accounting.suppliersAdd(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.suppliers_controller
      x-codegen-request-body-name: body
  /accounting/suppliers/{id}:
    delete:
      description: Delete Supplier
      operationId: suppliers_delete
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSupplierResponse'
          description: Supplier deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Delete Supplier
      tags:
      - Suppliers
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.suppliersDelete({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.suppliers_controller
    get:
      description: Get Supplier
      operationId: suppliers_one
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSupplierResponse'
          description: Supplier
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Get Supplier
      tags:
      - Suppliers
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.suppliersOne({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.suppliers_controller
    patch:
      description: Update Supplier
      operationId: suppliers_update
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSupplierResponse'
          description: Supplier updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Update Supplier
      tags:
      - Suppliers
      x-apideck-api: accounting
      x-apideck-gotchas:
      - Procountor only accepts the following values for the channel field: "EMAIL,\
          \ MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING."
        Procountor only accepts the following values for the payment_method field: "BANK_TRANSFER,\
          \ DIRECT_DEBIT, DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT,\
          \ OTHER, CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR,\
          \ DKLMPKRE, NETS."
        connector: procountor-fi
        description: ""
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            id: 'id_example',
            supplier: {
              display_id: 'EMP00101',
              display_name: 'Windsurf Shop',
              company_name: 'SpaceX',
              title: 'CEO',
              first_name: 'Elon',
              middle_name: 'D.',
              last_name: 'Musk',
              suffix: 'Jr.',
              individual: true,
              addresses: [
                {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                }
              ],
              phone_numbers: [
                {
                  id: '12345',
                  country_code: '1',
                  area_code: '323',
                  number: '111-111-1111',
                  extension: '105',
                  type: 'primary'
                }
              ],
              emails: [
                {
                  id: '123',
                  email: 'elon@musk.com',
                  type: 'primary'
                }
              ],
              websites: [
                {
                  id: '12345',
                  url: 'http://example.com',
                  type: 'primary'
                }
              ],
              bank_accounts: [
                {
                  bank_name: 'Monzo',
                  account_number: '123465',
                  account_name: 'SPACEX LLC',
                  account_type: 'credit_card',
                  iban: 'CH2989144532982975332',
                  bic: 'AUDSCHGGXXX',
                  routing_number: '012345678',
                  bsb_number: '062-001',
                  branch_identifier: '001',
                  bank_code: 'BNH',
                  currency: 'USD'
                }
              ],
              notes: 'Some notes about this supplier',
              tax_rate: {
                id: '123456',
                rate: 10
              },
              tax_number: 'US123945459',
              currency: 'USD',
              account: {
                id: '123456',
                nominal_code: 'N091',
                code: '453'
              },
              status: 'active',
              payment_method: 'cash',
              channel: 'email',
              custom_mappings: {},
              row_version: '1-12345'
            }
          }

          try {
            const { data } = await apideck.accounting.suppliersUpdate(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.suppliers_controller
      x-codegen-request-body-name: body
  /accounting/tax-rates:
    get:
      description: |
        List Tax Rates. Note: Not all connectors return the actual rate/percentage value. In this case, only the tax code or reference is returned. Connectors Affected: Quickbooks
      operationId: tax_rates_all
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Cursor to start from. You can find cursors for next/previous
          pages in the meta.cursors property of the response.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Number of results to return. Minimum 1, Maximum 200, Default\
          \ 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: Apply filters
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/TaxRatesFilter'
        style: deepObject
      - description: "Optional unmapped key/values that will be passed through to\
          \ downstream as query parameters. Ie: ?pass_through[search]=leads becomes\
          \ ?search=leads"
        explode: true
        in: query
        name: pass_through
        required: false
        schema:
          $ref: '#/components/schemas/PassThroughQuery'
        style: deepObject
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaxRatesResponse'
          description: TaxRates
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: List Tax Rates
      tags:
      - Tax Rates
      x-apideck-api: accounting
      x-apideck-gotchas:
      - connector: netsuite
        description: The minimun page size accepted for Netsuite is 5.
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.taxRatesAll({})
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.tax_rates_controller
    post:
      description: Create Tax Rate
      operationId: tax_rates_add
      parameters:
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRate'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaxRateResponse'
          description: TaxRate created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Create Tax Rate
      tags:
      - Tax Rates
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            taxRate: {
              id: '1234',
              name: 'GST on Purchases',
              code: 'ABN',
              description: 'Reduced rate GST Purchases',
              effective_tax_rate: 10,
              total_tax_rate: 10,
              tax_payable_account_id: '123456',
              tax_remitted_account_id: '123456',
              components: [
                {
                  id: '10',
                  name: 'GST',
                  rate: 10,
                  compound: true
                }
              ],
              type: 'NONE',
              report_tax_type: 'NONE',
              original_tax_rate_id: '12345',
              status: 'active',
              custom_mappings: {},
              row_version: '1-12345'
            }
          }

          try {
            const { data } = await apideck.accounting.taxRatesAdd(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.tax_rates_controller
      x-codegen-request-body-name: body
  /accounting/tax-rates/{id}:
    delete:
      description: Delete Tax Rate
      operationId: tax_rates_delete
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTaxRateResponse'
          description: TaxRates deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Delete Tax Rate
      tags:
      - Tax Rates
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.taxRatesDelete({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.tax_rates_controller
    get:
      description: |
        Get Tax Rate. Note: Not all connectors return the actual rate/percentage value. In this case, only the tax code or reference is returned. Support will soon be added to return the actual rate/percentage by doing additional calls in the background to provide the full view of a given tax rate. Connectors Affected: Quickbooks
      operationId: tax_rates_one
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "The 'fields' parameter allows API users to specify the fields\
          \ they want to include in the API response. If this parameter is not present,\
          \ the API will return all available fields. If this parameter is present,\
          \ only the fields specified in the comma-separated string will be included\
          \ in the response. Nested properties can also be requested by using a dot\
          \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
          \ />In the example above, the response will only include the fields \"name\"\
          , \"email\" and \"addresses.city\". If any other fields are available, they\
          \ will be excluded."
        example: "id,updated_at"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaxRateResponse'
          description: TaxRate
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Get Tax Rate
      tags:
      - Tax Rates
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          try {
            const { data } = await apideck.accounting.taxRatesOne({
              id: 'id_example'
            })
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.tax_rates_controller
    patch:
      description: Update Tax Rate
      operationId: tax_rates_update
      parameters:
      - description: ID of the record you are acting upon.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the consumer which you want to get or push data from
        explode: false
        in: header
        name: x-apideck-consumer-id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of your Unify application
        example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
        explode: false
        in: header
        name: x-apideck-app-id
        required: true
        schema:
          type: string
        style: simple
      - description: "Provide the service id you want to call (e.g., pipedrive). Only\
          \ needed when a consumer has activated multiple integrations for a Unified\
          \ API."
        explode: false
        in: header
        name: x-apideck-service-id
        required: false
        schema:
          type: string
        style: simple
      - description: Include raw response. Mostly used for debugging purposes
        explode: true
        in: query
        name: raw
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRate'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTaxRateResponse'
          description: TaxRate updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: Payment Required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableResponse'
          description: Unprocessable
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
          description: Unexpected error
      security:
      - apiKey: []
      summary: Update Tax Rate
      tags:
      - Tax Rates
      x-apideck-api: accounting
      x-codeSamples:
      - label: Node
        lang: TypeScript
        source: |
          import { Apideck } from '@apideck/node'

          const apideck = new Apideck({
            apiKey: 'REPLACE_WITH_API_KEY',
            appId: 'REPLACE_WITH_APP_ID',
            consumerId: 'REPLACE_WITH_CONSUMER_ID'
          })

          const params = {
            id: 'id_example',
            taxRate: {
              id: '1234',
              name: 'GST on Purchases',
              code: 'ABN',
              description: 'Reduced rate GST Purchases',
              effective_tax_rate: 10,
              total_tax_rate: 10,
              tax_payable_account_id: '123456',
              tax_remitted_account_id: '123456',
              components: [
                {
                  id: '10',
                  name: 'GST',
                  rate: 10,
                  compound: true
                }
              ],
              type: 'NONE',
              report_tax_type: 'NONE',
              original_tax_rate_id: '12345',
              status: 'active',
              custom_mappings: {},
              row_version: '1-12345'
            }
          }

          try {
            const { data } = await apideck.accounting.taxRatesUpdate(params)
            console.log('API called successfully', data)
          } catch (error) {
            console.error(error)
          }
      x-openapi-router-controller: openapi_server.controllers.tax_rates_controller
      x-codegen-request-body-name: body
components:
  parameters:
    applicationId:
      description: The ID of your Unify application
      example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
      explode: false
      in: header
      name: x-apideck-app-id
      required: true
      schema:
        type: string
      style: simple
    balanceSheetFilter:
      description: Apply filters
      explode: true
      in: query
      name: filter
      required: false
      schema:
        $ref: '#/components/schemas/BalanceSheetFilter'
      style: deepObject
    billsSort:
      description: Apply sorting
      explode: true
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/BillsSort'
      style: deepObject
    consumerId:
      description: ID of the consumer which you want to get or push data from
      explode: false
      in: header
      name: x-apideck-consumer-id
      required: true
      schema:
        type: string
      style: simple
    cursor:
      description: Cursor to start from. You can find cursors for next/previous pages
        in the meta.cursors property of the response.
      explode: true
      in: query
      name: cursor
      required: false
      schema:
        nullable: true
        type: string
      style: form
    customersFilter:
      description: Apply filters
      explode: true
      in: query
      name: filter
      required: false
      schema:
        $ref: '#/components/schemas/CustomersFilter'
      style: deepObject
    fields:
      description: "The 'fields' parameter allows API users to specify the fields\
        \ they want to include in the API response. If this parameter is not present,\
        \ the API will return all available fields. If this parameter is present,\
        \ only the fields specified in the comma-separated string will be included\
        \ in the response. Nested properties can also be requested by using a dot\
        \ notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br\
        \ />In the example above, the response will only include the fields \"name\"\
        , \"email\" and \"addresses.city\". If any other fields are available, they\
        \ will be excluded."
      example: "id,updated_at"
      explode: true
      in: query
      name: fields
      required: false
      schema:
        nullable: true
        type: string
      style: form
    id:
      description: ID of the record you are acting upon.
      explode: false
      in: path
      name: id
      required: true
      schema:
        type: string
      style: simple
    invoiceItemsFilter:
      description: Apply filters
      explode: true
      in: query
      name: filter
      required: false
      schema:
        $ref: '#/components/schemas/InvoiceItemsFilter'
      style: deepObject
    invoicesSort:
      description: Apply sorting
      explode: true
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/InvoicesSort'
      style: deepObject
    limit:
      description: "Number of results to return. Minimum 1, Maximum 200, Default 20"
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 20
        maximum: 200
        minimum: 1
        type: integer
      style: form
    passThrough:
      description: "Optional unmapped key/values that will be passed through to downstream\
        \ as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads"
      explode: true
      in: query
      name: pass_through
      required: false
      schema:
        $ref: '#/components/schemas/PassThroughQuery'
      style: deepObject
    paymentsFilter:
      description: Apply filters
      explode: true
      in: query
      name: filter
      required: false
      schema:
        $ref: '#/components/schemas/PaymentsFilter'
      style: deepObject
    profitAndLossFilter:
      description: Apply filters
      explode: true
      in: query
      name: filter
      required: false
      schema:
        $ref: '#/components/schemas/ProfitAndLossFilter'
      style: deepObject
    raw:
      description: Include raw response. Mostly used for debugging purposes
      explode: true
      in: query
      name: raw
      required: false
      schema:
        default: false
        type: boolean
      style: form
    serviceId:
      description: "Provide the service id you want to call (e.g., pipedrive). Only\
        \ needed when a consumer has activated multiple integrations for a Unified\
        \ API."
      explode: false
      in: header
      name: x-apideck-service-id
      required: false
      schema:
        type: string
      style: simple
    suppliersFilter:
      description: Apply filters
      explode: true
      in: query
      name: filter
      required: false
      schema:
        $ref: '#/components/schemas/SuppliersFilter'
      style: deepObject
    taxRatesFilter:
      description: Apply filters
      explode: true
      in: query
      name: filter
      required: false
      schema:
        $ref: '#/components/schemas/TaxRatesFilter'
      style: deepObject
  responses:
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestResponse'
      description: Bad Request
    CompanyInfo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompanyInfo'
      description: Company Info
    CreateBillResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateBillResponse'
      description: Bill created
    CreateCreditNoteResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCreditNoteResponse'
      description: Credit Note created
    CreateCustomerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCustomerResponse'
      description: Customers
    CreateInvoiceItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateInvoiceItemResponse'
      description: InvoiceItems
    CreateInvoiceResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateInvoiceResponse'
      description: Invoice created
    CreateJournalEntryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateJournalEntryResponse'
      description: JournalEntries
    CreateLedgerAccountResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateLedgerAccountResponse'
      description: LedgerAccount created
    CreatePaymentResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatePaymentResponse'
      description: Payment created
    CreatePurchaseOrderResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatePurchaseOrderResponse'
      description: PurchaseOrders
    CreateSupplierResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateSupplierResponse'
      description: Supplier created
    CreateTaxRateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateTaxRateResponse'
      description: TaxRate created
    DeleteBillResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteBillResponse'
      description: Bill deleted
    DeleteCreditNoteResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteCreditNoteResponse'
      description: Credit Note deleted
    DeleteCustomerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteCustomerResponse'
      description: Customers
    DeleteInvoiceItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteTaxRateResponse'
      description: InvoiceItems
    DeleteInvoiceResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteInvoiceResponse'
      description: Invoice deleted
    DeleteJournalEntryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteJournalEntryResponse'
      description: JournalEntries
    DeleteLedgerAccountResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteLedgerAccountResponse'
      description: LedgerAccount deleted
    DeletePaymentResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeletePaymentResponse'
      description: Payment deleted
    DeletePurchaseOrderResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeletePurchaseOrderResponse'
      description: PurchaseOrders
    DeleteSupplierResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteSupplierResponse'
      description: Supplier deleted
    DeleteTaxRateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteTaxRateResponse'
      description: TaxRates deleted
    GetBalanceSheetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBalanceSheetResponse'
      description: BalanceSheet
    GetBillResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBillResponse'
      description: Bill
    GetBillsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBillsResponse'
      description: Bills
    GetCompanyInfoResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCompanyInfoResponse'
      description: CompanyInfo
    GetCreditNoteResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCreditNoteResponse'
      description: Credit Note
    GetCreditNotesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCreditNotesResponse'
      description: Credit Notes
    GetCustomerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCustomerResponse'
      description: Customer
    GetCustomersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCustomersResponse'
      description: Customers
    GetInvoiceItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInvoiceItemResponse'
      description: InvoiceItems
    GetInvoiceItemsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInvoiceItemsResponse'
      description: InvoiceItems
    GetInvoiceResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInvoiceResponse'
      description: Invoice
    GetInvoicesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInvoicesResponse'
      description: Invoices
    GetJournalEntriesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetJournalEntriesResponse'
      description: JournalEntry
    GetJournalEntryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetJournalEntryResponse'
      description: JournalEntries
    GetLedgerAccountResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetLedgerAccountResponse'
      description: LedgerAccount
    GetLedgerAccountsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetLedgerAccountsResponse'
      description: LedgerAccounts
    GetPaymentResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetPaymentResponse'
      description: Payment
    GetPaymentsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetPaymentsResponse'
      description: Payments
    GetProfitAndLossResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetProfitAndLossResponse'
      description: Profit & Loss Report
    GetPurchaseOrderResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetPurchaseOrderResponse'
      description: PurchaseOrders
    GetPurchaseOrdersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetPurchaseOrdersResponse'
      description: PurchaseOrders
    GetSupplierResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSupplierResponse'
      description: Supplier
    GetSuppliersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSuppliersResponse'
      description: Suppliers
    GetTaxRateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetTaxRateResponse'
      description: TaxRate
    GetTaxRatesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetTaxRatesResponse'
      description: TaxRates
    JournalEntry:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JournalEntry'
      description: JournalEntries
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundResponse'
      description: The specified resource was not found
    NotImplementedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotImplementedResponse'
      description: Not Implemented
    PaymentRequiredResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentRequiredResponse'
      description: Payment Required
    PurchaseOrder:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PurchaseOrder'
      description: PurchaseOrders
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TooManyRequestsResponse'
      description: Too Many Requests
    UnauthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedResponse'
      description: Unauthorized
    UnexpectedErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnexpectedErrorResponse'
      description: Unexpected error
    UnprocessableResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnprocessableResponse'
      description: Unprocessable
    UpdateBillResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateBillResponse'
      description: Bill Updated
    UpdateCreditNoteResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCreditNoteResponse'
      description: Credit Note updated
    UpdateCustomerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCustomerResponse'
      description: Customers
    UpdateInvoiceItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateInvoiceItemsResponse'
      description: InvoiceItems
    UpdateInvoiceResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateInvoiceResponse'
      description: Invoice updated
    UpdateJournalEntryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateJournalEntryResponse'
      description: JournalEntries
    UpdateLedgerAccountResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLedgerAccountResponse'
      description: LedgerAccount updated
    UpdatePaymentResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePaymentResponse'
      description: Payment Updated
    UpdatePurchaseOrderResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePurchaseOrderResponse'
      description: PurchaseOrders
    UpdateSupplierResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateSupplierResponse'
      description: Supplier updated
    UpdateTaxRateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateTaxRateResponse'
      description: TaxRate updated
  schemas:
    AccountingByRow:
      description: Indicates if accounting by row is used (true) or not (false). Accounting
        by row means that a separate ledger transaction is created for each row.
      example: false
      nullable: true
      title: Accounting by Row
      type: boolean
    AccountingCustomer:
      $ref: '#/components/schemas/Customer'
    AccountingEventType:
      enum:
      - '*'
      - accounting.customer.created
      - accounting.customer.updated
      - accounting.customer.deleted
      - accounting.invoice.created
      - accounting.invoice.updated
      - accounting.invoice.deleted
      - accounting.invoice_item.created
      - accounting.invoice_item.updated
      - accounting.invoice_item.deleted
      - accounting.ledger_account.created
      - accounting.ledger_account.updated
      - accounting.ledger_account.deleted
      - accounting.tax_rate.created
      - accounting.tax_rate.updated
      - accounting.tax_rate.deleted
      - accounting.bill.created
      - accounting.bill.updated
      - accounting.bill.deleted
      - accounting.payment.created
      - accounting.payment.updated
      - accounting.payment.deleted
      - accounting.supplier.created
      - accounting.supplier.updated
      - accounting.supplier.deleted
      - accounting.purchase-order.created
      - accounting.purchase-order.updated
      - accounting.purchase-order.deleted
      title: AccountingEventType
      type: string
      x-apideck-enum-id: accounting.events
    AccountingWebhookEvent:
      allOf:
      - properties:
          consumer_id:
            description: "Unique consumer identifier. You can freely choose a consumer\
              \ ID yourself. Most of the time, this is an ID of your internal data\
              \ model that represents a user or account in your system (for example\
              \ account:12345). If the consumer doesn't exist yet, Vault will upsert\
              \ a consumer based on your ID."
            example: test_consumer_id
            type: string
          entity_id:
            description: The service provider's ID of the entity that triggered this
              event
            example: 123456ASDF
            type: string
          entity_type:
            description: The type entity that triggered this event
            example: Company
            type: string
          entity_url:
            description: The url to retrieve entity detail.
            example: https://unify.apideck.com/crm/contacts/123456
            type: string
          event_id:
            description: Unique reference to this request event
            example: 9755c355-56c3-4a2f-a2da-86ff4411fccb
            type: string
          execution_attempt:
            description: The current count this request event has been attempted
            example: 2
            type: number
          occurred_at:
            description: ISO Datetime for when the original event occurred
            example: 2021-10-01T03:14:55.419Z
            type: string
          service_id:
            description: Service provider identifier
            example: close
            type: string
          unified_api:
            description: Name of Apideck Unified API
            enum:
            - accounting
            - ats
            - calendar
            - crm
            - csp
            - customer-support
            - ecommerce
            - email
            - email-marketing
            - expense-management
            - file-storage
            - form
            - hris
            - lead
            - payroll
            - pos
            - procurement
            - project-management
            - script
            - sms
            - spreadsheet
            - team-messaging
            - issue-tracking
            - time-registration
            - transactional-email
            - vault
            - data-warehouse
            example: crm
            type: string
            x-apideck-enum-id: unified_api
        type: object
        x-apideck-schema-id: WebhookEvent
      - properties:
          event_type:
            $ref: '#/components/schemas/AccountingEventType'
        type: object
      x-sdk-exclude: true
    Active:
      example: true
      nullable: true
      title: Is active
      type: boolean
    Address:
      additionalProperties: false
      example:
        country: US
        contact_name: Elon Musk
        website: https://elonmusk.com
        line4: delivery instructions
        notes: Address notes or delivery instructions.
        string: "25 Spring Street, Blackburn, VIC 3130"
        city: San Francisco
        latitude: "40.759211"
        county: Santa Clara
        type: primary
        row_version: 1-12345
        name: HQ US
        street_number: "25"
        phone_number: 111-111-1111
        id: "123"
        salutation: Mr
        state: CA
        fax: 122-111-1111
        line3: "Suite #"
        postal_code: "94104"
        line2: "apt #"
        email: elon@musk.com
        line1: Main street
        longitude: "-73.984638"
      properties:
        city:
          description: Name of city.
          example: San Francisco
          nullable: true
          title: city
          type: string
        contact_name:
          description: Name of the contact person at the address
          example: Elon Musk
          nullable: true
          title: contact_name
          type: string
        country:
          description: country code according to ISO 3166-1 alpha-2.
          example: US
          nullable: true
          title: country
          type: string
        county:
          description: "Address field that holds a sublocality, such as a county"
          example: Santa Clara
          nullable: true
          title: county
          type: string
        email:
          description: Email address of the address
          example: elon@musk.com
          nullable: true
          title: email
          type: string
        fax:
          description: Fax number of the address
          example: 122-111-1111
          nullable: true
          title: fax
          type: string
        id:
          description: Unique identifier for the address.
          example: "123"
          nullable: true
          title: id
          type: string
        latitude:
          description: Latitude of the address
          example: "40.759211"
          nullable: true
          title: latitude
          type: string
        line1:
          description: "Line 1 of the address e.g. number, street, suite, apt #, etc."
          example: Main street
          nullable: true
          title: line1
          type: string
        line2:
          description: Line 2 of the address
          example: "apt #"
          nullable: true
          title: line2
          type: string
        line3:
          description: Line 3 of the address
          example: "Suite #"
          nullable: true
          title: line3
          type: string
        line4:
          description: Line 4 of the address
          example: delivery instructions
          nullable: true
          title: line4
          type: string
        longitude:
          description: Longitude of the address
          example: "-73.984638"
          nullable: true
          title: longitude
          type: string
        name:
          description: The name of the address.
          example: HQ US
          nullable: true
          title: name
          type: string
        notes:
          description: Additional notes
          example: Address notes or delivery instructions.
          nullable: true
          title: Notes
          type: string
        phone_number:
          description: Phone number of the address
          example: 111-111-1111
          nullable: true
          title: phone_number
          type: string
        postal_code:
          description: Zip code or equivalent.
          example: "94104"
          nullable: true
          title: postal_code
          type: string
        row_version:
          description: A binary value used to detect updates to a object and prevent
            data conflicts. It is incremented each time an update is made to the object.
          example: 1-12345
          nullable: true
          title: Row version
          type: string
        salutation:
          description: Salutation of the contact person at the address
          example: Mr
          nullable: true
          title: salutation
          type: string
        state:
          description: Name of state
          example: CA
          nullable: true
          title: state
          type: string
        street_number:
          description: Street number
          example: "25"
          nullable: true
          title: street_number
          type: string
        string:
          description: The address string. Some APIs don't provide structured address
            data.
          example: "25 Spring Street, Blackburn, VIC 3130"
          nullable: true
          title: string
          type: string
        type:
          description: The type of address.
          enum:
          - primary
          - secondary
          - home
          - office
          - shipping
          - billing
          - other
          example: primary
          nullable: true
          title: type
          type: string
          x-apideck-enum-id: addresses.type
        website:
          description: Website of the address
          example: https://elonmusk.com
          nullable: true
          title: website
          type: string
      title: Address
      type: object
      x-apideck-schema-id: Address
      x-apideck-weights:
        city: high
        contact_name: edge-case
        country: high
        county: edge-case
        email: edge-case
        fax: edge-case
        id: edge-case
        latitude: low
        line1: high
        line2: low
        line3: edge-case
        line4: edge-case
        longitude: low
        name: edge-case
        phone_number: edge-case
        postal_code: high
        row_version: edge-case
        salutation: edge-case
        state: high
        street_number: low
        string: low
        type: critical
        website: edge-case
    BadRequestResponse:
      example:
        ref: https://developers.apideck.com/errors#requestvalidationerror
        type_name: RequestValidationError
        status_code: 400
        detail: Missing property foobar
        error: Bad Request
        message: Invalid Params
      properties:
        detail:
          $ref: '#/components/schemas/BadRequestResponse_detail'
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1
            standard (RFC 7231)
          example: Bad Request
          title: error
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Invalid Params
          title: message
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#requestvalidationerror
          title: ref
          type: string
        status_code:
          description: HTTP status code
          example: 400
          title: status_code
          type: number
        type_name:
          description: The type of error returned
          example: RequestValidationError
          title: type_name
          type: string
      title: BadRequestResponse
      type: object
      x-apideck-schema-id: BadRequest
    BalanceSheet:
      additionalProperties: false
      example:
        end_date: 2017-01-01
        assets:
          current_assets:
            accounts:
            - id: "1"
              name: Accounts Receivable (A/R)
              value: 10000
            - id: "2"
              name: Accounts Payable (A/P)
              value: 10000
            total: 100000
          fixed_assets:
            accounts:
            - id: "1"
              name: Accounts Receivable (A/R)
              value: 10000
            - id: "2"
              name: Accounts Payable (A/P)
              value: 10000
            total: 100000
          total: 200000
        updated_at: 2020-09-30T07:43:32Z
        liabilities:
          accounts:
          - id: "1"
            name: Accounts Payable (A/P)
            value: 10000
          total: 200000
        updated_by: "12345"
        created_at: 2020-09-30T07:43:32Z
        id: "12345"
        report_name: BalanceSheet
        created_by: "12345"
        equity:
          items:
          - id: "1"
            name: Retained Earnings
            value: 10000
          total: 200000
        custom_mappings: "{}"
        start_date: 2017-01-01
      properties:
        assets:
          $ref: '#/components/schemas/BalanceSheet_assets'
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: CustomMappings
          type: object
          x-apideck-schema-id: CustomMappings
        end_date:
          description: The start date of the report
          example: 2017-01-01
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          title: Start Date
          type: string
        equity:
          $ref: '#/components/schemas/BalanceSheet_equity'
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        liabilities:
          $ref: '#/components/schemas/BalanceSheet_liabilities'
        report_name:
          description: The name of the report
          example: BalanceSheet
          title: Report Name
          type: string
        start_date:
          description: The start date of the report
          example: 2017-01-01
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          title: Start Date
          type: string
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
      required:
      - assets
      - equity
      - liabilities
      - report_name
      - start_date
      title: BalanceSheet
      type: object
      x-apideck-schema-id: BalanceSheet
      x-apideck-weights:
        assets: critical
        created_at: edge-case
        created_by: edge-case
        equity: critical
        id: medium
        liabilities: critical
        report_name: medium
        start_date: critical
        updated_at: low
        updated_by: edge-case
    BalanceSheetFilter:
      additionalProperties: false
      example:
        end_date: 2021-12-31
        start_date: 2021-01-01
      properties:
        end_date:
          description: "Filter by end date. If end date is given, start date is required."
          example: 2021-12-31
          title: End date
          type: string
        start_date:
          description: "Filter by start date. If start date is given, end date is\
            \ required."
          example: 2021-01-01
          title: Start date
          type: string
      type: object
      x-apideck-schema-id: BalanceSheetFilter
    BankAccount:
      additionalProperties: false
      example:
        bsb_number: 062-001
        account_number: "123465"
        bank_code: BNH
        account_type: credit_card
        account_name: SPACEX LLC
        iban: CH2989144532982975332
        bank_name: Monzo
        currency: USD
        routing_number: "012345678"
        bic: AUDSCHGGXXX
        branch_identifier: "001"
      properties:
        account_name:
          description: The name which you used in opening your bank account.
          example: SPACEX LLC
          nullable: true
          title: Bank Account Name
          type: string
        account_number:
          description: "A bank account number is a number that is tied to your bank\
            \ account. If you have several bank accounts, such as personal, joint,\
            \ business (and so on), each account will have a different account number."
          example: "123465"
          nullable: true
          title: Bank Account Number
          type: string
        account_type:
          description: The type of bank account.
          enum:
          - bank_account
          - credit_card
          - other
          example: credit_card
          nullable: true
          title: Account Type
          type: string
          x-apideck-enum-id: bank-accounts.account_type
        bank_code:
          description: "A bank code is a code assigned by a central bank, a bank supervisory\
            \ body or a Bankers Association in a country to all its licensed member\
            \ banks or financial institutions."
          example: BNH
          nullable: true
          title: Bank Code
          type: string
        bank_name:
          description: The name of the bank
          example: Monzo
          nullable: true
          title: Bank Name
          type: string
        bic:
          description: The Bank Identifier Code (BIC).
          example: AUDSCHGGXXX
          nullable: true
          title: bic
          type: string
        branch_identifier:
          description: A branch identifier is a unique identifier for a branch of
            a bank or financial institution.
          example: "001"
          nullable: true
          title: Branch Identifier
          type: string
        bsb_number:
          description: A BSB is a 6 digit numeric code used for identifying the branch
            of an Australian or New Zealand bank or financial institution.
          example: 062-001
          nullable: true
          title: BSB Number
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        iban:
          description: The International Bank Account Number (IBAN).
          example: CH2989144532982975332
          nullable: true
          title: iban
          type: string
        routing_number:
          description: A routing number is a nine-digit code used to identify a financial
            institution in the United States.
          example: "012345678"
          nullable: true
          title: Routing number
          type: string
      title: BankAccount
      type: object
      x-apideck-schema-id: BankAccount
      x-apideck-weights:
        account_name: medium
        account_number: critical
        account_type: medium
        bank_code: low
        bank_name: medium
        bic: medium
        branch_identifier: low
        bsb_number: edge-case
        currency: medium
        iban: high
    Bill:
      additionalProperties: false
      example:
        notes: Some notes about this bill.
        bill_date: 2020-09-30
        channel: email
        created_at: 2020-09-30T07:43:32Z
        language: EN
        discount_percentage: 5.5
        line_items:
        - tax_amount: 27500
          item:
            code: 120-C
            name: Model Y
            id: "12344"
          code: 120-C
          quantity: 1
          department_id: "1234"
          discount_amount: 19.99
          created_at: 2020-09-30T07:43:32Z
          description: "Model Y is a fully electric, mid-size SUV, with seating for\
            \ up to seven, dual motor AWD and unparalleled protection."
          discount_percentage: 0.01
          type: expense_account
          unit_price: 27500.5
          created_by: "12345"
          location_id: "1234"
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          updated_at: 2020-09-30T07:43:32Z
          total_amount: 27500
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          line_number: 1
          row_version: 1-12345
          updated_by: "12345"
          unit_of_measure: pc.
          id: "12345"
          row_id: "12345"
        - tax_amount: 27500
          item:
            code: 120-C
            name: Model Y
            id: "12344"
          code: 120-C
          quantity: 1
          department_id: "1234"
          discount_amount: 19.99
          created_at: 2020-09-30T07:43:32Z
          description: "Model Y is a fully electric, mid-size SUV, with seating for\
            \ up to seven, dual motor AWD and unparalleled protection."
          discount_percentage: 0.01
          type: expense_account
          unit_price: 27500.5
          created_by: "12345"
          location_id: "1234"
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          updated_at: 2020-09-30T07:43:32Z
          total_amount: 27500
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          line_number: 1
          row_version: 1-12345
          updated_by: "12345"
          unit_of_measure: pc.
          id: "12345"
          row_id: "12345"
        custom_mappings: "{}"
        reference: "123456"
        currency_rate: 0.69
        po_number: "90000117"
        total: 27500
        bill_number: "10001"
        balance: 27500
        updated_at: 2020-09-30T07:43:32Z
        terms: Net 30 days
        ledger_account:
          code: "453"
          nominal_code: N091
          name: Bank account
          id: "123456"
        supplier:
          address:
            country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          display_id: SUPP00101
          company_name: The boring company
          id: "12345"
          display_name: Windsurf Shop
        currency: USD
        downstream_id: "12345"
        id: "12345"
        payment_method: cash
        accounting_by_row: false
        bank_account:
          bsb_number: 062-001
          account_number: "123465"
          bank_code: BNH
          account_type: credit_card
          account_name: SPACEX LLC
          iban: CH2989144532982975332
          bank_name: Monzo
          currency: USD
          routing_number: "012345678"
          bic: AUDSCHGGXXX
          branch_identifier: "001"
        due_date: 2020-10-30
        tax_inclusive: true
        total_tax: 2500
        created_by: "12345"
        tax_code: "1234"
        row_version: 1-12345
        sub_total: 27500
        updated_by: "12345"
        deposit: 0
        paid_date: 2020-10-30
        status: draft
      properties:
        accounting_by_row:
          description: Indicates if accounting by row is used (true) or not (false).
            Accounting by row means that a separate ledger transaction is created
            for each row.
          example: false
          nullable: true
          title: Accounting by Row
          type: boolean
        balance:
          description: Balance of bill due.
          example: 27500
          nullable: true
          title: Balance
          type: number
        bank_account:
          $ref: '#/components/schemas/BankAccount'
        bill_date:
          description: Date bill was issued - YYYY-MM-DD.
          example: 2020-09-30
          format: date
          title: Bill date
          type: string
        bill_number:
          description: Reference to supplier bill number
          example: "10001"
          nullable: true
          title: Bill number
          type: string
        channel:
          description: The channel through which the transaction is processed.
          example: email
          nullable: true
          title: Channel
          type: string
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        currency_rate:
          description: Currency Exchange Rate at the time entity was recorded/generated.
          example: 0.69
          nullable: true
          title: Currency Exchange Rate
          type: number
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: CustomMappings
          type: object
          x-apideck-schema-id: CustomMappings
        deposit:
          description: Amount of deposit made to this bill.
          example: 0
          nullable: true
          title: Deposit
          type: number
        discount_percentage:
          description: Discount percentage applied to this transaction.
          example: 5.5
          nullable: true
          title: Discount Percentage
          type: number
        downstream_id:
          description: The third-party API ID of original entity
          example: "12345"
          nullable: true
          readOnly: true
          title: DownstreamId
          type: string
        due_date:
          description: The due date is the date on which a payment is scheduled to
            be received - YYYY-MM-DD.
          example: 2020-10-30
          format: date
          title: Due date
          type: string
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        language:
          description: language code according to ISO 639-1. For the United States
            - EN
          example: EN
          nullable: true
          title: language
          type: string
        ledger_account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        line_items:
          items:
            $ref: '#/components/schemas/BillLineItem'
          title: line_items
          type: array
        notes:
          example: Some notes about this bill.
          nullable: true
          title: Notes
          type: string
        paid_date:
          description: The paid date is the date on which a payment was sent to the
            supplier - YYYY-MM-DD.
          example: 2020-10-30
          format: date
          nullable: true
          title: Paid date
          type: string
        payment_method:
          description: "Payment method used for the transaction, such as cash, credit\
            \ card, bank transfer, or check"
          example: cash
          nullable: true
          title: Payment method
          type: string
        po_number:
          description: A PO Number uniquely identifies a purchase order and is generally
            defined by the buyer. The buyer will match the PO number in the invoice
            to the Purchase Order.
          example: "90000117"
          nullable: true
          title: Purchase Order number
          type: string
        reference:
          description: Optional bill reference.
          example: "123456"
          nullable: true
          title: Bill reference
          type: string
        row_version:
          description: A binary value used to detect updates to a object and prevent
            data conflicts. It is incremented each time an update is made to the object.
          example: 1-12345
          nullable: true
          title: Row version
          type: string
        status:
          description: Invoice status
          enum:
          - draft
          - submitted
          - authorised
          - partially_paid
          - paid
          - void
          - credit
          - deleted
          example: draft
          nullable: true
          title: Status
          type: string
          x-apideck-enum-id: invoices.status
        sub_total:
          description: "Sub-total amount, normally before tax."
          example: 27500
          nullable: true
          title: Sub-total amount
          type: number
        supplier:
          $ref: '#/components/schemas/LinkedSupplier'
        tax_code:
          description: Applicable tax id/code override if tax is not supplied on a
            line item basis.
          example: "1234"
          nullable: true
          title: Tax Code
          type: string
        tax_inclusive:
          description: Amounts are including tax
          example: true
          nullable: true
          title: Tax inclusive
          type: boolean
        terms:
          description: Terms of payment.
          example: Net 30 days
          nullable: true
          title: Terms
          type: string
        total:
          description: "Total amount of bill, including tax."
          example: 27500
          nullable: true
          title: Total amount
          type: number
        total_tax:
          description: Total tax amount applied to this bill.
          example: 2500
          nullable: true
          title: Total tax amount
          type: number
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
      title: Bill
      type: object
      x-apideck-schema-id: Bill
      x-apideck-strict-required:
      - id
      - bill_date
      - due_date
      - line_items
      - total
      - status
      x-apideck-weights:
        accounting_by_row: edge-case
        balance: high
        bank_account: low
        bill_date: critical
        bill_number: high
        channel: low
        created_at: edge-case
        created_by: low
        currency: medium
        currency_rate: low
        deposit: low
        discount_percentage: medium
        downstream_id: low
        due_date: critical
        id: critical
        language: low
        ledger_account: low
        line_items: critical
        notes: low
        paid_date: high
        payment_method: low
        po_number: low
        reference: low
        row_version: edge-case
        status: critical
        sub_total: high
        supplier: high
        tax_code: medium
        tax_inclusive: low
        terms: low
        total: critical
        total_tax: high
        updated_at: high
        updated_by: low
    BillLineItem:
      additionalProperties: false
      example:
        tax_amount: 27500
        item:
          code: 120-C
          name: Model Y
          id: "12344"
        code: 120-C
        quantity: 1
        department_id: "1234"
        discount_amount: 19.99
        created_at: 2020-09-30T07:43:32Z
        description: "Model Y is a fully electric, mid-size SUV, with seating for\
          \ up to seven, dual motor AWD and unparalleled protection."
        discount_percentage: 0.01
        type: expense_account
        unit_price: 27500.5
        created_by: "12345"
        location_id: "1234"
        tax_rate:
          code: N-T
          rate: 10
          name: GST on Purchases
          id: "123456"
        updated_at: 2020-09-30T07:43:32Z
        total_amount: 27500
        ledger_account:
          code: "453"
          nominal_code: N091
          name: Bank account
          id: "123456"
        line_number: 1
        row_version: 1-12345
        updated_by: "12345"
        unit_of_measure: pc.
        id: "12345"
        row_id: "12345"
      properties:
        code:
          description: User defined item code
          example: 120-C
          nullable: true
          title: Item code
          type: string
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        department_id:
          description: Department id
          example: "1234"
          nullable: true
          title: Department id
          type: string
        description:
          description: User defined description
          example: "Model Y is a fully electric, mid-size SUV, with seating for up\
            \ to seven, dual motor AWD and unparalleled protection."
          nullable: true
          title: Description
          type: string
        discount_amount:
          description: Discount amount applied to the line item when supported downstream.
          example: 19.99
          nullable: true
          title: Discount Amount
          type: number
        discount_percentage:
          description: Discount percentage applied to the line item when supported
            downstream.
          example: 0.01
          nullable: true
          title: Discount Percentage
          type: number
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        item:
          $ref: '#/components/schemas/LinkedInvoiceItem'
        ledger_account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        line_number:
          description: Line number in the invoice
          example: 1
          nullable: true
          title: Line number
          type: integer
        location_id:
          description: Location id
          example: "1234"
          nullable: true
          title: Location id
          type: string
        quantity:
          example: 1
          nullable: true
          title: Quantity
          type: number
        row_id:
          description: Row ID
          example: "12345"
          title: Row ID
          type: string
        row_version:
          description: A binary value used to detect updates to a object and prevent
            data conflicts. It is incremented each time an update is made to the object.
          example: 1-12345
          nullable: true
          title: Row version
          type: string
        tax_amount:
          description: Tax amount
          example: 27500
          nullable: true
          title: Tax amount
          type: number
        tax_rate:
          $ref: '#/components/schemas/LinkedTaxRate'
        total_amount:
          description: Total amount of the line item
          example: 27500
          nullable: true
          title: Total amount
          type: number
        type:
          description: Bill Line Item type
          enum:
          - expense_item
          - expense_account
          example: expense_account
          nullable: true
          title: Type
          type: string
          x-apideck-enum-id: bills.line_items.type
        unit_of_measure:
          description: "Description of the unit type the item is sold as, ie: kg,\
            \ hour."
          example: pc.
          nullable: true
          title: Unit of measure
          type: string
        unit_price:
          example: 27500.5
          nullable: true
          title: Unit price
          type: number
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
      title: Bill Line Item
      type: object
      x-apideck-schema-id: BillLineItem
      x-apideck-weights:
        code: medium
        created_at: edge-case
        created_by: edge-case
        department_id: low
        description: high
        discount_amount: low
        discount_percentage: low
        id: high
        item: high
        ledger_account: low
        line_number: medium
        location_id: low
        quantity: high
        row_id: edge-case
        row_version: edge-case
        tax_amount: high
        tax_rate: medium
        total_amount: high
        type: medium
        unit_of_measure: edge-case
        unit_price: high
        updated_at: high
        updated_by: edge-case
    BillsSort:
      additionalProperties: false
      example:
        by: updated_at
        direction: desc
      properties:
        by:
          description: The field on which to sort the Bills
          enum:
          - updated_at
          example: updated_at
          type: string
          x-apideck-enum-id: bills.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      type: object
      x-apideck-schema-id: BillsSort
    Channel:
      description: The channel through which the transaction is processed.
      example: email
      nullable: true
      title: Channel
      type: string
    Company:
      additionalProperties: false
      properties:
        abn_branch:
          description: An ABN Branch (also known as a GST Branch) is used if part
            of your business needs to account for GST separately from its parent entity.
          example: "123"
          nullable: true
          title: ABN Branch
          type: string
        abn_or_tfn:
          description: "An ABN is necessary for operating a business, while a TFN\
            \ (Tax File Number) is required for any person working in Australia."
          example: 46 115 614 695
          nullable: true
          title: ABN or TFN
          type: string
        acn:
          description: "The Australian Company Number (ACN) is a nine digit number\
            \ with the last digit being a check digit calculated using a modified\
            \ modulus 10 calculation. ASIC has adopted a convention of always printing\
            \ and displaying the ACN in the format XXX XXX XXX; three blocks of three\
            \ characters, each block separated by a blank."
          example: XXX XXX XXX
          nullable: true
          title: ACN
          type: string
        addresses:
          items:
            $ref: '#/components/schemas/Address'
          type: array
        annual_revenue:
          description: The annual revenue of the company
          example: +$35m
          nullable: true
          type: string
        bank_accounts:
          items:
            $ref: '#/components/schemas/BankAccount'
          type: array
        birthday:
          description: The date of birth of the person.
          example: 2000-08-12
          format: date
          nullable: true
          title: Birth Date
          type: string
        created_at:
          description: Creation date
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        created_by:
          description: Created by user ID
          example: "12345"
          nullable: true
          readOnly: true
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        custom_fields:
          items:
            $ref: '#/components/schemas/CustomField'
          type: array
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: CustomMappings
          type: object
          x-apideck-schema-id: CustomMappings
        deleted:
          description: Whether the company is deleted or not
          example: false
          readOnly: true
          type: boolean
        description:
          description: A description of the company
          example: "Space Exploration Technologies Corp. is an American aerospace\
            \ manufacturer, space transportation services and communications company\
            \ headquartered in Hawthorne, California."
          nullable: true
          type: string
        emails:
          items:
            $ref: '#/components/schemas/Email'
          type: array
        fax:
          description: The fax number of the company
          example: "+12129876543"
          nullable: true
          type: string
        first_name:
          description: The first name of the person.
          example: Elon
          nullable: true
          title: First name
          type: string
        id:
          description: Unique identifier for the company
          example: "12345"
          readOnly: true
          type: string
        image:
          description: The Image URL of the company
          example: https://www.spacex.com/static/images/share.jpg
          nullable: true
          type: string
        industry:
          description: The industry represents the type of business the company is
            in.
          example: Apparel
          nullable: true
          type: string
        interaction_count:
          description: Number of interactions
          example: 1
          nullable: true
          readOnly: true
          type: integer
        last_activity_at:
          description: Last activity date
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        last_name:
          description: The last name of the person.
          example: Musk
          nullable: true
          title: Last name
          type: string
        name:
          description: Name of the company
          example: SpaceX
          minLength: 1
          title: Name
          type: string
        number_of_employees:
          description: Number of employees
          example: 500-1000
          nullable: true
          type: string
        owner_id:
          description: Owner ID
          example: "12345"
          nullable: true
          type: string
        ownership:
          description: The ownership indicates the type of ownership of the company.
          example: Public
          nullable: true
          type: string
        parent_id:
          description: Parent ID
          example: "22345"
          nullable: true
          readOnly: true
          type: string
        payee_number:
          description: A payee number is a unique number that identifies a payee for
            tax purposes.
          example: 78932EN
          nullable: true
          title: Payee number
          type: string
        phone_numbers:
          items:
            $ref: '#/components/schemas/PhoneNumber'
          type: array
        read_only:
          description: Whether the company is read-only or not
          example: false
          nullable: true
          title: Read-only
          type: boolean
        row_type:
          $ref: '#/components/schemas/Company_Row_Type'
        sales_tax_number:
          description: A sales tax number is a unique number that identifies a company
            for tax purposes.
          example: 12456EN
          nullable: true
          title: Sales tax number
          type: string
        salutation:
          description: "A formal salutation for the person. For example, 'Mr', 'Mrs'"
          example: Mr
          nullable: true
          type: string
        social_links:
          items:
            $ref: '#/components/schemas/SocialLink'
          type: array
        status:
          description: The status of the company
          example: Open
          nullable: true
          type: string
        tags:
          example:
          - New
          items:
            type: string
          nullable: true
          type: array
          x-apideck-schema-id: Tags
        updated_at:
          description: Last updated date
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        updated_by:
          description: Updated by user ID
          example: "12345"
          nullable: true
          readOnly: true
          type: string
        vat_number:
          description: The VAT number of the company
          example: BE0689615164
          nullable: true
          type: string
        websites:
          items:
            $ref: '#/components/schemas/Website'
          type: array
      required:
      - name
      type: object
      x-apideck-schema-id: Company
      x-apideck-weights:
        abn_branch: edge-case
        abn_or_tfn: edge-case
        acn: edge-case
        addresses: high
        annual_revenue: low
        bank_accounts: medium
        birthday: edge-case
        created_at: medium
        created_by: edge-case
        currency: medium
        custom_fields: medium
        deleted: medium
        description: medium
        emails: high
        fax: low
        first_name: edge-case
        id: critical
        image: low
        industry: medium
        interaction_count: edge-case
        last_activity_at: low
        last_name: edge-case
        name: critical
        number_of_employees: low
        owner_id: high
        ownership: low
        parent_id: edge-case
        payee_number: edge-case
        phone_numbers: high
        read_only: low
        row_type: edge-case
        sales_tax_number: medium
        salutation: edge-case
        social_links: low
        status: high
        tags: low
        updated_at: high
        updated_by: edge-case
        vat_number: high
        websites: medium
    CompanyInfo:
      additionalProperties: false
      example:
        country: US
        addresses:
        - country: US
          contact_name: Elon Musk
          website: https://elonmusk.com
          line4: delivery instructions
          notes: Address notes or delivery instructions.
          string: "25 Spring Street, Blackburn, VIC 3130"
          city: San Francisco
          latitude: "40.759211"
          county: Santa Clara
          type: primary
          row_version: 1-12345
          name: HQ US
          street_number: "25"
          phone_number: 111-111-1111
          id: "123"
          salutation: Mr
          state: CA
          fax: 122-111-1111
          line3: "Suite #"
          postal_code: "94104"
          line2: "apt #"
          email: elon@musk.com
          line1: Main street
          longitude: "-73.984638"
        - country: US
          contact_name: Elon Musk
          website: https://elonmusk.com
          line4: delivery instructions
          notes: Address notes or delivery instructions.
          string: "25 Spring Street, Blackburn, VIC 3130"
          city: San Francisco
          latitude: "40.759211"
          county: Santa Clara
          type: primary
          row_version: 1-12345
          name: HQ US
          street_number: "25"
          phone_number: 111-111-1111
          id: "123"
          salutation: Mr
          state: CA
          fax: 122-111-1111
          line3: "Suite #"
          postal_code: "94104"
          line2: "apt #"
          email: elon@musk.com
          line1: Main street
          longitude: "-73.984638"
        default_sales_tax:
          components:
          - rate: 10
            name: GST
            id: "10"
            compound: true
          - rate: 10
            name: GST
            id: "10"
            compound: true
          code: ABN
          created_at: 2020-09-30T07:43:32Z
          description: Reduced rate GST Purchases
          type: NONE
          created_by: "12345"
          custom_mappings: "{}"
          original_tax_rate_id: "12345"
          tax_remitted_account_id: "123456"
          tax_payable_account_id: "123456"
          updated_at: 2020-09-30T07:43:32Z
          report_tax_type: NONE
          row_version: 1-12345
          name: GST on Purchases
          updated_by: "12345"
          id: "1234"
          effective_tax_rate: 10
          total_tax_rate: 10
          status: active
        company_start_date: 2015-06-05
        automated_sales_tax: true
        created_at: 2020-09-30T07:43:32Z
        language: EN
        created_by: "12345"
        custom_mappings: "{}"
        sales_tax_enabled: true
        emails:
        - id: "123"
          type: primary
          email: elon@musk.com
        - id: "123"
          type: primary
          email: elon@musk.com
        phone_numbers:
        - country_code: "1"
          number: 111-111-1111
          extension: "105"
          area_code: "323"
          id: "12345"
          type: primary
        - country_code: "1"
          number: 111-111-1111
          extension: "105"
          area_code: "323"
          id: "12345"
          type: primary
        sales_tax_number: 111.222.333
        updated_at: 2020-09-30T07:43:32Z
        company_name: SpaceX
        row_version: 1-12345
        updated_by: "12345"
        currency: USD
        fiscal_year_start_month: January
        id: "12345"
        legal_name: SpaceX Inc.
        status: active
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/Address'
          title: addresses
          type: array
        automated_sales_tax:
          description: Whether sales tax is calculated automatically for the company
          title: Automated sales tax
          type: boolean
        company_name:
          description: The name of the company.
          example: SpaceX
          nullable: true
          title: Company name
          type: string
        company_start_date:
          description: Date when company file was created
          example: 2015-06-05
          format: date
          title: Date when company file was created
          type: string
        country:
          description: country code according to ISO 3166-1 alpha-2.
          example: US
          nullable: true
          title: country
          type: string
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: CustomMappings
          type: object
          x-apideck-schema-id: CustomMappings
        default_sales_tax:
          $ref: '#/components/schemas/TaxRate'
        emails:
          items:
            $ref: '#/components/schemas/Email'
          title: emails
          type: array
        fiscal_year_start_month:
          description: The start month of fiscal year.
          enum:
          - January
          - February
          - March
          - April
          - May
          - June
          - July
          - August
          - September
          - October
          - November
          - December
          example: January
          title: The start month of fiscal year.
          type: string
          x-apideck-enum-id: company-info.fiscal_year_start_month
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        language:
          description: language code according to ISO 639-1. For the United States
            - EN
          example: EN
          nullable: true
          title: language
          type: string
        legal_name:
          description: The legal name of the company
          example: SpaceX Inc.
          title: Legal name
          type: string
        phone_numbers:
          items:
            $ref: '#/components/schemas/PhoneNumber'
          title: phone_numbers
          type: array
        row_version:
          description: A binary value used to detect updates to a object and prevent
            data conflicts. It is incremented each time an update is made to the object.
          example: 1-12345
          nullable: true
          title: Row version
          type: string
        sales_tax_enabled:
          description: Whether sales tax is enabled for the company
          title: Sales tax enabled
          type: boolean
        sales_tax_number:
          example: 111.222.333
          nullable: true
          title: Sales Tax Number
          type: string
        status:
          description: Based on the status some functionality is enabled or disabled.
          enum:
          - active
          - inactive
          example: active
          title: Company status
          type: string
          x-apideck-enum-id: company-info.status
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
      title: CompanyInfo
      type: object
      x-apideck-schema-id: CompanyInfo
      x-apideck-weights:
        addresses: medium
        automated_sales_tax: edge-case
        company_name: critical
        company_start_date: medium
        created_at: low
        created_by: edge-case
        currency: medium
        default_sales_tax: edge-case
        emails: medium
        fiscal_year_start_month: medium
        id: medium
        language: low
        legal_name: medium
        phone_numbers: medium
        row_version: edge-case
        sales_tax_enabled: edge-case
        sales_tax_number: medium
        status: critical
        updated_at: medium
        updated_by: edge-case
    CompanyName:
      description: The name of the company.
      example: SpaceX
      nullable: true
      title: Company name
      type: string
    Contact:
      additionalProperties: false
      properties:
        active:
          description: The active status of the contact.
          example: true
          nullable: true
          type: boolean
        addresses:
          items:
            $ref: '#/components/schemas/Address'
          type: array
        birthday:
          description: The birthday of the contact.
          example: 2000-08-12
          nullable: true
          type: string
        company_id:
          description: The company the contact is associated with.
          example: "23456"
          nullable: true
          type: string
        company_name:
          description: The name of the company the contact is associated with.
          example: "23456"
          nullable: true
          type: string
        created_at:
          description: The creation date of the contact.
          example: 2017-08-12T20:43:21.291Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        current_balance:
          description: The current balance of the contact.
          example: 10.5
          nullable: true
          title: Current Balance
          type: number
        custom_fields:
          items:
            $ref: '#/components/schemas/CustomField'
          type: array
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: CustomMappings
          type: object
          x-apideck-schema-id: CustomMappings
        department:
          description: The department of the contact.
          example: Engineering
          nullable: true
          type: string
        description:
          description: The description of the contact.
          example: Internal champion
          nullable: true
          title: Description
          type: string
        email_domain:
          example: gmail.com
          nullable: true
          type: string
        emails:
          items:
            $ref: '#/components/schemas/Email'
          type: array
        fax:
          description: The fax number of the contact.
          example: "+12129876543"
          nullable: true
          type: string
        first_call_at:
          description: The first call date of the contact.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        first_email_at:
          description: The first email date of the contact.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        first_name:
          description: The first name of the contact.
          example: Elon
          nullable: true
          type: string
        gender:
          description: The gender of the contact.
          enum:
          - male
          - female
          - unisex
          example: female
          nullable: true
          type: string
          x-apideck-enum-id: contacts.gender
        id:
          description: Unique identifier for the contact.
          example: "12345"
          readOnly: true
          type: string
        image:
          deprecated: true
          example: https://unavatar.io/elon-musk
          nullable: true
          type: string
        language:
          description: language code according to ISO 639-1. For the United States
            - EN
          example: EN
          nullable: true
          type: string
        last_activity_at:
          description: The last activity date of the contact.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        last_name:
          description: The last name of the contact.
          example: Musk
          nullable: true
          type: string
        lead_id:
          description: The lead the contact is associated with.
          example: "34567"
          nullable: true
          type: string
        lead_source:
          description: The lead source of the contact.
          example: Cold Call
          nullable: true
          type: string
        middle_name:
          description: The middle name of the contact.
          example: D.
          nullable: true
          type: string
        name:
          description: Full name of the contact.
          example: Elon Musk
          minLength: 1
          nullable: true
          type: string
        owner_id:
          description: The owner of the contact.
          example: "54321"
          nullable: true
          type: string
        phone_numbers:
          items:
            $ref: '#/components/schemas/PhoneNumber'
          type: array
        photo_url:
          description: The URL of the photo of a person.
          example: https://unavatar.io/elon-musk
          nullable: true
          title: Photo URL
          type: string
        prefix:
          description: The prefix of the contact.
          example: Mr.
          nullable: true
          type: string
        social_links:
          items:
            $ref: '#/components/schemas/SocialLink'
          type: array
        status:
          description: The status of the contact.
          example: open
          nullable: true
          type: string
        suffix:
          description: The suffix of the contact.
          example: PhD
          nullable: true
          type: string
        tags:
          example:
          - New
          items:
            type: string
          nullable: true
          type: array
          x-apideck-schema-id: Tags
        title:
          description: The job title of the contact.
          example: CEO
          nullable: true
          type: string
        type:
          description: The type of the contact.
          enum:
          - customer
          - supplier
          - employee
          - personal
          example: personal
          nullable: true
          type: string
          x-apideck-enum-id: contacts.type
        updated_at:
          description: The last update date of the contact.
          example: 2017-08-12T20:43:21.291Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        websites:
          items:
            $ref: '#/components/schemas/Website'
          type: array
      required:
      - name
      type: object
      x-apideck-schema-id: Contact
      x-apideck-weights:
        active: edge-case
        addresses: high
        birthday: medium
        company_id: high
        company_name: medium
        created_at: medium
        current_balance: edge-case
        custom_fields: medium
        department: medium
        description: low
        email_domain: edge-case
        emails: high
        fax: low
        first_call_at: edge-case
        first_email_at: edge-case
        first_name: high
        gender: medium
        id: critical
        image: medium
        language: medium
        last_activity_at: medium
        last_name: high
        lead_id: medium
        lead_source: low
        middle_name: low
        name: critical
        owner_id: medium
        phone_numbers: high
        photo_url: medium
        prefix: low
        social_links: low
        status: edge-case
        suffix: low
        tags: low
        title: medium
        type: medium
        updated_at: high
        websites: medium
      x-pii:
      - name
      - first_name
      - middle_name
      - last_name
      - email
    CreateBillResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: bills
        service: xero
        operation: add
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: add
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: bills
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: CreateBillResponse
      type: object
      x-apideck-schema-id: CreateBillResponse
    CreateCreditNoteResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: credit-notes
        service: xero
        operation: add
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: add
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: credit-notes
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: CreateCreditNoteResponse
      type: object
      x-apideck-schema-id: CreateCreditNoteResponse
    CreateCustomerResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: customers
        service: xero
        operation: add
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: add
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: customers
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: CreateCustomerResponse
      type: object
      x-apideck-schema-id: CreateCustomerResponse
    CreateInvoiceItemResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: invoice-items
        service: xero
        operation: add
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: add
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: invoice-items
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: CreateInvoiceItemResponse
      type: object
      x-apideck-schema-id: CreateInvoiceItemResponse
    CreateInvoiceResponse:
      example:
        status_code: 200
        data:
          downstream_id: "12345"
          id: "12345"
        resource: invoices
        service: xero
        operation: add
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/InvoiceResponse'
        operation:
          description: Operation performed
          example: add
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: invoices
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: CreateInvoiceResponse
      type: object
      x-apideck-schema-id: CreateInvoiceResponse
    CreateJournalEntryResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: journal-entries
        service: quickbooks
        operation: add
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: add
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: journal-entries
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: quickbooks
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: CreateJournalEntryResponse
      type: object
    CreateLedgerAccountResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: ledger-accounts
        service: xero
        operation: add
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: add
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: ledger-accounts
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: CreateLedgerAccountResponse
      type: object
      x-apideck-schema-id: CreateLedgerAccountResponse
    CreatePaymentResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: payments
        service: xero
        operation: add
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: add
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: payments
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: CreatePaymentResponse
      type: object
      x-apideck-schema-id: CreatePaymentResponse
    CreatePurchaseOrderResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: PurchaseOrders
        service: quickbooks
        operation: add
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: add
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: PurchaseOrders
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: quickbooks
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: CreatePurchaseOrderResponse
      type: object
    CreateSupplierResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: payments
        service: xero
        operation: add
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: add
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: payments
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: CreateSupplierResponse
      type: object
      x-apideck-schema-id: CreateSupplierResponse
    CreateTaxRateResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: tax-rates
        service: xero
        operation: add
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: add
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: tax-rates
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: CreateTaxRateResponse
      type: object
      x-apideck-schema-id: CreateTaxRateResponse
    CreatedAt:
      description: The date and time when the object was created.
      example: 2020-09-30T07:43:32Z
      format: date-time
      nullable: true
      readOnly: true
      title: Created at (timestamp)
      type: string
    CreatedBy:
      description: The user who created the object.
      example: "12345"
      nullable: true
      readOnly: true
      title: Created by
      type: string
    CreditNote:
      additionalProperties: false
      example:
        note: Some notes about this credit note
        created_at: 2020-09-30T07:43:32Z
        line_items:
        - tax_amount: 27500
          item:
            code: 120-C
            name: Model Y
            id: "12344"
          code: 120-C
          quantity: 1
          department_id: "1234"
          discount_amount: 19.99
          created_at: 2020-09-30T07:43:32Z
          description: "Model Y is a fully electric, mid-size SUV, with seating for\
            \ up to seven, dual motor AWD and unparalleled protection."
          discount_percentage: 0.01
          type: sales_item
          unit_price: 27500.5
          created_by: "12345"
          location_id: "1234"
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          custom_mappings: "{}"
          updated_at: 2020-09-30T07:43:32Z
          total_amount: 27500
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          line_number: 1
          row_version: 1-12345
          updated_by: "12345"
          unit_of_measure: pc.
          id: "12345"
          row_id: "12345"
        - tax_amount: 27500
          item:
            code: 120-C
            name: Model Y
            id: "12344"
          code: 120-C
          quantity: 1
          department_id: "1234"
          discount_amount: 19.99
          created_at: 2020-09-30T07:43:32Z
          description: "Model Y is a fully electric, mid-size SUV, with seating for\
            \ up to seven, dual motor AWD and unparalleled protection."
          discount_percentage: 0.01
          type: sales_item
          unit_price: 27500.5
          created_by: "12345"
          location_id: "1234"
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          custom_mappings: "{}"
          updated_at: 2020-09-30T07:43:32Z
          total_amount: 27500
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          line_number: 1
          row_version: 1-12345
          updated_by: "12345"
          unit_of_measure: pc.
          id: "12345"
          row_id: "12345"
        type: accounts_receivable_credit
        custom_mappings: "{}"
        reference: "123456"
        number: OIT00546
        currency_rate: 0.69
        remaining_credit: 27500
        allocations:
        - amount: 49.99
          code: N091
          id: "123456"
          type: invoice
        - amount: 49.99
          code: N091
          id: "123456"
          type: invoice
        balance: 27500
        updated_at: 2020-09-30T07:43:32Z
        date_paid: 2021-05-01T12:00:00Z
        terms: Some terms about this credit note
        currency: USD
        id: "123456"
        tax_inclusive: true
        total_tax: 2500
        created_by: "12345"
        tax_code: "1234"
        total_amount: 49.99
        date_issued: 2021-05-01T12:00:00Z
        row_version: 1-12345
        sub_total: 27500
        updated_by: "12345"
        account:
          code: "453"
          nominal_code: N091
          name: Bank account
          id: "123456"
        customer:
          display_id: CUST00101
          company_name: The boring company
          name: Windsurf Shop
          id: "12345"
          display_name: Windsurf Shop
        status: authorised
      properties:
        account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        allocations:
          items:
            $ref: '#/components/schemas/CreditNote_allocations_inner'
          title: allocations
          type: array
        balance:
          description: The balance reflecting any payments made against the transaction.
          example: 27500
          nullable: true
          title: Balance
          type: number
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        currency_rate:
          description: Currency Exchange Rate at the time entity was recorded/generated.
          example: 0.69
          nullable: true
          title: Currency Exchange Rate
          type: number
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: CustomMappings
          type: object
          x-apideck-schema-id: CustomMappings
        customer:
          $ref: '#/components/schemas/LinkedCustomer'
        date_issued:
          description: Date credit note issued - YYYY:MM::DDThh:mm:ss.sTZD
          example: 2021-05-01T12:00:00Z
          format: date-time
          title: Datetime
          type: string
        date_paid:
          description: Date credit note paid - YYYY:MM::DDThh:mm:ss.sTZD
          example: 2021-05-01T12:00:00Z
          format: date-time
          nullable: true
          title: Datetime
          type: string
        id:
          description: Unique identifier representing the entity
          example: "123456"
          readOnly: true
          title: Credit Note identifier
          type: string
        line_items:
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
          title: line_items
          type: array
        note:
          description: Optional note to be associated with the credit note.
          example: Some notes about this credit note
          nullable: true
          title: Note
          type: string
        number:
          description: Credit note number.
          example: OIT00546
          nullable: true
          title: Credit note number
          type: string
        reference:
          description: "Optional reference message ie: Debit remittance detail."
          example: "123456"
          nullable: true
          title: Credit Note reference
          type: string
        remaining_credit:
          description: Indicates the total credit amount still available to apply
            towards the payment.
          example: 27500
          nullable: true
          title: Remaining Credit
          type: number
        row_version:
          description: A binary value used to detect updates to a object and prevent
            data conflicts. It is incremented each time an update is made to the object.
          example: 1-12345
          nullable: true
          title: Row version
          type: string
        status:
          description: Status of credit notes
          enum:
          - draft
          - authorised
          - paid
          - voided
          - deleted
          example: authorised
          title: Credit Note status
          type: string
          x-apideck-enum-id: credit-notes.status
        sub_total:
          description: "Sub-total amount, normally before tax."
          example: 27500
          nullable: true
          title: Sub-total amount
          type: number
        tax_code:
          description: Applicable tax id/code override if tax is not supplied on a
            line item basis.
          example: "1234"
          nullable: true
          title: Tax Code
          type: string
        tax_inclusive:
          description: Amounts are including tax
          example: true
          nullable: true
          title: Tax inclusive
          type: boolean
        terms:
          description: Optional terms to be associated with the credit note.
          example: Some terms about this credit note
          nullable: true
          title: Terms
          type: string
        total_amount:
          description: Amount of transaction
          example: 49.99
          title: Total amount
          type: number
        total_tax:
          description: Total tax amount applied to this invoice.
          example: 2500
          nullable: true
          title: Total tax amount
          type: number
        type:
          description: Type of payment
          enum:
          - accounts_receivable_credit
          - accounts_payable_credit
          example: accounts_receivable_credit
          title: Credit Note Type
          type: string
          x-apideck-enum-id: credit-notes.type
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
      required:
      - id
      - total_amount
      title: CreditNote
      type: object
      x-apideck-schema-id: CreditNote
      x-apideck-strict-required:
      - total_amount
      - currency
      - customer
      x-apideck-weights:
        account: critical
        allocations: medium
        balance: critical
        created_at: medium
        created_by: low
        currency: critical
        currency_rate: medium
        customer: high
        date_issued: edge-case
        date_paid: critical
        id: critical
        line_items: medium
        note: low
        number: low
        reference: low
        remaining_credit: edge-case
        row_version: edge-case
        status: high
        sub_total: critical
        tax_code: edge-case
        tax_inclusive: low
        terms: low
        total_amount: critical
        total_tax: edge-case
        type: edge-case
        updated_at: medium
        updated_by: low
    Currency:
      description: "Indicates the associated currency for an amount of money. Values\
        \ correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
      enum:
      - UNKNOWN_CURRENCY
      - AED
      - AFN
      - ALL
      - AMD
      - ANG
      - AOA
      - ARS
      - AUD
      - AWG
      - AZN
      - BAM
      - BBD
      - BDT
      - BGN
      - BHD
      - BIF
      - BMD
      - BND
      - BOB
      - BOV
      - BRL
      - BSD
      - BTN
      - BWP
      - BYR
      - BZD
      - CAD
      - CDF
      - CHE
      - CHF
      - CHW
      - CLF
      - CLP
      - CNY
      - COP
      - COU
      - CRC
      - CUC
      - CUP
      - CVE
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EGP
      - ERN
      - ETB
      - EUR
      - FJD
      - FKP
      - GBP
      - GEL
      - GHS
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - INR
      - IQD
      - IRR
      - ISK
      - JMD
      - JOD
      - JPY
      - KES
      - KGS
      - KHR
      - KMF
      - KPW
      - KRW
      - KWD
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - LTL
      - LVL
      - LYD
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MRO
      - MUR
      - MVR
      - MWK
      - MXN
      - MXV
      - MYR
      - MZN
      - NAD
      - NGN
      - NIO
      - NOK
      - NPR
      - NZD
      - OMR
      - PAB
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PYG
      - QAR
      - RON
      - RSD
      - RUB
      - RWF
      - SAR
      - SBD
      - SCR
      - SDG
      - SEK
      - SGD
      - SHP
      - SLL
      - SOS
      - SRD
      - SSP
      - STD
      - SVC
      - SYP
      - SZL
      - THB
      - TJS
      - TMT
      - TND
      - TOP
      - TRC
      - TRY
      - TTD
      - TWD
      - TZS
      - UAH
      - UGX
      - USD
      - USN
      - USS
      - UYI
      - UYU
      - UZS
      - VEF
      - VND
      - VUV
      - WST
      - XAF
      - XAG
      - XAU
      - XBA
      - XBB
      - XBC
      - XBD
      - XCD
      - XDR
      - XOF
      - XPD
      - XPF
      - XPT
      - XTS
      - XXX
      - YER
      - ZAR
      - ZMK
      - ZMW
      - BTC
      - ETH
      example: USD
      nullable: true
      title: Currency
      type: string
      x-apideck-enum-coverage-ignore: true
      x-apideck-enum-id: currencies
      x-enum-elements:
      - description: Unknown currency
        name: UNKNOWN_CURRENCY
      - description: United Arab Emirates dirham
        name: AED
      - description: Afghan afghani
        name: AFN
      - description: Albanian lek
        name: ALL
      - description: Armenian dram
        name: AMD
      - description: Netherlands Antillean guilder
        name: ANG
      - description: Angolan kwanza
        name: AOA
      - description: Argentine peso
        name: ARS
      - description: Australian dollar
        name: AUD
      - description: Aruban florin
        name: AWG
      - description: Azerbaijani manat
        name: AZN
      - description: Bosnia and Herzegovina convertible mark
        name: BAM
      - description: Barbados dollar
        name: BBD
      - description: Bangladeshi taka
        name: BDT
      - description: Bulgarian lev
        name: BGN
      - description: Bahraini dinar
        name: BHD
      - description: Burundian franc
        name: BIF
      - description: Bermudian dollar
        name: BMD
      - description: Brunei dollar
        name: BND
      - description: Boliviano
        name: BOB
      - description: Bolivian Mvdol
        name: BOV
      - description: Brazilian real
        name: BRL
      - description: Bahamian dollar
        name: BSD
      - description: Bhutanese ngultrum
        name: BTN
      - description: Botswana pula
        name: BWP
      - description: Belarusian ruble
        name: BYR
      - description: Belize dollar
        name: BZD
      - description: Canadian dollar
        name: CAD
      - description: Congolese franc
        name: CDF
      - description: WIR Euro
        name: CHE
      - description: Swiss franc
        name: CHF
      - description: WIR Franc
        name: CHW
      - description: Unidad de Fomento
        name: CLF
      - description: Chilean peso
        name: CLP
      - description: Chinese yuan
        name: CNY
      - description: Colombian peso
        name: COP
      - description: Unidad de Valor Real
        name: COU
      - description: Costa Rican colon
        name: CRC
      - description: Cuban convertible peso
        name: CUC
      - description: Cuban peso
        name: CUP
      - description: Cape Verdean escudo
        name: CVE
      - description: Czech koruna
        name: CZK
      - description: Djiboutian franc
        name: DJF
      - description: Danish krone
        name: DKK
      - description: Dominican peso
        name: DOP
      - description: Algerian dinar
        name: DZD
      - description: Egyptian pound
        name: EGP
      - description: Eritrean nakfa
        name: ERN
      - description: Ethiopian birr
        name: ETB
      - description: Euro
        name: EUR
      - description: Fiji dollar
        name: FJD
      - description: Falkland Islands pound
        name: FKP
      - description: Pound sterling
        name: GBP
      - description: Georgian lari
        name: GEL
      - description: Ghanaian cedi
        name: GHS
      - description: Gibraltar pound
        name: GIP
      - description: Gambian dalasi
        name: GMD
      - description: Guinean franc
        name: GNF
      - description: Guatemalan quetzal
        name: GTQ
      - description: Guyanese dollar
        name: GYD
      - description: Hong Kong dollar
        name: HKD
      - description: Honduran lempira
        name: HNL
      - description: Croatian kuna
        name: HRK
      - description: Haitian gourde
        name: HTG
      - description: Hungarian forint
        name: HUF
      - description: Indonesian rupiah
        name: IDR
      - description: Israeli new shekel
        name: ILS
      - description: Indian rupee
        name: INR
      - description: Iraqi dinar
        name: IQD
      - description: Iranian rial
        name: IRR
      - description: Icelandic króna
        name: ISK
      - description: Jamaican dollar
        name: JMD
      - description: Jordanian dinar
        name: JOD
      - description: Japanese yen
        name: JPY
      - description: Kenyan shilling
        name: KES
      - description: Kyrgyzstani som
        name: KGS
      - description: Cambodian riel
        name: KHR
      - description: Comoro franc
        name: KMF
      - description: North Korean won
        name: KPW
      - description: South Korean won
        name: KRW
      - description: Kuwaiti dinar
        name: KWD
      - description: Cayman Islands dollar
        name: KYD
      - description: Kazakhstani tenge
        name: KZT
      - description: Lao kip
        name: LAK
      - description: Lebanese pound
        name: LBP
      - description: Sri Lankan rupee
        name: LKR
      - description: Liberian dollar
        name: LRD
      - description: Lesotho loti
        name: LSL
      - description: Lithuanian litas
        name: LTL
      - description: Latvian lats
        name: LVL
      - description: Libyan dinar
        name: LYD
      - description: Moroccan dirham
        name: MAD
      - description: Moldovan leu
        name: MDL
      - description: Malagasy ariary
        name: MGA
      - description: Macedonian denar
        name: MKD
      - description: Myanmar kyat
        name: MMK
      - description: Mongolian tögrög
        name: MNT
      - description: Macanese pataca
        name: MOP
      - description: Mauritanian ouguiya
        name: MRO
      - description: Mauritian rupee
        name: MUR
      - description: Maldivian rufiyaa
        name: MVR
      - description: Malawian kwacha
        name: MWK
      - description: Mexican peso
        name: MXN
      - description: Mexican Unidad de Inversion
        name: MXV
      - description: Malaysian ringgit
        name: MYR
      - description: Mozambican metical
        name: MZN
      - description: Namibian dollar
        name: NAD
      - description: Nigerian naira
        name: NGN
      - description: Nicaraguan córdoba
        name: NIO
      - description: Norwegian krone
        name: NOK
      - description: Nepalese rupee
        name: NPR
      - description: New Zealand dollar
        name: NZD
      - description: Omani rial
        name: OMR
      - description: Panamanian balboa
        name: PAB
      - description: Peruvian sol
        name: PEN
      - description: Papua New Guinean kina
        name: PGK
      - description: Philippine peso
        name: PHP
      - description: Pakistani rupee
        name: PKR
      - description: Polish złoty
        name: PLN
      - description: Paraguayan guaraní
        name: PYG
      - description: Qatari riyal
        name: QAR
      - description: Romanian leu
        name: RON
      - description: Serbian dinar
        name: RSD
      - description: Russian ruble
        name: RUB
      - description: Rwandan franc
        name: RWF
      - description: Saudi riyal
        name: SAR
      - description: Solomon Islands dollar
        name: SBD
      - description: Seychelles rupee
        name: SCR
      - description: Sudanese pound
        name: SDG
      - description: Swedish krona
        name: SEK
      - description: Singapore dollar
        name: SGD
      - description: Saint Helena pound
        name: SHP
      - description: Sierra Leonean leone
        name: SLL
      - description: Somali shilling
        name: SOS
      - description: Surinamese dollar
        name: SRD
      - description: South Sudanese pound
        name: SSP
      - description: São Tomé and Príncipe dobra
        name: STD
      - description: Salvadoran colón
        name: SVC
      - description: Syrian pound
        name: SYP
      - description: Swazi lilangeni
        name: SZL
      - description: Thai baht
        name: THB
      - description: Tajikstani somoni
        name: TJS
      - description: Turkmenistan manat
        name: TMT
      - description: Tunisian dinar
        name: TND
      - description: Tongan pa'anga
        name: TOP
      - description: Turkish lira
        name: TRY
      - description: Trinidad and Tobago dollar
        name: TTD
      - description: New Taiwan dollar
        name: TWD
      - description: Tanzanian shilling
        name: TZS
      - description: Ukrainian hryvnia
        name: UAH
      - description: Ugandan shilling
        name: UGX
      - description: United States dollar
        name: USD
      - description: United States dollar (next day)
        name: USN
      - description: United States dollar (same day)
        name: USS
      - description: Uruguay Peso en Unidedades Indexadas
        name: UYI
      - description: Uruguyan peso
        name: UYU
      - description: Uzbekistan som
        name: UZS
      - description: Venezuelan bolívar soberano
        name: VEF
      - description: Vietnamese đồng
        name: VND
      - description: Vanuatu vatu
        name: VUV
      - description: Samoan tala
        name: WST
      - description: CFA franc BEAC
        name: XAF
      - description: Silver
        name: XAG
      - description: Gold
        name: XAU
      - description: European Composite Unit
        name: XBA
      - description: European Monetary Unit
        name: XBB
      - description: European Unit of Account 9
        name: XBC
      - description: European Unit of Account 17
        name: XBD
      - description: East Caribbean dollar
        name: XCD
      - description: Special drawing rights (International Monetary Fund)
        name: XDR
      - description: CFA franc BCEAO
        name: XOF
      - description: Palladium
        name: XPD
      - description: CFP franc
        name: XPF
      - description: Platinum
        name: XPT
      - description: Code reserved for testing
        name: XTS
      - description: No currency
        name: XXX
      - description: Yemeni rial
        name: YER
      - description: South African rand
        name: ZAR
      - description: Zambian kwacha
        name: ZMK
      - description: Zambian kwacha
        name: ZMW
      - description: Bitcoin
        name: BTC
      - description: Ether
        name: ETH
    CurrencyRate:
      description: Currency Exchange Rate at the time entity was recorded/generated.
      example: 0.69
      nullable: true
      title: Currency Exchange Rate
      type: number
    CustomField:
      additionalProperties: false
      properties:
        description:
          description: More information about the custom field
          example: Employee Level
          nullable: true
          title: Description
          type: string
        id:
          description: Unique identifier for the custom field.
          example: "2389328923893298"
          nullable: true
          title: ID
          type: string
        name:
          description: Name of the custom field.
          example: employee_level
          nullable: true
          title: Name
          type: string
        value:
          $ref: '#/components/schemas/CustomField_value'
      required:
      - id
      title: CustomField
      type: object
      x-apideck-schema-id: CustomField
      x-apideck-weights:
        description: edge-case
        id: critical
        name: medium
        value: critical
    CustomMappings:
      description: "When custom mappings are configured on the resource, the result\
        \ is included here."
      nullable: true
      title: CustomMappings
      type: object
      x-apideck-schema-id: CustomMappings
    Customer:
      additionalProperties: false
      example:
        parent:
          name: Windsurf Shop
          id: "12345"
        addresses:
        - country: US
          contact_name: Elon Musk
          website: https://elonmusk.com
          line4: delivery instructions
          notes: Address notes or delivery instructions.
          string: "25 Spring Street, Blackburn, VIC 3130"
          city: San Francisco
          latitude: "40.759211"
          county: Santa Clara
          type: primary
          row_version: 1-12345
          name: HQ US
          street_number: "25"
          phone_number: 111-111-1111
          id: "123"
          salutation: Mr
          state: CA
          fax: 122-111-1111
          line3: "Suite #"
          postal_code: "94104"
          line2: "apt #"
          email: elon@musk.com
          line1: Main street
          longitude: "-73.984638"
        - country: US
          contact_name: Elon Musk
          website: https://elonmusk.com
          line4: delivery instructions
          notes: Address notes or delivery instructions.
          string: "25 Spring Street, Blackburn, VIC 3130"
          city: San Francisco
          latitude: "40.759211"
          county: Santa Clara
          type: primary
          row_version: 1-12345
          name: HQ US
          street_number: "25"
          phone_number: 111-111-1111
          id: "123"
          salutation: Mr
          state: CA
          fax: 122-111-1111
          line3: "Suite #"
          postal_code: "94104"
          line2: "apt #"
          email: elon@musk.com
          line1: Main street
          longitude: "-73.984638"
        notes: Some notes about this customer
        display_id: EMP00101
        channel: email
        created_at: 2020-09-30T07:43:32Z
        project: false
        suffix: Jr.
        title: CEO
        tax_rate:
          code: N-T
          rate: 10
          name: GST on Purchases
          id: "123456"
        custom_mappings: "{}"
        emails:
        - id: "123"
          type: primary
          email: elon@musk.com
        - id: "123"
          type: primary
          email: elon@musk.com
        updated_at: 2020-09-30T07:43:32Z
        tax_number: US123945459
        currency: USD
        downstream_id: "12345"
        id: "12345"
        first_name: Elon
        payment_method: cash
        individual: true
        last_name: Musk
        display_name: Windsurf Shop
        middle_name: D.
        created_by: "12345"
        phone_numbers:
        - country_code: "1"
          number: 111-111-1111
          extension: "105"
          area_code: "323"
          id: "12345"
          type: primary
        - country_code: "1"
          number: 111-111-1111
          extension: "105"
          area_code: "323"
          id: "12345"
          type: primary
        company_name: SpaceX
        row_version: 1-12345
        updated_by: "12345"
        websites:
        - id: "12345"
          type: primary
          url: http://example.com
        - id: "12345"
          type: primary
          url: http://example.com
        bank_accounts:
        - bsb_number: 062-001
          account_number: "123465"
          bank_code: BNH
          account_type: credit_card
          account_name: SPACEX LLC
          iban: CH2989144532982975332
          bank_name: Monzo
          currency: USD
          routing_number: "012345678"
          bic: AUDSCHGGXXX
          branch_identifier: "001"
        - bsb_number: 062-001
          account_number: "123465"
          bank_code: BNH
          account_type: credit_card
          account_name: SPACEX LLC
          iban: CH2989144532982975332
          bank_name: Monzo
          currency: USD
          routing_number: "012345678"
          bic: AUDSCHGGXXX
          branch_identifier: "001"
        account:
          code: "453"
          nominal_code: N091
          name: Bank account
          id: "123456"
        status: active
      properties:
        account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        addresses:
          items:
            $ref: '#/components/schemas/Address'
          title: addresses
          type: array
        bank_accounts:
          items:
            $ref: '#/components/schemas/BankAccount'
          title: bank_accounts
          type: array
        channel:
          description: The channel through which the transaction is processed.
          example: email
          nullable: true
          title: Channel
          type: string
        company_name:
          description: The name of the company.
          example: SpaceX
          nullable: true
          title: Company name
          type: string
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: CustomMappings
          type: object
          x-apideck-schema-id: CustomMappings
        display_id:
          description: Display ID
          example: EMP00101
          nullable: true
          title: Display ID
          type: string
        display_name:
          description: Display name
          example: Windsurf Shop
          nullable: true
          title: Display Name
          type: string
        downstream_id:
          description: The third-party API ID of original entity
          example: "12345"
          nullable: true
          readOnly: true
          title: DownstreamId
          type: string
        emails:
          items:
            $ref: '#/components/schemas/Email'
          title: emails
          type: array
        first_name:
          description: The first name of the person.
          example: Elon
          nullable: true
          title: First name
          type: string
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        individual:
          description: Is this an individual or business customer
          example: true
          nullable: true
          title: Is individual
          type: boolean
        last_name:
          description: The last name of the person.
          example: Musk
          nullable: true
          title: Last name
          type: string
        middle_name:
          description: Middle name of the person.
          example: D.
          nullable: true
          title: Middle name
          type: string
        notes:
          description: Some notes about this customer
          example: Some notes about this customer
          nullable: true
          title: Notes
          type: string
        parent:
          $ref: '#/components/schemas/LinkedParentCustomer'
        payment_method:
          description: "Payment method used for the transaction, such as cash, credit\
            \ card, bank transfer, or check"
          example: cash
          nullable: true
          title: Payment method
          type: string
        phone_numbers:
          items:
            $ref: '#/components/schemas/PhoneNumber'
          title: phone_numbers
          type: array
        project:
          description: "If true, indicates this is a Project."
          example: false
          nullable: true
          title: Is project
          type: boolean
        row_version:
          description: A binary value used to detect updates to a object and prevent
            data conflicts. It is incremented each time an update is made to the object.
          example: 1-12345
          nullable: true
          title: Row version
          type: string
        status:
          description: Customer status
          enum:
          - active
          - inactive
          - archived
          - gdpr-erasure-request
          - unknown
          example: active
          nullable: true
          title: Status
          type: string
          x-apideck-enum-id: customers.status
        suffix:
          example: Jr.
          nullable: true
          title: Suffix
          type: string
        tax_number:
          example: US123945459
          nullable: true
          title: Tax number
          type: string
        tax_rate:
          $ref: '#/components/schemas/LinkedTaxRate'
        title:
          description: The job title of the person.
          example: CEO
          nullable: true
          title: Job title
          type: string
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
        websites:
          items:
            $ref: '#/components/schemas/Website'
          title: websites
          type: array
      required:
      - id
      title: Customer
      type: object
      x-apideck-schema-id: Customer
      x-apideck-strict-any-of:
      - required:
        - first_name
        - last_name
      - required:
        - company_name
      x-apideck-strict-required:
      - emails
      - addresses
      - phone_numbers
      - status
      - updated_at
      x-apideck-weights:
        account: medium
        addresses: high
        bank_accounts: high
        channel: edge-case
        company_name: high
        created_at: medium
        created_by: edge-case
        currency: medium
        display_id: edge-case
        display_name: edge-case
        downstream_id: edge-case
        emails: high
        first_name: high
        id: critical
        individual: medium
        last_name: high
        middle_name: low
        notes: low
        payment_method: edge-case
        phone_numbers: high
        row_version: edge-case
        status: high
        suffix: low
        tax_number: medium
        tax_rate: medium
        title: high
        updated_at: medium
        updated_by: edge-case
        websites: medium
    CustomersFilter:
      additionalProperties: false
      example:
        company_name: SpaceX
        display_name: Elon Musk
        email: elon@musk.com
        first_name: Elon
        last_name: Musk
        status: active
      properties:
        company_name:
          description: Company Name of customer to search for
          example: SpaceX
          title: Company Name
          type: string
        display_name:
          description: Display Name of customer to search for
          example: Techno King
          title: Display Name
          type: string
        email:
          description: Email of customer to search for
          example: elon@spacex.com
          title: Email
          type: string
        first_name:
          description: First name of customer to search for
          example: Elon
          title: First Name
          type: string
        last_name:
          description: Last name of customer to search for
          example: Musk
          title: Last Name
          type: string
        status:
          description: Status of customer to filter on
          enum:
          - active
          - inactive
          - archived
          - all
          example: active
          nullable: true
          title: Status
          type: string
          x-apideck-enum-id: customers.status
      type: object
      x-apideck-schema-id: CustomersFilter
    DeleteBillResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: bills
        service: xero
        operation: delete
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: delete
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: bills
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: DeleteBillResponse
      type: object
      x-apideck-schema-id: DeleteBillResponse
    DeleteCreditNoteResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: credit-notes
        service: xero
        operation: delete
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: delete
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: credit-notes
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: DeleteCreditNoteResponse
      type: object
      x-apideck-schema-id: DeleteCreditNoteResponse
    DeleteCustomerResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: customers
        service: xero
        operation: delete
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: delete
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: customers
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: DeleteCustomerResponse
      type: object
      x-apideck-schema-id: DeleteCustomerResponse
    DeleteInvoiceItemResponse:
      $ref: '#/components/schemas/DeleteTaxRateResponse'
    DeleteInvoiceResponse:
      example:
        status_code: 200
        data:
          downstream_id: "12345"
          id: "12345"
        resource: invoices
        service: xero
        operation: delete
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/InvoiceResponse'
        operation:
          description: Operation performed
          example: delete
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: invoices
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: DeleteInvoiceResponse
      type: object
      x-apideck-schema-id: DeleteInvoiceResponse
    DeleteJournalEntryResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: journal-entries
        service: quickbooks
        operation: delete
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: delete
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: journal-entries
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: quickbooks
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: DeleteJournalEntryResponse
      type: object
    DeleteLedgerAccountResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: ledger-accounts
        service: xero
        operation: delete
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: delete
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: ledger-accounts
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: DeleteLedgerAccountResponse
      type: object
      x-apideck-schema-id: DeleteLedgerAccountResponse
    DeletePaymentResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: payments
        service: xero
        operation: delete
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: delete
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: payments
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: DeletePaymentResponse
      type: object
      x-apideck-schema-id: DeletePaymentResponse
    DeletePurchaseOrderResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: PurchaseOrders
        service: quickbooks
        operation: delete
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: delete
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: PurchaseOrders
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: quickbooks
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: DeletePurchaseOrderResponse
      type: object
    DeleteSupplierResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: suppliers
        service: xero
        operation: delete
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: delete
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: suppliers
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: DeleteSupplierResponse
      type: object
      x-apideck-schema-id: DeleteSupplierResponse
    DeleteTaxRateResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: tax-rates
        service: xero
        operation: delete
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: delete
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: tax-rates
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: DeleteTaxRateResponse
      type: object
      x-apideck-schema-id: DeleteTaxRateResponse
    DiscountPercentage:
      description: Discount percentage applied to this transaction.
      example: 5.5
      nullable: true
      title: Discount Percentage
      type: number
    DownstreamId:
      description: The third-party API ID of original entity
      example: "12345"
      nullable: true
      readOnly: true
      title: DownstreamId
      type: string
    DueDate:
      description: The due date is the date on which a payment is scheduled to be
        received - YYYY-MM-DD.
      example: 2020-10-30
      format: date
      title: Due date
      type: string
    Email:
      additionalProperties: false
      example:
        id: "123"
        type: primary
        email: elon@musk.com
      properties:
        email:
          description: Email address
          example: elon@musk.com
          format: email
          minLength: 1
          nullable: true
          title: email
          type: string
        id:
          description: Unique identifier for the email address
          example: "123"
          nullable: true
          title: id
          type: string
        type:
          description: Email type
          enum:
          - primary
          - secondary
          - work
          - personal
          - billing
          - other
          example: primary
          nullable: true
          title: type
          type: string
          x-apideck-enum-id: emails.type
      required:
      - email
      title: Email
      type: object
      x-apideck-schema-id: Email
      x-apideck-weights:
        email: critical
        id: edge-case
        type: critical
    FirstName:
      description: The first name of the person.
      example: Elon
      nullable: true
      title: First name
      type: string
    GetBalanceSheetResponse:
      example:
        status_code: 200
        data:
          end_date: 2017-01-01
          assets:
            current_assets:
              accounts:
              - id: "1"
                name: Accounts Receivable (A/R)
                value: 10000
              - id: "2"
                name: Accounts Payable (A/P)
                value: 10000
              total: 100000
            fixed_assets:
              accounts:
              - id: "1"
                name: Accounts Receivable (A/R)
                value: 10000
              - id: "2"
                name: Accounts Payable (A/P)
                value: 10000
              total: 100000
            total: 200000
          updated_at: 2020-09-30T07:43:32Z
          liabilities:
            accounts:
            - id: "1"
              name: Accounts Payable (A/P)
              value: 10000
            total: 200000
          updated_by: "12345"
          created_at: 2020-09-30T07:43:32Z
          id: "12345"
          report_name: BalanceSheet
          created_by: "12345"
          equity:
            items:
            - id: "1"
              name: Retained Earnings
              value: 10000
            total: 200000
          custom_mappings: "{}"
          start_date: 2017-01-01
        resource: BalanceSheets
        service: quickbooks
        operation: one
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/BalanceSheet'
        operation:
          description: Operation performed
          example: one
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: BalanceSheets
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: quickbooks
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetBalanceSheetResponse
      type: object
      x-apideck-schema-id: GetBalanceSheetResponse
    GetBillResponse:
      example:
        status_code: 200
        data:
          notes: Some notes about this bill.
          bill_date: 2020-09-30
          channel: email
          created_at: 2020-09-30T07:43:32Z
          language: EN
          discount_percentage: 5.5
          line_items:
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: expense_account
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: expense_account
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          custom_mappings: "{}"
          reference: "123456"
          currency_rate: 0.69
          po_number: "90000117"
          total: 27500
          bill_number: "10001"
          balance: 27500
          updated_at: 2020-09-30T07:43:32Z
          terms: Net 30 days
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          supplier:
            address:
              country: US
              contact_name: Elon Musk
              website: https://elonmusk.com
              line4: delivery instructions
              notes: Address notes or delivery instructions.
              string: "25 Spring Street, Blackburn, VIC 3130"
              city: San Francisco
              latitude: "40.759211"
              county: Santa Clara
              type: primary
              row_version: 1-12345
              name: HQ US
              street_number: "25"
              phone_number: 111-111-1111
              id: "123"
              salutation: Mr
              state: CA
              fax: 122-111-1111
              line3: "Suite #"
              postal_code: "94104"
              line2: "apt #"
              email: elon@musk.com
              line1: Main street
              longitude: "-73.984638"
            display_id: SUPP00101
            company_name: The boring company
            id: "12345"
            display_name: Windsurf Shop
          currency: USD
          downstream_id: "12345"
          id: "12345"
          payment_method: cash
          accounting_by_row: false
          bank_account:
            bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          due_date: 2020-10-30
          tax_inclusive: true
          total_tax: 2500
          created_by: "12345"
          tax_code: "1234"
          row_version: 1-12345
          sub_total: 27500
          updated_by: "12345"
          deposit: 0
          paid_date: 2020-10-30
          status: draft
        resource: bills
        service: xero
        operation: one
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/Bill'
        operation:
          description: Operation performed
          example: one
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: bills
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetBillResponse
      type: object
      x-apideck-schema-id: GetBillResponse
    GetBillsResponse:
      example:
        status_code: 200
        data:
        - notes: Some notes about this bill.
          bill_date: 2020-09-30
          channel: email
          created_at: 2020-09-30T07:43:32Z
          language: EN
          discount_percentage: 5.5
          line_items:
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: expense_account
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: expense_account
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          custom_mappings: "{}"
          reference: "123456"
          currency_rate: 0.69
          po_number: "90000117"
          total: 27500
          bill_number: "10001"
          balance: 27500
          updated_at: 2020-09-30T07:43:32Z
          terms: Net 30 days
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          supplier:
            address:
              country: US
              contact_name: Elon Musk
              website: https://elonmusk.com
              line4: delivery instructions
              notes: Address notes or delivery instructions.
              string: "25 Spring Street, Blackburn, VIC 3130"
              city: San Francisco
              latitude: "40.759211"
              county: Santa Clara
              type: primary
              row_version: 1-12345
              name: HQ US
              street_number: "25"
              phone_number: 111-111-1111
              id: "123"
              salutation: Mr
              state: CA
              fax: 122-111-1111
              line3: "Suite #"
              postal_code: "94104"
              line2: "apt #"
              email: elon@musk.com
              line1: Main street
              longitude: "-73.984638"
            display_id: SUPP00101
            company_name: The boring company
            id: "12345"
            display_name: Windsurf Shop
          currency: USD
          downstream_id: "12345"
          id: "12345"
          payment_method: cash
          accounting_by_row: false
          bank_account:
            bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          due_date: 2020-10-30
          tax_inclusive: true
          total_tax: 2500
          created_by: "12345"
          tax_code: "1234"
          row_version: 1-12345
          sub_total: 27500
          updated_by: "12345"
          deposit: 0
          paid_date: 2020-10-30
          status: draft
        - notes: Some notes about this bill.
          bill_date: 2020-09-30
          channel: email
          created_at: 2020-09-30T07:43:32Z
          language: EN
          discount_percentage: 5.5
          line_items:
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: expense_account
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: expense_account
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          custom_mappings: "{}"
          reference: "123456"
          currency_rate: 0.69
          po_number: "90000117"
          total: 27500
          bill_number: "10001"
          balance: 27500
          updated_at: 2020-09-30T07:43:32Z
          terms: Net 30 days
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          supplier:
            address:
              country: US
              contact_name: Elon Musk
              website: https://elonmusk.com
              line4: delivery instructions
              notes: Address notes or delivery instructions.
              string: "25 Spring Street, Blackburn, VIC 3130"
              city: San Francisco
              latitude: "40.759211"
              county: Santa Clara
              type: primary
              row_version: 1-12345
              name: HQ US
              street_number: "25"
              phone_number: 111-111-1111
              id: "123"
              salutation: Mr
              state: CA
              fax: 122-111-1111
              line3: "Suite #"
              postal_code: "94104"
              line2: "apt #"
              email: elon@musk.com
              line1: Main street
              longitude: "-73.984638"
            display_id: SUPP00101
            company_name: The boring company
            id: "12345"
            display_name: Windsurf Shop
          currency: USD
          downstream_id: "12345"
          id: "12345"
          payment_method: cash
          accounting_by_row: false
          bank_account:
            bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          due_date: 2020-10-30
          tax_inclusive: true
          total_tax: 2500
          created_by: "12345"
          tax_code: "1234"
          row_version: 1-12345
          sub_total: 27500
          updated_by: "12345"
          deposit: 0
          paid_date: 2020-10-30
          status: draft
        resource: bills
        meta:
          cursors:
            next: em9oby1jcm06OnBhZ2U6OjM=
            current: em9oby1jcm06OnBhZ2U6OjI=
            previous: em9oby1jcm06OnBhZ2U6OjE=
          items_on_page: 50
        service: xero
        links:
          next: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          current: https://unify.apideck.com/crm/companies
          previous: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
        operation: all
        status: OK
      properties:
        data:
          items:
            $ref: '#/components/schemas/Bill'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
        operation:
          description: Operation performed
          example: all
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: bills
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetBillsResponse
      type: object
      x-apideck-schema-id: GetBillsResponse
    GetCompanyInfoResponse:
      example:
        status_code: 200
        data:
          country: US
          addresses:
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          default_sales_tax:
            components:
            - rate: 10
              name: GST
              id: "10"
              compound: true
            - rate: 10
              name: GST
              id: "10"
              compound: true
            code: ABN
            created_at: 2020-09-30T07:43:32Z
            description: Reduced rate GST Purchases
            type: NONE
            created_by: "12345"
            custom_mappings: "{}"
            original_tax_rate_id: "12345"
            tax_remitted_account_id: "123456"
            tax_payable_account_id: "123456"
            updated_at: 2020-09-30T07:43:32Z
            report_tax_type: NONE
            row_version: 1-12345
            name: GST on Purchases
            updated_by: "12345"
            id: "1234"
            effective_tax_rate: 10
            total_tax_rate: 10
            status: active
          company_start_date: 2015-06-05
          automated_sales_tax: true
          created_at: 2020-09-30T07:43:32Z
          language: EN
          created_by: "12345"
          custom_mappings: "{}"
          sales_tax_enabled: true
          emails:
          - id: "123"
            type: primary
            email: elon@musk.com
          - id: "123"
            type: primary
            email: elon@musk.com
          phone_numbers:
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          sales_tax_number: 111.222.333
          updated_at: 2020-09-30T07:43:32Z
          company_name: SpaceX
          row_version: 1-12345
          updated_by: "12345"
          currency: USD
          fiscal_year_start_month: January
          id: "12345"
          legal_name: SpaceX Inc.
          status: active
        resource: company-info
        service: xero
        operation: one
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/CompanyInfo'
        operation:
          description: Operation performed
          example: one
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: company-info
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetCompanyInfoResponse
      type: object
      x-apideck-schema-id: GetCompanyInfoResponse
    GetCreditNoteResponse:
      example:
        status_code: 200
        data:
          note: Some notes about this credit note
          created_at: 2020-09-30T07:43:32Z
          line_items:
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: sales_item
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            custom_mappings: "{}"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: sales_item
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            custom_mappings: "{}"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          type: accounts_receivable_credit
          custom_mappings: "{}"
          reference: "123456"
          number: OIT00546
          currency_rate: 0.69
          remaining_credit: 27500
          allocations:
          - amount: 49.99
            code: N091
            id: "123456"
            type: invoice
          - amount: 49.99
            code: N091
            id: "123456"
            type: invoice
          balance: 27500
          updated_at: 2020-09-30T07:43:32Z
          date_paid: 2021-05-01T12:00:00Z
          terms: Some terms about this credit note
          currency: USD
          id: "123456"
          tax_inclusive: true
          total_tax: 2500
          created_by: "12345"
          tax_code: "1234"
          total_amount: 49.99
          date_issued: 2021-05-01T12:00:00Z
          row_version: 1-12345
          sub_total: 27500
          updated_by: "12345"
          account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          customer:
            display_id: CUST00101
            company_name: The boring company
            name: Windsurf Shop
            id: "12345"
            display_name: Windsurf Shop
          status: authorised
        resource: credit-notes
        service: xero
        operation: one
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/CreditNote'
        operation:
          description: Operation performed
          example: one
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: credit-notes
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetCreditNoteResponse
      type: object
      x-apideck-schema-id: GetCreditNoteResponse
    GetCreditNotesResponse:
      example:
        status_code: 200
        data:
        - note: Some notes about this credit note
          created_at: 2020-09-30T07:43:32Z
          line_items:
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: sales_item
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            custom_mappings: "{}"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: sales_item
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            custom_mappings: "{}"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          type: accounts_receivable_credit
          custom_mappings: "{}"
          reference: "123456"
          number: OIT00546
          currency_rate: 0.69
          remaining_credit: 27500
          allocations:
          - amount: 49.99
            code: N091
            id: "123456"
            type: invoice
          - amount: 49.99
            code: N091
            id: "123456"
            type: invoice
          balance: 27500
          updated_at: 2020-09-30T07:43:32Z
          date_paid: 2021-05-01T12:00:00Z
          terms: Some terms about this credit note
          currency: USD
          id: "123456"
          tax_inclusive: true
          total_tax: 2500
          created_by: "12345"
          tax_code: "1234"
          total_amount: 49.99
          date_issued: 2021-05-01T12:00:00Z
          row_version: 1-12345
          sub_total: 27500
          updated_by: "12345"
          account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          customer:
            display_id: CUST00101
            company_name: The boring company
            name: Windsurf Shop
            id: "12345"
            display_name: Windsurf Shop
          status: authorised
        - note: Some notes about this credit note
          created_at: 2020-09-30T07:43:32Z
          line_items:
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: sales_item
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            custom_mappings: "{}"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: sales_item
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            custom_mappings: "{}"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          type: accounts_receivable_credit
          custom_mappings: "{}"
          reference: "123456"
          number: OIT00546
          currency_rate: 0.69
          remaining_credit: 27500
          allocations:
          - amount: 49.99
            code: N091
            id: "123456"
            type: invoice
          - amount: 49.99
            code: N091
            id: "123456"
            type: invoice
          balance: 27500
          updated_at: 2020-09-30T07:43:32Z
          date_paid: 2021-05-01T12:00:00Z
          terms: Some terms about this credit note
          currency: USD
          id: "123456"
          tax_inclusive: true
          total_tax: 2500
          created_by: "12345"
          tax_code: "1234"
          total_amount: 49.99
          date_issued: 2021-05-01T12:00:00Z
          row_version: 1-12345
          sub_total: 27500
          updated_by: "12345"
          account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          customer:
            display_id: CUST00101
            company_name: The boring company
            name: Windsurf Shop
            id: "12345"
            display_name: Windsurf Shop
          status: authorised
        resource: credit-notes
        meta:
          cursors:
            next: em9oby1jcm06OnBhZ2U6OjM=
            current: em9oby1jcm06OnBhZ2U6OjI=
            previous: em9oby1jcm06OnBhZ2U6OjE=
          items_on_page: 50
        service: xero
        links:
          next: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          current: https://unify.apideck.com/crm/companies
          previous: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
        operation: all
        status: OK
      properties:
        data:
          items:
            $ref: '#/components/schemas/CreditNote'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
        operation:
          description: Operation performed
          example: all
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: credit-notes
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetCreditNotesResponse
      type: object
      x-apideck-schema-id: GetCreditNotesResponse
    GetCustomerResponse:
      example:
        status_code: 200
        data:
          parent:
            name: Windsurf Shop
            id: "12345"
          addresses:
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          notes: Some notes about this customer
          display_id: EMP00101
          channel: email
          created_at: 2020-09-30T07:43:32Z
          project: false
          suffix: Jr.
          title: CEO
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          custom_mappings: "{}"
          emails:
          - id: "123"
            type: primary
            email: elon@musk.com
          - id: "123"
            type: primary
            email: elon@musk.com
          updated_at: 2020-09-30T07:43:32Z
          tax_number: US123945459
          currency: USD
          downstream_id: "12345"
          id: "12345"
          first_name: Elon
          payment_method: cash
          individual: true
          last_name: Musk
          display_name: Windsurf Shop
          middle_name: D.
          created_by: "12345"
          phone_numbers:
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          company_name: SpaceX
          row_version: 1-12345
          updated_by: "12345"
          websites:
          - id: "12345"
            type: primary
            url: http://example.com
          - id: "12345"
            type: primary
            url: http://example.com
          bank_accounts:
          - bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          - bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          status: active
        resource: customers
        service: xero
        operation: one
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/Customer'
        operation:
          description: Operation performed
          example: one
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: customers
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetCustomerResponse
      type: object
      x-apideck-schema-id: GetCustomerResponse
    GetCustomersResponse:
      example:
        status_code: 200
        data:
        - parent:
            name: Windsurf Shop
            id: "12345"
          addresses:
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          notes: Some notes about this customer
          display_id: EMP00101
          channel: email
          created_at: 2020-09-30T07:43:32Z
          project: false
          suffix: Jr.
          title: CEO
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          custom_mappings: "{}"
          emails:
          - id: "123"
            type: primary
            email: elon@musk.com
          - id: "123"
            type: primary
            email: elon@musk.com
          updated_at: 2020-09-30T07:43:32Z
          tax_number: US123945459
          currency: USD
          downstream_id: "12345"
          id: "12345"
          first_name: Elon
          payment_method: cash
          individual: true
          last_name: Musk
          display_name: Windsurf Shop
          middle_name: D.
          created_by: "12345"
          phone_numbers:
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          company_name: SpaceX
          row_version: 1-12345
          updated_by: "12345"
          websites:
          - id: "12345"
            type: primary
            url: http://example.com
          - id: "12345"
            type: primary
            url: http://example.com
          bank_accounts:
          - bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          - bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          status: active
        - parent:
            name: Windsurf Shop
            id: "12345"
          addresses:
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          notes: Some notes about this customer
          display_id: EMP00101
          channel: email
          created_at: 2020-09-30T07:43:32Z
          project: false
          suffix: Jr.
          title: CEO
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          custom_mappings: "{}"
          emails:
          - id: "123"
            type: primary
            email: elon@musk.com
          - id: "123"
            type: primary
            email: elon@musk.com
          updated_at: 2020-09-30T07:43:32Z
          tax_number: US123945459
          currency: USD
          downstream_id: "12345"
          id: "12345"
          first_name: Elon
          payment_method: cash
          individual: true
          last_name: Musk
          display_name: Windsurf Shop
          middle_name: D.
          created_by: "12345"
          phone_numbers:
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          company_name: SpaceX
          row_version: 1-12345
          updated_by: "12345"
          websites:
          - id: "12345"
            type: primary
            url: http://example.com
          - id: "12345"
            type: primary
            url: http://example.com
          bank_accounts:
          - bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          - bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          status: active
        resource: customers
        meta:
          cursors:
            next: em9oby1jcm06OnBhZ2U6OjM=
            current: em9oby1jcm06OnBhZ2U6OjI=
            previous: em9oby1jcm06OnBhZ2U6OjE=
          items_on_page: 50
        service: xero
        links:
          next: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          current: https://unify.apideck.com/crm/companies
          previous: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
        operation: all
        status: OK
      properties:
        data:
          items:
            $ref: '#/components/schemas/Customer'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
        operation:
          description: Operation performed
          example: all
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: customers
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetCustomersResponse
      type: object
      x-apideck-schema-id: GetCustomersResponse
    GetInvoiceItemResponse:
      example:
        status_code: 200
        data:
          code: 120-C
          purchase_details:
            tax_inclusive: true
            unit_of_measure: pc.
            unit_price: 27500.5
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
          sales_details:
            tax_inclusive: true
            unit_of_measure: pc.
            unit_price: 27500.5
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
          created_at: 2020-09-30T07:43:32Z
          description: "Model Y is a fully electric, mid-size SUV, with seating for\
            \ up to seven, dual motor AWD and unparalleled protection."
          tracked: true
          type: inventory
          inventory_date: 2020-10-30
          custom_mappings: "{}"
          asset_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          expense_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          updated_at: 2020-09-30T07:43:32Z
          id: "123456"
          income_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          sold: true
          quantity: 1
          taxable: true
          active: true
          tracking_category:
            name: New York
            id: "123456"
          unit_price: 27500.5
          created_by: "12345"
          purchased: true
          row_version: 1-12345
          name: Model Y
          updated_by: "12345"
        resource: invoice-items
        service: xero
        operation: one
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/InvoiceItem'
        operation:
          description: Operation performed
          example: one
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: invoice-items
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetInvoiceItemResponse
      type: object
      x-apideck-schema-id: GetInvoiceItemResponse
    GetInvoiceItemsResponse:
      example:
        status_code: 200
        data:
        - code: 120-C
          purchase_details:
            tax_inclusive: true
            unit_of_measure: pc.
            unit_price: 27500.5
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
          sales_details:
            tax_inclusive: true
            unit_of_measure: pc.
            unit_price: 27500.5
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
          created_at: 2020-09-30T07:43:32Z
          description: "Model Y is a fully electric, mid-size SUV, with seating for\
            \ up to seven, dual motor AWD and unparalleled protection."
          tracked: true
          type: inventory
          inventory_date: 2020-10-30
          custom_mappings: "{}"
          asset_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          expense_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          updated_at: 2020-09-30T07:43:32Z
          id: "123456"
          income_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          sold: true
          quantity: 1
          taxable: true
          active: true
          tracking_category:
            name: New York
            id: "123456"
          unit_price: 27500.5
          created_by: "12345"
          purchased: true
          row_version: 1-12345
          name: Model Y
          updated_by: "12345"
        - code: 120-C
          purchase_details:
            tax_inclusive: true
            unit_of_measure: pc.
            unit_price: 27500.5
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
          sales_details:
            tax_inclusive: true
            unit_of_measure: pc.
            unit_price: 27500.5
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
          created_at: 2020-09-30T07:43:32Z
          description: "Model Y is a fully electric, mid-size SUV, with seating for\
            \ up to seven, dual motor AWD and unparalleled protection."
          tracked: true
          type: inventory
          inventory_date: 2020-10-30
          custom_mappings: "{}"
          asset_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          expense_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          updated_at: 2020-09-30T07:43:32Z
          id: "123456"
          income_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          sold: true
          quantity: 1
          taxable: true
          active: true
          tracking_category:
            name: New York
            id: "123456"
          unit_price: 27500.5
          created_by: "12345"
          purchased: true
          row_version: 1-12345
          name: Model Y
          updated_by: "12345"
        resource: invoice-items
        meta:
          cursors:
            next: em9oby1jcm06OnBhZ2U6OjM=
            current: em9oby1jcm06OnBhZ2U6OjI=
            previous: em9oby1jcm06OnBhZ2U6OjE=
          items_on_page: 50
        service: xero
        links:
          next: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          current: https://unify.apideck.com/crm/companies
          previous: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
        operation: all
        status: OK
      properties:
        data:
          items:
            $ref: '#/components/schemas/InvoiceItem'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
        operation:
          description: Operation performed
          example: all
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: invoice-items
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetInvoiceItemsResponse
      type: object
      x-apideck-schema-id: GetInvoiceItemsResponse
    GetInvoiceResponse:
      example:
        status_code: 200
        data:
          discount_amount: 25
          channel: email
          created_at: 2020-09-30T07:43:32Z
          billing_address:
            country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          language: EN
          discount_percentage: 5.5
          line_items:
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: sales_item
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            custom_mappings: "{}"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: sales_item
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            custom_mappings: "{}"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          customer_memo: Thank you for your business and have a great day!
          type: service
          custom_mappings: "{}"
          invoice_date: 2020-09-30
          reference: "123456"
          number: OIT00546
          currency_rate: 0.69
          po_number: "90000117"
          total: 27500
          balance: 27500
          updated_at: 2020-09-30T07:43:32Z
          terms: Net 30 days
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          currency: USD
          downstream_id: "12345"
          id: "12345"
          shipping_address:
            country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          payment_method: cash
          accounting_by_row: false
          bank_account:
            bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          due_date: 2020-09-30
          tax_inclusive: true
          tracking_category:
            name: New York
            id: "123456"
          total_tax: 2500
          created_by: "12345"
          tax_code: "1234"
          row_version: 1-12345
          sub_total: 27500
          updated_by: "12345"
          deposit: 0
          template_id: "123456"
          invoice_sent: true
          source_document_url: https://www.invoicesolution.com/invoice/123456
          customer:
            display_id: CUST00101
            company_name: The boring company
            name: Windsurf Shop
            id: "12345"
            display_name: Windsurf Shop
          status: draft
        resource: invoices
        service: xero
        operation: one
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/Invoice'
        operation:
          description: Operation performed
          example: one
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: invoices
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetInvoiceResponse
      type: object
      x-apideck-schema-id: GetInvoiceResponse
    GetInvoicesResponse:
      example:
        status_code: 200
        data:
        - discount_amount: 25
          channel: email
          created_at: 2020-09-30T07:43:32Z
          billing_address:
            country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          language: EN
          discount_percentage: 5.5
          line_items:
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: sales_item
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            custom_mappings: "{}"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: sales_item
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            custom_mappings: "{}"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          customer_memo: Thank you for your business and have a great day!
          type: service
          custom_mappings: "{}"
          invoice_date: 2020-09-30
          reference: "123456"
          number: OIT00546
          currency_rate: 0.69
          po_number: "90000117"
          total: 27500
          balance: 27500
          updated_at: 2020-09-30T07:43:32Z
          terms: Net 30 days
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          currency: USD
          downstream_id: "12345"
          id: "12345"
          shipping_address:
            country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          payment_method: cash
          accounting_by_row: false
          bank_account:
            bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          due_date: 2020-09-30
          tax_inclusive: true
          tracking_category:
            name: New York
            id: "123456"
          total_tax: 2500
          created_by: "12345"
          tax_code: "1234"
          row_version: 1-12345
          sub_total: 27500
          updated_by: "12345"
          deposit: 0
          template_id: "123456"
          invoice_sent: true
          source_document_url: https://www.invoicesolution.com/invoice/123456
          customer:
            display_id: CUST00101
            company_name: The boring company
            name: Windsurf Shop
            id: "12345"
            display_name: Windsurf Shop
          status: draft
        - discount_amount: 25
          channel: email
          created_at: 2020-09-30T07:43:32Z
          billing_address:
            country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          language: EN
          discount_percentage: 5.5
          line_items:
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: sales_item
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            custom_mappings: "{}"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: sales_item
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            custom_mappings: "{}"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          customer_memo: Thank you for your business and have a great day!
          type: service
          custom_mappings: "{}"
          invoice_date: 2020-09-30
          reference: "123456"
          number: OIT00546
          currency_rate: 0.69
          po_number: "90000117"
          total: 27500
          balance: 27500
          updated_at: 2020-09-30T07:43:32Z
          terms: Net 30 days
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          currency: USD
          downstream_id: "12345"
          id: "12345"
          shipping_address:
            country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          payment_method: cash
          accounting_by_row: false
          bank_account:
            bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          due_date: 2020-09-30
          tax_inclusive: true
          tracking_category:
            name: New York
            id: "123456"
          total_tax: 2500
          created_by: "12345"
          tax_code: "1234"
          row_version: 1-12345
          sub_total: 27500
          updated_by: "12345"
          deposit: 0
          template_id: "123456"
          invoice_sent: true
          source_document_url: https://www.invoicesolution.com/invoice/123456
          customer:
            display_id: CUST00101
            company_name: The boring company
            name: Windsurf Shop
            id: "12345"
            display_name: Windsurf Shop
          status: draft
        resource: invoices
        meta:
          cursors:
            next: em9oby1jcm06OnBhZ2U6OjM=
            current: em9oby1jcm06OnBhZ2U6OjI=
            previous: em9oby1jcm06OnBhZ2U6OjE=
          items_on_page: 50
        service: xero
        links:
          next: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          current: https://unify.apideck.com/crm/companies
          previous: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
        operation: all
        status: OK
      properties:
        data:
          items:
            $ref: '#/components/schemas/Invoice'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
        operation:
          description: Operation performed
          example: all
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: invoices
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetInvoicesResponse
      type: object
      x-apideck-schema-id: GetInvoicesResponse
    GetJournalEntriesResponse:
      example:
        status_code: 200
        data:
        - created_at: 2020-09-30T07:43:32Z
          memo: Thank you for your business and have a great day!
          line_items:
          - tax_amount: 27500
            department_id: "12345"
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            tracking_category:
              name: New York
              id: "123456"
            type: debit
            location_id: "12345"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            supplier:
              address:
                country: US
                contact_name: Elon Musk
                website: https://elonmusk.com
                line4: delivery instructions
                notes: Address notes or delivery instructions.
                string: "25 Spring Street, Blackburn, VIC 3130"
                city: San Francisco
                latitude: "40.759211"
                county: Santa Clara
                type: primary
                row_version: 1-12345
                name: HQ US
                street_number: "25"
                phone_number: 111-111-1111
                id: "123"
                salutation: Mr
                state: CA
                fax: 122-111-1111
                line3: "Suite #"
                postal_code: "94104"
                line2: "apt #"
                email: elon@musk.com
                line1: Main street
                longitude: "-73.984638"
              display_id: SUPP00101
              company_name: The boring company
              id: "12345"
              display_name: Windsurf Shop
            sub_total: 27500
            id: "12345"
            customer:
              display_id: CUST00101
              company_name: The boring company
              name: Windsurf Shop
              id: "12345"
              display_name: Windsurf Shop
          - tax_amount: 27500
            department_id: "12345"
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            tracking_category:
              name: New York
              id: "123456"
            type: debit
            location_id: "12345"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            supplier:
              address:
                country: US
                contact_name: Elon Musk
                website: https://elonmusk.com
                line4: delivery instructions
                notes: Address notes or delivery instructions.
                string: "25 Spring Street, Blackburn, VIC 3130"
                city: San Francisco
                latitude: "40.759211"
                county: Santa Clara
                type: primary
                row_version: 1-12345
                name: HQ US
                street_number: "25"
                phone_number: 111-111-1111
                id: "123"
                salutation: Mr
                state: CA
                fax: 122-111-1111
                line3: "Suite #"
                postal_code: "94104"
                line2: "apt #"
                email: elon@musk.com
                line1: Main street
                longitude: "-73.984638"
              display_id: SUPP00101
              company_name: The boring company
              id: "12345"
              display_name: Windsurf Shop
            sub_total: 27500
            id: "12345"
            customer:
              display_id: CUST00101
              company_name: The boring company
              name: Windsurf Shop
              id: "12345"
              display_name: Windsurf Shop
          title: "Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry"
          created_by: "12345"
          custom_mappings: "{}"
          number: OIT00546
          currency_rate: 0.69
          journal_symbol: IND
          tax_code: "1234"
          updated_at: 2020-09-30T07:43:32Z
          tax_type: sales
          row_version: 1-12345
          updated_by: "12345"
          currency: USD
          id: "12345"
          posted_at: 2020-09-30T07:43:32Z
        - created_at: 2020-09-30T07:43:32Z
          memo: Thank you for your business and have a great day!
          line_items:
          - tax_amount: 27500
            department_id: "12345"
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            tracking_category:
              name: New York
              id: "123456"
            type: debit
            location_id: "12345"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            supplier:
              address:
                country: US
                contact_name: Elon Musk
                website: https://elonmusk.com
                line4: delivery instructions
                notes: Address notes or delivery instructions.
                string: "25 Spring Street, Blackburn, VIC 3130"
                city: San Francisco
                latitude: "40.759211"
                county: Santa Clara
                type: primary
                row_version: 1-12345
                name: HQ US
                street_number: "25"
                phone_number: 111-111-1111
                id: "123"
                salutation: Mr
                state: CA
                fax: 122-111-1111
                line3: "Suite #"
                postal_code: "94104"
                line2: "apt #"
                email: elon@musk.com
                line1: Main street
                longitude: "-73.984638"
              display_id: SUPP00101
              company_name: The boring company
              id: "12345"
              display_name: Windsurf Shop
            sub_total: 27500
            id: "12345"
            customer:
              display_id: CUST00101
              company_name: The boring company
              name: Windsurf Shop
              id: "12345"
              display_name: Windsurf Shop
          - tax_amount: 27500
            department_id: "12345"
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            tracking_category:
              name: New York
              id: "123456"
            type: debit
            location_id: "12345"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            supplier:
              address:
                country: US
                contact_name: Elon Musk
                website: https://elonmusk.com
                line4: delivery instructions
                notes: Address notes or delivery instructions.
                string: "25 Spring Street, Blackburn, VIC 3130"
                city: San Francisco
                latitude: "40.759211"
                county: Santa Clara
                type: primary
                row_version: 1-12345
                name: HQ US
                street_number: "25"
                phone_number: 111-111-1111
                id: "123"
                salutation: Mr
                state: CA
                fax: 122-111-1111
                line3: "Suite #"
                postal_code: "94104"
                line2: "apt #"
                email: elon@musk.com
                line1: Main street
                longitude: "-73.984638"
              display_id: SUPP00101
              company_name: The boring company
              id: "12345"
              display_name: Windsurf Shop
            sub_total: 27500
            id: "12345"
            customer:
              display_id: CUST00101
              company_name: The boring company
              name: Windsurf Shop
              id: "12345"
              display_name: Windsurf Shop
          title: "Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry"
          created_by: "12345"
          custom_mappings: "{}"
          number: OIT00546
          currency_rate: 0.69
          journal_symbol: IND
          tax_code: "1234"
          updated_at: 2020-09-30T07:43:32Z
          tax_type: sales
          row_version: 1-12345
          updated_by: "12345"
          currency: USD
          id: "12345"
          posted_at: 2020-09-30T07:43:32Z
        resource: journal-entries
        meta:
          cursors:
            next: em9oby1jcm06OnBhZ2U6OjM=
            current: em9oby1jcm06OnBhZ2U6OjI=
            previous: em9oby1jcm06OnBhZ2U6OjE=
          items_on_page: 50
        service: quickbooks
        links:
          next: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          current: https://unify.apideck.com/crm/companies
          previous: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
        operation: all
        status: OK
      properties:
        data:
          items:
            $ref: '#/components/schemas/JournalEntry'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
        operation:
          description: Operation performed
          example: all
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: journal-entries
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: quickbooks
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetJournalEntriesResponse
      type: object
    GetJournalEntryResponse:
      example:
        status_code: 200
        data:
          created_at: 2020-09-30T07:43:32Z
          memo: Thank you for your business and have a great day!
          line_items:
          - tax_amount: 27500
            department_id: "12345"
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            tracking_category:
              name: New York
              id: "123456"
            type: debit
            location_id: "12345"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            supplier:
              address:
                country: US
                contact_name: Elon Musk
                website: https://elonmusk.com
                line4: delivery instructions
                notes: Address notes or delivery instructions.
                string: "25 Spring Street, Blackburn, VIC 3130"
                city: San Francisco
                latitude: "40.759211"
                county: Santa Clara
                type: primary
                row_version: 1-12345
                name: HQ US
                street_number: "25"
                phone_number: 111-111-1111
                id: "123"
                salutation: Mr
                state: CA
                fax: 122-111-1111
                line3: "Suite #"
                postal_code: "94104"
                line2: "apt #"
                email: elon@musk.com
                line1: Main street
                longitude: "-73.984638"
              display_id: SUPP00101
              company_name: The boring company
              id: "12345"
              display_name: Windsurf Shop
            sub_total: 27500
            id: "12345"
            customer:
              display_id: CUST00101
              company_name: The boring company
              name: Windsurf Shop
              id: "12345"
              display_name: Windsurf Shop
          - tax_amount: 27500
            department_id: "12345"
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            tracking_category:
              name: New York
              id: "123456"
            type: debit
            location_id: "12345"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            supplier:
              address:
                country: US
                contact_name: Elon Musk
                website: https://elonmusk.com
                line4: delivery instructions
                notes: Address notes or delivery instructions.
                string: "25 Spring Street, Blackburn, VIC 3130"
                city: San Francisco
                latitude: "40.759211"
                county: Santa Clara
                type: primary
                row_version: 1-12345
                name: HQ US
                street_number: "25"
                phone_number: 111-111-1111
                id: "123"
                salutation: Mr
                state: CA
                fax: 122-111-1111
                line3: "Suite #"
                postal_code: "94104"
                line2: "apt #"
                email: elon@musk.com
                line1: Main street
                longitude: "-73.984638"
              display_id: SUPP00101
              company_name: The boring company
              id: "12345"
              display_name: Windsurf Shop
            sub_total: 27500
            id: "12345"
            customer:
              display_id: CUST00101
              company_name: The boring company
              name: Windsurf Shop
              id: "12345"
              display_name: Windsurf Shop
          title: "Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry"
          created_by: "12345"
          custom_mappings: "{}"
          number: OIT00546
          currency_rate: 0.69
          journal_symbol: IND
          tax_code: "1234"
          updated_at: 2020-09-30T07:43:32Z
          tax_type: sales
          row_version: 1-12345
          updated_by: "12345"
          currency: USD
          id: "12345"
          posted_at: 2020-09-30T07:43:32Z
        resource: journal-entries
        service: quickbooks
        operation: one
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/JournalEntry'
        operation:
          description: Operation performed
          example: one
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: journal-entries
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: quickbooks
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetJournalEntryResponse
      type: object
    GetLedgerAccountResponse:
      example:
        status_code: 200
        data:
          code: "453"
          fully_qualified_name: Asset.Bank.Checking_Account
          display_id: 1-12345
          created_at: 2020-09-30T07:43:32Z
          description: Main checking account
          sub_account: false
          type: bank
          last_reconciliation_date: 2020-09-30
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          custom_mappings: "{}"
          updated_at: 2020-09-30T07:43:32Z
          sub_type: CHECKING_ACCOUNT
          current_balance: 20000
          currency: USD
          categories:
          - name: Finance Charges Expense
            id: "12345"
          - name: Finance Charges Expense
            id: "12345"
          id: "12345"
          opening_balance: 75000
          bank_account:
            bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          level: 1
          active: true
          classification: asset
          created_by: "12345"
          parent_account:
            display_id: 1-1100
            name: Bank Accounts
            id: "12345"
          tax_type: NONE
          sub_accounts:
          - account_sub_name: Petty Cash
            id: "12345"
          - account_sub_name: Petty Cash
            id: "12345"
          nominal_code: N091
          row_version: 1-12345
          name: Bank account
          updated_by: "12345"
          header: true
          status: active
        resource: ledger-accounts
        service: xero
        operation: one
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/LedgerAccount'
        operation:
          description: Operation performed
          example: one
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: ledger-accounts
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetLedgerAccountResponse
      type: object
      x-apideck-schema-id: GetLedgerAccountResponse
    GetLedgerAccountsResponse:
      example:
        status_code: 200
        data:
        - code: "453"
          fully_qualified_name: Asset.Bank.Checking_Account
          display_id: 1-12345
          created_at: 2020-09-30T07:43:32Z
          description: Main checking account
          sub_account: false
          type: bank
          last_reconciliation_date: 2020-09-30
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          custom_mappings: "{}"
          updated_at: 2020-09-30T07:43:32Z
          sub_type: CHECKING_ACCOUNT
          current_balance: 20000
          currency: USD
          categories:
          - name: Finance Charges Expense
            id: "12345"
          - name: Finance Charges Expense
            id: "12345"
          id: "12345"
          opening_balance: 75000
          bank_account:
            bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          level: 1
          active: true
          classification: asset
          created_by: "12345"
          parent_account:
            display_id: 1-1100
            name: Bank Accounts
            id: "12345"
          tax_type: NONE
          sub_accounts:
          - account_sub_name: Petty Cash
            id: "12345"
          - account_sub_name: Petty Cash
            id: "12345"
          nominal_code: N091
          row_version: 1-12345
          name: Bank account
          updated_by: "12345"
          header: true
          status: active
        - code: "453"
          fully_qualified_name: Asset.Bank.Checking_Account
          display_id: 1-12345
          created_at: 2020-09-30T07:43:32Z
          description: Main checking account
          sub_account: false
          type: bank
          last_reconciliation_date: 2020-09-30
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          custom_mappings: "{}"
          updated_at: 2020-09-30T07:43:32Z
          sub_type: CHECKING_ACCOUNT
          current_balance: 20000
          currency: USD
          categories:
          - name: Finance Charges Expense
            id: "12345"
          - name: Finance Charges Expense
            id: "12345"
          id: "12345"
          opening_balance: 75000
          bank_account:
            bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          level: 1
          active: true
          classification: asset
          created_by: "12345"
          parent_account:
            display_id: 1-1100
            name: Bank Accounts
            id: "12345"
          tax_type: NONE
          sub_accounts:
          - account_sub_name: Petty Cash
            id: "12345"
          - account_sub_name: Petty Cash
            id: "12345"
          nominal_code: N091
          row_version: 1-12345
          name: Bank account
          updated_by: "12345"
          header: true
          status: active
        resource: ledger-accounts
        meta:
          cursors:
            next: em9oby1jcm06OnBhZ2U6OjM=
            current: em9oby1jcm06OnBhZ2U6OjI=
            previous: em9oby1jcm06OnBhZ2U6OjE=
          items_on_page: 50
        service: xero
        links:
          next: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          current: https://unify.apideck.com/crm/companies
          previous: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
        operation: all
        status: OK
      properties:
        data:
          items:
            $ref: '#/components/schemas/LedgerAccount'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
        operation:
          description: Operation performed
          example: all
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: ledger-accounts
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetLedgerAccountsResponse
      type: object
      x-apideck-schema-id: GetLedgerAccountsResponse
    GetPaymentResponse:
      example:
        status_code: 200
        data:
          note: Some notes about this payment
          display_id: "123456"
          created_at: 2020-09-30T07:43:32Z
          type: accounts_receivable
          custom_mappings: "{}"
          reference: "123456"
          currency_rate: 0.69
          allocations:
          - amount: 49.99
            code: N091
            id: "123456"
            type: invoice
          - amount: 49.99
            code: N091
            id: "123456"
            type: invoice
          updated_at: 2020-09-30T07:43:32Z
          supplier:
            address:
              country: US
              contact_name: Elon Musk
              website: https://elonmusk.com
              line4: delivery instructions
              notes: Address notes or delivery instructions.
              string: "25 Spring Street, Blackburn, VIC 3130"
              city: San Francisco
              latitude: "40.759211"
              county: Santa Clara
              type: primary
              row_version: 1-12345
              name: HQ US
              street_number: "25"
              phone_number: 111-111-1111
              id: "123"
              salutation: Mr
              state: CA
              fax: 122-111-1111
              line3: "Suite #"
              postal_code: "94104"
              line2: "apt #"
              email: elon@musk.com
              line1: Main street
              longitude: "-73.984638"
            display_id: SUPP00101
            company_name: The boring company
            id: "12345"
            display_name: Windsurf Shop
          currency: USD
          downstream_id: "12345"
          id: "123456"
          payment_method: Credit Card
          transaction_date: 2021-05-01T12:00:00Z
          accounts_receivable_account_id: "123456"
          reconciled: true
          payment_method_reference: "123456"
          created_by: "12345"
          payment_method_id: "123456"
          accounts_receivable_account_type: Account
          total_amount: 49.99
          row_version: 1-12345
          updated_by: "12345"
          account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          customer:
            display_id: CUST00101
            company_name: The boring company
            name: Windsurf Shop
            id: "12345"
            display_name: Windsurf Shop
          status: authorised
        resource: payments
        service: xero
        operation: one
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/Payment'
        operation:
          description: Operation performed
          example: one
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: payments
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetPaymentResponse
      type: object
      x-apideck-schema-id: GetPaymentResponse
    GetPaymentsResponse:
      example:
        status_code: 200
        data:
        - note: Some notes about this payment
          display_id: "123456"
          created_at: 2020-09-30T07:43:32Z
          type: accounts_receivable
          custom_mappings: "{}"
          reference: "123456"
          currency_rate: 0.69
          allocations:
          - amount: 49.99
            code: N091
            id: "123456"
            type: invoice
          - amount: 49.99
            code: N091
            id: "123456"
            type: invoice
          updated_at: 2020-09-30T07:43:32Z
          supplier:
            address:
              country: US
              contact_name: Elon Musk
              website: https://elonmusk.com
              line4: delivery instructions
              notes: Address notes or delivery instructions.
              string: "25 Spring Street, Blackburn, VIC 3130"
              city: San Francisco
              latitude: "40.759211"
              county: Santa Clara
              type: primary
              row_version: 1-12345
              name: HQ US
              street_number: "25"
              phone_number: 111-111-1111
              id: "123"
              salutation: Mr
              state: CA
              fax: 122-111-1111
              line3: "Suite #"
              postal_code: "94104"
              line2: "apt #"
              email: elon@musk.com
              line1: Main street
              longitude: "-73.984638"
            display_id: SUPP00101
            company_name: The boring company
            id: "12345"
            display_name: Windsurf Shop
          currency: USD
          downstream_id: "12345"
          id: "123456"
          payment_method: Credit Card
          transaction_date: 2021-05-01T12:00:00Z
          accounts_receivable_account_id: "123456"
          reconciled: true
          payment_method_reference: "123456"
          created_by: "12345"
          payment_method_id: "123456"
          accounts_receivable_account_type: Account
          total_amount: 49.99
          row_version: 1-12345
          updated_by: "12345"
          account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          customer:
            display_id: CUST00101
            company_name: The boring company
            name: Windsurf Shop
            id: "12345"
            display_name: Windsurf Shop
          status: authorised
        - note: Some notes about this payment
          display_id: "123456"
          created_at: 2020-09-30T07:43:32Z
          type: accounts_receivable
          custom_mappings: "{}"
          reference: "123456"
          currency_rate: 0.69
          allocations:
          - amount: 49.99
            code: N091
            id: "123456"
            type: invoice
          - amount: 49.99
            code: N091
            id: "123456"
            type: invoice
          updated_at: 2020-09-30T07:43:32Z
          supplier:
            address:
              country: US
              contact_name: Elon Musk
              website: https://elonmusk.com
              line4: delivery instructions
              notes: Address notes or delivery instructions.
              string: "25 Spring Street, Blackburn, VIC 3130"
              city: San Francisco
              latitude: "40.759211"
              county: Santa Clara
              type: primary
              row_version: 1-12345
              name: HQ US
              street_number: "25"
              phone_number: 111-111-1111
              id: "123"
              salutation: Mr
              state: CA
              fax: 122-111-1111
              line3: "Suite #"
              postal_code: "94104"
              line2: "apt #"
              email: elon@musk.com
              line1: Main street
              longitude: "-73.984638"
            display_id: SUPP00101
            company_name: The boring company
            id: "12345"
            display_name: Windsurf Shop
          currency: USD
          downstream_id: "12345"
          id: "123456"
          payment_method: Credit Card
          transaction_date: 2021-05-01T12:00:00Z
          accounts_receivable_account_id: "123456"
          reconciled: true
          payment_method_reference: "123456"
          created_by: "12345"
          payment_method_id: "123456"
          accounts_receivable_account_type: Account
          total_amount: 49.99
          row_version: 1-12345
          updated_by: "12345"
          account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          customer:
            display_id: CUST00101
            company_name: The boring company
            name: Windsurf Shop
            id: "12345"
            display_name: Windsurf Shop
          status: authorised
        resource: payments
        meta:
          cursors:
            next: em9oby1jcm06OnBhZ2U6OjM=
            current: em9oby1jcm06OnBhZ2U6OjI=
            previous: em9oby1jcm06OnBhZ2U6OjE=
          items_on_page: 50
        service: xero
        links:
          next: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          current: https://unify.apideck.com/crm/companies
          previous: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
        operation: all
        status: OK
      properties:
        data:
          items:
            $ref: '#/components/schemas/Payment'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
        operation:
          description: Operation performed
          example: all
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: payments
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetPaymentsResponse
      type: object
      x-apideck-schema-id: GetPaymentsResponse
    GetProfitAndLossResponse:
      example:
        status_code: 200
        data:
          end_date: 2017-01-01
          income:
            records:
            - amount: 10000
              id: "123"
              name: Income 1
            - amount: 20000
              id: "456"
              name: Income 2
            total: 200000
          net_operating_income:
            total: 200000
          gross_profit:
            total: 200000
          currency: USD
          id: "12345"
          net_income:
            total: 200000
          customer_id: "123"
          report_name: ProfitAndLoss
          custom_mappings: "{}"
          expenses:
            records:
            - amount: 10000
              id: "123"
              name: Expense 1
            - amount: 20000
              id: "456"
              name: Expense 2
            total: 200000
          start_date: 2017-01-01
        resource: ProfitAndLosses
        service: quickbooks
        operation: one
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/ProfitAndLoss'
        operation:
          description: Operation performed
          example: one
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: ProfitAndLosses
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: quickbooks
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetProfitAndLossResponse
      type: object
      x-apideck-schema-id: GetProfitAndLossResponse
    GetPurchaseOrderResponse:
      example:
        status_code: 200
        data:
          channel: email
          created_at: 2020-09-30T07:43:32Z
          memo: Thank you for the partnership and have a great day!
          discount_percentage: 5.5
          line_items:
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: sales_item
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            custom_mappings: "{}"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: sales_item
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            custom_mappings: "{}"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          custom_mappings: "{}"
          expected_arrival_date: 2020-09-30
          reference: "123456"
          currency_rate: 0.69
          po_number: "90000117"
          total: 27500
          issued_date: 2020-09-30
          updated_at: 2020-09-30T07:43:32Z
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          supplier:
            address:
              country: US
              contact_name: Elon Musk
              website: https://elonmusk.com
              line4: delivery instructions
              notes: Address notes or delivery instructions.
              string: "25 Spring Street, Blackburn, VIC 3130"
              city: San Francisco
              latitude: "40.759211"
              county: Santa Clara
              type: primary
              row_version: 1-12345
              name: HQ US
              street_number: "25"
              phone_number: 111-111-1111
              id: "123"
              salutation: Mr
              state: CA
              fax: 122-111-1111
              line3: "Suite #"
              postal_code: "94104"
              line2: "apt #"
              email: elon@musk.com
              line1: Main street
              longitude: "-73.984638"
            display_id: SUPP00101
            company_name: The boring company
            id: "12345"
            display_name: Windsurf Shop
          currency: USD
          downstream_id: "12345"
          id: "12345"
          shipping_address:
            country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          payment_method: cash
          accounting_by_row: false
          bank_account:
            bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          due_date: 2020-10-30
          tax_inclusive: true
          total_tax: 2500
          created_by: "12345"
          delivery_date: 2020-09-30
          tax_code: "1234"
          row_version: 1-12345
          sub_total: 27500
          updated_by: "12345"
          template_id: "123456"
          status: open
        resource: PurchaseOrders
        service: quickbooks
        operation: one
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/PurchaseOrder'
        operation:
          description: Operation performed
          example: one
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: PurchaseOrders
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: quickbooks
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetPurchaseOrderResponse
      type: object
    GetPurchaseOrdersResponse:
      example:
        status_code: 200
        data:
        - channel: email
          created_at: 2020-09-30T07:43:32Z
          memo: Thank you for the partnership and have a great day!
          discount_percentage: 5.5
          line_items:
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: sales_item
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            custom_mappings: "{}"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: sales_item
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            custom_mappings: "{}"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          custom_mappings: "{}"
          expected_arrival_date: 2020-09-30
          reference: "123456"
          currency_rate: 0.69
          po_number: "90000117"
          total: 27500
          issued_date: 2020-09-30
          updated_at: 2020-09-30T07:43:32Z
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          supplier:
            address:
              country: US
              contact_name: Elon Musk
              website: https://elonmusk.com
              line4: delivery instructions
              notes: Address notes or delivery instructions.
              string: "25 Spring Street, Blackburn, VIC 3130"
              city: San Francisco
              latitude: "40.759211"
              county: Santa Clara
              type: primary
              row_version: 1-12345
              name: HQ US
              street_number: "25"
              phone_number: 111-111-1111
              id: "123"
              salutation: Mr
              state: CA
              fax: 122-111-1111
              line3: "Suite #"
              postal_code: "94104"
              line2: "apt #"
              email: elon@musk.com
              line1: Main street
              longitude: "-73.984638"
            display_id: SUPP00101
            company_name: The boring company
            id: "12345"
            display_name: Windsurf Shop
          currency: USD
          downstream_id: "12345"
          id: "12345"
          shipping_address:
            country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          payment_method: cash
          accounting_by_row: false
          bank_account:
            bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          due_date: 2020-10-30
          tax_inclusive: true
          total_tax: 2500
          created_by: "12345"
          delivery_date: 2020-09-30
          tax_code: "1234"
          row_version: 1-12345
          sub_total: 27500
          updated_by: "12345"
          template_id: "123456"
          status: open
        - channel: email
          created_at: 2020-09-30T07:43:32Z
          memo: Thank you for the partnership and have a great day!
          discount_percentage: 5.5
          line_items:
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: sales_item
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            custom_mappings: "{}"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          - tax_amount: 27500
            item:
              code: 120-C
              name: Model Y
              id: "12344"
            code: 120-C
            quantity: 1
            department_id: "1234"
            discount_amount: 19.99
            created_at: 2020-09-30T07:43:32Z
            description: "Model Y is a fully electric, mid-size SUV, with seating\
              \ for up to seven, dual motor AWD and unparalleled protection."
            discount_percentage: 0.01
            type: sales_item
            unit_price: 27500.5
            created_by: "12345"
            location_id: "1234"
            tax_rate:
              code: N-T
              rate: 10
              name: GST on Purchases
              id: "123456"
            custom_mappings: "{}"
            updated_at: 2020-09-30T07:43:32Z
            total_amount: 27500
            ledger_account:
              code: "453"
              nominal_code: N091
              name: Bank account
              id: "123456"
            line_number: 1
            row_version: 1-12345
            updated_by: "12345"
            unit_of_measure: pc.
            id: "12345"
            row_id: "12345"
          custom_mappings: "{}"
          expected_arrival_date: 2020-09-30
          reference: "123456"
          currency_rate: 0.69
          po_number: "90000117"
          total: 27500
          issued_date: 2020-09-30
          updated_at: 2020-09-30T07:43:32Z
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          supplier:
            address:
              country: US
              contact_name: Elon Musk
              website: https://elonmusk.com
              line4: delivery instructions
              notes: Address notes or delivery instructions.
              string: "25 Spring Street, Blackburn, VIC 3130"
              city: San Francisco
              latitude: "40.759211"
              county: Santa Clara
              type: primary
              row_version: 1-12345
              name: HQ US
              street_number: "25"
              phone_number: 111-111-1111
              id: "123"
              salutation: Mr
              state: CA
              fax: 122-111-1111
              line3: "Suite #"
              postal_code: "94104"
              line2: "apt #"
              email: elon@musk.com
              line1: Main street
              longitude: "-73.984638"
            display_id: SUPP00101
            company_name: The boring company
            id: "12345"
            display_name: Windsurf Shop
          currency: USD
          downstream_id: "12345"
          id: "12345"
          shipping_address:
            country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          payment_method: cash
          accounting_by_row: false
          bank_account:
            bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          due_date: 2020-10-30
          tax_inclusive: true
          total_tax: 2500
          created_by: "12345"
          delivery_date: 2020-09-30
          tax_code: "1234"
          row_version: 1-12345
          sub_total: 27500
          updated_by: "12345"
          template_id: "123456"
          status: open
        resource: PurchaseOrders
        meta:
          cursors:
            next: em9oby1jcm06OnBhZ2U6OjM=
            current: em9oby1jcm06OnBhZ2U6OjI=
            previous: em9oby1jcm06OnBhZ2U6OjE=
          items_on_page: 50
        service: quickbooks
        links:
          next: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          current: https://unify.apideck.com/crm/companies
          previous: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
        operation: all
        status: OK
      properties:
        data:
          items:
            $ref: '#/components/schemas/PurchaseOrder'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
        operation:
          description: Operation performed
          example: all
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: PurchaseOrders
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: quickbooks
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetPurchaseOrdersResponse
      type: object
    GetSupplierResponse:
      example:
        status_code: 200
        data:
          addresses:
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          notes: Some notes about this supplier
          display_id: EMP00101
          channel: email
          created_at: 2020-09-30T07:43:32Z
          suffix: Jr.
          title: CEO
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          custom_mappings: "{}"
          emails:
          - id: "123"
            type: primary
            email: elon@musk.com
          - id: "123"
            type: primary
            email: elon@musk.com
          updated_at: 2020-09-30T07:43:32Z
          tax_number: US123945459
          currency: USD
          downstream_id: "12345"
          id: "12345"
          first_name: Elon
          payment_method: cash
          individual: true
          last_name: Musk
          display_name: Windsurf Shop
          middle_name: D.
          created_by: "12345"
          phone_numbers:
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          company_name: SpaceX
          row_version: 1-12345
          updated_by: "12345"
          websites:
          - id: "12345"
            type: primary
            url: http://example.com
          - id: "12345"
            type: primary
            url: http://example.com
          bank_accounts:
          - bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          - bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          status: active
        resource: suppliers
        service: xero
        operation: one
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/Supplier'
        operation:
          description: Operation performed
          example: one
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: suppliers
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetSupplierResponse
      type: object
      x-apideck-schema-id: GetSupplierResponse
    GetSuppliersResponse:
      example:
        status_code: 200
        data:
        - addresses:
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          notes: Some notes about this supplier
          display_id: EMP00101
          channel: email
          created_at: 2020-09-30T07:43:32Z
          suffix: Jr.
          title: CEO
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          custom_mappings: "{}"
          emails:
          - id: "123"
            type: primary
            email: elon@musk.com
          - id: "123"
            type: primary
            email: elon@musk.com
          updated_at: 2020-09-30T07:43:32Z
          tax_number: US123945459
          currency: USD
          downstream_id: "12345"
          id: "12345"
          first_name: Elon
          payment_method: cash
          individual: true
          last_name: Musk
          display_name: Windsurf Shop
          middle_name: D.
          created_by: "12345"
          phone_numbers:
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          company_name: SpaceX
          row_version: 1-12345
          updated_by: "12345"
          websites:
          - id: "12345"
            type: primary
            url: http://example.com
          - id: "12345"
            type: primary
            url: http://example.com
          bank_accounts:
          - bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          - bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          status: active
        - addresses:
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          - country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          notes: Some notes about this supplier
          display_id: EMP00101
          channel: email
          created_at: 2020-09-30T07:43:32Z
          suffix: Jr.
          title: CEO
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          custom_mappings: "{}"
          emails:
          - id: "123"
            type: primary
            email: elon@musk.com
          - id: "123"
            type: primary
            email: elon@musk.com
          updated_at: 2020-09-30T07:43:32Z
          tax_number: US123945459
          currency: USD
          downstream_id: "12345"
          id: "12345"
          first_name: Elon
          payment_method: cash
          individual: true
          last_name: Musk
          display_name: Windsurf Shop
          middle_name: D.
          created_by: "12345"
          phone_numbers:
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          - country_code: "1"
            number: 111-111-1111
            extension: "105"
            area_code: "323"
            id: "12345"
            type: primary
          company_name: SpaceX
          row_version: 1-12345
          updated_by: "12345"
          websites:
          - id: "12345"
            type: primary
            url: http://example.com
          - id: "12345"
            type: primary
            url: http://example.com
          bank_accounts:
          - bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          - bsb_number: 062-001
            account_number: "123465"
            bank_code: BNH
            account_type: credit_card
            account_name: SPACEX LLC
            iban: CH2989144532982975332
            bank_name: Monzo
            currency: USD
            routing_number: "012345678"
            bic: AUDSCHGGXXX
            branch_identifier: "001"
          account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          status: active
        resource: suppliers
        meta:
          cursors:
            next: em9oby1jcm06OnBhZ2U6OjM=
            current: em9oby1jcm06OnBhZ2U6OjI=
            previous: em9oby1jcm06OnBhZ2U6OjE=
          items_on_page: 50
        service: xero
        links:
          next: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          current: https://unify.apideck.com/crm/companies
          previous: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
        operation: all
        status: OK
      properties:
        data:
          items:
            $ref: '#/components/schemas/Supplier'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
        operation:
          description: Operation performed
          example: all
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: suppliers
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetSuppliersResponse
      type: object
      x-apideck-schema-id: GetSuppliersResponse
    GetTaxRateResponse:
      example:
        status_code: 200
        data:
          components:
          - rate: 10
            name: GST
            id: "10"
            compound: true
          - rate: 10
            name: GST
            id: "10"
            compound: true
          code: ABN
          created_at: 2020-09-30T07:43:32Z
          description: Reduced rate GST Purchases
          type: NONE
          created_by: "12345"
          custom_mappings: "{}"
          original_tax_rate_id: "12345"
          tax_remitted_account_id: "123456"
          tax_payable_account_id: "123456"
          updated_at: 2020-09-30T07:43:32Z
          report_tax_type: NONE
          row_version: 1-12345
          name: GST on Purchases
          updated_by: "12345"
          id: "1234"
          effective_tax_rate: 10
          total_tax_rate: 10
          status: active
        resource: tax-rates
        service: xero
        operation: one
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/TaxRate'
        operation:
          description: Operation performed
          example: one
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: tax-rates
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetTaxRateResponse
      type: object
      x-apideck-schema-id: GetTaxRateResponse
    GetTaxRatesResponse:
      example:
        status_code: 200
        data:
        - components:
          - rate: 10
            name: GST
            id: "10"
            compound: true
          - rate: 10
            name: GST
            id: "10"
            compound: true
          code: ABN
          created_at: 2020-09-30T07:43:32Z
          description: Reduced rate GST Purchases
          type: NONE
          created_by: "12345"
          custom_mappings: "{}"
          original_tax_rate_id: "12345"
          tax_remitted_account_id: "123456"
          tax_payable_account_id: "123456"
          updated_at: 2020-09-30T07:43:32Z
          report_tax_type: NONE
          row_version: 1-12345
          name: GST on Purchases
          updated_by: "12345"
          id: "1234"
          effective_tax_rate: 10
          total_tax_rate: 10
          status: active
        - components:
          - rate: 10
            name: GST
            id: "10"
            compound: true
          - rate: 10
            name: GST
            id: "10"
            compound: true
          code: ABN
          created_at: 2020-09-30T07:43:32Z
          description: Reduced rate GST Purchases
          type: NONE
          created_by: "12345"
          custom_mappings: "{}"
          original_tax_rate_id: "12345"
          tax_remitted_account_id: "123456"
          tax_payable_account_id: "123456"
          updated_at: 2020-09-30T07:43:32Z
          report_tax_type: NONE
          row_version: 1-12345
          name: GST on Purchases
          updated_by: "12345"
          id: "1234"
          effective_tax_rate: 10
          total_tax_rate: 10
          status: active
        resource: tax-rates
        meta:
          cursors:
            next: em9oby1jcm06OnBhZ2U6OjM=
            current: em9oby1jcm06OnBhZ2U6OjI=
            previous: em9oby1jcm06OnBhZ2U6OjE=
          items_on_page: 50
        service: xero
        links:
          next: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          current: https://unify.apideck.com/crm/companies
          previous: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
        operation: all
        status: OK
      properties:
        data:
          items:
            $ref: '#/components/schemas/TaxRate'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
        operation:
          description: Operation performed
          example: all
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: tax-rates
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: GetTaxRatesResponse
      type: object
      x-apideck-schema-id: GetTaxRatesResponse
    Id:
      description: A unique identifier for an object.
      example: "12345"
      readOnly: true
      title: ID
      type: string
    Invoice:
      additionalProperties: false
      example:
        discount_amount: 25
        channel: email
        created_at: 2020-09-30T07:43:32Z
        billing_address:
          country: US
          contact_name: Elon Musk
          website: https://elonmusk.com
          line4: delivery instructions
          notes: Address notes or delivery instructions.
          string: "25 Spring Street, Blackburn, VIC 3130"
          city: San Francisco
          latitude: "40.759211"
          county: Santa Clara
          type: primary
          row_version: 1-12345
          name: HQ US
          street_number: "25"
          phone_number: 111-111-1111
          id: "123"
          salutation: Mr
          state: CA
          fax: 122-111-1111
          line3: "Suite #"
          postal_code: "94104"
          line2: "apt #"
          email: elon@musk.com
          line1: Main street
          longitude: "-73.984638"
        language: EN
        discount_percentage: 5.5
        line_items:
        - tax_amount: 27500
          item:
            code: 120-C
            name: Model Y
            id: "12344"
          code: 120-C
          quantity: 1
          department_id: "1234"
          discount_amount: 19.99
          created_at: 2020-09-30T07:43:32Z
          description: "Model Y is a fully electric, mid-size SUV, with seating for\
            \ up to seven, dual motor AWD and unparalleled protection."
          discount_percentage: 0.01
          type: sales_item
          unit_price: 27500.5
          created_by: "12345"
          location_id: "1234"
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          custom_mappings: "{}"
          updated_at: 2020-09-30T07:43:32Z
          total_amount: 27500
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          line_number: 1
          row_version: 1-12345
          updated_by: "12345"
          unit_of_measure: pc.
          id: "12345"
          row_id: "12345"
        - tax_amount: 27500
          item:
            code: 120-C
            name: Model Y
            id: "12344"
          code: 120-C
          quantity: 1
          department_id: "1234"
          discount_amount: 19.99
          created_at: 2020-09-30T07:43:32Z
          description: "Model Y is a fully electric, mid-size SUV, with seating for\
            \ up to seven, dual motor AWD and unparalleled protection."
          discount_percentage: 0.01
          type: sales_item
          unit_price: 27500.5
          created_by: "12345"
          location_id: "1234"
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          custom_mappings: "{}"
          updated_at: 2020-09-30T07:43:32Z
          total_amount: 27500
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          line_number: 1
          row_version: 1-12345
          updated_by: "12345"
          unit_of_measure: pc.
          id: "12345"
          row_id: "12345"
        customer_memo: Thank you for your business and have a great day!
        type: service
        custom_mappings: "{}"
        invoice_date: 2020-09-30
        reference: "123456"
        number: OIT00546
        currency_rate: 0.69
        po_number: "90000117"
        total: 27500
        balance: 27500
        updated_at: 2020-09-30T07:43:32Z
        terms: Net 30 days
        ledger_account:
          code: "453"
          nominal_code: N091
          name: Bank account
          id: "123456"
        currency: USD
        downstream_id: "12345"
        id: "12345"
        shipping_address:
          country: US
          contact_name: Elon Musk
          website: https://elonmusk.com
          line4: delivery instructions
          notes: Address notes or delivery instructions.
          string: "25 Spring Street, Blackburn, VIC 3130"
          city: San Francisco
          latitude: "40.759211"
          county: Santa Clara
          type: primary
          row_version: 1-12345
          name: HQ US
          street_number: "25"
          phone_number: 111-111-1111
          id: "123"
          salutation: Mr
          state: CA
          fax: 122-111-1111
          line3: "Suite #"
          postal_code: "94104"
          line2: "apt #"
          email: elon@musk.com
          line1: Main street
          longitude: "-73.984638"
        payment_method: cash
        accounting_by_row: false
        bank_account:
          bsb_number: 062-001
          account_number: "123465"
          bank_code: BNH
          account_type: credit_card
          account_name: SPACEX LLC
          iban: CH2989144532982975332
          bank_name: Monzo
          currency: USD
          routing_number: "012345678"
          bic: AUDSCHGGXXX
          branch_identifier: "001"
        due_date: 2020-09-30
        tax_inclusive: true
        tracking_category:
          name: New York
          id: "123456"
        total_tax: 2500
        created_by: "12345"
        tax_code: "1234"
        row_version: 1-12345
        sub_total: 27500
        updated_by: "12345"
        deposit: 0
        template_id: "123456"
        invoice_sent: true
        source_document_url: https://www.invoicesolution.com/invoice/123456
        customer:
          display_id: CUST00101
          company_name: The boring company
          name: Windsurf Shop
          id: "12345"
          display_name: Windsurf Shop
        status: draft
      properties:
        accounting_by_row:
          description: Indicates if accounting by row is used (true) or not (false).
            Accounting by row means that a separate ledger transaction is created
            for each row.
          example: false
          nullable: true
          title: Accounting by Row
          type: boolean
        balance:
          description: Balance of invoice due.
          example: 27500
          nullable: true
          title: Balance
          type: number
        bank_account:
          $ref: '#/components/schemas/BankAccount'
        billing_address:
          $ref: '#/components/schemas/Address'
        channel:
          description: The channel through which the transaction is processed.
          example: email
          nullable: true
          title: Channel
          type: string
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        currency_rate:
          description: Currency Exchange Rate at the time entity was recorded/generated.
          example: 0.69
          nullable: true
          title: Currency Exchange Rate
          type: number
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: CustomMappings
          type: object
          x-apideck-schema-id: CustomMappings
        customer:
          $ref: '#/components/schemas/LinkedCustomer'
        customer_memo:
          description: Customer memo
          example: Thank you for your business and have a great day!
          nullable: true
          title: Customer memo
          type: string
        deposit:
          description: Amount of deposit made to this invoice.
          example: 0
          nullable: true
          title: Deposit
          type: number
        discount_amount:
          description: Discount amount applied to this invoice.
          example: 25
          nullable: true
          title: Discount Amount
          type: number
        discount_percentage:
          description: Discount percentage applied to this invoice.
          example: 5.5
          nullable: true
          title: Discount Percent
          type: number
        downstream_id:
          description: The third-party API ID of original entity
          example: "12345"
          nullable: true
          readOnly: true
          title: DownstreamId
          type: string
        due_date:
          description: The invoice due date is the date on which a payment or invoice
            is scheduled to be received by the seller - YYYY-MM-DD.
          example: 2020-09-30
          format: date
          nullable: true
          title: Due date
          type: string
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        invoice_date:
          description: Date invoice was issued - YYYY-MM-DD.
          example: 2020-09-30
          format: date
          nullable: true
          title: Invoice date
          type: string
        invoice_sent:
          description: Invoice sent to contact/customer.
          example: true
          title: Invoice Sent
          type: boolean
        language:
          description: language code according to ISO 639-1. For the United States
            - EN
          example: EN
          nullable: true
          title: language
          type: string
        ledger_account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        line_items:
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
          title: line_items
          type: array
        number:
          description: Invoice number.
          example: OIT00546
          nullable: true
          title: Invoice number
          type: string
        payment_method:
          description: "Payment method used for the transaction, such as cash, credit\
            \ card, bank transfer, or check"
          example: cash
          nullable: true
          title: Payment method
          type: string
        po_number:
          description: A PO Number uniquely identifies a purchase order and is generally
            defined by the buyer. The buyer will match the PO number in the invoice
            to the Purchase Order.
          example: "90000117"
          nullable: true
          title: Purchase Order number
          type: string
        reference:
          description: Optional invoice reference.
          example: "123456"
          nullable: true
          title: Invoice reference
          type: string
        row_version:
          description: A binary value used to detect updates to a object and prevent
            data conflicts. It is incremented each time an update is made to the object.
          example: 1-12345
          nullable: true
          title: Row version
          type: string
        shipping_address:
          $ref: '#/components/schemas/Address'
        source_document_url:
          description: "URL link to a source document - shown as 'Go to [appName]'\
            \ in the downstream app. Currently only supported for Xero."
          example: https://www.invoicesolution.com/invoice/123456
          nullable: true
          title: Source document URL
          type: string
        status:
          description: Invoice status
          enum:
          - draft
          - submitted
          - authorised
          - partially_paid
          - paid
          - void
          - credit
          - deleted
          example: draft
          nullable: true
          title: Status
          type: string
          x-apideck-enum-id: invoices.status
        sub_total:
          description: "Sub-total amount, normally before tax."
          example: 27500
          nullable: true
          title: Sub-total amount
          type: number
        tax_code:
          description: Applicable tax id/code override if tax is not supplied on a
            line item basis.
          example: "1234"
          nullable: true
          title: Tax Code
          type: string
        tax_inclusive:
          description: Amounts are including tax
          example: true
          nullable: true
          title: Tax inclusive
          type: boolean
        template_id:
          description: Optional invoice template
          example: "123456"
          nullable: true
          title: Template
          type: string
        terms:
          description: Terms of payment.
          example: Net 30 days
          nullable: true
          title: Terms
          type: string
        total:
          description: "Total amount of invoice, including tax."
          example: 27500
          nullable: true
          title: Total amount
          type: number
        total_tax:
          description: Total tax amount applied to this invoice.
          example: 2500
          nullable: true
          title: Total tax amount
          type: number
        tracking_category:
          $ref: '#/components/schemas/LinkedTrackingCategory'
        type:
          description: Invoice type
          enum:
          - standard
          - credit
          - service
          - product
          - supplier
          - other
          example: service
          nullable: true
          title: Invoice type
          type: string
          x-apideck-enum-id: invoices.type
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
      title: Invoice
      type: object
      x-apideck-schema-id: Invoice
      x-apideck-weights:
        accounting_by_row: edge-case
        balance: high
        bank_account: low
        billing_address: high
        channel: low
        created_at: high
        created_by: low
        currency: medium
        currency_rate: low
        customer: high
        customer_memo: low
        deposit: low
        discount_amount: medium
        discount_percentage: medium
        downstream_id: low
        due_date: edge-case
        id: critical
        invoice_date: edge-case
        invoice_sent: low
        language: low
        ledger_account: edge-case
        line_items: critical
        number: high
        payment_method: low
        po_number: low
        reference: low
        row_version: edge-case
        shipping_address: medium
        source_document_url: edge-case
        status: critical
        sub_total: high
        tax_code: medium
        tax_inclusive: low
        template_id: edge-case
        terms: low
        total: critical
        total_tax: high
        tracking_category: low
        type: high
        updated_at: high
        updated_by: low
    InvoiceItem:
      additionalProperties: false
      example:
        code: 120-C
        purchase_details:
          tax_inclusive: true
          unit_of_measure: pc.
          unit_price: 27500.5
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
        sales_details:
          tax_inclusive: true
          unit_of_measure: pc.
          unit_price: 27500.5
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
        created_at: 2020-09-30T07:43:32Z
        description: "Model Y is a fully electric, mid-size SUV, with seating for\
          \ up to seven, dual motor AWD and unparalleled protection."
        tracked: true
        type: inventory
        inventory_date: 2020-10-30
        custom_mappings: "{}"
        asset_account:
          code: "453"
          nominal_code: N091
          name: Bank account
          id: "123456"
        expense_account:
          code: "453"
          nominal_code: N091
          name: Bank account
          id: "123456"
        updated_at: 2020-09-30T07:43:32Z
        id: "123456"
        income_account:
          code: "453"
          nominal_code: N091
          name: Bank account
          id: "123456"
        sold: true
        quantity: 1
        taxable: true
        active: true
        tracking_category:
          name: New York
          id: "123456"
        unit_price: 27500.5
        created_by: "12345"
        purchased: true
        row_version: 1-12345
        name: Model Y
        updated_by: "12345"
      properties:
        active:
          example: true
          nullable: true
          title: Is active
          type: boolean
        asset_account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        code:
          description: User defined item code
          example: 120-C
          nullable: true
          title: Item code
          type: string
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: CustomMappings
          type: object
          x-apideck-schema-id: CustomMappings
        description:
          description: A short description of the item
          example: "Model Y is a fully electric, mid-size SUV, with seating for up\
            \ to seven, dual motor AWD and unparalleled protection."
          nullable: true
          title: Description
          type: string
        expense_account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        id:
          description: The ID of the item.
          example: "123456"
          readOnly: true
          title: Item ID
          type: string
        income_account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        inventory_date:
          description: The date of opening balance if inventory item is tracked -
            YYYY-MM-DD.
          example: 2020-10-30
          format: date
          nullable: true
          title: Inventory date
          type: string
        name:
          description: Item name
          example: Model Y
          nullable: true
          title: Item name
          type: string
        purchase_details:
          $ref: '#/components/schemas/InvoiceItem_purchase_details'
        purchased:
          description: Item is available for purchase transactions
          example: true
          nullable: true
          title: Item purchased
          type: boolean
        quantity:
          example: 1
          nullable: true
          title: Quantity
          type: number
        row_version:
          description: A binary value used to detect updates to a object and prevent
            data conflicts. It is incremented each time an update is made to the object.
          example: 1-12345
          nullable: true
          title: Row version
          type: string
        sales_details:
          $ref: '#/components/schemas/InvoiceItem_purchase_details'
        sold:
          description: Item will be available on sales transactions
          example: true
          nullable: true
          title: Item sold
          type: boolean
        taxable:
          description: "If true, transactions for this item are taxable"
          example: true
          nullable: true
          title: Item taxable
          type: boolean
        tracked:
          description: Item is inventoried
          example: true
          nullable: true
          title: Item tracked
          type: boolean
        tracking_category:
          $ref: '#/components/schemas/LinkedTrackingCategory'
        type:
          description: Item type
          enum:
          - inventory
          - service
          - other
          example: inventory
          nullable: true
          title: Type
          type: string
          x-apideck-enum-id: invoice-items.type
        unit_price:
          example: 27500.5
          nullable: true
          title: Unit price
          type: number
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
      title: InvoiceItem
      type: object
      x-apideck-schema-id: InvoiceItem
      x-apideck-weights:
        active: medium
        asset_account: medium
        code: high
        created_at: medium
        created_by: edge-case
        description: medium
        expense_account: medium
        id: critical
        income_account: high
        inventory_date: high
        name: critical
        purchase_details: medium
        purchased: edge-case
        quantity: high
        row_version: edge-case
        sales_details: medium
        sold: edge-case
        taxable: edge-case
        tracked: edge-case
        tracking_category: low
        type: high
        unit_price: high
        updated_at: medium
        updated_by: edge-case
    InvoiceItemAssetAccount:
      $ref: '#/components/schemas/LinkedLedgerAccount'
    InvoiceItemExpenseAccount:
      $ref: '#/components/schemas/LinkedLedgerAccount'
    InvoiceItemIncomeAccount:
      $ref: '#/components/schemas/LinkedLedgerAccount'
    InvoiceItemsFilter:
      additionalProperties: false
      example:
        name: Widgets Large
      properties:
        name:
          description: Name of Invoice Items to search for
          example: Widgets Large
          title: Name
          type: string
      type: object
      x-apideck-schema-id: InvoiceItemsFilter
    InvoiceLineItem:
      additionalProperties: false
      example:
        tax_amount: 27500
        item:
          code: 120-C
          name: Model Y
          id: "12344"
        code: 120-C
        quantity: 1
        department_id: "1234"
        discount_amount: 19.99
        created_at: 2020-09-30T07:43:32Z
        description: "Model Y is a fully electric, mid-size SUV, with seating for\
          \ up to seven, dual motor AWD and unparalleled protection."
        discount_percentage: 0.01
        type: sales_item
        unit_price: 27500.5
        created_by: "12345"
        location_id: "1234"
        tax_rate:
          code: N-T
          rate: 10
          name: GST on Purchases
          id: "123456"
        custom_mappings: "{}"
        updated_at: 2020-09-30T07:43:32Z
        total_amount: 27500
        ledger_account:
          code: "453"
          nominal_code: N091
          name: Bank account
          id: "123456"
        line_number: 1
        row_version: 1-12345
        updated_by: "12345"
        unit_of_measure: pc.
        id: "12345"
        row_id: "12345"
      properties:
        code:
          description: User defined item code
          example: 120-C
          nullable: true
          title: Item code
          type: string
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: CustomMappings
          type: object
          x-apideck-schema-id: CustomMappings
        department_id:
          description: Department id
          example: "1234"
          nullable: true
          title: Department id
          type: string
        description:
          description: User defined description
          example: "Model Y is a fully electric, mid-size SUV, with seating for up\
            \ to seven, dual motor AWD and unparalleled protection."
          nullable: true
          title: Description
          type: string
        discount_amount:
          description: Discount amount applied to the line item when supported downstream.
          example: 19.99
          nullable: true
          title: Discount Amount
          type: number
        discount_percentage:
          description: Discount percentage applied to the line item when supported
            downstream.
          example: 0.01
          nullable: true
          title: Discount Percentage
          type: number
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        item:
          $ref: '#/components/schemas/LinkedInvoiceItem'
        ledger_account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        line_number:
          description: Line number in the invoice
          example: 1
          nullable: true
          title: Line number
          type: integer
        location_id:
          description: Location id
          example: "1234"
          nullable: true
          title: Location id
          type: string
        quantity:
          example: 1
          nullable: true
          title: Quantity
          type: number
        row_id:
          description: Row ID
          example: "12345"
          title: Row ID
          type: string
        row_version:
          description: A binary value used to detect updates to a object and prevent
            data conflicts. It is incremented each time an update is made to the object.
          example: 1-12345
          nullable: true
          title: Row version
          type: string
        tax_amount:
          description: Tax amount
          example: 27500
          nullable: true
          title: Tax amount
          type: number
        tax_rate:
          $ref: '#/components/schemas/LinkedTaxRate'
        total_amount:
          description: Total amount of the line item
          example: 27500
          nullable: true
          title: Total amount
          type: number
        type:
          description: Item type
          enum:
          - sales_item
          - discount
          - info
          - sub_total
          example: sales_item
          nullable: true
          title: Type
          type: string
          x-apideck-enum-id: invoices.lines-items.type
        unit_of_measure:
          description: "Description of the unit type the item is sold as, ie: kg,\
            \ hour."
          example: pc.
          nullable: true
          title: Unit of measure
          type: string
        unit_price:
          example: 27500.5
          nullable: true
          title: Unit price
          type: number
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
      title: Invoice Line Item
      type: object
      x-apideck-schema-id: InvoiceLineItem
      x-apideck-weights:
        code: medium
        created_at: edge-case
        created_by: edge-case
        department_id: low
        description: high
        discount_amount: low
        discount_percentage: low
        id: high
        item: high
        ledger_account: low
        line_number: medium
        location_id: low
        quantity: high
        row_id: edge-case
        row_version: edge-case
        tax_amount: high
        tax_rate: medium
        total_amount: high
        type: medium
        unit_of_measure: edge-case
        unit_price: high
        updated_at: high
        updated_by: edge-case
    InvoiceResponse:
      example:
        downstream_id: "12345"
        id: "12345"
      properties:
        downstream_id:
          description: The third-party API ID of original entity
          example: "12345"
          nullable: true
          readOnly: true
          title: DownstreamId
          type: string
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
      title: InvoiceResponse
      type: object
      x-apideck-schema-id: InvoiceResponse
    InvoicesSort:
      additionalProperties: false
      example:
        by: updated_at
        direction: desc
      properties:
        by:
          description: The field on which to sort the Invoices
          enum:
          - updated_at
          example: updated_at
          type: string
          x-apideck-enum-id: invoices.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      type: object
      x-apideck-schema-id: InvoicesSort
    JournalEntry:
      additionalProperties: false
      example:
        created_at: 2020-09-30T07:43:32Z
        memo: Thank you for your business and have a great day!
        line_items:
        - tax_amount: 27500
          department_id: "12345"
          description: "Model Y is a fully electric, mid-size SUV, with seating for\
            \ up to seven, dual motor AWD and unparalleled protection."
          tracking_category:
            name: New York
            id: "123456"
          type: debit
          location_id: "12345"
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          total_amount: 27500
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          supplier:
            address:
              country: US
              contact_name: Elon Musk
              website: https://elonmusk.com
              line4: delivery instructions
              notes: Address notes or delivery instructions.
              string: "25 Spring Street, Blackburn, VIC 3130"
              city: San Francisco
              latitude: "40.759211"
              county: Santa Clara
              type: primary
              row_version: 1-12345
              name: HQ US
              street_number: "25"
              phone_number: 111-111-1111
              id: "123"
              salutation: Mr
              state: CA
              fax: 122-111-1111
              line3: "Suite #"
              postal_code: "94104"
              line2: "apt #"
              email: elon@musk.com
              line1: Main street
              longitude: "-73.984638"
            display_id: SUPP00101
            company_name: The boring company
            id: "12345"
            display_name: Windsurf Shop
          sub_total: 27500
          id: "12345"
          customer:
            display_id: CUST00101
            company_name: The boring company
            name: Windsurf Shop
            id: "12345"
            display_name: Windsurf Shop
        - tax_amount: 27500
          department_id: "12345"
          description: "Model Y is a fully electric, mid-size SUV, with seating for\
            \ up to seven, dual motor AWD and unparalleled protection."
          tracking_category:
            name: New York
            id: "123456"
          type: debit
          location_id: "12345"
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          total_amount: 27500
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          supplier:
            address:
              country: US
              contact_name: Elon Musk
              website: https://elonmusk.com
              line4: delivery instructions
              notes: Address notes or delivery instructions.
              string: "25 Spring Street, Blackburn, VIC 3130"
              city: San Francisco
              latitude: "40.759211"
              county: Santa Clara
              type: primary
              row_version: 1-12345
              name: HQ US
              street_number: "25"
              phone_number: 111-111-1111
              id: "123"
              salutation: Mr
              state: CA
              fax: 122-111-1111
              line3: "Suite #"
              postal_code: "94104"
              line2: "apt #"
              email: elon@musk.com
              line1: Main street
              longitude: "-73.984638"
            display_id: SUPP00101
            company_name: The boring company
            id: "12345"
            display_name: Windsurf Shop
          sub_total: 27500
          id: "12345"
          customer:
            display_id: CUST00101
            company_name: The boring company
            name: Windsurf Shop
            id: "12345"
            display_name: Windsurf Shop
        title: "Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry"
        created_by: "12345"
        custom_mappings: "{}"
        number: OIT00546
        currency_rate: 0.69
        journal_symbol: IND
        tax_code: "1234"
        updated_at: 2020-09-30T07:43:32Z
        tax_type: sales
        row_version: 1-12345
        updated_by: "12345"
        currency: USD
        id: "12345"
        posted_at: 2020-09-30T07:43:32Z
      properties:
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        currency_rate:
          description: Currency Exchange Rate at the time entity was recorded/generated.
          example: 0.69
          nullable: true
          title: Currency Exchange Rate
          type: number
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: CustomMappings
          type: object
          x-apideck-schema-id: CustomMappings
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        journal_symbol:
          description: Journal symbol of the entry. For example IND for indirect costs
          example: IND
          nullable: true
          title: Journal symbol
          type: string
        line_items:
          description: Requires a minimum of 2 line items that sum to 0
          items:
            $ref: '#/components/schemas/JournalEntryLineItem'
          minItems: 2
          title: line_items
          type: array
        memo:
          description: Reference for the journal entry.
          example: Thank you for your business and have a great day!
          nullable: true
          title: Memo
          type: string
        number:
          description: Journal entry number.
          example: OIT00546
          nullable: true
          title: Journal entry number
          type: string
        posted_at:
          description: This is the date on which the journal entry was added. This
            can be different from the creation date and can also be backdated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          title: Posted at (timestamp)
          type: string
        row_version:
          description: A binary value used to detect updates to a object and prevent
            data conflicts. It is incremented each time an update is made to the object.
          example: 1-12345
          nullable: true
          title: Row version
          type: string
        tax_code:
          description: Applicable tax id/code override if tax is not supplied on a
            line item basis.
          example: "1234"
          nullable: true
          title: Tax Code
          type: string
        tax_type:
          description: The specific category of tax associated with a transaction
            like sales or purchase
          example: sales
          nullable: true
          title: Tax Type
          type: string
        title:
          description: Journal entry title
          example: "Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry"
          nullable: true
          title: Journal entry title
          type: string
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
      title: JournalEntry
      type: object
      x-apideck-strict-required:
      - line_items
      x-apideck-weights:
        created_at: medium
        created_by: edge-case
        currency: medium
        currency_rate: low
        id: critical
        journal_symbol: edge-case
        line_items: medium
        memo: low
        number: medium
        posted_at: low
        row_version: edge-case
        tax_code: edge-case
        tax_type: edge-case
        title: medium
        updated_at: medium
        updated_by: edge-case
    JournalEntryLineItem:
      additionalProperties: false
      example:
        tax_amount: 27500
        department_id: "12345"
        description: "Model Y is a fully electric, mid-size SUV, with seating for\
          \ up to seven, dual motor AWD and unparalleled protection."
        tracking_category:
          name: New York
          id: "123456"
        type: debit
        location_id: "12345"
        tax_rate:
          code: N-T
          rate: 10
          name: GST on Purchases
          id: "123456"
        total_amount: 27500
        ledger_account:
          code: "453"
          nominal_code: N091
          name: Bank account
          id: "123456"
        supplier:
          address:
            country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          display_id: SUPP00101
          company_name: The boring company
          id: "12345"
          display_name: Windsurf Shop
        sub_total: 27500
        id: "12345"
        customer:
          display_id: CUST00101
          company_name: The boring company
          name: Windsurf Shop
          id: "12345"
          display_name: Windsurf Shop
      properties:
        customer:
          $ref: '#/components/schemas/LinkedCustomer'
        department_id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        description:
          description: User defined description
          example: "Model Y is a fully electric, mid-size SUV, with seating for up\
            \ to seven, dual motor AWD and unparalleled protection."
          nullable: true
          title: Description
          type: string
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        ledger_account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        location_id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        sub_total:
          description: "Sub-total amount, normally before tax."
          example: 27500
          nullable: true
          title: Sub-total amount
          type: number
        supplier:
          $ref: '#/components/schemas/LinkedSupplier'
        tax_amount:
          description: Tax amount
          example: 27500
          nullable: true
          title: Tax amount
          type: number
        tax_rate:
          $ref: '#/components/schemas/LinkedTaxRate'
        total_amount:
          description: "Debit entries are considered positive, and credit entries\
            \ are considered negative."
          example: 27500
          nullable: true
          title: Total amount
          type: number
        tracking_category:
          $ref: '#/components/schemas/LinkedTrackingCategory'
        type:
          description: "Debit entries are considered positive, and credit entries\
            \ are considered negative."
          enum:
          - debit
          - credit
          example: debit
          title: Type
          type: string
          x-apideck-enum-id: JournalEntryLineItemType
      required:
      - ledger_account
      - type
      title: JournalEntryLineItem
      type: object
      x-apideck-schema-id: JournalEntryLineItem
      x-apideck-strict-any-of:
      - required:
        - total_amount
      - required:
        - sub_total
      x-apideck-strict-required:
      - ledger_account
      - type
      x-apideck-weights:
        department_id: edge-case
        description: medium
        id: high
        ledger_account: critical
        location_id: edge-case
        sub_total: medium
        tax_amount: high
        tax_rate: medium
        total_amount: high
        tracking_category: low
        type: critical
    Language:
      description: language code according to ISO 639-1. For the United States - EN
      example: EN
      nullable: true
      title: language
      type: string
    LastName:
      description: The last name of the person.
      example: Musk
      nullable: true
      title: Last name
      type: string
    LedgerAccount:
      additionalProperties: true
      example:
        code: "453"
        fully_qualified_name: Asset.Bank.Checking_Account
        display_id: 1-12345
        created_at: 2020-09-30T07:43:32Z
        description: Main checking account
        sub_account: false
        type: bank
        last_reconciliation_date: 2020-09-30
        tax_rate:
          code: N-T
          rate: 10
          name: GST on Purchases
          id: "123456"
        custom_mappings: "{}"
        updated_at: 2020-09-30T07:43:32Z
        sub_type: CHECKING_ACCOUNT
        current_balance: 20000
        currency: USD
        categories:
        - name: Finance Charges Expense
          id: "12345"
        - name: Finance Charges Expense
          id: "12345"
        id: "12345"
        opening_balance: 75000
        bank_account:
          bsb_number: 062-001
          account_number: "123465"
          bank_code: BNH
          account_type: credit_card
          account_name: SPACEX LLC
          iban: CH2989144532982975332
          bank_name: Monzo
          currency: USD
          routing_number: "012345678"
          bic: AUDSCHGGXXX
          branch_identifier: "001"
        level: 1
        active: true
        classification: asset
        created_by: "12345"
        parent_account:
          display_id: 1-1100
          name: Bank Accounts
          id: "12345"
        tax_type: NONE
        sub_accounts:
        - account_sub_name: Petty Cash
          id: "12345"
        - account_sub_name: Petty Cash
          id: "12345"
        nominal_code: N091
        row_version: 1-12345
        name: Bank account
        updated_by: "12345"
        header: true
        status: active
      properties:
        active:
          description: Whether the account is active or not.
          example: true
          nullable: true
          title: Is active
          type: boolean
        bank_account:
          $ref: '#/components/schemas/BankAccount'
        categories:
          description: The categories of the account.
          items:
            $ref: '#/components/schemas/Categories_inner'
          readOnly: true
          title: Categories
          type: array
        classification:
          description: The classification of account.
          enum:
          - asset
          - equity
          - expense
          - liability
          - revenue
          - income
          - other_income
          - other_expense
          - costs_of_sales
          example: asset
          nullable: true
          title: Classification
          type: string
          x-apideck-enum-id: ledger-accounts.classification
        code:
          description: The code assigned to the account.
          example: "453"
          nullable: true
          title: Code
          type: string
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        current_balance:
          description: The current balance of the account.
          example: 20000
          nullable: true
          title: Current balance
          type: number
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: CustomMappings
          type: object
          x-apideck-schema-id: CustomMappings
        description:
          description: The description of the account.
          example: Main checking account
          nullable: true
          title: Description
          type: string
        display_id:
          description: The human readable display ID used when displaying the account
          example: 1-12345
          title: Display ID
          type: string
        fully_qualified_name:
          description: The fully qualified name of the account.
          example: Asset.Bank.Checking_Account
          nullable: true
          title: Fully Qualified Name
          type: string
        header:
          description: Whether the account is a header or not.
          example: true
          nullable: true
          title: Is header
          type: boolean
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        last_reconciliation_date:
          description: Reconciliation Date means the last calendar day of each Reconciliation
            Period.
          example: 2020-09-30
          format: date
          nullable: true
          title: Last Reconciliation Date
          type: string
        level:
          example: 1
          nullable: true
          type: number
        name:
          description: The name of the account.
          example: Bank account
          nullable: true
          title: Name
          type: string
        nominal_code:
          deprecated: true
          description: The nominal code of the ledger account.
          example: N091
          nullable: true
          title: Nominal Code
          type: string
        opening_balance:
          description: The opening balance of the account.
          example: 75000
          nullable: true
          title: Opening balance
          type: number
        parent_account:
          $ref: '#/components/schemas/LedgerAccount_parent_account'
        row_version:
          description: A binary value used to detect updates to a object and prevent
            data conflicts. It is incremented each time an update is made to the object.
          example: 1-12345
          nullable: true
          title: Row version
          type: string
        status:
          description: The status of the account.
          enum:
          - active
          - inactive
          - archived
          example: active
          nullable: true
          title: Account status
          type: string
          x-apideck-enum-id: ledger-accounts.status
        sub_account:
          description: Whether the account is a sub account or not.
          example: false
          nullable: true
          title: Is sub account
          type: boolean
        sub_accounts:
          description: The sub accounts of the account.
          items:
            $ref: '#/components/schemas/Sub_accounts_inner'
          readOnly: true
          title: Sub accounts
          type: array
        sub_type:
          description: The sub type of account.
          example: CHECKING_ACCOUNT
          nullable: true
          title: Sub Type
          type: string
        tax_rate:
          $ref: '#/components/schemas/LinkedTaxRate'
        tax_type:
          description: The tax type of the account.
          example: NONE
          nullable: true
          title: Tax Type
          type: string
        type:
          description: The type of account.
          enum:
          - accounts_receivable
          - revenue
          - sales
          - other_income
          - bank
          - current_asset
          - fixed_asset
          - non_current_asset
          - other_asset
          - balancesheet
          - equity
          - expense
          - other_expense
          - costs_of_sales
          - accounts_payable
          - credit_card
          - current_liability
          - non_current_liability
          - other_liability
          - other
          example: bank
          title: Type
          type: string
          x-apideck-enum-id: ledger-accounts.type
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
      title: LedgerAccount
      type: object
      x-apideck-schema-id: LedgerAccount
      x-apideck-weights:
        active: edge-case
        bank_account: high
        categories: high
        classification: edge-case
        code: low
        created_at: low
        created_by: edge-case
        currency: edge-case
        current_balance: edge-case
        description: edge-case
        display_id: low
        fully_qualified_name: edge-case
        header: edge-case
        id: critical
        last_reconciliation_date: edge-case
        level: edge-case
        name: high
        nominal_code: low
        opening_balance: edge-case
        parent_account: high
        row_version: edge-case
        status: medium
        sub_account: medium
        sub_accounts: medium
        sub_type: edge-case
        tax_rate: edge-case
        tax_type: edge-case
        type: high
        updated_at: high
        updated_by: edge-case
    LedgerAccounts:
      items:
        $ref: '#/components/schemas/LedgerAccount'
      type: array
    LinkedCustomer:
      description: The customer this entity is linked to.
      example:
        display_id: CUST00101
        company_name: The boring company
        name: Windsurf Shop
        id: "12345"
        display_name: Windsurf Shop
      nullable: true
      properties:
        company_name:
          description: The company name of the customer.
          example: The boring company
          nullable: true
          readOnly: true
          title: Company Name
          type: string
        display_id:
          description: The display ID of the customer.
          example: CUST00101
          nullable: true
          readOnly: true
          title: Display ID
          type: string
        display_name:
          description: The display name of the customer.
          example: Windsurf Shop
          nullable: true
          title: Display Name
          type: string
        id:
          description: The ID of the customer this entity is linked to.
          example: "12345"
          title: Customer ID
          type: string
        name:
          deprecated: true
          description: "The name of the customer. Deprecated, use display_name instead."
          example: Windsurf Shop
          title: Name
          type: string
      required:
      - id
      title: LinkedCustomer
      type: object
      x-apideck-schema-id: LinkedCustomer
      x-apideck-weights:
        company_name: medium
        display_id: medium
        display_name: medium
        id: medium
        name: medium
    LinkedInvoiceItem:
      example:
        code: 120-C
        name: Model Y
        id: "12344"
      properties:
        code:
          description: User defined item code
          example: 120-C
          nullable: true
          title: Item code
          type: string
        id:
          description: "ID of the linked item. A reference to the [invoice item](https://developers.apideck.com/apis/accounting/reference#tag/Invoice-Items)\
            \ that was used to create this line item"
          example: "12344"
          nullable: true
          title: Item ID
          type: string
        name:
          description: User defined item name
          example: Model Y
          nullable: true
          title: Item name
          type: string
      title: LinkedInvoiceItem
      type: object
      x-apideck-schema-id: LinkedInvoiceItem
      x-apideck-weights:
        code: medium
        id: medium
        name: medium
    LinkedLedgerAccount:
      example:
        code: "453"
        nominal_code: N091
        name: Bank account
        id: "123456"
      nullable: true
      properties:
        code:
          description: The code assigned to the account.
          example: "453"
          nullable: true
          title: Code
          type: string
        id:
          description: The unique identifier for the account.
          example: "123456"
          title: Account ID
          type: string
        name:
          description: The name of the account.
          example: Bank account
          nullable: true
          readOnly: true
          title: Account Name
          type: string
        nominal_code:
          description: The nominal code of the account.
          example: N091
          nullable: true
          title: Nominal Code
          type: string
      title: LinkedLedgerAccount
      type: object
      x-apideck-schema-id: LinkedLedgerAccount
      x-apideck-weights:
        code: medium
        id: medium
        name: medium
        nominal_code: medium
    LinkedParentCustomer:
      description: The parent customer this entity is linked to.
      example:
        name: Windsurf Shop
        id: "12345"
      nullable: true
      properties:
        id:
          description: The parent ID of the customer this entity is linked to.
          example: "12345"
          title: Customer ID
          type: string
        name:
          description: The name of the parent customer.
          example: Windsurf Shop
          title: Name
          type: string
      required:
      - id
      title: LinkedParentCustomer
      type: object
      x-apideck-schema-id: LinkedParentCustomer
      x-apideck-weights:
        id: critical
    LinkedSupplier:
      description: The supplier this entity is linked to.
      example:
        address:
          country: US
          contact_name: Elon Musk
          website: https://elonmusk.com
          line4: delivery instructions
          notes: Address notes or delivery instructions.
          string: "25 Spring Street, Blackburn, VIC 3130"
          city: San Francisco
          latitude: "40.759211"
          county: Santa Clara
          type: primary
          row_version: 1-12345
          name: HQ US
          street_number: "25"
          phone_number: 111-111-1111
          id: "123"
          salutation: Mr
          state: CA
          fax: 122-111-1111
          line3: "Suite #"
          postal_code: "94104"
          line2: "apt #"
          email: elon@musk.com
          line1: Main street
          longitude: "-73.984638"
        display_id: SUPP00101
        company_name: The boring company
        id: "12345"
        display_name: Windsurf Shop
      nullable: true
      properties:
        address:
          $ref: '#/components/schemas/Address'
        company_name:
          description: The company name of the supplier.
          example: The boring company
          nullable: true
          readOnly: true
          title: Company Name
          type: string
        display_id:
          description: The display ID of the supplier.
          example: SUPP00101
          nullable: true
          readOnly: true
          title: Display ID
          type: string
        display_name:
          description: The display name of the supplier.
          example: Windsurf Shop
          nullable: true
          title: Display Name
          type: string
        id:
          description: The ID of the supplier this entity is linked to.
          example: "12345"
          title: Supplier ID
          type: string
      required:
      - id
      title: LinkedSupplier
      type: object
      x-apideck-schema-id: LinkedSupplier
      x-apideck-weights:
        address: low
        company_name: edge-case
        display_id: medium
        display_name: high
        id: medium
    LinkedTaxRate:
      example:
        code: N-T
        rate: 10
        name: GST on Purchases
        id: "123456"
      properties:
        code:
          description: Tax rate code
          example: N-T
          nullable: true
          readOnly: true
          title: Tax rate code
          type: string
        id:
          description: The ID of the object.
          example: "123456"
          nullable: true
          title: The ID of the object.
          type: string
        name:
          description: Name of the tax rate
          example: GST on Purchases
          nullable: true
          readOnly: true
          title: Name
          type: string
        rate:
          description: Rate of the tax rate
          example: 10
          nullable: true
          title: Rate
          type: number
      title: LinkedTaxRate
      type: object
      x-apideck-schema-id: LinkedTaxRate
      x-apideck-weights:
        code: medium
        id: medium
        name: medium
        rate: medium
    LinkedTrackingCategory:
      example:
        name: New York
        id: "123456"
      nullable: true
      properties:
        id:
          description: The unique identifier for the tracking category.
          example: "123456"
          title: Tracking Category ID
          type: string
        name:
          description: The name of the tracking category.
          example: New York
          nullable: true
          title: Tracking Category Name
          type: string
      title: LinkedTrackingCategory
      type: object
      x-apideck-schema-id: LinkedTrackingCategory
      x-apideck-weights:
        id: critical
    Links:
      description: Links to navigate to previous or next pages through the API
      example:
        next: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
        current: https://unify.apideck.com/crm/companies
        previous: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
      properties:
        current:
          description: Link to navigate to the current page through the API
          example: https://unify.apideck.com/crm/companies
          title: current
          type: string
        next:
          description: Link to navigate to the previous page through the API
          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          nullable: true
          title: next
          type: string
        previous:
          description: Link to navigate to the previous page through the API
          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
          nullable: true
          title: previous
          type: string
      title: Links
      type: object
      x-apideck-schema-id: Links
    Meta:
      description: Response metadata
      example:
        cursors:
          next: em9oby1jcm06OnBhZ2U6OjM=
          current: em9oby1jcm06OnBhZ2U6OjI=
          previous: em9oby1jcm06OnBhZ2U6OjE=
        items_on_page: 50
      properties:
        cursors:
          $ref: '#/components/schemas/Meta_cursors'
        items_on_page:
          description: Number of items returned in the data property of the response
          example: 50
          title: items_on_page
          type: integer
      title: Meta
      type: object
      x-apideck-schema-id: Meta
    MiddleName:
      description: Middle name of the person.
      example: D.
      nullable: true
      title: Middle name
      type: string
    NotFoundResponse:
      example:
        ref: https://developers.apideck.com/errors#entitynotfounderror
        type_name: EntityNotFoundError
        status_code: 404
        detail: "Could not find widget with id: '123'"
        error: Not Found
        message: Unknown Widget
      properties:
        detail:
          $ref: '#/components/schemas/NotFoundResponse_detail'
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1
            standard (RFC 7231)
          example: Not Found
          title: error
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Unknown Widget
          title: message
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#entitynotfounderror
          title: ref
          type: string
        status_code:
          description: HTTP status code
          example: 404
          title: status_code
          type: number
        type_name:
          description: The type of error returned
          example: EntityNotFoundError
          title: type_name
          type: string
      title: NotFoundResponse
      type: object
      x-apideck-schema-id: NotFound
    NotImplementedResponse:
      properties:
        detail:
          $ref: '#/components/schemas/NotImplementedResponse_detail'
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1
            standard (RFC 7231)
          example: Not Implemented
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Unmapped Attribute
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#mappingerror
          type: string
        status_code:
          description: HTTP status code
          example: 501
          type: number
        type_name:
          description: The type of error returned
          example: MappingError
          type: string
      type: object
      x-apideck-schema-id: NotImplemented
    PassThroughQuery:
      additionalProperties: true
      example:
        search: San Francisco
      properties:
        example_downstream_property:
          description: "All passthrough query parameters are passed along to the connector\
            \ as is (?pass_through[search]=leads becomes ?search=leads)"
          type: string
      type: object
    Payment:
      additionalProperties: false
      example:
        note: Some notes about this payment
        display_id: "123456"
        created_at: 2020-09-30T07:43:32Z
        type: accounts_receivable
        custom_mappings: "{}"
        reference: "123456"
        currency_rate: 0.69
        allocations:
        - amount: 49.99
          code: N091
          id: "123456"
          type: invoice
        - amount: 49.99
          code: N091
          id: "123456"
          type: invoice
        updated_at: 2020-09-30T07:43:32Z
        supplier:
          address:
            country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          display_id: SUPP00101
          company_name: The boring company
          id: "12345"
          display_name: Windsurf Shop
        currency: USD
        downstream_id: "12345"
        id: "123456"
        payment_method: Credit Card
        transaction_date: 2021-05-01T12:00:00Z
        accounts_receivable_account_id: "123456"
        reconciled: true
        payment_method_reference: "123456"
        created_by: "12345"
        payment_method_id: "123456"
        accounts_receivable_account_type: Account
        total_amount: 49.99
        row_version: 1-12345
        updated_by: "12345"
        account:
          code: "453"
          nominal_code: N091
          name: Bank account
          id: "123456"
        customer:
          display_id: CUST00101
          company_name: The boring company
          name: Windsurf Shop
          id: "12345"
          display_name: Windsurf Shop
        status: authorised
      properties:
        account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        accounts_receivable_account_id:
          deprecated: true
          description: Unique identifier for the account to allocate payment to.
          example: "123456"
          nullable: true
          title: Accounts receivable account id
          type: string
        accounts_receivable_account_type:
          deprecated: true
          description: Type of accounts receivable account.
          example: Account
          nullable: true
          title: Type of accounts receivable account
          type: string
        allocations:
          items:
            $ref: '#/components/schemas/Payment_allocations_inner'
          title: allocations
          type: array
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        currency_rate:
          description: Currency Exchange Rate at the time entity was recorded/generated.
          example: 0.69
          nullable: true
          title: Currency Exchange Rate
          type: number
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: CustomMappings
          type: object
          x-apideck-schema-id: CustomMappings
        customer:
          $ref: '#/components/schemas/LinkedCustomer'
        display_id:
          description: Payment id to be displayed.
          example: "123456"
          nullable: true
          title: Display id
          type: string
        downstream_id:
          description: The third-party API ID of original entity
          example: "12345"
          nullable: true
          readOnly: true
          title: DownstreamId
          type: string
        id:
          description: Unique identifier representing the entity
          example: "123456"
          readOnly: true
          title: Payment identifier
          type: string
        note:
          description: Optional note to be associated with the payment.
          example: Some notes about this payment
          nullable: true
          title: Note
          type: string
        payment_method:
          description: Payment method name
          example: Credit Card
          nullable: true
          title: Payment method
          type: string
        payment_method_id:
          description: Unique identifier for the payment method.
          example: "123456"
          nullable: true
          title: Payment method id
          type: string
        payment_method_reference:
          description: Optional reference message returned by payment method on processing
          example: "123456"
          nullable: true
          title: Payment method reference
          type: string
        reconciled:
          description: Payment has been reconciled
          example: true
          title: Reconciled
          type: boolean
        reference:
          description: "Optional payment reference message ie: Debit remittance detail."
          example: "123456"
          nullable: true
          title: Payment reference
          type: string
        row_version:
          description: A binary value used to detect updates to a object and prevent
            data conflicts. It is incremented each time an update is made to the object.
          example: 1-12345
          nullable: true
          title: Row version
          type: string
        status:
          description: Status of payment
          enum:
          - authorised
          - paid
          - voided
          - deleted
          example: authorised
          title: Payment status
          type: string
          x-apideck-enum-id: payments.status
        supplier:
          $ref: '#/components/schemas/LinkedSupplier'
        total_amount:
          description: Amount of payment
          example: 49.99
          title: Total amount
          type: number
        transaction_date:
          description: Date transaction was entered - YYYY:MM::DDThh:mm:ss.sTZD
          example: 2021-05-01T12:00:00Z
          format: date-time
          title: Transaction datetime
          type: string
        type:
          description: Type of payment
          enum:
          - accounts_receivable
          - accounts_payable
          - accounts_receivable_credit
          - accounts_payable_credit
          - accounts_receivable_overpayment
          - accounts_payable_overpayment
          - accounts_receivable_prepayment
          - accounts_payable_prepayment
          example: accounts_receivable
          title: Payment Type
          type: string
          x-apideck-enum-id: payments.type
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
      required:
      - id
      - total_amount
      - transaction_date
      title: Payment
      type: object
      x-apideck-schema-id: Payment
      x-apideck-strict-required:
      - total_amount
      - transaction_date
      - allocations
      x-apideck-weights:
        account: critical
        accounts_receivable_account_id: edge-case
        accounts_receivable_account_type: edge-case
        allocations: critical
        created_at: medium
        created_by: edge-case
        currency: critical
        currency_rate: medium
        customer: high
        display_id: low
        downstream_id: medium
        id: critical
        note: low
        payment_method: medium
        payment_method_id: edge-case
        payment_method_reference: medium
        reconciled: low
        reference: medium
        row_version: edge-case
        status: high
        supplier: high
        total_amount: critical
        transaction_date: critical
        type: high
        updated_at: medium
        updated_by: edge-case
    PaymentMethod:
      description: "Payment method used for the transaction, such as cash, credit\
        \ card, bank transfer, or check"
      example: cash
      nullable: true
      title: Payment method
      type: string
    PaymentRequiredResponse:
      example:
        ref: https://developers.apideck.com/errors#requestlimiterror
        type_name: RequestLimitError
        status_code: 402
        detail: You have reached your limit of 2000
        error: Payment Required
        message: Request Limit Reached
      properties:
        detail:
          description: Contains parameter or domain specific information related to
            the error and why it occurred.
          example: You have reached your limit of 2000
          title: detail
          type: string
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1
            standard (RFC 7231)
          example: Payment Required
          title: error
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Request Limit Reached
          title: message
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#requestlimiterror
          title: ref
          type: string
        status_code:
          description: HTTP status code
          example: 402
          title: status_code
          type: number
        type_name:
          description: The type of error returned
          example: RequestLimitError
          title: type_name
          type: string
      title: PaymentRequiredResponse
      type: object
      x-apideck-schema-id: PaymentRequired
    PaymentsFilter:
      additionalProperties: false
      example:
        invoice_number: "456"
      properties:
        invoice_number:
          description: Invoice number for payments to filter on
          example: SpaceX
          title: Invoice number
          type: string
      type: object
      x-apideck-schema-id: PaymentsFilter
      x-graphql-type-name: PaymentsFilter
    PhoneNumber:
      additionalProperties: false
      example:
        country_code: "1"
        number: 111-111-1111
        extension: "105"
        area_code: "323"
        id: "12345"
        type: primary
      properties:
        area_code:
          description: "The area code of the phone number, e.g. 323"
          example: "323"
          nullable: true
          title: Area code
          type: string
        country_code:
          description: "The country code of the phone number, e.g. +1"
          example: "1"
          nullable: true
          title: Country code
          type: string
        extension:
          description: The extension of the phone number
          example: "105"
          nullable: true
          title: Phone extension
          type: string
        id:
          description: Unique identifier of the phone number
          example: "12345"
          nullable: true
          title: id
          type: string
        number:
          description: The phone number
          example: 111-111-1111
          minLength: 1
          title: Phone number
          type: string
        type:
          description: The type of phone number
          enum:
          - primary
          - secondary
          - home
          - work
          - office
          - mobile
          - assistant
          - fax
          - direct-dial-in
          - personal
          - other
          example: primary
          nullable: true
          title: type
          type: string
          x-apideck-enum-id: phone_numbers.type
      required:
      - number
      title: PhoneNumber
      type: object
      x-apideck-schema-id: PhoneNumber
      x-apideck-weights:
        area_code: edge-case
        country_code: edge-case
        extension: edge-case
        id: edge-case
        number: critical
        type: critical
    ProfitAndLoss:
      additionalProperties: false
      example:
        end_date: 2017-01-01
        income:
          records:
          - amount: 10000
            id: "123"
            name: Income 1
          - amount: 20000
            id: "456"
            name: Income 2
          total: 200000
        net_operating_income:
          total: 200000
        gross_profit:
          total: 200000
        currency: USD
        id: "12345"
        net_income:
          total: 200000
        customer_id: "123"
        report_name: ProfitAndLoss
        custom_mappings: "{}"
        expenses:
          records:
          - amount: 10000
            id: "123"
            name: Expense 1
          - amount: 20000
            id: "456"
            name: Expense 2
          total: 200000
        start_date: 2017-01-01
      properties:
        currency:
          example: USD
          title: Currency
          type: string
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: CustomMappings
          type: object
          x-apideck-schema-id: CustomMappings
        customer_id:
          description: Customer id
          example: "123"
          title: Customer Id
          type: string
        end_date:
          description: The start date of the report
          example: 2017-01-01
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          title: Start Date
          type: string
        expenses:
          $ref: '#/components/schemas/ProfitAndLoss_expenses'
        gross_profit:
          $ref: '#/components/schemas/ProfitAndLoss_gross_profit'
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        income:
          $ref: '#/components/schemas/ProfitAndLoss_income'
        net_income:
          $ref: '#/components/schemas/ProfitAndLoss_net_income'
        net_operating_income:
          $ref: '#/components/schemas/ProfitAndLoss_net_operating_income'
        report_name:
          description: The name of the report
          example: ProfitAndLoss
          title: Report Name
          type: string
        start_date:
          description: The start date of the report
          example: 2017-01-01
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          title: Start Date
          type: string
      required:
      - currency
      - expenses
      - income
      - report_name
      title: ProfitAndLoss
      type: object
      x-apideck-circular-ref: true
      x-apideck-schema-id: ProfitAndLoss
      x-apideck-weights:
        currency: critical
        customer: low
        end_date: low
        expenses: critical
        gross_profit: medium
        id: medium
        income: critical
        net_income: medium
        net_operating_income: medium
        report_name: medium
        start_date: low
    ProfitAndLossFilter:
      additionalProperties: false
      example:
        customer_id: 123abc
        end_date: 2021-12-31
        start_date: 2021-01-01
      properties:
        customer_id:
          description: Filter by customer id
          example: 123abc
          title: Customer Id
          type: string
        end_date:
          description: "Filter by end date. If end date is given, start date is required."
          example: 2021-12-31
          title: End date
          type: string
        start_date:
          description: "Filter by start date. If start date is given, end date is\
            \ required."
          example: 2021-01-01
          title: Start date
          type: string
      type: object
      x-apideck-schema-id: ProfitAndLossFilter
    ProfitAndLossRecord:
      example:
        type: Record
      properties:
        id:
          example: 123abc
          nullable: true
          type: string
        title:
          example: Income
          nullable: true
          type: string
        type:
          example: Record
          type: string
        value:
          example: 23992.34
          nullable: true
          type: number
      required:
      - type
      title: ProfitAndLossRecord
      type: object
      x-apideck-schema-id: ProfitAndLossRecord
      x-apideck-weights:
        type: critical
    ProfitAndLossRecords:
      items:
        $ref: '#/components/schemas/ProfitAndLossRecords_inner'
      nullable: true
      type: array
      x-apideck-schema-id: ProfitAndLossRecords
    ProfitAndLossSection:
      example:
        total: 200000
      properties:
        id:
          example: 123abc
          nullable: true
          type: string
        records:
          items:
            $ref: '#/components/schemas/ProfitAndLossRecords_inner'
          nullable: true
          type: array
          x-apideck-schema-id: ProfitAndLossRecords
        title:
          example: Income
          nullable: true
          type: string
        total:
          example: 23992.34
          nullable: true
          type: number
        type:
          example: Section
          type: string
      required:
      - type
      title: ProfitAndLossSection
      type: object
      x-apideck-schema-id: ProfitAndLossSection
      x-apideck-weights:
        id: medium
        records: medium
        title: medium
        total: medium
        type: critical
    PurchaseOrder:
      additionalProperties: false
      example:
        channel: email
        created_at: 2020-09-30T07:43:32Z
        memo: Thank you for the partnership and have a great day!
        discount_percentage: 5.5
        line_items:
        - tax_amount: 27500
          item:
            code: 120-C
            name: Model Y
            id: "12344"
          code: 120-C
          quantity: 1
          department_id: "1234"
          discount_amount: 19.99
          created_at: 2020-09-30T07:43:32Z
          description: "Model Y is a fully electric, mid-size SUV, with seating for\
            \ up to seven, dual motor AWD and unparalleled protection."
          discount_percentage: 0.01
          type: sales_item
          unit_price: 27500.5
          created_by: "12345"
          location_id: "1234"
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          custom_mappings: "{}"
          updated_at: 2020-09-30T07:43:32Z
          total_amount: 27500
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          line_number: 1
          row_version: 1-12345
          updated_by: "12345"
          unit_of_measure: pc.
          id: "12345"
          row_id: "12345"
        - tax_amount: 27500
          item:
            code: 120-C
            name: Model Y
            id: "12344"
          code: 120-C
          quantity: 1
          department_id: "1234"
          discount_amount: 19.99
          created_at: 2020-09-30T07:43:32Z
          description: "Model Y is a fully electric, mid-size SUV, with seating for\
            \ up to seven, dual motor AWD and unparalleled protection."
          discount_percentage: 0.01
          type: sales_item
          unit_price: 27500.5
          created_by: "12345"
          location_id: "1234"
          tax_rate:
            code: N-T
            rate: 10
            name: GST on Purchases
            id: "123456"
          custom_mappings: "{}"
          updated_at: 2020-09-30T07:43:32Z
          total_amount: 27500
          ledger_account:
            code: "453"
            nominal_code: N091
            name: Bank account
            id: "123456"
          line_number: 1
          row_version: 1-12345
          updated_by: "12345"
          unit_of_measure: pc.
          id: "12345"
          row_id: "12345"
        custom_mappings: "{}"
        expected_arrival_date: 2020-09-30
        reference: "123456"
        currency_rate: 0.69
        po_number: "90000117"
        total: 27500
        issued_date: 2020-09-30
        updated_at: 2020-09-30T07:43:32Z
        ledger_account:
          code: "453"
          nominal_code: N091
          name: Bank account
          id: "123456"
        supplier:
          address:
            country: US
            contact_name: Elon Musk
            website: https://elonmusk.com
            line4: delivery instructions
            notes: Address notes or delivery instructions.
            string: "25 Spring Street, Blackburn, VIC 3130"
            city: San Francisco
            latitude: "40.759211"
            county: Santa Clara
            type: primary
            row_version: 1-12345
            name: HQ US
            street_number: "25"
            phone_number: 111-111-1111
            id: "123"
            salutation: Mr
            state: CA
            fax: 122-111-1111
            line3: "Suite #"
            postal_code: "94104"
            line2: "apt #"
            email: elon@musk.com
            line1: Main street
            longitude: "-73.984638"
          display_id: SUPP00101
          company_name: The boring company
          id: "12345"
          display_name: Windsurf Shop
        currency: USD
        downstream_id: "12345"
        id: "12345"
        shipping_address:
          country: US
          contact_name: Elon Musk
          website: https://elonmusk.com
          line4: delivery instructions
          notes: Address notes or delivery instructions.
          string: "25 Spring Street, Blackburn, VIC 3130"
          city: San Francisco
          latitude: "40.759211"
          county: Santa Clara
          type: primary
          row_version: 1-12345
          name: HQ US
          street_number: "25"
          phone_number: 111-111-1111
          id: "123"
          salutation: Mr
          state: CA
          fax: 122-111-1111
          line3: "Suite #"
          postal_code: "94104"
          line2: "apt #"
          email: elon@musk.com
          line1: Main street
          longitude: "-73.984638"
        payment_method: cash
        accounting_by_row: false
        bank_account:
          bsb_number: 062-001
          account_number: "123465"
          bank_code: BNH
          account_type: credit_card
          account_name: SPACEX LLC
          iban: CH2989144532982975332
          bank_name: Monzo
          currency: USD
          routing_number: "012345678"
          bic: AUDSCHGGXXX
          branch_identifier: "001"
        due_date: 2020-10-30
        tax_inclusive: true
        total_tax: 2500
        created_by: "12345"
        delivery_date: 2020-09-30
        tax_code: "1234"
        row_version: 1-12345
        sub_total: 27500
        updated_by: "12345"
        template_id: "123456"
        status: open
      properties:
        accounting_by_row:
          description: Indicates if accounting by row is used (true) or not (false).
            Accounting by row means that a separate ledger transaction is created
            for each row.
          example: false
          nullable: true
          title: Accounting by Row
          type: boolean
        bank_account:
          $ref: '#/components/schemas/BankAccount'
        channel:
          description: The channel through which the transaction is processed.
          example: email
          nullable: true
          title: Channel
          type: string
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        currency_rate:
          description: Currency Exchange Rate at the time entity was recorded/generated.
          example: 0.69
          nullable: true
          title: Currency Exchange Rate
          type: number
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: CustomMappings
          type: object
          x-apideck-schema-id: CustomMappings
        delivery_date:
          description: The date on which the purchase order is to be delivered - YYYY-MM-DD.
          example: 2020-09-30
          format: date
          nullable: true
          title: Delivery date
          type: string
        discount_percentage:
          description: Discount percentage applied to this transaction.
          example: 5.5
          nullable: true
          title: Discount Percentage
          type: number
        downstream_id:
          description: The third-party API ID of original entity
          example: "12345"
          nullable: true
          readOnly: true
          title: DownstreamId
          type: string
        due_date:
          description: The due date is the date on which a payment is scheduled to
            be received - YYYY-MM-DD.
          example: 2020-10-30
          format: date
          title: Due date
          type: string
        expected_arrival_date:
          description: The date on which the order is expected to arrive - YYYY-MM-DD.
          example: 2020-09-30
          format: date
          nullable: true
          title: Expected arrival date
          type: string
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        issued_date:
          description: Date purchase order was issued - YYYY-MM-DD.
          example: 2020-09-30
          format: date
          nullable: true
          title: Posted date
          type: string
        ledger_account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        line_items:
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
          title: line_items
          type: array
        memo:
          description: Message for the supplier. This text appears on the Purchase
            Order.
          example: Thank you for the partnership and have a great day!
          nullable: true
          title: Memo
          type: string
        payment_method:
          description: "Payment method used for the transaction, such as cash, credit\
            \ card, bank transfer, or check"
          example: cash
          nullable: true
          title: Payment method
          type: string
        po_number:
          description: A PO Number uniquely identifies a purchase order and is generally
            defined by the buyer.
          example: "90000117"
          nullable: true
          title: Purchase Order number
          type: string
        reference:
          description: Optional purchase order reference.
          example: "123456"
          nullable: true
          title: Purchase order reference
          type: string
        row_version:
          description: A binary value used to detect updates to a object and prevent
            data conflicts. It is incremented each time an update is made to the object.
          example: 1-12345
          nullable: true
          title: Row version
          type: string
        shipping_address:
          $ref: '#/components/schemas/Address'
        status:
          enum:
          - draft
          - open
          - closed
          - deleted
          - billed
          - other
          example: open
          nullable: true
          title: Purchase order status
          type: string
          x-apideck-enum-id: purchase-orders.status
        sub_total:
          description: "Sub-total amount, normally before tax."
          example: 27500
          nullable: true
          title: Sub-total amount
          type: number
        supplier:
          $ref: '#/components/schemas/LinkedSupplier'
        tax_code:
          description: Applicable tax id/code override if tax is not supplied on a
            line item basis.
          example: "1234"
          nullable: true
          title: Tax Code
          type: string
        tax_inclusive:
          description: Amounts are including tax
          example: true
          nullable: true
          title: Tax inclusive
          type: boolean
        template_id:
          description: Optional purchase order template
          example: "123456"
          nullable: true
          title: Template
          type: string
        total:
          description: "Total amount of invoice, including tax."
          example: 27500
          nullable: true
          title: Total amount
          type: number
        total_tax:
          description: Total tax amount applied to this invoice.
          example: 2500
          nullable: true
          title: Total tax amount
          type: number
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
      title: PurchaseOrder
      type: object
      x-apideck-schema-id: PurchaseOrder
      x-apideck-weights:
        accounting_by_row: edge-case
        bank_account: low
        channel: low
        created_at: high
        created_by: low
        currency: medium
        currency_rate: low
        delivery_date: medium
        discount_percentage: low
        downstream_id: low
        due_date: low
        expected_arrival_date: medium
        id: critical
        issued_date: edge-case
        ledger_account: edge-case
        line_items: critical
        memo: low
        payment_method: low
        po_number: low
        reference: low
        row_version: edge-case
        shipping_address: medium
        status: critical
        sub_total: high
        supplier: high
        tax_code: medium
        tax_inclusive: low
        template_id: low
        total: critical
        total_tax: high
        updated_at: high
        updated_by: low
    Quantity:
      example: 1
      nullable: true
      title: Quantity
      type: number
    RowVersion:
      description: A binary value used to detect updates to a object and prevent data
        conflicts. It is incremented each time an update is made to the object.
      example: 1-12345
      nullable: true
      title: Row version
      type: string
    SalesTaxNumber:
      example: 111.222.333
      nullable: true
      title: Sales Tax Number
      type: string
    SocialLink:
      additionalProperties: false
      properties:
        id:
          description: Unique identifier of the social link
          example: "12345"
          nullable: true
          title: id
          type: string
        type:
          description: "Type of the social link, e.g. twitter"
          example: twitter
          nullable: true
          title: type
          type: string
        url:
          description: "URL of the social link, e.g. https://www.twitter.com/apideck"
          example: https://www.twitter.com/apideck
          minLength: 1
          title: url
          type: string
      required:
      - url
      title: SocialLink
      type: object
      x-apideck-schema-id: SocialLink
      x-apideck-weights:
        id: edge-case
        type: critical
        url: critical
    SortDirection:
      default: asc
      description: The direction in which to sort the results
      enum:
      - asc
      - desc
      title: SortDirection
      type: string
      x-apideck-enum-id: sort_direction
      x-apideck-schema-id: SortDirection
    Suffix:
      example: Jr.
      nullable: true
      title: Suffix
      type: string
    Supplier:
      additionalProperties: false
      example:
        addresses:
        - country: US
          contact_name: Elon Musk
          website: https://elonmusk.com
          line4: delivery instructions
          notes: Address notes or delivery instructions.
          string: "25 Spring Street, Blackburn, VIC 3130"
          city: San Francisco
          latitude: "40.759211"
          county: Santa Clara
          type: primary
          row_version: 1-12345
          name: HQ US
          street_number: "25"
          phone_number: 111-111-1111
          id: "123"
          salutation: Mr
          state: CA
          fax: 122-111-1111
          line3: "Suite #"
          postal_code: "94104"
          line2: "apt #"
          email: elon@musk.com
          line1: Main street
          longitude: "-73.984638"
        - country: US
          contact_name: Elon Musk
          website: https://elonmusk.com
          line4: delivery instructions
          notes: Address notes or delivery instructions.
          string: "25 Spring Street, Blackburn, VIC 3130"
          city: San Francisco
          latitude: "40.759211"
          county: Santa Clara
          type: primary
          row_version: 1-12345
          name: HQ US
          street_number: "25"
          phone_number: 111-111-1111
          id: "123"
          salutation: Mr
          state: CA
          fax: 122-111-1111
          line3: "Suite #"
          postal_code: "94104"
          line2: "apt #"
          email: elon@musk.com
          line1: Main street
          longitude: "-73.984638"
        notes: Some notes about this supplier
        display_id: EMP00101
        channel: email
        created_at: 2020-09-30T07:43:32Z
        suffix: Jr.
        title: CEO
        tax_rate:
          code: N-T
          rate: 10
          name: GST on Purchases
          id: "123456"
        custom_mappings: "{}"
        emails:
        - id: "123"
          type: primary
          email: elon@musk.com
        - id: "123"
          type: primary
          email: elon@musk.com
        updated_at: 2020-09-30T07:43:32Z
        tax_number: US123945459
        currency: USD
        downstream_id: "12345"
        id: "12345"
        first_name: Elon
        payment_method: cash
        individual: true
        last_name: Musk
        display_name: Windsurf Shop
        middle_name: D.
        created_by: "12345"
        phone_numbers:
        - country_code: "1"
          number: 111-111-1111
          extension: "105"
          area_code: "323"
          id: "12345"
          type: primary
        - country_code: "1"
          number: 111-111-1111
          extension: "105"
          area_code: "323"
          id: "12345"
          type: primary
        company_name: SpaceX
        row_version: 1-12345
        updated_by: "12345"
        websites:
        - id: "12345"
          type: primary
          url: http://example.com
        - id: "12345"
          type: primary
          url: http://example.com
        bank_accounts:
        - bsb_number: 062-001
          account_number: "123465"
          bank_code: BNH
          account_type: credit_card
          account_name: SPACEX LLC
          iban: CH2989144532982975332
          bank_name: Monzo
          currency: USD
          routing_number: "012345678"
          bic: AUDSCHGGXXX
          branch_identifier: "001"
        - bsb_number: 062-001
          account_number: "123465"
          bank_code: BNH
          account_type: credit_card
          account_name: SPACEX LLC
          iban: CH2989144532982975332
          bank_name: Monzo
          currency: USD
          routing_number: "012345678"
          bic: AUDSCHGGXXX
          branch_identifier: "001"
        account:
          code: "453"
          nominal_code: N091
          name: Bank account
          id: "123456"
        status: active
      properties:
        account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        addresses:
          items:
            $ref: '#/components/schemas/Address'
          title: addresses
          type: array
        bank_accounts:
          items:
            $ref: '#/components/schemas/BankAccount'
          title: bank_accounts
          type: array
        channel:
          description: The channel through which the transaction is processed.
          example: email
          nullable: true
          title: Channel
          type: string
        company_name:
          description: The name of the company.
          example: SpaceX
          nullable: true
          title: Company name
          type: string
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: CustomMappings
          type: object
          x-apideck-schema-id: CustomMappings
        display_id:
          description: Display ID
          example: EMP00101
          nullable: true
          title: Display ID
          type: string
        display_name:
          description: Display name
          example: Windsurf Shop
          nullable: true
          title: Display Name
          type: string
        downstream_id:
          description: The third-party API ID of original entity
          example: "12345"
          nullable: true
          readOnly: true
          title: DownstreamId
          type: string
        emails:
          items:
            $ref: '#/components/schemas/Email'
          title: emails
          type: array
        first_name:
          description: The first name of the person.
          example: Elon
          nullable: true
          title: First name
          type: string
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        individual:
          description: Is this an individual or business supplier
          example: true
          nullable: true
          title: Is individual
          type: boolean
        last_name:
          description: The last name of the person.
          example: Musk
          nullable: true
          title: Last name
          type: string
        middle_name:
          description: Middle name of the person.
          example: D.
          nullable: true
          title: Middle name
          type: string
        notes:
          description: Some notes about this supplier
          example: Some notes about this supplier
          nullable: true
          title: Notes
          type: string
        payment_method:
          description: "Payment method used for the transaction, such as cash, credit\
            \ card, bank transfer, or check"
          example: cash
          nullable: true
          title: Payment method
          type: string
        phone_numbers:
          items:
            $ref: '#/components/schemas/PhoneNumber'
          title: phone_numbers
          type: array
        row_version:
          description: A binary value used to detect updates to a object and prevent
            data conflicts. It is incremented each time an update is made to the object.
          example: 1-12345
          nullable: true
          title: Row version
          type: string
        status:
          description: Supplier status
          enum:
          - active
          - inactive
          - archived
          - gdpr-erasure-request
          - unknown
          example: active
          nullable: true
          title: Status
          type: string
          x-apideck-enum-id: suppliers.status
        suffix:
          example: Jr.
          nullable: true
          title: Suffix
          type: string
        tax_number:
          example: US123945459
          nullable: true
          title: Tax number
          type: string
        tax_rate:
          $ref: '#/components/schemas/LinkedTaxRate'
        title:
          description: The job title of the person.
          example: CEO
          nullable: true
          title: Job title
          type: string
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
        websites:
          items:
            $ref: '#/components/schemas/Website'
          title: websites
          type: array
      required:
      - id
      title: Supplier
      type: object
      x-apideck-schema-id: Supplier
      x-apideck-strict-any-of:
      - required:
        - first_name
        - last_name
      - required:
        - company_name
      x-apideck-strict-required:
      - emails
      - addresses
      - phone_numbers
      - status
      - updated_at
      x-apideck-weights:
        account: medium
        addresses: high
        bank_accounts: high
        channel: edge-case
        company_name: high
        created_at: medium
        created_by: edge-case
        currency: medium
        display_id: edge-case
        display_name: edge-case
        downstream_id: edge-case
        emails: high
        first_name: high
        id: critical
        individual: medium
        last_name: high
        middle_name: low
        notes: low
        payment_method: edge-case
        phone_numbers: high
        row_version: edge-case
        status: high
        suffix: low
        tax_number: medium
        tax_rate: medium
        title: high
        updated_at: medium
        updated_by: edge-case
        websites: medium
    SuppliersFilter:
      additionalProperties: false
      example:
        company_name: SpaceX
        display_name: Elon Musk
        email: elon@musk.com
        first_name: Elon
        last_name: Musk
      properties:
        company_name:
          description: Company Name of supplier to search for
          example: SpaceX
          title: Company Name
          type: string
        display_name:
          description: Display Name of supplier to search for
          example: Techno King
          title: Display Name
          type: string
        email:
          description: Email of supplier to search for
          example: elon@spacex.com
          title: Email
          type: string
        first_name:
          description: First name of supplier to search for
          example: Elon
          title: First Name
          type: string
        last_name:
          description: Last name of supplier to search for
          example: Musk
          title: Last Name
          type: string
      type: object
      x-apideck-schema-id: SuppliersFilter
    Tags:
      example:
      - New
      items:
        type: string
      nullable: true
      type: array
      x-apideck-schema-id: Tags
    TaxCode:
      description: Applicable tax id/code override if tax is not supplied on a line
        item basis.
      example: "1234"
      nullable: true
      title: Tax Code
      type: string
    TaxInclusive:
      description: Amounts are including tax
      example: true
      nullable: true
      title: Tax inclusive
      type: boolean
    TaxNumber:
      example: US123945459
      nullable: true
      title: Tax number
      type: string
    TaxRate:
      additionalProperties: false
      example:
        components:
        - rate: 10
          name: GST
          id: "10"
          compound: true
        - rate: 10
          name: GST
          id: "10"
          compound: true
        code: ABN
        created_at: 2020-09-30T07:43:32Z
        description: Reduced rate GST Purchases
        type: NONE
        created_by: "12345"
        custom_mappings: "{}"
        original_tax_rate_id: "12345"
        tax_remitted_account_id: "123456"
        tax_payable_account_id: "123456"
        updated_at: 2020-09-30T07:43:32Z
        report_tax_type: NONE
        row_version: 1-12345
        name: GST on Purchases
        updated_by: "12345"
        id: "1234"
        effective_tax_rate: 10
        total_tax_rate: 10
        status: active
      properties:
        code:
          description: Tax code assigned to identify this tax rate.
          example: ABN
          nullable: true
          title: Tax code
          type: string
        components:
          items:
            $ref: '#/components/schemas/Tax_components_inner'
          nullable: true
          title: Tax components
          type: array
        created_at:
          description: The date and time when the object was created.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          description: The user who created the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        custom_mappings:
          description: "When custom mappings are configured on the resource, the result\
            \ is included here."
          nullable: true
          title: CustomMappings
          type: object
          x-apideck-schema-id: CustomMappings
        description:
          description: Description of tax rate
          example: Reduced rate GST Purchases
          nullable: true
          title: Description
          type: string
        effective_tax_rate:
          description: Effective tax rate
          example: 10
          nullable: true
          title: Effective tax rate
          type: number
        id:
          description: ID assigned to identify this tax rate.
          example: "1234"
          nullable: true
          title: id
          type: string
        name:
          description: Name assigned to identify this tax rate.
          example: GST on Purchases
          minLength: 1
          title: Name
          type: string
        original_tax_rate_id:
          description: ID of the original tax rate from which the new tax rate is
            derived. Helps to understand the relationship between corresponding tax
            rate entities.
          example: "12345"
          nullable: true
          title: Original tax rate ID
          type: string
        report_tax_type:
          description: Report Tax type to aggregate tax collected or paid for reporting
            purposes
          example: NONE
          nullable: true
          title: Report Tax Type
          type: string
        row_version:
          description: A binary value used to detect updates to a object and prevent
            data conflicts. It is incremented each time an update is made to the object.
          example: 1-12345
          nullable: true
          title: Row version
          type: string
        status:
          description: Tax rate status
          enum:
          - active
          - inactive
          - archived
          example: active
          nullable: true
          title: Tax rate status
          type: string
          x-apideck-enum-id: tax-rates.status
        tax_payable_account_id:
          description: Unique identifier for the account for tax collected.
          example: "123456"
          nullable: true
          title: Tax payable account id
          type: string
        tax_remitted_account_id:
          description: Unique identifier for the account for tax remitted.
          example: "123456"
          nullable: true
          title: Tax remitted account id
          type: string
        total_tax_rate:
          description: Not compounded sum of the components of a tax rate
          example: 10
          nullable: true
          title: Total tax rate
          type: number
        type:
          description: Tax type used to indicate the source of tax collected or paid
          example: NONE
          nullable: true
          title: Tax Type
          type: string
        updated_at:
          description: The date and time when the object was last updated.
          example: 2020-09-30T07:43:32Z
          format: date-time
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          description: The user who last updated the object.
          example: "12345"
          nullable: true
          readOnly: true
          title: Updated by
          type: string
      title: TaxRate
      type: object
      x-apideck-schema-id: TaxRate
      x-apideck-strict-any-of:
      - required:
        - id
      - required:
        - name
      - required:
        - code
      x-apideck-strict-required:
      - effective_tax_rate
      x-apideck-weights:
        code: edge-case
        components: medium
        created_at: low
        created_by: edge-case
        description: low
        effective_tax_rate: critical
        id: critical
        name: high
        original_tax_rate_id: edge-case
        report_tax_type: edge-case
        row_version: edge-case
        status: high
        tax_payable_account_id: high
        tax_remitted_account_id: medium
        total_tax_rate: high
        type: high
        updated_at: medium
        updated_by: edge-case
    TaxRatesFilter:
      additionalProperties: false
      example:
        assets: true
        equity: true
        expenses: true
        liabilities: true
        revenue: true
      properties:
        assets:
          description: Boolean to describe if tax rate can be used for asset accounts
          example: true
          title: Assets
          type: boolean
        equity:
          description: Boolean to describe if tax rate can be used for equity accounts
          example: true
          title: Equity
          type: boolean
        expenses:
          description: Boolean to describe if tax rate can be used for expense accounts
          example: true
          title: Expenses
          type: boolean
        liabilities:
          description: Boolean to describe if tax rate can be used for liability accounts
          example: true
          title: Liabilities
          type: boolean
        revenue:
          description: Boolean to describe if tax rate can be used for revenue accounts
          example: true
          title: Revenue
          type: boolean
      type: object
      x-apideck-schema-id: TaxRatesFilter
    Title:
      description: The job title of the person.
      example: CEO
      nullable: true
      title: Job title
      type: string
    TooManyRequestsResponse:
      properties:
        detail:
          $ref: '#/components/schemas/TooManyRequestsResponse_detail'
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1
            standard (RFC 6585)
          example: Too Many Requests
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Connector Rate Limit Error
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#connectorratelimiterror
          type: string
        status_code:
          description: HTTP status code
          example: 429
          type: number
        type_name:
          description: The type of error returned
          example: ConnectorRateLimitError
          type: string
      type: object
      x-apideck-schema-id: TooManyRequests
    UnauthorizedResponse:
      example:
        ref: https://developers.apideck.com/errors#unauthorizederror
        type_name: UnauthorizedError
        status_code: 401
        detail: Failed to generate valid JWT Session. Verify applicationId is correct
        error: Unauthorized
        message: Unauthorized Request
      properties:
        detail:
          description: Contains parameter or domain specific information related to
            the error and why it occurred.
          example: Failed to generate valid JWT Session. Verify applicationId is correct
          title: detail
          type: string
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1
            standard (RFC 7231)
          example: Unauthorized
          title: error
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Unauthorized Request
          title: message
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#unauthorizederror
          title: ref
          type: string
        status_code:
          description: HTTP status code
          example: 401
          title: status_code
          type: number
        type_name:
          description: The type of error returned
          example: UnauthorizedError
          title: type_name
          type: string
      title: UnauthorizedResponse
      type: object
      x-apideck-schema-id: Unauthorized
    UnexpectedErrorResponse:
      example:
        ref: https://developers.apideck.com/errors#unauthorizederror
        type_name: RequestHeadersValidationError
        status_code: 400
        detail: "Missing Header: x-apideck-consumer-id"
        error: Bad Request
        message: Invalid Params
      properties:
        detail:
          $ref: '#/components/schemas/UnexpectedErrorResponse_detail'
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1
            standard (RFC 7231)
          example: Bad Request
          title: error
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Invalid Params
          title: message
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#unauthorizederror
          title: ref
          type: string
        status_code:
          description: HTTP status code
          example: 400
          title: status_code
          type: number
        type_name:
          description: The type of error returned
          example: RequestHeadersValidationError
          title: type_name
          type: string
      title: UnexpectedErrorResponse
      type: object
      x-apideck-schema-id: Error
    UnifiedId:
      example:
        id: "12345"
      properties:
        id:
          description: The unique identifier of the resource
          example: "12345"
          readOnly: true
          title: Id
          type: string
      required:
      - id
      title: UnifiedId
      type: object
      x-apideck-schema-id: Id
    UnitOfMeasure:
      description: "Description of the unit type the item is sold as, ie: kg, hour."
      example: pc.
      nullable: true
      title: Unit of measure
      type: string
    UnitPrice:
      example: 27500.5
      nullable: true
      title: Unit price
      type: number
    UnprocessableResponse:
      example:
        ref: https://developers.apideck.com/errors#invalidstateerror
        type_name: InvalidStateError
        status_code: 422
        detail: "Unprocessable request, please verify your request headers and body."
        error: Unprocessable Entity
        message: Invalid State
      properties:
        detail:
          description: Contains parameter or domain specific information related to
            the error and why it occurred.
          example: "Unprocessable request, please verify your request headers and\
            \ body."
          title: detail
          type: string
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1
            standard (RFC 7231)
          example: Unprocessable Entity
          title: error
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Invalid State
          title: message
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#invalidstateerror
          title: ref
          type: string
        status_code:
          description: HTTP status code
          example: 422
          title: status_code
          type: number
        type_name:
          description: The type of error returned
          example: InvalidStateError
          title: type_name
          type: string
      title: UnprocessableResponse
      type: object
      x-apideck-schema-id: Unprocessable
    UpdateBillResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: bills
        service: xero
        operation: update
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: update
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: bills
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: UpdateBillResponse
      type: object
      x-apideck-schema-id: UpdateBillResponse
    UpdateCreditNoteResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: credit-notes
        service: xero
        operation: update
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: update
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: credit-notes
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: UpdateCreditNoteResponse
      type: object
      x-apideck-schema-id: UpdateCreditNoteResponse
    UpdateCustomerResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: customers
        service: xero
        operation: update
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: update
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: customers
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: UpdateCustomerResponse
      type: object
      x-apideck-schema-id: UpdateCustomerResponse
    UpdateInvoiceItemsResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: invoice-items
        service: xero
        operation: update
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: update
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: invoice-items
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: UpdateInvoiceItemsResponse
      type: object
      x-apideck-schema-id: UpdateInvoiceItemsResponse
    UpdateInvoiceResponse:
      example:
        status_code: 200
        data:
          downstream_id: "12345"
          id: "12345"
        resource: invoices
        service: xero
        operation: update
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/InvoiceResponse'
        operation:
          description: Operation performed
          example: update
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: invoices
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: UpdateInvoiceResponse
      type: object
      x-apideck-schema-id: UpdateInvoiceResponse
    UpdateJournalEntryResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: journal-entries
        service: quickbooks
        operation: update
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: update
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: journal-entries
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: quickbooks
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: UpdateJournalEntryResponse
      type: object
    UpdateLedgerAccountResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: ledger-accounts
        service: xero
        operation: update
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: update
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: ledger-accounts
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: UpdateLedgerAccountResponse
      type: object
      x-apideck-schema-id: UpdateLedgerAccountResponse
    UpdatePaymentResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: payments
        service: xero
        operation: update
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: update
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: payments
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: UpdatePaymentResponse
      type: object
      x-apideck-schema-id: UpdatePaymentResponse
    UpdatePurchaseOrderResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: PurchaseOrders
        service: quickbooks
        operation: update
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: update
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: PurchaseOrders
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: quickbooks
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: UpdatePurchaseOrderResponse
      type: object
    UpdateSupplierResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: suppliers
        service: xero
        operation: update
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: update
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: suppliers
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: UpdateSupplierResponse
      type: object
      x-apideck-schema-id: UpdateSupplierResponse
    UpdateTaxRateResponse:
      example:
        status_code: 200
        data:
          id: "12345"
        resource: tax-rates
        service: xero
        operation: update
        status: OK
      properties:
        data:
          $ref: '#/components/schemas/UnifiedId'
        operation:
          description: Operation performed
          example: update
          title: operation
          type: string
        resource:
          description: Unified API resource name
          example: tax-rates
          title: resource
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          title: service
          type: string
        status:
          description: HTTP Response Status
          example: OK
          title: status
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          title: status_code
          type: integer
      required:
      - data
      - operation
      - resource
      - service
      - status
      - status_code
      title: UpdateTaxRateResponse
      type: object
      x-apideck-schema-id: UpdateTaxRateResponse
    UpdatedAt:
      description: The date and time when the object was last updated.
      example: 2020-09-30T07:43:32Z
      format: date-time
      nullable: true
      readOnly: true
      title: Updated at (timestamp)
      type: string
    UpdatedBy:
      description: The user who last updated the object.
      example: "12345"
      nullable: true
      readOnly: true
      title: Updated by
      type: string
    Website:
      additionalProperties: false
      example:
        id: "12345"
        type: primary
        url: http://example.com
      properties:
        id:
          description: Unique identifier for the website
          example: "12345"
          nullable: true
          title: id
          type: string
        type:
          description: The type of website
          enum:
          - primary
          - secondary
          - work
          - personal
          - other
          example: primary
          nullable: true
          title: type
          type: string
          x-apideck-enum-id: websites.type
        url:
          description: The website URL
          example: http://example.com
          minLength: 1
          title: url
          type: string
      required:
      - url
      title: Website
      type: object
      x-apideck-schema-id: Website
      x-apideck-weights:
        id: edge-case
        type: critical
        url: critical
    BadRequestResponse_detail:
      anyOf:
      - example: Missing property foobar
        type: string
      - example:
          missing:
          - foobar: required
        type: object
      description: Contains parameter or domain specific information related to the
        error and why it occurred.
      title: BadRequestResponse_detail
    BalanceSheet_assets_current_assets_accounts_inner:
      properties:
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        name:
          description: The name of the current asset account
          example: Accounts Receivable (A/R)
          title: Account Name
          type: string
        value:
          description: The value of the current asset
          example: 10000
          title: Value
          type: number
      title: BalanceSheet_assets_current_assets_accounts_inner
      type: object
    BalanceSheet_assets_current_assets:
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/BalanceSheet_assets_current_assets_accounts_inner'
          title: accounts
          type: array
        total:
          description: Total current assets
          example: 100000
          title: Total Current Assets
          type: number
      required:
      - accounts
      - total
      title: BalanceSheet_assets_current_assets
      type: object
      x-apideck-weights:
        accounts: medium
        total: medium
    BalanceSheet_assets_fixed_assets_accounts_inner:
      properties:
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        name:
          description: The name of the fixed asset account
          example: Accounts Receivable (A/R)
          title: Account Name
          type: string
        value:
          description: The value of the fixed asset
          example: 10000
          title: Value
          type: number
      title: BalanceSheet_assets_fixed_assets_accounts_inner
      type: object
      x-apideck-weights:
        id: medium
        name: medium
        value: medium
    BalanceSheet_assets_fixed_assets:
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/BalanceSheet_assets_fixed_assets_accounts_inner'
          title: accounts
          type: array
        total:
          description: Total fixed assets
          example: 100000
          title: Total Fixed Assets
          type: number
      required:
      - accounts
      - total
      title: BalanceSheet_assets_fixed_assets
      type: object
      x-apideck-weights:
        accounts: medium
        total: medium
    BalanceSheet_assets:
      example:
        current_assets:
          accounts:
          - id: "1"
            name: Accounts Receivable (A/R)
            value: 10000
          - id: "2"
            name: Accounts Payable (A/P)
            value: 10000
          total: 100000
        fixed_assets:
          accounts:
          - id: "1"
            name: Accounts Receivable (A/R)
            value: 10000
          - id: "2"
            name: Accounts Payable (A/P)
            value: 10000
          total: 100000
        total: 200000
      properties:
        current_assets:
          $ref: '#/components/schemas/BalanceSheet_assets_current_assets'
        fixed_assets:
          $ref: '#/components/schemas/BalanceSheet_assets_fixed_assets'
        total:
          description: Total assets
          example: 100000
          title: Total Assets
          type: number
      required:
      - current_assets
      - fixed_assets
      - total
      title: BalanceSheet_assets
      type: object
      x-apideck-weights:
        current_assets: medium
        fixed_assets: medium
        total: medium
    BalanceSheet_equity_items_inner:
      properties:
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        name:
          description: The type of the equity
          example: Retained Earnings
          title: Account Name
          type: string
        value:
          description: The equity amount
          example: 10000
          title: Value
          type: number
      title: BalanceSheet_equity_items_inner
      type: object
      x-apideck-weights:
        id: medium
        name: medium
        value: medium
    BalanceSheet_equity:
      example:
        items:
        - id: "1"
          name: Retained Earnings
          value: 10000
        total: 200000
      properties:
        items:
          items:
            $ref: '#/components/schemas/BalanceSheet_equity_items_inner'
          type: array
        total:
          description: Total equity
          example: 100000
          title: Total Equity
          type: number
      required:
      - items
      - total
      title: BalanceSheet_equity
      type: object
      x-apideck-weights:
        items: medium
        total: medium
    BalanceSheet_liabilities_accounts_inner:
      properties:
        id:
          description: A unique identifier for an object.
          example: "12345"
          readOnly: true
          title: ID
          type: string
        name:
          description: The name of the liability account
          example: Accounts Payable (A/P)
          title: Account Name
          type: string
        value:
          description: The value of the liability
          example: 10000
          title: Value
          type: number
      title: BalanceSheet_liabilities_accounts_inner
      type: object
      x-apideck-weights:
        id: medium
        name: medium
        value: medium
    BalanceSheet_liabilities:
      example:
        accounts:
        - id: "1"
          name: Accounts Payable (A/P)
          value: 10000
        total: 200000
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/BalanceSheet_liabilities_accounts_inner'
          type: array
        total:
          description: Total liabilities
          example: 100000
          title: Total Liabilities
          type: number
      required:
      - accounts
      - total
      title: BalanceSheet_liabilities
      type: object
      x-apideck-weights:
        accounts: medium
        total: medium
    Company_Row_Type:
      properties:
        id:
          example: "12345"
          nullable: true
          title: id
          type: string
        name:
          example: Customer Account
          nullable: true
          title: name
          type: string
      title: Company Row Type
      type: object
      x-apideck-weights:
        id: critical
        name: medium
    CreditNote_allocations_inner:
      example:
        amount: 49.99
        code: N091
        id: "123456"
        type: invoice
      properties:
        amount:
          description: "Amount of payment that should be attributed to this allocation.\
            \ If null, the total_amount will be used."
          example: 49.99
          nullable: true
          title: Amount
          type: number
        code:
          example: N091
          readOnly: true
          title: code
          type: string
        id:
          description: Unique identifier of entity this payment should be attributed
            to.
          example: "123456"
          title: Linked entity ID
          type: string
        type:
          description: Type of entity this payment should be attributed to.
          enum:
          - invoice
          - order
          - expense
          - credit_memo
          - over_payment
          - pre_payment
          title: Allocation type
          type: string
          x-apideck-enum-id: allocations.type
      title: CreditNote_allocations_inner
      x-apideck-weights:
        amount: medium
        code: medium
        id: medium
        type: medium
    CustomField_value:
      anyOf:
      - example: Uses Salesforce and Marketo
        nullable: true
        type: string
      - example: 10
        nullable: true
        type: number
      - example: true
        nullable: true
        type: boolean
      - example:
          foo: bar
        nullable: true
        type: object
      - items:
          type: string
        type: array
      - items:
          type: object
        type: array
      title: CustomField_value
    InvoiceItem_purchase_details:
      example:
        tax_inclusive: true
        unit_of_measure: pc.
        unit_price: 27500.5
        tax_rate:
          code: N-T
          rate: 10
          name: GST on Purchases
          id: "123456"
      properties:
        tax_inclusive:
          description: Amounts are including tax
          example: true
          nullable: true
          title: Tax inclusive
          type: boolean
        tax_rate:
          $ref: '#/components/schemas/LinkedTaxRate'
        unit_of_measure:
          description: "Description of the unit type the item is sold as, ie: kg,\
            \ hour."
          example: pc.
          nullable: true
          title: Unit of measure
          type: string
        unit_price:
          example: 27500.5
          nullable: true
          title: Unit price
          type: number
      title: InvoiceItem_purchase_details
      type: object
      x-apideck-weights:
        tax_inclusive: medium
        tax_rate: medium
        unit_of_measure: medium
        unit_price: medium
    Categories_inner:
      example:
        name: Finance Charges Expense
        id: "12345"
      properties:
        id:
          example: "12345"
          readOnly: true
          title: id
          type: string
        name:
          description: The name of the category.
          example: Finance Charges Expense
          readOnly: true
          title: Category name
          type: string
      title: Categories_inner
      type: object
    LedgerAccount_parent_account:
      example:
        display_id: 1-1100
        name: Bank Accounts
        id: "12345"
      properties:
        display_id:
          description: The human readable display ID used when displaying the parent
            account
          example: 1-1100
          title: Display ID
          type: string
        id:
          description: The ID of the parent account.
          example: "12345"
          title: Parent account ID
          type: string
        name:
          description: The name of the parent account.
          example: Bank Accounts
          title: Name
          type: string
      title: LedgerAccount_parent_account
      type: object
    Sub_accounts_inner:
      example:
        account_sub_name: Petty Cash
        id: "12345"
      properties:
        account_sub_name:
          description: The name of the sub account.
          example: Petty Cash
          readOnly: true
          title: Sub Account Name
          type: string
        id:
          description: The ID of the sub account.
          example: "12345"
          readOnly: true
          title: Sub account ID
          type: string
      title: Sub_accounts_inner
    Meta_cursors:
      description: Cursors to navigate to previous or next pages through the API
      example:
        next: em9oby1jcm06OnBhZ2U6OjM=
        current: em9oby1jcm06OnBhZ2U6OjI=
        previous: em9oby1jcm06OnBhZ2U6OjE=
      properties:
        current:
          description: Cursor to navigate to the current page of results through the
            API
          example: em9oby1jcm06OnBhZ2U6OjI=
          nullable: true
          title: current
          type: string
        next:
          description: Cursor to navigate to the next page of results through the
            API
          example: em9oby1jcm06OnBhZ2U6OjM=
          nullable: true
          title: next
          type: string
        previous:
          description: Cursor to navigate to the previous page of results through
            the API
          example: em9oby1jcm06OnBhZ2U6OjE=
          nullable: true
          title: previous
          type: string
      title: Meta_cursors
      type: object
    NotFoundResponse_detail:
      anyOf:
      - example: "Could not find widget with id: '123'"
        type: string
      - example:
          not_found:
            entity: widget
            id: "123"
        type: object
      description: Contains parameter or domain specific information related to the
        error and why it occurred.
      title: NotFoundResponse_detail
    NotImplementedResponse_detail:
      anyOf:
      - example: Failed to retrieve Widget tokenUrl from 'components.securitySchemes.OAuth2.flows'
        type: string
      - type: object
      description: Contains parameter or domain specific information related to the
        error and why it occurred.
      title: NotImplementedResponse_detail
    Payment_allocations_inner:
      example:
        amount: 49.99
        code: N091
        id: "123456"
        type: invoice
      properties:
        amount:
          description: "Amount of payment that should be attributed to this allocation.\
            \ If null, the total_amount will be used."
          example: 49.99
          nullable: true
          title: Amount
          type: number
        code:
          example: N091
          readOnly: true
          title: code
          type: string
        id:
          description: Unique identifier of entity this payment should be attributed
            to.
          example: "123456"
          title: Linked entity ID
          type: string
        type:
          description: Type of entity this payment should be attributed to.
          enum:
          - invoice
          - order
          - expense
          - credit_memo
          - over_payment
          - pre_payment
          title: Allocation type
          type: string
          x-apideck-enum-id: allocations.type
      title: Payment_allocations_inner
      type: object
      x-apideck-strict-any-of:
      - required:
        - id
      - required:
        - code
      x-apideck-strict-required:
      - amount
      x-apideck-weights:
        amount: critical
        code: medium
        id: medium
        type: medium
    ProfitAndLoss_expenses:
      example:
        records:
        - amount: 10000
          id: "123"
          name: Expense 1
        - amount: 20000
          id: "456"
          name: Expense 2
        total: 200000
      properties:
        records:
          items:
            $ref: '#/components/schemas/ProfitAndLossRecords_inner'
          nullable: true
          type: array
          x-apideck-schema-id: ProfitAndLossRecords
        total:
          description: Total expense
          example: 100000
          nullable: true
          title: Total expense
          type: number
      required:
      - records
      - total
      title: ProfitAndLoss_expenses
      type: object
      x-apideck-weights:
        record: critical
        total: critical
    ProfitAndLoss_gross_profit:
      example:
        total: 200000
      nullable: true
      properties:
        records:
          items:
            $ref: '#/components/schemas/ProfitAndLossRecords_inner'
          nullable: true
          type: array
          x-apideck-schema-id: ProfitAndLossRecords
        total:
          description: Total gross profit
          example: 100000
          nullable: true
          title: Total gross profit
          type: number
      required:
      - records
      - total
      title: ProfitAndLoss_gross_profit
      type: object
      x-apideck-weights:
        record: critical
        total: critical
    ProfitAndLoss_income:
      example:
        records:
        - amount: 10000
          id: "123"
          name: Income 1
        - amount: 20000
          id: "456"
          name: Income 2
        total: 200000
      properties:
        records:
          items:
            $ref: '#/components/schemas/ProfitAndLossRecords_inner'
          nullable: true
          type: array
          x-apideck-schema-id: ProfitAndLossRecords
        total:
          description: Total income
          example: 100000
          nullable: true
          title: Total income
          type: number
      required:
      - records
      - total
      title: ProfitAndLoss_income
      type: object
      x-apideck-weights:
        record: critical
        total: critical
    ProfitAndLoss_net_income:
      example:
        total: 200000
      nullable: true
      properties:
        records:
          items:
            $ref: '#/components/schemas/ProfitAndLossRecords_inner'
          nullable: true
          type: array
          x-apideck-schema-id: ProfitAndLossRecords
        total:
          description: Total net income
          example: 100000
          nullable: true
          title: Total net income
          type: number
      required:
      - records
      - total
      title: ProfitAndLoss_net_income
      type: object
      x-apideck-weights:
        record: critical
        total: critical
    ProfitAndLoss_net_operating_income:
      example:
        total: 200000
      nullable: true
      properties:
        records:
          items:
            $ref: '#/components/schemas/ProfitAndLossRecords_inner'
          nullable: true
          type: array
          x-apideck-schema-id: ProfitAndLossRecords
        total:
          description: Total net operating income
          example: 100000
          nullable: true
          title: Total net operating income
          type: number
      required:
      - records
      - total
      title: ProfitAndLoss_net_operating_income
      type: object
      x-apideck-weights:
        record: critical
        total: critical
    ProfitAndLossRecords_inner:
      anyOf:
      - $ref: '#/components/schemas/ProfitAndLossSection'
      - $ref: '#/components/schemas/ProfitAndLossRecord'
      title: ProfitAndLossRecords_inner
    Tax_components_inner:
      example:
        rate: 10
        name: GST
        id: "10"
        compound: true
      properties:
        compound:
          example: true
          nullable: true
          title: Compound
          type: boolean
        id:
          example: "10"
          nullable: true
          title: TaxRate Id
          type: string
        name:
          example: GST
          minLength: 1
          title: name
          type: string
        rate:
          example: 10
          nullable: true
          title: TaxRate
          type: number
      title: Tax_components_inner
      x-apideck-weights:
        compound: medium
        id: medium
        name: medium
        rate: medium
    TooManyRequestsResponse_detail:
      properties:
        context:
          title: context
          type: string
        error:
          additionalProperties: true
          title: error
          type: object
      title: TooManyRequestsResponse_detail
      type: object
    UnexpectedErrorResponse_detail:
      anyOf:
      - example: "Missing Header: x-apideck-consumer-id"
        type: string
      - example:
          missing:
          - x-apideck-consumer-id: required
        type: object
      description: Contains parameter or domain specific information related to the
        error and why it occurred.
      title: UnexpectedErrorResponse_detail
  securitySchemes:
    apiKey:
      description: "To use API you have to sign up and get your own API key. Unify\
        \ API accounts have sandbox mode and live mode API keys. \nTo change modes\
        \ just use the appropriate key to get a live or test object. You can find\
        \ your API keys on the unify settings of your Apideck app.\nYour Apideck application_id\
        \ can also be found on the same page.\n\nAuthenticate your API requests by\
        \ including your test or live secret API key in the request header. \n\n-\
        \ Bearer authorization header: `Authorization: Bearer <your-apideck-api-key>`\n\
        - Application id header: `x-apideck-app-id: <your-apideck-app-id>`\n\nYou\
        \ should use the public keys on the SDKs and the secret keys to authenticate\
        \ API requests.\n\n**Do not share or include your secret API keys on client\
        \ side code.** Your API keys carry significant privileges. Please ensure to\
        \ keep them 100% secure and be sure to not share your secret API keys in areas\
        \ that are publicly accessible like GitHub.\n\nLearn how to set the Authorization\
        \ header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key\n\
        \nGo to Unify to grab your API KEY https://app.apideck.com/unify/api-keys\n"
      in: header
      name: Authorization
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_apiKey
x-webhooks:
  CustomerCreated:
    post:
      description: Event broadcast when a customer has been created.
      operationId: customerCreated
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AccountingEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: customer
                entity_url: https://unify.apideck.com/accounting/customers/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: accounting.customer.created
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: xero
                unified_api: accounting
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AccountingWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Customer Created
      tags:
      - Webhook Events
      x-apideck-event-type: accounting.customer.created
  CustomerDeleted:
    post:
      description: Event broadcast when a customer has been deleted.
      operationId: customerDeleted
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AccountingEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: customer
                entity_url: https://unify.apideck.com/accounting/customers/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: accounting.customer.deleted
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: xero
                unified_api: accounting
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AccountingWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Customer Deleted
      tags:
      - Webhook Events
      x-apideck-event-type: accounting.customer.deleted
  CustomerUpdated:
    post:
      description: Event broadcast when a customer has been updated.
      operationId: customerUpdated
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AccountingEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: customer
                entity_url: https://unify.apideck.com/accounting/customers/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: accounting.customer.updated
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: xero
                unified_api: accounting
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AccountingWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Customer Updated
      tags:
      - Webhook Events
      x-apideck-event-type: accounting.customer.updated
  InvoiceCreated:
    post:
      description: Event broadcast when an invoice has been created.
      operationId: invoiceCreated
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AccountingEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: invoice
                entity_url: https://unify.apideck.com/accounting/invoices/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: accounting.invoice.created
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: xero
                unified_api: accounting
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AccountingWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Invoice Created
      tags:
      - Webhook Events
      x-apideck-event-type: accounting.invoice.created
  InvoiceDeleted:
    post:
      description: Event broadcast when an invoice has been deleted.
      operationId: invoiceDeleted
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AccountingEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: invoice
                entity_url: https://unify.apideck.com/accounting/invoices/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: accounting.invoice.deleted
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: xero
                unified_api: accounting
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AccountingWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Invoice Deleted
      tags:
      - Webhook Events
      x-apideck-event-type: accounting.invoice.deleted
  InvoiceItemCreated:
    post:
      description: Event broadcast when an invoice has been item created.
      operationId: invoiceItemCreated
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AccountingEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: invoice_item
                entity_url: https://unify.apideck.com/accounting/invoice_items/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: accounting.invoice_item.created
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: xero
                unified_api: accounting
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AccountingWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Invoice Item Created
      tags:
      - Webhook Events
      x-apideck-event-type: accounting.invoice_item.created
  InvoiceItemDeleted:
    post:
      description: Event broadcast when an invoice has been item deleted.
      operationId: invoiceItemDeleted
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AccountingEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: invoice_item
                entity_url: https://unify.apideck.com/accounting/invoice_items/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: accounting.invoice_item.deleted
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: xero
                unified_api: accounting
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AccountingWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Invoice Item Deleted
      tags:
      - Webhook Events
      x-apideck-event-type: accounting.invoice_item.deleted
  InvoiceItemUpdated:
    post:
      description: Event broadcast when an invoice has been item updated.
      operationId: invoiceItemUpdated
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AccountingEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: invoice_item
                entity_url: https://unify.apideck.com/accounting/invoice_items/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: accounting.invoice_item.updated
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: xero
                unified_api: accounting
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AccountingWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Invoice Item Updated
      tags:
      - Webhook Events
      x-apideck-event-type: accounting.invoice_item.updated
  InvoiceUpdated:
    post:
      description: Event broadcast when an invoice has been updated.
      operationId: invoiceUpdated
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AccountingEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: invoice
                entity_url: https://unify.apideck.com/accounting/invoices/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: accounting.invoice.updated
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: xero
                unified_api: accounting
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AccountingWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Invoice Updated
      tags:
      - Webhook Events
      x-apideck-event-type: accounting.invoice.updated
  LedgerAccountCreated:
    post:
      description: Event broadcast when a ledger has been account created.
      operationId: ledgerAccountCreated
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AccountingEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: ledger_account
                entity_url: https://unify.apideck.com/accounting/ledger_accounts/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: accounting.ledger_account.created
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: xero
                unified_api: accounting
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AccountingWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Ledger Account Created
      tags:
      - Webhook Events
      x-apideck-event-type: accounting.ledger_account.created
  LedgerAccountDeleted:
    post:
      description: Event broadcast when a ledger has been account deleted.
      operationId: ledgerAccountDeleted
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AccountingEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: ledger_account
                entity_url: https://unify.apideck.com/accounting/ledger_accounts/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: accounting.ledger_account.deleted
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: xero
                unified_api: accounting
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AccountingWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Ledger Account Deleted
      tags:
      - Webhook Events
      x-apideck-event-type: accounting.ledger_account.deleted
  LedgerAccountUpdated:
    post:
      description: Event broadcast when a ledger has been account updated.
      operationId: ledgerAccountUpdated
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AccountingEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: ledger_account
                entity_url: https://unify.apideck.com/accounting/ledger_accounts/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: accounting.ledger_account.updated
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: xero
                unified_api: accounting
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AccountingWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Ledger Account Updated
      tags:
      - Webhook Events
      x-apideck-event-type: accounting.ledger_account.updated
  PurchaseOrderCreated:
    post:
      description: Event broadcast when a purchase order has been created.
      operationId: purchaseOrderCreated
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AccountingEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: purchase-order
                entity_url: https://unify.apideck.com/accounting/purchase-orders/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: accounting.purchase-order.created
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: xero
                unified_api: accounting
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AccountingWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Purchase order Created
      tags:
      - Webhook Events
      x-apideck-event-type: accounting.purchase-order.created
  PurchaseOrderDeleted:
    post:
      description: Event broadcast when a purchase order has been deleted.
      operationId: purchaseOrderDeleted
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AccountingEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: purchase-order
                entity_url: https://unify.apideck.com/accounting/purchase-orders/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: accounting.purchase-order.deleted
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: xero
                unified_api: accounting
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AccountingWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Purchase order Deleted
      tags:
      - Webhook Events
      x-apideck-event-type: accounting.purchase-order.deleted
  PurchaseOrderUpdated:
    post:
      description: Event broadcast when a purchase order has been updated.
      operationId: purchaseOrderUpdated
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AccountingEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: purchase-order
                entity_url: https://unify.apideck.com/accounting/purchase-orders/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: accounting.purchase-order.updated
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: xero
                unified_api: accounting
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AccountingWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Purchase order Updated
      tags:
      - Webhook Events
      x-apideck-event-type: accounting.purchase-order.updated
  TaxRateCreated:
    post:
      description: Event broadcast when a tax has been rate created.
      operationId: taxRateCreated
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AccountingEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: tax_rate
                entity_url: https://unify.apideck.com/accounting/tax_rates/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: accounting.tax_rate.created
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: xero
                unified_api: accounting
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AccountingWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Tax Rate Created
      tags:
      - Webhook Events
      x-apideck-event-type: accounting.tax_rate.created
  TaxRateDeleted:
    post:
      description: Event broadcast when a tax has been rate deleted.
      operationId: taxRateDeleted
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AccountingEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: tax_rate
                entity_url: https://unify.apideck.com/accounting/tax_rates/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: accounting.tax_rate.deleted
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: xero
                unified_api: accounting
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AccountingWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Tax Rate Deleted
      tags:
      - Webhook Events
      x-apideck-event-type: accounting.tax_rate.deleted
  TaxRateUpdated:
    post:
      description: Event broadcast when a tax has been rate updated.
      operationId: taxRateUpdated
      parameters:
      - description: The type of event that was triggered
        in: header
        name: x-apideck-event-type
        required: true
        schema:
          $ref: '#/components/schemas/AccountingEventType'
      - description: An idempotency key is a unique value generated to recognize subsequent
          retries/duplicates of the same request.
        in: header
        name: x-apideck-idempotency-key
        required: true
        schema:
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            example:
              payload:
                consumer_id: test_user_id
                entity_id: 123456ASDF
                entity_type: tax_rate
                entity_url: https://unify.apideck.com/accounting/tax_rates/123456ASDF
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                event_type: accounting.tax_rate.updated
                occurred_at: 2020-01-01T00:00:00.000Z
                service_id: xero
                unified_api: accounting
            schema:
              properties:
                payload:
                  $ref: '#/components/schemas/AccountingWebhookEvent'
              type: object
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received
            successfully.
      security: []
      summary: Tax Rate Updated
      tags:
      - Webhook Events
      x-apideck-event-type: accounting.tax_rate.updated
  x-sdk-exclude: true
