# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DriveGroupsFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parent_group_id: str=None):
        """DriveGroupsFilter - a model defined in OpenAPI

        :param parent_group_id: The parent_group_id of this DriveGroupsFilter.
        """
        self.openapi_types = {
            'parent_group_id': str
        }

        self.attribute_map = {
            'parent_group_id': 'parent_group_id'
        }

        self._parent_group_id = parent_group_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DriveGroupsFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DriveGroupsFilter of this DriveGroupsFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parent_group_id(self):
        """Gets the parent_group_id of this DriveGroupsFilter.

        ID of the drive group to filter on

        :return: The parent_group_id of this DriveGroupsFilter.
        :rtype: str
        """
        return self._parent_group_id

    @parent_group_id.setter
    def parent_group_id(self, parent_group_id):
        """Sets the parent_group_id of this DriveGroupsFilter.

        ID of the drive group to filter on

        :param parent_group_id: The parent_group_id of this DriveGroupsFilter.
        :type parent_group_id: str
        """

        self._parent_group_id = parent_group_id
