# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file_type import FileType
from openapi_server.models.linked_folder import LinkedFolder
from openapi_server.models.owner import Owner
from openapi_server.models.unified_file_permissions import UnifiedFilePermissions
from openapi_server import util


class UnifiedFile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, created_by: str=None, custom_mappings: object=None, description: str=None, downloadable: bool=None, downstream_id: str=None, export_formats: List[str]=None, exportable: bool=None, id: str=None, mime_type: str=None, name: str=None, owner: Owner=None, parent_folders: List[LinkedFolder]=None, parent_folders_complete: bool=None, path: str=None, permissions: UnifiedFilePermissions=None, size: int=None, type: FileType=None, updated_at: datetime=None, updated_by: str=None):
        """UnifiedFile - a model defined in OpenAPI

        :param created_at: The created_at of this UnifiedFile.
        :param created_by: The created_by of this UnifiedFile.
        :param custom_mappings: The custom_mappings of this UnifiedFile.
        :param description: The description of this UnifiedFile.
        :param downloadable: The downloadable of this UnifiedFile.
        :param downstream_id: The downstream_id of this UnifiedFile.
        :param export_formats: The export_formats of this UnifiedFile.
        :param exportable: The exportable of this UnifiedFile.
        :param id: The id of this UnifiedFile.
        :param mime_type: The mime_type of this UnifiedFile.
        :param name: The name of this UnifiedFile.
        :param owner: The owner of this UnifiedFile.
        :param parent_folders: The parent_folders of this UnifiedFile.
        :param parent_folders_complete: The parent_folders_complete of this UnifiedFile.
        :param path: The path of this UnifiedFile.
        :param permissions: The permissions of this UnifiedFile.
        :param size: The size of this UnifiedFile.
        :param type: The type of this UnifiedFile.
        :param updated_at: The updated_at of this UnifiedFile.
        :param updated_by: The updated_by of this UnifiedFile.
        """
        self.openapi_types = {
            'created_at': datetime,
            'created_by': str,
            'custom_mappings': object,
            'description': str,
            'downloadable': bool,
            'downstream_id': str,
            'export_formats': List[str],
            'exportable': bool,
            'id': str,
            'mime_type': str,
            'name': str,
            'owner': Owner,
            'parent_folders': List[LinkedFolder],
            'parent_folders_complete': bool,
            'path': str,
            'permissions': UnifiedFilePermissions,
            'size': int,
            'type': FileType,
            'updated_at': datetime,
            'updated_by': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'created_by': 'created_by',
            'custom_mappings': 'custom_mappings',
            'description': 'description',
            'downloadable': 'downloadable',
            'downstream_id': 'downstream_id',
            'export_formats': 'export_formats',
            'exportable': 'exportable',
            'id': 'id',
            'mime_type': 'mime_type',
            'name': 'name',
            'owner': 'owner',
            'parent_folders': 'parent_folders',
            'parent_folders_complete': 'parent_folders_complete',
            'path': 'path',
            'permissions': 'permissions',
            'size': 'size',
            'type': 'type',
            'updated_at': 'updated_at',
            'updated_by': 'updated_by'
        }

        self._created_at = created_at
        self._created_by = created_by
        self._custom_mappings = custom_mappings
        self._description = description
        self._downloadable = downloadable
        self._downstream_id = downstream_id
        self._export_formats = export_formats
        self._exportable = exportable
        self._id = id
        self._mime_type = mime_type
        self._name = name
        self._owner = owner
        self._parent_folders = parent_folders
        self._parent_folders_complete = parent_folders_complete
        self._path = path
        self._permissions = permissions
        self._size = size
        self._type = type
        self._updated_at = updated_at
        self._updated_by = updated_by

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UnifiedFile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UnifiedFile of this UnifiedFile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this UnifiedFile.

        The date and time when the object was created.

        :return: The created_at of this UnifiedFile.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this UnifiedFile.

        The date and time when the object was created.

        :param created_at: The created_at of this UnifiedFile.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this UnifiedFile.

        The user who created the object.

        :return: The created_by of this UnifiedFile.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this UnifiedFile.

        The user who created the object.

        :param created_by: The created_by of this UnifiedFile.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def custom_mappings(self):
        """Gets the custom_mappings of this UnifiedFile.

        When custom mappings are configured on the resource, the result is included here.

        :return: The custom_mappings of this UnifiedFile.
        :rtype: object
        """
        return self._custom_mappings

    @custom_mappings.setter
    def custom_mappings(self, custom_mappings):
        """Sets the custom_mappings of this UnifiedFile.

        When custom mappings are configured on the resource, the result is included here.

        :param custom_mappings: The custom_mappings of this UnifiedFile.
        :type custom_mappings: object
        """

        self._custom_mappings = custom_mappings

    @property
    def description(self):
        """Gets the description of this UnifiedFile.

        Optional description of the file

        :return: The description of this UnifiedFile.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UnifiedFile.

        Optional description of the file

        :param description: The description of this UnifiedFile.
        :type description: str
        """

        self._description = description

    @property
    def downloadable(self):
        """Gets the downloadable of this UnifiedFile.

        Whether the current user can download this file

        :return: The downloadable of this UnifiedFile.
        :rtype: bool
        """
        return self._downloadable

    @downloadable.setter
    def downloadable(self, downloadable):
        """Sets the downloadable of this UnifiedFile.

        Whether the current user can download this file

        :param downloadable: The downloadable of this UnifiedFile.
        :type downloadable: bool
        """

        self._downloadable = downloadable

    @property
    def downstream_id(self):
        """Gets the downstream_id of this UnifiedFile.

        The third-party API ID of original entity

        :return: The downstream_id of this UnifiedFile.
        :rtype: str
        """
        return self._downstream_id

    @downstream_id.setter
    def downstream_id(self, downstream_id):
        """Sets the downstream_id of this UnifiedFile.

        The third-party API ID of original entity

        :param downstream_id: The downstream_id of this UnifiedFile.
        :type downstream_id: str
        """

        self._downstream_id = downstream_id

    @property
    def export_formats(self):
        """Gets the export_formats of this UnifiedFile.

        The available file formats when exporting this file.

        :return: The export_formats of this UnifiedFile.
        :rtype: List[str]
        """
        return self._export_formats

    @export_formats.setter
    def export_formats(self, export_formats):
        """Sets the export_formats of this UnifiedFile.

        The available file formats when exporting this file.

        :param export_formats: The export_formats of this UnifiedFile.
        :type export_formats: List[str]
        """

        self._export_formats = export_formats

    @property
    def exportable(self):
        """Gets the exportable of this UnifiedFile.

        Whether the current file is exportable to other file formats. This property is relevant for proprietary file formats such as Google Docs or Dropbox Paper.

        :return: The exportable of this UnifiedFile.
        :rtype: bool
        """
        return self._exportable

    @exportable.setter
    def exportable(self, exportable):
        """Sets the exportable of this UnifiedFile.

        Whether the current file is exportable to other file formats. This property is relevant for proprietary file formats such as Google Docs or Dropbox Paper.

        :param exportable: The exportable of this UnifiedFile.
        :type exportable: bool
        """

        self._exportable = exportable

    @property
    def id(self):
        """Gets the id of this UnifiedFile.

        A unique identifier for an object.

        :return: The id of this UnifiedFile.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UnifiedFile.

        A unique identifier for an object.

        :param id: The id of this UnifiedFile.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def mime_type(self):
        """Gets the mime_type of this UnifiedFile.

        The MIME type of the file.

        :return: The mime_type of this UnifiedFile.
        :rtype: str
        """
        return self._mime_type

    @mime_type.setter
    def mime_type(self, mime_type):
        """Sets the mime_type of this UnifiedFile.

        The MIME type of the file.

        :param mime_type: The mime_type of this UnifiedFile.
        :type mime_type: str
        """

        self._mime_type = mime_type

    @property
    def name(self):
        """Gets the name of this UnifiedFile.

        The name of the file

        :return: The name of this UnifiedFile.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UnifiedFile.

        The name of the file

        :param name: The name of this UnifiedFile.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def owner(self):
        """Gets the owner of this UnifiedFile.


        :return: The owner of this UnifiedFile.
        :rtype: Owner
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this UnifiedFile.


        :param owner: The owner of this UnifiedFile.
        :type owner: Owner
        """

        self._owner = owner

    @property
    def parent_folders(self):
        """Gets the parent_folders of this UnifiedFile.

        The parent folders of the file, starting from the root

        :return: The parent_folders of this UnifiedFile.
        :rtype: List[LinkedFolder]
        """
        return self._parent_folders

    @parent_folders.setter
    def parent_folders(self, parent_folders):
        """Sets the parent_folders of this UnifiedFile.

        The parent folders of the file, starting from the root

        :param parent_folders: The parent_folders of this UnifiedFile.
        :type parent_folders: List[LinkedFolder]
        """

        self._parent_folders = parent_folders

    @property
    def parent_folders_complete(self):
        """Gets the parent_folders_complete of this UnifiedFile.

        Whether the list of parent folders is complete. Some connectors only return the direct parent of a file

        :return: The parent_folders_complete of this UnifiedFile.
        :rtype: bool
        """
        return self._parent_folders_complete

    @parent_folders_complete.setter
    def parent_folders_complete(self, parent_folders_complete):
        """Sets the parent_folders_complete of this UnifiedFile.

        Whether the list of parent folders is complete. Some connectors only return the direct parent of a file

        :param parent_folders_complete: The parent_folders_complete of this UnifiedFile.
        :type parent_folders_complete: bool
        """

        self._parent_folders_complete = parent_folders_complete

    @property
    def path(self):
        """Gets the path of this UnifiedFile.

        The full path of the file or folder (includes the file name)

        :return: The path of this UnifiedFile.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this UnifiedFile.

        The full path of the file or folder (includes the file name)

        :param path: The path of this UnifiedFile.
        :type path: str
        """

        self._path = path

    @property
    def permissions(self):
        """Gets the permissions of this UnifiedFile.


        :return: The permissions of this UnifiedFile.
        :rtype: UnifiedFilePermissions
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this UnifiedFile.


        :param permissions: The permissions of this UnifiedFile.
        :type permissions: UnifiedFilePermissions
        """

        self._permissions = permissions

    @property
    def size(self):
        """Gets the size of this UnifiedFile.

        The size of the file in bytes

        :return: The size of this UnifiedFile.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this UnifiedFile.

        The size of the file in bytes

        :param size: The size of this UnifiedFile.
        :type size: int
        """

        self._size = size

    @property
    def type(self):
        """Gets the type of this UnifiedFile.


        :return: The type of this UnifiedFile.
        :rtype: FileType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this UnifiedFile.


        :param type: The type of this UnifiedFile.
        :type type: FileType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def updated_at(self):
        """Gets the updated_at of this UnifiedFile.

        The date and time when the object was last updated.

        :return: The updated_at of this UnifiedFile.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this UnifiedFile.

        The date and time when the object was last updated.

        :param updated_at: The updated_at of this UnifiedFile.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def updated_by(self):
        """Gets the updated_by of this UnifiedFile.

        The user who last updated the object.

        :return: The updated_by of this UnifiedFile.
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this UnifiedFile.

        The user who last updated the object.

        :param updated_by: The updated_by of this UnifiedFile.
        :type updated_by: str
        """

        self._updated_by = updated_by
