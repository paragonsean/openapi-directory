# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DriveGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, created_by: str=None, custom_mappings: object=None, description: str=None, display_name: str=None, id: str=None, name: str=None, updated_at: datetime=None, updated_by: str=None):
        """DriveGroup - a model defined in OpenAPI

        :param created_at: The created_at of this DriveGroup.
        :param created_by: The created_by of this DriveGroup.
        :param custom_mappings: The custom_mappings of this DriveGroup.
        :param description: The description of this DriveGroup.
        :param display_name: The display_name of this DriveGroup.
        :param id: The id of this DriveGroup.
        :param name: The name of this DriveGroup.
        :param updated_at: The updated_at of this DriveGroup.
        :param updated_by: The updated_by of this DriveGroup.
        """
        self.openapi_types = {
            'created_at': datetime,
            'created_by': str,
            'custom_mappings': object,
            'description': str,
            'display_name': str,
            'id': str,
            'name': str,
            'updated_at': datetime,
            'updated_by': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'created_by': 'created_by',
            'custom_mappings': 'custom_mappings',
            'description': 'description',
            'display_name': 'display_name',
            'id': 'id',
            'name': 'name',
            'updated_at': 'updated_at',
            'updated_by': 'updated_by'
        }

        self._created_at = created_at
        self._created_by = created_by
        self._custom_mappings = custom_mappings
        self._description = description
        self._display_name = display_name
        self._id = id
        self._name = name
        self._updated_at = updated_at
        self._updated_by = updated_by

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DriveGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DriveGroup of this DriveGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this DriveGroup.

        The date and time when the object was created.

        :return: The created_at of this DriveGroup.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this DriveGroup.

        The date and time when the object was created.

        :param created_at: The created_at of this DriveGroup.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this DriveGroup.

        The user who created the object.

        :return: The created_by of this DriveGroup.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this DriveGroup.

        The user who created the object.

        :param created_by: The created_by of this DriveGroup.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def custom_mappings(self):
        """Gets the custom_mappings of this DriveGroup.

        When custom mappings are configured on the resource, the result is included here.

        :return: The custom_mappings of this DriveGroup.
        :rtype: object
        """
        return self._custom_mappings

    @custom_mappings.setter
    def custom_mappings(self, custom_mappings):
        """Sets the custom_mappings of this DriveGroup.

        When custom mappings are configured on the resource, the result is included here.

        :param custom_mappings: The custom_mappings of this DriveGroup.
        :type custom_mappings: object
        """

        self._custom_mappings = custom_mappings

    @property
    def description(self):
        """Gets the description of this DriveGroup.

        A description of the object.

        :return: The description of this DriveGroup.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DriveGroup.

        A description of the object.

        :param description: The description of this DriveGroup.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this DriveGroup.

        The display name of the drive group

        :return: The display_name of this DriveGroup.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this DriveGroup.

        The display name of the drive group

        :param display_name: The display_name of this DriveGroup.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def id(self):
        """Gets the id of this DriveGroup.

        A unique identifier for an object.

        :return: The id of this DriveGroup.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DriveGroup.

        A unique identifier for an object.

        :param id: The id of this DriveGroup.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def name(self):
        """Gets the name of this DriveGroup.

        The name of the drive group

        :return: The name of this DriveGroup.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DriveGroup.

        The name of the drive group

        :param name: The name of this DriveGroup.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def updated_at(self):
        """Gets the updated_at of this DriveGroup.

        The date and time when the object was last updated.

        :return: The updated_at of this DriveGroup.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this DriveGroup.

        The date and time when the object was last updated.

        :param updated_at: The updated_at of this DriveGroup.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def updated_by(self):
        """Gets the updated_by of this DriveGroup.

        The user who last updated the object.

        :return: The updated_by of this DriveGroup.
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this DriveGroup.

        The user who last updated the object.

        :param updated_by: The updated_by of this DriveGroup.
        :type updated_by: str
        """

        self._updated_by = updated_by
