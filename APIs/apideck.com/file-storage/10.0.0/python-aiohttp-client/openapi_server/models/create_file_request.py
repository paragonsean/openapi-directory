# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateFileRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, drive_id: str=None, name: str=None, parent_folder_id: str=None):
        """CreateFileRequest - a model defined in OpenAPI

        :param description: The description of this CreateFileRequest.
        :param drive_id: The drive_id of this CreateFileRequest.
        :param name: The name of this CreateFileRequest.
        :param parent_folder_id: The parent_folder_id of this CreateFileRequest.
        """
        self.openapi_types = {
            'description': str,
            'drive_id': str,
            'name': str,
            'parent_folder_id': str
        }

        self.attribute_map = {
            'description': 'description',
            'drive_id': 'drive_id',
            'name': 'name',
            'parent_folder_id': 'parent_folder_id'
        }

        self._description = description
        self._drive_id = drive_id
        self._name = name
        self._parent_folder_id = parent_folder_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateFileRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateFileRequest of this CreateFileRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this CreateFileRequest.

        Optional description of the file.

        :return: The description of this CreateFileRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateFileRequest.

        Optional description of the file.

        :param description: The description of this CreateFileRequest.
        :type description: str
        """

        self._description = description

    @property
    def drive_id(self):
        """Gets the drive_id of this CreateFileRequest.

        ID of the drive to upload to.

        :return: The drive_id of this CreateFileRequest.
        :rtype: str
        """
        return self._drive_id

    @drive_id.setter
    def drive_id(self, drive_id):
        """Sets the drive_id of this CreateFileRequest.

        ID of the drive to upload to.

        :param drive_id: The drive_id of this CreateFileRequest.
        :type drive_id: str
        """

        self._drive_id = drive_id

    @property
    def name(self):
        """Gets the name of this CreateFileRequest.

        The name of the file.

        :return: The name of this CreateFileRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateFileRequest.

        The name of the file.

        :param name: The name of this CreateFileRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def parent_folder_id(self):
        """Gets the parent_folder_id of this CreateFileRequest.

        The parent folder to create the new file within.

        :return: The parent_folder_id of this CreateFileRequest.
        :rtype: str
        """
        return self._parent_folder_id

    @parent_folder_id.setter
    def parent_folder_id(self, parent_folder_id):
        """Sets the parent_folder_id of this CreateFileRequest.

        The parent folder to create the new file within.

        :param parent_folder_id: The parent_folder_id of this CreateFileRequest.
        :type parent_folder_id: str
        """
        if parent_folder_id is None:
            raise ValueError("Invalid value for `parent_folder_id`, must not be `None`")

        self._parent_folder_id = parent_folder_id
