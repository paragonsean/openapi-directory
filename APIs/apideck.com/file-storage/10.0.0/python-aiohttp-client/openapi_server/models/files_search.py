# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FilesSearch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, drive_id: str=None, query: str=None):
        """FilesSearch - a model defined in OpenAPI

        :param drive_id: The drive_id of this FilesSearch.
        :param query: The query of this FilesSearch.
        """
        self.openapi_types = {
            'drive_id': str,
            'query': str
        }

        self.attribute_map = {
            'drive_id': 'drive_id',
            'query': 'query'
        }

        self._drive_id = drive_id
        self._query = query

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FilesSearch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FilesSearch of this FilesSearch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def drive_id(self):
        """Gets the drive_id of this FilesSearch.

        ID of the drive to filter on

        :return: The drive_id of this FilesSearch.
        :rtype: str
        """
        return self._drive_id

    @drive_id.setter
    def drive_id(self, drive_id):
        """Sets the drive_id of this FilesSearch.

        ID of the drive to filter on

        :param drive_id: The drive_id of this FilesSearch.
        :type drive_id: str
        """

        self._drive_id = drive_id

    @property
    def query(self):
        """Gets the query of this FilesSearch.

        The query to search for. May match across multiple fields.

        :return: The query of this FilesSearch.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this FilesSearch.

        The query to search for. May match across multiple fields.

        :param query: The query of this FilesSearch.
        :type query: str
        """
        if query is None:
            raise ValueError("Invalid value for `query`, must not be `None`")

        self._query = query
