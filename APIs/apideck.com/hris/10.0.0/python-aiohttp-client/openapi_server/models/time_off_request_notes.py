# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TimeOffRequestNotes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, employee: str=None, manager: str=None):
        """TimeOffRequestNotes - a model defined in OpenAPI

        :param employee: The employee of this TimeOffRequestNotes.
        :param manager: The manager of this TimeOffRequestNotes.
        """
        self.openapi_types = {
            'employee': str,
            'manager': str
        }

        self.attribute_map = {
            'employee': 'employee',
            'manager': 'manager'
        }

        self._employee = employee
        self._manager = manager

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimeOffRequestNotes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimeOffRequest_notes of this TimeOffRequestNotes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def employee(self):
        """Gets the employee of this TimeOffRequestNotes.


        :return: The employee of this TimeOffRequestNotes.
        :rtype: str
        """
        return self._employee

    @employee.setter
    def employee(self, employee):
        """Sets the employee of this TimeOffRequestNotes.


        :param employee: The employee of this TimeOffRequestNotes.
        :type employee: str
        """

        self._employee = employee

    @property
    def manager(self):
        """Gets the manager of this TimeOffRequestNotes.


        :return: The manager of this TimeOffRequestNotes.
        :rtype: str
        """
        return self._manager

    @manager.setter
    def manager(self, manager):
        """Sets the manager of this TimeOffRequestNotes.


        :param manager: The manager of this TimeOffRequestNotes.
        :type manager: str
        """

        self._manager = manager
