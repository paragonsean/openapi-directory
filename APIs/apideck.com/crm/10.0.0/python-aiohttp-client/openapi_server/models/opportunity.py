# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server.models.custom_field import CustomField
from openapi_server import util


class Opportunity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, close_date: date=None, company_id: str=None, company_name: str=None, contact_id: str=None, contact_ids: List[str]=None, created_at: datetime=None, created_by: str=None, currency: Currency=None, custom_fields: List[CustomField]=None, custom_mappings: object=None, date_last_contacted: datetime=None, date_lead_created: datetime=None, date_stage_changed: datetime=None, deleted: bool=None, description: str=None, expected_revenue: float=None, id: str=None, interaction_count: float=None, last_activity_at: str=None, lead_id: str=None, lead_source: str=None, loss_reason: str=None, loss_reason_id: str=None, monetary_amount: float=None, owner_id: str=None, pipeline_id: str=None, pipeline_stage_id: str=None, primary_contact_id: str=None, priority: str=None, source_id: str=None, stage_last_changed_at: datetime=None, status: str=None, status_id: str=None, tags: List[str]=None, title: str=None, type: str=None, updated_at: datetime=None, updated_by: str=None, win_probability: float=None, won_reason: str=None, won_reason_id: str=None):
        """Opportunity - a model defined in OpenAPI

        :param close_date: The close_date of this Opportunity.
        :param company_id: The company_id of this Opportunity.
        :param company_name: The company_name of this Opportunity.
        :param contact_id: The contact_id of this Opportunity.
        :param contact_ids: The contact_ids of this Opportunity.
        :param created_at: The created_at of this Opportunity.
        :param created_by: The created_by of this Opportunity.
        :param currency: The currency of this Opportunity.
        :param custom_fields: The custom_fields of this Opportunity.
        :param custom_mappings: The custom_mappings of this Opportunity.
        :param date_last_contacted: The date_last_contacted of this Opportunity.
        :param date_lead_created: The date_lead_created of this Opportunity.
        :param date_stage_changed: The date_stage_changed of this Opportunity.
        :param deleted: The deleted of this Opportunity.
        :param description: The description of this Opportunity.
        :param expected_revenue: The expected_revenue of this Opportunity.
        :param id: The id of this Opportunity.
        :param interaction_count: The interaction_count of this Opportunity.
        :param last_activity_at: The last_activity_at of this Opportunity.
        :param lead_id: The lead_id of this Opportunity.
        :param lead_source: The lead_source of this Opportunity.
        :param loss_reason: The loss_reason of this Opportunity.
        :param loss_reason_id: The loss_reason_id of this Opportunity.
        :param monetary_amount: The monetary_amount of this Opportunity.
        :param owner_id: The owner_id of this Opportunity.
        :param pipeline_id: The pipeline_id of this Opportunity.
        :param pipeline_stage_id: The pipeline_stage_id of this Opportunity.
        :param primary_contact_id: The primary_contact_id of this Opportunity.
        :param priority: The priority of this Opportunity.
        :param source_id: The source_id of this Opportunity.
        :param stage_last_changed_at: The stage_last_changed_at of this Opportunity.
        :param status: The status of this Opportunity.
        :param status_id: The status_id of this Opportunity.
        :param tags: The tags of this Opportunity.
        :param title: The title of this Opportunity.
        :param type: The type of this Opportunity.
        :param updated_at: The updated_at of this Opportunity.
        :param updated_by: The updated_by of this Opportunity.
        :param win_probability: The win_probability of this Opportunity.
        :param won_reason: The won_reason of this Opportunity.
        :param won_reason_id: The won_reason_id of this Opportunity.
        """
        self.openapi_types = {
            'close_date': date,
            'company_id': str,
            'company_name': str,
            'contact_id': str,
            'contact_ids': List[str],
            'created_at': datetime,
            'created_by': str,
            'currency': Currency,
            'custom_fields': List[CustomField],
            'custom_mappings': object,
            'date_last_contacted': datetime,
            'date_lead_created': datetime,
            'date_stage_changed': datetime,
            'deleted': bool,
            'description': str,
            'expected_revenue': float,
            'id': str,
            'interaction_count': float,
            'last_activity_at': str,
            'lead_id': str,
            'lead_source': str,
            'loss_reason': str,
            'loss_reason_id': str,
            'monetary_amount': float,
            'owner_id': str,
            'pipeline_id': str,
            'pipeline_stage_id': str,
            'primary_contact_id': str,
            'priority': str,
            'source_id': str,
            'stage_last_changed_at': datetime,
            'status': str,
            'status_id': str,
            'tags': List[str],
            'title': str,
            'type': str,
            'updated_at': datetime,
            'updated_by': str,
            'win_probability': float,
            'won_reason': str,
            'won_reason_id': str
        }

        self.attribute_map = {
            'close_date': 'close_date',
            'company_id': 'company_id',
            'company_name': 'company_name',
            'contact_id': 'contact_id',
            'contact_ids': 'contact_ids',
            'created_at': 'created_at',
            'created_by': 'created_by',
            'currency': 'currency',
            'custom_fields': 'custom_fields',
            'custom_mappings': 'custom_mappings',
            'date_last_contacted': 'date_last_contacted',
            'date_lead_created': 'date_lead_created',
            'date_stage_changed': 'date_stage_changed',
            'deleted': 'deleted',
            'description': 'description',
            'expected_revenue': 'expected_revenue',
            'id': 'id',
            'interaction_count': 'interaction_count',
            'last_activity_at': 'last_activity_at',
            'lead_id': 'lead_id',
            'lead_source': 'lead_source',
            'loss_reason': 'loss_reason',
            'loss_reason_id': 'loss_reason_id',
            'monetary_amount': 'monetary_amount',
            'owner_id': 'owner_id',
            'pipeline_id': 'pipeline_id',
            'pipeline_stage_id': 'pipeline_stage_id',
            'primary_contact_id': 'primary_contact_id',
            'priority': 'priority',
            'source_id': 'source_id',
            'stage_last_changed_at': 'stage_last_changed_at',
            'status': 'status',
            'status_id': 'status_id',
            'tags': 'tags',
            'title': 'title',
            'type': 'type',
            'updated_at': 'updated_at',
            'updated_by': 'updated_by',
            'win_probability': 'win_probability',
            'won_reason': 'won_reason',
            'won_reason_id': 'won_reason_id'
        }

        self._close_date = close_date
        self._company_id = company_id
        self._company_name = company_name
        self._contact_id = contact_id
        self._contact_ids = contact_ids
        self._created_at = created_at
        self._created_by = created_by
        self._currency = currency
        self._custom_fields = custom_fields
        self._custom_mappings = custom_mappings
        self._date_last_contacted = date_last_contacted
        self._date_lead_created = date_lead_created
        self._date_stage_changed = date_stage_changed
        self._deleted = deleted
        self._description = description
        self._expected_revenue = expected_revenue
        self._id = id
        self._interaction_count = interaction_count
        self._last_activity_at = last_activity_at
        self._lead_id = lead_id
        self._lead_source = lead_source
        self._loss_reason = loss_reason
        self._loss_reason_id = loss_reason_id
        self._monetary_amount = monetary_amount
        self._owner_id = owner_id
        self._pipeline_id = pipeline_id
        self._pipeline_stage_id = pipeline_stage_id
        self._primary_contact_id = primary_contact_id
        self._priority = priority
        self._source_id = source_id
        self._stage_last_changed_at = stage_last_changed_at
        self._status = status
        self._status_id = status_id
        self._tags = tags
        self._title = title
        self._type = type
        self._updated_at = updated_at
        self._updated_by = updated_by
        self._win_probability = win_probability
        self._won_reason = won_reason
        self._won_reason_id = won_reason_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Opportunity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Opportunity of this Opportunity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def close_date(self):
        """Gets the close_date of this Opportunity.

        The actual closing date for the opportunity. If close_date is null, the opportunity is not closed yet.

        :return: The close_date of this Opportunity.
        :rtype: date
        """
        return self._close_date

    @close_date.setter
    def close_date(self, close_date):
        """Sets the close_date of this Opportunity.

        The actual closing date for the opportunity. If close_date is null, the opportunity is not closed yet.

        :param close_date: The close_date of this Opportunity.
        :type close_date: date
        """

        self._close_date = close_date

    @property
    def company_id(self):
        """Gets the company_id of this Opportunity.

        The unique identifier of the company associated with the opportunity.

        :return: The company_id of this Opportunity.
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this Opportunity.

        The unique identifier of the company associated with the opportunity.

        :param company_id: The company_id of this Opportunity.
        :type company_id: str
        """

        self._company_id = company_id

    @property
    def company_name(self):
        """Gets the company_name of this Opportunity.

        The name of the company associated with the opportunity.

        :return: The company_name of this Opportunity.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this Opportunity.

        The name of the company associated with the opportunity.

        :param company_name: The company_name of this Opportunity.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def contact_id(self):
        """Gets the contact_id of this Opportunity.

        The unique identifier of the contact associated with the opportunity.

        :return: The contact_id of this Opportunity.
        :rtype: str
        """
        return self._contact_id

    @contact_id.setter
    def contact_id(self, contact_id):
        """Sets the contact_id of this Opportunity.

        The unique identifier of the contact associated with the opportunity.

        :param contact_id: The contact_id of this Opportunity.
        :type contact_id: str
        """

        self._contact_id = contact_id

    @property
    def contact_ids(self):
        """Gets the contact_ids of this Opportunity.

        An array of unique identifiers of all contacts associated with the opportunity.

        :return: The contact_ids of this Opportunity.
        :rtype: List[str]
        """
        return self._contact_ids

    @contact_ids.setter
    def contact_ids(self, contact_ids):
        """Sets the contact_ids of this Opportunity.

        An array of unique identifiers of all contacts associated with the opportunity.

        :param contact_ids: The contact_ids of this Opportunity.
        :type contact_ids: List[str]
        """

        self._contact_ids = contact_ids

    @property
    def created_at(self):
        """Gets the created_at of this Opportunity.

        The date and time when the opportunity was created.

        :return: The created_at of this Opportunity.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Opportunity.

        The date and time when the opportunity was created.

        :param created_at: The created_at of this Opportunity.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this Opportunity.

        The unique identifier of the user who created the opportunity.

        :return: The created_by of this Opportunity.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this Opportunity.

        The unique identifier of the user who created the opportunity.

        :param created_by: The created_by of this Opportunity.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def currency(self):
        """Gets the currency of this Opportunity.


        :return: The currency of this Opportunity.
        :rtype: Currency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this Opportunity.


        :param currency: The currency of this Opportunity.
        :type currency: Currency
        """

        self._currency = currency

    @property
    def custom_fields(self):
        """Gets the custom_fields of this Opportunity.


        :return: The custom_fields of this Opportunity.
        :rtype: List[CustomField]
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this Opportunity.


        :param custom_fields: The custom_fields of this Opportunity.
        :type custom_fields: List[CustomField]
        """

        self._custom_fields = custom_fields

    @property
    def custom_mappings(self):
        """Gets the custom_mappings of this Opportunity.

        When custom mappings are configured on the resource, the result is included here.

        :return: The custom_mappings of this Opportunity.
        :rtype: object
        """
        return self._custom_mappings

    @custom_mappings.setter
    def custom_mappings(self, custom_mappings):
        """Sets the custom_mappings of this Opportunity.

        When custom mappings are configured on the resource, the result is included here.

        :param custom_mappings: The custom_mappings of this Opportunity.
        :type custom_mappings: object
        """

        self._custom_mappings = custom_mappings

    @property
    def date_last_contacted(self):
        """Gets the date_last_contacted of this Opportunity.

        The date and time when the opportunity was last contacted.

        :return: The date_last_contacted of this Opportunity.
        :rtype: datetime
        """
        return self._date_last_contacted

    @date_last_contacted.setter
    def date_last_contacted(self, date_last_contacted):
        """Sets the date_last_contacted of this Opportunity.

        The date and time when the opportunity was last contacted.

        :param date_last_contacted: The date_last_contacted of this Opportunity.
        :type date_last_contacted: datetime
        """

        self._date_last_contacted = date_last_contacted

    @property
    def date_lead_created(self):
        """Gets the date_lead_created of this Opportunity.

        The date and time when the lead associated with the opportunity was created.

        :return: The date_lead_created of this Opportunity.
        :rtype: datetime
        """
        return self._date_lead_created

    @date_lead_created.setter
    def date_lead_created(self, date_lead_created):
        """Sets the date_lead_created of this Opportunity.

        The date and time when the lead associated with the opportunity was created.

        :param date_lead_created: The date_lead_created of this Opportunity.
        :type date_lead_created: datetime
        """

        self._date_lead_created = date_lead_created

    @property
    def date_stage_changed(self):
        """Gets the date_stage_changed of this Opportunity.

        The date and time when the stage of the opportunity was last changed.

        :return: The date_stage_changed of this Opportunity.
        :rtype: datetime
        """
        return self._date_stage_changed

    @date_stage_changed.setter
    def date_stage_changed(self, date_stage_changed):
        """Sets the date_stage_changed of this Opportunity.

        The date and time when the stage of the opportunity was last changed.

        :param date_stage_changed: The date_stage_changed of this Opportunity.
        :type date_stage_changed: datetime
        """

        self._date_stage_changed = date_stage_changed

    @property
    def deleted(self):
        """Gets the deleted of this Opportunity.

        Indicates whether the opportunity has been deleted.

        :return: The deleted of this Opportunity.
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this Opportunity.

        Indicates whether the opportunity has been deleted.

        :param deleted: The deleted of this Opportunity.
        :type deleted: bool
        """

        self._deleted = deleted

    @property
    def description(self):
        """Gets the description of this Opportunity.

        A description of the opportunity.

        :return: The description of this Opportunity.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Opportunity.

        A description of the opportunity.

        :param description: The description of this Opportunity.
        :type description: str
        """

        self._description = description

    @property
    def expected_revenue(self):
        """Gets the expected_revenue of this Opportunity.

        The expected revenue from the opportunity

        :return: The expected_revenue of this Opportunity.
        :rtype: float
        """
        return self._expected_revenue

    @expected_revenue.setter
    def expected_revenue(self, expected_revenue):
        """Sets the expected_revenue of this Opportunity.

        The expected revenue from the opportunity

        :param expected_revenue: The expected_revenue of this Opportunity.
        :type expected_revenue: float
        """

        self._expected_revenue = expected_revenue

    @property
    def id(self):
        """Gets the id of this Opportunity.

        A unique identifier for the opportunity.

        :return: The id of this Opportunity.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Opportunity.

        A unique identifier for the opportunity.

        :param id: The id of this Opportunity.
        :type id: str
        """

        self._id = id

    @property
    def interaction_count(self):
        """Gets the interaction_count of this Opportunity.

        The number of interactions with the opportunity.

        :return: The interaction_count of this Opportunity.
        :rtype: float
        """
        return self._interaction_count

    @interaction_count.setter
    def interaction_count(self, interaction_count):
        """Sets the interaction_count of this Opportunity.

        The number of interactions with the opportunity.

        :param interaction_count: The interaction_count of this Opportunity.
        :type interaction_count: float
        """

        self._interaction_count = interaction_count

    @property
    def last_activity_at(self):
        """Gets the last_activity_at of this Opportunity.

        The date and time of the last activity associated with the opportunity.

        :return: The last_activity_at of this Opportunity.
        :rtype: str
        """
        return self._last_activity_at

    @last_activity_at.setter
    def last_activity_at(self, last_activity_at):
        """Sets the last_activity_at of this Opportunity.

        The date and time of the last activity associated with the opportunity.

        :param last_activity_at: The last_activity_at of this Opportunity.
        :type last_activity_at: str
        """

        self._last_activity_at = last_activity_at

    @property
    def lead_id(self):
        """Gets the lead_id of this Opportunity.

        The unique identifier of the lead associated with the opportunity.

        :return: The lead_id of this Opportunity.
        :rtype: str
        """
        return self._lead_id

    @lead_id.setter
    def lead_id(self, lead_id):
        """Sets the lead_id of this Opportunity.

        The unique identifier of the lead associated with the opportunity.

        :param lead_id: The lead_id of this Opportunity.
        :type lead_id: str
        """

        self._lead_id = lead_id

    @property
    def lead_source(self):
        """Gets the lead_source of this Opportunity.

        The source of the lead associated with the opportunity.

        :return: The lead_source of this Opportunity.
        :rtype: str
        """
        return self._lead_source

    @lead_source.setter
    def lead_source(self, lead_source):
        """Sets the lead_source of this Opportunity.

        The source of the lead associated with the opportunity.

        :param lead_source: The lead_source of this Opportunity.
        :type lead_source: str
        """

        self._lead_source = lead_source

    @property
    def loss_reason(self):
        """Gets the loss_reason of this Opportunity.

        The reason why the opportunity was lost.

        :return: The loss_reason of this Opportunity.
        :rtype: str
        """
        return self._loss_reason

    @loss_reason.setter
    def loss_reason(self, loss_reason):
        """Sets the loss_reason of this Opportunity.

        The reason why the opportunity was lost.

        :param loss_reason: The loss_reason of this Opportunity.
        :type loss_reason: str
        """

        self._loss_reason = loss_reason

    @property
    def loss_reason_id(self):
        """Gets the loss_reason_id of this Opportunity.

        The unique identifier of the reason why the opportunity was lost.

        :return: The loss_reason_id of this Opportunity.
        :rtype: str
        """
        return self._loss_reason_id

    @loss_reason_id.setter
    def loss_reason_id(self, loss_reason_id):
        """Sets the loss_reason_id of this Opportunity.

        The unique identifier of the reason why the opportunity was lost.

        :param loss_reason_id: The loss_reason_id of this Opportunity.
        :type loss_reason_id: str
        """

        self._loss_reason_id = loss_reason_id

    @property
    def monetary_amount(self):
        """Gets the monetary_amount of this Opportunity.

        The monetary value associated with the opportunity

        :return: The monetary_amount of this Opportunity.
        :rtype: float
        """
        return self._monetary_amount

    @monetary_amount.setter
    def monetary_amount(self, monetary_amount):
        """Sets the monetary_amount of this Opportunity.

        The monetary value associated with the opportunity

        :param monetary_amount: The monetary_amount of this Opportunity.
        :type monetary_amount: float
        """

        self._monetary_amount = monetary_amount

    @property
    def owner_id(self):
        """Gets the owner_id of this Opportunity.

        The unique identifier of the user who owns the opportunity.

        :return: The owner_id of this Opportunity.
        :rtype: str
        """
        return self._owner_id

    @owner_id.setter
    def owner_id(self, owner_id):
        """Sets the owner_id of this Opportunity.

        The unique identifier of the user who owns the opportunity.

        :param owner_id: The owner_id of this Opportunity.
        :type owner_id: str
        """

        self._owner_id = owner_id

    @property
    def pipeline_id(self):
        """Gets the pipeline_id of this Opportunity.

        The unique identifier of the pipeline associated with the opportunity

        :return: The pipeline_id of this Opportunity.
        :rtype: str
        """
        return self._pipeline_id

    @pipeline_id.setter
    def pipeline_id(self, pipeline_id):
        """Sets the pipeline_id of this Opportunity.

        The unique identifier of the pipeline associated with the opportunity

        :param pipeline_id: The pipeline_id of this Opportunity.
        :type pipeline_id: str
        """

        self._pipeline_id = pipeline_id

    @property
    def pipeline_stage_id(self):
        """Gets the pipeline_stage_id of this Opportunity.

        The unique identifier of the stage in the pipeline associated with the opportunity.

        :return: The pipeline_stage_id of this Opportunity.
        :rtype: str
        """
        return self._pipeline_stage_id

    @pipeline_stage_id.setter
    def pipeline_stage_id(self, pipeline_stage_id):
        """Sets the pipeline_stage_id of this Opportunity.

        The unique identifier of the stage in the pipeline associated with the opportunity.

        :param pipeline_stage_id: The pipeline_stage_id of this Opportunity.
        :type pipeline_stage_id: str
        """

        self._pipeline_stage_id = pipeline_stage_id

    @property
    def primary_contact_id(self):
        """Gets the primary_contact_id of this Opportunity.

        The unique identifier of the primary contact associated with the opportunity.

        :return: The primary_contact_id of this Opportunity.
        :rtype: str
        """
        return self._primary_contact_id

    @primary_contact_id.setter
    def primary_contact_id(self, primary_contact_id):
        """Sets the primary_contact_id of this Opportunity.

        The unique identifier of the primary contact associated with the opportunity.

        :param primary_contact_id: The primary_contact_id of this Opportunity.
        :type primary_contact_id: str
        """
        if primary_contact_id is None:
            raise ValueError("Invalid value for `primary_contact_id`, must not be `None`")

        self._primary_contact_id = primary_contact_id

    @property
    def priority(self):
        """Gets the priority of this Opportunity.

        The priority level of the opportunity.

        :return: The priority of this Opportunity.
        :rtype: str
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this Opportunity.

        The priority level of the opportunity.

        :param priority: The priority of this Opportunity.
        :type priority: str
        """

        self._priority = priority

    @property
    def source_id(self):
        """Gets the source_id of this Opportunity.

        The unique identifier of the source of the opportunity.

        :return: The source_id of this Opportunity.
        :rtype: str
        """
        return self._source_id

    @source_id.setter
    def source_id(self, source_id):
        """Sets the source_id of this Opportunity.

        The unique identifier of the source of the opportunity.

        :param source_id: The source_id of this Opportunity.
        :type source_id: str
        """

        self._source_id = source_id

    @property
    def stage_last_changed_at(self):
        """Gets the stage_last_changed_at of this Opportunity.

        The date and time when the stage of the opportunity was last changed.

        :return: The stage_last_changed_at of this Opportunity.
        :rtype: datetime
        """
        return self._stage_last_changed_at

    @stage_last_changed_at.setter
    def stage_last_changed_at(self, stage_last_changed_at):
        """Sets the stage_last_changed_at of this Opportunity.

        The date and time when the stage of the opportunity was last changed.

        :param stage_last_changed_at: The stage_last_changed_at of this Opportunity.
        :type stage_last_changed_at: datetime
        """

        self._stage_last_changed_at = stage_last_changed_at

    @property
    def status(self):
        """Gets the status of this Opportunity.

        The current status of the opportunity.

        :return: The status of this Opportunity.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Opportunity.

        The current status of the opportunity.

        :param status: The status of this Opportunity.
        :type status: str
        """

        self._status = status

    @property
    def status_id(self):
        """Gets the status_id of this Opportunity.

        The unique identifier of the current status of the opportunity.

        :return: The status_id of this Opportunity.
        :rtype: str
        """
        return self._status_id

    @status_id.setter
    def status_id(self, status_id):
        """Sets the status_id of this Opportunity.

        The unique identifier of the current status of the opportunity.

        :param status_id: The status_id of this Opportunity.
        :type status_id: str
        """

        self._status_id = status_id

    @property
    def tags(self):
        """Gets the tags of this Opportunity.


        :return: The tags of this Opportunity.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Opportunity.


        :param tags: The tags of this Opportunity.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def title(self):
        """Gets the title of this Opportunity.

        The title or name of the opportunity.

        :return: The title of this Opportunity.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Opportunity.

        The title or name of the opportunity.

        :param title: The title of this Opportunity.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")
        if title is not None and len(title) < 1:
            raise ValueError("Invalid value for `title`, length must be greater than or equal to `1`")

        self._title = title

    @property
    def type(self):
        """Gets the type of this Opportunity.

        The type of the opportunity

        :return: The type of this Opportunity.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Opportunity.

        The type of the opportunity

        :param type: The type of this Opportunity.
        :type type: str
        """

        self._type = type

    @property
    def updated_at(self):
        """Gets the updated_at of this Opportunity.

        The date and time when the opportunity was last updated.

        :return: The updated_at of this Opportunity.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Opportunity.

        The date and time when the opportunity was last updated.

        :param updated_at: The updated_at of this Opportunity.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def updated_by(self):
        """Gets the updated_by of this Opportunity.

        The unique identifier of the user who last updated the opportunity.

        :return: The updated_by of this Opportunity.
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this Opportunity.

        The unique identifier of the user who last updated the opportunity.

        :param updated_by: The updated_by of this Opportunity.
        :type updated_by: str
        """

        self._updated_by = updated_by

    @property
    def win_probability(self):
        """Gets the win_probability of this Opportunity.

        The probability of winning the opportunity, expressed as a percentage.

        :return: The win_probability of this Opportunity.
        :rtype: float
        """
        return self._win_probability

    @win_probability.setter
    def win_probability(self, win_probability):
        """Sets the win_probability of this Opportunity.

        The probability of winning the opportunity, expressed as a percentage.

        :param win_probability: The win_probability of this Opportunity.
        :type win_probability: float
        """

        self._win_probability = win_probability

    @property
    def won_reason(self):
        """Gets the won_reason of this Opportunity.

        The reason why the opportunity was won.

        :return: The won_reason of this Opportunity.
        :rtype: str
        """
        return self._won_reason

    @won_reason.setter
    def won_reason(self, won_reason):
        """Sets the won_reason of this Opportunity.

        The reason why the opportunity was won.

        :param won_reason: The won_reason of this Opportunity.
        :type won_reason: str
        """

        self._won_reason = won_reason

    @property
    def won_reason_id(self):
        """Gets the won_reason_id of this Opportunity.

        The unique identifier of the reason why the opportunity was won.

        :return: The won_reason_id of this Opportunity.
        :rtype: str
        """
        return self._won_reason_id

    @won_reason_id.setter
    def won_reason_id(self, won_reason_id):
        """Sets the won_reason_id of this Opportunity.

        The unique identifier of the reason why the opportunity was won.

        :param won_reason_id: The won_reason_id of this Opportunity.
        :type won_reason_id: str
        """

        self._won_reason_id = won_reason_id
