# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WebhookEventLogAttemptsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, execution_attempt: float=None, status_code: int=None, success: bool=None, timestamp: str=None):
        """WebhookEventLogAttemptsInner - a model defined in OpenAPI

        :param execution_attempt: The execution_attempt of this WebhookEventLogAttemptsInner.
        :param status_code: The status_code of this WebhookEventLogAttemptsInner.
        :param success: The success of this WebhookEventLogAttemptsInner.
        :param timestamp: The timestamp of this WebhookEventLogAttemptsInner.
        """
        self.openapi_types = {
            'execution_attempt': float,
            'status_code': int,
            'success': bool,
            'timestamp': str
        }

        self.attribute_map = {
            'execution_attempt': 'execution_attempt',
            'status_code': 'status_code',
            'success': 'success',
            'timestamp': 'timestamp'
        }

        self._execution_attempt = execution_attempt
        self._status_code = status_code
        self._success = success
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebhookEventLogAttemptsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebhookEventLog_attempts_inner of this WebhookEventLogAttemptsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def execution_attempt(self):
        """Gets the execution_attempt of this WebhookEventLogAttemptsInner.

        Number of attempts webhook endpoint was called before a success was returned or eventually failed

        :return: The execution_attempt of this WebhookEventLogAttemptsInner.
        :rtype: float
        """
        return self._execution_attempt

    @execution_attempt.setter
    def execution_attempt(self, execution_attempt):
        """Sets the execution_attempt of this WebhookEventLogAttemptsInner.

        Number of attempts webhook endpoint was called before a success was returned or eventually failed

        :param execution_attempt: The execution_attempt of this WebhookEventLogAttemptsInner.
        :type execution_attempt: float
        """

        self._execution_attempt = execution_attempt

    @property
    def status_code(self):
        """Gets the status_code of this WebhookEventLogAttemptsInner.

        HTTP Status code that was returned.

        :return: The status_code of this WebhookEventLogAttemptsInner.
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this WebhookEventLogAttemptsInner.

        HTTP Status code that was returned.

        :param status_code: The status_code of this WebhookEventLogAttemptsInner.
        :type status_code: int
        """

        self._status_code = status_code

    @property
    def success(self):
        """Gets the success of this WebhookEventLogAttemptsInner.

        Whether or not the request was successful.

        :return: The success of this WebhookEventLogAttemptsInner.
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this WebhookEventLogAttemptsInner.

        Whether or not the request was successful.

        :param success: The success of this WebhookEventLogAttemptsInner.
        :type success: bool
        """

        self._success = success

    @property
    def timestamp(self):
        """Gets the timestamp of this WebhookEventLogAttemptsInner.

        ISO Date and time when the request was made.

        :return: The timestamp of this WebhookEventLogAttemptsInner.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this WebhookEventLogAttemptsInner.

        ISO Date and time when the request was made.

        :param timestamp: The timestamp of this WebhookEventLogAttemptsInner.
        :type timestamp: str
        """

        self._timestamp = timestamp
