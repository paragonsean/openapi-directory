# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.webhook import Webhook
from openapi_server import util


class CreateWebhookResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: Webhook=None, status: str=None, status_code: int=None):
        """CreateWebhookResponse - a model defined in OpenAPI

        :param data: The data of this CreateWebhookResponse.
        :param status: The status of this CreateWebhookResponse.
        :param status_code: The status_code of this CreateWebhookResponse.
        """
        self.openapi_types = {
            'data': Webhook,
            'status': str,
            'status_code': int
        }

        self.attribute_map = {
            'data': 'data',
            'status': 'status',
            'status_code': 'status_code'
        }

        self._data = data
        self._status = status
        self._status_code = status_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateWebhookResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateWebhookResponse of this CreateWebhookResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this CreateWebhookResponse.


        :return: The data of this CreateWebhookResponse.
        :rtype: Webhook
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this CreateWebhookResponse.


        :param data: The data of this CreateWebhookResponse.
        :type data: Webhook
        """
        if data is None:
            raise ValueError("Invalid value for `data`, must not be `None`")

        self._data = data

    @property
    def status(self):
        """Gets the status of this CreateWebhookResponse.

        HTTP Response Status

        :return: The status of this CreateWebhookResponse.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CreateWebhookResponse.

        HTTP Response Status

        :param status: The status of this CreateWebhookResponse.
        :type status: str
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def status_code(self):
        """Gets the status_code of this CreateWebhookResponse.

        HTTP Response Status Code

        :return: The status_code of this CreateWebhookResponse.
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this CreateWebhookResponse.

        HTTP Response Status Code

        :param status_code: The status_code of this CreateWebhookResponse.
        :type status_code: int
        """
        if status_code is None:
            raise ValueError("Invalid value for `status_code`, must not be `None`")

        self._status_code = status_code
