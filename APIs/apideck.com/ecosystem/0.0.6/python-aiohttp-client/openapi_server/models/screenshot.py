# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file import File
from openapi_server.models.translation import Translation
from openapi_server import util


class Screenshot(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, caption: str=None, file: File=None, id: str=None, translations: List[Translation]=None):
        """Screenshot - a model defined in OpenAPI

        :param caption: The caption of this Screenshot.
        :param file: The file of this Screenshot.
        :param id: The id of this Screenshot.
        :param translations: The translations of this Screenshot.
        """
        self.openapi_types = {
            'caption': str,
            'file': File,
            'id': str,
            'translations': List[Translation]
        }

        self.attribute_map = {
            'caption': 'caption',
            'file': 'file',
            'id': 'id',
            'translations': 'translations'
        }

        self._caption = caption
        self._file = file
        self._id = id
        self._translations = translations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Screenshot':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Screenshot of this Screenshot.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def caption(self):
        """Gets the caption of this Screenshot.


        :return: The caption of this Screenshot.
        :rtype: str
        """
        return self._caption

    @caption.setter
    def caption(self, caption):
        """Sets the caption of this Screenshot.


        :param caption: The caption of this Screenshot.
        :type caption: str
        """

        self._caption = caption

    @property
    def file(self):
        """Gets the file of this Screenshot.


        :return: The file of this Screenshot.
        :rtype: File
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this Screenshot.


        :param file: The file of this Screenshot.
        :type file: File
        """

        self._file = file

    @property
    def id(self):
        """Gets the id of this Screenshot.


        :return: The id of this Screenshot.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Screenshot.


        :param id: The id of this Screenshot.
        :type id: str
        """

        self._id = id

    @property
    def translations(self):
        """Gets the translations of this Screenshot.


        :return: The translations of this Screenshot.
        :rtype: List[Translation]
        """
        return self._translations

    @translations.setter
    def translations(self, translations):
        """Sets the translations of this Screenshot.


        :param translations: The translations of this Screenshot.
        :type translations: List[Translation]
        """

        self._translations = translations
