# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.category import Category
from openapi_server.models.collection import Collection
from openapi_server.models.file import File
from openapi_server.models.logo import Logo
from openapi_server.models.media import Media
from openapi_server.models.partner import Partner
from openapi_server.models.product import Product
from openapi_server.models.screenshot import Screenshot
from openapi_server.models.translation import Translation
from openapi_server import util


class Listing(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, automate_id: str=None, blendr_id: str=None, card_background_color: str=None, card_background_image: File=None, categories: List[Category]=None, cloud_service_id: str=None, collections: List[Collection]=None, combidesk_id: str=None, created_at: datetime=None, description: str=None, detail_page_disabled: bool=None, external_id: str=None, features: str=None, id: str=None, integromat_id: str=None, logo: Logo=None, media: List[Media]=None, meta_tag_description: str=None, meta_tag_keywords: str=None, meta_tag_title: str=None, microsoft_flow_id: str=None, name: str=None, native_integration: bool=None, native_integration_link: str=None, partner: Partner=None, piesync_id: str=None, pricing: str=None, products: List[Product]=None, published: bool=None, published_at: datetime=None, screenshots: List[Screenshot]=None, segment_id: str=None, slug: str=None, sticky: bool=None, tag_line: str=None, third_party_integration: bool=None, third_party_integration_link: str=None, translations: List[Translation]=None, tray_io_id: str=None, unify_connector_id: str=None, upcoming: bool=None, updated_at: datetime=None, zapier_id: str=None):
        """Listing - a model defined in OpenAPI

        :param automate_id: The automate_id of this Listing.
        :param blendr_id: The blendr_id of this Listing.
        :param card_background_color: The card_background_color of this Listing.
        :param card_background_image: The card_background_image of this Listing.
        :param categories: The categories of this Listing.
        :param cloud_service_id: The cloud_service_id of this Listing.
        :param collections: The collections of this Listing.
        :param combidesk_id: The combidesk_id of this Listing.
        :param created_at: The created_at of this Listing.
        :param description: The description of this Listing.
        :param detail_page_disabled: The detail_page_disabled of this Listing.
        :param external_id: The external_id of this Listing.
        :param features: The features of this Listing.
        :param id: The id of this Listing.
        :param integromat_id: The integromat_id of this Listing.
        :param logo: The logo of this Listing.
        :param media: The media of this Listing.
        :param meta_tag_description: The meta_tag_description of this Listing.
        :param meta_tag_keywords: The meta_tag_keywords of this Listing.
        :param meta_tag_title: The meta_tag_title of this Listing.
        :param microsoft_flow_id: The microsoft_flow_id of this Listing.
        :param name: The name of this Listing.
        :param native_integration: The native_integration of this Listing.
        :param native_integration_link: The native_integration_link of this Listing.
        :param partner: The partner of this Listing.
        :param piesync_id: The piesync_id of this Listing.
        :param pricing: The pricing of this Listing.
        :param products: The products of this Listing.
        :param published: The published of this Listing.
        :param published_at: The published_at of this Listing.
        :param screenshots: The screenshots of this Listing.
        :param segment_id: The segment_id of this Listing.
        :param slug: The slug of this Listing.
        :param sticky: The sticky of this Listing.
        :param tag_line: The tag_line of this Listing.
        :param third_party_integration: The third_party_integration of this Listing.
        :param third_party_integration_link: The third_party_integration_link of this Listing.
        :param translations: The translations of this Listing.
        :param tray_io_id: The tray_io_id of this Listing.
        :param unify_connector_id: The unify_connector_id of this Listing.
        :param upcoming: The upcoming of this Listing.
        :param updated_at: The updated_at of this Listing.
        :param zapier_id: The zapier_id of this Listing.
        """
        self.openapi_types = {
            'automate_id': str,
            'blendr_id': str,
            'card_background_color': str,
            'card_background_image': File,
            'categories': List[Category],
            'cloud_service_id': str,
            'collections': List[Collection],
            'combidesk_id': str,
            'created_at': datetime,
            'description': str,
            'detail_page_disabled': bool,
            'external_id': str,
            'features': str,
            'id': str,
            'integromat_id': str,
            'logo': Logo,
            'media': List[Media],
            'meta_tag_description': str,
            'meta_tag_keywords': str,
            'meta_tag_title': str,
            'microsoft_flow_id': str,
            'name': str,
            'native_integration': bool,
            'native_integration_link': str,
            'partner': Partner,
            'piesync_id': str,
            'pricing': str,
            'products': List[Product],
            'published': bool,
            'published_at': datetime,
            'screenshots': List[Screenshot],
            'segment_id': str,
            'slug': str,
            'sticky': bool,
            'tag_line': str,
            'third_party_integration': bool,
            'third_party_integration_link': str,
            'translations': List[Translation],
            'tray_io_id': str,
            'unify_connector_id': str,
            'upcoming': bool,
            'updated_at': datetime,
            'zapier_id': str
        }

        self.attribute_map = {
            'automate_id': 'automate_id',
            'blendr_id': 'blendr_id',
            'card_background_color': 'card_background_color',
            'card_background_image': 'card_background_image',
            'categories': 'categories',
            'cloud_service_id': 'cloud_service_id',
            'collections': 'collections',
            'combidesk_id': 'combidesk_id',
            'created_at': 'created_at',
            'description': 'description',
            'detail_page_disabled': 'detail_page_disabled',
            'external_id': 'external_id',
            'features': 'features',
            'id': 'id',
            'integromat_id': 'integromat_id',
            'logo': 'logo',
            'media': 'media',
            'meta_tag_description': 'meta_tag_description',
            'meta_tag_keywords': 'meta_tag_keywords',
            'meta_tag_title': 'meta_tag_title',
            'microsoft_flow_id': 'microsoft_flow_id',
            'name': 'name',
            'native_integration': 'native_integration',
            'native_integration_link': 'native_integration_link',
            'partner': 'partner',
            'piesync_id': 'piesync_id',
            'pricing': 'pricing',
            'products': 'products',
            'published': 'published',
            'published_at': 'published_at',
            'screenshots': 'screenshots',
            'segment_id': 'segment_id',
            'slug': 'slug',
            'sticky': 'sticky',
            'tag_line': 'tag_line',
            'third_party_integration': 'third_party_integration',
            'third_party_integration_link': 'third_party_integration_link',
            'translations': 'translations',
            'tray_io_id': 'tray_io_id',
            'unify_connector_id': 'unify_connector_id',
            'upcoming': 'upcoming',
            'updated_at': 'updated_at',
            'zapier_id': 'zapier_id'
        }

        self._automate_id = automate_id
        self._blendr_id = blendr_id
        self._card_background_color = card_background_color
        self._card_background_image = card_background_image
        self._categories = categories
        self._cloud_service_id = cloud_service_id
        self._collections = collections
        self._combidesk_id = combidesk_id
        self._created_at = created_at
        self._description = description
        self._detail_page_disabled = detail_page_disabled
        self._external_id = external_id
        self._features = features
        self._id = id
        self._integromat_id = integromat_id
        self._logo = logo
        self._media = media
        self._meta_tag_description = meta_tag_description
        self._meta_tag_keywords = meta_tag_keywords
        self._meta_tag_title = meta_tag_title
        self._microsoft_flow_id = microsoft_flow_id
        self._name = name
        self._native_integration = native_integration
        self._native_integration_link = native_integration_link
        self._partner = partner
        self._piesync_id = piesync_id
        self._pricing = pricing
        self._products = products
        self._published = published
        self._published_at = published_at
        self._screenshots = screenshots
        self._segment_id = segment_id
        self._slug = slug
        self._sticky = sticky
        self._tag_line = tag_line
        self._third_party_integration = third_party_integration
        self._third_party_integration_link = third_party_integration_link
        self._translations = translations
        self._tray_io_id = tray_io_id
        self._unify_connector_id = unify_connector_id
        self._upcoming = upcoming
        self._updated_at = updated_at
        self._zapier_id = zapier_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Listing':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Listing of this Listing.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def automate_id(self):
        """Gets the automate_id of this Listing.


        :return: The automate_id of this Listing.
        :rtype: str
        """
        return self._automate_id

    @automate_id.setter
    def automate_id(self, automate_id):
        """Sets the automate_id of this Listing.


        :param automate_id: The automate_id of this Listing.
        :type automate_id: str
        """

        self._automate_id = automate_id

    @property
    def blendr_id(self):
        """Gets the blendr_id of this Listing.


        :return: The blendr_id of this Listing.
        :rtype: str
        """
        return self._blendr_id

    @blendr_id.setter
    def blendr_id(self, blendr_id):
        """Sets the blendr_id of this Listing.


        :param blendr_id: The blendr_id of this Listing.
        :type blendr_id: str
        """

        self._blendr_id = blendr_id

    @property
    def card_background_color(self):
        """Gets the card_background_color of this Listing.


        :return: The card_background_color of this Listing.
        :rtype: str
        """
        return self._card_background_color

    @card_background_color.setter
    def card_background_color(self, card_background_color):
        """Sets the card_background_color of this Listing.


        :param card_background_color: The card_background_color of this Listing.
        :type card_background_color: str
        """

        self._card_background_color = card_background_color

    @property
    def card_background_image(self):
        """Gets the card_background_image of this Listing.


        :return: The card_background_image of this Listing.
        :rtype: File
        """
        return self._card_background_image

    @card_background_image.setter
    def card_background_image(self, card_background_image):
        """Sets the card_background_image of this Listing.


        :param card_background_image: The card_background_image of this Listing.
        :type card_background_image: File
        """

        self._card_background_image = card_background_image

    @property
    def categories(self):
        """Gets the categories of this Listing.


        :return: The categories of this Listing.
        :rtype: List[Category]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this Listing.


        :param categories: The categories of this Listing.
        :type categories: List[Category]
        """

        self._categories = categories

    @property
    def cloud_service_id(self):
        """Gets the cloud_service_id of this Listing.


        :return: The cloud_service_id of this Listing.
        :rtype: str
        """
        return self._cloud_service_id

    @cloud_service_id.setter
    def cloud_service_id(self, cloud_service_id):
        """Sets the cloud_service_id of this Listing.


        :param cloud_service_id: The cloud_service_id of this Listing.
        :type cloud_service_id: str
        """

        self._cloud_service_id = cloud_service_id

    @property
    def collections(self):
        """Gets the collections of this Listing.


        :return: The collections of this Listing.
        :rtype: List[Collection]
        """
        return self._collections

    @collections.setter
    def collections(self, collections):
        """Sets the collections of this Listing.


        :param collections: The collections of this Listing.
        :type collections: List[Collection]
        """

        self._collections = collections

    @property
    def combidesk_id(self):
        """Gets the combidesk_id of this Listing.


        :return: The combidesk_id of this Listing.
        :rtype: str
        """
        return self._combidesk_id

    @combidesk_id.setter
    def combidesk_id(self, combidesk_id):
        """Sets the combidesk_id of this Listing.


        :param combidesk_id: The combidesk_id of this Listing.
        :type combidesk_id: str
        """

        self._combidesk_id = combidesk_id

    @property
    def created_at(self):
        """Gets the created_at of this Listing.


        :return: The created_at of this Listing.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Listing.


        :param created_at: The created_at of this Listing.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def description(self):
        """Gets the description of this Listing.


        :return: The description of this Listing.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Listing.


        :param description: The description of this Listing.
        :type description: str
        """

        self._description = description

    @property
    def detail_page_disabled(self):
        """Gets the detail_page_disabled of this Listing.


        :return: The detail_page_disabled of this Listing.
        :rtype: bool
        """
        return self._detail_page_disabled

    @detail_page_disabled.setter
    def detail_page_disabled(self, detail_page_disabled):
        """Sets the detail_page_disabled of this Listing.


        :param detail_page_disabled: The detail_page_disabled of this Listing.
        :type detail_page_disabled: bool
        """

        self._detail_page_disabled = detail_page_disabled

    @property
    def external_id(self):
        """Gets the external_id of this Listing.


        :return: The external_id of this Listing.
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this Listing.


        :param external_id: The external_id of this Listing.
        :type external_id: str
        """

        self._external_id = external_id

    @property
    def features(self):
        """Gets the features of this Listing.


        :return: The features of this Listing.
        :rtype: str
        """
        return self._features

    @features.setter
    def features(self, features):
        """Sets the features of this Listing.


        :param features: The features of this Listing.
        :type features: str
        """

        self._features = features

    @property
    def id(self):
        """Gets the id of this Listing.


        :return: The id of this Listing.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Listing.


        :param id: The id of this Listing.
        :type id: str
        """

        self._id = id

    @property
    def integromat_id(self):
        """Gets the integromat_id of this Listing.


        :return: The integromat_id of this Listing.
        :rtype: str
        """
        return self._integromat_id

    @integromat_id.setter
    def integromat_id(self, integromat_id):
        """Sets the integromat_id of this Listing.


        :param integromat_id: The integromat_id of this Listing.
        :type integromat_id: str
        """

        self._integromat_id = integromat_id

    @property
    def logo(self):
        """Gets the logo of this Listing.


        :return: The logo of this Listing.
        :rtype: Logo
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this Listing.


        :param logo: The logo of this Listing.
        :type logo: Logo
        """

        self._logo = logo

    @property
    def media(self):
        """Gets the media of this Listing.


        :return: The media of this Listing.
        :rtype: List[Media]
        """
        return self._media

    @media.setter
    def media(self, media):
        """Sets the media of this Listing.


        :param media: The media of this Listing.
        :type media: List[Media]
        """

        self._media = media

    @property
    def meta_tag_description(self):
        """Gets the meta_tag_description of this Listing.


        :return: The meta_tag_description of this Listing.
        :rtype: str
        """
        return self._meta_tag_description

    @meta_tag_description.setter
    def meta_tag_description(self, meta_tag_description):
        """Sets the meta_tag_description of this Listing.


        :param meta_tag_description: The meta_tag_description of this Listing.
        :type meta_tag_description: str
        """

        self._meta_tag_description = meta_tag_description

    @property
    def meta_tag_keywords(self):
        """Gets the meta_tag_keywords of this Listing.


        :return: The meta_tag_keywords of this Listing.
        :rtype: str
        """
        return self._meta_tag_keywords

    @meta_tag_keywords.setter
    def meta_tag_keywords(self, meta_tag_keywords):
        """Sets the meta_tag_keywords of this Listing.


        :param meta_tag_keywords: The meta_tag_keywords of this Listing.
        :type meta_tag_keywords: str
        """

        self._meta_tag_keywords = meta_tag_keywords

    @property
    def meta_tag_title(self):
        """Gets the meta_tag_title of this Listing.


        :return: The meta_tag_title of this Listing.
        :rtype: str
        """
        return self._meta_tag_title

    @meta_tag_title.setter
    def meta_tag_title(self, meta_tag_title):
        """Sets the meta_tag_title of this Listing.


        :param meta_tag_title: The meta_tag_title of this Listing.
        :type meta_tag_title: str
        """

        self._meta_tag_title = meta_tag_title

    @property
    def microsoft_flow_id(self):
        """Gets the microsoft_flow_id of this Listing.


        :return: The microsoft_flow_id of this Listing.
        :rtype: str
        """
        return self._microsoft_flow_id

    @microsoft_flow_id.setter
    def microsoft_flow_id(self, microsoft_flow_id):
        """Sets the microsoft_flow_id of this Listing.


        :param microsoft_flow_id: The microsoft_flow_id of this Listing.
        :type microsoft_flow_id: str
        """

        self._microsoft_flow_id = microsoft_flow_id

    @property
    def name(self):
        """Gets the name of this Listing.


        :return: The name of this Listing.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Listing.


        :param name: The name of this Listing.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def native_integration(self):
        """Gets the native_integration of this Listing.


        :return: The native_integration of this Listing.
        :rtype: bool
        """
        return self._native_integration

    @native_integration.setter
    def native_integration(self, native_integration):
        """Sets the native_integration of this Listing.


        :param native_integration: The native_integration of this Listing.
        :type native_integration: bool
        """

        self._native_integration = native_integration

    @property
    def native_integration_link(self):
        """Gets the native_integration_link of this Listing.


        :return: The native_integration_link of this Listing.
        :rtype: str
        """
        return self._native_integration_link

    @native_integration_link.setter
    def native_integration_link(self, native_integration_link):
        """Sets the native_integration_link of this Listing.


        :param native_integration_link: The native_integration_link of this Listing.
        :type native_integration_link: str
        """

        self._native_integration_link = native_integration_link

    @property
    def partner(self):
        """Gets the partner of this Listing.


        :return: The partner of this Listing.
        :rtype: Partner
        """
        return self._partner

    @partner.setter
    def partner(self, partner):
        """Sets the partner of this Listing.


        :param partner: The partner of this Listing.
        :type partner: Partner
        """

        self._partner = partner

    @property
    def piesync_id(self):
        """Gets the piesync_id of this Listing.


        :return: The piesync_id of this Listing.
        :rtype: str
        """
        return self._piesync_id

    @piesync_id.setter
    def piesync_id(self, piesync_id):
        """Sets the piesync_id of this Listing.


        :param piesync_id: The piesync_id of this Listing.
        :type piesync_id: str
        """

        self._piesync_id = piesync_id

    @property
    def pricing(self):
        """Gets the pricing of this Listing.


        :return: The pricing of this Listing.
        :rtype: str
        """
        return self._pricing

    @pricing.setter
    def pricing(self, pricing):
        """Sets the pricing of this Listing.


        :param pricing: The pricing of this Listing.
        :type pricing: str
        """

        self._pricing = pricing

    @property
    def products(self):
        """Gets the products of this Listing.


        :return: The products of this Listing.
        :rtype: List[Product]
        """
        return self._products

    @products.setter
    def products(self, products):
        """Sets the products of this Listing.


        :param products: The products of this Listing.
        :type products: List[Product]
        """

        self._products = products

    @property
    def published(self):
        """Gets the published of this Listing.


        :return: The published of this Listing.
        :rtype: bool
        """
        return self._published

    @published.setter
    def published(self, published):
        """Sets the published of this Listing.


        :param published: The published of this Listing.
        :type published: bool
        """

        self._published = published

    @property
    def published_at(self):
        """Gets the published_at of this Listing.


        :return: The published_at of this Listing.
        :rtype: datetime
        """
        return self._published_at

    @published_at.setter
    def published_at(self, published_at):
        """Sets the published_at of this Listing.


        :param published_at: The published_at of this Listing.
        :type published_at: datetime
        """

        self._published_at = published_at

    @property
    def screenshots(self):
        """Gets the screenshots of this Listing.


        :return: The screenshots of this Listing.
        :rtype: List[Screenshot]
        """
        return self._screenshots

    @screenshots.setter
    def screenshots(self, screenshots):
        """Sets the screenshots of this Listing.


        :param screenshots: The screenshots of this Listing.
        :type screenshots: List[Screenshot]
        """

        self._screenshots = screenshots

    @property
    def segment_id(self):
        """Gets the segment_id of this Listing.


        :return: The segment_id of this Listing.
        :rtype: str
        """
        return self._segment_id

    @segment_id.setter
    def segment_id(self, segment_id):
        """Sets the segment_id of this Listing.


        :param segment_id: The segment_id of this Listing.
        :type segment_id: str
        """

        self._segment_id = segment_id

    @property
    def slug(self):
        """Gets the slug of this Listing.


        :return: The slug of this Listing.
        :rtype: str
        """
        return self._slug

    @slug.setter
    def slug(self, slug):
        """Sets the slug of this Listing.


        :param slug: The slug of this Listing.
        :type slug: str
        """
        if slug is None:
            raise ValueError("Invalid value for `slug`, must not be `None`")

        self._slug = slug

    @property
    def sticky(self):
        """Gets the sticky of this Listing.


        :return: The sticky of this Listing.
        :rtype: bool
        """
        return self._sticky

    @sticky.setter
    def sticky(self, sticky):
        """Sets the sticky of this Listing.


        :param sticky: The sticky of this Listing.
        :type sticky: bool
        """

        self._sticky = sticky

    @property
    def tag_line(self):
        """Gets the tag_line of this Listing.


        :return: The tag_line of this Listing.
        :rtype: str
        """
        return self._tag_line

    @tag_line.setter
    def tag_line(self, tag_line):
        """Sets the tag_line of this Listing.


        :param tag_line: The tag_line of this Listing.
        :type tag_line: str
        """

        self._tag_line = tag_line

    @property
    def third_party_integration(self):
        """Gets the third_party_integration of this Listing.


        :return: The third_party_integration of this Listing.
        :rtype: bool
        """
        return self._third_party_integration

    @third_party_integration.setter
    def third_party_integration(self, third_party_integration):
        """Sets the third_party_integration of this Listing.


        :param third_party_integration: The third_party_integration of this Listing.
        :type third_party_integration: bool
        """

        self._third_party_integration = third_party_integration

    @property
    def third_party_integration_link(self):
        """Gets the third_party_integration_link of this Listing.


        :return: The third_party_integration_link of this Listing.
        :rtype: str
        """
        return self._third_party_integration_link

    @third_party_integration_link.setter
    def third_party_integration_link(self, third_party_integration_link):
        """Sets the third_party_integration_link of this Listing.


        :param third_party_integration_link: The third_party_integration_link of this Listing.
        :type third_party_integration_link: str
        """

        self._third_party_integration_link = third_party_integration_link

    @property
    def translations(self):
        """Gets the translations of this Listing.


        :return: The translations of this Listing.
        :rtype: List[Translation]
        """
        return self._translations

    @translations.setter
    def translations(self, translations):
        """Sets the translations of this Listing.


        :param translations: The translations of this Listing.
        :type translations: List[Translation]
        """

        self._translations = translations

    @property
    def tray_io_id(self):
        """Gets the tray_io_id of this Listing.


        :return: The tray_io_id of this Listing.
        :rtype: str
        """
        return self._tray_io_id

    @tray_io_id.setter
    def tray_io_id(self, tray_io_id):
        """Sets the tray_io_id of this Listing.


        :param tray_io_id: The tray_io_id of this Listing.
        :type tray_io_id: str
        """

        self._tray_io_id = tray_io_id

    @property
    def unify_connector_id(self):
        """Gets the unify_connector_id of this Listing.


        :return: The unify_connector_id of this Listing.
        :rtype: str
        """
        return self._unify_connector_id

    @unify_connector_id.setter
    def unify_connector_id(self, unify_connector_id):
        """Sets the unify_connector_id of this Listing.


        :param unify_connector_id: The unify_connector_id of this Listing.
        :type unify_connector_id: str
        """

        self._unify_connector_id = unify_connector_id

    @property
    def upcoming(self):
        """Gets the upcoming of this Listing.


        :return: The upcoming of this Listing.
        :rtype: bool
        """
        return self._upcoming

    @upcoming.setter
    def upcoming(self, upcoming):
        """Sets the upcoming of this Listing.


        :param upcoming: The upcoming of this Listing.
        :type upcoming: bool
        """

        self._upcoming = upcoming

    @property
    def updated_at(self):
        """Gets the updated_at of this Listing.


        :return: The updated_at of this Listing.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Listing.


        :param updated_at: The updated_at of this Listing.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def zapier_id(self):
        """Gets the zapier_id of this Listing.


        :return: The zapier_id of this Listing.
        :rtype: str
        """
        return self._zapier_id

    @zapier_id.setter
    def zapier_id(self, zapier_id):
        """Sets the zapier_id of this Listing.


        :param zapier_id: The zapier_id of this Listing.
        :type zapier_id: str
        """

        self._zapier_id = zapier_id
