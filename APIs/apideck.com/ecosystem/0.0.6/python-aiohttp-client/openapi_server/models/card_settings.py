# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CardSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, background_color: str=None, border_color: str=None, border_radius: str=None, border_size: str=None, color: str=None, columns: int=None, description_lines: int=None, icon_border_radius: str=None, icon_shadow_enabled: bool=None, icon_size: int=None, shadow_enabled: bool=None, show_action: bool=None, show_badges: bool=None, show_category: bool=None, show_description: bool=None, style: str=None):
        """CardSettings - a model defined in OpenAPI

        :param background_color: The background_color of this CardSettings.
        :param border_color: The border_color of this CardSettings.
        :param border_radius: The border_radius of this CardSettings.
        :param border_size: The border_size of this CardSettings.
        :param color: The color of this CardSettings.
        :param columns: The columns of this CardSettings.
        :param description_lines: The description_lines of this CardSettings.
        :param icon_border_radius: The icon_border_radius of this CardSettings.
        :param icon_shadow_enabled: The icon_shadow_enabled of this CardSettings.
        :param icon_size: The icon_size of this CardSettings.
        :param shadow_enabled: The shadow_enabled of this CardSettings.
        :param show_action: The show_action of this CardSettings.
        :param show_badges: The show_badges of this CardSettings.
        :param show_category: The show_category of this CardSettings.
        :param show_description: The show_description of this CardSettings.
        :param style: The style of this CardSettings.
        """
        self.openapi_types = {
            'background_color': str,
            'border_color': str,
            'border_radius': str,
            'border_size': str,
            'color': str,
            'columns': int,
            'description_lines': int,
            'icon_border_radius': str,
            'icon_shadow_enabled': bool,
            'icon_size': int,
            'shadow_enabled': bool,
            'show_action': bool,
            'show_badges': bool,
            'show_category': bool,
            'show_description': bool,
            'style': str
        }

        self.attribute_map = {
            'background_color': 'background_color',
            'border_color': 'border_color',
            'border_radius': 'border_radius',
            'border_size': 'border_size',
            'color': 'color',
            'columns': 'columns',
            'description_lines': 'description_lines',
            'icon_border_radius': 'icon_border_radius',
            'icon_shadow_enabled': 'icon_shadow_enabled',
            'icon_size': 'icon_size',
            'shadow_enabled': 'shadow_enabled',
            'show_action': 'show_action',
            'show_badges': 'show_badges',
            'show_category': 'show_category',
            'show_description': 'show_description',
            'style': 'style'
        }

        self._background_color = background_color
        self._border_color = border_color
        self._border_radius = border_radius
        self._border_size = border_size
        self._color = color
        self._columns = columns
        self._description_lines = description_lines
        self._icon_border_radius = icon_border_radius
        self._icon_shadow_enabled = icon_shadow_enabled
        self._icon_size = icon_size
        self._shadow_enabled = shadow_enabled
        self._show_action = show_action
        self._show_badges = show_badges
        self._show_category = show_category
        self._show_description = show_description
        self._style = style

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CardSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CardSettings of this CardSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def background_color(self):
        """Gets the background_color of this CardSettings.


        :return: The background_color of this CardSettings.
        :rtype: str
        """
        return self._background_color

    @background_color.setter
    def background_color(self, background_color):
        """Sets the background_color of this CardSettings.


        :param background_color: The background_color of this CardSettings.
        :type background_color: str
        """

        self._background_color = background_color

    @property
    def border_color(self):
        """Gets the border_color of this CardSettings.


        :return: The border_color of this CardSettings.
        :rtype: str
        """
        return self._border_color

    @border_color.setter
    def border_color(self, border_color):
        """Sets the border_color of this CardSettings.


        :param border_color: The border_color of this CardSettings.
        :type border_color: str
        """

        self._border_color = border_color

    @property
    def border_radius(self):
        """Gets the border_radius of this CardSettings.


        :return: The border_radius of this CardSettings.
        :rtype: str
        """
        return self._border_radius

    @border_radius.setter
    def border_radius(self, border_radius):
        """Sets the border_radius of this CardSettings.


        :param border_radius: The border_radius of this CardSettings.
        :type border_radius: str
        """

        self._border_radius = border_radius

    @property
    def border_size(self):
        """Gets the border_size of this CardSettings.


        :return: The border_size of this CardSettings.
        :rtype: str
        """
        return self._border_size

    @border_size.setter
    def border_size(self, border_size):
        """Sets the border_size of this CardSettings.


        :param border_size: The border_size of this CardSettings.
        :type border_size: str
        """

        self._border_size = border_size

    @property
    def color(self):
        """Gets the color of this CardSettings.


        :return: The color of this CardSettings.
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this CardSettings.


        :param color: The color of this CardSettings.
        :type color: str
        """

        self._color = color

    @property
    def columns(self):
        """Gets the columns of this CardSettings.


        :return: The columns of this CardSettings.
        :rtype: int
        """
        return self._columns

    @columns.setter
    def columns(self, columns):
        """Sets the columns of this CardSettings.


        :param columns: The columns of this CardSettings.
        :type columns: int
        """

        self._columns = columns

    @property
    def description_lines(self):
        """Gets the description_lines of this CardSettings.


        :return: The description_lines of this CardSettings.
        :rtype: int
        """
        return self._description_lines

    @description_lines.setter
    def description_lines(self, description_lines):
        """Sets the description_lines of this CardSettings.


        :param description_lines: The description_lines of this CardSettings.
        :type description_lines: int
        """

        self._description_lines = description_lines

    @property
    def icon_border_radius(self):
        """Gets the icon_border_radius of this CardSettings.


        :return: The icon_border_radius of this CardSettings.
        :rtype: str
        """
        return self._icon_border_radius

    @icon_border_radius.setter
    def icon_border_radius(self, icon_border_radius):
        """Sets the icon_border_radius of this CardSettings.


        :param icon_border_radius: The icon_border_radius of this CardSettings.
        :type icon_border_radius: str
        """

        self._icon_border_radius = icon_border_radius

    @property
    def icon_shadow_enabled(self):
        """Gets the icon_shadow_enabled of this CardSettings.


        :return: The icon_shadow_enabled of this CardSettings.
        :rtype: bool
        """
        return self._icon_shadow_enabled

    @icon_shadow_enabled.setter
    def icon_shadow_enabled(self, icon_shadow_enabled):
        """Sets the icon_shadow_enabled of this CardSettings.


        :param icon_shadow_enabled: The icon_shadow_enabled of this CardSettings.
        :type icon_shadow_enabled: bool
        """

        self._icon_shadow_enabled = icon_shadow_enabled

    @property
    def icon_size(self):
        """Gets the icon_size of this CardSettings.


        :return: The icon_size of this CardSettings.
        :rtype: int
        """
        return self._icon_size

    @icon_size.setter
    def icon_size(self, icon_size):
        """Sets the icon_size of this CardSettings.


        :param icon_size: The icon_size of this CardSettings.
        :type icon_size: int
        """

        self._icon_size = icon_size

    @property
    def shadow_enabled(self):
        """Gets the shadow_enabled of this CardSettings.


        :return: The shadow_enabled of this CardSettings.
        :rtype: bool
        """
        return self._shadow_enabled

    @shadow_enabled.setter
    def shadow_enabled(self, shadow_enabled):
        """Sets the shadow_enabled of this CardSettings.


        :param shadow_enabled: The shadow_enabled of this CardSettings.
        :type shadow_enabled: bool
        """

        self._shadow_enabled = shadow_enabled

    @property
    def show_action(self):
        """Gets the show_action of this CardSettings.


        :return: The show_action of this CardSettings.
        :rtype: bool
        """
        return self._show_action

    @show_action.setter
    def show_action(self, show_action):
        """Sets the show_action of this CardSettings.


        :param show_action: The show_action of this CardSettings.
        :type show_action: bool
        """

        self._show_action = show_action

    @property
    def show_badges(self):
        """Gets the show_badges of this CardSettings.


        :return: The show_badges of this CardSettings.
        :rtype: bool
        """
        return self._show_badges

    @show_badges.setter
    def show_badges(self, show_badges):
        """Sets the show_badges of this CardSettings.


        :param show_badges: The show_badges of this CardSettings.
        :type show_badges: bool
        """

        self._show_badges = show_badges

    @property
    def show_category(self):
        """Gets the show_category of this CardSettings.


        :return: The show_category of this CardSettings.
        :rtype: bool
        """
        return self._show_category

    @show_category.setter
    def show_category(self, show_category):
        """Sets the show_category of this CardSettings.


        :param show_category: The show_category of this CardSettings.
        :type show_category: bool
        """

        self._show_category = show_category

    @property
    def show_description(self):
        """Gets the show_description of this CardSettings.


        :return: The show_description of this CardSettings.
        :rtype: bool
        """
        return self._show_description

    @show_description.setter
    def show_description(self, show_description):
        """Sets the show_description of this CardSettings.


        :param show_description: The show_description of this CardSettings.
        :type show_description: bool
        """

        self._show_description = show_description

    @property
    def style(self):
        """Gets the style of this CardSettings.


        :return: The style of this CardSettings.
        :rtype: str
        """
        return self._style

    @style.setter
    def style(self, style):
        """Sets the style of this CardSettings.


        :param style: The style of this CardSettings.
        :type style: str
        """

        self._style = style
