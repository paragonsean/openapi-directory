# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, css: str=None, css_link: str=None, domain: str=None, html_footer: str=None, html_nav: str=None, java_script_link: str=None):
        """CustomSettings - a model defined in OpenAPI

        :param css: The css of this CustomSettings.
        :param css_link: The css_link of this CustomSettings.
        :param domain: The domain of this CustomSettings.
        :param html_footer: The html_footer of this CustomSettings.
        :param html_nav: The html_nav of this CustomSettings.
        :param java_script_link: The java_script_link of this CustomSettings.
        """
        self.openapi_types = {
            'css': str,
            'css_link': str,
            'domain': str,
            'html_footer': str,
            'html_nav': str,
            'java_script_link': str
        }

        self.attribute_map = {
            'css': 'css',
            'css_link': 'css_link',
            'domain': 'domain',
            'html_footer': 'html_footer',
            'html_nav': 'html_nav',
            'java_script_link': 'java_script_link'
        }

        self._css = css
        self._css_link = css_link
        self._domain = domain
        self._html_footer = html_footer
        self._html_nav = html_nav
        self._java_script_link = java_script_link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomSettings of this CustomSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def css(self):
        """Gets the css of this CustomSettings.


        :return: The css of this CustomSettings.
        :rtype: str
        """
        return self._css

    @css.setter
    def css(self, css):
        """Sets the css of this CustomSettings.


        :param css: The css of this CustomSettings.
        :type css: str
        """

        self._css = css

    @property
    def css_link(self):
        """Gets the css_link of this CustomSettings.


        :return: The css_link of this CustomSettings.
        :rtype: str
        """
        return self._css_link

    @css_link.setter
    def css_link(self, css_link):
        """Sets the css_link of this CustomSettings.


        :param css_link: The css_link of this CustomSettings.
        :type css_link: str
        """

        self._css_link = css_link

    @property
    def domain(self):
        """Gets the domain of this CustomSettings.


        :return: The domain of this CustomSettings.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this CustomSettings.


        :param domain: The domain of this CustomSettings.
        :type domain: str
        """

        self._domain = domain

    @property
    def html_footer(self):
        """Gets the html_footer of this CustomSettings.


        :return: The html_footer of this CustomSettings.
        :rtype: str
        """
        return self._html_footer

    @html_footer.setter
    def html_footer(self, html_footer):
        """Sets the html_footer of this CustomSettings.


        :param html_footer: The html_footer of this CustomSettings.
        :type html_footer: str
        """

        self._html_footer = html_footer

    @property
    def html_nav(self):
        """Gets the html_nav of this CustomSettings.


        :return: The html_nav of this CustomSettings.
        :rtype: str
        """
        return self._html_nav

    @html_nav.setter
    def html_nav(self, html_nav):
        """Sets the html_nav of this CustomSettings.


        :param html_nav: The html_nav of this CustomSettings.
        :type html_nav: str
        """

        self._html_nav = html_nav

    @property
    def java_script_link(self):
        """Gets the java_script_link of this CustomSettings.


        :return: The java_script_link of this CustomSettings.
        :rtype: str
        """
        return self._java_script_link

    @java_script_link.setter
    def java_script_link(self, java_script_link):
        """Sets the java_script_link of this CustomSettings.


        :param java_script_link: The java_script_link of this CustomSettings.
        :type java_script_link: str
        """

        self._java_script_link = java_script_link
