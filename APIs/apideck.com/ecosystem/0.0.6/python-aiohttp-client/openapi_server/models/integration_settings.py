# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IntegrationSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, albacross_id: str=None, automate_enabled: bool=None, blendr_enabled: bool=None, combidesk_enabled: bool=None, crisp_id: str=None, drift_id: str=None, google_analytics_id: str=None, google_tag_manager_id: str=None, heap_id: str=None, hubspot_portal_id: str=None, integromat_enabled: bool=None, intercom_app_id: str=None, iubenda_cookie_policy_id: str=None, iubenda_site_id: str=None, journy_io_domain: str=None, journy_io_id: str=None, livechat_id: str=None, metomic_id: str=None, microsoft_flow_enabled: bool=None, microsoft_flow_id: str=None, onetrust_id: str=None, piesync_enabled: bool=None, segment_enabled: bool=None, segment_id: str=None, tray_io_enabled: bool=None, zapier_beta_link: str=None, zapier_enabled: bool=None, zapier_id: str=None):
        """IntegrationSettings - a model defined in OpenAPI

        :param albacross_id: The albacross_id of this IntegrationSettings.
        :param automate_enabled: The automate_enabled of this IntegrationSettings.
        :param blendr_enabled: The blendr_enabled of this IntegrationSettings.
        :param combidesk_enabled: The combidesk_enabled of this IntegrationSettings.
        :param crisp_id: The crisp_id of this IntegrationSettings.
        :param drift_id: The drift_id of this IntegrationSettings.
        :param google_analytics_id: The google_analytics_id of this IntegrationSettings.
        :param google_tag_manager_id: The google_tag_manager_id of this IntegrationSettings.
        :param heap_id: The heap_id of this IntegrationSettings.
        :param hubspot_portal_id: The hubspot_portal_id of this IntegrationSettings.
        :param integromat_enabled: The integromat_enabled of this IntegrationSettings.
        :param intercom_app_id: The intercom_app_id of this IntegrationSettings.
        :param iubenda_cookie_policy_id: The iubenda_cookie_policy_id of this IntegrationSettings.
        :param iubenda_site_id: The iubenda_site_id of this IntegrationSettings.
        :param journy_io_domain: The journy_io_domain of this IntegrationSettings.
        :param journy_io_id: The journy_io_id of this IntegrationSettings.
        :param livechat_id: The livechat_id of this IntegrationSettings.
        :param metomic_id: The metomic_id of this IntegrationSettings.
        :param microsoft_flow_enabled: The microsoft_flow_enabled of this IntegrationSettings.
        :param microsoft_flow_id: The microsoft_flow_id of this IntegrationSettings.
        :param onetrust_id: The onetrust_id of this IntegrationSettings.
        :param piesync_enabled: The piesync_enabled of this IntegrationSettings.
        :param segment_enabled: The segment_enabled of this IntegrationSettings.
        :param segment_id: The segment_id of this IntegrationSettings.
        :param tray_io_enabled: The tray_io_enabled of this IntegrationSettings.
        :param zapier_beta_link: The zapier_beta_link of this IntegrationSettings.
        :param zapier_enabled: The zapier_enabled of this IntegrationSettings.
        :param zapier_id: The zapier_id of this IntegrationSettings.
        """
        self.openapi_types = {
            'albacross_id': str,
            'automate_enabled': bool,
            'blendr_enabled': bool,
            'combidesk_enabled': bool,
            'crisp_id': str,
            'drift_id': str,
            'google_analytics_id': str,
            'google_tag_manager_id': str,
            'heap_id': str,
            'hubspot_portal_id': str,
            'integromat_enabled': bool,
            'intercom_app_id': str,
            'iubenda_cookie_policy_id': str,
            'iubenda_site_id': str,
            'journy_io_domain': str,
            'journy_io_id': str,
            'livechat_id': str,
            'metomic_id': str,
            'microsoft_flow_enabled': bool,
            'microsoft_flow_id': str,
            'onetrust_id': str,
            'piesync_enabled': bool,
            'segment_enabled': bool,
            'segment_id': str,
            'tray_io_enabled': bool,
            'zapier_beta_link': str,
            'zapier_enabled': bool,
            'zapier_id': str
        }

        self.attribute_map = {
            'albacross_id': 'albacross_id',
            'automate_enabled': 'automate_enabled',
            'blendr_enabled': 'blendr_enabled',
            'combidesk_enabled': 'combidesk_enabled',
            'crisp_id': 'crisp_id',
            'drift_id': 'drift_id',
            'google_analytics_id': 'google_analytics_id',
            'google_tag_manager_id': 'google_tag_manager_id',
            'heap_id': 'heap_id',
            'hubspot_portal_id': 'hubspot_portal_id',
            'integromat_enabled': 'integromat_enabled',
            'intercom_app_id': 'intercom_app_id',
            'iubenda_cookie_policy_id': 'iubenda_cookie_policy_id',
            'iubenda_site_id': 'iubenda_site_id',
            'journy_io_domain': 'journy_io_domain',
            'journy_io_id': 'journy_io_id',
            'livechat_id': 'livechat_id',
            'metomic_id': 'metomic_id',
            'microsoft_flow_enabled': 'microsoft_flow_enabled',
            'microsoft_flow_id': 'microsoft_flow_id',
            'onetrust_id': 'onetrust_id',
            'piesync_enabled': 'piesync_enabled',
            'segment_enabled': 'segment_enabled',
            'segment_id': 'segment_id',
            'tray_io_enabled': 'tray_io_enabled',
            'zapier_beta_link': 'zapier_beta_link',
            'zapier_enabled': 'zapier_enabled',
            'zapier_id': 'zapier_id'
        }

        self._albacross_id = albacross_id
        self._automate_enabled = automate_enabled
        self._blendr_enabled = blendr_enabled
        self._combidesk_enabled = combidesk_enabled
        self._crisp_id = crisp_id
        self._drift_id = drift_id
        self._google_analytics_id = google_analytics_id
        self._google_tag_manager_id = google_tag_manager_id
        self._heap_id = heap_id
        self._hubspot_portal_id = hubspot_portal_id
        self._integromat_enabled = integromat_enabled
        self._intercom_app_id = intercom_app_id
        self._iubenda_cookie_policy_id = iubenda_cookie_policy_id
        self._iubenda_site_id = iubenda_site_id
        self._journy_io_domain = journy_io_domain
        self._journy_io_id = journy_io_id
        self._livechat_id = livechat_id
        self._metomic_id = metomic_id
        self._microsoft_flow_enabled = microsoft_flow_enabled
        self._microsoft_flow_id = microsoft_flow_id
        self._onetrust_id = onetrust_id
        self._piesync_enabled = piesync_enabled
        self._segment_enabled = segment_enabled
        self._segment_id = segment_id
        self._tray_io_enabled = tray_io_enabled
        self._zapier_beta_link = zapier_beta_link
        self._zapier_enabled = zapier_enabled
        self._zapier_id = zapier_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IntegrationSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IntegrationSettings of this IntegrationSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def albacross_id(self):
        """Gets the albacross_id of this IntegrationSettings.


        :return: The albacross_id of this IntegrationSettings.
        :rtype: str
        """
        return self._albacross_id

    @albacross_id.setter
    def albacross_id(self, albacross_id):
        """Sets the albacross_id of this IntegrationSettings.


        :param albacross_id: The albacross_id of this IntegrationSettings.
        :type albacross_id: str
        """

        self._albacross_id = albacross_id

    @property
    def automate_enabled(self):
        """Gets the automate_enabled of this IntegrationSettings.


        :return: The automate_enabled of this IntegrationSettings.
        :rtype: bool
        """
        return self._automate_enabled

    @automate_enabled.setter
    def automate_enabled(self, automate_enabled):
        """Sets the automate_enabled of this IntegrationSettings.


        :param automate_enabled: The automate_enabled of this IntegrationSettings.
        :type automate_enabled: bool
        """

        self._automate_enabled = automate_enabled

    @property
    def blendr_enabled(self):
        """Gets the blendr_enabled of this IntegrationSettings.


        :return: The blendr_enabled of this IntegrationSettings.
        :rtype: bool
        """
        return self._blendr_enabled

    @blendr_enabled.setter
    def blendr_enabled(self, blendr_enabled):
        """Sets the blendr_enabled of this IntegrationSettings.


        :param blendr_enabled: The blendr_enabled of this IntegrationSettings.
        :type blendr_enabled: bool
        """

        self._blendr_enabled = blendr_enabled

    @property
    def combidesk_enabled(self):
        """Gets the combidesk_enabled of this IntegrationSettings.


        :return: The combidesk_enabled of this IntegrationSettings.
        :rtype: bool
        """
        return self._combidesk_enabled

    @combidesk_enabled.setter
    def combidesk_enabled(self, combidesk_enabled):
        """Sets the combidesk_enabled of this IntegrationSettings.


        :param combidesk_enabled: The combidesk_enabled of this IntegrationSettings.
        :type combidesk_enabled: bool
        """

        self._combidesk_enabled = combidesk_enabled

    @property
    def crisp_id(self):
        """Gets the crisp_id of this IntegrationSettings.


        :return: The crisp_id of this IntegrationSettings.
        :rtype: str
        """
        return self._crisp_id

    @crisp_id.setter
    def crisp_id(self, crisp_id):
        """Sets the crisp_id of this IntegrationSettings.


        :param crisp_id: The crisp_id of this IntegrationSettings.
        :type crisp_id: str
        """

        self._crisp_id = crisp_id

    @property
    def drift_id(self):
        """Gets the drift_id of this IntegrationSettings.


        :return: The drift_id of this IntegrationSettings.
        :rtype: str
        """
        return self._drift_id

    @drift_id.setter
    def drift_id(self, drift_id):
        """Sets the drift_id of this IntegrationSettings.


        :param drift_id: The drift_id of this IntegrationSettings.
        :type drift_id: str
        """

        self._drift_id = drift_id

    @property
    def google_analytics_id(self):
        """Gets the google_analytics_id of this IntegrationSettings.


        :return: The google_analytics_id of this IntegrationSettings.
        :rtype: str
        """
        return self._google_analytics_id

    @google_analytics_id.setter
    def google_analytics_id(self, google_analytics_id):
        """Sets the google_analytics_id of this IntegrationSettings.


        :param google_analytics_id: The google_analytics_id of this IntegrationSettings.
        :type google_analytics_id: str
        """

        self._google_analytics_id = google_analytics_id

    @property
    def google_tag_manager_id(self):
        """Gets the google_tag_manager_id of this IntegrationSettings.


        :return: The google_tag_manager_id of this IntegrationSettings.
        :rtype: str
        """
        return self._google_tag_manager_id

    @google_tag_manager_id.setter
    def google_tag_manager_id(self, google_tag_manager_id):
        """Sets the google_tag_manager_id of this IntegrationSettings.


        :param google_tag_manager_id: The google_tag_manager_id of this IntegrationSettings.
        :type google_tag_manager_id: str
        """

        self._google_tag_manager_id = google_tag_manager_id

    @property
    def heap_id(self):
        """Gets the heap_id of this IntegrationSettings.


        :return: The heap_id of this IntegrationSettings.
        :rtype: str
        """
        return self._heap_id

    @heap_id.setter
    def heap_id(self, heap_id):
        """Sets the heap_id of this IntegrationSettings.


        :param heap_id: The heap_id of this IntegrationSettings.
        :type heap_id: str
        """

        self._heap_id = heap_id

    @property
    def hubspot_portal_id(self):
        """Gets the hubspot_portal_id of this IntegrationSettings.


        :return: The hubspot_portal_id of this IntegrationSettings.
        :rtype: str
        """
        return self._hubspot_portal_id

    @hubspot_portal_id.setter
    def hubspot_portal_id(self, hubspot_portal_id):
        """Sets the hubspot_portal_id of this IntegrationSettings.


        :param hubspot_portal_id: The hubspot_portal_id of this IntegrationSettings.
        :type hubspot_portal_id: str
        """

        self._hubspot_portal_id = hubspot_portal_id

    @property
    def integromat_enabled(self):
        """Gets the integromat_enabled of this IntegrationSettings.


        :return: The integromat_enabled of this IntegrationSettings.
        :rtype: bool
        """
        return self._integromat_enabled

    @integromat_enabled.setter
    def integromat_enabled(self, integromat_enabled):
        """Sets the integromat_enabled of this IntegrationSettings.


        :param integromat_enabled: The integromat_enabled of this IntegrationSettings.
        :type integromat_enabled: bool
        """

        self._integromat_enabled = integromat_enabled

    @property
    def intercom_app_id(self):
        """Gets the intercom_app_id of this IntegrationSettings.


        :return: The intercom_app_id of this IntegrationSettings.
        :rtype: str
        """
        return self._intercom_app_id

    @intercom_app_id.setter
    def intercom_app_id(self, intercom_app_id):
        """Sets the intercom_app_id of this IntegrationSettings.


        :param intercom_app_id: The intercom_app_id of this IntegrationSettings.
        :type intercom_app_id: str
        """

        self._intercom_app_id = intercom_app_id

    @property
    def iubenda_cookie_policy_id(self):
        """Gets the iubenda_cookie_policy_id of this IntegrationSettings.


        :return: The iubenda_cookie_policy_id of this IntegrationSettings.
        :rtype: str
        """
        return self._iubenda_cookie_policy_id

    @iubenda_cookie_policy_id.setter
    def iubenda_cookie_policy_id(self, iubenda_cookie_policy_id):
        """Sets the iubenda_cookie_policy_id of this IntegrationSettings.


        :param iubenda_cookie_policy_id: The iubenda_cookie_policy_id of this IntegrationSettings.
        :type iubenda_cookie_policy_id: str
        """

        self._iubenda_cookie_policy_id = iubenda_cookie_policy_id

    @property
    def iubenda_site_id(self):
        """Gets the iubenda_site_id of this IntegrationSettings.


        :return: The iubenda_site_id of this IntegrationSettings.
        :rtype: str
        """
        return self._iubenda_site_id

    @iubenda_site_id.setter
    def iubenda_site_id(self, iubenda_site_id):
        """Sets the iubenda_site_id of this IntegrationSettings.


        :param iubenda_site_id: The iubenda_site_id of this IntegrationSettings.
        :type iubenda_site_id: str
        """

        self._iubenda_site_id = iubenda_site_id

    @property
    def journy_io_domain(self):
        """Gets the journy_io_domain of this IntegrationSettings.


        :return: The journy_io_domain of this IntegrationSettings.
        :rtype: str
        """
        return self._journy_io_domain

    @journy_io_domain.setter
    def journy_io_domain(self, journy_io_domain):
        """Sets the journy_io_domain of this IntegrationSettings.


        :param journy_io_domain: The journy_io_domain of this IntegrationSettings.
        :type journy_io_domain: str
        """

        self._journy_io_domain = journy_io_domain

    @property
    def journy_io_id(self):
        """Gets the journy_io_id of this IntegrationSettings.


        :return: The journy_io_id of this IntegrationSettings.
        :rtype: str
        """
        return self._journy_io_id

    @journy_io_id.setter
    def journy_io_id(self, journy_io_id):
        """Sets the journy_io_id of this IntegrationSettings.


        :param journy_io_id: The journy_io_id of this IntegrationSettings.
        :type journy_io_id: str
        """

        self._journy_io_id = journy_io_id

    @property
    def livechat_id(self):
        """Gets the livechat_id of this IntegrationSettings.


        :return: The livechat_id of this IntegrationSettings.
        :rtype: str
        """
        return self._livechat_id

    @livechat_id.setter
    def livechat_id(self, livechat_id):
        """Sets the livechat_id of this IntegrationSettings.


        :param livechat_id: The livechat_id of this IntegrationSettings.
        :type livechat_id: str
        """

        self._livechat_id = livechat_id

    @property
    def metomic_id(self):
        """Gets the metomic_id of this IntegrationSettings.


        :return: The metomic_id of this IntegrationSettings.
        :rtype: str
        """
        return self._metomic_id

    @metomic_id.setter
    def metomic_id(self, metomic_id):
        """Sets the metomic_id of this IntegrationSettings.


        :param metomic_id: The metomic_id of this IntegrationSettings.
        :type metomic_id: str
        """

        self._metomic_id = metomic_id

    @property
    def microsoft_flow_enabled(self):
        """Gets the microsoft_flow_enabled of this IntegrationSettings.


        :return: The microsoft_flow_enabled of this IntegrationSettings.
        :rtype: bool
        """
        return self._microsoft_flow_enabled

    @microsoft_flow_enabled.setter
    def microsoft_flow_enabled(self, microsoft_flow_enabled):
        """Sets the microsoft_flow_enabled of this IntegrationSettings.


        :param microsoft_flow_enabled: The microsoft_flow_enabled of this IntegrationSettings.
        :type microsoft_flow_enabled: bool
        """

        self._microsoft_flow_enabled = microsoft_flow_enabled

    @property
    def microsoft_flow_id(self):
        """Gets the microsoft_flow_id of this IntegrationSettings.


        :return: The microsoft_flow_id of this IntegrationSettings.
        :rtype: str
        """
        return self._microsoft_flow_id

    @microsoft_flow_id.setter
    def microsoft_flow_id(self, microsoft_flow_id):
        """Sets the microsoft_flow_id of this IntegrationSettings.


        :param microsoft_flow_id: The microsoft_flow_id of this IntegrationSettings.
        :type microsoft_flow_id: str
        """

        self._microsoft_flow_id = microsoft_flow_id

    @property
    def onetrust_id(self):
        """Gets the onetrust_id of this IntegrationSettings.


        :return: The onetrust_id of this IntegrationSettings.
        :rtype: str
        """
        return self._onetrust_id

    @onetrust_id.setter
    def onetrust_id(self, onetrust_id):
        """Sets the onetrust_id of this IntegrationSettings.


        :param onetrust_id: The onetrust_id of this IntegrationSettings.
        :type onetrust_id: str
        """

        self._onetrust_id = onetrust_id

    @property
    def piesync_enabled(self):
        """Gets the piesync_enabled of this IntegrationSettings.


        :return: The piesync_enabled of this IntegrationSettings.
        :rtype: bool
        """
        return self._piesync_enabled

    @piesync_enabled.setter
    def piesync_enabled(self, piesync_enabled):
        """Sets the piesync_enabled of this IntegrationSettings.


        :param piesync_enabled: The piesync_enabled of this IntegrationSettings.
        :type piesync_enabled: bool
        """

        self._piesync_enabled = piesync_enabled

    @property
    def segment_enabled(self):
        """Gets the segment_enabled of this IntegrationSettings.


        :return: The segment_enabled of this IntegrationSettings.
        :rtype: bool
        """
        return self._segment_enabled

    @segment_enabled.setter
    def segment_enabled(self, segment_enabled):
        """Sets the segment_enabled of this IntegrationSettings.


        :param segment_enabled: The segment_enabled of this IntegrationSettings.
        :type segment_enabled: bool
        """

        self._segment_enabled = segment_enabled

    @property
    def segment_id(self):
        """Gets the segment_id of this IntegrationSettings.


        :return: The segment_id of this IntegrationSettings.
        :rtype: str
        """
        return self._segment_id

    @segment_id.setter
    def segment_id(self, segment_id):
        """Sets the segment_id of this IntegrationSettings.


        :param segment_id: The segment_id of this IntegrationSettings.
        :type segment_id: str
        """

        self._segment_id = segment_id

    @property
    def tray_io_enabled(self):
        """Gets the tray_io_enabled of this IntegrationSettings.


        :return: The tray_io_enabled of this IntegrationSettings.
        :rtype: bool
        """
        return self._tray_io_enabled

    @tray_io_enabled.setter
    def tray_io_enabled(self, tray_io_enabled):
        """Sets the tray_io_enabled of this IntegrationSettings.


        :param tray_io_enabled: The tray_io_enabled of this IntegrationSettings.
        :type tray_io_enabled: bool
        """

        self._tray_io_enabled = tray_io_enabled

    @property
    def zapier_beta_link(self):
        """Gets the zapier_beta_link of this IntegrationSettings.


        :return: The zapier_beta_link of this IntegrationSettings.
        :rtype: str
        """
        return self._zapier_beta_link

    @zapier_beta_link.setter
    def zapier_beta_link(self, zapier_beta_link):
        """Sets the zapier_beta_link of this IntegrationSettings.


        :param zapier_beta_link: The zapier_beta_link of this IntegrationSettings.
        :type zapier_beta_link: str
        """

        self._zapier_beta_link = zapier_beta_link

    @property
    def zapier_enabled(self):
        """Gets the zapier_enabled of this IntegrationSettings.


        :return: The zapier_enabled of this IntegrationSettings.
        :rtype: bool
        """
        return self._zapier_enabled

    @zapier_enabled.setter
    def zapier_enabled(self, zapier_enabled):
        """Sets the zapier_enabled of this IntegrationSettings.


        :param zapier_enabled: The zapier_enabled of this IntegrationSettings.
        :type zapier_enabled: bool
        """

        self._zapier_enabled = zapier_enabled

    @property
    def zapier_id(self):
        """Gets the zapier_id of this IntegrationSettings.


        :return: The zapier_id of this IntegrationSettings.
        :rtype: str
        """
        return self._zapier_id

    @zapier_id.setter
    def zapier_id(self, zapier_id):
        """Sets the zapier_id of this IntegrationSettings.


        :param zapier_id: The zapier_id of this IntegrationSettings.
        :type zapier_id: str
        """

        self._zapier_id = zapier_id
