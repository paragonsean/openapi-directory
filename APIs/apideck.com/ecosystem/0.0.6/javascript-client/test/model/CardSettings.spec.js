/**
 * Ecosystem API
 * Ecosystem API
 *
 * The version of the OpenAPI document: 0.0.6
 * Contact: hello@apideck.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EcosystemApi);
  }
}(this, function(expect, EcosystemApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EcosystemApi.CardSettings();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CardSettings', function() {
    it('should create an instance of CardSettings', function() {
      // uncomment below and update the code to test CardSettings
      //var instance = new EcosystemApi.CardSettings();
      //expect(instance).to.be.a(EcosystemApi.CardSettings);
    });

    it('should have the property backgroundColor (base name: "background_color")', function() {
      // uncomment below and update the code to test the property backgroundColor
      //var instance = new EcosystemApi.CardSettings();
      //expect(instance).to.be();
    });

    it('should have the property borderColor (base name: "border_color")', function() {
      // uncomment below and update the code to test the property borderColor
      //var instance = new EcosystemApi.CardSettings();
      //expect(instance).to.be();
    });

    it('should have the property borderRadius (base name: "border_radius")', function() {
      // uncomment below and update the code to test the property borderRadius
      //var instance = new EcosystemApi.CardSettings();
      //expect(instance).to.be();
    });

    it('should have the property borderSize (base name: "border_size")', function() {
      // uncomment below and update the code to test the property borderSize
      //var instance = new EcosystemApi.CardSettings();
      //expect(instance).to.be();
    });

    it('should have the property color (base name: "color")', function() {
      // uncomment below and update the code to test the property color
      //var instance = new EcosystemApi.CardSettings();
      //expect(instance).to.be();
    });

    it('should have the property columns (base name: "columns")', function() {
      // uncomment below and update the code to test the property columns
      //var instance = new EcosystemApi.CardSettings();
      //expect(instance).to.be();
    });

    it('should have the property descriptionLines (base name: "description_lines")', function() {
      // uncomment below and update the code to test the property descriptionLines
      //var instance = new EcosystemApi.CardSettings();
      //expect(instance).to.be();
    });

    it('should have the property iconBorderRadius (base name: "icon_border_radius")', function() {
      // uncomment below and update the code to test the property iconBorderRadius
      //var instance = new EcosystemApi.CardSettings();
      //expect(instance).to.be();
    });

    it('should have the property iconShadowEnabled (base name: "icon_shadow_enabled")', function() {
      // uncomment below and update the code to test the property iconShadowEnabled
      //var instance = new EcosystemApi.CardSettings();
      //expect(instance).to.be();
    });

    it('should have the property iconSize (base name: "icon_size")', function() {
      // uncomment below and update the code to test the property iconSize
      //var instance = new EcosystemApi.CardSettings();
      //expect(instance).to.be();
    });

    it('should have the property shadowEnabled (base name: "shadow_enabled")', function() {
      // uncomment below and update the code to test the property shadowEnabled
      //var instance = new EcosystemApi.CardSettings();
      //expect(instance).to.be();
    });

    it('should have the property showAction (base name: "show_action")', function() {
      // uncomment below and update the code to test the property showAction
      //var instance = new EcosystemApi.CardSettings();
      //expect(instance).to.be();
    });

    it('should have the property showBadges (base name: "show_badges")', function() {
      // uncomment below and update the code to test the property showBadges
      //var instance = new EcosystemApi.CardSettings();
      //expect(instance).to.be();
    });

    it('should have the property showCategory (base name: "show_category")', function() {
      // uncomment below and update the code to test the property showCategory
      //var instance = new EcosystemApi.CardSettings();
      //expect(instance).to.be();
    });

    it('should have the property showDescription (base name: "show_description")', function() {
      // uncomment below and update the code to test the property showDescription
      //var instance = new EcosystemApi.CardSettings();
      //expect(instance).to.be();
    });

    it('should have the property style (base name: "style")', function() {
      // uncomment below and update the code to test the property style
      //var instance = new EcosystemApi.CardSettings();
      //expect(instance).to.be();
    });

  });

}));
