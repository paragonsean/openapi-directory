/**
 * Ecosystem API
 * Ecosystem API
 *
 * The version of the OpenAPI document: 0.0.6
 * Contact: hello@apideck.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Translation from './Translation';

/**
 * The Screenshot model module.
 * @module model/Screenshot
 * @version 0.0.6
 */
class Screenshot {
    /**
     * Constructs a new <code>Screenshot</code>.
     * @alias module:model/Screenshot
     */
    constructor() { 
        
        Screenshot.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Screenshot</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Screenshot} obj Optional instance to populate.
     * @return {module:model/Screenshot} The populated <code>Screenshot</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Screenshot();

            if (data.hasOwnProperty('caption')) {
                obj['caption'] = ApiClient.convertToType(data['caption'], 'String');
            }
            if (data.hasOwnProperty('file')) {
                obj['file'] = File.constructFromObject(data['file']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('translations')) {
                obj['translations'] = ApiClient.convertToType(data['translations'], [Translation]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Screenshot</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Screenshot</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['caption'] && !(typeof data['caption'] === 'string' || data['caption'] instanceof String)) {
            throw new Error("Expected the field `caption` to be a primitive type in the JSON string but got " + data['caption']);
        }
        // validate the optional field `file`
        if (data['file']) { // data not null
          File.validateJSON(data['file']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['translations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['translations'])) {
                throw new Error("Expected the field `translations` to be an array in the JSON data but got " + data['translations']);
            }
            // validate the optional field `translations` (array)
            for (const item of data['translations']) {
                Translation.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} caption
 */
Screenshot.prototype['caption'] = undefined;

/**
 * @member {File} file
 */
Screenshot.prototype['file'] = undefined;

/**
 * @member {String} id
 */
Screenshot.prototype['id'] = undefined;

/**
 * @member {Array.<module:model/Translation>} translations
 */
Screenshot.prototype['translations'] = undefined;






export default Screenshot;

