/**
 * Ecosystem API
 * Ecosystem API
 *
 * The version of the OpenAPI document: 0.0.6
 * Contact: hello@apideck.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Translation from './Translation';

/**
 * The Collection model module.
 * @module model/Collection
 * @version 0.0.6
 */
class Collection {
    /**
     * Constructs a new <code>Collection</code>.
     * @alias module:model/Collection
     * @param name {String} 
     * @param slug {String} 
     * @param visible {Boolean} 
     */
    constructor(name, slug, visible) { 
        
        Collection.initialize(this, name, slug, visible);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, slug, visible) { 
        obj['name'] = name;
        obj['slug'] = slug;
        obj['visible'] = visible;
    }

    /**
     * Constructs a <code>Collection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Collection} obj Optional instance to populate.
     * @return {module:model/Collection} The populated <code>Collection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Collection();

            if (data.hasOwnProperty('card_background_color')) {
                obj['card_background_color'] = ApiClient.convertToType(data['card_background_color'], 'String');
            }
            if (data.hasOwnProperty('card_background_image')) {
                obj['card_background_image'] = File.constructFromObject(data['card_background_image']);
            }
            if (data.hasOwnProperty('card_columns')) {
                obj['card_columns'] = ApiClient.convertToType(data['card_columns'], 'Number');
            }
            if (data.hasOwnProperty('card_style')) {
                obj['card_style'] = ApiClient.convertToType(data['card_style'], 'String');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('hidden_from_homepage')) {
                obj['hidden_from_homepage'] = ApiClient.convertToType(data['hidden_from_homepage'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('logo')) {
                obj['logo'] = File.constructFromObject(data['logo']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('sequence')) {
                obj['sequence'] = ApiClient.convertToType(data['sequence'], 'Number');
            }
            if (data.hasOwnProperty('show_max_items_homepage')) {
                obj['show_max_items_homepage'] = ApiClient.convertToType(data['show_max_items_homepage'], 'Number');
            }
            if (data.hasOwnProperty('slug')) {
                obj['slug'] = ApiClient.convertToType(data['slug'], 'String');
            }
            if (data.hasOwnProperty('translations')) {
                obj['translations'] = ApiClient.convertToType(data['translations'], [Translation]);
            }
            if (data.hasOwnProperty('visible')) {
                obj['visible'] = ApiClient.convertToType(data['visible'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Collection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Collection</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Collection.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['card_background_color'] && !(typeof data['card_background_color'] === 'string' || data['card_background_color'] instanceof String)) {
            throw new Error("Expected the field `card_background_color` to be a primitive type in the JSON string but got " + data['card_background_color']);
        }
        // validate the optional field `card_background_image`
        if (data['card_background_image']) { // data not null
          File.validateJSON(data['card_background_image']);
        }
        // ensure the json data is a string
        if (data['card_style'] && !(typeof data['card_style'] === 'string' || data['card_style'] instanceof String)) {
            throw new Error("Expected the field `card_style` to be a primitive type in the JSON string but got " + data['card_style']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `logo`
        if (data['logo']) { // data not null
          File.validateJSON(data['logo']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['slug'] && !(typeof data['slug'] === 'string' || data['slug'] instanceof String)) {
            throw new Error("Expected the field `slug` to be a primitive type in the JSON string but got " + data['slug']);
        }
        if (data['translations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['translations'])) {
                throw new Error("Expected the field `translations` to be an array in the JSON data but got " + data['translations']);
            }
            // validate the optional field `translations` (array)
            for (const item of data['translations']) {
                Translation.validateJSON(item);
            };
        }

        return true;
    }


}

Collection.RequiredProperties = ["name", "slug", "visible"];

/**
 * @member {String} card_background_color
 */
Collection.prototype['card_background_color'] = undefined;

/**
 * @member {File} card_background_image
 */
Collection.prototype['card_background_image'] = undefined;

/**
 * @member {Number} card_columns
 */
Collection.prototype['card_columns'] = undefined;

/**
 * @member {String} card_style
 */
Collection.prototype['card_style'] = undefined;

/**
 * @member {Number} count
 */
Collection.prototype['count'] = undefined;

/**
 * @member {String} description
 */
Collection.prototype['description'] = undefined;

/**
 * @member {Boolean} hidden_from_homepage
 */
Collection.prototype['hidden_from_homepage'] = undefined;

/**
 * @member {String} id
 */
Collection.prototype['id'] = undefined;

/**
 * @member {File} logo
 */
Collection.prototype['logo'] = undefined;

/**
 * @member {String} name
 */
Collection.prototype['name'] = undefined;

/**
 * @member {Number} sequence
 */
Collection.prototype['sequence'] = undefined;

/**
 * @member {Number} show_max_items_homepage
 */
Collection.prototype['show_max_items_homepage'] = undefined;

/**
 * @member {String} slug
 */
Collection.prototype['slug'] = undefined;

/**
 * @member {Array.<module:model/Translation>} translations
 */
Collection.prototype['translations'] = undefined;

/**
 * @member {Boolean} visible
 */
Collection.prototype['visible'] = undefined;






export default Collection;

