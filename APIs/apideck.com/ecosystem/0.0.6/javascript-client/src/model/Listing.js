/**
 * Ecosystem API
 * Ecosystem API
 *
 * The version of the OpenAPI document: 0.0.6
 * Contact: hello@apideck.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Category from './Category';
import Collection from './Collection';
import Logo from './Logo';
import Media from './Media';
import Partner from './Partner';
import Product from './Product';
import Screenshot from './Screenshot';
import Translation from './Translation';

/**
 * The Listing model module.
 * @module model/Listing
 * @version 0.0.6
 */
class Listing {
    /**
     * Constructs a new <code>Listing</code>.
     * @alias module:model/Listing
     * @param name {String} 
     * @param slug {String} 
     */
    constructor(name, slug) { 
        
        Listing.initialize(this, name, slug);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, slug) { 
        obj['name'] = name;
        obj['slug'] = slug;
    }

    /**
     * Constructs a <code>Listing</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Listing} obj Optional instance to populate.
     * @return {module:model/Listing} The populated <code>Listing</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Listing();

            if (data.hasOwnProperty('automate_id')) {
                obj['automate_id'] = ApiClient.convertToType(data['automate_id'], 'String');
            }
            if (data.hasOwnProperty('blendr_id')) {
                obj['blendr_id'] = ApiClient.convertToType(data['blendr_id'], 'String');
            }
            if (data.hasOwnProperty('card_background_color')) {
                obj['card_background_color'] = ApiClient.convertToType(data['card_background_color'], 'String');
            }
            if (data.hasOwnProperty('card_background_image')) {
                obj['card_background_image'] = File.constructFromObject(data['card_background_image']);
            }
            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], [Category]);
            }
            if (data.hasOwnProperty('cloud_service_id')) {
                obj['cloud_service_id'] = ApiClient.convertToType(data['cloud_service_id'], 'String');
            }
            if (data.hasOwnProperty('collections')) {
                obj['collections'] = ApiClient.convertToType(data['collections'], [Collection]);
            }
            if (data.hasOwnProperty('combidesk_id')) {
                obj['combidesk_id'] = ApiClient.convertToType(data['combidesk_id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('detail_page_disabled')) {
                obj['detail_page_disabled'] = ApiClient.convertToType(data['detail_page_disabled'], 'Boolean');
            }
            if (data.hasOwnProperty('external_id')) {
                obj['external_id'] = ApiClient.convertToType(data['external_id'], 'String');
            }
            if (data.hasOwnProperty('features')) {
                obj['features'] = ApiClient.convertToType(data['features'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('integromat_id')) {
                obj['integromat_id'] = ApiClient.convertToType(data['integromat_id'], 'String');
            }
            if (data.hasOwnProperty('logo')) {
                obj['logo'] = Logo.constructFromObject(data['logo']);
            }
            if (data.hasOwnProperty('media')) {
                obj['media'] = ApiClient.convertToType(data['media'], [Media]);
            }
            if (data.hasOwnProperty('meta_tag_description')) {
                obj['meta_tag_description'] = ApiClient.convertToType(data['meta_tag_description'], 'String');
            }
            if (data.hasOwnProperty('meta_tag_keywords')) {
                obj['meta_tag_keywords'] = ApiClient.convertToType(data['meta_tag_keywords'], 'String');
            }
            if (data.hasOwnProperty('meta_tag_title')) {
                obj['meta_tag_title'] = ApiClient.convertToType(data['meta_tag_title'], 'String');
            }
            if (data.hasOwnProperty('microsoft_flow_id')) {
                obj['microsoft_flow_id'] = ApiClient.convertToType(data['microsoft_flow_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('native_integration')) {
                obj['native_integration'] = ApiClient.convertToType(data['native_integration'], 'Boolean');
            }
            if (data.hasOwnProperty('native_integration_link')) {
                obj['native_integration_link'] = ApiClient.convertToType(data['native_integration_link'], 'String');
            }
            if (data.hasOwnProperty('partner')) {
                obj['partner'] = Partner.constructFromObject(data['partner']);
            }
            if (data.hasOwnProperty('piesync_id')) {
                obj['piesync_id'] = ApiClient.convertToType(data['piesync_id'], 'String');
            }
            if (data.hasOwnProperty('pricing')) {
                obj['pricing'] = ApiClient.convertToType(data['pricing'], 'String');
            }
            if (data.hasOwnProperty('products')) {
                obj['products'] = ApiClient.convertToType(data['products'], [Product]);
            }
            if (data.hasOwnProperty('published')) {
                obj['published'] = ApiClient.convertToType(data['published'], 'Boolean');
            }
            if (data.hasOwnProperty('published_at')) {
                obj['published_at'] = ApiClient.convertToType(data['published_at'], 'Date');
            }
            if (data.hasOwnProperty('screenshots')) {
                obj['screenshots'] = ApiClient.convertToType(data['screenshots'], [Screenshot]);
            }
            if (data.hasOwnProperty('segment_id')) {
                obj['segment_id'] = ApiClient.convertToType(data['segment_id'], 'String');
            }
            if (data.hasOwnProperty('slug')) {
                obj['slug'] = ApiClient.convertToType(data['slug'], 'String');
            }
            if (data.hasOwnProperty('sticky')) {
                obj['sticky'] = ApiClient.convertToType(data['sticky'], 'Boolean');
            }
            if (data.hasOwnProperty('tag_line')) {
                obj['tag_line'] = ApiClient.convertToType(data['tag_line'], 'String');
            }
            if (data.hasOwnProperty('third_party_integration')) {
                obj['third_party_integration'] = ApiClient.convertToType(data['third_party_integration'], 'Boolean');
            }
            if (data.hasOwnProperty('third_party_integration_link')) {
                obj['third_party_integration_link'] = ApiClient.convertToType(data['third_party_integration_link'], 'String');
            }
            if (data.hasOwnProperty('translations')) {
                obj['translations'] = ApiClient.convertToType(data['translations'], [Translation]);
            }
            if (data.hasOwnProperty('tray_io_id')) {
                obj['tray_io_id'] = ApiClient.convertToType(data['tray_io_id'], 'String');
            }
            if (data.hasOwnProperty('unify_connector_id')) {
                obj['unify_connector_id'] = ApiClient.convertToType(data['unify_connector_id'], 'String');
            }
            if (data.hasOwnProperty('upcoming')) {
                obj['upcoming'] = ApiClient.convertToType(data['upcoming'], 'Boolean');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('zapier_id')) {
                obj['zapier_id'] = ApiClient.convertToType(data['zapier_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Listing</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Listing</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Listing.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['automate_id'] && !(typeof data['automate_id'] === 'string' || data['automate_id'] instanceof String)) {
            throw new Error("Expected the field `automate_id` to be a primitive type in the JSON string but got " + data['automate_id']);
        }
        // ensure the json data is a string
        if (data['blendr_id'] && !(typeof data['blendr_id'] === 'string' || data['blendr_id'] instanceof String)) {
            throw new Error("Expected the field `blendr_id` to be a primitive type in the JSON string but got " + data['blendr_id']);
        }
        // ensure the json data is a string
        if (data['card_background_color'] && !(typeof data['card_background_color'] === 'string' || data['card_background_color'] instanceof String)) {
            throw new Error("Expected the field `card_background_color` to be a primitive type in the JSON string but got " + data['card_background_color']);
        }
        // validate the optional field `card_background_image`
        if (data['card_background_image']) { // data not null
          File.validateJSON(data['card_background_image']);
        }
        if (data['categories']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['categories'])) {
                throw new Error("Expected the field `categories` to be an array in the JSON data but got " + data['categories']);
            }
            // validate the optional field `categories` (array)
            for (const item of data['categories']) {
                Category.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['cloud_service_id'] && !(typeof data['cloud_service_id'] === 'string' || data['cloud_service_id'] instanceof String)) {
            throw new Error("Expected the field `cloud_service_id` to be a primitive type in the JSON string but got " + data['cloud_service_id']);
        }
        if (data['collections']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['collections'])) {
                throw new Error("Expected the field `collections` to be an array in the JSON data but got " + data['collections']);
            }
            // validate the optional field `collections` (array)
            for (const item of data['collections']) {
                Collection.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['combidesk_id'] && !(typeof data['combidesk_id'] === 'string' || data['combidesk_id'] instanceof String)) {
            throw new Error("Expected the field `combidesk_id` to be a primitive type in the JSON string but got " + data['combidesk_id']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['external_id'] && !(typeof data['external_id'] === 'string' || data['external_id'] instanceof String)) {
            throw new Error("Expected the field `external_id` to be a primitive type in the JSON string but got " + data['external_id']);
        }
        // ensure the json data is a string
        if (data['features'] && !(typeof data['features'] === 'string' || data['features'] instanceof String)) {
            throw new Error("Expected the field `features` to be a primitive type in the JSON string but got " + data['features']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['integromat_id'] && !(typeof data['integromat_id'] === 'string' || data['integromat_id'] instanceof String)) {
            throw new Error("Expected the field `integromat_id` to be a primitive type in the JSON string but got " + data['integromat_id']);
        }
        // validate the optional field `logo`
        if (data['logo']) { // data not null
          Logo.validateJSON(data['logo']);
        }
        if (data['media']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['media'])) {
                throw new Error("Expected the field `media` to be an array in the JSON data but got " + data['media']);
            }
            // validate the optional field `media` (array)
            for (const item of data['media']) {
                Media.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['meta_tag_description'] && !(typeof data['meta_tag_description'] === 'string' || data['meta_tag_description'] instanceof String)) {
            throw new Error("Expected the field `meta_tag_description` to be a primitive type in the JSON string but got " + data['meta_tag_description']);
        }
        // ensure the json data is a string
        if (data['meta_tag_keywords'] && !(typeof data['meta_tag_keywords'] === 'string' || data['meta_tag_keywords'] instanceof String)) {
            throw new Error("Expected the field `meta_tag_keywords` to be a primitive type in the JSON string but got " + data['meta_tag_keywords']);
        }
        // ensure the json data is a string
        if (data['meta_tag_title'] && !(typeof data['meta_tag_title'] === 'string' || data['meta_tag_title'] instanceof String)) {
            throw new Error("Expected the field `meta_tag_title` to be a primitive type in the JSON string but got " + data['meta_tag_title']);
        }
        // ensure the json data is a string
        if (data['microsoft_flow_id'] && !(typeof data['microsoft_flow_id'] === 'string' || data['microsoft_flow_id'] instanceof String)) {
            throw new Error("Expected the field `microsoft_flow_id` to be a primitive type in the JSON string but got " + data['microsoft_flow_id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['native_integration_link'] && !(typeof data['native_integration_link'] === 'string' || data['native_integration_link'] instanceof String)) {
            throw new Error("Expected the field `native_integration_link` to be a primitive type in the JSON string but got " + data['native_integration_link']);
        }
        // validate the optional field `partner`
        if (data['partner']) { // data not null
          Partner.validateJSON(data['partner']);
        }
        // ensure the json data is a string
        if (data['piesync_id'] && !(typeof data['piesync_id'] === 'string' || data['piesync_id'] instanceof String)) {
            throw new Error("Expected the field `piesync_id` to be a primitive type in the JSON string but got " + data['piesync_id']);
        }
        // ensure the json data is a string
        if (data['pricing'] && !(typeof data['pricing'] === 'string' || data['pricing'] instanceof String)) {
            throw new Error("Expected the field `pricing` to be a primitive type in the JSON string but got " + data['pricing']);
        }
        if (data['products']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['products'])) {
                throw new Error("Expected the field `products` to be an array in the JSON data but got " + data['products']);
            }
            // validate the optional field `products` (array)
            for (const item of data['products']) {
                Product.validateJSON(item);
            };
        }
        if (data['screenshots']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['screenshots'])) {
                throw new Error("Expected the field `screenshots` to be an array in the JSON data but got " + data['screenshots']);
            }
            // validate the optional field `screenshots` (array)
            for (const item of data['screenshots']) {
                Screenshot.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['segment_id'] && !(typeof data['segment_id'] === 'string' || data['segment_id'] instanceof String)) {
            throw new Error("Expected the field `segment_id` to be a primitive type in the JSON string but got " + data['segment_id']);
        }
        // ensure the json data is a string
        if (data['slug'] && !(typeof data['slug'] === 'string' || data['slug'] instanceof String)) {
            throw new Error("Expected the field `slug` to be a primitive type in the JSON string but got " + data['slug']);
        }
        // ensure the json data is a string
        if (data['tag_line'] && !(typeof data['tag_line'] === 'string' || data['tag_line'] instanceof String)) {
            throw new Error("Expected the field `tag_line` to be a primitive type in the JSON string but got " + data['tag_line']);
        }
        // ensure the json data is a string
        if (data['third_party_integration_link'] && !(typeof data['third_party_integration_link'] === 'string' || data['third_party_integration_link'] instanceof String)) {
            throw new Error("Expected the field `third_party_integration_link` to be a primitive type in the JSON string but got " + data['third_party_integration_link']);
        }
        if (data['translations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['translations'])) {
                throw new Error("Expected the field `translations` to be an array in the JSON data but got " + data['translations']);
            }
            // validate the optional field `translations` (array)
            for (const item of data['translations']) {
                Translation.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['tray_io_id'] && !(typeof data['tray_io_id'] === 'string' || data['tray_io_id'] instanceof String)) {
            throw new Error("Expected the field `tray_io_id` to be a primitive type in the JSON string but got " + data['tray_io_id']);
        }
        // ensure the json data is a string
        if (data['unify_connector_id'] && !(typeof data['unify_connector_id'] === 'string' || data['unify_connector_id'] instanceof String)) {
            throw new Error("Expected the field `unify_connector_id` to be a primitive type in the JSON string but got " + data['unify_connector_id']);
        }
        // ensure the json data is a string
        if (data['zapier_id'] && !(typeof data['zapier_id'] === 'string' || data['zapier_id'] instanceof String)) {
            throw new Error("Expected the field `zapier_id` to be a primitive type in the JSON string but got " + data['zapier_id']);
        }

        return true;
    }


}

Listing.RequiredProperties = ["name", "slug"];

/**
 * @member {String} automate_id
 */
Listing.prototype['automate_id'] = undefined;

/**
 * @member {String} blendr_id
 */
Listing.prototype['blendr_id'] = undefined;

/**
 * @member {String} card_background_color
 */
Listing.prototype['card_background_color'] = undefined;

/**
 * @member {File} card_background_image
 */
Listing.prototype['card_background_image'] = undefined;

/**
 * @member {Array.<module:model/Category>} categories
 */
Listing.prototype['categories'] = undefined;

/**
 * @member {String} cloud_service_id
 */
Listing.prototype['cloud_service_id'] = undefined;

/**
 * @member {Array.<module:model/Collection>} collections
 */
Listing.prototype['collections'] = undefined;

/**
 * @member {String} combidesk_id
 */
Listing.prototype['combidesk_id'] = undefined;

/**
 * @member {Date} created_at
 */
Listing.prototype['created_at'] = undefined;

/**
 * @member {String} description
 */
Listing.prototype['description'] = undefined;

/**
 * @member {Boolean} detail_page_disabled
 */
Listing.prototype['detail_page_disabled'] = undefined;

/**
 * @member {String} external_id
 */
Listing.prototype['external_id'] = undefined;

/**
 * @member {String} features
 */
Listing.prototype['features'] = undefined;

/**
 * @member {String} id
 */
Listing.prototype['id'] = undefined;

/**
 * @member {String} integromat_id
 */
Listing.prototype['integromat_id'] = undefined;

/**
 * @member {module:model/Logo} logo
 */
Listing.prototype['logo'] = undefined;

/**
 * @member {Array.<module:model/Media>} media
 */
Listing.prototype['media'] = undefined;

/**
 * @member {String} meta_tag_description
 */
Listing.prototype['meta_tag_description'] = undefined;

/**
 * @member {String} meta_tag_keywords
 */
Listing.prototype['meta_tag_keywords'] = undefined;

/**
 * @member {String} meta_tag_title
 */
Listing.prototype['meta_tag_title'] = undefined;

/**
 * @member {String} microsoft_flow_id
 */
Listing.prototype['microsoft_flow_id'] = undefined;

/**
 * @member {String} name
 */
Listing.prototype['name'] = undefined;

/**
 * @member {Boolean} native_integration
 */
Listing.prototype['native_integration'] = undefined;

/**
 * @member {String} native_integration_link
 */
Listing.prototype['native_integration_link'] = undefined;

/**
 * @member {module:model/Partner} partner
 */
Listing.prototype['partner'] = undefined;

/**
 * @member {String} piesync_id
 */
Listing.prototype['piesync_id'] = undefined;

/**
 * @member {String} pricing
 */
Listing.prototype['pricing'] = undefined;

/**
 * @member {Array.<module:model/Product>} products
 */
Listing.prototype['products'] = undefined;

/**
 * @member {Boolean} published
 */
Listing.prototype['published'] = undefined;

/**
 * @member {Date} published_at
 */
Listing.prototype['published_at'] = undefined;

/**
 * @member {Array.<module:model/Screenshot>} screenshots
 */
Listing.prototype['screenshots'] = undefined;

/**
 * @member {String} segment_id
 */
Listing.prototype['segment_id'] = undefined;

/**
 * @member {String} slug
 */
Listing.prototype['slug'] = undefined;

/**
 * @member {Boolean} sticky
 */
Listing.prototype['sticky'] = undefined;

/**
 * @member {String} tag_line
 */
Listing.prototype['tag_line'] = undefined;

/**
 * @member {Boolean} third_party_integration
 */
Listing.prototype['third_party_integration'] = undefined;

/**
 * @member {String} third_party_integration_link
 */
Listing.prototype['third_party_integration_link'] = undefined;

/**
 * @member {Array.<module:model/Translation>} translations
 */
Listing.prototype['translations'] = undefined;

/**
 * @member {String} tray_io_id
 */
Listing.prototype['tray_io_id'] = undefined;

/**
 * @member {String} unify_connector_id
 */
Listing.prototype['unify_connector_id'] = undefined;

/**
 * @member {Boolean} upcoming
 */
Listing.prototype['upcoming'] = undefined;

/**
 * @member {Date} updated_at
 */
Listing.prototype['updated_at'] = undefined;

/**
 * @member {String} zapier_id
 */
Listing.prototype['zapier_id'] = undefined;






export default Listing;

