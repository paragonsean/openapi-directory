/**
 * Ecosystem API
 * Ecosystem API
 *
 * The version of the OpenAPI document: 0.0.6
 * Contact: hello@apideck.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MetaCursors from './MetaCursors';

/**
 * The Meta model module.
 * @module model/Meta
 * @version 0.0.6
 */
class Meta {
    /**
     * Constructs a new <code>Meta</code>.
     * Response metadata
     * @alias module:model/Meta
     */
    constructor() { 
        
        Meta.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Meta</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Meta} obj Optional instance to populate.
     * @return {module:model/Meta} The populated <code>Meta</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Meta();

            if (data.hasOwnProperty('cursors')) {
                obj['cursors'] = MetaCursors.constructFromObject(data['cursors']);
            }
            if (data.hasOwnProperty('items_on_page')) {
                obj['items_on_page'] = ApiClient.convertToType(data['items_on_page'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Meta</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Meta</code>.
     */
    static validateJSON(data) {
        // validate the optional field `cursors`
        if (data['cursors']) { // data not null
          MetaCursors.validateJSON(data['cursors']);
        }

        return true;
    }


}



/**
 * @member {module:model/MetaCursors} cursors
 */
Meta.prototype['cursors'] = undefined;

/**
 * Number of items returned in the data property of the response
 * @member {Number} items_on_page
 */
Meta.prototype['items_on_page'] = undefined;






export default Meta;

