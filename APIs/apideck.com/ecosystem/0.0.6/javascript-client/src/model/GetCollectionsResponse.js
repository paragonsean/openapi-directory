/**
 * Ecosystem API
 * Ecosystem API
 *
 * The version of the OpenAPI document: 0.0.6
 * Contact: hello@apideck.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Collection from './Collection';

/**
 * The GetCollectionsResponse model module.
 * @module model/GetCollectionsResponse
 * @version 0.0.6
 */
class GetCollectionsResponse {
    /**
     * Constructs a new <code>GetCollectionsResponse</code>.
     * @alias module:model/GetCollectionsResponse
     * @param data {Array.<module:model/Collection>} 
     * @param status {String} HTTP Response Status
     * @param statusCode {Number} HTTP Response Status Code
     */
    constructor(data, status, statusCode) { 
        
        GetCollectionsResponse.initialize(this, data, status, statusCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, data, status, statusCode) { 
        obj['data'] = data;
        obj['status'] = status;
        obj['status_code'] = statusCode;
    }

    /**
     * Constructs a <code>GetCollectionsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetCollectionsResponse} obj Optional instance to populate.
     * @return {module:model/GetCollectionsResponse} The populated <code>GetCollectionsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetCollectionsResponse();

            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], [Collection]);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('status_code')) {
                obj['status_code'] = ApiClient.convertToType(data['status_code'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetCollectionsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetCollectionsResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetCollectionsResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['data']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['data'])) {
                throw new Error("Expected the field `data` to be an array in the JSON data but got " + data['data']);
            }
            // validate the optional field `data` (array)
            for (const item of data['data']) {
                Collection.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

GetCollectionsResponse.RequiredProperties = ["data", "status", "status_code"];

/**
 * @member {Array.<module:model/Collection>} data
 */
GetCollectionsResponse.prototype['data'] = undefined;

/**
 * HTTP Response Status
 * @member {String} status
 */
GetCollectionsResponse.prototype['status'] = undefined;

/**
 * HTTP Response Status Code
 * @member {Number} status_code
 */
GetCollectionsResponse.prototype['status_code'] = undefined;






export default GetCollectionsResponse;

