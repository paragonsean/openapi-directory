/**
 * Ecosystem API
 * Ecosystem API
 *
 * The version of the OpenAPI document: 0.0.6
 * Contact: hello@apideck.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CTASettings from './model/CTASettings';
import CardSettings from './model/CardSettings';
import Category from './model/Category';
import Collection from './model/Collection';
import Contact from './model/Contact';
import CustomSettings from './model/CustomSettings';
import Ecosystem from './model/Ecosystem';
import File from './model/File';
import GetCategoriesResponse from './model/GetCategoriesResponse';
import GetCategoryResponse from './model/GetCategoryResponse';
import GetCollectionResponse from './model/GetCollectionResponse';
import GetCollectionsResponse from './model/GetCollectionsResponse';
import GetEcosystemResponse from './model/GetEcosystemResponse';
import GetListingResponse from './model/GetListingResponse';
import GetListingsResponse from './model/GetListingsResponse';
import GetProductResponse from './model/GetProductResponse';
import GetProductsResponse from './model/GetProductsResponse';
import IntegrationSettings from './model/IntegrationSettings';
import LeadFormSettings from './model/LeadFormSettings';
import Links from './model/Links';
import Listing from './model/Listing';
import ListingSettings from './model/ListingSettings';
import Logo from './model/Logo';
import MastheadSettings from './model/MastheadSettings';
import Media from './model/Media';
import Meta from './model/Meta';
import MetaCursors from './model/MetaCursors';
import MetaTagSettings from './model/MetaTagSettings';
import Partner from './model/Partner';
import Product from './model/Product';
import Screenshot from './model/Screenshot';
import Translation from './model/Translation';
import CategoryApi from './api/CategoryApi';
import CollectionApi from './api/CollectionApi';
import EcosystemApi from './api/EcosystemApi';
import ListingApi from './api/ListingApi';
import ProductApi from './api/ProductApi';


/**
* Ecosystem API.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var EcosystemApi = require('index'); // See note below*.
* var xxxSvc = new EcosystemApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new EcosystemApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new EcosystemApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new EcosystemApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.0.6
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CTASettings model constructor.
     * @property {module:model/CTASettings}
     */
    CTASettings,

    /**
     * The CardSettings model constructor.
     * @property {module:model/CardSettings}
     */
    CardSettings,

    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category,

    /**
     * The Collection model constructor.
     * @property {module:model/Collection}
     */
    Collection,

    /**
     * The Contact model constructor.
     * @property {module:model/Contact}
     */
    Contact,

    /**
     * The CustomSettings model constructor.
     * @property {module:model/CustomSettings}
     */
    CustomSettings,

    /**
     * The Ecosystem model constructor.
     * @property {module:model/Ecosystem}
     */
    Ecosystem,

    /**
     * The File model constructor.
     * @property {module:model/File}
     */
    File,

    /**
     * The GetCategoriesResponse model constructor.
     * @property {module:model/GetCategoriesResponse}
     */
    GetCategoriesResponse,

    /**
     * The GetCategoryResponse model constructor.
     * @property {module:model/GetCategoryResponse}
     */
    GetCategoryResponse,

    /**
     * The GetCollectionResponse model constructor.
     * @property {module:model/GetCollectionResponse}
     */
    GetCollectionResponse,

    /**
     * The GetCollectionsResponse model constructor.
     * @property {module:model/GetCollectionsResponse}
     */
    GetCollectionsResponse,

    /**
     * The GetEcosystemResponse model constructor.
     * @property {module:model/GetEcosystemResponse}
     */
    GetEcosystemResponse,

    /**
     * The GetListingResponse model constructor.
     * @property {module:model/GetListingResponse}
     */
    GetListingResponse,

    /**
     * The GetListingsResponse model constructor.
     * @property {module:model/GetListingsResponse}
     */
    GetListingsResponse,

    /**
     * The GetProductResponse model constructor.
     * @property {module:model/GetProductResponse}
     */
    GetProductResponse,

    /**
     * The GetProductsResponse model constructor.
     * @property {module:model/GetProductsResponse}
     */
    GetProductsResponse,

    /**
     * The IntegrationSettings model constructor.
     * @property {module:model/IntegrationSettings}
     */
    IntegrationSettings,

    /**
     * The LeadFormSettings model constructor.
     * @property {module:model/LeadFormSettings}
     */
    LeadFormSettings,

    /**
     * The Links model constructor.
     * @property {module:model/Links}
     */
    Links,

    /**
     * The Listing model constructor.
     * @property {module:model/Listing}
     */
    Listing,

    /**
     * The ListingSettings model constructor.
     * @property {module:model/ListingSettings}
     */
    ListingSettings,

    /**
     * The Logo model constructor.
     * @property {module:model/Logo}
     */
    Logo,

    /**
     * The MastheadSettings model constructor.
     * @property {module:model/MastheadSettings}
     */
    MastheadSettings,

    /**
     * The Media model constructor.
     * @property {module:model/Media}
     */
    Media,

    /**
     * The Meta model constructor.
     * @property {module:model/Meta}
     */
    Meta,

    /**
     * The MetaCursors model constructor.
     * @property {module:model/MetaCursors}
     */
    MetaCursors,

    /**
     * The MetaTagSettings model constructor.
     * @property {module:model/MetaTagSettings}
     */
    MetaTagSettings,

    /**
     * The Partner model constructor.
     * @property {module:model/Partner}
     */
    Partner,

    /**
     * The Product model constructor.
     * @property {module:model/Product}
     */
    Product,

    /**
     * The Screenshot model constructor.
     * @property {module:model/Screenshot}
     */
    Screenshot,

    /**
     * The Translation model constructor.
     * @property {module:model/Translation}
     */
    Translation,

    /**
    * The CategoryApi service constructor.
    * @property {module:api/CategoryApi}
    */
    CategoryApi,

    /**
    * The CollectionApi service constructor.
    * @property {module:api/CollectionApi}
    */
    CollectionApi,

    /**
    * The EcosystemApi service constructor.
    * @property {module:api/EcosystemApi}
    */
    EcosystemApi,

    /**
    * The ListingApi service constructor.
    * @property {module:api/ListingApi}
    */
    ListingApi,

    /**
    * The ProductApi service constructor.
    * @property {module:api/ProductApi}
    */
    ProductApi
};
