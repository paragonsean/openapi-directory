/*
 * Ecosystem API
 * Ecosystem API
 *
 * The version of the OpenAPI document: 0.0.6
 * Contact: hello@apideck.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Category;
import org.openapitools.client.model.Collection;
import org.openapitools.client.model.Logo;
import org.openapitools.client.model.Media;
import org.openapitools.client.model.ModelFile;
import org.openapitools.client.model.Partner;
import org.openapitools.client.model.Product;
import org.openapitools.client.model.Screenshot;
import org.openapitools.client.model.Translation;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Listing
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:58:03.100845-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Listing {
  public static final String SERIALIZED_NAME_AUTOMATE_ID = "automate_id";
  @SerializedName(SERIALIZED_NAME_AUTOMATE_ID)
  private String automateId;

  public static final String SERIALIZED_NAME_BLENDR_ID = "blendr_id";
  @SerializedName(SERIALIZED_NAME_BLENDR_ID)
  private String blendrId;

  public static final String SERIALIZED_NAME_CARD_BACKGROUND_COLOR = "card_background_color";
  @SerializedName(SERIALIZED_NAME_CARD_BACKGROUND_COLOR)
  private String cardBackgroundColor;

  public static final String SERIALIZED_NAME_CARD_BACKGROUND_IMAGE = "card_background_image";
  @SerializedName(SERIALIZED_NAME_CARD_BACKGROUND_IMAGE)
  private ModelFile cardBackgroundImage;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<Category> categories = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLOUD_SERVICE_ID = "cloud_service_id";
  @SerializedName(SERIALIZED_NAME_CLOUD_SERVICE_ID)
  private String cloudServiceId;

  public static final String SERIALIZED_NAME_COLLECTIONS = "collections";
  @SerializedName(SERIALIZED_NAME_COLLECTIONS)
  private List<Collection> collections = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMBIDESK_ID = "combidesk_id";
  @SerializedName(SERIALIZED_NAME_COMBIDESK_ID)
  private String combideskId;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DETAIL_PAGE_DISABLED = "detail_page_disabled";
  @SerializedName(SERIALIZED_NAME_DETAIL_PAGE_DISABLED)
  private Boolean detailPageDisabled;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "external_id";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  private String externalId;

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  private String features;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INTEGROMAT_ID = "integromat_id";
  @SerializedName(SERIALIZED_NAME_INTEGROMAT_ID)
  private String integromatId;

  public static final String SERIALIZED_NAME_LOGO = "logo";
  @SerializedName(SERIALIZED_NAME_LOGO)
  private Logo logo;

  public static final String SERIALIZED_NAME_MEDIA = "media";
  @SerializedName(SERIALIZED_NAME_MEDIA)
  private List<Media> media = new ArrayList<>();

  public static final String SERIALIZED_NAME_META_TAG_DESCRIPTION = "meta_tag_description";
  @SerializedName(SERIALIZED_NAME_META_TAG_DESCRIPTION)
  private String metaTagDescription;

  public static final String SERIALIZED_NAME_META_TAG_KEYWORDS = "meta_tag_keywords";
  @SerializedName(SERIALIZED_NAME_META_TAG_KEYWORDS)
  private String metaTagKeywords;

  public static final String SERIALIZED_NAME_META_TAG_TITLE = "meta_tag_title";
  @SerializedName(SERIALIZED_NAME_META_TAG_TITLE)
  private String metaTagTitle;

  public static final String SERIALIZED_NAME_MICROSOFT_FLOW_ID = "microsoft_flow_id";
  @SerializedName(SERIALIZED_NAME_MICROSOFT_FLOW_ID)
  private String microsoftFlowId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NATIVE_INTEGRATION = "native_integration";
  @SerializedName(SERIALIZED_NAME_NATIVE_INTEGRATION)
  private Boolean nativeIntegration;

  public static final String SERIALIZED_NAME_NATIVE_INTEGRATION_LINK = "native_integration_link";
  @SerializedName(SERIALIZED_NAME_NATIVE_INTEGRATION_LINK)
  private String nativeIntegrationLink;

  public static final String SERIALIZED_NAME_PARTNER = "partner";
  @SerializedName(SERIALIZED_NAME_PARTNER)
  private Partner partner;

  public static final String SERIALIZED_NAME_PIESYNC_ID = "piesync_id";
  @SerializedName(SERIALIZED_NAME_PIESYNC_ID)
  private String piesyncId;

  public static final String SERIALIZED_NAME_PRICING = "pricing";
  @SerializedName(SERIALIZED_NAME_PRICING)
  private String pricing;

  public static final String SERIALIZED_NAME_PRODUCTS = "products";
  @SerializedName(SERIALIZED_NAME_PRODUCTS)
  private List<Product> products = new ArrayList<>();

  public static final String SERIALIZED_NAME_PUBLISHED = "published";
  @SerializedName(SERIALIZED_NAME_PUBLISHED)
  private Boolean published;

  public static final String SERIALIZED_NAME_PUBLISHED_AT = "published_at";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_AT)
  private OffsetDateTime publishedAt;

  public static final String SERIALIZED_NAME_SCREENSHOTS = "screenshots";
  @SerializedName(SERIALIZED_NAME_SCREENSHOTS)
  private List<Screenshot> screenshots = new ArrayList<>();

  public static final String SERIALIZED_NAME_SEGMENT_ID = "segment_id";
  @SerializedName(SERIALIZED_NAME_SEGMENT_ID)
  private String segmentId;

  public static final String SERIALIZED_NAME_SLUG = "slug";
  @SerializedName(SERIALIZED_NAME_SLUG)
  private String slug;

  public static final String SERIALIZED_NAME_STICKY = "sticky";
  @SerializedName(SERIALIZED_NAME_STICKY)
  private Boolean sticky;

  public static final String SERIALIZED_NAME_TAG_LINE = "tag_line";
  @SerializedName(SERIALIZED_NAME_TAG_LINE)
  private String tagLine;

  public static final String SERIALIZED_NAME_THIRD_PARTY_INTEGRATION = "third_party_integration";
  @SerializedName(SERIALIZED_NAME_THIRD_PARTY_INTEGRATION)
  private Boolean thirdPartyIntegration;

  public static final String SERIALIZED_NAME_THIRD_PARTY_INTEGRATION_LINK = "third_party_integration_link";
  @SerializedName(SERIALIZED_NAME_THIRD_PARTY_INTEGRATION_LINK)
  private String thirdPartyIntegrationLink;

  public static final String SERIALIZED_NAME_TRANSLATIONS = "translations";
  @SerializedName(SERIALIZED_NAME_TRANSLATIONS)
  private List<Translation> translations;

  public static final String SERIALIZED_NAME_TRAY_IO_ID = "tray_io_id";
  @SerializedName(SERIALIZED_NAME_TRAY_IO_ID)
  private String trayIoId;

  public static final String SERIALIZED_NAME_UNIFY_CONNECTOR_ID = "unify_connector_id";
  @SerializedName(SERIALIZED_NAME_UNIFY_CONNECTOR_ID)
  private String unifyConnectorId;

  public static final String SERIALIZED_NAME_UPCOMING = "upcoming";
  @SerializedName(SERIALIZED_NAME_UPCOMING)
  private Boolean upcoming;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_ZAPIER_ID = "zapier_id";
  @SerializedName(SERIALIZED_NAME_ZAPIER_ID)
  private String zapierId;

  public Listing() {
  }

  public Listing(
     OffsetDateTime createdAt, 
     String externalId, 
     String id, 
     OffsetDateTime publishedAt, 
     OffsetDateTime updatedAt
  ) {
    this();
    this.createdAt = createdAt;
    this.externalId = externalId;
    this.id = id;
    this.publishedAt = publishedAt;
    this.updatedAt = updatedAt;
  }

  public Listing automateId(String automateId) {
    this.automateId = automateId;
    return this;
  }

  /**
   * Get automateId
   * @return automateId
   */
  @javax.annotation.Nullable
  public String getAutomateId() {
    return automateId;
  }

  public void setAutomateId(String automateId) {
    this.automateId = automateId;
  }


  public Listing blendrId(String blendrId) {
    this.blendrId = blendrId;
    return this;
  }

  /**
   * Get blendrId
   * @return blendrId
   */
  @javax.annotation.Nullable
  public String getBlendrId() {
    return blendrId;
  }

  public void setBlendrId(String blendrId) {
    this.blendrId = blendrId;
  }


  public Listing cardBackgroundColor(String cardBackgroundColor) {
    this.cardBackgroundColor = cardBackgroundColor;
    return this;
  }

  /**
   * Get cardBackgroundColor
   * @return cardBackgroundColor
   */
  @javax.annotation.Nullable
  public String getCardBackgroundColor() {
    return cardBackgroundColor;
  }

  public void setCardBackgroundColor(String cardBackgroundColor) {
    this.cardBackgroundColor = cardBackgroundColor;
  }


  public Listing cardBackgroundImage(ModelFile cardBackgroundImage) {
    this.cardBackgroundImage = cardBackgroundImage;
    return this;
  }

  /**
   * Get cardBackgroundImage
   * @return cardBackgroundImage
   */
  @javax.annotation.Nullable
  public ModelFile getCardBackgroundImage() {
    return cardBackgroundImage;
  }

  public void setCardBackgroundImage(ModelFile cardBackgroundImage) {
    this.cardBackgroundImage = cardBackgroundImage;
  }


  public Listing categories(List<Category> categories) {
    this.categories = categories;
    return this;
  }

  public Listing addCategoriesItem(Category categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

  /**
   * Get categories
   * @return categories
   */
  @javax.annotation.Nullable
  public List<Category> getCategories() {
    return categories;
  }

  public void setCategories(List<Category> categories) {
    this.categories = categories;
  }


  public Listing cloudServiceId(String cloudServiceId) {
    this.cloudServiceId = cloudServiceId;
    return this;
  }

  /**
   * Get cloudServiceId
   * @return cloudServiceId
   */
  @javax.annotation.Nullable
  public String getCloudServiceId() {
    return cloudServiceId;
  }

  public void setCloudServiceId(String cloudServiceId) {
    this.cloudServiceId = cloudServiceId;
  }


  public Listing collections(List<Collection> collections) {
    this.collections = collections;
    return this;
  }

  public Listing addCollectionsItem(Collection collectionsItem) {
    if (this.collections == null) {
      this.collections = new ArrayList<>();
    }
    this.collections.add(collectionsItem);
    return this;
  }

  /**
   * Get collections
   * @return collections
   */
  @javax.annotation.Nullable
  public List<Collection> getCollections() {
    return collections;
  }

  public void setCollections(List<Collection> collections) {
    this.collections = collections;
  }


  public Listing combideskId(String combideskId) {
    this.combideskId = combideskId;
    return this;
  }

  /**
   * Get combideskId
   * @return combideskId
   */
  @javax.annotation.Nullable
  public String getCombideskId() {
    return combideskId;
  }

  public void setCombideskId(String combideskId) {
    this.combideskId = combideskId;
  }


  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }



  public Listing description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public Listing detailPageDisabled(Boolean detailPageDisabled) {
    this.detailPageDisabled = detailPageDisabled;
    return this;
  }

  /**
   * Get detailPageDisabled
   * @return detailPageDisabled
   */
  @javax.annotation.Nullable
  public Boolean getDetailPageDisabled() {
    return detailPageDisabled;
  }

  public void setDetailPageDisabled(Boolean detailPageDisabled) {
    this.detailPageDisabled = detailPageDisabled;
  }


  /**
   * Get externalId
   * @return externalId
   */
  @javax.annotation.Nullable
  public String getExternalId() {
    return externalId;
  }



  public Listing features(String features) {
    this.features = features;
    return this;
  }

  /**
   * Get features
   * @return features
   */
  @javax.annotation.Nullable
  public String getFeatures() {
    return features;
  }

  public void setFeatures(String features) {
    this.features = features;
  }


  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  public Listing integromatId(String integromatId) {
    this.integromatId = integromatId;
    return this;
  }

  /**
   * Get integromatId
   * @return integromatId
   */
  @javax.annotation.Nullable
  public String getIntegromatId() {
    return integromatId;
  }

  public void setIntegromatId(String integromatId) {
    this.integromatId = integromatId;
  }


  public Listing logo(Logo logo) {
    this.logo = logo;
    return this;
  }

  /**
   * Get logo
   * @return logo
   */
  @javax.annotation.Nullable
  public Logo getLogo() {
    return logo;
  }

  public void setLogo(Logo logo) {
    this.logo = logo;
  }


  public Listing media(List<Media> media) {
    this.media = media;
    return this;
  }

  public Listing addMediaItem(Media mediaItem) {
    if (this.media == null) {
      this.media = new ArrayList<>();
    }
    this.media.add(mediaItem);
    return this;
  }

  /**
   * Get media
   * @return media
   */
  @javax.annotation.Nullable
  public List<Media> getMedia() {
    return media;
  }

  public void setMedia(List<Media> media) {
    this.media = media;
  }


  public Listing metaTagDescription(String metaTagDescription) {
    this.metaTagDescription = metaTagDescription;
    return this;
  }

  /**
   * Get metaTagDescription
   * @return metaTagDescription
   */
  @javax.annotation.Nullable
  public String getMetaTagDescription() {
    return metaTagDescription;
  }

  public void setMetaTagDescription(String metaTagDescription) {
    this.metaTagDescription = metaTagDescription;
  }


  public Listing metaTagKeywords(String metaTagKeywords) {
    this.metaTagKeywords = metaTagKeywords;
    return this;
  }

  /**
   * Get metaTagKeywords
   * @return metaTagKeywords
   */
  @javax.annotation.Nullable
  public String getMetaTagKeywords() {
    return metaTagKeywords;
  }

  public void setMetaTagKeywords(String metaTagKeywords) {
    this.metaTagKeywords = metaTagKeywords;
  }


  public Listing metaTagTitle(String metaTagTitle) {
    this.metaTagTitle = metaTagTitle;
    return this;
  }

  /**
   * Get metaTagTitle
   * @return metaTagTitle
   */
  @javax.annotation.Nullable
  public String getMetaTagTitle() {
    return metaTagTitle;
  }

  public void setMetaTagTitle(String metaTagTitle) {
    this.metaTagTitle = metaTagTitle;
  }


  public Listing microsoftFlowId(String microsoftFlowId) {
    this.microsoftFlowId = microsoftFlowId;
    return this;
  }

  /**
   * Get microsoftFlowId
   * @return microsoftFlowId
   */
  @javax.annotation.Nullable
  public String getMicrosoftFlowId() {
    return microsoftFlowId;
  }

  public void setMicrosoftFlowId(String microsoftFlowId) {
    this.microsoftFlowId = microsoftFlowId;
  }


  public Listing name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Listing nativeIntegration(Boolean nativeIntegration) {
    this.nativeIntegration = nativeIntegration;
    return this;
  }

  /**
   * Get nativeIntegration
   * @return nativeIntegration
   */
  @javax.annotation.Nullable
  public Boolean getNativeIntegration() {
    return nativeIntegration;
  }

  public void setNativeIntegration(Boolean nativeIntegration) {
    this.nativeIntegration = nativeIntegration;
  }


  public Listing nativeIntegrationLink(String nativeIntegrationLink) {
    this.nativeIntegrationLink = nativeIntegrationLink;
    return this;
  }

  /**
   * Get nativeIntegrationLink
   * @return nativeIntegrationLink
   */
  @javax.annotation.Nullable
  public String getNativeIntegrationLink() {
    return nativeIntegrationLink;
  }

  public void setNativeIntegrationLink(String nativeIntegrationLink) {
    this.nativeIntegrationLink = nativeIntegrationLink;
  }


  public Listing partner(Partner partner) {
    this.partner = partner;
    return this;
  }

  /**
   * Get partner
   * @return partner
   */
  @javax.annotation.Nullable
  public Partner getPartner() {
    return partner;
  }

  public void setPartner(Partner partner) {
    this.partner = partner;
  }


  public Listing piesyncId(String piesyncId) {
    this.piesyncId = piesyncId;
    return this;
  }

  /**
   * Get piesyncId
   * @return piesyncId
   */
  @javax.annotation.Nullable
  public String getPiesyncId() {
    return piesyncId;
  }

  public void setPiesyncId(String piesyncId) {
    this.piesyncId = piesyncId;
  }


  public Listing pricing(String pricing) {
    this.pricing = pricing;
    return this;
  }

  /**
   * Get pricing
   * @return pricing
   */
  @javax.annotation.Nullable
  public String getPricing() {
    return pricing;
  }

  public void setPricing(String pricing) {
    this.pricing = pricing;
  }


  public Listing products(List<Product> products) {
    this.products = products;
    return this;
  }

  public Listing addProductsItem(Product productsItem) {
    if (this.products == null) {
      this.products = new ArrayList<>();
    }
    this.products.add(productsItem);
    return this;
  }

  /**
   * Get products
   * @return products
   */
  @javax.annotation.Nullable
  public List<Product> getProducts() {
    return products;
  }

  public void setProducts(List<Product> products) {
    this.products = products;
  }


  public Listing published(Boolean published) {
    this.published = published;
    return this;
  }

  /**
   * Get published
   * @return published
   */
  @javax.annotation.Nullable
  public Boolean getPublished() {
    return published;
  }

  public void setPublished(Boolean published) {
    this.published = published;
  }


  /**
   * Get publishedAt
   * @return publishedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getPublishedAt() {
    return publishedAt;
  }



  public Listing screenshots(List<Screenshot> screenshots) {
    this.screenshots = screenshots;
    return this;
  }

  public Listing addScreenshotsItem(Screenshot screenshotsItem) {
    if (this.screenshots == null) {
      this.screenshots = new ArrayList<>();
    }
    this.screenshots.add(screenshotsItem);
    return this;
  }

  /**
   * Get screenshots
   * @return screenshots
   */
  @javax.annotation.Nullable
  public List<Screenshot> getScreenshots() {
    return screenshots;
  }

  public void setScreenshots(List<Screenshot> screenshots) {
    this.screenshots = screenshots;
  }


  public Listing segmentId(String segmentId) {
    this.segmentId = segmentId;
    return this;
  }

  /**
   * Get segmentId
   * @return segmentId
   */
  @javax.annotation.Nullable
  public String getSegmentId() {
    return segmentId;
  }

  public void setSegmentId(String segmentId) {
    this.segmentId = segmentId;
  }


  public Listing slug(String slug) {
    this.slug = slug;
    return this;
  }

  /**
   * Get slug
   * @return slug
   */
  @javax.annotation.Nonnull
  public String getSlug() {
    return slug;
  }

  public void setSlug(String slug) {
    this.slug = slug;
  }


  public Listing sticky(Boolean sticky) {
    this.sticky = sticky;
    return this;
  }

  /**
   * Get sticky
   * @return sticky
   */
  @javax.annotation.Nullable
  public Boolean getSticky() {
    return sticky;
  }

  public void setSticky(Boolean sticky) {
    this.sticky = sticky;
  }


  public Listing tagLine(String tagLine) {
    this.tagLine = tagLine;
    return this;
  }

  /**
   * Get tagLine
   * @return tagLine
   */
  @javax.annotation.Nullable
  public String getTagLine() {
    return tagLine;
  }

  public void setTagLine(String tagLine) {
    this.tagLine = tagLine;
  }


  public Listing thirdPartyIntegration(Boolean thirdPartyIntegration) {
    this.thirdPartyIntegration = thirdPartyIntegration;
    return this;
  }

  /**
   * Get thirdPartyIntegration
   * @return thirdPartyIntegration
   */
  @javax.annotation.Nullable
  public Boolean getThirdPartyIntegration() {
    return thirdPartyIntegration;
  }

  public void setThirdPartyIntegration(Boolean thirdPartyIntegration) {
    this.thirdPartyIntegration = thirdPartyIntegration;
  }


  public Listing thirdPartyIntegrationLink(String thirdPartyIntegrationLink) {
    this.thirdPartyIntegrationLink = thirdPartyIntegrationLink;
    return this;
  }

  /**
   * Get thirdPartyIntegrationLink
   * @return thirdPartyIntegrationLink
   */
  @javax.annotation.Nullable
  public String getThirdPartyIntegrationLink() {
    return thirdPartyIntegrationLink;
  }

  public void setThirdPartyIntegrationLink(String thirdPartyIntegrationLink) {
    this.thirdPartyIntegrationLink = thirdPartyIntegrationLink;
  }


  public Listing translations(List<Translation> translations) {
    this.translations = translations;
    return this;
  }

  public Listing addTranslationsItem(Translation translationsItem) {
    if (this.translations == null) {
      this.translations = new ArrayList<>();
    }
    this.translations.add(translationsItem);
    return this;
  }

  /**
   * Get translations
   * @return translations
   */
  @javax.annotation.Nullable
  public List<Translation> getTranslations() {
    return translations;
  }

  public void setTranslations(List<Translation> translations) {
    this.translations = translations;
  }


  public Listing trayIoId(String trayIoId) {
    this.trayIoId = trayIoId;
    return this;
  }

  /**
   * Get trayIoId
   * @return trayIoId
   */
  @javax.annotation.Nullable
  public String getTrayIoId() {
    return trayIoId;
  }

  public void setTrayIoId(String trayIoId) {
    this.trayIoId = trayIoId;
  }


  public Listing unifyConnectorId(String unifyConnectorId) {
    this.unifyConnectorId = unifyConnectorId;
    return this;
  }

  /**
   * Get unifyConnectorId
   * @return unifyConnectorId
   */
  @javax.annotation.Nullable
  public String getUnifyConnectorId() {
    return unifyConnectorId;
  }

  public void setUnifyConnectorId(String unifyConnectorId) {
    this.unifyConnectorId = unifyConnectorId;
  }


  public Listing upcoming(Boolean upcoming) {
    this.upcoming = upcoming;
    return this;
  }

  /**
   * Get upcoming
   * @return upcoming
   */
  @javax.annotation.Nullable
  public Boolean getUpcoming() {
    return upcoming;
  }

  public void setUpcoming(Boolean upcoming) {
    this.upcoming = upcoming;
  }


  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }



  public Listing zapierId(String zapierId) {
    this.zapierId = zapierId;
    return this;
  }

  /**
   * Get zapierId
   * @return zapierId
   */
  @javax.annotation.Nullable
  public String getZapierId() {
    return zapierId;
  }

  public void setZapierId(String zapierId) {
    this.zapierId = zapierId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Listing listing = (Listing) o;
    return Objects.equals(this.automateId, listing.automateId) &&
        Objects.equals(this.blendrId, listing.blendrId) &&
        Objects.equals(this.cardBackgroundColor, listing.cardBackgroundColor) &&
        Objects.equals(this.cardBackgroundImage, listing.cardBackgroundImage) &&
        Objects.equals(this.categories, listing.categories) &&
        Objects.equals(this.cloudServiceId, listing.cloudServiceId) &&
        Objects.equals(this.collections, listing.collections) &&
        Objects.equals(this.combideskId, listing.combideskId) &&
        Objects.equals(this.createdAt, listing.createdAt) &&
        Objects.equals(this.description, listing.description) &&
        Objects.equals(this.detailPageDisabled, listing.detailPageDisabled) &&
        Objects.equals(this.externalId, listing.externalId) &&
        Objects.equals(this.features, listing.features) &&
        Objects.equals(this.id, listing.id) &&
        Objects.equals(this.integromatId, listing.integromatId) &&
        Objects.equals(this.logo, listing.logo) &&
        Objects.equals(this.media, listing.media) &&
        Objects.equals(this.metaTagDescription, listing.metaTagDescription) &&
        Objects.equals(this.metaTagKeywords, listing.metaTagKeywords) &&
        Objects.equals(this.metaTagTitle, listing.metaTagTitle) &&
        Objects.equals(this.microsoftFlowId, listing.microsoftFlowId) &&
        Objects.equals(this.name, listing.name) &&
        Objects.equals(this.nativeIntegration, listing.nativeIntegration) &&
        Objects.equals(this.nativeIntegrationLink, listing.nativeIntegrationLink) &&
        Objects.equals(this.partner, listing.partner) &&
        Objects.equals(this.piesyncId, listing.piesyncId) &&
        Objects.equals(this.pricing, listing.pricing) &&
        Objects.equals(this.products, listing.products) &&
        Objects.equals(this.published, listing.published) &&
        Objects.equals(this.publishedAt, listing.publishedAt) &&
        Objects.equals(this.screenshots, listing.screenshots) &&
        Objects.equals(this.segmentId, listing.segmentId) &&
        Objects.equals(this.slug, listing.slug) &&
        Objects.equals(this.sticky, listing.sticky) &&
        Objects.equals(this.tagLine, listing.tagLine) &&
        Objects.equals(this.thirdPartyIntegration, listing.thirdPartyIntegration) &&
        Objects.equals(this.thirdPartyIntegrationLink, listing.thirdPartyIntegrationLink) &&
        Objects.equals(this.translations, listing.translations) &&
        Objects.equals(this.trayIoId, listing.trayIoId) &&
        Objects.equals(this.unifyConnectorId, listing.unifyConnectorId) &&
        Objects.equals(this.upcoming, listing.upcoming) &&
        Objects.equals(this.updatedAt, listing.updatedAt) &&
        Objects.equals(this.zapierId, listing.zapierId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(automateId, blendrId, cardBackgroundColor, cardBackgroundImage, categories, cloudServiceId, collections, combideskId, createdAt, description, detailPageDisabled, externalId, features, id, integromatId, logo, media, metaTagDescription, metaTagKeywords, metaTagTitle, microsoftFlowId, name, nativeIntegration, nativeIntegrationLink, partner, piesyncId, pricing, products, published, publishedAt, screenshots, segmentId, slug, sticky, tagLine, thirdPartyIntegration, thirdPartyIntegrationLink, translations, trayIoId, unifyConnectorId, upcoming, updatedAt, zapierId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Listing {\n");
    sb.append("    automateId: ").append(toIndentedString(automateId)).append("\n");
    sb.append("    blendrId: ").append(toIndentedString(blendrId)).append("\n");
    sb.append("    cardBackgroundColor: ").append(toIndentedString(cardBackgroundColor)).append("\n");
    sb.append("    cardBackgroundImage: ").append(toIndentedString(cardBackgroundImage)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    cloudServiceId: ").append(toIndentedString(cloudServiceId)).append("\n");
    sb.append("    collections: ").append(toIndentedString(collections)).append("\n");
    sb.append("    combideskId: ").append(toIndentedString(combideskId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    detailPageDisabled: ").append(toIndentedString(detailPageDisabled)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    integromatId: ").append(toIndentedString(integromatId)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("    media: ").append(toIndentedString(media)).append("\n");
    sb.append("    metaTagDescription: ").append(toIndentedString(metaTagDescription)).append("\n");
    sb.append("    metaTagKeywords: ").append(toIndentedString(metaTagKeywords)).append("\n");
    sb.append("    metaTagTitle: ").append(toIndentedString(metaTagTitle)).append("\n");
    sb.append("    microsoftFlowId: ").append(toIndentedString(microsoftFlowId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nativeIntegration: ").append(toIndentedString(nativeIntegration)).append("\n");
    sb.append("    nativeIntegrationLink: ").append(toIndentedString(nativeIntegrationLink)).append("\n");
    sb.append("    partner: ").append(toIndentedString(partner)).append("\n");
    sb.append("    piesyncId: ").append(toIndentedString(piesyncId)).append("\n");
    sb.append("    pricing: ").append(toIndentedString(pricing)).append("\n");
    sb.append("    products: ").append(toIndentedString(products)).append("\n");
    sb.append("    published: ").append(toIndentedString(published)).append("\n");
    sb.append("    publishedAt: ").append(toIndentedString(publishedAt)).append("\n");
    sb.append("    screenshots: ").append(toIndentedString(screenshots)).append("\n");
    sb.append("    segmentId: ").append(toIndentedString(segmentId)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    sticky: ").append(toIndentedString(sticky)).append("\n");
    sb.append("    tagLine: ").append(toIndentedString(tagLine)).append("\n");
    sb.append("    thirdPartyIntegration: ").append(toIndentedString(thirdPartyIntegration)).append("\n");
    sb.append("    thirdPartyIntegrationLink: ").append(toIndentedString(thirdPartyIntegrationLink)).append("\n");
    sb.append("    translations: ").append(toIndentedString(translations)).append("\n");
    sb.append("    trayIoId: ").append(toIndentedString(trayIoId)).append("\n");
    sb.append("    unifyConnectorId: ").append(toIndentedString(unifyConnectorId)).append("\n");
    sb.append("    upcoming: ").append(toIndentedString(upcoming)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    zapierId: ").append(toIndentedString(zapierId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("automate_id");
    openapiFields.add("blendr_id");
    openapiFields.add("card_background_color");
    openapiFields.add("card_background_image");
    openapiFields.add("categories");
    openapiFields.add("cloud_service_id");
    openapiFields.add("collections");
    openapiFields.add("combidesk_id");
    openapiFields.add("created_at");
    openapiFields.add("description");
    openapiFields.add("detail_page_disabled");
    openapiFields.add("external_id");
    openapiFields.add("features");
    openapiFields.add("id");
    openapiFields.add("integromat_id");
    openapiFields.add("logo");
    openapiFields.add("media");
    openapiFields.add("meta_tag_description");
    openapiFields.add("meta_tag_keywords");
    openapiFields.add("meta_tag_title");
    openapiFields.add("microsoft_flow_id");
    openapiFields.add("name");
    openapiFields.add("native_integration");
    openapiFields.add("native_integration_link");
    openapiFields.add("partner");
    openapiFields.add("piesync_id");
    openapiFields.add("pricing");
    openapiFields.add("products");
    openapiFields.add("published");
    openapiFields.add("published_at");
    openapiFields.add("screenshots");
    openapiFields.add("segment_id");
    openapiFields.add("slug");
    openapiFields.add("sticky");
    openapiFields.add("tag_line");
    openapiFields.add("third_party_integration");
    openapiFields.add("third_party_integration_link");
    openapiFields.add("translations");
    openapiFields.add("tray_io_id");
    openapiFields.add("unify_connector_id");
    openapiFields.add("upcoming");
    openapiFields.add("updated_at");
    openapiFields.add("zapier_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("slug");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Listing
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Listing.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Listing is not found in the empty JSON string", Listing.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Listing.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Listing` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Listing.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("automate_id") != null && !jsonObj.get("automate_id").isJsonNull()) && !jsonObj.get("automate_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `automate_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("automate_id").toString()));
      }
      if ((jsonObj.get("blendr_id") != null && !jsonObj.get("blendr_id").isJsonNull()) && !jsonObj.get("blendr_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `blendr_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("blendr_id").toString()));
      }
      if ((jsonObj.get("card_background_color") != null && !jsonObj.get("card_background_color").isJsonNull()) && !jsonObj.get("card_background_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `card_background_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("card_background_color").toString()));
      }
      // validate the optional field `card_background_image`
      if (jsonObj.get("card_background_image") != null && !jsonObj.get("card_background_image").isJsonNull()) {
        ModelFile.validateJsonElement(jsonObj.get("card_background_image"));
      }
      if (jsonObj.get("categories") != null && !jsonObj.get("categories").isJsonNull()) {
        JsonArray jsonArraycategories = jsonObj.getAsJsonArray("categories");
        if (jsonArraycategories != null) {
          // ensure the json data is an array
          if (!jsonObj.get("categories").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `categories` to be an array in the JSON string but got `%s`", jsonObj.get("categories").toString()));
          }

          // validate the optional field `categories` (array)
          for (int i = 0; i < jsonArraycategories.size(); i++) {
            Category.validateJsonElement(jsonArraycategories.get(i));
          };
        }
      }
      if ((jsonObj.get("cloud_service_id") != null && !jsonObj.get("cloud_service_id").isJsonNull()) && !jsonObj.get("cloud_service_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cloud_service_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cloud_service_id").toString()));
      }
      if (jsonObj.get("collections") != null && !jsonObj.get("collections").isJsonNull()) {
        JsonArray jsonArraycollections = jsonObj.getAsJsonArray("collections");
        if (jsonArraycollections != null) {
          // ensure the json data is an array
          if (!jsonObj.get("collections").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `collections` to be an array in the JSON string but got `%s`", jsonObj.get("collections").toString()));
          }

          // validate the optional field `collections` (array)
          for (int i = 0; i < jsonArraycollections.size(); i++) {
            Collection.validateJsonElement(jsonArraycollections.get(i));
          };
        }
      }
      if ((jsonObj.get("combidesk_id") != null && !jsonObj.get("combidesk_id").isJsonNull()) && !jsonObj.get("combidesk_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `combidesk_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("combidesk_id").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("external_id") != null && !jsonObj.get("external_id").isJsonNull()) && !jsonObj.get("external_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `external_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("external_id").toString()));
      }
      if ((jsonObj.get("features") != null && !jsonObj.get("features").isJsonNull()) && !jsonObj.get("features").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `features` to be a primitive type in the JSON string but got `%s`", jsonObj.get("features").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("integromat_id") != null && !jsonObj.get("integromat_id").isJsonNull()) && !jsonObj.get("integromat_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `integromat_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("integromat_id").toString()));
      }
      // validate the optional field `logo`
      if (jsonObj.get("logo") != null && !jsonObj.get("logo").isJsonNull()) {
        Logo.validateJsonElement(jsonObj.get("logo"));
      }
      if (jsonObj.get("media") != null && !jsonObj.get("media").isJsonNull()) {
        JsonArray jsonArraymedia = jsonObj.getAsJsonArray("media");
        if (jsonArraymedia != null) {
          // ensure the json data is an array
          if (!jsonObj.get("media").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `media` to be an array in the JSON string but got `%s`", jsonObj.get("media").toString()));
          }

          // validate the optional field `media` (array)
          for (int i = 0; i < jsonArraymedia.size(); i++) {
            Media.validateJsonElement(jsonArraymedia.get(i));
          };
        }
      }
      if ((jsonObj.get("meta_tag_description") != null && !jsonObj.get("meta_tag_description").isJsonNull()) && !jsonObj.get("meta_tag_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_tag_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_tag_description").toString()));
      }
      if ((jsonObj.get("meta_tag_keywords") != null && !jsonObj.get("meta_tag_keywords").isJsonNull()) && !jsonObj.get("meta_tag_keywords").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_tag_keywords` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_tag_keywords").toString()));
      }
      if ((jsonObj.get("meta_tag_title") != null && !jsonObj.get("meta_tag_title").isJsonNull()) && !jsonObj.get("meta_tag_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_tag_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_tag_title").toString()));
      }
      if ((jsonObj.get("microsoft_flow_id") != null && !jsonObj.get("microsoft_flow_id").isJsonNull()) && !jsonObj.get("microsoft_flow_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `microsoft_flow_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("microsoft_flow_id").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("native_integration_link") != null && !jsonObj.get("native_integration_link").isJsonNull()) && !jsonObj.get("native_integration_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `native_integration_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("native_integration_link").toString()));
      }
      // validate the optional field `partner`
      if (jsonObj.get("partner") != null && !jsonObj.get("partner").isJsonNull()) {
        Partner.validateJsonElement(jsonObj.get("partner"));
      }
      if ((jsonObj.get("piesync_id") != null && !jsonObj.get("piesync_id").isJsonNull()) && !jsonObj.get("piesync_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `piesync_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("piesync_id").toString()));
      }
      if ((jsonObj.get("pricing") != null && !jsonObj.get("pricing").isJsonNull()) && !jsonObj.get("pricing").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pricing` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pricing").toString()));
      }
      if (jsonObj.get("products") != null && !jsonObj.get("products").isJsonNull()) {
        JsonArray jsonArrayproducts = jsonObj.getAsJsonArray("products");
        if (jsonArrayproducts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("products").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `products` to be an array in the JSON string but got `%s`", jsonObj.get("products").toString()));
          }

          // validate the optional field `products` (array)
          for (int i = 0; i < jsonArrayproducts.size(); i++) {
            Product.validateJsonElement(jsonArrayproducts.get(i));
          };
        }
      }
      if (jsonObj.get("screenshots") != null && !jsonObj.get("screenshots").isJsonNull()) {
        JsonArray jsonArrayscreenshots = jsonObj.getAsJsonArray("screenshots");
        if (jsonArrayscreenshots != null) {
          // ensure the json data is an array
          if (!jsonObj.get("screenshots").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `screenshots` to be an array in the JSON string but got `%s`", jsonObj.get("screenshots").toString()));
          }

          // validate the optional field `screenshots` (array)
          for (int i = 0; i < jsonArrayscreenshots.size(); i++) {
            Screenshot.validateJsonElement(jsonArrayscreenshots.get(i));
          };
        }
      }
      if ((jsonObj.get("segment_id") != null && !jsonObj.get("segment_id").isJsonNull()) && !jsonObj.get("segment_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `segment_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("segment_id").toString()));
      }
      if (!jsonObj.get("slug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slug").toString()));
      }
      if ((jsonObj.get("tag_line") != null && !jsonObj.get("tag_line").isJsonNull()) && !jsonObj.get("tag_line").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tag_line` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tag_line").toString()));
      }
      if ((jsonObj.get("third_party_integration_link") != null && !jsonObj.get("third_party_integration_link").isJsonNull()) && !jsonObj.get("third_party_integration_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `third_party_integration_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("third_party_integration_link").toString()));
      }
      if (jsonObj.get("translations") != null && !jsonObj.get("translations").isJsonNull()) {
        JsonArray jsonArraytranslations = jsonObj.getAsJsonArray("translations");
        if (jsonArraytranslations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("translations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `translations` to be an array in the JSON string but got `%s`", jsonObj.get("translations").toString()));
          }

          // validate the optional field `translations` (array)
          for (int i = 0; i < jsonArraytranslations.size(); i++) {
            Translation.validateJsonElement(jsonArraytranslations.get(i));
          };
        }
      }
      if ((jsonObj.get("tray_io_id") != null && !jsonObj.get("tray_io_id").isJsonNull()) && !jsonObj.get("tray_io_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tray_io_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tray_io_id").toString()));
      }
      if ((jsonObj.get("unify_connector_id") != null && !jsonObj.get("unify_connector_id").isJsonNull()) && !jsonObj.get("unify_connector_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unify_connector_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unify_connector_id").toString()));
      }
      if ((jsonObj.get("zapier_id") != null && !jsonObj.get("zapier_id").isJsonNull()) && !jsonObj.get("zapier_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zapier_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zapier_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Listing.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Listing' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Listing> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Listing.class));

       return (TypeAdapter<T>) new TypeAdapter<Listing>() {
           @Override
           public void write(JsonWriter out, Listing value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Listing read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Listing given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Listing
   * @throws IOException if the JSON string is invalid with respect to Listing
   */
  public static Listing fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Listing.class);
  }

  /**
   * Convert an instance of Listing to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

