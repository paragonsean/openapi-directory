/*
 * Ecosystem API
 * Ecosystem API
 *
 * The version of the OpenAPI document: 0.0.6
 * Contact: hello@apideck.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * LeadFormSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:58:03.100845-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LeadFormSettings {
  public static final String SERIALIZED_NAME_CAPTURE_FORM_ENABLED = "capture_form_enabled";
  @SerializedName(SERIALIZED_NAME_CAPTURE_FORM_ENABLED)
  private Boolean captureFormEnabled;

  public static final String SERIALIZED_NAME_FIRST_NAME_FIELD_ENABLED = "first_name_field_enabled";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME_FIELD_ENABLED)
  private Boolean firstNameFieldEnabled;

  public static final String SERIALIZED_NAME_FIRST_NAME_FIELD_REQUIRED = "first_name_field_required";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME_FIELD_REQUIRED)
  private Boolean firstNameFieldRequired;

  public static final String SERIALIZED_NAME_INTEGRATION_ENABLED = "integration_enabled";
  @SerializedName(SERIALIZED_NAME_INTEGRATION_ENABLED)
  private Boolean integrationEnabled;

  public static final String SERIALIZED_NAME_LAST_NAME_FIELD_ENABLED = "last_name_field_enabled";
  @SerializedName(SERIALIZED_NAME_LAST_NAME_FIELD_ENABLED)
  private Boolean lastNameFieldEnabled;

  public static final String SERIALIZED_NAME_LAST_NAME_FIELD_REQUIRED = "last_name_field_required";
  @SerializedName(SERIALIZED_NAME_LAST_NAME_FIELD_REQUIRED)
  private Boolean lastNameFieldRequired;

  public static final String SERIALIZED_NAME_TELEPHONE_FIELD_ENABLED = "telephone_field_enabled";
  @SerializedName(SERIALIZED_NAME_TELEPHONE_FIELD_ENABLED)
  private Boolean telephoneFieldEnabled;

  public static final String SERIALIZED_NAME_TELEPHONE_FIELD_REQUIRED = "telephone_field_required";
  @SerializedName(SERIALIZED_NAME_TELEPHONE_FIELD_REQUIRED)
  private Boolean telephoneFieldRequired;

  public static final String SERIALIZED_NAME_WORK_EMAIL_VALIDATION = "work_email_validation";
  @SerializedName(SERIALIZED_NAME_WORK_EMAIL_VALIDATION)
  private Boolean workEmailValidation;

  public LeadFormSettings() {
  }

  public LeadFormSettings captureFormEnabled(Boolean captureFormEnabled) {
    this.captureFormEnabled = captureFormEnabled;
    return this;
  }

  /**
   * Get captureFormEnabled
   * @return captureFormEnabled
   */
  @javax.annotation.Nullable
  public Boolean getCaptureFormEnabled() {
    return captureFormEnabled;
  }

  public void setCaptureFormEnabled(Boolean captureFormEnabled) {
    this.captureFormEnabled = captureFormEnabled;
  }


  public LeadFormSettings firstNameFieldEnabled(Boolean firstNameFieldEnabled) {
    this.firstNameFieldEnabled = firstNameFieldEnabled;
    return this;
  }

  /**
   * Get firstNameFieldEnabled
   * @return firstNameFieldEnabled
   */
  @javax.annotation.Nullable
  public Boolean getFirstNameFieldEnabled() {
    return firstNameFieldEnabled;
  }

  public void setFirstNameFieldEnabled(Boolean firstNameFieldEnabled) {
    this.firstNameFieldEnabled = firstNameFieldEnabled;
  }


  public LeadFormSettings firstNameFieldRequired(Boolean firstNameFieldRequired) {
    this.firstNameFieldRequired = firstNameFieldRequired;
    return this;
  }

  /**
   * Get firstNameFieldRequired
   * @return firstNameFieldRequired
   */
  @javax.annotation.Nullable
  public Boolean getFirstNameFieldRequired() {
    return firstNameFieldRequired;
  }

  public void setFirstNameFieldRequired(Boolean firstNameFieldRequired) {
    this.firstNameFieldRequired = firstNameFieldRequired;
  }


  public LeadFormSettings integrationEnabled(Boolean integrationEnabled) {
    this.integrationEnabled = integrationEnabled;
    return this;
  }

  /**
   * Get integrationEnabled
   * @return integrationEnabled
   */
  @javax.annotation.Nullable
  public Boolean getIntegrationEnabled() {
    return integrationEnabled;
  }

  public void setIntegrationEnabled(Boolean integrationEnabled) {
    this.integrationEnabled = integrationEnabled;
  }


  public LeadFormSettings lastNameFieldEnabled(Boolean lastNameFieldEnabled) {
    this.lastNameFieldEnabled = lastNameFieldEnabled;
    return this;
  }

  /**
   * Get lastNameFieldEnabled
   * @return lastNameFieldEnabled
   */
  @javax.annotation.Nullable
  public Boolean getLastNameFieldEnabled() {
    return lastNameFieldEnabled;
  }

  public void setLastNameFieldEnabled(Boolean lastNameFieldEnabled) {
    this.lastNameFieldEnabled = lastNameFieldEnabled;
  }


  public LeadFormSettings lastNameFieldRequired(Boolean lastNameFieldRequired) {
    this.lastNameFieldRequired = lastNameFieldRequired;
    return this;
  }

  /**
   * Get lastNameFieldRequired
   * @return lastNameFieldRequired
   */
  @javax.annotation.Nullable
  public Boolean getLastNameFieldRequired() {
    return lastNameFieldRequired;
  }

  public void setLastNameFieldRequired(Boolean lastNameFieldRequired) {
    this.lastNameFieldRequired = lastNameFieldRequired;
  }


  public LeadFormSettings telephoneFieldEnabled(Boolean telephoneFieldEnabled) {
    this.telephoneFieldEnabled = telephoneFieldEnabled;
    return this;
  }

  /**
   * Get telephoneFieldEnabled
   * @return telephoneFieldEnabled
   */
  @javax.annotation.Nullable
  public Boolean getTelephoneFieldEnabled() {
    return telephoneFieldEnabled;
  }

  public void setTelephoneFieldEnabled(Boolean telephoneFieldEnabled) {
    this.telephoneFieldEnabled = telephoneFieldEnabled;
  }


  public LeadFormSettings telephoneFieldRequired(Boolean telephoneFieldRequired) {
    this.telephoneFieldRequired = telephoneFieldRequired;
    return this;
  }

  /**
   * Get telephoneFieldRequired
   * @return telephoneFieldRequired
   */
  @javax.annotation.Nullable
  public Boolean getTelephoneFieldRequired() {
    return telephoneFieldRequired;
  }

  public void setTelephoneFieldRequired(Boolean telephoneFieldRequired) {
    this.telephoneFieldRequired = telephoneFieldRequired;
  }


  public LeadFormSettings workEmailValidation(Boolean workEmailValidation) {
    this.workEmailValidation = workEmailValidation;
    return this;
  }

  /**
   * Get workEmailValidation
   * @return workEmailValidation
   */
  @javax.annotation.Nullable
  public Boolean getWorkEmailValidation() {
    return workEmailValidation;
  }

  public void setWorkEmailValidation(Boolean workEmailValidation) {
    this.workEmailValidation = workEmailValidation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LeadFormSettings leadFormSettings = (LeadFormSettings) o;
    return Objects.equals(this.captureFormEnabled, leadFormSettings.captureFormEnabled) &&
        Objects.equals(this.firstNameFieldEnabled, leadFormSettings.firstNameFieldEnabled) &&
        Objects.equals(this.firstNameFieldRequired, leadFormSettings.firstNameFieldRequired) &&
        Objects.equals(this.integrationEnabled, leadFormSettings.integrationEnabled) &&
        Objects.equals(this.lastNameFieldEnabled, leadFormSettings.lastNameFieldEnabled) &&
        Objects.equals(this.lastNameFieldRequired, leadFormSettings.lastNameFieldRequired) &&
        Objects.equals(this.telephoneFieldEnabled, leadFormSettings.telephoneFieldEnabled) &&
        Objects.equals(this.telephoneFieldRequired, leadFormSettings.telephoneFieldRequired) &&
        Objects.equals(this.workEmailValidation, leadFormSettings.workEmailValidation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(captureFormEnabled, firstNameFieldEnabled, firstNameFieldRequired, integrationEnabled, lastNameFieldEnabled, lastNameFieldRequired, telephoneFieldEnabled, telephoneFieldRequired, workEmailValidation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LeadFormSettings {\n");
    sb.append("    captureFormEnabled: ").append(toIndentedString(captureFormEnabled)).append("\n");
    sb.append("    firstNameFieldEnabled: ").append(toIndentedString(firstNameFieldEnabled)).append("\n");
    sb.append("    firstNameFieldRequired: ").append(toIndentedString(firstNameFieldRequired)).append("\n");
    sb.append("    integrationEnabled: ").append(toIndentedString(integrationEnabled)).append("\n");
    sb.append("    lastNameFieldEnabled: ").append(toIndentedString(lastNameFieldEnabled)).append("\n");
    sb.append("    lastNameFieldRequired: ").append(toIndentedString(lastNameFieldRequired)).append("\n");
    sb.append("    telephoneFieldEnabled: ").append(toIndentedString(telephoneFieldEnabled)).append("\n");
    sb.append("    telephoneFieldRequired: ").append(toIndentedString(telephoneFieldRequired)).append("\n");
    sb.append("    workEmailValidation: ").append(toIndentedString(workEmailValidation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("capture_form_enabled");
    openapiFields.add("first_name_field_enabled");
    openapiFields.add("first_name_field_required");
    openapiFields.add("integration_enabled");
    openapiFields.add("last_name_field_enabled");
    openapiFields.add("last_name_field_required");
    openapiFields.add("telephone_field_enabled");
    openapiFields.add("telephone_field_required");
    openapiFields.add("work_email_validation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LeadFormSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LeadFormSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LeadFormSettings is not found in the empty JSON string", LeadFormSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LeadFormSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LeadFormSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LeadFormSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LeadFormSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LeadFormSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LeadFormSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<LeadFormSettings>() {
           @Override
           public void write(JsonWriter out, LeadFormSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LeadFormSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LeadFormSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LeadFormSettings
   * @throws IOException if the JSON string is invalid with respect to LeadFormSettings
   */
  public static LeadFormSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LeadFormSettings.class);
  }

  /**
   * Convert an instance of LeadFormSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

