/*
 * Ecosystem API
 * Ecosystem API
 *
 * The version of the OpenAPI document: 0.0.6
 * Contact: hello@apideck.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CTASettings;
import org.openapitools.client.model.CardSettings;
import org.openapitools.client.model.CustomSettings;
import org.openapitools.client.model.IntegrationSettings;
import org.openapitools.client.model.LeadFormSettings;
import org.openapitools.client.model.ListingSettings;
import org.openapitools.client.model.MastheadSettings;
import org.openapitools.client.model.MetaTagSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Ecosystem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:58:03.100845-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Ecosystem {
  public static final String SERIALIZED_NAME_ABOUT = "about";
  @SerializedName(SERIALIZED_NAME_ABOUT)
  private String about;

  public static final String SERIALIZED_NAME_ALTERNATIVES_BACKGROUND_COLOR = "alternatives_background_color";
  @SerializedName(SERIALIZED_NAME_ALTERNATIVES_BACKGROUND_COLOR)
  private String alternativesBackgroundColor;

  public static final String SERIALIZED_NAME_ALTERNATIVES_COLOR = "alternatives_color";
  @SerializedName(SERIALIZED_NAME_ALTERNATIVES_COLOR)
  private String alternativesColor;

  public static final String SERIALIZED_NAME_ATTRIBUTION = "attribution";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTION)
  private Boolean attribution;

  public static final String SERIALIZED_NAME_BODY_BACKGROUND_COLOR = "body_background_color";
  @SerializedName(SERIALIZED_NAME_BODY_BACKGROUND_COLOR)
  private String bodyBackgroundColor;

  public static final String SERIALIZED_NAME_BODY_BUTTON_BACKGROUND_COLOR = "body_button_background_color";
  @SerializedName(SERIALIZED_NAME_BODY_BUTTON_BACKGROUND_COLOR)
  private String bodyButtonBackgroundColor;

  public static final String SERIALIZED_NAME_BODY_BUTTON_COLOR = "body_button_color";
  @SerializedName(SERIALIZED_NAME_BODY_BUTTON_COLOR)
  private String bodyButtonColor;

  public static final String SERIALIZED_NAME_BODY_COLOR = "body_color";
  @SerializedName(SERIALIZED_NAME_BODY_COLOR)
  private String bodyColor;

  public static final String SERIALIZED_NAME_BODY_LINK_COLOR = "body_link_color";
  @SerializedName(SERIALIZED_NAME_BODY_LINK_COLOR)
  private String bodyLinkColor;

  public static final String SERIALIZED_NAME_CARD_SETTINGS = "card_settings";
  @SerializedName(SERIALIZED_NAME_CARD_SETTINGS)
  private CardSettings cardSettings;

  public static final String SERIALIZED_NAME_CATEGORIES_COUNT_BADGE = "categories_count_badge";
  @SerializedName(SERIALIZED_NAME_CATEGORIES_COUNT_BADGE)
  private Boolean categoriesCountBadge;

  public static final String SERIALIZED_NAME_CATEGORIES_SHOW_MAX_ITEMS = "categories_show_max_items";
  @SerializedName(SERIALIZED_NAME_CATEGORIES_SHOW_MAX_ITEMS)
  private Integer categoriesShowMaxItems;

  public static final String SERIALIZED_NAME_COLLECTIONS_COUNT_BADGE = "collections_count_badge";
  @SerializedName(SERIALIZED_NAME_COLLECTIONS_COUNT_BADGE)
  private Boolean collectionsCountBadge;

  public static final String SERIALIZED_NAME_COLLECTIONS_TITLE = "collections_title";
  @SerializedName(SERIALIZED_NAME_COLLECTIONS_TITLE)
  private String collectionsTitle;

  public static final String SERIALIZED_NAME_CREATE_LINK = "create_link";
  @SerializedName(SERIALIZED_NAME_CREATE_LINK)
  private String createLink;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_CTA_SETTINGS = "cta_settings";
  @SerializedName(SERIALIZED_NAME_CTA_SETTINGS)
  private CTASettings ctaSettings;

  public static final String SERIALIZED_NAME_CUSTOM_DOMAIN = "custom_domain";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DOMAIN)
  private String customDomain;

  public static final String SERIALIZED_NAME_CUSTOM_SETTINGS = "custom_settings";
  @SerializedName(SERIALIZED_NAME_CUSTOM_SETTINGS)
  private CustomSettings customSettings;

  public static final String SERIALIZED_NAME_DETAIL_PAGES_ENABLED = "detail_pages_enabled";
  @SerializedName(SERIALIZED_NAME_DETAIL_PAGES_ENABLED)
  private Boolean detailPagesEnabled;

  public static final String SERIALIZED_NAME_FOOTER_BACKGROUND_COLOR = "footer_background_color";
  @SerializedName(SERIALIZED_NAME_FOOTER_BACKGROUND_COLOR)
  private String footerBackgroundColor;

  public static final String SERIALIZED_NAME_FOOTER_COLOR = "footer_color";
  @SerializedName(SERIALIZED_NAME_FOOTER_COLOR)
  private String footerColor;

  public static final String SERIALIZED_NAME_GOOGLE_SITE_VERIFICATION_ID = "google_site_verification_id";
  @SerializedName(SERIALIZED_NAME_GOOGLE_SITE_VERIFICATION_ID)
  private String googleSiteVerificationId;

  public static final String SERIALIZED_NAME_HIDE_INSTALL_BUTTONS = "hide_install_buttons";
  @SerializedName(SERIALIZED_NAME_HIDE_INSTALL_BUTTONS)
  private Boolean hideInstallButtons;

  public static final String SERIALIZED_NAME_HOME_PAGE_COLLECTION_CATEGORY_CARDS = "home_page_collection_category_cards";
  @SerializedName(SERIALIZED_NAME_HOME_PAGE_COLLECTION_CATEGORY_CARDS)
  private Boolean homePageCollectionCategoryCards;

  public static final String SERIALIZED_NAME_HOME_PAGE_SHOW_ALL_LISTINGS = "home_page_show_all_listings";
  @SerializedName(SERIALIZED_NAME_HOME_PAGE_SHOW_ALL_LISTINGS)
  private Boolean homePageShowAllListings;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INSTALLATION_REQUEST_FLOW_ENABLED = "installation_request_flow_enabled";
  @SerializedName(SERIALIZED_NAME_INSTALLATION_REQUEST_FLOW_ENABLED)
  private Boolean installationRequestFlowEnabled;

  public static final String SERIALIZED_NAME_INTEGRATION_SETTINGS = "integration_settings";
  @SerializedName(SERIALIZED_NAME_INTEGRATION_SETTINGS)
  private IntegrationSettings integrationSettings;

  public static final String SERIALIZED_NAME_IS_PUBLISHED = "is_published";
  @SerializedName(SERIALIZED_NAME_IS_PUBLISHED)
  private Boolean isPublished;

  public static final String SERIALIZED_NAME_LEAD_FORM_SETTINGS = "lead_form_settings";
  @SerializedName(SERIALIZED_NAME_LEAD_FORM_SETTINGS)
  private LeadFormSettings leadFormSettings;

  public static final String SERIALIZED_NAME_LISTING_SETTINGS = "listing_settings";
  @SerializedName(SERIALIZED_NAME_LISTING_SETTINGS)
  private ListingSettings listingSettings;

  public static final String SERIALIZED_NAME_MASTHEAD_SETTINGS = "masthead_settings";
  @SerializedName(SERIALIZED_NAME_MASTHEAD_SETTINGS)
  private MastheadSettings mastheadSettings;

  /**
   * Gets or Sets menuPosition
   */
  @JsonAdapter(MenuPositionEnum.Adapter.class)
  public enum MenuPositionEnum {
    TOP("TOP"),
    
    LEFT("LEFT"),
    
    RIGHT("RIGHT"),
    
    HIDDEN("HIDDEN");

    private String value;

    MenuPositionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MenuPositionEnum fromValue(String value) {
      for (MenuPositionEnum b : MenuPositionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MenuPositionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MenuPositionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MenuPositionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MenuPositionEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      MenuPositionEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_MENU_POSITION = "menu_position";
  @SerializedName(SERIALIZED_NAME_MENU_POSITION)
  private MenuPositionEnum menuPosition;

  /**
   * Gets or Sets menuStyle
   */
  @JsonAdapter(MenuStyleEnum.Adapter.class)
  public enum MenuStyleEnum {
    LIST("LIST"),
    
    PILL("PILL"),
    
    FILTER("FILTER");

    private String value;

    MenuStyleEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MenuStyleEnum fromValue(String value) {
      for (MenuStyleEnum b : MenuStyleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MenuStyleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MenuStyleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MenuStyleEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MenuStyleEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      MenuStyleEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_MENU_STYLE = "menu_style";
  @SerializedName(SERIALIZED_NAME_MENU_STYLE)
  private MenuStyleEnum menuStyle;

  public static final String SERIALIZED_NAME_META_TAG_SETTINGS = "meta_tag_settings";
  @SerializedName(SERIALIZED_NAME_META_TAG_SETTINGS)
  private MetaTagSettings metaTagSettings;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NAVIGATION_BACKGROUND_COLOR = "navigation_background_color";
  @SerializedName(SERIALIZED_NAME_NAVIGATION_BACKGROUND_COLOR)
  private String navigationBackgroundColor;

  public static final String SERIALIZED_NAME_NAVIGATION_COLOR = "navigation_color";
  @SerializedName(SERIALIZED_NAME_NAVIGATION_COLOR)
  private String navigationColor;

  public static final String SERIALIZED_NAME_NAVIGATION_LOGO_POST_FIX = "navigation_logo_post_fix";
  @SerializedName(SERIALIZED_NAME_NAVIGATION_LOGO_POST_FIX)
  private String navigationLogoPostFix;

  /**
   * Gets or Sets navigationMobileMenuType
   */
  @JsonAdapter(NavigationMobileMenuTypeEnum.Adapter.class)
  public enum NavigationMobileMenuTypeEnum {
    ICON("ICON"),
    
    TEXT("TEXT");

    private String value;

    NavigationMobileMenuTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static NavigationMobileMenuTypeEnum fromValue(String value) {
      for (NavigationMobileMenuTypeEnum b : NavigationMobileMenuTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<NavigationMobileMenuTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NavigationMobileMenuTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public NavigationMobileMenuTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return NavigationMobileMenuTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      NavigationMobileMenuTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_NAVIGATION_MOBILE_MENU_TYPE = "navigation_mobile_menu_type";
  @SerializedName(SERIALIZED_NAME_NAVIGATION_MOBILE_MENU_TYPE)
  private NavigationMobileMenuTypeEnum navigationMobileMenuType;

  public static final String SERIALIZED_NAME_NAVIGATION_STICKY = "navigation_sticky";
  @SerializedName(SERIALIZED_NAME_NAVIGATION_STICKY)
  private Boolean navigationSticky;

  public static final String SERIALIZED_NAME_PRIMARY_COLOR = "primary_color";
  @SerializedName(SERIALIZED_NAME_PRIMARY_COLOR)
  private String primaryColor;

  public static final String SERIALIZED_NAME_PRIVACY_LINK = "privacy_link";
  @SerializedName(SERIALIZED_NAME_PRIVACY_LINK)
  private String privacyLink;

  public static final String SERIALIZED_NAME_REQUEST_LINK = "request_link";
  @SerializedName(SERIALIZED_NAME_REQUEST_LINK)
  private String requestLink;

  public static final String SERIALIZED_NAME_SHADOW_PAGE_DESCRIPTION = "shadow_page_description";
  @SerializedName(SERIALIZED_NAME_SHADOW_PAGE_DESCRIPTION)
  private String shadowPageDescription;

  public static final String SERIALIZED_NAME_SHADOW_PAGES_ENABLED = "shadow_pages_enabled";
  @SerializedName(SERIALIZED_NAME_SHADOW_PAGES_ENABLED)
  private Boolean shadowPagesEnabled;

  public static final String SERIALIZED_NAME_SHOW_ATTRIBUTION_BADGE = "show_attribution_badge";
  @SerializedName(SERIALIZED_NAME_SHOW_ATTRIBUTION_BADGE)
  private Boolean showAttributionBadge;

  public static final String SERIALIZED_NAME_SHOW_REQUESTED_LISTINGS = "show_requested_listings";
  @SerializedName(SERIALIZED_NAME_SHOW_REQUESTED_LISTINGS)
  private Boolean showRequestedListings;

  public static final String SERIALIZED_NAME_SLUG = "slug";
  @SerializedName(SERIALIZED_NAME_SLUG)
  private String slug;

  public static final String SERIALIZED_NAME_TERMS_LINK = "terms_link";
  @SerializedName(SERIALIZED_NAME_TERMS_LINK)
  private String termsLink;

  public static final String SERIALIZED_NAME_TOTAL_PUBLISHED_LISTINGS = "total_published_listings";
  @SerializedName(SERIALIZED_NAME_TOTAL_PUBLISHED_LISTINGS)
  private Integer totalPublishedListings;

  public static final String SERIALIZED_NAME_UNIFY_APPLICATION_ID = "unify_application_id";
  @SerializedName(SERIALIZED_NAME_UNIFY_APPLICATION_ID)
  private String unifyApplicationId;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_UTM_CAMPAIGN = "utm_campaign";
  @SerializedName(SERIALIZED_NAME_UTM_CAMPAIGN)
  private String utmCampaign;

  public static final String SERIALIZED_NAME_WEBSITE = "website";
  @SerializedName(SERIALIZED_NAME_WEBSITE)
  private String website;

  public static final String SERIALIZED_NAME_ZAPS_MENU_TITLE = "zaps_menu_title";
  @SerializedName(SERIALIZED_NAME_ZAPS_MENU_TITLE)
  private String zapsMenuTitle;

  public static final String SERIALIZED_NAME_ZAPS_PAGE_ENABLED = "zaps_page_enabled";
  @SerializedName(SERIALIZED_NAME_ZAPS_PAGE_ENABLED)
  private Boolean zapsPageEnabled;

  public Ecosystem() {
  }

  public Ecosystem(
     OffsetDateTime createdAt, 
     String id, 
     OffsetDateTime updatedAt
  ) {
    this();
    this.createdAt = createdAt;
    this.id = id;
    this.updatedAt = updatedAt;
  }

  public Ecosystem about(String about) {
    this.about = about;
    return this;
  }

  /**
   * Get about
   * @return about
   */
  @javax.annotation.Nullable
  public String getAbout() {
    return about;
  }

  public void setAbout(String about) {
    this.about = about;
  }


  public Ecosystem alternativesBackgroundColor(String alternativesBackgroundColor) {
    this.alternativesBackgroundColor = alternativesBackgroundColor;
    return this;
  }

  /**
   * Get alternativesBackgroundColor
   * @return alternativesBackgroundColor
   */
  @javax.annotation.Nullable
  public String getAlternativesBackgroundColor() {
    return alternativesBackgroundColor;
  }

  public void setAlternativesBackgroundColor(String alternativesBackgroundColor) {
    this.alternativesBackgroundColor = alternativesBackgroundColor;
  }


  public Ecosystem alternativesColor(String alternativesColor) {
    this.alternativesColor = alternativesColor;
    return this;
  }

  /**
   * Get alternativesColor
   * @return alternativesColor
   */
  @javax.annotation.Nullable
  public String getAlternativesColor() {
    return alternativesColor;
  }

  public void setAlternativesColor(String alternativesColor) {
    this.alternativesColor = alternativesColor;
  }


  public Ecosystem attribution(Boolean attribution) {
    this.attribution = attribution;
    return this;
  }

  /**
   * Get attribution
   * @return attribution
   */
  @javax.annotation.Nullable
  public Boolean getAttribution() {
    return attribution;
  }

  public void setAttribution(Boolean attribution) {
    this.attribution = attribution;
  }


  public Ecosystem bodyBackgroundColor(String bodyBackgroundColor) {
    this.bodyBackgroundColor = bodyBackgroundColor;
    return this;
  }

  /**
   * Get bodyBackgroundColor
   * @return bodyBackgroundColor
   */
  @javax.annotation.Nullable
  public String getBodyBackgroundColor() {
    return bodyBackgroundColor;
  }

  public void setBodyBackgroundColor(String bodyBackgroundColor) {
    this.bodyBackgroundColor = bodyBackgroundColor;
  }


  public Ecosystem bodyButtonBackgroundColor(String bodyButtonBackgroundColor) {
    this.bodyButtonBackgroundColor = bodyButtonBackgroundColor;
    return this;
  }

  /**
   * Get bodyButtonBackgroundColor
   * @return bodyButtonBackgroundColor
   */
  @javax.annotation.Nullable
  public String getBodyButtonBackgroundColor() {
    return bodyButtonBackgroundColor;
  }

  public void setBodyButtonBackgroundColor(String bodyButtonBackgroundColor) {
    this.bodyButtonBackgroundColor = bodyButtonBackgroundColor;
  }


  public Ecosystem bodyButtonColor(String bodyButtonColor) {
    this.bodyButtonColor = bodyButtonColor;
    return this;
  }

  /**
   * Get bodyButtonColor
   * @return bodyButtonColor
   */
  @javax.annotation.Nullable
  public String getBodyButtonColor() {
    return bodyButtonColor;
  }

  public void setBodyButtonColor(String bodyButtonColor) {
    this.bodyButtonColor = bodyButtonColor;
  }


  public Ecosystem bodyColor(String bodyColor) {
    this.bodyColor = bodyColor;
    return this;
  }

  /**
   * Get bodyColor
   * @return bodyColor
   */
  @javax.annotation.Nullable
  public String getBodyColor() {
    return bodyColor;
  }

  public void setBodyColor(String bodyColor) {
    this.bodyColor = bodyColor;
  }


  public Ecosystem bodyLinkColor(String bodyLinkColor) {
    this.bodyLinkColor = bodyLinkColor;
    return this;
  }

  /**
   * Get bodyLinkColor
   * @return bodyLinkColor
   */
  @javax.annotation.Nullable
  public String getBodyLinkColor() {
    return bodyLinkColor;
  }

  public void setBodyLinkColor(String bodyLinkColor) {
    this.bodyLinkColor = bodyLinkColor;
  }


  public Ecosystem cardSettings(CardSettings cardSettings) {
    this.cardSettings = cardSettings;
    return this;
  }

  /**
   * Get cardSettings
   * @return cardSettings
   */
  @javax.annotation.Nullable
  public CardSettings getCardSettings() {
    return cardSettings;
  }

  public void setCardSettings(CardSettings cardSettings) {
    this.cardSettings = cardSettings;
  }


  public Ecosystem categoriesCountBadge(Boolean categoriesCountBadge) {
    this.categoriesCountBadge = categoriesCountBadge;
    return this;
  }

  /**
   * Get categoriesCountBadge
   * @return categoriesCountBadge
   */
  @javax.annotation.Nullable
  public Boolean getCategoriesCountBadge() {
    return categoriesCountBadge;
  }

  public void setCategoriesCountBadge(Boolean categoriesCountBadge) {
    this.categoriesCountBadge = categoriesCountBadge;
  }


  public Ecosystem categoriesShowMaxItems(Integer categoriesShowMaxItems) {
    this.categoriesShowMaxItems = categoriesShowMaxItems;
    return this;
  }

  /**
   * Get categoriesShowMaxItems
   * @return categoriesShowMaxItems
   */
  @javax.annotation.Nullable
  public Integer getCategoriesShowMaxItems() {
    return categoriesShowMaxItems;
  }

  public void setCategoriesShowMaxItems(Integer categoriesShowMaxItems) {
    this.categoriesShowMaxItems = categoriesShowMaxItems;
  }


  public Ecosystem collectionsCountBadge(Boolean collectionsCountBadge) {
    this.collectionsCountBadge = collectionsCountBadge;
    return this;
  }

  /**
   * Get collectionsCountBadge
   * @return collectionsCountBadge
   */
  @javax.annotation.Nullable
  public Boolean getCollectionsCountBadge() {
    return collectionsCountBadge;
  }

  public void setCollectionsCountBadge(Boolean collectionsCountBadge) {
    this.collectionsCountBadge = collectionsCountBadge;
  }


  public Ecosystem collectionsTitle(String collectionsTitle) {
    this.collectionsTitle = collectionsTitle;
    return this;
  }

  /**
   * Get collectionsTitle
   * @return collectionsTitle
   */
  @javax.annotation.Nullable
  public String getCollectionsTitle() {
    return collectionsTitle;
  }

  public void setCollectionsTitle(String collectionsTitle) {
    this.collectionsTitle = collectionsTitle;
  }


  public Ecosystem createLink(String createLink) {
    this.createLink = createLink;
    return this;
  }

  /**
   * Get createLink
   * @return createLink
   */
  @javax.annotation.Nullable
  public String getCreateLink() {
    return createLink;
  }

  public void setCreateLink(String createLink) {
    this.createLink = createLink;
  }


  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }



  public Ecosystem ctaSettings(CTASettings ctaSettings) {
    this.ctaSettings = ctaSettings;
    return this;
  }

  /**
   * Get ctaSettings
   * @return ctaSettings
   */
  @javax.annotation.Nullable
  public CTASettings getCtaSettings() {
    return ctaSettings;
  }

  public void setCtaSettings(CTASettings ctaSettings) {
    this.ctaSettings = ctaSettings;
  }


  public Ecosystem customDomain(String customDomain) {
    this.customDomain = customDomain;
    return this;
  }

  /**
   * Get customDomain
   * @return customDomain
   */
  @javax.annotation.Nullable
  public String getCustomDomain() {
    return customDomain;
  }

  public void setCustomDomain(String customDomain) {
    this.customDomain = customDomain;
  }


  public Ecosystem customSettings(CustomSettings customSettings) {
    this.customSettings = customSettings;
    return this;
  }

  /**
   * Get customSettings
   * @return customSettings
   */
  @javax.annotation.Nullable
  public CustomSettings getCustomSettings() {
    return customSettings;
  }

  public void setCustomSettings(CustomSettings customSettings) {
    this.customSettings = customSettings;
  }


  public Ecosystem detailPagesEnabled(Boolean detailPagesEnabled) {
    this.detailPagesEnabled = detailPagesEnabled;
    return this;
  }

  /**
   * Get detailPagesEnabled
   * @return detailPagesEnabled
   */
  @javax.annotation.Nullable
  public Boolean getDetailPagesEnabled() {
    return detailPagesEnabled;
  }

  public void setDetailPagesEnabled(Boolean detailPagesEnabled) {
    this.detailPagesEnabled = detailPagesEnabled;
  }


  public Ecosystem footerBackgroundColor(String footerBackgroundColor) {
    this.footerBackgroundColor = footerBackgroundColor;
    return this;
  }

  /**
   * Get footerBackgroundColor
   * @return footerBackgroundColor
   */
  @javax.annotation.Nullable
  public String getFooterBackgroundColor() {
    return footerBackgroundColor;
  }

  public void setFooterBackgroundColor(String footerBackgroundColor) {
    this.footerBackgroundColor = footerBackgroundColor;
  }


  public Ecosystem footerColor(String footerColor) {
    this.footerColor = footerColor;
    return this;
  }

  /**
   * Get footerColor
   * @return footerColor
   */
  @javax.annotation.Nullable
  public String getFooterColor() {
    return footerColor;
  }

  public void setFooterColor(String footerColor) {
    this.footerColor = footerColor;
  }


  public Ecosystem googleSiteVerificationId(String googleSiteVerificationId) {
    this.googleSiteVerificationId = googleSiteVerificationId;
    return this;
  }

  /**
   * Get googleSiteVerificationId
   * @return googleSiteVerificationId
   */
  @javax.annotation.Nullable
  public String getGoogleSiteVerificationId() {
    return googleSiteVerificationId;
  }

  public void setGoogleSiteVerificationId(String googleSiteVerificationId) {
    this.googleSiteVerificationId = googleSiteVerificationId;
  }


  public Ecosystem hideInstallButtons(Boolean hideInstallButtons) {
    this.hideInstallButtons = hideInstallButtons;
    return this;
  }

  /**
   * Get hideInstallButtons
   * @return hideInstallButtons
   */
  @javax.annotation.Nullable
  public Boolean getHideInstallButtons() {
    return hideInstallButtons;
  }

  public void setHideInstallButtons(Boolean hideInstallButtons) {
    this.hideInstallButtons = hideInstallButtons;
  }


  public Ecosystem homePageCollectionCategoryCards(Boolean homePageCollectionCategoryCards) {
    this.homePageCollectionCategoryCards = homePageCollectionCategoryCards;
    return this;
  }

  /**
   * Get homePageCollectionCategoryCards
   * @return homePageCollectionCategoryCards
   */
  @javax.annotation.Nullable
  public Boolean getHomePageCollectionCategoryCards() {
    return homePageCollectionCategoryCards;
  }

  public void setHomePageCollectionCategoryCards(Boolean homePageCollectionCategoryCards) {
    this.homePageCollectionCategoryCards = homePageCollectionCategoryCards;
  }


  public Ecosystem homePageShowAllListings(Boolean homePageShowAllListings) {
    this.homePageShowAllListings = homePageShowAllListings;
    return this;
  }

  /**
   * Get homePageShowAllListings
   * @return homePageShowAllListings
   */
  @javax.annotation.Nullable
  public Boolean getHomePageShowAllListings() {
    return homePageShowAllListings;
  }

  public void setHomePageShowAllListings(Boolean homePageShowAllListings) {
    this.homePageShowAllListings = homePageShowAllListings;
  }


  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  public Ecosystem installationRequestFlowEnabled(Boolean installationRequestFlowEnabled) {
    this.installationRequestFlowEnabled = installationRequestFlowEnabled;
    return this;
  }

  /**
   * Get installationRequestFlowEnabled
   * @return installationRequestFlowEnabled
   */
  @javax.annotation.Nullable
  public Boolean getInstallationRequestFlowEnabled() {
    return installationRequestFlowEnabled;
  }

  public void setInstallationRequestFlowEnabled(Boolean installationRequestFlowEnabled) {
    this.installationRequestFlowEnabled = installationRequestFlowEnabled;
  }


  public Ecosystem integrationSettings(IntegrationSettings integrationSettings) {
    this.integrationSettings = integrationSettings;
    return this;
  }

  /**
   * Get integrationSettings
   * @return integrationSettings
   */
  @javax.annotation.Nullable
  public IntegrationSettings getIntegrationSettings() {
    return integrationSettings;
  }

  public void setIntegrationSettings(IntegrationSettings integrationSettings) {
    this.integrationSettings = integrationSettings;
  }


  public Ecosystem isPublished(Boolean isPublished) {
    this.isPublished = isPublished;
    return this;
  }

  /**
   * Get isPublished
   * @return isPublished
   */
  @javax.annotation.Nonnull
  public Boolean getIsPublished() {
    return isPublished;
  }

  public void setIsPublished(Boolean isPublished) {
    this.isPublished = isPublished;
  }


  public Ecosystem leadFormSettings(LeadFormSettings leadFormSettings) {
    this.leadFormSettings = leadFormSettings;
    return this;
  }

  /**
   * Get leadFormSettings
   * @return leadFormSettings
   */
  @javax.annotation.Nullable
  public LeadFormSettings getLeadFormSettings() {
    return leadFormSettings;
  }

  public void setLeadFormSettings(LeadFormSettings leadFormSettings) {
    this.leadFormSettings = leadFormSettings;
  }


  public Ecosystem listingSettings(ListingSettings listingSettings) {
    this.listingSettings = listingSettings;
    return this;
  }

  /**
   * Get listingSettings
   * @return listingSettings
   */
  @javax.annotation.Nullable
  public ListingSettings getListingSettings() {
    return listingSettings;
  }

  public void setListingSettings(ListingSettings listingSettings) {
    this.listingSettings = listingSettings;
  }


  public Ecosystem mastheadSettings(MastheadSettings mastheadSettings) {
    this.mastheadSettings = mastheadSettings;
    return this;
  }

  /**
   * Get mastheadSettings
   * @return mastheadSettings
   */
  @javax.annotation.Nullable
  public MastheadSettings getMastheadSettings() {
    return mastheadSettings;
  }

  public void setMastheadSettings(MastheadSettings mastheadSettings) {
    this.mastheadSettings = mastheadSettings;
  }


  public Ecosystem menuPosition(MenuPositionEnum menuPosition) {
    this.menuPosition = menuPosition;
    return this;
  }

  /**
   * Get menuPosition
   * @return menuPosition
   */
  @javax.annotation.Nullable
  public MenuPositionEnum getMenuPosition() {
    return menuPosition;
  }

  public void setMenuPosition(MenuPositionEnum menuPosition) {
    this.menuPosition = menuPosition;
  }


  public Ecosystem menuStyle(MenuStyleEnum menuStyle) {
    this.menuStyle = menuStyle;
    return this;
  }

  /**
   * Get menuStyle
   * @return menuStyle
   */
  @javax.annotation.Nullable
  public MenuStyleEnum getMenuStyle() {
    return menuStyle;
  }

  public void setMenuStyle(MenuStyleEnum menuStyle) {
    this.menuStyle = menuStyle;
  }


  public Ecosystem metaTagSettings(MetaTagSettings metaTagSettings) {
    this.metaTagSettings = metaTagSettings;
    return this;
  }

  /**
   * Get metaTagSettings
   * @return metaTagSettings
   */
  @javax.annotation.Nullable
  public MetaTagSettings getMetaTagSettings() {
    return metaTagSettings;
  }

  public void setMetaTagSettings(MetaTagSettings metaTagSettings) {
    this.metaTagSettings = metaTagSettings;
  }


  public Ecosystem name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Ecosystem navigationBackgroundColor(String navigationBackgroundColor) {
    this.navigationBackgroundColor = navigationBackgroundColor;
    return this;
  }

  /**
   * Get navigationBackgroundColor
   * @return navigationBackgroundColor
   */
  @javax.annotation.Nullable
  public String getNavigationBackgroundColor() {
    return navigationBackgroundColor;
  }

  public void setNavigationBackgroundColor(String navigationBackgroundColor) {
    this.navigationBackgroundColor = navigationBackgroundColor;
  }


  public Ecosystem navigationColor(String navigationColor) {
    this.navigationColor = navigationColor;
    return this;
  }

  /**
   * Get navigationColor
   * @return navigationColor
   */
  @javax.annotation.Nullable
  public String getNavigationColor() {
    return navigationColor;
  }

  public void setNavigationColor(String navigationColor) {
    this.navigationColor = navigationColor;
  }


  public Ecosystem navigationLogoPostFix(String navigationLogoPostFix) {
    this.navigationLogoPostFix = navigationLogoPostFix;
    return this;
  }

  /**
   * Get navigationLogoPostFix
   * @return navigationLogoPostFix
   */
  @javax.annotation.Nullable
  public String getNavigationLogoPostFix() {
    return navigationLogoPostFix;
  }

  public void setNavigationLogoPostFix(String navigationLogoPostFix) {
    this.navigationLogoPostFix = navigationLogoPostFix;
  }


  public Ecosystem navigationMobileMenuType(NavigationMobileMenuTypeEnum navigationMobileMenuType) {
    this.navigationMobileMenuType = navigationMobileMenuType;
    return this;
  }

  /**
   * Get navigationMobileMenuType
   * @return navigationMobileMenuType
   */
  @javax.annotation.Nullable
  public NavigationMobileMenuTypeEnum getNavigationMobileMenuType() {
    return navigationMobileMenuType;
  }

  public void setNavigationMobileMenuType(NavigationMobileMenuTypeEnum navigationMobileMenuType) {
    this.navigationMobileMenuType = navigationMobileMenuType;
  }


  public Ecosystem navigationSticky(Boolean navigationSticky) {
    this.navigationSticky = navigationSticky;
    return this;
  }

  /**
   * Get navigationSticky
   * @return navigationSticky
   */
  @javax.annotation.Nullable
  public Boolean getNavigationSticky() {
    return navigationSticky;
  }

  public void setNavigationSticky(Boolean navigationSticky) {
    this.navigationSticky = navigationSticky;
  }


  public Ecosystem primaryColor(String primaryColor) {
    this.primaryColor = primaryColor;
    return this;
  }

  /**
   * Get primaryColor
   * @return primaryColor
   */
  @javax.annotation.Nullable
  public String getPrimaryColor() {
    return primaryColor;
  }

  public void setPrimaryColor(String primaryColor) {
    this.primaryColor = primaryColor;
  }


  public Ecosystem privacyLink(String privacyLink) {
    this.privacyLink = privacyLink;
    return this;
  }

  /**
   * Get privacyLink
   * @return privacyLink
   */
  @javax.annotation.Nullable
  public String getPrivacyLink() {
    return privacyLink;
  }

  public void setPrivacyLink(String privacyLink) {
    this.privacyLink = privacyLink;
  }


  public Ecosystem requestLink(String requestLink) {
    this.requestLink = requestLink;
    return this;
  }

  /**
   * Get requestLink
   * @return requestLink
   */
  @javax.annotation.Nullable
  public String getRequestLink() {
    return requestLink;
  }

  public void setRequestLink(String requestLink) {
    this.requestLink = requestLink;
  }


  public Ecosystem shadowPageDescription(String shadowPageDescription) {
    this.shadowPageDescription = shadowPageDescription;
    return this;
  }

  /**
   * Get shadowPageDescription
   * @return shadowPageDescription
   */
  @javax.annotation.Nullable
  public String getShadowPageDescription() {
    return shadowPageDescription;
  }

  public void setShadowPageDescription(String shadowPageDescription) {
    this.shadowPageDescription = shadowPageDescription;
  }


  public Ecosystem shadowPagesEnabled(Boolean shadowPagesEnabled) {
    this.shadowPagesEnabled = shadowPagesEnabled;
    return this;
  }

  /**
   * Get shadowPagesEnabled
   * @return shadowPagesEnabled
   */
  @javax.annotation.Nullable
  public Boolean getShadowPagesEnabled() {
    return shadowPagesEnabled;
  }

  public void setShadowPagesEnabled(Boolean shadowPagesEnabled) {
    this.shadowPagesEnabled = shadowPagesEnabled;
  }


  public Ecosystem showAttributionBadge(Boolean showAttributionBadge) {
    this.showAttributionBadge = showAttributionBadge;
    return this;
  }

  /**
   * Get showAttributionBadge
   * @return showAttributionBadge
   */
  @javax.annotation.Nullable
  public Boolean getShowAttributionBadge() {
    return showAttributionBadge;
  }

  public void setShowAttributionBadge(Boolean showAttributionBadge) {
    this.showAttributionBadge = showAttributionBadge;
  }


  public Ecosystem showRequestedListings(Boolean showRequestedListings) {
    this.showRequestedListings = showRequestedListings;
    return this;
  }

  /**
   * Get showRequestedListings
   * @return showRequestedListings
   */
  @javax.annotation.Nullable
  public Boolean getShowRequestedListings() {
    return showRequestedListings;
  }

  public void setShowRequestedListings(Boolean showRequestedListings) {
    this.showRequestedListings = showRequestedListings;
  }


  public Ecosystem slug(String slug) {
    this.slug = slug;
    return this;
  }

  /**
   * Get slug
   * @return slug
   */
  @javax.annotation.Nonnull
  public String getSlug() {
    return slug;
  }

  public void setSlug(String slug) {
    this.slug = slug;
  }


  public Ecosystem termsLink(String termsLink) {
    this.termsLink = termsLink;
    return this;
  }

  /**
   * Get termsLink
   * @return termsLink
   */
  @javax.annotation.Nullable
  public String getTermsLink() {
    return termsLink;
  }

  public void setTermsLink(String termsLink) {
    this.termsLink = termsLink;
  }


  public Ecosystem totalPublishedListings(Integer totalPublishedListings) {
    this.totalPublishedListings = totalPublishedListings;
    return this;
  }

  /**
   * Get totalPublishedListings
   * @return totalPublishedListings
   */
  @javax.annotation.Nullable
  public Integer getTotalPublishedListings() {
    return totalPublishedListings;
  }

  public void setTotalPublishedListings(Integer totalPublishedListings) {
    this.totalPublishedListings = totalPublishedListings;
  }


  public Ecosystem unifyApplicationId(String unifyApplicationId) {
    this.unifyApplicationId = unifyApplicationId;
    return this;
  }

  /**
   * Get unifyApplicationId
   * @return unifyApplicationId
   */
  @javax.annotation.Nullable
  public String getUnifyApplicationId() {
    return unifyApplicationId;
  }

  public void setUnifyApplicationId(String unifyApplicationId) {
    this.unifyApplicationId = unifyApplicationId;
  }


  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }



  public Ecosystem utmCampaign(String utmCampaign) {
    this.utmCampaign = utmCampaign;
    return this;
  }

  /**
   * Get utmCampaign
   * @return utmCampaign
   */
  @javax.annotation.Nullable
  public String getUtmCampaign() {
    return utmCampaign;
  }

  public void setUtmCampaign(String utmCampaign) {
    this.utmCampaign = utmCampaign;
  }


  public Ecosystem website(String website) {
    this.website = website;
    return this;
  }

  /**
   * Get website
   * @return website
   */
  @javax.annotation.Nullable
  public String getWebsite() {
    return website;
  }

  public void setWebsite(String website) {
    this.website = website;
  }


  public Ecosystem zapsMenuTitle(String zapsMenuTitle) {
    this.zapsMenuTitle = zapsMenuTitle;
    return this;
  }

  /**
   * Get zapsMenuTitle
   * @return zapsMenuTitle
   */
  @javax.annotation.Nullable
  public String getZapsMenuTitle() {
    return zapsMenuTitle;
  }

  public void setZapsMenuTitle(String zapsMenuTitle) {
    this.zapsMenuTitle = zapsMenuTitle;
  }


  public Ecosystem zapsPageEnabled(Boolean zapsPageEnabled) {
    this.zapsPageEnabled = zapsPageEnabled;
    return this;
  }

  /**
   * Get zapsPageEnabled
   * @return zapsPageEnabled
   */
  @javax.annotation.Nullable
  public Boolean getZapsPageEnabled() {
    return zapsPageEnabled;
  }

  public void setZapsPageEnabled(Boolean zapsPageEnabled) {
    this.zapsPageEnabled = zapsPageEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ecosystem ecosystem = (Ecosystem) o;
    return Objects.equals(this.about, ecosystem.about) &&
        Objects.equals(this.alternativesBackgroundColor, ecosystem.alternativesBackgroundColor) &&
        Objects.equals(this.alternativesColor, ecosystem.alternativesColor) &&
        Objects.equals(this.attribution, ecosystem.attribution) &&
        Objects.equals(this.bodyBackgroundColor, ecosystem.bodyBackgroundColor) &&
        Objects.equals(this.bodyButtonBackgroundColor, ecosystem.bodyButtonBackgroundColor) &&
        Objects.equals(this.bodyButtonColor, ecosystem.bodyButtonColor) &&
        Objects.equals(this.bodyColor, ecosystem.bodyColor) &&
        Objects.equals(this.bodyLinkColor, ecosystem.bodyLinkColor) &&
        Objects.equals(this.cardSettings, ecosystem.cardSettings) &&
        Objects.equals(this.categoriesCountBadge, ecosystem.categoriesCountBadge) &&
        Objects.equals(this.categoriesShowMaxItems, ecosystem.categoriesShowMaxItems) &&
        Objects.equals(this.collectionsCountBadge, ecosystem.collectionsCountBadge) &&
        Objects.equals(this.collectionsTitle, ecosystem.collectionsTitle) &&
        Objects.equals(this.createLink, ecosystem.createLink) &&
        Objects.equals(this.createdAt, ecosystem.createdAt) &&
        Objects.equals(this.ctaSettings, ecosystem.ctaSettings) &&
        Objects.equals(this.customDomain, ecosystem.customDomain) &&
        Objects.equals(this.customSettings, ecosystem.customSettings) &&
        Objects.equals(this.detailPagesEnabled, ecosystem.detailPagesEnabled) &&
        Objects.equals(this.footerBackgroundColor, ecosystem.footerBackgroundColor) &&
        Objects.equals(this.footerColor, ecosystem.footerColor) &&
        Objects.equals(this.googleSiteVerificationId, ecosystem.googleSiteVerificationId) &&
        Objects.equals(this.hideInstallButtons, ecosystem.hideInstallButtons) &&
        Objects.equals(this.homePageCollectionCategoryCards, ecosystem.homePageCollectionCategoryCards) &&
        Objects.equals(this.homePageShowAllListings, ecosystem.homePageShowAllListings) &&
        Objects.equals(this.id, ecosystem.id) &&
        Objects.equals(this.installationRequestFlowEnabled, ecosystem.installationRequestFlowEnabled) &&
        Objects.equals(this.integrationSettings, ecosystem.integrationSettings) &&
        Objects.equals(this.isPublished, ecosystem.isPublished) &&
        Objects.equals(this.leadFormSettings, ecosystem.leadFormSettings) &&
        Objects.equals(this.listingSettings, ecosystem.listingSettings) &&
        Objects.equals(this.mastheadSettings, ecosystem.mastheadSettings) &&
        Objects.equals(this.menuPosition, ecosystem.menuPosition) &&
        Objects.equals(this.menuStyle, ecosystem.menuStyle) &&
        Objects.equals(this.metaTagSettings, ecosystem.metaTagSettings) &&
        Objects.equals(this.name, ecosystem.name) &&
        Objects.equals(this.navigationBackgroundColor, ecosystem.navigationBackgroundColor) &&
        Objects.equals(this.navigationColor, ecosystem.navigationColor) &&
        Objects.equals(this.navigationLogoPostFix, ecosystem.navigationLogoPostFix) &&
        Objects.equals(this.navigationMobileMenuType, ecosystem.navigationMobileMenuType) &&
        Objects.equals(this.navigationSticky, ecosystem.navigationSticky) &&
        Objects.equals(this.primaryColor, ecosystem.primaryColor) &&
        Objects.equals(this.privacyLink, ecosystem.privacyLink) &&
        Objects.equals(this.requestLink, ecosystem.requestLink) &&
        Objects.equals(this.shadowPageDescription, ecosystem.shadowPageDescription) &&
        Objects.equals(this.shadowPagesEnabled, ecosystem.shadowPagesEnabled) &&
        Objects.equals(this.showAttributionBadge, ecosystem.showAttributionBadge) &&
        Objects.equals(this.showRequestedListings, ecosystem.showRequestedListings) &&
        Objects.equals(this.slug, ecosystem.slug) &&
        Objects.equals(this.termsLink, ecosystem.termsLink) &&
        Objects.equals(this.totalPublishedListings, ecosystem.totalPublishedListings) &&
        Objects.equals(this.unifyApplicationId, ecosystem.unifyApplicationId) &&
        Objects.equals(this.updatedAt, ecosystem.updatedAt) &&
        Objects.equals(this.utmCampaign, ecosystem.utmCampaign) &&
        Objects.equals(this.website, ecosystem.website) &&
        Objects.equals(this.zapsMenuTitle, ecosystem.zapsMenuTitle) &&
        Objects.equals(this.zapsPageEnabled, ecosystem.zapsPageEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(about, alternativesBackgroundColor, alternativesColor, attribution, bodyBackgroundColor, bodyButtonBackgroundColor, bodyButtonColor, bodyColor, bodyLinkColor, cardSettings, categoriesCountBadge, categoriesShowMaxItems, collectionsCountBadge, collectionsTitle, createLink, createdAt, ctaSettings, customDomain, customSettings, detailPagesEnabled, footerBackgroundColor, footerColor, googleSiteVerificationId, hideInstallButtons, homePageCollectionCategoryCards, homePageShowAllListings, id, installationRequestFlowEnabled, integrationSettings, isPublished, leadFormSettings, listingSettings, mastheadSettings, menuPosition, menuStyle, metaTagSettings, name, navigationBackgroundColor, navigationColor, navigationLogoPostFix, navigationMobileMenuType, navigationSticky, primaryColor, privacyLink, requestLink, shadowPageDescription, shadowPagesEnabled, showAttributionBadge, showRequestedListings, slug, termsLink, totalPublishedListings, unifyApplicationId, updatedAt, utmCampaign, website, zapsMenuTitle, zapsPageEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ecosystem {\n");
    sb.append("    about: ").append(toIndentedString(about)).append("\n");
    sb.append("    alternativesBackgroundColor: ").append(toIndentedString(alternativesBackgroundColor)).append("\n");
    sb.append("    alternativesColor: ").append(toIndentedString(alternativesColor)).append("\n");
    sb.append("    attribution: ").append(toIndentedString(attribution)).append("\n");
    sb.append("    bodyBackgroundColor: ").append(toIndentedString(bodyBackgroundColor)).append("\n");
    sb.append("    bodyButtonBackgroundColor: ").append(toIndentedString(bodyButtonBackgroundColor)).append("\n");
    sb.append("    bodyButtonColor: ").append(toIndentedString(bodyButtonColor)).append("\n");
    sb.append("    bodyColor: ").append(toIndentedString(bodyColor)).append("\n");
    sb.append("    bodyLinkColor: ").append(toIndentedString(bodyLinkColor)).append("\n");
    sb.append("    cardSettings: ").append(toIndentedString(cardSettings)).append("\n");
    sb.append("    categoriesCountBadge: ").append(toIndentedString(categoriesCountBadge)).append("\n");
    sb.append("    categoriesShowMaxItems: ").append(toIndentedString(categoriesShowMaxItems)).append("\n");
    sb.append("    collectionsCountBadge: ").append(toIndentedString(collectionsCountBadge)).append("\n");
    sb.append("    collectionsTitle: ").append(toIndentedString(collectionsTitle)).append("\n");
    sb.append("    createLink: ").append(toIndentedString(createLink)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    ctaSettings: ").append(toIndentedString(ctaSettings)).append("\n");
    sb.append("    customDomain: ").append(toIndentedString(customDomain)).append("\n");
    sb.append("    customSettings: ").append(toIndentedString(customSettings)).append("\n");
    sb.append("    detailPagesEnabled: ").append(toIndentedString(detailPagesEnabled)).append("\n");
    sb.append("    footerBackgroundColor: ").append(toIndentedString(footerBackgroundColor)).append("\n");
    sb.append("    footerColor: ").append(toIndentedString(footerColor)).append("\n");
    sb.append("    googleSiteVerificationId: ").append(toIndentedString(googleSiteVerificationId)).append("\n");
    sb.append("    hideInstallButtons: ").append(toIndentedString(hideInstallButtons)).append("\n");
    sb.append("    homePageCollectionCategoryCards: ").append(toIndentedString(homePageCollectionCategoryCards)).append("\n");
    sb.append("    homePageShowAllListings: ").append(toIndentedString(homePageShowAllListings)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    installationRequestFlowEnabled: ").append(toIndentedString(installationRequestFlowEnabled)).append("\n");
    sb.append("    integrationSettings: ").append(toIndentedString(integrationSettings)).append("\n");
    sb.append("    isPublished: ").append(toIndentedString(isPublished)).append("\n");
    sb.append("    leadFormSettings: ").append(toIndentedString(leadFormSettings)).append("\n");
    sb.append("    listingSettings: ").append(toIndentedString(listingSettings)).append("\n");
    sb.append("    mastheadSettings: ").append(toIndentedString(mastheadSettings)).append("\n");
    sb.append("    menuPosition: ").append(toIndentedString(menuPosition)).append("\n");
    sb.append("    menuStyle: ").append(toIndentedString(menuStyle)).append("\n");
    sb.append("    metaTagSettings: ").append(toIndentedString(metaTagSettings)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    navigationBackgroundColor: ").append(toIndentedString(navigationBackgroundColor)).append("\n");
    sb.append("    navigationColor: ").append(toIndentedString(navigationColor)).append("\n");
    sb.append("    navigationLogoPostFix: ").append(toIndentedString(navigationLogoPostFix)).append("\n");
    sb.append("    navigationMobileMenuType: ").append(toIndentedString(navigationMobileMenuType)).append("\n");
    sb.append("    navigationSticky: ").append(toIndentedString(navigationSticky)).append("\n");
    sb.append("    primaryColor: ").append(toIndentedString(primaryColor)).append("\n");
    sb.append("    privacyLink: ").append(toIndentedString(privacyLink)).append("\n");
    sb.append("    requestLink: ").append(toIndentedString(requestLink)).append("\n");
    sb.append("    shadowPageDescription: ").append(toIndentedString(shadowPageDescription)).append("\n");
    sb.append("    shadowPagesEnabled: ").append(toIndentedString(shadowPagesEnabled)).append("\n");
    sb.append("    showAttributionBadge: ").append(toIndentedString(showAttributionBadge)).append("\n");
    sb.append("    showRequestedListings: ").append(toIndentedString(showRequestedListings)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    termsLink: ").append(toIndentedString(termsLink)).append("\n");
    sb.append("    totalPublishedListings: ").append(toIndentedString(totalPublishedListings)).append("\n");
    sb.append("    unifyApplicationId: ").append(toIndentedString(unifyApplicationId)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    utmCampaign: ").append(toIndentedString(utmCampaign)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    zapsMenuTitle: ").append(toIndentedString(zapsMenuTitle)).append("\n");
    sb.append("    zapsPageEnabled: ").append(toIndentedString(zapsPageEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("about");
    openapiFields.add("alternatives_background_color");
    openapiFields.add("alternatives_color");
    openapiFields.add("attribution");
    openapiFields.add("body_background_color");
    openapiFields.add("body_button_background_color");
    openapiFields.add("body_button_color");
    openapiFields.add("body_color");
    openapiFields.add("body_link_color");
    openapiFields.add("card_settings");
    openapiFields.add("categories_count_badge");
    openapiFields.add("categories_show_max_items");
    openapiFields.add("collections_count_badge");
    openapiFields.add("collections_title");
    openapiFields.add("create_link");
    openapiFields.add("created_at");
    openapiFields.add("cta_settings");
    openapiFields.add("custom_domain");
    openapiFields.add("custom_settings");
    openapiFields.add("detail_pages_enabled");
    openapiFields.add("footer_background_color");
    openapiFields.add("footer_color");
    openapiFields.add("google_site_verification_id");
    openapiFields.add("hide_install_buttons");
    openapiFields.add("home_page_collection_category_cards");
    openapiFields.add("home_page_show_all_listings");
    openapiFields.add("id");
    openapiFields.add("installation_request_flow_enabled");
    openapiFields.add("integration_settings");
    openapiFields.add("is_published");
    openapiFields.add("lead_form_settings");
    openapiFields.add("listing_settings");
    openapiFields.add("masthead_settings");
    openapiFields.add("menu_position");
    openapiFields.add("menu_style");
    openapiFields.add("meta_tag_settings");
    openapiFields.add("name");
    openapiFields.add("navigation_background_color");
    openapiFields.add("navigation_color");
    openapiFields.add("navigation_logo_post_fix");
    openapiFields.add("navigation_mobile_menu_type");
    openapiFields.add("navigation_sticky");
    openapiFields.add("primary_color");
    openapiFields.add("privacy_link");
    openapiFields.add("request_link");
    openapiFields.add("shadow_page_description");
    openapiFields.add("shadow_pages_enabled");
    openapiFields.add("show_attribution_badge");
    openapiFields.add("show_requested_listings");
    openapiFields.add("slug");
    openapiFields.add("terms_link");
    openapiFields.add("total_published_listings");
    openapiFields.add("unify_application_id");
    openapiFields.add("updated_at");
    openapiFields.add("utm_campaign");
    openapiFields.add("website");
    openapiFields.add("zaps_menu_title");
    openapiFields.add("zaps_page_enabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("is_published");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("slug");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Ecosystem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Ecosystem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Ecosystem is not found in the empty JSON string", Ecosystem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Ecosystem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Ecosystem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Ecosystem.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("about") != null && !jsonObj.get("about").isJsonNull()) && !jsonObj.get("about").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `about` to be a primitive type in the JSON string but got `%s`", jsonObj.get("about").toString()));
      }
      if ((jsonObj.get("alternatives_background_color") != null && !jsonObj.get("alternatives_background_color").isJsonNull()) && !jsonObj.get("alternatives_background_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alternatives_background_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alternatives_background_color").toString()));
      }
      if ((jsonObj.get("alternatives_color") != null && !jsonObj.get("alternatives_color").isJsonNull()) && !jsonObj.get("alternatives_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alternatives_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alternatives_color").toString()));
      }
      if ((jsonObj.get("body_background_color") != null && !jsonObj.get("body_background_color").isJsonNull()) && !jsonObj.get("body_background_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `body_background_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("body_background_color").toString()));
      }
      if ((jsonObj.get("body_button_background_color") != null && !jsonObj.get("body_button_background_color").isJsonNull()) && !jsonObj.get("body_button_background_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `body_button_background_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("body_button_background_color").toString()));
      }
      if ((jsonObj.get("body_button_color") != null && !jsonObj.get("body_button_color").isJsonNull()) && !jsonObj.get("body_button_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `body_button_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("body_button_color").toString()));
      }
      if ((jsonObj.get("body_color") != null && !jsonObj.get("body_color").isJsonNull()) && !jsonObj.get("body_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `body_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("body_color").toString()));
      }
      if ((jsonObj.get("body_link_color") != null && !jsonObj.get("body_link_color").isJsonNull()) && !jsonObj.get("body_link_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `body_link_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("body_link_color").toString()));
      }
      // validate the optional field `card_settings`
      if (jsonObj.get("card_settings") != null && !jsonObj.get("card_settings").isJsonNull()) {
        CardSettings.validateJsonElement(jsonObj.get("card_settings"));
      }
      if ((jsonObj.get("collections_title") != null && !jsonObj.get("collections_title").isJsonNull()) && !jsonObj.get("collections_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `collections_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("collections_title").toString()));
      }
      if ((jsonObj.get("create_link") != null && !jsonObj.get("create_link").isJsonNull()) && !jsonObj.get("create_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `create_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("create_link").toString()));
      }
      // validate the optional field `cta_settings`
      if (jsonObj.get("cta_settings") != null && !jsonObj.get("cta_settings").isJsonNull()) {
        CTASettings.validateJsonElement(jsonObj.get("cta_settings"));
      }
      if ((jsonObj.get("custom_domain") != null && !jsonObj.get("custom_domain").isJsonNull()) && !jsonObj.get("custom_domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_domain").toString()));
      }
      // validate the optional field `custom_settings`
      if (jsonObj.get("custom_settings") != null && !jsonObj.get("custom_settings").isJsonNull()) {
        CustomSettings.validateJsonElement(jsonObj.get("custom_settings"));
      }
      if ((jsonObj.get("footer_background_color") != null && !jsonObj.get("footer_background_color").isJsonNull()) && !jsonObj.get("footer_background_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footer_background_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footer_background_color").toString()));
      }
      if ((jsonObj.get("footer_color") != null && !jsonObj.get("footer_color").isJsonNull()) && !jsonObj.get("footer_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footer_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footer_color").toString()));
      }
      if ((jsonObj.get("google_site_verification_id") != null && !jsonObj.get("google_site_verification_id").isJsonNull()) && !jsonObj.get("google_site_verification_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `google_site_verification_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("google_site_verification_id").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `integration_settings`
      if (jsonObj.get("integration_settings") != null && !jsonObj.get("integration_settings").isJsonNull()) {
        IntegrationSettings.validateJsonElement(jsonObj.get("integration_settings"));
      }
      // validate the optional field `lead_form_settings`
      if (jsonObj.get("lead_form_settings") != null && !jsonObj.get("lead_form_settings").isJsonNull()) {
        LeadFormSettings.validateJsonElement(jsonObj.get("lead_form_settings"));
      }
      // validate the optional field `listing_settings`
      if (jsonObj.get("listing_settings") != null && !jsonObj.get("listing_settings").isJsonNull()) {
        ListingSettings.validateJsonElement(jsonObj.get("listing_settings"));
      }
      // validate the optional field `masthead_settings`
      if (jsonObj.get("masthead_settings") != null && !jsonObj.get("masthead_settings").isJsonNull()) {
        MastheadSettings.validateJsonElement(jsonObj.get("masthead_settings"));
      }
      if ((jsonObj.get("menu_position") != null && !jsonObj.get("menu_position").isJsonNull()) && !jsonObj.get("menu_position").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `menu_position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("menu_position").toString()));
      }
      // validate the optional field `menu_position`
      if (jsonObj.get("menu_position") != null && !jsonObj.get("menu_position").isJsonNull()) {
        MenuPositionEnum.validateJsonElement(jsonObj.get("menu_position"));
      }
      if ((jsonObj.get("menu_style") != null && !jsonObj.get("menu_style").isJsonNull()) && !jsonObj.get("menu_style").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `menu_style` to be a primitive type in the JSON string but got `%s`", jsonObj.get("menu_style").toString()));
      }
      // validate the optional field `menu_style`
      if (jsonObj.get("menu_style") != null && !jsonObj.get("menu_style").isJsonNull()) {
        MenuStyleEnum.validateJsonElement(jsonObj.get("menu_style"));
      }
      // validate the optional field `meta_tag_settings`
      if (jsonObj.get("meta_tag_settings") != null && !jsonObj.get("meta_tag_settings").isJsonNull()) {
        MetaTagSettings.validateJsonElement(jsonObj.get("meta_tag_settings"));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("navigation_background_color") != null && !jsonObj.get("navigation_background_color").isJsonNull()) && !jsonObj.get("navigation_background_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `navigation_background_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("navigation_background_color").toString()));
      }
      if ((jsonObj.get("navigation_color") != null && !jsonObj.get("navigation_color").isJsonNull()) && !jsonObj.get("navigation_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `navigation_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("navigation_color").toString()));
      }
      if ((jsonObj.get("navigation_logo_post_fix") != null && !jsonObj.get("navigation_logo_post_fix").isJsonNull()) && !jsonObj.get("navigation_logo_post_fix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `navigation_logo_post_fix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("navigation_logo_post_fix").toString()));
      }
      if ((jsonObj.get("navigation_mobile_menu_type") != null && !jsonObj.get("navigation_mobile_menu_type").isJsonNull()) && !jsonObj.get("navigation_mobile_menu_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `navigation_mobile_menu_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("navigation_mobile_menu_type").toString()));
      }
      // validate the optional field `navigation_mobile_menu_type`
      if (jsonObj.get("navigation_mobile_menu_type") != null && !jsonObj.get("navigation_mobile_menu_type").isJsonNull()) {
        NavigationMobileMenuTypeEnum.validateJsonElement(jsonObj.get("navigation_mobile_menu_type"));
      }
      if ((jsonObj.get("primary_color") != null && !jsonObj.get("primary_color").isJsonNull()) && !jsonObj.get("primary_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primary_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primary_color").toString()));
      }
      if ((jsonObj.get("privacy_link") != null && !jsonObj.get("privacy_link").isJsonNull()) && !jsonObj.get("privacy_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privacy_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privacy_link").toString()));
      }
      if ((jsonObj.get("request_link") != null && !jsonObj.get("request_link").isJsonNull()) && !jsonObj.get("request_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `request_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("request_link").toString()));
      }
      if ((jsonObj.get("shadow_page_description") != null && !jsonObj.get("shadow_page_description").isJsonNull()) && !jsonObj.get("shadow_page_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shadow_page_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shadow_page_description").toString()));
      }
      if (!jsonObj.get("slug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slug").toString()));
      }
      if ((jsonObj.get("terms_link") != null && !jsonObj.get("terms_link").isJsonNull()) && !jsonObj.get("terms_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `terms_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("terms_link").toString()));
      }
      if ((jsonObj.get("unify_application_id") != null && !jsonObj.get("unify_application_id").isJsonNull()) && !jsonObj.get("unify_application_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unify_application_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unify_application_id").toString()));
      }
      if ((jsonObj.get("utm_campaign") != null && !jsonObj.get("utm_campaign").isJsonNull()) && !jsonObj.get("utm_campaign").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `utm_campaign` to be a primitive type in the JSON string but got `%s`", jsonObj.get("utm_campaign").toString()));
      }
      if ((jsonObj.get("website") != null && !jsonObj.get("website").isJsonNull()) && !jsonObj.get("website").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `website` to be a primitive type in the JSON string but got `%s`", jsonObj.get("website").toString()));
      }
      if ((jsonObj.get("zaps_menu_title") != null && !jsonObj.get("zaps_menu_title").isJsonNull()) && !jsonObj.get("zaps_menu_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zaps_menu_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zaps_menu_title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Ecosystem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Ecosystem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Ecosystem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Ecosystem.class));

       return (TypeAdapter<T>) new TypeAdapter<Ecosystem>() {
           @Override
           public void write(JsonWriter out, Ecosystem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Ecosystem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Ecosystem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Ecosystem
   * @throws IOException if the JSON string is invalid with respect to Ecosystem
   */
  public static Ecosystem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Ecosystem.class);
  }

  /**
   * Convert an instance of Ecosystem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

