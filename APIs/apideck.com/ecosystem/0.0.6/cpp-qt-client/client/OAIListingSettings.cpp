/**
 * Ecosystem API
 * Ecosystem API
 *
 * The version of the OpenAPI document: 0.0.6
 * Contact: hello@apideck.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListingSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListingSettings::OAIListingSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListingSettings::OAIListingSettings() {
    this->initializeModel();
}

OAIListingSettings::~OAIListingSettings() {}

void OAIListingSettings::initializeModel() {

    m_description_text_template_isSet = false;
    m_description_text_template_isValid = false;

    m_description_title_isSet = false;
    m_description_title_isValid = false;

    m_features_text_template_isSet = false;
    m_features_text_template_isValid = false;

    m_features_title_isSet = false;
    m_features_title_isValid = false;

    m_install_button_label_isSet = false;
    m_install_button_label_isValid = false;

    m_name_postfix_isSet = false;
    m_name_postfix_isValid = false;

    m_naming_isSet = false;
    m_naming_isValid = false;

    m_native_integration_link_isSet = false;
    m_native_integration_link_isValid = false;

    m_pricing_disabled_isSet = false;
    m_pricing_disabled_isValid = false;

    m_pricing_text_template_isSet = false;
    m_pricing_text_template_isValid = false;

    m_pricing_title_isSet = false;
    m_pricing_title_isValid = false;

    m_sidebar_position_isSet = false;
    m_sidebar_position_isValid = false;
}

void OAIListingSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListingSettings::fromJsonObject(QJsonObject json) {

    m_description_text_template_isValid = ::OpenAPI::fromJsonValue(m_description_text_template, json[QString("description_text_template")]);
    m_description_text_template_isSet = !json[QString("description_text_template")].isNull() && m_description_text_template_isValid;

    m_description_title_isValid = ::OpenAPI::fromJsonValue(m_description_title, json[QString("description_title")]);
    m_description_title_isSet = !json[QString("description_title")].isNull() && m_description_title_isValid;

    m_features_text_template_isValid = ::OpenAPI::fromJsonValue(m_features_text_template, json[QString("features_text_template")]);
    m_features_text_template_isSet = !json[QString("features_text_template")].isNull() && m_features_text_template_isValid;

    m_features_title_isValid = ::OpenAPI::fromJsonValue(m_features_title, json[QString("features_title")]);
    m_features_title_isSet = !json[QString("features_title")].isNull() && m_features_title_isValid;

    m_install_button_label_isValid = ::OpenAPI::fromJsonValue(m_install_button_label, json[QString("install_button_label")]);
    m_install_button_label_isSet = !json[QString("install_button_label")].isNull() && m_install_button_label_isValid;

    m_name_postfix_isValid = ::OpenAPI::fromJsonValue(m_name_postfix, json[QString("name_postfix")]);
    m_name_postfix_isSet = !json[QString("name_postfix")].isNull() && m_name_postfix_isValid;

    m_naming_isValid = ::OpenAPI::fromJsonValue(m_naming, json[QString("naming")]);
    m_naming_isSet = !json[QString("naming")].isNull() && m_naming_isValid;

    m_native_integration_link_isValid = ::OpenAPI::fromJsonValue(m_native_integration_link, json[QString("native_integration_link")]);
    m_native_integration_link_isSet = !json[QString("native_integration_link")].isNull() && m_native_integration_link_isValid;

    m_pricing_disabled_isValid = ::OpenAPI::fromJsonValue(m_pricing_disabled, json[QString("pricing_disabled")]);
    m_pricing_disabled_isSet = !json[QString("pricing_disabled")].isNull() && m_pricing_disabled_isValid;

    m_pricing_text_template_isValid = ::OpenAPI::fromJsonValue(m_pricing_text_template, json[QString("pricing_text_template")]);
    m_pricing_text_template_isSet = !json[QString("pricing_text_template")].isNull() && m_pricing_text_template_isValid;

    m_pricing_title_isValid = ::OpenAPI::fromJsonValue(m_pricing_title, json[QString("pricing_title")]);
    m_pricing_title_isSet = !json[QString("pricing_title")].isNull() && m_pricing_title_isValid;

    m_sidebar_position_isValid = ::OpenAPI::fromJsonValue(m_sidebar_position, json[QString("sidebar_position")]);
    m_sidebar_position_isSet = !json[QString("sidebar_position")].isNull() && m_sidebar_position_isValid;
}

QString OAIListingSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListingSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_description_text_template_isSet) {
        obj.insert(QString("description_text_template"), ::OpenAPI::toJsonValue(m_description_text_template));
    }
    if (m_description_title_isSet) {
        obj.insert(QString("description_title"), ::OpenAPI::toJsonValue(m_description_title));
    }
    if (m_features_text_template_isSet) {
        obj.insert(QString("features_text_template"), ::OpenAPI::toJsonValue(m_features_text_template));
    }
    if (m_features_title_isSet) {
        obj.insert(QString("features_title"), ::OpenAPI::toJsonValue(m_features_title));
    }
    if (m_install_button_label_isSet) {
        obj.insert(QString("install_button_label"), ::OpenAPI::toJsonValue(m_install_button_label));
    }
    if (m_name_postfix_isSet) {
        obj.insert(QString("name_postfix"), ::OpenAPI::toJsonValue(m_name_postfix));
    }
    if (m_naming_isSet) {
        obj.insert(QString("naming"), ::OpenAPI::toJsonValue(m_naming));
    }
    if (m_native_integration_link_isSet) {
        obj.insert(QString("native_integration_link"), ::OpenAPI::toJsonValue(m_native_integration_link));
    }
    if (m_pricing_disabled_isSet) {
        obj.insert(QString("pricing_disabled"), ::OpenAPI::toJsonValue(m_pricing_disabled));
    }
    if (m_pricing_text_template_isSet) {
        obj.insert(QString("pricing_text_template"), ::OpenAPI::toJsonValue(m_pricing_text_template));
    }
    if (m_pricing_title_isSet) {
        obj.insert(QString("pricing_title"), ::OpenAPI::toJsonValue(m_pricing_title));
    }
    if (m_sidebar_position_isSet) {
        obj.insert(QString("sidebar_position"), ::OpenAPI::toJsonValue(m_sidebar_position));
    }
    return obj;
}

QString OAIListingSettings::getDescriptionTextTemplate() const {
    return m_description_text_template;
}
void OAIListingSettings::setDescriptionTextTemplate(const QString &description_text_template) {
    m_description_text_template = description_text_template;
    m_description_text_template_isSet = true;
}

bool OAIListingSettings::is_description_text_template_Set() const{
    return m_description_text_template_isSet;
}

bool OAIListingSettings::is_description_text_template_Valid() const{
    return m_description_text_template_isValid;
}

QString OAIListingSettings::getDescriptionTitle() const {
    return m_description_title;
}
void OAIListingSettings::setDescriptionTitle(const QString &description_title) {
    m_description_title = description_title;
    m_description_title_isSet = true;
}

bool OAIListingSettings::is_description_title_Set() const{
    return m_description_title_isSet;
}

bool OAIListingSettings::is_description_title_Valid() const{
    return m_description_title_isValid;
}

QString OAIListingSettings::getFeaturesTextTemplate() const {
    return m_features_text_template;
}
void OAIListingSettings::setFeaturesTextTemplate(const QString &features_text_template) {
    m_features_text_template = features_text_template;
    m_features_text_template_isSet = true;
}

bool OAIListingSettings::is_features_text_template_Set() const{
    return m_features_text_template_isSet;
}

bool OAIListingSettings::is_features_text_template_Valid() const{
    return m_features_text_template_isValid;
}

QString OAIListingSettings::getFeaturesTitle() const {
    return m_features_title;
}
void OAIListingSettings::setFeaturesTitle(const QString &features_title) {
    m_features_title = features_title;
    m_features_title_isSet = true;
}

bool OAIListingSettings::is_features_title_Set() const{
    return m_features_title_isSet;
}

bool OAIListingSettings::is_features_title_Valid() const{
    return m_features_title_isValid;
}

QString OAIListingSettings::getInstallButtonLabel() const {
    return m_install_button_label;
}
void OAIListingSettings::setInstallButtonLabel(const QString &install_button_label) {
    m_install_button_label = install_button_label;
    m_install_button_label_isSet = true;
}

bool OAIListingSettings::is_install_button_label_Set() const{
    return m_install_button_label_isSet;
}

bool OAIListingSettings::is_install_button_label_Valid() const{
    return m_install_button_label_isValid;
}

QString OAIListingSettings::getNamePostfix() const {
    return m_name_postfix;
}
void OAIListingSettings::setNamePostfix(const QString &name_postfix) {
    m_name_postfix = name_postfix;
    m_name_postfix_isSet = true;
}

bool OAIListingSettings::is_name_postfix_Set() const{
    return m_name_postfix_isSet;
}

bool OAIListingSettings::is_name_postfix_Valid() const{
    return m_name_postfix_isValid;
}

QString OAIListingSettings::getNaming() const {
    return m_naming;
}
void OAIListingSettings::setNaming(const QString &naming) {
    m_naming = naming;
    m_naming_isSet = true;
}

bool OAIListingSettings::is_naming_Set() const{
    return m_naming_isSet;
}

bool OAIListingSettings::is_naming_Valid() const{
    return m_naming_isValid;
}

QString OAIListingSettings::getNativeIntegrationLink() const {
    return m_native_integration_link;
}
void OAIListingSettings::setNativeIntegrationLink(const QString &native_integration_link) {
    m_native_integration_link = native_integration_link;
    m_native_integration_link_isSet = true;
}

bool OAIListingSettings::is_native_integration_link_Set() const{
    return m_native_integration_link_isSet;
}

bool OAIListingSettings::is_native_integration_link_Valid() const{
    return m_native_integration_link_isValid;
}

bool OAIListingSettings::isPricingDisabled() const {
    return m_pricing_disabled;
}
void OAIListingSettings::setPricingDisabled(const bool &pricing_disabled) {
    m_pricing_disabled = pricing_disabled;
    m_pricing_disabled_isSet = true;
}

bool OAIListingSettings::is_pricing_disabled_Set() const{
    return m_pricing_disabled_isSet;
}

bool OAIListingSettings::is_pricing_disabled_Valid() const{
    return m_pricing_disabled_isValid;
}

QString OAIListingSettings::getPricingTextTemplate() const {
    return m_pricing_text_template;
}
void OAIListingSettings::setPricingTextTemplate(const QString &pricing_text_template) {
    m_pricing_text_template = pricing_text_template;
    m_pricing_text_template_isSet = true;
}

bool OAIListingSettings::is_pricing_text_template_Set() const{
    return m_pricing_text_template_isSet;
}

bool OAIListingSettings::is_pricing_text_template_Valid() const{
    return m_pricing_text_template_isValid;
}

QString OAIListingSettings::getPricingTitle() const {
    return m_pricing_title;
}
void OAIListingSettings::setPricingTitle(const QString &pricing_title) {
    m_pricing_title = pricing_title;
    m_pricing_title_isSet = true;
}

bool OAIListingSettings::is_pricing_title_Set() const{
    return m_pricing_title_isSet;
}

bool OAIListingSettings::is_pricing_title_Valid() const{
    return m_pricing_title_isValid;
}

QString OAIListingSettings::getSidebarPosition() const {
    return m_sidebar_position;
}
void OAIListingSettings::setSidebarPosition(const QString &sidebar_position) {
    m_sidebar_position = sidebar_position;
    m_sidebar_position_isSet = true;
}

bool OAIListingSettings::is_sidebar_position_Set() const{
    return m_sidebar_position_isSet;
}

bool OAIListingSettings::is_sidebar_position_Valid() const{
    return m_sidebar_position_isValid;
}

bool OAIListingSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_text_template_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_features_text_template_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_features_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_install_button_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_postfix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_naming_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_native_integration_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pricing_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pricing_text_template_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pricing_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sidebar_position_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListingSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
