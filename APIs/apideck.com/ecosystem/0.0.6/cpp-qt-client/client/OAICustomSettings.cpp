/**
 * Ecosystem API
 * Ecosystem API
 *
 * The version of the OpenAPI document: 0.0.6
 * Contact: hello@apideck.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomSettings::OAICustomSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomSettings::OAICustomSettings() {
    this->initializeModel();
}

OAICustomSettings::~OAICustomSettings() {}

void OAICustomSettings::initializeModel() {

    m_css_isSet = false;
    m_css_isValid = false;

    m_css_link_isSet = false;
    m_css_link_isValid = false;

    m_domain_isSet = false;
    m_domain_isValid = false;

    m_html_footer_isSet = false;
    m_html_footer_isValid = false;

    m_html_nav_isSet = false;
    m_html_nav_isValid = false;

    m_java_script_link_isSet = false;
    m_java_script_link_isValid = false;
}

void OAICustomSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomSettings::fromJsonObject(QJsonObject json) {

    m_css_isValid = ::OpenAPI::fromJsonValue(m_css, json[QString("css")]);
    m_css_isSet = !json[QString("css")].isNull() && m_css_isValid;

    m_css_link_isValid = ::OpenAPI::fromJsonValue(m_css_link, json[QString("css_link")]);
    m_css_link_isSet = !json[QString("css_link")].isNull() && m_css_link_isValid;

    m_domain_isValid = ::OpenAPI::fromJsonValue(m_domain, json[QString("domain")]);
    m_domain_isSet = !json[QString("domain")].isNull() && m_domain_isValid;

    m_html_footer_isValid = ::OpenAPI::fromJsonValue(m_html_footer, json[QString("html_footer")]);
    m_html_footer_isSet = !json[QString("html_footer")].isNull() && m_html_footer_isValid;

    m_html_nav_isValid = ::OpenAPI::fromJsonValue(m_html_nav, json[QString("html_nav")]);
    m_html_nav_isSet = !json[QString("html_nav")].isNull() && m_html_nav_isValid;

    m_java_script_link_isValid = ::OpenAPI::fromJsonValue(m_java_script_link, json[QString("java_script_link")]);
    m_java_script_link_isSet = !json[QString("java_script_link")].isNull() && m_java_script_link_isValid;
}

QString OAICustomSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_css_isSet) {
        obj.insert(QString("css"), ::OpenAPI::toJsonValue(m_css));
    }
    if (m_css_link_isSet) {
        obj.insert(QString("css_link"), ::OpenAPI::toJsonValue(m_css_link));
    }
    if (m_domain_isSet) {
        obj.insert(QString("domain"), ::OpenAPI::toJsonValue(m_domain));
    }
    if (m_html_footer_isSet) {
        obj.insert(QString("html_footer"), ::OpenAPI::toJsonValue(m_html_footer));
    }
    if (m_html_nav_isSet) {
        obj.insert(QString("html_nav"), ::OpenAPI::toJsonValue(m_html_nav));
    }
    if (m_java_script_link_isSet) {
        obj.insert(QString("java_script_link"), ::OpenAPI::toJsonValue(m_java_script_link));
    }
    return obj;
}

QString OAICustomSettings::getCss() const {
    return m_css;
}
void OAICustomSettings::setCss(const QString &css) {
    m_css = css;
    m_css_isSet = true;
}

bool OAICustomSettings::is_css_Set() const{
    return m_css_isSet;
}

bool OAICustomSettings::is_css_Valid() const{
    return m_css_isValid;
}

QString OAICustomSettings::getCssLink() const {
    return m_css_link;
}
void OAICustomSettings::setCssLink(const QString &css_link) {
    m_css_link = css_link;
    m_css_link_isSet = true;
}

bool OAICustomSettings::is_css_link_Set() const{
    return m_css_link_isSet;
}

bool OAICustomSettings::is_css_link_Valid() const{
    return m_css_link_isValid;
}

QString OAICustomSettings::getDomain() const {
    return m_domain;
}
void OAICustomSettings::setDomain(const QString &domain) {
    m_domain = domain;
    m_domain_isSet = true;
}

bool OAICustomSettings::is_domain_Set() const{
    return m_domain_isSet;
}

bool OAICustomSettings::is_domain_Valid() const{
    return m_domain_isValid;
}

QString OAICustomSettings::getHtmlFooter() const {
    return m_html_footer;
}
void OAICustomSettings::setHtmlFooter(const QString &html_footer) {
    m_html_footer = html_footer;
    m_html_footer_isSet = true;
}

bool OAICustomSettings::is_html_footer_Set() const{
    return m_html_footer_isSet;
}

bool OAICustomSettings::is_html_footer_Valid() const{
    return m_html_footer_isValid;
}

QString OAICustomSettings::getHtmlNav() const {
    return m_html_nav;
}
void OAICustomSettings::setHtmlNav(const QString &html_nav) {
    m_html_nav = html_nav;
    m_html_nav_isSet = true;
}

bool OAICustomSettings::is_html_nav_Set() const{
    return m_html_nav_isSet;
}

bool OAICustomSettings::is_html_nav_Valid() const{
    return m_html_nav_isValid;
}

QString OAICustomSettings::getJavaScriptLink() const {
    return m_java_script_link;
}
void OAICustomSettings::setJavaScriptLink(const QString &java_script_link) {
    m_java_script_link = java_script_link;
    m_java_script_link_isSet = true;
}

bool OAICustomSettings::is_java_script_link_Set() const{
    return m_java_script_link_isSet;
}

bool OAICustomSettings::is_java_script_link_Valid() const{
    return m_java_script_link_isValid;
}

bool OAICustomSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_css_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_css_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_domain_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_html_footer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_html_nav_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_java_script_link_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
