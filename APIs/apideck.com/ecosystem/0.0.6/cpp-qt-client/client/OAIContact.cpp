/**
 * Ecosystem API
 * Ecosystem API
 *
 * The version of the OpenAPI document: 0.0.6
 * Contact: hello@apideck.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContact.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContact::OAIContact(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContact::OAIContact() {
    this->initializeModel();
}

OAIContact::~OAIContact() {}

void OAIContact::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_linked_in_isSet = false;
    m_linked_in_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_role_isSet = false;
    m_role_isValid = false;

    m_twitter_isSet = false;
    m_twitter_isValid = false;
}

void OAIContact::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContact::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_linked_in_isValid = ::OpenAPI::fromJsonValue(m_linked_in, json[QString("linked_in")]);
    m_linked_in_isSet = !json[QString("linked_in")].isNull() && m_linked_in_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_role_isValid = ::OpenAPI::fromJsonValue(m_role, json[QString("role")]);
    m_role_isSet = !json[QString("role")].isNull() && m_role_isValid;

    m_twitter_isValid = ::OpenAPI::fromJsonValue(m_twitter, json[QString("twitter")]);
    m_twitter_isSet = !json[QString("twitter")].isNull() && m_twitter_isValid;
}

QString OAIContact::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContact::asJsonObject() const {
    QJsonObject obj;
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_linked_in_isSet) {
        obj.insert(QString("linked_in"), ::OpenAPI::toJsonValue(m_linked_in));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_role_isSet) {
        obj.insert(QString("role"), ::OpenAPI::toJsonValue(m_role));
    }
    if (m_twitter_isSet) {
        obj.insert(QString("twitter"), ::OpenAPI::toJsonValue(m_twitter));
    }
    return obj;
}

QString OAIContact::getEmail() const {
    return m_email;
}
void OAIContact::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIContact::is_email_Set() const{
    return m_email_isSet;
}

bool OAIContact::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIContact::getFirstName() const {
    return m_first_name;
}
void OAIContact::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIContact::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIContact::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIContact::getId() const {
    return m_id;
}
void OAIContact::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIContact::is_id_Set() const{
    return m_id_isSet;
}

bool OAIContact::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIContact::getLastName() const {
    return m_last_name;
}
void OAIContact::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIContact::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIContact::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIContact::getLinkedIn() const {
    return m_linked_in;
}
void OAIContact::setLinkedIn(const QString &linked_in) {
    m_linked_in = linked_in;
    m_linked_in_isSet = true;
}

bool OAIContact::is_linked_in_Set() const{
    return m_linked_in_isSet;
}

bool OAIContact::is_linked_in_Valid() const{
    return m_linked_in_isValid;
}

QString OAIContact::getName() const {
    return m_name;
}
void OAIContact::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIContact::is_name_Set() const{
    return m_name_isSet;
}

bool OAIContact::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIContact::getRole() const {
    return m_role;
}
void OAIContact::setRole(const QString &role) {
    m_role = role;
    m_role_isSet = true;
}

bool OAIContact::is_role_Set() const{
    return m_role_isSet;
}

bool OAIContact::is_role_Valid() const{
    return m_role_isValid;
}

QString OAIContact::getTwitter() const {
    return m_twitter;
}
void OAIContact::setTwitter(const QString &twitter) {
    m_twitter = twitter;
    m_twitter_isSet = true;
}

bool OAIContact::is_twitter_Set() const{
    return m_twitter_isSet;
}

bool OAIContact::is_twitter_Valid() const{
    return m_twitter_isValid;
}

bool OAIContact::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_linked_in_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_twitter_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContact::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && true;
}

} // namespace OpenAPI
