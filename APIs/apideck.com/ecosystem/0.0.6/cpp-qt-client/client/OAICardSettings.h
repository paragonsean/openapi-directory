/**
 * Ecosystem API
 * Ecosystem API
 *
 * The version of the OpenAPI document: 0.0.6
 * Contact: hello@apideck.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICardSettings.h
 *
 * 
 */

#ifndef OAICardSettings_H
#define OAICardSettings_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICardSettings : public OAIObject {
public:
    OAICardSettings();
    OAICardSettings(QString json);
    ~OAICardSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBackgroundColor() const;
    void setBackgroundColor(const QString &background_color);
    bool is_background_color_Set() const;
    bool is_background_color_Valid() const;

    QString getBorderColor() const;
    void setBorderColor(const QString &border_color);
    bool is_border_color_Set() const;
    bool is_border_color_Valid() const;

    QString getBorderRadius() const;
    void setBorderRadius(const QString &border_radius);
    bool is_border_radius_Set() const;
    bool is_border_radius_Valid() const;

    QString getBorderSize() const;
    void setBorderSize(const QString &border_size);
    bool is_border_size_Set() const;
    bool is_border_size_Valid() const;

    QString getColor() const;
    void setColor(const QString &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    qint32 getColumns() const;
    void setColumns(const qint32 &columns);
    bool is_columns_Set() const;
    bool is_columns_Valid() const;

    qint32 getDescriptionLines() const;
    void setDescriptionLines(const qint32 &description_lines);
    bool is_description_lines_Set() const;
    bool is_description_lines_Valid() const;

    QString getIconBorderRadius() const;
    void setIconBorderRadius(const QString &icon_border_radius);
    bool is_icon_border_radius_Set() const;
    bool is_icon_border_radius_Valid() const;

    bool isIconShadowEnabled() const;
    void setIconShadowEnabled(const bool &icon_shadow_enabled);
    bool is_icon_shadow_enabled_Set() const;
    bool is_icon_shadow_enabled_Valid() const;

    qint32 getIconSize() const;
    void setIconSize(const qint32 &icon_size);
    bool is_icon_size_Set() const;
    bool is_icon_size_Valid() const;

    bool isShadowEnabled() const;
    void setShadowEnabled(const bool &shadow_enabled);
    bool is_shadow_enabled_Set() const;
    bool is_shadow_enabled_Valid() const;

    bool isShowAction() const;
    void setShowAction(const bool &show_action);
    bool is_show_action_Set() const;
    bool is_show_action_Valid() const;

    bool isShowBadges() const;
    void setShowBadges(const bool &show_badges);
    bool is_show_badges_Set() const;
    bool is_show_badges_Valid() const;

    bool isShowCategory() const;
    void setShowCategory(const bool &show_category);
    bool is_show_category_Set() const;
    bool is_show_category_Valid() const;

    bool isShowDescription() const;
    void setShowDescription(const bool &show_description);
    bool is_show_description_Set() const;
    bool is_show_description_Valid() const;

    QString getStyle() const;
    void setStyle(const QString &style);
    bool is_style_Set() const;
    bool is_style_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_background_color;
    bool m_background_color_isSet;
    bool m_background_color_isValid;

    QString m_border_color;
    bool m_border_color_isSet;
    bool m_border_color_isValid;

    QString m_border_radius;
    bool m_border_radius_isSet;
    bool m_border_radius_isValid;

    QString m_border_size;
    bool m_border_size_isSet;
    bool m_border_size_isValid;

    QString m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    qint32 m_columns;
    bool m_columns_isSet;
    bool m_columns_isValid;

    qint32 m_description_lines;
    bool m_description_lines_isSet;
    bool m_description_lines_isValid;

    QString m_icon_border_radius;
    bool m_icon_border_radius_isSet;
    bool m_icon_border_radius_isValid;

    bool m_icon_shadow_enabled;
    bool m_icon_shadow_enabled_isSet;
    bool m_icon_shadow_enabled_isValid;

    qint32 m_icon_size;
    bool m_icon_size_isSet;
    bool m_icon_size_isValid;

    bool m_shadow_enabled;
    bool m_shadow_enabled_isSet;
    bool m_shadow_enabled_isValid;

    bool m_show_action;
    bool m_show_action_isSet;
    bool m_show_action_isValid;

    bool m_show_badges;
    bool m_show_badges_isSet;
    bool m_show_badges_isValid;

    bool m_show_category;
    bool m_show_category_isSet;
    bool m_show_category_isValid;

    bool m_show_description;
    bool m_show_description_isSet;
    bool m_show_description_isValid;

    QString m_style;
    bool m_style_isSet;
    bool m_style_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICardSettings)

#endif // OAICardSettings_H
