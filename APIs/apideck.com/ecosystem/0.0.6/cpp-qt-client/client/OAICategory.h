/**
 * Ecosystem API
 * Ecosystem API
 *
 * The version of the OpenAPI document: 0.0.6
 * Contact: hello@apideck.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICategory.h
 *
 * 
 */

#ifndef OAICategory_H
#define OAICategory_H

#include <QJsonObject>

#include "OAILogo.h"
#include "OAITranslation.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILogo;
class OAITranslation;

class OAICategory : public OAIObject {
public:
    OAICategory();
    OAICategory(QString json);
    ~OAICategory() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getListingDescriptionTextTemplate() const;
    void setListingDescriptionTextTemplate(const QString &listing_description_text_template);
    bool is_listing_description_text_template_Set() const;
    bool is_listing_description_text_template_Valid() const;

    QString getListingFeaturesTextTemplate() const;
    void setListingFeaturesTextTemplate(const QString &listing_features_text_template);
    bool is_listing_features_text_template_Set() const;
    bool is_listing_features_text_template_Valid() const;

    QString getListingPricingTextTemplate() const;
    void setListingPricingTextTemplate(const QString &listing_pricing_text_template);
    bool is_listing_pricing_text_template_Set() const;
    bool is_listing_pricing_text_template_Valid() const;

    OAILogo getLogo() const;
    void setLogo(const OAILogo &logo);
    bool is_logo_Set() const;
    bool is_logo_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSlug() const;
    void setSlug(const QString &slug);
    bool is_slug_Set() const;
    bool is_slug_Valid() const;

    QList<OAITranslation> getTranslations() const;
    void setTranslations(const QList<OAITranslation> &translations);
    bool is_translations_Set() const;
    bool is_translations_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_listing_description_text_template;
    bool m_listing_description_text_template_isSet;
    bool m_listing_description_text_template_isValid;

    QString m_listing_features_text_template;
    bool m_listing_features_text_template_isSet;
    bool m_listing_features_text_template_isValid;

    QString m_listing_pricing_text_template;
    bool m_listing_pricing_text_template_isSet;
    bool m_listing_pricing_text_template_isValid;

    OAILogo m_logo;
    bool m_logo_isSet;
    bool m_logo_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_slug;
    bool m_slug_isSet;
    bool m_slug_isValid;

    QList<OAITranslation> m_translations;
    bool m_translations_isSet;
    bool m_translations_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICategory)

#endif // OAICategory_H
