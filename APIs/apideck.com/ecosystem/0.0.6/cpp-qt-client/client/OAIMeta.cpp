/**
 * Ecosystem API
 * Ecosystem API
 *
 * The version of the OpenAPI document: 0.0.6
 * Contact: hello@apideck.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMeta.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMeta::OAIMeta(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMeta::OAIMeta() {
    this->initializeModel();
}

OAIMeta::~OAIMeta() {}

void OAIMeta::initializeModel() {

    m_cursors_isSet = false;
    m_cursors_isValid = false;

    m_items_on_page_isSet = false;
    m_items_on_page_isValid = false;
}

void OAIMeta::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMeta::fromJsonObject(QJsonObject json) {

    m_cursors_isValid = ::OpenAPI::fromJsonValue(m_cursors, json[QString("cursors")]);
    m_cursors_isSet = !json[QString("cursors")].isNull() && m_cursors_isValid;

    m_items_on_page_isValid = ::OpenAPI::fromJsonValue(m_items_on_page, json[QString("items_on_page")]);
    m_items_on_page_isSet = !json[QString("items_on_page")].isNull() && m_items_on_page_isValid;
}

QString OAIMeta::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMeta::asJsonObject() const {
    QJsonObject obj;
    if (m_cursors.isSet()) {
        obj.insert(QString("cursors"), ::OpenAPI::toJsonValue(m_cursors));
    }
    if (m_items_on_page_isSet) {
        obj.insert(QString("items_on_page"), ::OpenAPI::toJsonValue(m_items_on_page));
    }
    return obj;
}

OAIMeta_cursors OAIMeta::getCursors() const {
    return m_cursors;
}
void OAIMeta::setCursors(const OAIMeta_cursors &cursors) {
    m_cursors = cursors;
    m_cursors_isSet = true;
}

bool OAIMeta::is_cursors_Set() const{
    return m_cursors_isSet;
}

bool OAIMeta::is_cursors_Valid() const{
    return m_cursors_isValid;
}

qint32 OAIMeta::getItemsOnPage() const {
    return m_items_on_page;
}
void OAIMeta::setItemsOnPage(const qint32 &items_on_page) {
    m_items_on_page = items_on_page;
    m_items_on_page_isSet = true;
}

bool OAIMeta::is_items_on_page_Set() const{
    return m_items_on_page_isSet;
}

bool OAIMeta::is_items_on_page_Valid() const{
    return m_items_on_page_isValid;
}

bool OAIMeta::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cursors.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_items_on_page_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMeta::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
