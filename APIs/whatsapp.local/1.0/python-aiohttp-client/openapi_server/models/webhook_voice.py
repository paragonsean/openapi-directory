# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WebhookVoice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, caption: str=None, file: str=None, id: str=None, link: str=None, mime_type: str=None, sha256: str=None):
        """WebhookVoice - a model defined in OpenAPI

        :param caption: The caption of this WebhookVoice.
        :param file: The file of this WebhookVoice.
        :param id: The id of this WebhookVoice.
        :param link: The link of this WebhookVoice.
        :param mime_type: The mime_type of this WebhookVoice.
        :param sha256: The sha256 of this WebhookVoice.
        """
        self.openapi_types = {
            'caption': str,
            'file': str,
            'id': str,
            'link': str,
            'mime_type': str,
            'sha256': str
        }

        self.attribute_map = {
            'caption': 'caption',
            'file': 'file',
            'id': 'id',
            'link': 'link',
            'mime_type': 'mime_type',
            'sha256': 'sha256'
        }

        self._caption = caption
        self._file = file
        self._id = id
        self._link = link
        self._mime_type = mime_type
        self._sha256 = sha256

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebhookVoice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Webhook-Voice of this WebhookVoice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def caption(self):
        """Gets the caption of this WebhookVoice.

        Optional. Only present if specified.

        :return: The caption of this WebhookVoice.
        :rtype: str
        """
        return self._caption

    @caption.setter
    def caption(self, caption):
        """Sets the caption of this WebhookVoice.

        Optional. Only present if specified.

        :param caption: The caption of this WebhookVoice.
        :type caption: str
        """

        self._caption = caption

    @property
    def file(self):
        """Gets the file of this WebhookVoice.

        Absolute filename and location on media volume. This parameter is deprecated.

        :return: The file of this WebhookVoice.
        :rtype: str
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this WebhookVoice.

        Absolute filename and location on media volume. This parameter is deprecated.

        :param file: The file of this WebhookVoice.
        :type file: str
        """

        self._file = file

    @property
    def id(self):
        """Gets the id of this WebhookVoice.

        ID of the media. Can be used to delete the media if stored locally on the client.

        :return: The id of this WebhookVoice.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this WebhookVoice.

        ID of the media. Can be used to delete the media if stored locally on the client.

        :param id: The id of this WebhookVoice.
        :type id: str
        """

        self._id = id

    @property
    def link(self):
        """Gets the link of this WebhookVoice.


        :return: The link of this WebhookVoice.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this WebhookVoice.


        :param link: The link of this WebhookVoice.
        :type link: str
        """

        self._link = link

    @property
    def mime_type(self):
        """Gets the mime_type of this WebhookVoice.

        Mime type of media

        :return: The mime_type of this WebhookVoice.
        :rtype: str
        """
        return self._mime_type

    @mime_type.setter
    def mime_type(self, mime_type):
        """Sets the mime_type of this WebhookVoice.

        Mime type of media

        :param mime_type: The mime_type of this WebhookVoice.
        :type mime_type: str
        """

        self._mime_type = mime_type

    @property
    def sha256(self):
        """Gets the sha256 of this WebhookVoice.

        Checksum

        :return: The sha256 of this WebhookVoice.
        :rtype: str
        """
        return self._sha256

    @sha256.setter
    def sha256(self, sha256):
        """Sets the sha256 of this WebhookVoice.

        Checksum

        :param sha256: The sha256 of this WebhookVoice.
        :type sha256: str
        """

        self._sha256 = sha256
