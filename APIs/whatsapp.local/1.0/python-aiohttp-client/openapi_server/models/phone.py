# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Phone(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, phone: str=None, type: str=None, wa_id: str=None):
        """Phone - a model defined in OpenAPI

        :param phone: The phone of this Phone.
        :param type: The type of this Phone.
        :param wa_id: The wa_id of this Phone.
        """
        self.openapi_types = {
            'phone': str,
            'type': str,
            'wa_id': str
        }

        self.attribute_map = {
            'phone': 'phone',
            'type': 'type',
            'wa_id': 'wa_id'
        }

        self._phone = phone
        self._type = type
        self._wa_id = wa_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Phone':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Phone of this Phone.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def phone(self):
        """Gets the phone of this Phone.


        :return: The phone of this Phone.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this Phone.


        :param phone: The phone of this Phone.
        :type phone: str
        """

        self._phone = phone

    @property
    def type(self):
        """Gets the type of this Phone.

        Standard Values: CELL, MAIN, IPHONE, HOME, WORK

        :return: The type of this Phone.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Phone.

        Standard Values: CELL, MAIN, IPHONE, HOME, WORK

        :param type: The type of this Phone.
        :type type: str
        """

        self._type = type

    @property
    def wa_id(self):
        """Gets the wa_id of this Phone.

        WhatsApp ID

        :return: The wa_id of this Phone.
        :rtype: str
        """
        return self._wa_id

    @wa_id.setter
    def wa_id(self, wa_id):
        """Sets the wa_id of this Phone.

        WhatsApp ID

        :param wa_id: The wa_id of this Phone.
        :type wa_id: str
        """

        self._wa_id = wa_id
