# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GroupAdminRequestBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, wa_ids: List[str]=None):
        """GroupAdminRequestBody - a model defined in OpenAPI

        :param wa_ids: The wa_ids of this GroupAdminRequestBody.
        """
        self.openapi_types = {
            'wa_ids': List[str]
        }

        self.attribute_map = {
            'wa_ids': 'wa_ids'
        }

        self._wa_ids = wa_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupAdminRequestBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Group-Admin-Request-Body of this GroupAdminRequestBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def wa_ids(self):
        """Gets the wa_ids of this GroupAdminRequestBody.

        The WhatsApp IDs of the people to be added or removed as group admins

        :return: The wa_ids of this GroupAdminRequestBody.
        :rtype: List[str]
        """
        return self._wa_ids

    @wa_ids.setter
    def wa_ids(self, wa_ids):
        """Sets the wa_ids of this GroupAdminRequestBody.

        The WhatsApp IDs of the people to be added or removed as group admins

        :param wa_ids: The wa_ids of this GroupAdminRequestBody.
        :type wa_ids: List[str]
        """
        if wa_ids is None:
            raise ValueError("Invalid value for `wa_ids`, must not be `None`")

        self._wa_ids = wa_ids
