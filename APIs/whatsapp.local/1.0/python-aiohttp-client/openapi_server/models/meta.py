# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Meta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_status: str=None, version: str=None):
        """Meta - a model defined in OpenAPI

        :param api_status: The api_status of this Meta.
        :param version: The version of this Meta.
        """
        self.openapi_types = {
            'api_status': str,
            'version': str
        }

        self.attribute_map = {
            'api_status': 'api_status',
            'version': 'version'
        }

        self._api_status = api_status
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Meta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Meta of this Meta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_status(self):
        """Gets the api_status of this Meta.


        :return: The api_status of this Meta.
        :rtype: str
        """
        return self._api_status

    @api_status.setter
    def api_status(self, api_status):
        """Sets the api_status of this Meta.


        :param api_status: The api_status of this Meta.
        :type api_status: str
        """
        allowed_values = ["deprecated", "experimental", "stable"]  # noqa: E501
        if api_status not in allowed_values:
            raise ValueError(
                "Invalid value for `api_status` ({0}), must be one of {1}"
                .format(api_status, allowed_values)
            )

        self._api_status = api_status

    @property
    def version(self):
        """Gets the version of this Meta.


        :return: The version of this Meta.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this Meta.


        :param version: The version of this Meta.
        :type version: str
        """

        self._version = version
