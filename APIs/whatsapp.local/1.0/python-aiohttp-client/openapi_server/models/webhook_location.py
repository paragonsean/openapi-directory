# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WebhookLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, latitude: float=None, longitude: float=None, name: str=None, url: str=None):
        """WebhookLocation - a model defined in OpenAPI

        :param address: The address of this WebhookLocation.
        :param latitude: The latitude of this WebhookLocation.
        :param longitude: The longitude of this WebhookLocation.
        :param name: The name of this WebhookLocation.
        :param url: The url of this WebhookLocation.
        """
        self.openapi_types = {
            'address': str,
            'latitude': float,
            'longitude': float,
            'name': str,
            'url': str
        }

        self.attribute_map = {
            'address': 'address',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'name': 'name',
            'url': 'url'
        }

        self._address = address
        self._latitude = latitude
        self._longitude = longitude
        self._name = name
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebhookLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Webhook-Location of this WebhookLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this WebhookLocation.

        Address of the location

        :return: The address of this WebhookLocation.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this WebhookLocation.

        Address of the location

        :param address: The address of this WebhookLocation.
        :type address: str
        """

        self._address = address

    @property
    def latitude(self):
        """Gets the latitude of this WebhookLocation.

        Latitude of location being sent

        :return: The latitude of this WebhookLocation.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this WebhookLocation.

        Latitude of location being sent

        :param latitude: The latitude of this WebhookLocation.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this WebhookLocation.

        Longitude of location being sent

        :return: The longitude of this WebhookLocation.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this WebhookLocation.

        Longitude of location being sent

        :param longitude: The longitude of this WebhookLocation.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def name(self):
        """Gets the name of this WebhookLocation.

        Name of the location

        :return: The name of this WebhookLocation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this WebhookLocation.

        Name of the location

        :param name: The name of this WebhookLocation.
        :type name: str
        """

        self._name = name

    @property
    def url(self):
        """Gets the url of this WebhookLocation.

        URL for the website where the user downloaded the location information

        :return: The url of this WebhookLocation.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this WebhookLocation.

        URL for the website where the user downloaded the location information

        :param url: The url of this WebhookLocation.
        :type url: str
        """

        self._url = url
