# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server.models.date_time_object import DateTimeObject
from openapi_server import util


class LocalizableParam(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency: Currency=None, date_time: DateTimeObject=None, default: str=None):
        """LocalizableParam - a model defined in OpenAPI

        :param currency: The currency of this LocalizableParam.
        :param date_time: The date_time of this LocalizableParam.
        :param default: The default of this LocalizableParam.
        """
        self.openapi_types = {
            'currency': Currency,
            'date_time': DateTimeObject,
            'default': str
        }

        self.attribute_map = {
            'currency': 'currency',
            'date_time': 'date_time',
            'default': 'default'
        }

        self._currency = currency
        self._date_time = date_time
        self._default = default

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LocalizableParam':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LocalizableParam of this LocalizableParam.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency(self):
        """Gets the currency of this LocalizableParam.


        :return: The currency of this LocalizableParam.
        :rtype: Currency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this LocalizableParam.


        :param currency: The currency of this LocalizableParam.
        :type currency: Currency
        """

        self._currency = currency

    @property
    def date_time(self):
        """Gets the date_time of this LocalizableParam.


        :return: The date_time of this LocalizableParam.
        :rtype: DateTimeObject
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this LocalizableParam.


        :param date_time: The date_time of this LocalizableParam.
        :type date_time: DateTimeObject
        """

        self._date_time = date_time

    @property
    def default(self):
        """Gets the default of this LocalizableParam.

        Default text if localization fails

        :return: The default of this LocalizableParam.
        :rtype: str
        """
        return self._default

    @default.setter
    def default(self, default):
        """Sets the default of this LocalizableParam.

        Default text if localization fails

        :param default: The default of this LocalizableParam.
        :type default: str
        """
        if default is None:
            raise ValueError("Invalid value for `default`, must not be `None`")

        self._default = default
