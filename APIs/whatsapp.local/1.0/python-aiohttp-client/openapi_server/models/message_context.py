# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MessageContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _from: str=None, group_id: str=None, id: str=None, mentions: List[str]=None):
        """MessageContext - a model defined in OpenAPI

        :param _from: The _from of this MessageContext.
        :param group_id: The group_id of this MessageContext.
        :param id: The id of this MessageContext.
        :param mentions: The mentions of this MessageContext.
        """
        self.openapi_types = {
            '_from': str,
            'group_id': str,
            'id': str,
            'mentions': List[str]
        }

        self.attribute_map = {
            '_from': 'from',
            'group_id': 'group_id',
            'id': 'id',
            'mentions': 'mentions'
        }

        self.__from = _from
        self._group_id = group_id
        self._id = id
        self._mentions = mentions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MessageContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Message-Context of this MessageContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _from(self):
        """Gets the _from of this MessageContext.

        Sender Whatsapp id of context-message

        :return: The _from of this MessageContext.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this MessageContext.

        Sender Whatsapp id of context-message

        :param _from: The _from of this MessageContext.
        :type _from: str
        """

        self.__from = _from

    @property
    def group_id(self):
        """Gets the group_id of this MessageContext.

        GroupId of context message

        :return: The group_id of this MessageContext.
        :rtype: str
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this MessageContext.

        GroupId of context message

        :param group_id: The group_id of this MessageContext.
        :type group_id: str
        """

        self._group_id = group_id

    @property
    def id(self):
        """Gets the id of this MessageContext.

        message id

        :return: The id of this MessageContext.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MessageContext.

        message id

        :param id: The id of this MessageContext.
        :type id: str
        """

        self._id = id

    @property
    def mentions(self):
        """Gets the mentions of this MessageContext.

        Whats app ids

        :return: The mentions of this MessageContext.
        :rtype: List[str]
        """
        return self._mentions

    @mentions.setter
    def mentions(self, mentions):
        """Sets the mentions of this MessageContext.

        Whats app ids

        :param mentions: The mentions of this MessageContext.
        :type mentions: List[str]
        """

        self._mentions = mentions
