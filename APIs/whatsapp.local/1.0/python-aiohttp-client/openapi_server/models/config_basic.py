# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.basic import Basic
from openapi_server import util


class ConfigBasic(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, basic: Basic=None):
        """ConfigBasic - a model defined in OpenAPI

        :param basic: The basic of this ConfigBasic.
        """
        self.openapi_types = {
            'basic': Basic
        }

        self.attribute_map = {
            'basic': 'basic'
        }

        self._basic = basic

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigBasic':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Config-Basic of this ConfigBasic.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def basic(self):
        """Gets the basic of this ConfigBasic.


        :return: The basic of this ConfigBasic.
        :rtype: Basic
        """
        return self._basic

    @basic.setter
    def basic(self, basic):
        """Sets the basic of this ConfigBasic.


        :param basic: The basic of this ConfigBasic.
        :type basic: Basic
        """

        self._basic = basic
