# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateGroupRequestBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subject: str=None):
        """CreateGroupRequestBody - a model defined in OpenAPI

        :param subject: The subject of this CreateGroupRequestBody.
        """
        self.openapi_types = {
            'subject': str
        }

        self.attribute_map = {
            'subject': 'subject'
        }

        self._subject = subject

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateGroupRequestBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Create-Group-Request-Body of this CreateGroupRequestBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subject(self):
        """Gets the subject of this CreateGroupRequestBody.


        :return: The subject of this CreateGroupRequestBody.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this CreateGroupRequestBody.


        :param subject: The subject of this CreateGroupRequestBody.
        :type subject: str
        """
        if subject is None:
            raise ValueError("Invalid value for `subject`, must not be `None`")

        self._subject = subject
