# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error import Error
from openapi_server.models.group_invite import GroupInvite
from openapi_server.models.meta import Meta
from openapi_server import util


class GroupInviteResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, errors: List[Error]=None, meta: Meta=None, groups: List[GroupInvite]=None):
        """GroupInviteResponse - a model defined in OpenAPI

        :param errors: The errors of this GroupInviteResponse.
        :param meta: The meta of this GroupInviteResponse.
        :param groups: The groups of this GroupInviteResponse.
        """
        self.openapi_types = {
            'errors': List[Error],
            'meta': Meta,
            'groups': List[GroupInvite]
        }

        self.attribute_map = {
            'errors': 'errors',
            'meta': 'meta',
            'groups': 'groups'
        }

        self._errors = errors
        self._meta = meta
        self._groups = groups

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupInviteResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Group-Invite-Response of this GroupInviteResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors(self):
        """Gets the errors of this GroupInviteResponse.

        Only returned with a failed request. Contains an array of error objects that are present when there is an error. 

        :return: The errors of this GroupInviteResponse.
        :rtype: List[Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this GroupInviteResponse.

        Only returned with a failed request. Contains an array of error objects that are present when there is an error. 

        :param errors: The errors of this GroupInviteResponse.
        :type errors: List[Error]
        """

        self._errors = errors

    @property
    def meta(self):
        """Gets the meta of this GroupInviteResponse.


        :return: The meta of this GroupInviteResponse.
        :rtype: Meta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this GroupInviteResponse.


        :param meta: The meta of this GroupInviteResponse.
        :type meta: Meta
        """

        self._meta = meta

    @property
    def groups(self):
        """Gets the groups of this GroupInviteResponse.


        :return: The groups of this GroupInviteResponse.
        :rtype: List[GroupInvite]
        """
        return self._groups

    @groups.setter
    def groups(self, groups):
        """Sets the groups of this GroupInviteResponse.


        :param groups: The groups of this GroupInviteResponse.
        :type groups: List[GroupInvite]
        """

        self._groups = groups
