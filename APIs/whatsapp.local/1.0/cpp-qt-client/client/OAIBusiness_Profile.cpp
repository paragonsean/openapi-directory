/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBusiness_Profile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBusiness_Profile::OAIBusiness_Profile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBusiness_Profile::OAIBusiness_Profile() {
    this->initializeModel();
}

OAIBusiness_Profile::~OAIBusiness_Profile() {}

void OAIBusiness_Profile::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_vertical_isSet = false;
    m_vertical_isValid = false;

    m_websites_isSet = false;
    m_websites_isValid = false;
}

void OAIBusiness_Profile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBusiness_Profile::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_vertical_isValid = ::OpenAPI::fromJsonValue(m_vertical, json[QString("vertical")]);
    m_vertical_isSet = !json[QString("vertical")].isNull() && m_vertical_isValid;

    m_websites_isValid = ::OpenAPI::fromJsonValue(m_websites, json[QString("websites")]);
    m_websites_isSet = !json[QString("websites")].isNull() && m_websites_isValid;
}

QString OAIBusiness_Profile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBusiness_Profile::asJsonObject() const {
    QJsonObject obj;
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_vertical_isSet) {
        obj.insert(QString("vertical"), ::OpenAPI::toJsonValue(m_vertical));
    }
    if (m_websites.size() > 0) {
        obj.insert(QString("websites"), ::OpenAPI::toJsonValue(m_websites));
    }
    return obj;
}

QString OAIBusiness_Profile::getAddress() const {
    return m_address;
}
void OAIBusiness_Profile::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIBusiness_Profile::is_address_Set() const{
    return m_address_isSet;
}

bool OAIBusiness_Profile::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIBusiness_Profile::getDescription() const {
    return m_description;
}
void OAIBusiness_Profile::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIBusiness_Profile::is_description_Set() const{
    return m_description_isSet;
}

bool OAIBusiness_Profile::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIBusiness_Profile::getEmail() const {
    return m_email;
}
void OAIBusiness_Profile::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIBusiness_Profile::is_email_Set() const{
    return m_email_isSet;
}

bool OAIBusiness_Profile::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIBusiness_Profile::getVertical() const {
    return m_vertical;
}
void OAIBusiness_Profile::setVertical(const QString &vertical) {
    m_vertical = vertical;
    m_vertical_isSet = true;
}

bool OAIBusiness_Profile::is_vertical_Set() const{
    return m_vertical_isSet;
}

bool OAIBusiness_Profile::is_vertical_Valid() const{
    return m_vertical_isValid;
}

QList<QString> OAIBusiness_Profile::getWebsites() const {
    return m_websites;
}
void OAIBusiness_Profile::setWebsites(const QList<QString> &websites) {
    m_websites = websites;
    m_websites_isSet = true;
}

bool OAIBusiness_Profile::is_websites_Set() const{
    return m_websites_isSet;
}

bool OAIBusiness_Profile::is_websites_Valid() const{
    return m_websites_isValid;
}

bool OAIBusiness_Profile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vertical_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_websites.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBusiness_Profile::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_address_isValid && m_description_isValid && m_email_isValid && m_vertical_isValid && m_websites_isValid && true;
}

} // namespace OpenAPI
