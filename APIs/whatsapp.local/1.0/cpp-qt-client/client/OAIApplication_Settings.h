/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplication_Settings.h
 *
 * 
 */

#ifndef OAIApplication_Settings_H
#define OAIApplication_Settings_H

#include <QJsonObject>

#include "OAIMedia.h"
#include "OAIWebhooks.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMedia;
class OAIWebhooks;

class OAIApplication_Settings : public OAIObject {
public:
    OAIApplication_Settings();
    OAIApplication_Settings(QString json);
    ~OAIApplication_Settings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCallbackBackoffDelayMs() const;
    void setCallbackBackoffDelayMs(const QString &callback_backoff_delay_ms);
    bool is_callback_backoff_delay_ms_Set() const;
    bool is_callback_backoff_delay_ms_Valid() const;

    bool isCallbackPersist() const;
    void setCallbackPersist(const bool &callback_persist);
    bool is_callback_persist_Set() const;
    bool is_callback_persist_Valid() const;

    qint32 getHeartbeatInterval() const;
    void setHeartbeatInterval(const qint32 &heartbeat_interval);
    bool is_heartbeat_interval_Set() const;
    bool is_heartbeat_interval_Valid() const;

    QString getMaxCallbackBackoffDelayMs() const;
    void setMaxCallbackBackoffDelayMs(const QString &max_callback_backoff_delay_ms);
    bool is_max_callback_backoff_delay_ms_Set() const;
    bool is_max_callback_backoff_delay_ms_Valid() const;

    OAIMedia getMedia() const;
    void setMedia(const OAIMedia &media);
    bool is_media_Set() const;
    bool is_media_Valid() const;

    QString getOnCallPager() const;
    void setOnCallPager(const QString &on_call_pager);
    bool is_on_call_pager_Set() const;
    bool is_on_call_pager_Valid() const;

    bool isPassThrough() const;
    void setPassThrough(const bool &pass_through);
    bool is_pass_through_Set() const;
    bool is_pass_through_Valid() const;

    bool isSentStatus() const;
    void setSentStatus(const bool &sent_status);
    bool is_sent_status_Set() const;
    bool is_sent_status_Valid() const;

    qint32 getUnhealthyInterval() const;
    void setUnhealthyInterval(const qint32 &unhealthy_interval);
    bool is_unhealthy_interval_Set() const;
    bool is_unhealthy_interval_Valid() const;

    OAIWebhooks getWebhooks() const;
    void setWebhooks(const OAIWebhooks &webhooks);
    bool is_webhooks_Set() const;
    bool is_webhooks_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_callback_backoff_delay_ms;
    bool m_callback_backoff_delay_ms_isSet;
    bool m_callback_backoff_delay_ms_isValid;

    bool m_callback_persist;
    bool m_callback_persist_isSet;
    bool m_callback_persist_isValid;

    qint32 m_heartbeat_interval;
    bool m_heartbeat_interval_isSet;
    bool m_heartbeat_interval_isValid;

    QString m_max_callback_backoff_delay_ms;
    bool m_max_callback_backoff_delay_ms_isSet;
    bool m_max_callback_backoff_delay_ms_isValid;

    OAIMedia m_media;
    bool m_media_isSet;
    bool m_media_isValid;

    QString m_on_call_pager;
    bool m_on_call_pager_isSet;
    bool m_on_call_pager_isValid;

    bool m_pass_through;
    bool m_pass_through_isSet;
    bool m_pass_through_isValid;

    bool m_sent_status;
    bool m_sent_status_isSet;
    bool m_sent_status_isValid;

    qint32 m_unhealthy_interval;
    bool m_unhealthy_interval_isSet;
    bool m_unhealthy_interval_isValid;

    OAIWebhooks m_webhooks;
    bool m_webhooks_isSet;
    bool m_webhooks_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplication_Settings)

#endif // OAIApplication_Settings_H
