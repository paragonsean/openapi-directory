/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfig_Bearer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfig_Bearer::OAIConfig_Bearer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfig_Bearer::OAIConfig_Bearer() {
    this->initializeModel();
}

OAIConfig_Bearer::~OAIConfig_Bearer() {}

void OAIConfig_Bearer::initializeModel() {

    m_bearer_isSet = false;
    m_bearer_isValid = false;
}

void OAIConfig_Bearer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfig_Bearer::fromJsonObject(QJsonObject json) {

    m_bearer_isValid = ::OpenAPI::fromJsonValue(m_bearer, json[QString("bearer")]);
    m_bearer_isSet = !json[QString("bearer")].isNull() && m_bearer_isValid;
}

QString OAIConfig_Bearer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfig_Bearer::asJsonObject() const {
    QJsonObject obj;
    if (m_bearer_isSet) {
        obj.insert(QString("bearer"), ::OpenAPI::toJsonValue(m_bearer));
    }
    return obj;
}

QString OAIConfig_Bearer::getBearer() const {
    return m_bearer;
}
void OAIConfig_Bearer::setBearer(const QString &bearer) {
    m_bearer = bearer;
    m_bearer_isSet = true;
}

bool OAIConfig_Bearer::is_bearer_Set() const{
    return m_bearer_isSet;
}

bool OAIConfig_Bearer::is_bearer_Valid() const{
    return m_bearer_isValid;
}

bool OAIConfig_Bearer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bearer_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfig_Bearer::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_bearer_isValid && true;
}

} // namespace OpenAPI
