/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWebhook_Event.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWebhook_Event::OAIWebhook_Event(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWebhook_Event::OAIWebhook_Event() {
    this->initializeModel();
}

OAIWebhook_Event::~OAIWebhook_Event() {}

void OAIWebhook_Event::initializeModel() {

    m_contacts_isSet = false;
    m_contacts_isValid = false;

    m_errors_isSet = false;
    m_errors_isValid = false;

    m_messages_isSet = false;
    m_messages_isValid = false;

    m_statuses_isSet = false;
    m_statuses_isValid = false;
}

void OAIWebhook_Event::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWebhook_Event::fromJsonObject(QJsonObject json) {

    m_contacts_isValid = ::OpenAPI::fromJsonValue(m_contacts, json[QString("contacts")]);
    m_contacts_isSet = !json[QString("contacts")].isNull() && m_contacts_isValid;

    m_errors_isValid = ::OpenAPI::fromJsonValue(m_errors, json[QString("errors")]);
    m_errors_isSet = !json[QString("errors")].isNull() && m_errors_isValid;

    m_messages_isValid = ::OpenAPI::fromJsonValue(m_messages, json[QString("messages")]);
    m_messages_isSet = !json[QString("messages")].isNull() && m_messages_isValid;

    m_statuses_isValid = ::OpenAPI::fromJsonValue(m_statuses, json[QString("statuses")]);
    m_statuses_isSet = !json[QString("statuses")].isNull() && m_statuses_isValid;
}

QString OAIWebhook_Event::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWebhook_Event::asJsonObject() const {
    QJsonObject obj;
    if (m_contacts.size() > 0) {
        obj.insert(QString("contacts"), ::OpenAPI::toJsonValue(m_contacts));
    }
    if (m_errors.size() > 0) {
        obj.insert(QString("errors"), ::OpenAPI::toJsonValue(m_errors));
    }
    if (m_messages.size() > 0) {
        obj.insert(QString("messages"), ::OpenAPI::toJsonValue(m_messages));
    }
    if (m_statuses.size() > 0) {
        obj.insert(QString("statuses"), ::OpenAPI::toJsonValue(m_statuses));
    }
    return obj;
}

QList<OAIWebhook_Contact> OAIWebhook_Event::getContacts() const {
    return m_contacts;
}
void OAIWebhook_Event::setContacts(const QList<OAIWebhook_Contact> &contacts) {
    m_contacts = contacts;
    m_contacts_isSet = true;
}

bool OAIWebhook_Event::is_contacts_Set() const{
    return m_contacts_isSet;
}

bool OAIWebhook_Event::is_contacts_Valid() const{
    return m_contacts_isValid;
}

QList<OAIError> OAIWebhook_Event::getErrors() const {
    return m_errors;
}
void OAIWebhook_Event::setErrors(const QList<OAIError> &errors) {
    m_errors = errors;
    m_errors_isSet = true;
}

bool OAIWebhook_Event::is_errors_Set() const{
    return m_errors_isSet;
}

bool OAIWebhook_Event::is_errors_Valid() const{
    return m_errors_isValid;
}

QList<OAIWebhook_Message> OAIWebhook_Event::getMessages() const {
    return m_messages;
}
void OAIWebhook_Event::setMessages(const QList<OAIWebhook_Message> &messages) {
    m_messages = messages;
    m_messages_isSet = true;
}

bool OAIWebhook_Event::is_messages_Set() const{
    return m_messages_isSet;
}

bool OAIWebhook_Event::is_messages_Valid() const{
    return m_messages_isValid;
}

QList<OAIWebhook_Status> OAIWebhook_Event::getStatuses() const {
    return m_statuses;
}
void OAIWebhook_Event::setStatuses(const QList<OAIWebhook_Status> &statuses) {
    m_statuses = statuses;
    m_statuses_isSet = true;
}

bool OAIWebhook_Event::is_statuses_Set() const{
    return m_statuses_isSet;
}

bool OAIWebhook_Event::is_statuses_Valid() const{
    return m_statuses_isValid;
}

bool OAIWebhook_Event::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contacts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_messages.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_statuses.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWebhook_Event::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
