/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWebhook_Message.h
 *
 * 
 */

#ifndef OAIWebhook_Message_H
#define OAIWebhook_Message_H

#include <QJsonObject>

#include "OAIContact.h"
#include "OAIError.h"
#include "OAIMessage_Context.h"
#include "OAIMessage_Type.h"
#include "OAIWebhook_Audio.h"
#include "OAIWebhook_Document.h"
#include "OAIWebhook_Image.h"
#include "OAIWebhook_Location.h"
#include "OAIWebhook_System.h"
#include "OAIWebhook_Text.h"
#include "OAIWebhook_Video.h"
#include "OAIWebhook_Voice.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWebhook_Audio;
class OAIContact;
class OAIMessage_Context;
class OAIWebhook_Document;
class OAIError;
class OAIWebhook_Image;
class OAIWebhook_Location;
class OAIWebhook_System;
class OAIWebhook_Text;
class OAIWebhook_Video;
class OAIWebhook_Voice;

class OAIWebhook_Message : public OAIObject {
public:
    OAIWebhook_Message();
    OAIWebhook_Message(QString json);
    ~OAIWebhook_Message() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIWebhook_Audio getAudio() const;
    void setAudio(const OAIWebhook_Audio &audio);
    bool is_audio_Set() const;
    bool is_audio_Valid() const;

    QList<OAIContact> getContacts() const;
    void setContacts(const QList<OAIContact> &contacts);
    bool is_contacts_Set() const;
    bool is_contacts_Valid() const;

    OAIMessage_Context getContext() const;
    void setContext(const OAIMessage_Context &context);
    bool is_context_Set() const;
    bool is_context_Valid() const;

    OAIWebhook_Document getDocument() const;
    void setDocument(const OAIWebhook_Document &document);
    bool is_document_Set() const;
    bool is_document_Valid() const;

    QList<OAIError> getErrors() const;
    void setErrors(const QList<OAIError> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    QString getFrom() const;
    void setFrom(const QString &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    QString getGroupId() const;
    void setGroupId(const QString &group_id);
    bool is_group_id_Set() const;
    bool is_group_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIWebhook_Image getImage() const;
    void setImage(const OAIWebhook_Image &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    OAIWebhook_Location getLocation() const;
    void setLocation(const OAIWebhook_Location &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAIWebhook_System getSystem() const;
    void setSystem(const OAIWebhook_System &system);
    bool is_system_Set() const;
    bool is_system_Valid() const;

    OAIWebhook_Text getText() const;
    void setText(const OAIWebhook_Text &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getTimestamp() const;
    void setTimestamp(const QString &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    OAIMessage_Type getType() const;
    void setType(const OAIMessage_Type &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIWebhook_Video getVideo() const;
    void setVideo(const OAIWebhook_Video &video);
    bool is_video_Set() const;
    bool is_video_Valid() const;

    OAIWebhook_Voice getVoice() const;
    void setVoice(const OAIWebhook_Voice &voice);
    bool is_voice_Set() const;
    bool is_voice_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIWebhook_Audio m_audio;
    bool m_audio_isSet;
    bool m_audio_isValid;

    QList<OAIContact> m_contacts;
    bool m_contacts_isSet;
    bool m_contacts_isValid;

    OAIMessage_Context m_context;
    bool m_context_isSet;
    bool m_context_isValid;

    OAIWebhook_Document m_document;
    bool m_document_isSet;
    bool m_document_isValid;

    QList<OAIError> m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    QString m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    QString m_group_id;
    bool m_group_id_isSet;
    bool m_group_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIWebhook_Image m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    OAIWebhook_Location m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAIWebhook_System m_system;
    bool m_system_isSet;
    bool m_system_isValid;

    OAIWebhook_Text m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    OAIMessage_Type m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIWebhook_Video m_video;
    bool m_video_isSet;
    bool m_video_isValid;

    OAIWebhook_Voice m_voice;
    bool m_voice_isSet;
    bool m_voice_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWebhook_Message)

#endif // OAIWebhook_Message_H
