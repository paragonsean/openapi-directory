/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGateway_Status.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGateway_Status::OAIGateway_Status(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGateway_Status::OAIGateway_Status() {
    this->initializeModel();
}

OAIGateway_Status::~OAIGateway_Status() {}

void OAIGateway_Status::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIGateway_Status::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIGateway_Status::fromJson(QString jsonString) {
    
    if ( jsonString.compare("connected", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGateway_Status::CONNECTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("connecting", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGateway_Status::CONNECTING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("disconnected", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGateway_Status::DISCONNECTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("uninitialized", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGateway_Status::UNINITIALIZED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("unregistered", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGateway_Status::UNREGISTERED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIGateway_Status::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIGateway_Status::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIGateway_Status::CONNECTED:
            val = "connected";
            break;
        case eOAIGateway_Status::CONNECTING:
            val = "connecting";
            break;
        case eOAIGateway_Status::DISCONNECTED:
            val = "disconnected";
            break;
        case eOAIGateway_Status::UNINITIALIZED:
            val = "uninitialized";
            break;
        case eOAIGateway_Status::UNREGISTERED:
            val = "unregistered";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIGateway_Status::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIGateway_Status::eOAIGateway_Status OAIGateway_Status::getValue() const {
    return m_value;
}

void OAIGateway_Status::setValue(const OAIGateway_Status::eOAIGateway_Status& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIGateway_Status::isSet() const {
    
    return m_value_isSet;
}

bool OAIGateway_Status::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
