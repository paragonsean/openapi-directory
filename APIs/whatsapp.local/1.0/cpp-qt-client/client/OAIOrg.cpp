/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrg.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrg::OAIOrg(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrg::OAIOrg() {
    this->initializeModel();
}

OAIOrg::~OAIOrg() {}

void OAIOrg::initializeModel() {

    m_company_isSet = false;
    m_company_isValid = false;

    m_department_isSet = false;
    m_department_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIOrg::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrg::fromJsonObject(QJsonObject json) {

    m_company_isValid = ::OpenAPI::fromJsonValue(m_company, json[QString("company")]);
    m_company_isSet = !json[QString("company")].isNull() && m_company_isValid;

    m_department_isValid = ::OpenAPI::fromJsonValue(m_department, json[QString("department")]);
    m_department_isSet = !json[QString("department")].isNull() && m_department_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIOrg::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrg::asJsonObject() const {
    QJsonObject obj;
    if (m_company_isSet) {
        obj.insert(QString("company"), ::OpenAPI::toJsonValue(m_company));
    }
    if (m_department_isSet) {
        obj.insert(QString("department"), ::OpenAPI::toJsonValue(m_department));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIOrg::getCompany() const {
    return m_company;
}
void OAIOrg::setCompany(const QString &company) {
    m_company = company;
    m_company_isSet = true;
}

bool OAIOrg::is_company_Set() const{
    return m_company_isSet;
}

bool OAIOrg::is_company_Valid() const{
    return m_company_isValid;
}

QString OAIOrg::getDepartment() const {
    return m_department;
}
void OAIOrg::setDepartment(const QString &department) {
    m_department = department;
    m_department_isSet = true;
}

bool OAIOrg::is_department_Set() const{
    return m_department_isSet;
}

bool OAIOrg::is_department_Valid() const{
    return m_department_isValid;
}

QString OAIOrg::getTitle() const {
    return m_title;
}
void OAIOrg::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIOrg::is_title_Set() const{
    return m_title_isSet;
}

bool OAIOrg::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIOrg::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_company_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_department_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrg::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_company_isValid && true;
}

} // namespace OpenAPI
