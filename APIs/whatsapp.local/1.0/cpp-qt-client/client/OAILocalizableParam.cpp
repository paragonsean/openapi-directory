/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILocalizableParam.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILocalizableParam::OAILocalizableParam(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILocalizableParam::OAILocalizableParam() {
    this->initializeModel();
}

OAILocalizableParam::~OAILocalizableParam() {}

void OAILocalizableParam::initializeModel() {

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_date_time_isSet = false;
    m_date_time_isValid = false;

    m_r_default_isSet = false;
    m_r_default_isValid = false;
}

void OAILocalizableParam::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILocalizableParam::fromJsonObject(QJsonObject json) {

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_date_time_isValid = ::OpenAPI::fromJsonValue(m_date_time, json[QString("date_time")]);
    m_date_time_isSet = !json[QString("date_time")].isNull() && m_date_time_isValid;

    m_r_default_isValid = ::OpenAPI::fromJsonValue(m_r_default, json[QString("default")]);
    m_r_default_isSet = !json[QString("default")].isNull() && m_r_default_isValid;
}

QString OAILocalizableParam::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILocalizableParam::asJsonObject() const {
    QJsonObject obj;
    if (m_currency.isSet()) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_date_time.isSet()) {
        obj.insert(QString("date_time"), ::OpenAPI::toJsonValue(m_date_time));
    }
    if (m_r_default_isSet) {
        obj.insert(QString("default"), ::OpenAPI::toJsonValue(m_r_default));
    }
    return obj;
}

OAICurrency OAILocalizableParam::getCurrency() const {
    return m_currency;
}
void OAILocalizableParam::setCurrency(const OAICurrency &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAILocalizableParam::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAILocalizableParam::is_currency_Valid() const{
    return m_currency_isValid;
}

OAIDate_Time_Object OAILocalizableParam::getDateTime() const {
    return m_date_time;
}
void OAILocalizableParam::setDateTime(const OAIDate_Time_Object &date_time) {
    m_date_time = date_time;
    m_date_time_isSet = true;
}

bool OAILocalizableParam::is_date_time_Set() const{
    return m_date_time_isSet;
}

bool OAILocalizableParam::is_date_time_Valid() const{
    return m_date_time_isValid;
}

QString OAILocalizableParam::getRDefault() const {
    return m_r_default;
}
void OAILocalizableParam::setRDefault(const QString &r_default) {
    m_r_default = r_default;
    m_r_default_isSet = true;
}

bool OAILocalizableParam::is_r_default_Set() const{
    return m_r_default_isSet;
}

bool OAILocalizableParam::is_r_default_Valid() const{
    return m_r_default_isValid;
}

bool OAILocalizableParam::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_time.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_default_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILocalizableParam::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_r_default_isValid && true;
}

} // namespace OpenAPI
