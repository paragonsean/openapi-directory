/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICurrency.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICurrency::OAICurrency(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICurrency::OAICurrency() {
    this->initializeModel();
}

OAICurrency::~OAICurrency() {}

void OAICurrency::initializeModel() {

    m_amount_1000_isSet = false;
    m_amount_1000_isValid = false;

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;
}

void OAICurrency::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICurrency::fromJsonObject(QJsonObject json) {

    m_amount_1000_isValid = ::OpenAPI::fromJsonValue(m_amount_1000, json[QString("amount_1000")]);
    m_amount_1000_isSet = !json[QString("amount_1000")].isNull() && m_amount_1000_isValid;

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currency_code")]);
    m_currency_code_isSet = !json[QString("currency_code")].isNull() && m_currency_code_isValid;
}

QString OAICurrency::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICurrency::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_1000_isSet) {
        obj.insert(QString("amount_1000"), ::OpenAPI::toJsonValue(m_amount_1000));
    }
    if (m_currency_code_isSet) {
        obj.insert(QString("currency_code"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    return obj;
}

qint32 OAICurrency::getAmount1000() const {
    return m_amount_1000;
}
void OAICurrency::setAmount1000(const qint32 &amount_1000) {
    m_amount_1000 = amount_1000;
    m_amount_1000_isSet = true;
}

bool OAICurrency::is_amount_1000_Set() const{
    return m_amount_1000_isSet;
}

bool OAICurrency::is_amount_1000_Valid() const{
    return m_amount_1000_isValid;
}

QString OAICurrency::getCurrencyCode() const {
    return m_currency_code;
}
void OAICurrency::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAICurrency::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAICurrency::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

bool OAICurrency::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_1000_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICurrency::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_1000_isValid && m_currency_code_isValid && true;
}

} // namespace OpenAPI
