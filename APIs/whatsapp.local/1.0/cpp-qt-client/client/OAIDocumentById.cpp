/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocumentById.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocumentById::OAIDocumentById(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocumentById::OAIDocumentById() {
    this->initializeModel();
}

OAIDocumentById::~OAIDocumentById() {}

void OAIDocumentById::initializeModel() {

    m_caption_isSet = false;
    m_caption_isValid = false;

    m_filename_isSet = false;
    m_filename_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;
}

void OAIDocumentById::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDocumentById::fromJsonObject(QJsonObject json) {

    m_caption_isValid = ::OpenAPI::fromJsonValue(m_caption, json[QString("caption")]);
    m_caption_isSet = !json[QString("caption")].isNull() && m_caption_isValid;

    m_filename_isValid = ::OpenAPI::fromJsonValue(m_filename, json[QString("filename")]);
    m_filename_isSet = !json[QString("filename")].isNull() && m_filename_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;
}

QString OAIDocumentById::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDocumentById::asJsonObject() const {
    QJsonObject obj;
    if (m_caption_isSet) {
        obj.insert(QString("caption"), ::OpenAPI::toJsonValue(m_caption));
    }
    if (m_filename_isSet) {
        obj.insert(QString("filename"), ::OpenAPI::toJsonValue(m_filename));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    return obj;
}

QString OAIDocumentById::getCaption() const {
    return m_caption;
}
void OAIDocumentById::setCaption(const QString &caption) {
    m_caption = caption;
    m_caption_isSet = true;
}

bool OAIDocumentById::is_caption_Set() const{
    return m_caption_isSet;
}

bool OAIDocumentById::is_caption_Valid() const{
    return m_caption_isValid;
}

QString OAIDocumentById::getFilename() const {
    return m_filename;
}
void OAIDocumentById::setFilename(const QString &filename) {
    m_filename = filename;
    m_filename_isSet = true;
}

bool OAIDocumentById::is_filename_Set() const{
    return m_filename_isSet;
}

bool OAIDocumentById::is_filename_Valid() const{
    return m_filename_isValid;
}

QString OAIDocumentById::getId() const {
    return m_id;
}
void OAIDocumentById::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIDocumentById::is_id_Set() const{
    return m_id_isSet;
}

bool OAIDocumentById::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIDocumentById::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_caption_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filename_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDocumentById::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_caption_isValid && m_filename_isValid && m_id_isValid && true;
}

} // namespace OpenAPI
