/*
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateGroupRequestBody;
import java.io.File;
import org.openapitools.client.model.GroupAdminRequestBody;
import org.openapitools.client.model.GroupInviteResponse;
import org.openapitools.client.model.GroupResponse;
import org.openapitools.client.model.GroupsResponse;
import org.openapitools.client.model.RemoveGroupParticipantRequestBody;
import org.openapitools.client.model.UpdateGroupInfoRequestBody;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GroupsApi
 */
@Disabled
public class GroupsApiTest {

    private final GroupsApi api = new GroupsApi();

    /**
     * Create-Group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createGroupTest() throws ApiException {
        CreateGroupRequestBody createGroupRequestBody = null;
        GroupsResponse response = api.createGroup(createGroupRequestBody);
        // TODO: test validations
    }

    /**
     * Delete-Group-Icon
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteGroupIconTest() throws ApiException {
        String groupId = null;
        File _file = null;
        api.deleteGroupIcon(groupId, _file);
        // TODO: test validations
    }

    /**
     * Delete-Group-Invite
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteGroupInviteTest() throws ApiException {
        String groupId = null;
        api.deleteGroupInvite(groupId);
        // TODO: test validations
    }

    /**
     * Demote-Group-Admin
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void demoteGroupAdminTest() throws ApiException {
        String groupId = null;
        GroupAdminRequestBody groupAdminRequestBody = null;
        api.demoteGroupAdmin(groupId, groupAdminRequestBody);
        // TODO: test validations
    }

    /**
     * Get-All-Groups
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllGroupsTest() throws ApiException {
        GroupsResponse response = api.getAllGroups();
        // TODO: test validations
    }

    /**
     * Get-Group-Icon-Binary
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGroupIconBinaryTest() throws ApiException {
        String groupId = null;
        api.getGroupIconBinary(groupId);
        // TODO: test validations
    }

    /**
     * Get-Group-Info
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGroupInfoTest() throws ApiException {
        String groupId = null;
        GroupResponse response = api.getGroupInfo(groupId);
        // TODO: test validations
    }

    /**
     * Get-Group-Invite
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGroupInviteTest() throws ApiException {
        String groupId = null;
        GroupInviteResponse response = api.getGroupInvite(groupId);
        // TODO: test validations
    }

    /**
     * Leave-Group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void leaveGroupTest() throws ApiException {
        String groupId = null;
        api.leaveGroup(groupId);
        // TODO: test validations
    }

    /**
     * Promote-To-Group-Admin
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void promoteToGroupAdminTest() throws ApiException {
        String groupId = null;
        GroupAdminRequestBody groupAdminRequestBody = null;
        api.promoteToGroupAdmin(groupId, groupAdminRequestBody);
        // TODO: test validations
    }

    /**
     * Remove-Group-Participant
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeGroupParticipantTest() throws ApiException {
        String groupId = null;
        RemoveGroupParticipantRequestBody removeGroupParticipantRequestBody = null;
        api.removeGroupParticipant(groupId, removeGroupParticipantRequestBody);
        // TODO: test validations
    }

    /**
     * Set-Group-Icon
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setGroupIconTest() throws ApiException {
        String groupId = null;
        File _file = null;
        api.setGroupIcon(groupId, _file);
        // TODO: test validations
    }

    /**
     * Update-Group-Info
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateGroupInfoTest() throws ApiException {
        String groupId = null;
        UpdateGroupInfoRequestBody updateGroupInfoRequestBody = null;
        api.updateGroupInfo(groupId, updateGroupInfoRequestBody);
        // TODO: test validations
    }

}
