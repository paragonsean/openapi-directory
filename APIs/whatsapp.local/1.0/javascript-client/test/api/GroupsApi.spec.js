/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WhatsAppBusinessApi);
  }
}(this, function(expect, WhatsAppBusinessApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WhatsAppBusinessApi.GroupsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GroupsApi', function() {
    describe('createGroup', function() {
      it('should call createGroup successfully', function(done) {
        //uncomment below and update the code to test createGroup
        //instance.createGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteGroupIcon', function() {
      it('should call deleteGroupIcon successfully', function(done) {
        //uncomment below and update the code to test deleteGroupIcon
        //instance.deleteGroupIcon(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteGroupInvite', function() {
      it('should call deleteGroupInvite successfully', function(done) {
        //uncomment below and update the code to test deleteGroupInvite
        //instance.deleteGroupInvite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('demoteGroupAdmin', function() {
      it('should call demoteGroupAdmin successfully', function(done) {
        //uncomment below and update the code to test demoteGroupAdmin
        //instance.demoteGroupAdmin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllGroups', function() {
      it('should call getAllGroups successfully', function(done) {
        //uncomment below and update the code to test getAllGroups
        //instance.getAllGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupIconBinary', function() {
      it('should call getGroupIconBinary successfully', function(done) {
        //uncomment below and update the code to test getGroupIconBinary
        //instance.getGroupIconBinary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupInfo', function() {
      it('should call getGroupInfo successfully', function(done) {
        //uncomment below and update the code to test getGroupInfo
        //instance.getGroupInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupInvite', function() {
      it('should call getGroupInvite successfully', function(done) {
        //uncomment below and update the code to test getGroupInvite
        //instance.getGroupInvite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('leaveGroup', function() {
      it('should call leaveGroup successfully', function(done) {
        //uncomment below and update the code to test leaveGroup
        //instance.leaveGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('promoteToGroupAdmin', function() {
      it('should call promoteToGroupAdmin successfully', function(done) {
        //uncomment below and update the code to test promoteToGroupAdmin
        //instance.promoteToGroupAdmin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeGroupParticipant', function() {
      it('should call removeGroupParticipant successfully', function(done) {
        //uncomment below and update the code to test removeGroupParticipant
        //instance.removeGroupParticipant(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setGroupIcon', function() {
      it('should call setGroupIcon successfully', function(done) {
        //uncomment below and update the code to test setGroupIcon
        //instance.setGroupIcon(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateGroupInfo', function() {
      it('should call updateGroupInfo successfully', function(done) {
        //uncomment below and update the code to test updateGroupInfo
        //instance.updateGroupInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
