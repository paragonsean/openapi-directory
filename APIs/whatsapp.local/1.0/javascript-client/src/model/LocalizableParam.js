/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Currency from './Currency';
import DateTimeObject from './DateTimeObject';

/**
 * The LocalizableParam model module.
 * @module model/LocalizableParam
 * @version 1.0
 */
class LocalizableParam {
    /**
     * Constructs a new <code>LocalizableParam</code>.
     * @alias module:model/LocalizableParam
     * @param _default {String} Default text if localization fails
     */
    constructor(_default) { 
        
        LocalizableParam.initialize(this, _default);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, _default) { 
        obj['default'] = _default;
    }

    /**
     * Constructs a <code>LocalizableParam</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LocalizableParam} obj Optional instance to populate.
     * @return {module:model/LocalizableParam} The populated <code>LocalizableParam</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LocalizableParam();

            if (data.hasOwnProperty('currency')) {
                obj['currency'] = Currency.constructFromObject(data['currency']);
            }
            if (data.hasOwnProperty('date_time')) {
                obj['date_time'] = DateTimeObject.constructFromObject(data['date_time']);
            }
            if (data.hasOwnProperty('default')) {
                obj['default'] = ApiClient.convertToType(data['default'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LocalizableParam</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LocalizableParam</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LocalizableParam.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `currency`
        if (data['currency']) { // data not null
          Currency.validateJSON(data['currency']);
        }
        // validate the optional field `date_time`
        if (data['date_time']) { // data not null
          DateTimeObject.validateJSON(data['date_time']);
        }
        // ensure the json data is a string
        if (data['default'] && !(typeof data['default'] === 'string' || data['default'] instanceof String)) {
            throw new Error("Expected the field `default` to be a primitive type in the JSON string but got " + data['default']);
        }

        return true;
    }


}

LocalizableParam.RequiredProperties = ["default"];

/**
 * @member {module:model/Currency} currency
 */
LocalizableParam.prototype['currency'] = undefined;

/**
 * @member {module:model/DateTimeObject} date_time
 */
LocalizableParam.prototype['date_time'] = undefined;

/**
 * Default text if localization fails
 * @member {String} default
 */
LocalizableParam.prototype['default'] = undefined;






export default LocalizableParam;

