/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MessageContext model module.
 * @module model/MessageContext
 * @version 1.0
 */
class MessageContext {
    /**
     * Constructs a new <code>MessageContext</code>.
     * 
     * @alias module:model/MessageContext
     */
    constructor() { 
        
        MessageContext.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MessageContext</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessageContext} obj Optional instance to populate.
     * @return {module:model/MessageContext} The populated <code>MessageContext</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessageContext();

            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('group_id')) {
                obj['group_id'] = ApiClient.convertToType(data['group_id'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('mentions')) {
                obj['mentions'] = ApiClient.convertToType(data['mentions'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MessageContext</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MessageContext</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['from'] && !(typeof data['from'] === 'string' || data['from'] instanceof String)) {
            throw new Error("Expected the field `from` to be a primitive type in the JSON string but got " + data['from']);
        }
        // ensure the json data is a string
        if (data['group_id'] && !(typeof data['group_id'] === 'string' || data['group_id'] instanceof String)) {
            throw new Error("Expected the field `group_id` to be a primitive type in the JSON string but got " + data['group_id']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['mentions'])) {
            throw new Error("Expected the field `mentions` to be an array in the JSON data but got " + data['mentions']);
        }

        return true;
    }


}



/**
 * Sender Whatsapp id of context-message
 * @member {String} from
 */
MessageContext.prototype['from'] = undefined;

/**
 * GroupId of context message
 * @member {String} group_id
 */
MessageContext.prototype['group_id'] = undefined;

/**
 * message id
 * @member {String} id
 */
MessageContext.prototype['id'] = undefined;

/**
 * Whats app ids
 * @member {Array.<String>} mentions
 */
MessageContext.prototype['mentions'] = undefined;






export default MessageContext;

