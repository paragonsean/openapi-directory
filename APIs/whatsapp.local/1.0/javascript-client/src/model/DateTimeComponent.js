/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DateTimeComponent model module.
 * @module model/DateTimeComponent
 * @version 1.0
 */
class DateTimeComponent {
    /**
     * Constructs a new <code>DateTimeComponent</code>.
     * Date/time by component
     * @alias module:model/DateTimeComponent
     */
    constructor() { 
        
        DateTimeComponent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DateTimeComponent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DateTimeComponent} obj Optional instance to populate.
     * @return {module:model/DateTimeComponent} The populated <code>DateTimeComponent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DateTimeComponent();

            if (data.hasOwnProperty('day_of_month')) {
                obj['day_of_month'] = ApiClient.convertToType(data['day_of_month'], 'Number');
            }
            if (data.hasOwnProperty('day_of_week')) {
                obj['day_of_week'] = ApiClient.convertToType(data['day_of_week'], 'Number');
            }
            if (data.hasOwnProperty('hour')) {
                obj['hour'] = ApiClient.convertToType(data['hour'], 'Number');
            }
            if (data.hasOwnProperty('minute')) {
                obj['minute'] = ApiClient.convertToType(data['minute'], 'Number');
            }
            if (data.hasOwnProperty('month')) {
                obj['month'] = ApiClient.convertToType(data['month'], 'Number');
            }
            if (data.hasOwnProperty('year')) {
                obj['year'] = ApiClient.convertToType(data['year'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DateTimeComponent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DateTimeComponent</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The day of month
 * @member {Number} day_of_month
 */
DateTimeComponent.prototype['day_of_month'] = undefined;

/**
 * Both strings and numbers are accepted. If different from the value derived from the date (if specified), use the derived value.
 * @member {module:model/DateTimeComponent.DayOfWeekEnum} day_of_week
 */
DateTimeComponent.prototype['day_of_week'] = undefined;

/**
 * The hour
 * @member {Number} hour
 */
DateTimeComponent.prototype['hour'] = undefined;

/**
 * The minute
 * @member {Number} minute
 */
DateTimeComponent.prototype['minute'] = undefined;

/**
 * The month
 * @member {Number} month
 */
DateTimeComponent.prototype['month'] = undefined;

/**
 * The year
 * @member {Number} year
 */
DateTimeComponent.prototype['year'] = undefined;





/**
 * Allowed values for the <code>day_of_week</code> property.
 * @enum {Number}
 * @readonly
 */
DateTimeComponent['DayOfWeekEnum'] = {

    /**
     * value: 1
     * @const
     */
    "MONDAY": 1,

    /**
     * value: 2
     * @const
     */
    "TUESDAY": 2,

    /**
     * value: 3
     * @const
     */
    "WEDNESDAY": 3,

    /**
     * value: 4
     * @const
     */
    "THURSDAY": 4,

    /**
     * value: 5
     * @const
     */
    "FRIDAY": 5,

    /**
     * value: 6
     * @const
     */
    "SATURDAY": 6,

    /**
     * value: 7
     * @const
     */
    "SUNDAY": 7
};



export default DateTimeComponent;

