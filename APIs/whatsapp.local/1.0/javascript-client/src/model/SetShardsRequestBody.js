/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SetShardsRequestBody model module.
 * @module model/SetShardsRequestBody
 * @version 1.0
 */
class SetShardsRequestBody {
    /**
     * Constructs a new <code>SetShardsRequestBody</code>.
     * @alias module:model/SetShardsRequestBody
     * @param cc {String} 
     * @param phoneNumber {String} 
     * @param pin {String} 
     * @param shards {module:model/SetShardsRequestBody.ShardsEnum} 
     */
    constructor(cc, phoneNumber, pin, shards) { 
        
        SetShardsRequestBody.initialize(this, cc, phoneNumber, pin, shards);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cc, phoneNumber, pin, shards) { 
        obj['cc'] = cc;
        obj['phone_number'] = phoneNumber;
        obj['pin'] = pin;
        obj['shards'] = shards;
    }

    /**
     * Constructs a <code>SetShardsRequestBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SetShardsRequestBody} obj Optional instance to populate.
     * @return {module:model/SetShardsRequestBody} The populated <code>SetShardsRequestBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SetShardsRequestBody();

            if (data.hasOwnProperty('cc')) {
                obj['cc'] = ApiClient.convertToType(data['cc'], 'String');
            }
            if (data.hasOwnProperty('phone_number')) {
                obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
            }
            if (data.hasOwnProperty('pin')) {
                obj['pin'] = ApiClient.convertToType(data['pin'], 'String');
            }
            if (data.hasOwnProperty('shards')) {
                obj['shards'] = ApiClient.convertToType(data['shards'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SetShardsRequestBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SetShardsRequestBody</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SetShardsRequestBody.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['cc'] && !(typeof data['cc'] === 'string' || data['cc'] instanceof String)) {
            throw new Error("Expected the field `cc` to be a primitive type in the JSON string but got " + data['cc']);
        }
        // ensure the json data is a string
        if (data['phone_number'] && !(typeof data['phone_number'] === 'string' || data['phone_number'] instanceof String)) {
            throw new Error("Expected the field `phone_number` to be a primitive type in the JSON string but got " + data['phone_number']);
        }
        // ensure the json data is a string
        if (data['pin'] && !(typeof data['pin'] === 'string' || data['pin'] instanceof String)) {
            throw new Error("Expected the field `pin` to be a primitive type in the JSON string but got " + data['pin']);
        }

        return true;
    }


}

SetShardsRequestBody.RequiredProperties = ["cc", "phone_number", "pin", "shards"];

/**
 * @member {String} cc
 */
SetShardsRequestBody.prototype['cc'] = undefined;

/**
 * @member {String} phone_number
 */
SetShardsRequestBody.prototype['phone_number'] = undefined;

/**
 * @member {String} pin
 */
SetShardsRequestBody.prototype['pin'] = undefined;

/**
 * @member {module:model/SetShardsRequestBody.ShardsEnum} shards
 */
SetShardsRequestBody.prototype['shards'] = undefined;





/**
 * Allowed values for the <code>shards</code> property.
 * @enum {Number}
 * @readonly
 */
SetShardsRequestBody['ShardsEnum'] = {

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 4
     * @const
     */
    "4": 4,

    /**
     * value: 8
     * @const
     */
    "8": 8,

    /**
     * value: 16
     * @const
     */
    "16": 16,

    /**
     * value: 32
     * @const
     */
    "32": 32
};



export default SetShardsRequestBody;

