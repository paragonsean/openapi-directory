/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CheckContact model module.
 * @module model/CheckContact
 * @version 1.0
 */
class CheckContact {
    /**
     * Constructs a new <code>CheckContact</code>.
     * 
     * @alias module:model/CheckContact
     */
    constructor() { 
        
        CheckContact.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CheckContact</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CheckContact} obj Optional instance to populate.
     * @return {module:model/CheckContact} The populated <code>CheckContact</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CheckContact();

            if (data.hasOwnProperty('input')) {
                obj['input'] = ApiClient.convertToType(data['input'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('wa_id')) {
                obj['wa_id'] = ApiClient.convertToType(data['wa_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CheckContact</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CheckContact</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['input'] && !(typeof data['input'] === 'string' || data['input'] instanceof String)) {
            throw new Error("Expected the field `input` to be a primitive type in the JSON string but got " + data['input']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['wa_id'] && !(typeof data['wa_id'] === 'string' || data['wa_id'] instanceof String)) {
            throw new Error("Expected the field `wa_id` to be a primitive type in the JSON string but got " + data['wa_id']);
        }

        return true;
    }


}



/**
 * The value you sent in the contacts field of the JSON request.
 * @member {String} input
 */
CheckContact.prototype['input'] = undefined;

/**
 * Status of the user.
 * @member {module:model/CheckContact.StatusEnum} status
 */
CheckContact.prototype['status'] = undefined;

/**
 * WhatsApp user identifier that can be used in other API calls. Only returned if the status is valid.
 * @member {String} wa_id
 */
CheckContact.prototype['wa_id'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
CheckContact['StatusEnum'] = {

    /**
     * value: "processing"
     * @const
     */
    "processing": "processing",

    /**
     * value: "valid"
     * @const
     */
    "valid": "valid",

    /**
     * value: "invalid"
     * @const
     */
    "invalid": "invalid"
};



export default CheckContact;

