/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Language from './Language';
import LocalizableParam from './LocalizableParam';

/**
 * The Hsm model module.
 * @module model/Hsm
 * @version 1.0
 */
class Hsm {
    /**
     * Constructs a new <code>Hsm</code>.
     * The containing element for the message content â€” Indicates that the message is highly structured. Parameters contained within provide the structure.
     * @alias module:model/Hsm
     * @param elementName {String} The element name that indicates which template to use within the namespace
     * @param language {module:model/Language} 
     * @param localizableParams {Array.<module:model/LocalizableParam>} This field is an array of values to apply to variables in the template
     * @param namespace {String} The namespace that will be used
     */
    constructor(elementName, language, localizableParams, namespace) { 
        
        Hsm.initialize(this, elementName, language, localizableParams, namespace);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, elementName, language, localizableParams, namespace) { 
        obj['element_name'] = elementName;
        obj['language'] = language;
        obj['localizable_params'] = localizableParams;
        obj['namespace'] = namespace;
    }

    /**
     * Constructs a <code>Hsm</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Hsm} obj Optional instance to populate.
     * @return {module:model/Hsm} The populated <code>Hsm</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Hsm();

            if (data.hasOwnProperty('element_name')) {
                obj['element_name'] = ApiClient.convertToType(data['element_name'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = Language.constructFromObject(data['language']);
            }
            if (data.hasOwnProperty('localizable_params')) {
                obj['localizable_params'] = ApiClient.convertToType(data['localizable_params'], [LocalizableParam]);
            }
            if (data.hasOwnProperty('namespace')) {
                obj['namespace'] = ApiClient.convertToType(data['namespace'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Hsm</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Hsm</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Hsm.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['element_name'] && !(typeof data['element_name'] === 'string' || data['element_name'] instanceof String)) {
            throw new Error("Expected the field `element_name` to be a primitive type in the JSON string but got " + data['element_name']);
        }
        // validate the optional field `language`
        if (data['language']) { // data not null
          Language.validateJSON(data['language']);
        }
        if (data['localizable_params']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['localizable_params'])) {
                throw new Error("Expected the field `localizable_params` to be an array in the JSON data but got " + data['localizable_params']);
            }
            // validate the optional field `localizable_params` (array)
            for (const item of data['localizable_params']) {
                LocalizableParam.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['namespace'] && !(typeof data['namespace'] === 'string' || data['namespace'] instanceof String)) {
            throw new Error("Expected the field `namespace` to be a primitive type in the JSON string but got " + data['namespace']);
        }

        return true;
    }


}

Hsm.RequiredProperties = ["element_name", "language", "localizable_params", "namespace"];

/**
 * The element name that indicates which template to use within the namespace
 * @member {String} element_name
 */
Hsm.prototype['element_name'] = undefined;

/**
 * @member {module:model/Language} language
 */
Hsm.prototype['language'] = undefined;

/**
 * This field is an array of values to apply to variables in the template
 * @member {Array.<module:model/LocalizableParam>} localizable_params
 */
Hsm.prototype['localizable_params'] = undefined;

/**
 * The namespace that will be used
 * @member {String} namespace
 */
Hsm.prototype['namespace'] = undefined;






export default Hsm;

