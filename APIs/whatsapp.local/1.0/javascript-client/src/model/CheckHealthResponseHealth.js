/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GatewayNodeStatus from './GatewayNodeStatus';
import GatewayStatus from './GatewayStatus';

/**
 * The CheckHealthResponseHealth model module.
 * @module model/CheckHealthResponseHealth
 * @version 1.0
 */
class CheckHealthResponseHealth {
    /**
     * Constructs a new <code>CheckHealthResponseHealth</code>.
     * @alias module:model/CheckHealthResponseHealth
     * @param {(module:model/GatewayStatus|module:model/{String: GatewayNodeStatus})} instance The actual instance to initialize CheckHealthResponseHealth.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "GatewayStatus") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GatewayStatus.validateJSON(instance); // throw an exception if no match
                // create GatewayStatus from JS object
                this.actualInstance = GatewayStatus.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GatewayStatus
            errorMessages.push("Failed to construct GatewayStatus: " + err)
        }

        try {
            if (typeof instance === "{String: GatewayNodeStatus}") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                {String: GatewayNodeStatus}.validateJSON(instance); // throw an exception if no match
                // create {String: GatewayNodeStatus} from JS object
                this.actualInstance = {String: GatewayNodeStatus}.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into {String: GatewayNodeStatus}
            errorMessages.push("Failed to construct {String: GatewayNodeStatus}: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `CheckHealthResponseHealth` with oneOf schemas GatewayStatus, {String: GatewayNodeStatus}. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `CheckHealthResponseHealth` with oneOf schemas GatewayStatus, {String: GatewayNodeStatus}. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>CheckHealthResponseHealth</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CheckHealthResponseHealth} obj Optional instance to populate.
     * @return {module:model/CheckHealthResponseHealth} The populated <code>CheckHealthResponseHealth</code> instance.
     */
    static constructFromObject(data, obj) {
        return new CheckHealthResponseHealth(data);
    }

    /**
     * Gets the actual instance, which can be <code>GatewayStatus</code>, <code>{String: GatewayNodeStatus}</code>.
     * @return {(module:model/GatewayStatus|module:model/{String: GatewayNodeStatus})} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>GatewayStatus</code>, <code>{String: GatewayNodeStatus}</code>.
     * @param {(module:model/GatewayStatus|module:model/{String: GatewayNodeStatus})} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = CheckHealthResponseHealth.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of CheckHealthResponseHealth from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/CheckHealthResponseHealth} An instance of CheckHealthResponseHealth.
     */
    static fromJSON = function(json_string){
        return CheckHealthResponseHealth.constructFromObject(JSON.parse(json_string));
    }
}


CheckHealthResponseHealth.OneOf = ["GatewayStatus", "{String: GatewayNodeStatus}"];

export default CheckHealthResponseHealth;

