/**
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RegisterAccountRequestBody from '../model/RegisterAccountRequestBody';
import RequestCodeRequestBody from '../model/RequestCodeRequestBody';
import RequestCodeResponse from '../model/RequestCodeResponse';

/**
* Registration service.
* @module api/RegistrationApi
* @version 1.0
*/
export default class RegistrationApi {

    /**
    * Constructs a new RegistrationApi. 
    * @alias module:api/RegistrationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the registerAccount operation.
     * @callback module:api/RegistrationApi~registerAccountCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Register-Account
     * @param {module:model/RegisterAccountRequestBody} registerAccountRequestBody 
     * @param {module:api/RegistrationApi~registerAccountCallback} callback The callback function, accepting three arguments: error, data, response
     */
    registerAccount(registerAccountRequestBody, callback) {
      let postBody = registerAccountRequestBody;
      // verify the required parameter 'registerAccountRequestBody' is set
      if (registerAccountRequestBody === undefined || registerAccountRequestBody === null) {
        throw new Error("Missing the required parameter 'registerAccountRequestBody' when calling registerAccount");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/account/verify', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestCode operation.
     * @callback module:api/RegistrationApi~requestCodeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Request-Code
     * @param {module:model/RequestCodeRequestBody} requestCodeRequestBody 
     * @param {module:api/RegistrationApi~requestCodeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    requestCode(requestCodeRequestBody, callback) {
      let postBody = requestCodeRequestBody;
      // verify the required parameter 'requestCodeRequestBody' is set
      if (requestCodeRequestBody === undefined || requestCodeRequestBody === null) {
        throw new Error("Missing the required parameter 'requestCodeRequestBody' when calling requestCode");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/account', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
