/**
 * Mailscript
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddActionForwardRequest_config.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddActionForwardRequest_config::OAIAddActionForwardRequest_config(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddActionForwardRequest_config::OAIAddActionForwardRequest_config() {
    this->initializeModel();
}

OAIAddActionForwardRequest_config::~OAIAddActionForwardRequest_config() {}

void OAIAddActionForwardRequest_config::initializeModel() {

    m_forward_isSet = false;
    m_forward_isValid = false;

    m_from_isSet = false;
    m_from_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIAddActionForwardRequest_config::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddActionForwardRequest_config::fromJsonObject(QJsonObject json) {

    m_forward_isValid = ::OpenAPI::fromJsonValue(m_forward, json[QString("forward")]);
    m_forward_isSet = !json[QString("forward")].isNull() && m_forward_isValid;

    m_from_isValid = ::OpenAPI::fromJsonValue(m_from, json[QString("from")]);
    m_from_isSet = !json[QString("from")].isNull() && m_from_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIAddActionForwardRequest_config::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddActionForwardRequest_config::asJsonObject() const {
    QJsonObject obj;
    if (m_forward_isSet) {
        obj.insert(QString("forward"), ::OpenAPI::toJsonValue(m_forward));
    }
    if (m_from_isSet) {
        obj.insert(QString("from"), ::OpenAPI::toJsonValue(m_from));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIAddActionForwardRequest_config::getForward() const {
    return m_forward;
}
void OAIAddActionForwardRequest_config::setForward(const QString &forward) {
    m_forward = forward;
    m_forward_isSet = true;
}

bool OAIAddActionForwardRequest_config::is_forward_Set() const{
    return m_forward_isSet;
}

bool OAIAddActionForwardRequest_config::is_forward_Valid() const{
    return m_forward_isValid;
}

QString OAIAddActionForwardRequest_config::getFrom() const {
    return m_from;
}
void OAIAddActionForwardRequest_config::setFrom(const QString &from) {
    m_from = from;
    m_from_isSet = true;
}

bool OAIAddActionForwardRequest_config::is_from_Set() const{
    return m_from_isSet;
}

bool OAIAddActionForwardRequest_config::is_from_Valid() const{
    return m_from_isValid;
}

QString OAIAddActionForwardRequest_config::getKey() const {
    return m_key;
}
void OAIAddActionForwardRequest_config::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIAddActionForwardRequest_config::is_key_Set() const{
    return m_key_isSet;
}

bool OAIAddActionForwardRequest_config::is_key_Valid() const{
    return m_key_isValid;
}

QString OAIAddActionForwardRequest_config::getType() const {
    return m_type;
}
void OAIAddActionForwardRequest_config::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIAddActionForwardRequest_config::is_type_Set() const{
    return m_type_isSet;
}

bool OAIAddActionForwardRequest_config::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIAddActionForwardRequest_config::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_forward_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddActionForwardRequest_config::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_forward_isValid && m_from_isValid && m_key_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
