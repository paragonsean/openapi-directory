/**
 * Mailscript
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISendRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISendRequest::OAISendRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISendRequest::OAISendRequest() {
    this->initializeModel();
}

OAISendRequest::~OAISendRequest() {}

void OAISendRequest::initializeModel() {

    m_from_isSet = false;
    m_from_isValid = false;

    m_html_isSet = false;
    m_html_isValid = false;

    m_subject_isSet = false;
    m_subject_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;

    m_to_isSet = false;
    m_to_isValid = false;
}

void OAISendRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISendRequest::fromJsonObject(QJsonObject json) {

    m_from_isValid = ::OpenAPI::fromJsonValue(m_from, json[QString("from")]);
    m_from_isSet = !json[QString("from")].isNull() && m_from_isValid;

    m_html_isValid = ::OpenAPI::fromJsonValue(m_html, json[QString("html")]);
    m_html_isSet = !json[QString("html")].isNull() && m_html_isValid;

    m_subject_isValid = ::OpenAPI::fromJsonValue(m_subject, json[QString("subject")]);
    m_subject_isSet = !json[QString("subject")].isNull() && m_subject_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;

    m_to_isValid = ::OpenAPI::fromJsonValue(m_to, json[QString("to")]);
    m_to_isSet = !json[QString("to")].isNull() && m_to_isValid;
}

QString OAISendRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISendRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_from_isSet) {
        obj.insert(QString("from"), ::OpenAPI::toJsonValue(m_from));
    }
    if (m_html_isSet) {
        obj.insert(QString("html"), ::OpenAPI::toJsonValue(m_html));
    }
    if (m_subject_isSet) {
        obj.insert(QString("subject"), ::OpenAPI::toJsonValue(m_subject));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    if (m_to_isSet) {
        obj.insert(QString("to"), ::OpenAPI::toJsonValue(m_to));
    }
    return obj;
}

QString OAISendRequest::getFrom() const {
    return m_from;
}
void OAISendRequest::setFrom(const QString &from) {
    m_from = from;
    m_from_isSet = true;
}

bool OAISendRequest::is_from_Set() const{
    return m_from_isSet;
}

bool OAISendRequest::is_from_Valid() const{
    return m_from_isValid;
}

QString OAISendRequest::getHtml() const {
    return m_html;
}
void OAISendRequest::setHtml(const QString &html) {
    m_html = html;
    m_html_isSet = true;
}

bool OAISendRequest::is_html_Set() const{
    return m_html_isSet;
}

bool OAISendRequest::is_html_Valid() const{
    return m_html_isValid;
}

QString OAISendRequest::getSubject() const {
    return m_subject;
}
void OAISendRequest::setSubject(const QString &subject) {
    m_subject = subject;
    m_subject_isSet = true;
}

bool OAISendRequest::is_subject_Set() const{
    return m_subject_isSet;
}

bool OAISendRequest::is_subject_Valid() const{
    return m_subject_isValid;
}

QString OAISendRequest::getText() const {
    return m_text;
}
void OAISendRequest::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAISendRequest::is_text_Set() const{
    return m_text_isSet;
}

bool OAISendRequest::is_text_Valid() const{
    return m_text_isValid;
}

QString OAISendRequest::getTo() const {
    return m_to;
}
void OAISendRequest::setTo(const QString &to) {
    m_to = to;
    m_to_isSet = true;
}

bool OAISendRequest::is_to_Set() const{
    return m_to_isSet;
}

bool OAISendRequest::is_to_Valid() const{
    return m_to_isValid;
}

bool OAISendRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_html_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subject_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISendRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_from_isValid && m_subject_isValid && m_to_isValid && true;
}

} // namespace OpenAPI
