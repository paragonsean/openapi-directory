/**
 * Mailscript
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWorkspace.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWorkspace::OAIWorkspace(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWorkspace::OAIWorkspace() {
    this->initializeModel();
}

OAIWorkspace::~OAIWorkspace() {}

void OAIWorkspace::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_owner_isSet = false;
    m_owner_isValid = false;
}

void OAIWorkspace::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWorkspace::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("createdBy")]);
    m_created_by_isSet = !json[QString("createdBy")].isNull() && m_created_by_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_owner_isValid = ::OpenAPI::fromJsonValue(m_owner, json[QString("owner")]);
    m_owner_isSet = !json[QString("owner")].isNull() && m_owner_isValid;
}

QString OAIWorkspace::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWorkspace::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_created_by_isSet) {
        obj.insert(QString("createdBy"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_owner_isSet) {
        obj.insert(QString("owner"), ::OpenAPI::toJsonValue(m_owner));
    }
    return obj;
}

QDateTime OAIWorkspace::getCreatedAt() const {
    return m_created_at;
}
void OAIWorkspace::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIWorkspace::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIWorkspace::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIWorkspace::getCreatedBy() const {
    return m_created_by;
}
void OAIWorkspace::setCreatedBy(const QString &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIWorkspace::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIWorkspace::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QString OAIWorkspace::getId() const {
    return m_id;
}
void OAIWorkspace::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIWorkspace::is_id_Set() const{
    return m_id_isSet;
}

bool OAIWorkspace::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIWorkspace::getOwner() const {
    return m_owner;
}
void OAIWorkspace::setOwner(const QString &owner) {
    m_owner = owner;
    m_owner_isSet = true;
}

bool OAIWorkspace::is_owner_Set() const{
    return m_owner_isSet;
}

bool OAIWorkspace::is_owner_Valid() const{
    return m_owner_isValid;
}

bool OAIWorkspace::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWorkspace::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_created_at_isValid && m_created_by_isValid && m_id_isValid && m_owner_isValid && true;
}

} // namespace OpenAPI
