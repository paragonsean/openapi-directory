/**
 * Mailscript
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddActionWebhookRequest_config_opts.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddActionWebhookRequest_config_opts::OAIAddActionWebhookRequest_config_opts(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddActionWebhookRequest_config_opts::OAIAddActionWebhookRequest_config_opts() {
    this->initializeModel();
}

OAIAddActionWebhookRequest_config_opts::~OAIAddActionWebhookRequest_config_opts() {}

void OAIAddActionWebhookRequest_config_opts::initializeModel() {

    m_headers_isSet = false;
    m_headers_isValid = false;

    m_method_isSet = false;
    m_method_isValid = false;
}

void OAIAddActionWebhookRequest_config_opts::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddActionWebhookRequest_config_opts::fromJsonObject(QJsonObject json) {

    m_headers_isValid = ::OpenAPI::fromJsonValue(m_headers, json[QString("headers")]);
    m_headers_isSet = !json[QString("headers")].isNull() && m_headers_isValid;

    m_method_isValid = ::OpenAPI::fromJsonValue(m_method, json[QString("method")]);
    m_method_isSet = !json[QString("method")].isNull() && m_method_isValid;
}

QString OAIAddActionWebhookRequest_config_opts::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddActionWebhookRequest_config_opts::asJsonObject() const {
    QJsonObject obj;
    if (m_headers_isSet) {
        obj.insert(QString("headers"), ::OpenAPI::toJsonValue(m_headers));
    }
    if (m_method_isSet) {
        obj.insert(QString("method"), ::OpenAPI::toJsonValue(m_method));
    }
    return obj;
}

OAIObject OAIAddActionWebhookRequest_config_opts::getHeaders() const {
    return m_headers;
}
void OAIAddActionWebhookRequest_config_opts::setHeaders(const OAIObject &headers) {
    m_headers = headers;
    m_headers_isSet = true;
}

bool OAIAddActionWebhookRequest_config_opts::is_headers_Set() const{
    return m_headers_isSet;
}

bool OAIAddActionWebhookRequest_config_opts::is_headers_Valid() const{
    return m_headers_isValid;
}

QString OAIAddActionWebhookRequest_config_opts::getMethod() const {
    return m_method;
}
void OAIAddActionWebhookRequest_config_opts::setMethod(const QString &method) {
    m_method = method;
    m_method_isSet = true;
}

bool OAIAddActionWebhookRequest_config_opts::is_method_Set() const{
    return m_method_isSet;
}

bool OAIAddActionWebhookRequest_config_opts::is_method_Valid() const{
    return m_method_isValid;
}

bool OAIAddActionWebhookRequest_config_opts::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_headers_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_method_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddActionWebhookRequest_config_opts::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_headers_isValid && m_method_isValid && true;
}

} // namespace OpenAPI
