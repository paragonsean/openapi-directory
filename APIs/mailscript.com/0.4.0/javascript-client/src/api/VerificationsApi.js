/**
 * Mailscript
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AddVerificationRequest from '../model/AddVerificationRequest';
import AddVerificationResponse from '../model/AddVerificationResponse';
import ErrorResponse from '../model/ErrorResponse';
import GetAllVerificationsResponse from '../model/GetAllVerificationsResponse';
import VerifyRequest from '../model/VerifyRequest';

/**
* Verifications service.
* @module api/VerificationsApi
* @version 0.4.0
*/
export default class VerificationsApi {

    /**
    * Constructs a new VerificationsApi. 
    * @alias module:api/VerificationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the addVerification operation.
     * @callback module:api/VerificationsApi~addVerificationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AddVerificationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Start verification process for external email address or sms number
     * @param {module:model/AddVerificationRequest} addVerificationRequest Key body
     * @param {module:api/VerificationsApi~addVerificationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AddVerificationResponse}
     */
    addVerification(addVerificationRequest, callback) {
      let postBody = addVerificationRequest;
      // verify the required parameter 'addVerificationRequest' is set
      if (addVerificationRequest === undefined || addVerificationRequest === null) {
        throw new Error("Missing the required parameter 'addVerificationRequest' when calling addVerification");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AddVerificationResponse;
      return this.apiClient.callApi(
        '/verifications', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllVerifications operation.
     * @callback module:api/VerificationsApi~getAllVerificationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAllVerificationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all verificats for the user
     * @param {module:api/VerificationsApi~getAllVerificationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAllVerificationsResponse}
     */
    getAllVerifications(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAllVerificationsResponse;
      return this.apiClient.callApi(
        '/verifications', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the verify operation.
     * @callback module:api/VerificationsApi~verifyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Verify an email address or sms number with a code
     * @param {String} verification ID of the verification entry
     * @param {module:model/VerifyRequest} verifyRequest Verify action body
     * @param {module:api/VerificationsApi~verifyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    verify(verification, verifyRequest, callback) {
      let postBody = verifyRequest;
      // verify the required parameter 'verification' is set
      if (verification === undefined || verification === null) {
        throw new Error("Missing the required parameter 'verification' when calling verify");
      }
      // verify the required parameter 'verifyRequest' is set
      if (verifyRequest === undefined || verifyRequest === null) {
        throw new Error("Missing the required parameter 'verifyRequest' when calling verify");
      }

      let pathParams = {
        'verification': verification
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/verifications/{verification}/verify', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
