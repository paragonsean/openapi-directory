/**
 * Mailscript
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import GetDaemonToken200Response from '../model/GetDaemonToken200Response';

/**
* Daemon service.
* @module api/DaemonApi
* @version 0.4.0
*/
export default class DaemonApi {

    /**
    * Constructs a new DaemonApi. 
    * @alias module:api/DaemonApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getDaemonToken operation.
     * @callback module:api/DaemonApi~getDaemonTokenCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetDaemonToken200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a token for opening a daemon connection
     * @param {String} daemon name of Daemon
     * @param {module:api/DaemonApi~getDaemonTokenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetDaemonToken200Response}
     */
    getDaemonToken(daemon, callback) {
      let postBody = null;
      // verify the required parameter 'daemon' is set
      if (daemon === undefined || daemon === null) {
        throw new Error("Missing the required parameter 'daemon' when calling getDaemonToken");
      }

      let pathParams = {
        'daemon': daemon
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetDaemonToken200Response;
      return this.apiClient.callApi(
        '/daemons/{daemon}/token', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
