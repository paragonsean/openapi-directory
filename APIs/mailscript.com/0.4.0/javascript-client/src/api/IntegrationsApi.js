/**
 * Mailscript
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import GetAllIntegrationsResponse from '../model/GetAllIntegrationsResponse';

/**
* Integrations service.
* @module api/IntegrationsApi
* @version 0.4.0
*/
export default class IntegrationsApi {

    /**
    * Constructs a new IntegrationsApi. 
    * @alias module:api/IntegrationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteIntegration operation.
     * @callback module:api/IntegrationsApi~deleteIntegrationCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an integration
     * @param {String} integration ID of the integration
     * @param {module:api/IntegrationsApi~deleteIntegrationCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteIntegration(integration, callback) {
      let postBody = null;
      // verify the required parameter 'integration' is set
      if (integration === undefined || integration === null) {
        throw new Error("Missing the required parameter 'integration' when calling deleteIntegration");
      }

      let pathParams = {
        'integration': integration
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/integrations/{integration}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllIntegrations operation.
     * @callback module:api/IntegrationsApi~getAllIntegrationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAllIntegrationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all integrations for the user
     * @param {module:api/IntegrationsApi~getAllIntegrationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAllIntegrationsResponse}
     */
    getAllIntegrations(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAllIntegrationsResponse;
      return this.apiClient.callApi(
        '/integrations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
