/**
 * Mailscript
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AddAddressRequest from '../model/AddAddressRequest';
import ErrorResponse from '../model/ErrorResponse';
import GetAllAddressesResponse from '../model/GetAllAddressesResponse';

/**
* Addresses service.
* @module api/AddressesApi
* @version 0.4.0
*/
export default class AddressesApi {

    /**
    * Constructs a new AddressesApi. 
    * @alias module:api/AddressesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the addAddress operation.
     * @callback module:api/AddressesApi~addAddressCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Claim a new Mailscript address
     * 
     * @param {module:model/AddAddressRequest} addAddressRequest Address body
     * @param {module:api/AddressesApi~addAddressCallback} callback The callback function, accepting three arguments: error, data, response
     */
    addAddress(addAddressRequest, callback) {
      let postBody = addAddressRequest;
      // verify the required parameter 'addAddressRequest' is set
      if (addAddressRequest === undefined || addAddressRequest === null) {
        throw new Error("Missing the required parameter 'addAddressRequest' when calling addAddress");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/addresses', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAddress operation.
     * @callback module:api/AddressesApi~deleteAddressCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a mailscript address
     * 
     * @param {String} address ID of address
     * @param {module:api/AddressesApi~deleteAddressCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteAddress(address, callback) {
      let postBody = null;
      // verify the required parameter 'address' is set
      if (address === undefined || address === null) {
        throw new Error("Missing the required parameter 'address' when calling deleteAddress");
      }

      let pathParams = {
        'address': address
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/addresses/{address}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllAddresses operation.
     * @callback module:api/AddressesApi~getAllAddressesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAllAddressesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all addresses you have access to
     * 
     * @param {module:api/AddressesApi~getAllAddressesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAllAddressesResponse}
     */
    getAllAddresses(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAllAddressesResponse;
      return this.apiClient.callApi(
        '/addresses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
