/**
 * Mailscript
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VerificationSms model module.
 * @module model/VerificationSms
 * @version 0.4.0
 */
class VerificationSms {
    /**
     * Constructs a new <code>VerificationSms</code>.
     * @alias module:model/VerificationSms
     */
    constructor() { 
        
        VerificationSms.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VerificationSms</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VerificationSms} obj Optional instance to populate.
     * @return {module:model/VerificationSms} The populated <code>VerificationSms</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VerificationSms();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('sms')) {
                obj['sms'] = ApiClient.convertToType(data['sms'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('verified')) {
                obj['verified'] = ApiClient.convertToType(data['verified'], 'Boolean');
            }
            if (data.hasOwnProperty('verifiedAt')) {
                obj['verifiedAt'] = ApiClient.convertToType(data['verifiedAt'], 'Date');
            }
            if (data.hasOwnProperty('verifiedBy')) {
                obj['verifiedBy'] = ApiClient.convertToType(data['verifiedBy'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VerificationSms</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VerificationSms</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['sms'] && !(typeof data['sms'] === 'string' || data['sms'] instanceof String)) {
            throw new Error("Expected the field `sms` to be a primitive type in the JSON string but got " + data['sms']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['verifiedBy'] && !(typeof data['verifiedBy'] === 'string' || data['verifiedBy'] instanceof String)) {
            throw new Error("Expected the field `verifiedBy` to be a primitive type in the JSON string but got " + data['verifiedBy']);
        }

        return true;
    }


}



/**
 * @member {String} id
 */
VerificationSms.prototype['id'] = undefined;

/**
 * @member {String} sms
 */
VerificationSms.prototype['sms'] = undefined;

/**
 * @member {module:model/VerificationSms.TypeEnum} type
 */
VerificationSms.prototype['type'] = undefined;

/**
 * @member {Boolean} verified
 */
VerificationSms.prototype['verified'] = undefined;

/**
 * @member {Date} verifiedAt
 */
VerificationSms.prototype['verifiedAt'] = undefined;

/**
 * @member {String} verifiedBy
 */
VerificationSms.prototype['verifiedBy'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
VerificationSms['TypeEnum'] = {

    /**
     * value: "sms"
     * @const
     */
    "sms": "sms"
};



export default VerificationSms;

