/**
 * Mailscript
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActionCombine model module.
 * @module model/ActionCombine
 * @version 0.4.0
 */
class ActionCombine {
    /**
     * Constructs a new <code>ActionCombine</code>.
     * @alias module:model/ActionCombine
     * @param createdAt {Date} 
     * @param createdBy {String} 
     * @param id {String} 
     * @param name {String} 
     * @param owner {String} 
     */
    constructor(createdAt, createdBy, id, name, owner) { 
        
        ActionCombine.initialize(this, createdAt, createdBy, id, name, owner);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, createdBy, id, name, owner) { 
        obj['createdAt'] = createdAt;
        obj['createdBy'] = createdBy;
        obj['id'] = id;
        obj['name'] = name;
        obj['owner'] = owner;
    }

    /**
     * Constructs a <code>ActionCombine</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActionCombine} obj Optional instance to populate.
     * @return {module:model/ActionCombine} The populated <code>ActionCombine</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActionCombine();

            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('list')) {
                obj['list'] = ApiClient.convertToType(data['list'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActionCombine</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActionCombine</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ActionCombine.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['createdBy'] && !(typeof data['createdBy'] === 'string' || data['createdBy'] instanceof String)) {
            throw new Error("Expected the field `createdBy` to be a primitive type in the JSON string but got " + data['createdBy']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['list'])) {
            throw new Error("Expected the field `list` to be an array in the JSON data but got " + data['list']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['owner'] && !(typeof data['owner'] === 'string' || data['owner'] instanceof String)) {
            throw new Error("Expected the field `owner` to be a primitive type in the JSON string but got " + data['owner']);
        }

        return true;
    }


}

ActionCombine.RequiredProperties = ["createdAt", "createdBy", "id", "name", "owner"];

/**
 * @member {Date} createdAt
 */
ActionCombine.prototype['createdAt'] = undefined;

/**
 * @member {String} createdBy
 */
ActionCombine.prototype['createdBy'] = undefined;

/**
 * @member {String} id
 */
ActionCombine.prototype['id'] = undefined;

/**
 * @member {Array.<String>} list
 */
ActionCombine.prototype['list'] = undefined;

/**
 * @member {String} name
 */
ActionCombine.prototype['name'] = undefined;

/**
 * @member {String} owner
 */
ActionCombine.prototype['owner'] = undefined;






export default ActionCombine;

