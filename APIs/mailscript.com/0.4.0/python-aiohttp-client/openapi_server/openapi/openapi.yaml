openapi: 3.0.0
info:
  license:
    name: MIT
  title: Mailscript
  version: 0.4.0
  x-apisguru-categories:
  - email
  x-logo:
    url: https://mailscript.com/images/favicon.png
  x-origin:
  - format: openapi
    url: http://api.mailscript.com/v2/swagger
    version: "3.0"
  x-providerName: mailscript.com
servers:
- description: API server
  url: https://api.mailscript.com/v2
security:
- bearerAuth: []
paths:
  /actions:
    get:
      operationId: get_all_actions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllActionsResponse'
          description: Successful operation
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
      summary: Get all actions for the user
      tags:
      - actions
      x-openapi-router-controller: openapi_server.controllers.actions_controller
    post:
      operationId: add_action
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addAction_request'
        description: Add action body
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              examples:
                list:
                  value: |-
                    [
                    "hielle.com"
                    ]
              schema:
                $ref: '#/components/schemas/AddActionResponse'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failure
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not authorized or bad code
      summary: Add an action
      tags:
      - actions
      x-openapi-router-controller: openapi_server.controllers.actions_controller
      x-codegen-request-body-name: body
  /actions/{action}:
    delete:
      operationId: delete_action
      parameters:
      - description: ID of the action
        explode: false
        in: path
        name: action
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful delete operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failure
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Key not found
      summary: Delete an action
      tags:
      - actions
      x-openapi-router-controller: openapi_server.controllers.actions_controller
    put:
      operationId: update_action
      parameters:
      - description: ID of action
        explode: false
        in: path
        name: action
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addAction_request'
        description: Action body
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
          description: Successful update operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failure
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Key not found
      summary: Update an action key
      tags:
      - actions
      x-openapi-router-controller: openapi_server.controllers.actions_controller
      x-codegen-request-body-name: body
  /addresses:
    get:
      description: ""
      operationId: get_all_addresses
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllAddressesResponse'
          description: successful operation
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: Get all addresses you have access to
      tags:
      - addresses
      x-openapi-router-controller: openapi_server.controllers.addresses_controller
    post:
      description: ""
      operationId: add_address
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAddressRequest'
        description: Address body
        required: true
        x-body-name: body
      responses:
        "200":
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: Claim a new Mailscript address
      tags:
      - addresses
      x-openapi-router-controller: openapi_server.controllers.addresses_controller
      x-codegen-request-body-name: body
  /addresses/{address}:
    delete:
      description: ""
      operationId: delete_address
      parameters:
      - description: ID of address
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: successful delete operation
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: Delete a mailscript address
      tags:
      - addresses
      x-openapi-router-controller: openapi_server.controllers.addresses_controller
  /addresses/{address}/keys:
    get:
      operationId: get_all_keys
      parameters:
      - description: ID of address
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllKeysResponse'
          description: successful operation
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Address not found
      summary: List address keys
      tags:
      - keys
      x-openapi-router-controller: openapi_server.controllers.keys_controller
    post:
      operationId: add_key
      parameters:
      - description: ID of address
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddKeyRequest'
        description: Key body
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddKeyResponse'
          description: successful operation
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Address not found
      summary: Add address key
      tags:
      - keys
      x-openapi-router-controller: openapi_server.controllers.keys_controller
      x-codegen-request-body-name: body
  /addresses/{address}/keys/{key}:
    delete:
      operationId: delete_key
      parameters:
      - description: ID of address
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      - description: ID of key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful delete operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failure
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Key not found
      summary: Delete address key
      tags:
      - keys
      x-openapi-router-controller: openapi_server.controllers.keys_controller
    get:
      operationId: get_key
      parameters:
      - description: ID of address
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      - description: ID of key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
          description: successful operation
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Key not found
      summary: Get address key
      tags:
      - keys
      x-openapi-router-controller: openapi_server.controllers.keys_controller
    put:
      operationId: update_key
      parameters:
      - description: ID of address
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      - description: ID of key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKeyRequest'
        description: Key body
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failure
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Key not found
      summary: Update an address key
      tags:
      - keys
      x-openapi-router-controller: openapi_server.controllers.keys_controller
      x-codegen-request-body-name: body
  /daemons/{daemon}/token:
    get:
      operationId: get_daemon_token
      parameters:
      - description: name of Daemon
        explode: false
        in: path
        name: daemon
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDaemonToken_200_response'
          description: Successful get operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failure
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
      summary: Get a token for opening a daemon connection
      tags:
      - daemon
      x-openapi-router-controller: openapi_server.controllers.daemon_controller
  /domains:
    get:
      description: ""
      operationId: get_all_domains
      responses:
        "200":
          content:
            application/json:
              examples:
                list:
                  value: |-
                    {
                    "list": ["hielle.com"]
                    }
              schema:
                $ref: '#/components/schemas/GetAllDomainsResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: Get all domains you have access to
      tags:
      - domains
      x-openapi-router-controller: openapi_server.controllers.domains_controller
    post:
      description: ""
      operationId: add_domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDomainRequest'
        description: Domain body
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                Add:
                  value: |-
                    {
                      "id": "hielle.com",
                      "records": [
                        {
                          "type:" "TXT",
                          "name": "@",
                          "value": "ms_verify=eecbb911-d940-41ea-8fc2-2c83295f418b"
                        }
                      ]
                    }
              schema:
                $ref: '#/components/schemas/DomainResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: Claim a new Domain
      tags:
      - domains
      x-openapi-router-controller: openapi_server.controllers.domains_controller
      x-codegen-request-body-name: body
  /domains/verify/{domain}:
    get:
      description: ""
      operationId: get_domain_verify
      parameters:
      - description: Full Top-level domain name
        explode: false
        in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Domain verification record:
                  value: |-
                    {
                      "id": "hielle.com",
                      "records": [
                        {
                          "type:" "TXT",
                          "name": "@",
                          "value": "ms_verify=eecbb911-d940-41ea-8fc2-2c83295f418b"
                        }
                      ]
                    }
              schema:
                $ref: '#/components/schemas/DomainResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: Get domain verification
      tags:
      - domains
      x-openapi-router-controller: openapi_server.controllers.domains_controller
    post:
      description: ""
      operationId: check_domain_verify
      parameters:
      - description: Full Top-level domain name
        explode: false
        in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                checkDomainVerify:
                  value: |-
                    {
                    "id":"hielle.com",
                    "success": true
                    }
              schema:
                $ref: '#/components/schemas/CheckDomainVerify'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authorization failed
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: Check a new Domain
      tags:
      - domains
      x-openapi-router-controller: openapi_server.controllers.domains_controller
  /domains/{domain}:
    delete:
      description: ""
      operationId: remove_domain_verify
      parameters:
      - description: Full Top-level domain name
        explode: false
        in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: Remove a domain
      tags:
      - domains
      x-openapi-router-controller: openapi_server.controllers.domains_controller
  /inputs:
    get:
      description: ""
      operationId: get_all_inputs
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllInputsResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
      summary: Get all inputs you have access to
      tags:
      - inputs
      x-openapi-router-controller: openapi_server.controllers.inputs_controller
  /integrations:
    get:
      operationId: get_all_integrations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllIntegrationsResponse'
          description: Successful operation
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
      summary: Get all integrations for the user
      tags:
      - integrations
      x-openapi-router-controller: openapi_server.controllers.integrations_controller
  /integrations/{integration}:
    delete:
      operationId: delete_integration
      parameters:
      - description: ID of the integration
        explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful delete operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failure
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Key not found
      summary: Delete an integration
      tags:
      - integrations
      x-openapi-router-controller: openapi_server.controllers.integrations_controller
  /send:
    post:
      operationId: send
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendRequest'
        description: request body
        required: true
        x-body-name: body
      responses:
        "200":
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
      summary: Send an email
      tags:
      - send
      x-openapi-router-controller: openapi_server.controllers.send_controller
      x-codegen-request-body-name: body
  /triggers:
    get:
      description: ""
      operationId: get_all_triggers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllTriggersResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
      summary: Get all triggers you have access to
      tags:
      - triggers
      x-openapi-router-controller: openapi_server.controllers.triggers_controller
    post:
      description: ""
      operationId: add_trigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTriggerRequest'
        description: Trigger body
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTriggerResponse'
          description: successful add operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
      summary: Setup a trigger
      tags:
      - triggers
      x-openapi-router-controller: openapi_server.controllers.triggers_controller
      x-codegen-request-body-name: body
  /triggers/{trigger}:
    delete:
      operationId: delete_trigger
      parameters:
      - description: ID of the trigger
        explode: false
        in: path
        name: trigger
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful delete operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failure
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Key not found
      summary: Delete a trigger
      tags:
      - triggers
      x-openapi-router-controller: openapi_server.controllers.triggers_controller
    put:
      operationId: update_trigger
      parameters:
      - description: ID of the trigger
        explode: false
        in: path
        name: trigger
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTriggerRequest'
        description: Trigger body
        required: true
        x-body-name: body
      responses:
        "200":
          description: Successful update operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failure
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Key not found
      summary: Update a trigger
      tags:
      - triggers
      x-openapi-router-controller: openapi_server.controllers.triggers_controller
      x-codegen-request-body-name: body
  /user:
    get:
      operationId: get_authenticated_user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: successful operation
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
      summary: Get the authenticated user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    put:
      operationId: update_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        description: User body
        required: true
        x-body-name: body
      responses:
        "200":
          description: Successful update operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failure
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
      summary: Update a user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
      x-codegen-request-body-name: body
  /verifications:
    get:
      operationId: get_all_verifications
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllVerificationsResponse'
          description: Successful operation
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
      summary: Get all verificats for the user
      tags:
      - verifications
      x-openapi-router-controller: openapi_server.controllers.verifications_controller
    post:
      operationId: add_verification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addVerification_request'
        description: Key body
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddVerificationResponse'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failure
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
      summary: Start verification process for external email address or sms number
      tags:
      - verifications
      x-openapi-router-controller: openapi_server.controllers.verifications_controller
      x-codegen-request-body-name: body
  /verifications/{verification}/verify:
    post:
      operationId: verify
      parameters:
      - description: ID of the verification entry
        explode: false
        in: path
        name: verification
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/verify_request'
        description: Verify action body
        required: true
        x-body-name: body
      responses:
        "200":
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failure
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not authorized or bad code
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
      summary: Verify an email address or sms number with a code
      tags:
      - verifications
      x-openapi-router-controller: openapi_server.controllers.verifications_controller
      x-codegen-request-body-name: body
  /workflows:
    get:
      description: ""
      operationId: get_all_workflows
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllWorkflowsResponse'
          description: successful operation
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: Get all workflows you have access to
      tags:
      - workflows
      x-openapi-router-controller: openapi_server.controllers.workflows_controller
    post:
      description: ""
      operationId: add_workflow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddWorkflowRequest'
        description: Workflow body
        required: true
        x-body-name: body
      responses:
        "201":
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: Setup workflow
      tags:
      - workflows
      x-openapi-router-controller: openapi_server.controllers.workflows_controller
      x-codegen-request-body-name: body
  /workflows/set:
    post:
      operationId: set_workflow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetWorkflowRequest'
        description: Set Workflow body
        required: true
        x-body-name: body
      responses:
        "204":
          description: Successful update operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failure
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Key not found
      summary: Set a property on a workflow
      tags:
      - workflows
      x-openapi-router-controller: openapi_server.controllers.workflows_controller
      x-codegen-request-body-name: body
  /workflows/{workflow}:
    delete:
      operationId: delete_workflow
      parameters:
      - description: ID of the workflow
        explode: false
        in: path
        name: workflow
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful delete operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failure
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Key not found
      summary: Delete a workflow
      tags:
      - workflows
      x-openapi-router-controller: openapi_server.controllers.workflows_controller
    put:
      operationId: update_workflow
      parameters:
      - description: ID of the workflow
        explode: false
        in: path
        name: workflow
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddWorkflowRequest'
        description: Workflow body
        required: true
        x-body-name: body
      responses:
        "200":
          description: Successful update operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failure
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Key not found
      summary: Update an workflow
      tags:
      - workflows
      x-openapi-router-controller: openapi_server.controllers.workflows_controller
      x-codegen-request-body-name: body
  /workspaces:
    get:
      description: ""
      operationId: get_all_workspaces
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllWorkspacesResponse'
          description: successful operation
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: Get all workspaces you have access to
      tags:
      - workspaces
      x-openapi-router-controller: openapi_server.controllers.workspaces_controller
    post:
      description: An attendant address will be created as well
      operationId: add_workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddWorkspaceRequest'
        description: request body
        required: true
        x-body-name: body
      responses:
        "201":
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad credentials
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: Claim a Mailscript workspace
      tags:
      - workspaces
      x-openapi-router-controller: openapi_server.controllers.workspaces_controller
      x-codegen-request-body-name: body
components:
  schemas:
    ActionCombine:
      properties:
        createdAt:
          format: date-time
          title: createdAt
          type: string
        createdBy:
          title: createdBy
          type: string
        id:
          title: id
          type: string
        list:
          items:
            type: string
          title: list
          type: array
        name:
          title: name
          type: string
        owner:
          title: owner
          type: string
      required:
      - config
      - createdAt
      - createdBy
      - id
      - name
      - output
      - owner
      title: ActionCombine
    ActionSend:
      example:
        output: output
        owner: owner
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        id: id
        config:
          subject: subject
          html: html
          text: text
          type: type
      properties:
        config:
          $ref: '#/components/schemas/ActionSend_config'
        createdAt:
          format: date-time
          title: createdAt
          type: string
        createdBy:
          title: createdBy
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        output:
          title: output
          type: string
        owner:
          title: owner
          type: string
      required:
      - config
      - createdAt
      - createdBy
      - id
      - name
      - output
      - owner
      title: ActionSend
    AddActionAliasRequest:
      properties:
        config:
          $ref: '#/components/schemas/AddActionAliasRequest_config'
        name:
          title: name
          type: string
        type:
          enum:
          - mailscript-email
          title: type
          type: string
      required:
      - config
      - name
      - type
      title: AddActionAliasRequest
    AddActionCombineRequest:
      properties:
        list:
          items:
            type: string
          title: list
          type: array
        name:
          title: name
          type: string
      required:
      - list
      - name
      title: AddActionCombineRequest
    AddActionDaemonRequest:
      properties:
        config:
          $ref: '#/components/schemas/AddActionDaemonRequest_config'
        name:
          title: name
          type: string
        type:
          enum:
          - daemon
          title: type
          type: string
      required:
      - config
      - name
      - type
      title: AddActionDaemonRequest
    AddActionForwardRequest:
      properties:
        config:
          $ref: '#/components/schemas/AddActionForwardRequest_config'
        name:
          title: name
          type: string
        type:
          enum:
          - mailscript-email
          title: type
          type: string
      required:
      - config
      - name
      - type
      title: AddActionForwardRequest
    AddActionReplyAllRequest:
      properties:
        config:
          $ref: '#/components/schemas/AddActionReplyAllRequest_config'
        name:
          title: name
          type: string
        type:
          enum:
          - mailscript-email
          title: type
          type: string
      required:
      - config
      - name
      - type
      title: AddActionReplyAllRequest
    AddActionReplyRequest:
      properties:
        config:
          $ref: '#/components/schemas/AddActionReplyRequest_config'
        name:
          title: name
          type: string
        type:
          enum:
          - mailscript-email
          title: type
          type: string
      required:
      - config
      - name
      - type
      title: AddActionReplyRequest
    AddActionResponse:
      example:
        id: id
      properties:
        id:
          title: id
          type: string
      required:
      - id
      title: AddActionResponse
    AddActionSendRequest:
      properties:
        config:
          $ref: '#/components/schemas/AddActionSendRequest_config'
        name:
          title: name
          type: string
        type:
          enum:
          - mailscript-email
          title: type
          type: string
      required:
      - config
      - name
      - type
      title: AddActionSendRequest
    AddActionSmsRequest:
      properties:
        config:
          $ref: '#/components/schemas/AddActionSmsRequest_config'
        name:
          title: name
          type: string
        type:
          enum:
          - sms
          title: type
          type: string
      required:
      - config
      - name
      - type
      title: AddActionSmsRequest
    AddActionWebhookRequest:
      properties:
        config:
          $ref: '#/components/schemas/AddActionWebhookRequest_config'
        name:
          title: name
          type: string
        type:
          enum:
          - webhook
          title: type
          type: string
      required:
      - config
      - name
      - type
      title: AddActionWebhookRequest
    AddAddressRequest:
      example:
        address: address
      properties:
        address:
          title: address
          type: string
      required:
      - address
      title: AddAddressRequest
    AddDomainRequest:
      example:
        domain: domain
      properties:
        domain:
          title: domain
          type: string
      required:
      - domain
      title: AddDomainRequest
    AddEmailVerificationRequest:
      properties:
        email:
          title: email
          type: string
        type:
          enum:
          - email
          title: type
          type: string
      required:
      - email
      - type
      title: AddEmailVerificationRequest
    AddKeyRequest:
      example:
        read: true
        name: name
        write: true
      properties:
        name:
          title: name
          type: string
        read:
          title: read
          type: boolean
        write:
          title: write
          type: boolean
      required:
      - name
      - read
      - write
      title: AddKeyRequest
    AddKeyResponse:
      example:
        id: id
      properties:
        id:
          title: id
          type: string
      title: AddKeyResponse
    AddSmsVerificationRequest:
      properties:
        sms:
          title: sms
          type: string
        type:
          enum:
          - sms
          title: type
          type: string
      required:
      - sms
      - type
      title: AddSmsVerificationRequest
    AddTriggerRequest:
      example:
        criteria:
          sentTo: sentTo
          domain: domain
          from: from
          subjectContains: subjectContains
          hasAttachments: true
          hasTheWords: hasTheWords
        name: name
      properties:
        criteria:
          $ref: '#/components/schemas/AddTriggerRequest_criteria'
        name:
          title: name
          type: string
      required:
      - criteria
      - name
      title: AddTriggerRequest
    AddTriggerResponse:
      example:
        id: id
      properties:
        id:
          title: id
          type: string
      required:
      - id
      title: AddTriggerResponse
    AddVerificationResponse:
      example:
        id: id
      properties:
        id:
          title: id
          type: string
      required:
      - id
      title: AddVerificationResponse
    AddWorkflowRequest:
      example:
        input: input
        name: name
        action: action
        active: true
        trigger: trigger
      properties:
        action:
          title: action
          type: string
        active:
          title: active
          type: boolean
        input:
          title: input
          type: string
        name:
          title: name
          type: string
        trigger:
          title: trigger
          type: string
      required:
      - action
      - input
      - name
      title: AddWorkflowRequest
    AddWorkspaceRequest:
      example:
        workspace: workspace
      properties:
        workspace:
          title: workspace
          type: string
      required:
      - workspace
      title: AddWorkspaceRequest
    Address:
      example:
        owner: owner
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        displayName: displayName
        id: id
      properties:
        createdAt:
          format: date-time
          title: createdAt
          type: string
        createdBy:
          title: createdBy
          type: string
        displayName:
          title: displayName
          type: string
        id:
          title: id
          type: string
        owner:
          title: owner
          type: string
      required:
      - createdAt
      - createdBy
      - id
      - owner
      title: Address
    CheckDomainVerify:
      example:
        success: true
        domain: domain
      properties:
        domain:
          title: domain
          type: string
        success:
          title: success
          type: boolean
      required:
      - domain
      - success
      title: CheckDomainVerify
    Criteria:
      example:
        sentTo: sentTo
        domain: domain
        from: from
        subjectContains: subjectContains
        hasAttachments: true
        hasTheWords: hasTheWords
      minProperties: 1
      properties:
        domain:
          title: domain
          type: string
        from:
          title: from
          type: string
        hasAttachments:
          title: hasAttachments
          type: boolean
        hasTheWords:
          title: hasTheWords
          type: string
        sentTo:
          title: sentTo
          type: string
        subjectContains:
          title: subjectContains
          type: string
      title: Criteria
    CriteriaOperand:
      minProperties: 1
      properties:
        and:
          items:
            type: string
          title: and
          type: array
        or:
          items:
            type: string
          title: or
          type: array
      title: CriteriaOperand
    DomainResponse:
      example:
        records:
        - name: name
          type: type
          value: value
        - name: name
          type: type
          value: value
        domain: domain
      properties:
        domain:
          title: domain
          type: string
        records:
          items:
            $ref: '#/components/schemas/DomainResponse_records_inner'
          title: records
          type: array
      required:
      - domain
      - records
      title: DomainResponse
    ErrorResponse:
      example:
        error: error
      properties:
        error:
          title: error
          type: string
      required:
      - error
      title: ErrorResponse
    GetAllActionsResponse:
      example:
        list:
        - output: output
          owner: owner
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          name: name
          id: id
          config:
            subject: subject
            html: html
            text: text
            type: type
        - output: output
          owner: owner
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          name: name
          id: id
          config:
            subject: subject
            html: html
            text: text
            type: type
      properties:
        list:
          items:
            $ref: '#/components/schemas/GetAllActionsResponse_list_inner'
          title: list
          type: array
      required:
      - list
      title: GetAllActionsResponse
    GetAllAddressesResponse:
      example:
        list:
        - owner: owner
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          displayName: displayName
          id: id
        - owner: owner
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          displayName: displayName
          id: id
      properties:
        list:
          items:
            $ref: '#/components/schemas/GetAllAddressesResponse_list_inner'
          title: list
          type: array
      required:
      - list
      title: GetAllAddressesResponse
    GetAllDomainsResponse:
      example:
        id:
        - id
        - id
      properties:
        id:
          items:
            type: string
          title: id
          type: array
      required:
      - list
      title: GetAllDomainsResponse
    GetAllInputsResponse:
      example:
        list:
        - owner: owner
          createdAt: 2000-01-23T04:56:07.000+00:00
          address: address
          createdBy: createdBy
          name: name
          id: id
          type: mailescript-email
        - owner: owner
          createdAt: 2000-01-23T04:56:07.000+00:00
          address: address
          createdBy: createdBy
          name: name
          id: id
          type: mailescript-email
      properties:
        list:
          items:
            $ref: '#/components/schemas/GetAllInputsResponse_list_inner'
          title: list
          type: array
      required:
      - list
      title: GetAllInputsResponse
    GetAllIntegrationsResponse:
      example:
        list:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          id: id
          type: google
        - createdAt: 2000-01-23T04:56:07.000+00:00
          id: id
          type: google
      properties:
        list:
          items:
            $ref: '#/components/schemas/GetAllIntegrationsResponse_list_inner'
          title: list
          type: array
      required:
      - list
      title: GetAllIntegrationsResponse
    GetAllKeysResponse:
      example:
        list:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          read: true
          createdBy: createdBy
          name: name
          id: id
          write: true
        - createdAt: 2000-01-23T04:56:07.000+00:00
          read: true
          createdBy: createdBy
          name: name
          id: id
          write: true
      properties:
        list:
          items:
            $ref: '#/components/schemas/GetAllKeysResponse_list_inner'
          title: list
          type: array
      required:
      - list
      title: GetAllKeysResponse
    GetAllTriggersResponse:
      example:
        list:
        - owner: owner
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          criteria:
            sentTo: sentTo
            domain: domain
            from: from
            subjectContains: subjectContains
            hasAttachments: true
            hasTheWords: hasTheWords
          displayName: displayName
          name: name
          id: id
        - owner: owner
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          criteria:
            sentTo: sentTo
            domain: domain
            from: from
            subjectContains: subjectContains
            hasAttachments: true
            hasTheWords: hasTheWords
          displayName: displayName
          name: name
          id: id
      properties:
        list:
          items:
            $ref: '#/components/schemas/GetAllTriggersResponse_list_inner'
          title: list
          type: array
      required:
      - list
      title: GetAllTriggersResponse
    GetAllVerificationsResponse:
      example:
        list:
        - verified: true
          verifiedAt: 2000-01-23T04:56:07.000+00:00
          id: id
          type: email
          verifiedBy: verifiedBy
          email: email
        - verified: true
          verifiedAt: 2000-01-23T04:56:07.000+00:00
          id: id
          type: email
          verifiedBy: verifiedBy
          email: email
      properties:
        list:
          items:
            $ref: '#/components/schemas/GetAllVerificationsResponse_list_inner'
          title: list
          type: array
      required:
      - list
      title: GetAllVerificationsResponse
    GetAllWorkflowsResponse:
      example:
        list:
        - owner: owner
          createdAt: 2000-01-23T04:56:07.000+00:00
          input: input
          createdBy: createdBy
          name: name
          action: action
          active: true
          id: id
          trigger: trigger
        - owner: owner
          createdAt: 2000-01-23T04:56:07.000+00:00
          input: input
          createdBy: createdBy
          name: name
          action: action
          active: true
          id: id
          trigger: trigger
      properties:
        list:
          items:
            $ref: '#/components/schemas/GetAllWorkflowsResponse_list_inner'
          title: list
          type: array
      required:
      - list
      title: GetAllWorkflowsResponse
    GetAllWorkspacesResponse:
      example:
        list:
        - owner: owner
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          id: id
        - owner: owner
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          id: id
      properties:
        list:
          items:
            $ref: '#/components/schemas/GetAllWorkspacesResponse_list_inner'
          title: list
          type: array
      required:
      - list
      title: GetAllWorkspacesResponse
    Integration:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        id: id
        type: google
      properties:
        createdAt:
          format: date-time
          title: createdAt
          type: string
        id:
          title: id
          type: string
        type:
          enum:
          - google
          title: type
          type: string
      required:
      - createdAt
      - id
      - type
      title: Integration
    Key:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        read: true
        createdBy: createdBy
        name: name
        id: id
        write: true
      properties:
        createdAt:
          format: date-time
          title: createdAt
          type: string
        createdBy:
          title: createdBy
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        read:
          title: read
          type: boolean
        write:
          title: write
          type: boolean
      required:
      - createdAt
      - createdBy
      - id
      - name
      - read
      - write
      title: Key
    KeyValuePair:
      example:
        value: value
        key: key
      properties:
        key:
          title: key
          type: string
        value:
          title: value
          type: string
      required:
      - key
      - value
      title: KeyValuePair
    MailscriptEmailInput:
      example:
        owner: owner
        createdAt: 2000-01-23T04:56:07.000+00:00
        address: address
        createdBy: createdBy
        name: name
        id: id
        type: mailescript-email
      properties:
        address:
          title: address
          type: string
        createdAt:
          format: date-time
          title: createdAt
          type: string
        createdBy:
          title: createdBy
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        owner:
          title: owner
          type: string
        type:
          enum:
          - mailescript-email
          title: type
          type: string
      required:
      - address
      - createdAt
      - createdBy
      - id
      - name
      - owner
      - type
      title: MailscriptEmailInput
    SendRequest:
      example:
        subject: subject
        from: from
        html: html
        text: text
        to: to
      properties:
        from:
          title: from
          type: string
        html:
          title: html
          type: string
        subject:
          title: subject
          type: string
        text:
          title: text
          type: string
        to:
          title: to
          type: string
      required:
      - from
      - subject
      - to
      title: SendRequest
    SetWorkflowRequest:
      example:
        id: id
        pairs:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        id:
          title: id
          type: string
        pairs:
          items:
            $ref: '#/components/schemas/SetWorkflowRequest_pairs_inner'
          title: pairs
          type: array
      title: SetWorkflowRequest
    Trigger:
      example:
        owner: owner
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        criteria:
          sentTo: sentTo
          domain: domain
          from: from
          subjectContains: subjectContains
          hasAttachments: true
          hasTheWords: hasTheWords
        displayName: displayName
        name: name
        id: id
      properties:
        createdAt:
          format: date-time
          title: createdAt
          type: string
        createdBy:
          title: createdBy
          type: string
        criteria:
          $ref: '#/components/schemas/Criteria'
        displayName:
          title: displayName
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        owner:
          title: owner
          type: string
      required:
      - createdAt
      - createdBy
      - criteria
      - id
      - name
      - owner
      title: Trigger
    UpdateKeyRequest:
      example:
        read: true
        name: name
        write: true
      properties:
        name:
          title: name
          type: string
        read:
          title: read
          type: boolean
        write:
          title: write
          type: boolean
      required:
      - name
      - read
      - write
      title: UpdateKeyRequest
    UpdateUserRequest:
      example:
        displayName: displayName
      properties:
        displayName:
          title: displayName
          type: string
      required:
      - displayName
      title: UpdateUserRequest
    User:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        photoURL: photoURL
        displayName: displayName
        id: id
        email: email
      properties:
        createdAt:
          format: date-time
          title: createdAt
          type: string
        displayName:
          title: displayName
          type: string
        email:
          title: email
          type: string
        id:
          title: id
          type: string
        photoURL:
          title: photoURL
          type: string
      required:
      - createdAt
      - displayName
      - email
      - id
      title: User
    VerificationEmail:
      example:
        verified: true
        verifiedAt: 2000-01-23T04:56:07.000+00:00
        id: id
        type: email
        verifiedBy: verifiedBy
        email: email
      properties:
        email:
          title: email
          type: string
        id:
          title: id
          type: string
        type:
          enum:
          - email
          title: type
          type: string
        verified:
          title: verified
          type: boolean
        verifiedAt:
          format: date-time
          title: verifiedAt
          type: string
        verifiedBy:
          title: verifiedBy
          type: string
      title: VerificationEmail
    VerificationSms:
      properties:
        id:
          title: id
          type: string
        sms:
          title: sms
          type: string
        type:
          enum:
          - sms
          title: type
          type: string
        verified:
          title: verified
          type: boolean
        verifiedAt:
          format: date-time
          title: verifiedAt
          type: string
        verifiedBy:
          title: verifiedBy
          type: string
      title: VerificationSms
    VerifyEmailRequest:
      properties:
        code:
          title: code
          type: string
        email:
          title: email
          type: string
      required:
      - code
      - email
      title: VerifyEmailRequest
    VerifySmsRequest:
      properties:
        code:
          title: code
          type: string
        sms:
          title: sms
          type: string
      required:
      - code
      - sms
      title: VerifySmsRequest
    Workflow:
      example:
        owner: owner
        createdAt: 2000-01-23T04:56:07.000+00:00
        input: input
        createdBy: createdBy
        name: name
        action: action
        active: true
        id: id
        trigger: trigger
      properties:
        action:
          title: action
          type: string
        active:
          title: active
          type: boolean
        createdAt:
          format: date-time
          title: createdAt
          type: string
        createdBy:
          title: createdBy
          type: string
        id:
          title: id
          type: string
        input:
          title: input
          type: string
        name:
          title: name
          type: string
        owner:
          title: owner
          type: string
        trigger:
          title: trigger
          type: string
      required:
      - action
      - createdAt
      - createdBy
      - id
      - input
      - name
      - owner
      - trigger
      title: Workflow
    Workspace:
      example:
        owner: owner
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        id: id
      properties:
        createdAt:
          format: date-time
          title: createdAt
          type: string
        createdBy:
          title: createdBy
          type: string
        id:
          title: id
          type: string
        owner:
          title: owner
          type: string
      required:
      - createdAt
      - createdBy
      - id
      - owner
      title: Workspace
    addAction_request:
      oneOf:
      - $ref: '#/components/schemas/AddActionCombineRequest'
      - $ref: '#/components/schemas/AddActionSmsRequest'
      - $ref: '#/components/schemas/AddActionWebhookRequest'
      - $ref: '#/components/schemas/AddActionDaemonRequest'
      - $ref: '#/components/schemas/AddActionSendRequest'
      - $ref: '#/components/schemas/AddActionForwardRequest'
      - $ref: '#/components/schemas/AddActionForwardRequest'
      - $ref: '#/components/schemas/AddActionReplyRequest'
      - $ref: '#/components/schemas/AddActionReplyAllRequest'
      - $ref: '#/components/schemas/AddActionAliasRequest'
      title: addAction_request
    getDaemonToken_200_response:
      example:
        token: token
      properties:
        token:
          title: token
          type: string
      required:
      - token
      title: getDaemonToken_200_response
    addVerification_request:
      oneOf:
      - $ref: '#/components/schemas/AddEmailVerificationRequest'
      - $ref: '#/components/schemas/AddSmsVerificationRequest'
      title: addVerification_request
    verify_request:
      oneOf:
      - $ref: '#/components/schemas/VerifyEmailRequest'
      - $ref: '#/components/schemas/VerifySmsRequest'
      title: verify_request
    ActionSend_config:
      example:
        subject: subject
        html: html
        text: text
        type: type
      properties:
        html:
          title: html
          type: string
        subject:
          title: subject
          type: string
        text:
          title: text
          type: string
        type:
          title: type
          type: string
      required:
      - subject
      - type
      title: ActionSend_config
      type: object
    AddActionAliasRequest_config:
      properties:
        alias:
          title: alias
          type: string
        type:
          enum:
          - alias
          title: type
          type: string
      title: AddActionAliasRequest_config
      type: object
    AddActionDaemonRequest_config:
      properties:
        body:
          title: body
          type: string
        daemon:
          title: daemon
          type: string
      required:
      - body
      title: AddActionDaemonRequest_config
      type: object
    AddActionForwardRequest_config:
      properties:
        forward:
          title: forward
          type: string
        from:
          title: from
          type: string
        key:
          title: key
          type: string
        type:
          enum:
          - forward
          title: type
          type: string
      required:
      - forward
      - from
      - key
      - type
      title: AddActionForwardRequest_config
      type: object
    AddActionReplyAllRequest_config:
      properties:
        from:
          title: from
          type: string
        html:
          title: html
          type: string
        key:
          title: key
          type: string
        text:
          title: text
          type: string
        type:
          enum:
          - replyAll
          title: type
          type: string
      required:
      - from
      - key
      - type
      title: AddActionReplyAllRequest_config
      type: object
    AddActionReplyRequest_config:
      properties:
        from:
          title: from
          type: string
        html:
          title: html
          type: string
        key:
          title: key
          type: string
        text:
          title: text
          type: string
        type:
          enum:
          - reply
          title: type
          type: string
      required:
      - from
      - key
      - type
      title: AddActionReplyRequest_config
      type: object
    AddActionSendRequest_config:
      properties:
        from:
          title: from
          type: string
        html:
          title: html
          type: string
        key:
          title: key
          type: string
        subject:
          title: subject
          type: string
        text:
          title: text
          type: string
        to:
          title: to
          type: string
        type:
          enum:
          - send
          title: type
          type: string
      required:
      - from
      - key
      - send
      - subject
      title: AddActionSendRequest_config
      type: object
    AddActionSmsRequest_config:
      properties:
        number:
          title: number
          type: string
        text:
          title: text
          type: string
      required:
      - number
      - text
      title: AddActionSmsRequest_config
      type: object
    AddActionWebhookRequest_config_opts:
      properties:
        headers:
          title: headers
          type: object
        method:
          enum:
          - POST
          - GET
          - DELETE
          title: method
          type: string
      required:
      - headers
      - method
      title: AddActionWebhookRequest_config_opts
      type: object
    AddActionWebhookRequest_config:
      properties:
        body:
          title: body
          type: string
        opts:
          $ref: '#/components/schemas/AddActionWebhookRequest_config_opts'
        url:
          title: url
          type: string
      required:
      - body
      - opts
      - url
      title: AddActionWebhookRequest_config
      type: object
    AddTriggerRequest_criteria:
      oneOf:
      - $ref: '#/components/schemas/Criteria'
      - $ref: '#/components/schemas/CriteriaOperand'
      title: AddTriggerRequest_criteria
    DomainResponse_records_inner:
      example:
        name: name
        type: type
        value: value
      properties:
        name:
          title: name
          type: string
        type:
          title: type
          type: string
        value:
          title: value
          type: string
      required:
      - name
      - type
      - value
      title: DomainResponse_records_inner
      type: object
    GetAllActionsResponse_list_inner:
      oneOf:
      - $ref: '#/components/schemas/ActionSend'
      - $ref: '#/components/schemas/ActionCombine'
      title: GetAllActionsResponse_list_inner
    GetAllAddressesResponse_list_inner:
      oneOf:
      - $ref: '#/components/schemas/Address'
      title: GetAllAddressesResponse_list_inner
      type: object
    GetAllInputsResponse_list_inner:
      oneOf:
      - $ref: '#/components/schemas/MailscriptEmailInput'
      title: GetAllInputsResponse_list_inner
    GetAllIntegrationsResponse_list_inner:
      oneOf:
      - $ref: '#/components/schemas/Integration'
      title: GetAllIntegrationsResponse_list_inner
    GetAllKeysResponse_list_inner:
      oneOf:
      - $ref: '#/components/schemas/Key'
      title: GetAllKeysResponse_list_inner
      type: object
    GetAllTriggersResponse_list_inner:
      oneOf:
      - $ref: '#/components/schemas/Trigger'
      title: GetAllTriggersResponse_list_inner
    GetAllVerificationsResponse_list_inner:
      oneOf:
      - $ref: '#/components/schemas/VerificationEmail'
      - $ref: '#/components/schemas/VerificationSms'
      title: GetAllVerificationsResponse_list_inner
    GetAllWorkflowsResponse_list_inner:
      oneOf:
      - $ref: '#/components/schemas/Workflow'
      title: GetAllWorkflowsResponse_list_inner
      type: object
    GetAllWorkspacesResponse_list_inner:
      oneOf:
      - $ref: '#/components/schemas/Workspace'
      title: GetAllWorkspacesResponse_list_inner
      type: object
    SetWorkflowRequest_pairs_inner:
      oneOf:
      - $ref: '#/components/schemas/KeyValuePair'
      title: SetWorkflowRequest_pairs_inner
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: openapi_server.controllers.security_controller.info_from_bearerAuth
