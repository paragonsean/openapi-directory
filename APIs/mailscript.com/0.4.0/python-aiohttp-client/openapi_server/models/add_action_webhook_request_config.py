# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_action_webhook_request_config_opts import AddActionWebhookRequestConfigOpts
from openapi_server import util


class AddActionWebhookRequestConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, opts: AddActionWebhookRequestConfigOpts=None, url: str=None):
        """AddActionWebhookRequestConfig - a model defined in OpenAPI

        :param body: The body of this AddActionWebhookRequestConfig.
        :param opts: The opts of this AddActionWebhookRequestConfig.
        :param url: The url of this AddActionWebhookRequestConfig.
        """
        self.openapi_types = {
            'body': str,
            'opts': AddActionWebhookRequestConfigOpts,
            'url': str
        }

        self.attribute_map = {
            'body': 'body',
            'opts': 'opts',
            'url': 'url'
        }

        self._body = body
        self._opts = opts
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddActionWebhookRequestConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddActionWebhookRequest_config of this AddActionWebhookRequestConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this AddActionWebhookRequestConfig.


        :return: The body of this AddActionWebhookRequestConfig.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this AddActionWebhookRequestConfig.


        :param body: The body of this AddActionWebhookRequestConfig.
        :type body: str
        """
        if body is None:
            raise ValueError("Invalid value for `body`, must not be `None`")

        self._body = body

    @property
    def opts(self):
        """Gets the opts of this AddActionWebhookRequestConfig.


        :return: The opts of this AddActionWebhookRequestConfig.
        :rtype: AddActionWebhookRequestConfigOpts
        """
        return self._opts

    @opts.setter
    def opts(self, opts):
        """Sets the opts of this AddActionWebhookRequestConfig.


        :param opts: The opts of this AddActionWebhookRequestConfig.
        :type opts: AddActionWebhookRequestConfigOpts
        """
        if opts is None:
            raise ValueError("Invalid value for `opts`, must not be `None`")

        self._opts = opts

    @property
    def url(self):
        """Gets the url of this AddActionWebhookRequestConfig.


        :return: The url of this AddActionWebhookRequestConfig.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this AddActionWebhookRequestConfig.


        :param url: The url of this AddActionWebhookRequestConfig.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")

        self._url = url
