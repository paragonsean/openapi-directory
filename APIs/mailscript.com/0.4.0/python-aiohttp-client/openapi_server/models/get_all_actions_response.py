# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_all_actions_response_list_inner import GetAllActionsResponseListInner
from openapi_server import util


class GetAllActionsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, list: List[GetAllActionsResponseListInner]=None):
        """GetAllActionsResponse - a model defined in OpenAPI

        :param list: The list of this GetAllActionsResponse.
        """
        self.openapi_types = {
            'list': List[GetAllActionsResponseListInner]
        }

        self.attribute_map = {
            'list': 'list'
        }

        self._list = list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAllActionsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetAllActionsResponse of this GetAllActionsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def list(self):
        """Gets the list of this GetAllActionsResponse.


        :return: The list of this GetAllActionsResponse.
        :rtype: List[GetAllActionsResponseListInner]
        """
        return self._list

    @list.setter
    def list(self, list):
        """Sets the list of this GetAllActionsResponse.


        :param list: The list of this GetAllActionsResponse.
        :type list: List[GetAllActionsResponseListInner]
        """
        if list is None:
            raise ValueError("Invalid value for `list`, must not be `None`")

        self._list = list
