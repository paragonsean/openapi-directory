/**
 * obono RKSV API
 * Provides a RESTful API for interacting with virtual cash registers and creating receipts that are conform with the Registrierkassensicherheitsverordnung (RKSV).  You may find our [automatically generated clients](./clients) for various programming languages and environments helpful... 
 *
 * The version of the OpenAPI document: 1.4.0.0
 * Contact: info@obono.at
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPosten.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPosten::OAIPosten(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPosten::OAIPosten() {
    this->initializeModel();
}

OAIPosten::~OAIPosten() {}

void OAIPosten::initializeModel() {

    m_bezeichnung_isSet = false;
    m_bezeichnung_isValid = false;

    m_brutto_betrag_isSet = false;
    m_brutto_betrag_isValid = false;

    m_externer_beleg_belegkreis_isSet = false;
    m_externer_beleg_belegkreis_isValid = false;

    m_externer_beleg_bezeichnung_isSet = false;
    m_externer_beleg_bezeichnung_isValid = false;

    m_externer_beleg_referenz_isSet = false;
    m_externer_beleg_referenz_isValid = false;

    m_menge_isSet = false;
    m_menge_isValid = false;

    m_netto_betrag_isSet = false;
    m_netto_betrag_isValid = false;

    m_satz_isSet = false;
    m_satz_isValid = false;
}

void OAIPosten::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPosten::fromJsonObject(QJsonObject json) {

    m_bezeichnung_isValid = ::OpenAPI::fromJsonValue(m_bezeichnung, json[QString("Bezeichnung")]);
    m_bezeichnung_isSet = !json[QString("Bezeichnung")].isNull() && m_bezeichnung_isValid;

    m_brutto_betrag_isValid = ::OpenAPI::fromJsonValue(m_brutto_betrag, json[QString("BruttoBetrag")]);
    m_brutto_betrag_isSet = !json[QString("BruttoBetrag")].isNull() && m_brutto_betrag_isValid;

    m_externer_beleg_belegkreis_isValid = ::OpenAPI::fromJsonValue(m_externer_beleg_belegkreis, json[QString("Externer-Beleg-Belegkreis")]);
    m_externer_beleg_belegkreis_isSet = !json[QString("Externer-Beleg-Belegkreis")].isNull() && m_externer_beleg_belegkreis_isValid;

    m_externer_beleg_bezeichnung_isValid = ::OpenAPI::fromJsonValue(m_externer_beleg_bezeichnung, json[QString("Externer-Beleg-Bezeichnung")]);
    m_externer_beleg_bezeichnung_isSet = !json[QString("Externer-Beleg-Bezeichnung")].isNull() && m_externer_beleg_bezeichnung_isValid;

    m_externer_beleg_referenz_isValid = ::OpenAPI::fromJsonValue(m_externer_beleg_referenz, json[QString("Externer-Beleg-Referenz")]);
    m_externer_beleg_referenz_isSet = !json[QString("Externer-Beleg-Referenz")].isNull() && m_externer_beleg_referenz_isValid;

    m_menge_isValid = ::OpenAPI::fromJsonValue(m_menge, json[QString("Menge")]);
    m_menge_isSet = !json[QString("Menge")].isNull() && m_menge_isValid;

    m_netto_betrag_isValid = ::OpenAPI::fromJsonValue(m_netto_betrag, json[QString("NettoBetrag")]);
    m_netto_betrag_isSet = !json[QString("NettoBetrag")].isNull() && m_netto_betrag_isValid;

    m_satz_isValid = ::OpenAPI::fromJsonValue(m_satz, json[QString("Satz")]);
    m_satz_isSet = !json[QString("Satz")].isNull() && m_satz_isValid;
}

QString OAIPosten::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPosten::asJsonObject() const {
    QJsonObject obj;
    if (m_bezeichnung_isSet) {
        obj.insert(QString("Bezeichnung"), ::OpenAPI::toJsonValue(m_bezeichnung));
    }
    if (m_brutto_betrag_isSet) {
        obj.insert(QString("BruttoBetrag"), ::OpenAPI::toJsonValue(m_brutto_betrag));
    }
    if (m_externer_beleg_belegkreis_isSet) {
        obj.insert(QString("Externer-Beleg-Belegkreis"), ::OpenAPI::toJsonValue(m_externer_beleg_belegkreis));
    }
    if (m_externer_beleg_bezeichnung_isSet) {
        obj.insert(QString("Externer-Beleg-Bezeichnung"), ::OpenAPI::toJsonValue(m_externer_beleg_bezeichnung));
    }
    if (m_externer_beleg_referenz_isSet) {
        obj.insert(QString("Externer-Beleg-Referenz"), ::OpenAPI::toJsonValue(m_externer_beleg_referenz));
    }
    if (m_menge_isSet) {
        obj.insert(QString("Menge"), ::OpenAPI::toJsonValue(m_menge));
    }
    if (m_netto_betrag_isSet) {
        obj.insert(QString("NettoBetrag"), ::OpenAPI::toJsonValue(m_netto_betrag));
    }
    if (m_satz_isSet) {
        obj.insert(QString("Satz"), ::OpenAPI::toJsonValue(m_satz));
    }
    return obj;
}

QString OAIPosten::getBezeichnung() const {
    return m_bezeichnung;
}
void OAIPosten::setBezeichnung(const QString &bezeichnung) {
    m_bezeichnung = bezeichnung;
    m_bezeichnung_isSet = true;
}

bool OAIPosten::is_bezeichnung_Set() const{
    return m_bezeichnung_isSet;
}

bool OAIPosten::is_bezeichnung_Valid() const{
    return m_bezeichnung_isValid;
}

qint32 OAIPosten::getBruttoBetrag() const {
    return m_brutto_betrag;
}
void OAIPosten::setBruttoBetrag(const qint32 &brutto_betrag) {
    m_brutto_betrag = brutto_betrag;
    m_brutto_betrag_isSet = true;
}

bool OAIPosten::is_brutto_betrag_Set() const{
    return m_brutto_betrag_isSet;
}

bool OAIPosten::is_brutto_betrag_Valid() const{
    return m_brutto_betrag_isValid;
}

QString OAIPosten::getExternerBelegBelegkreis() const {
    return m_externer_beleg_belegkreis;
}
void OAIPosten::setExternerBelegBelegkreis(const QString &externer_beleg_belegkreis) {
    m_externer_beleg_belegkreis = externer_beleg_belegkreis;
    m_externer_beleg_belegkreis_isSet = true;
}

bool OAIPosten::is_externer_beleg_belegkreis_Set() const{
    return m_externer_beleg_belegkreis_isSet;
}

bool OAIPosten::is_externer_beleg_belegkreis_Valid() const{
    return m_externer_beleg_belegkreis_isValid;
}

QString OAIPosten::getExternerBelegBezeichnung() const {
    return m_externer_beleg_bezeichnung;
}
void OAIPosten::setExternerBelegBezeichnung(const QString &externer_beleg_bezeichnung) {
    m_externer_beleg_bezeichnung = externer_beleg_bezeichnung;
    m_externer_beleg_bezeichnung_isSet = true;
}

bool OAIPosten::is_externer_beleg_bezeichnung_Set() const{
    return m_externer_beleg_bezeichnung_isSet;
}

bool OAIPosten::is_externer_beleg_bezeichnung_Valid() const{
    return m_externer_beleg_bezeichnung_isValid;
}

QString OAIPosten::getExternerBelegReferenz() const {
    return m_externer_beleg_referenz;
}
void OAIPosten::setExternerBelegReferenz(const QString &externer_beleg_referenz) {
    m_externer_beleg_referenz = externer_beleg_referenz;
    m_externer_beleg_referenz_isSet = true;
}

bool OAIPosten::is_externer_beleg_referenz_Set() const{
    return m_externer_beleg_referenz_isSet;
}

bool OAIPosten::is_externer_beleg_referenz_Valid() const{
    return m_externer_beleg_referenz_isValid;
}

qint32 OAIPosten::getMenge() const {
    return m_menge;
}
void OAIPosten::setMenge(const qint32 &menge) {
    m_menge = menge;
    m_menge_isSet = true;
}

bool OAIPosten::is_menge_Set() const{
    return m_menge_isSet;
}

bool OAIPosten::is_menge_Valid() const{
    return m_menge_isValid;
}

qint32 OAIPosten::getNettoBetrag() const {
    return m_netto_betrag;
}
void OAIPosten::setNettoBetrag(const qint32 &netto_betrag) {
    m_netto_betrag = netto_betrag;
    m_netto_betrag_isSet = true;
}

bool OAIPosten::is_netto_betrag_Set() const{
    return m_netto_betrag_isSet;
}

bool OAIPosten::is_netto_betrag_Valid() const{
    return m_netto_betrag_isValid;
}

QString OAIPosten::getSatz() const {
    return m_satz;
}
void OAIPosten::setSatz(const QString &satz) {
    m_satz = satz;
    m_satz_isSet = true;
}

bool OAIPosten::is_satz_Set() const{
    return m_satz_isSet;
}

bool OAIPosten::is_satz_Valid() const{
    return m_satz_isValid;
}

bool OAIPosten::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bezeichnung_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_brutto_betrag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_externer_beleg_belegkreis_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_externer_beleg_bezeichnung_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_externer_beleg_referenz_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_menge_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_netto_betrag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_satz_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPosten::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_bezeichnung_isValid && m_brutto_betrag_isValid && m_menge_isValid && m_netto_betrag_isValid && m_satz_isValid && true;
}

} // namespace OpenAPI
