/**
 * obono RKSV API
 * Provides a RESTful API for interacting with virtual cash registers and creating receipts that are conform with the Registrierkassensicherheitsverordnung (RKSV).  You may find our [automatically generated clients](./clients) for various programming languages and environments helpful... 
 *
 * The version of the OpenAPI document: 1.4.0.0
 * Contact: info@obono.at
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISignierteBelegdaten.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISignierteBelegdaten::OAISignierteBelegdaten(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISignierteBelegdaten::OAISignierteBelegdaten() {
    this->initializeModel();
}

OAISignierteBelegdaten::~OAISignierteBelegdaten() {}

void OAISignierteBelegdaten::initializeModel() {

    m_beleg_datum_uhrzeit_isSet = false;
    m_beleg_datum_uhrzeit_isValid = false;

    m_belegnummer_isSet = false;
    m_belegnummer_isValid = false;

    m_betrag_brutto_isSet = false;
    m_betrag_brutto_isValid = false;

    m_betrag_netto_isSet = false;
    m_betrag_netto_isValid = false;

    m_betrag_satz_besonders_brutto_isSet = false;
    m_betrag_satz_besonders_brutto_isValid = false;

    m_betrag_satz_besonders_netto_isSet = false;
    m_betrag_satz_besonders_netto_isValid = false;

    m_betrag_satz_ermaessigt_1_brutto_isSet = false;
    m_betrag_satz_ermaessigt_1_brutto_isValid = false;

    m_betrag_satz_ermaessigt_1_netto_isSet = false;
    m_betrag_satz_ermaessigt_1_netto_isValid = false;

    m_betrag_satz_ermaessigt_2_brutto_isSet = false;
    m_betrag_satz_ermaessigt_2_brutto_isValid = false;

    m_betrag_satz_ermaessigt_2_netto_isSet = false;
    m_betrag_satz_ermaessigt_2_netto_isValid = false;

    m_betrag_satz_normal_brutto_isSet = false;
    m_betrag_satz_normal_brutto_isValid = false;

    m_betrag_satz_normal_netto_isSet = false;
    m_betrag_satz_normal_netto_isValid = false;

    m_betrag_satz_null_brutto_isSet = false;
    m_betrag_satz_null_brutto_isValid = false;

    m_betrag_satz_null_netto_isSet = false;
    m_betrag_satz_null_netto_isValid = false;

    m_externer_beleg_belegkreis_isSet = false;
    m_externer_beleg_belegkreis_isValid = false;

    m_externer_beleg_bezeichnung_isSet = false;
    m_externer_beleg_bezeichnung_isValid = false;

    m_externer_beleg_referenz_isSet = false;
    m_externer_beleg_referenz_isValid = false;

    m_kassen_id_isSet = false;
    m_kassen_id_isValid = false;

    m_kunde_isSet = false;
    m_kunde_isValid = false;

    m_notizen_isSet = false;
    m_notizen_isValid = false;

    m_posten_isSet = false;
    m_posten_isValid = false;

    m_rabatte_isSet = false;
    m_rabatte_isValid = false;

    m_storno_isSet = false;
    m_storno_isValid = false;

    m_storno_beleg_uuid_isSet = false;
    m_storno_beleg_uuid_isValid = false;

    m_storno_text_isSet = false;
    m_storno_text_isValid = false;

    m_training_isSet = false;
    m_training_isValid = false;

    m_unternehmen_adresse1_isSet = false;
    m_unternehmen_adresse1_isValid = false;

    m_unternehmen_adresse2_isSet = false;
    m_unternehmen_adresse2_isValid = false;

    m_unternehmen_fusszeile_isSet = false;
    m_unternehmen_fusszeile_isValid = false;

    m_unternehmen_id_isSet = false;
    m_unternehmen_id_isValid = false;

    m_unternehmen_id_typ_isSet = false;
    m_unternehmen_id_typ_isValid = false;

    m_unternehmen_kopfzeile_isSet = false;
    m_unternehmen_kopfzeile_isValid = false;

    m_unternehmen_name_isSet = false;
    m_unternehmen_name_isValid = false;

    m_unternehmen_ort_isSet = false;
    m_unternehmen_ort_isValid = false;

    m_unternehmen_plz_isSet = false;
    m_unternehmen_plz_isValid = false;

    m_zahlungen_isSet = false;
    m_zahlungen_isValid = false;

    m_zertifikat_seriennummer_isSet = false;
    m_zertifikat_seriennummer_isValid = false;
}

void OAISignierteBelegdaten::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISignierteBelegdaten::fromJsonObject(QJsonObject json) {

    m_beleg_datum_uhrzeit_isValid = ::OpenAPI::fromJsonValue(m_beleg_datum_uhrzeit, json[QString("Beleg-Datum-Uhrzeit")]);
    m_beleg_datum_uhrzeit_isSet = !json[QString("Beleg-Datum-Uhrzeit")].isNull() && m_beleg_datum_uhrzeit_isValid;

    m_belegnummer_isValid = ::OpenAPI::fromJsonValue(m_belegnummer, json[QString("Belegnummer")]);
    m_belegnummer_isSet = !json[QString("Belegnummer")].isNull() && m_belegnummer_isValid;

    m_betrag_brutto_isValid = ::OpenAPI::fromJsonValue(m_betrag_brutto, json[QString("Betrag-Brutto")]);
    m_betrag_brutto_isSet = !json[QString("Betrag-Brutto")].isNull() && m_betrag_brutto_isValid;

    m_betrag_netto_isValid = ::OpenAPI::fromJsonValue(m_betrag_netto, json[QString("Betrag-Netto")]);
    m_betrag_netto_isSet = !json[QString("Betrag-Netto")].isNull() && m_betrag_netto_isValid;

    m_betrag_satz_besonders_brutto_isValid = ::OpenAPI::fromJsonValue(m_betrag_satz_besonders_brutto, json[QString("Betrag-Satz-Besonders-Brutto")]);
    m_betrag_satz_besonders_brutto_isSet = !json[QString("Betrag-Satz-Besonders-Brutto")].isNull() && m_betrag_satz_besonders_brutto_isValid;

    m_betrag_satz_besonders_netto_isValid = ::OpenAPI::fromJsonValue(m_betrag_satz_besonders_netto, json[QString("Betrag-Satz-Besonders-Netto")]);
    m_betrag_satz_besonders_netto_isSet = !json[QString("Betrag-Satz-Besonders-Netto")].isNull() && m_betrag_satz_besonders_netto_isValid;

    m_betrag_satz_ermaessigt_1_brutto_isValid = ::OpenAPI::fromJsonValue(m_betrag_satz_ermaessigt_1_brutto, json[QString("Betrag-Satz-Ermaessigt-1-Brutto")]);
    m_betrag_satz_ermaessigt_1_brutto_isSet = !json[QString("Betrag-Satz-Ermaessigt-1-Brutto")].isNull() && m_betrag_satz_ermaessigt_1_brutto_isValid;

    m_betrag_satz_ermaessigt_1_netto_isValid = ::OpenAPI::fromJsonValue(m_betrag_satz_ermaessigt_1_netto, json[QString("Betrag-Satz-Ermaessigt-1-Netto")]);
    m_betrag_satz_ermaessigt_1_netto_isSet = !json[QString("Betrag-Satz-Ermaessigt-1-Netto")].isNull() && m_betrag_satz_ermaessigt_1_netto_isValid;

    m_betrag_satz_ermaessigt_2_brutto_isValid = ::OpenAPI::fromJsonValue(m_betrag_satz_ermaessigt_2_brutto, json[QString("Betrag-Satz-Ermaessigt-2-Brutto")]);
    m_betrag_satz_ermaessigt_2_brutto_isSet = !json[QString("Betrag-Satz-Ermaessigt-2-Brutto")].isNull() && m_betrag_satz_ermaessigt_2_brutto_isValid;

    m_betrag_satz_ermaessigt_2_netto_isValid = ::OpenAPI::fromJsonValue(m_betrag_satz_ermaessigt_2_netto, json[QString("Betrag-Satz-Ermaessigt-2-Netto")]);
    m_betrag_satz_ermaessigt_2_netto_isSet = !json[QString("Betrag-Satz-Ermaessigt-2-Netto")].isNull() && m_betrag_satz_ermaessigt_2_netto_isValid;

    m_betrag_satz_normal_brutto_isValid = ::OpenAPI::fromJsonValue(m_betrag_satz_normal_brutto, json[QString("Betrag-Satz-Normal-Brutto")]);
    m_betrag_satz_normal_brutto_isSet = !json[QString("Betrag-Satz-Normal-Brutto")].isNull() && m_betrag_satz_normal_brutto_isValid;

    m_betrag_satz_normal_netto_isValid = ::OpenAPI::fromJsonValue(m_betrag_satz_normal_netto, json[QString("Betrag-Satz-Normal-Netto")]);
    m_betrag_satz_normal_netto_isSet = !json[QString("Betrag-Satz-Normal-Netto")].isNull() && m_betrag_satz_normal_netto_isValid;

    m_betrag_satz_null_brutto_isValid = ::OpenAPI::fromJsonValue(m_betrag_satz_null_brutto, json[QString("Betrag-Satz-Null-Brutto")]);
    m_betrag_satz_null_brutto_isSet = !json[QString("Betrag-Satz-Null-Brutto")].isNull() && m_betrag_satz_null_brutto_isValid;

    m_betrag_satz_null_netto_isValid = ::OpenAPI::fromJsonValue(m_betrag_satz_null_netto, json[QString("Betrag-Satz-Null-Netto")]);
    m_betrag_satz_null_netto_isSet = !json[QString("Betrag-Satz-Null-Netto")].isNull() && m_betrag_satz_null_netto_isValid;

    m_externer_beleg_belegkreis_isValid = ::OpenAPI::fromJsonValue(m_externer_beleg_belegkreis, json[QString("Externer-Beleg-Belegkreis")]);
    m_externer_beleg_belegkreis_isSet = !json[QString("Externer-Beleg-Belegkreis")].isNull() && m_externer_beleg_belegkreis_isValid;

    m_externer_beleg_bezeichnung_isValid = ::OpenAPI::fromJsonValue(m_externer_beleg_bezeichnung, json[QString("Externer-Beleg-Bezeichnung")]);
    m_externer_beleg_bezeichnung_isSet = !json[QString("Externer-Beleg-Bezeichnung")].isNull() && m_externer_beleg_bezeichnung_isValid;

    m_externer_beleg_referenz_isValid = ::OpenAPI::fromJsonValue(m_externer_beleg_referenz, json[QString("Externer-Beleg-Referenz")]);
    m_externer_beleg_referenz_isSet = !json[QString("Externer-Beleg-Referenz")].isNull() && m_externer_beleg_referenz_isValid;

    m_kassen_id_isValid = ::OpenAPI::fromJsonValue(m_kassen_id, json[QString("Kassen-ID")]);
    m_kassen_id_isSet = !json[QString("Kassen-ID")].isNull() && m_kassen_id_isValid;

    m_kunde_isValid = ::OpenAPI::fromJsonValue(m_kunde, json[QString("Kunde")]);
    m_kunde_isSet = !json[QString("Kunde")].isNull() && m_kunde_isValid;

    m_notizen_isValid = ::OpenAPI::fromJsonValue(m_notizen, json[QString("Notizen")]);
    m_notizen_isSet = !json[QString("Notizen")].isNull() && m_notizen_isValid;

    m_posten_isValid = ::OpenAPI::fromJsonValue(m_posten, json[QString("Posten")]);
    m_posten_isSet = !json[QString("Posten")].isNull() && m_posten_isValid;

    m_rabatte_isValid = ::OpenAPI::fromJsonValue(m_rabatte, json[QString("Rabatte")]);
    m_rabatte_isSet = !json[QString("Rabatte")].isNull() && m_rabatte_isValid;

    m_storno_isValid = ::OpenAPI::fromJsonValue(m_storno, json[QString("Storno")]);
    m_storno_isSet = !json[QString("Storno")].isNull() && m_storno_isValid;

    m_storno_beleg_uuid_isValid = ::OpenAPI::fromJsonValue(m_storno_beleg_uuid, json[QString("Storno-Beleg-UUID")]);
    m_storno_beleg_uuid_isSet = !json[QString("Storno-Beleg-UUID")].isNull() && m_storno_beleg_uuid_isValid;

    m_storno_text_isValid = ::OpenAPI::fromJsonValue(m_storno_text, json[QString("Storno-Text")]);
    m_storno_text_isSet = !json[QString("Storno-Text")].isNull() && m_storno_text_isValid;

    m_training_isValid = ::OpenAPI::fromJsonValue(m_training, json[QString("Training")]);
    m_training_isSet = !json[QString("Training")].isNull() && m_training_isValid;

    m_unternehmen_adresse1_isValid = ::OpenAPI::fromJsonValue(m_unternehmen_adresse1, json[QString("Unternehmen-Adresse1")]);
    m_unternehmen_adresse1_isSet = !json[QString("Unternehmen-Adresse1")].isNull() && m_unternehmen_adresse1_isValid;

    m_unternehmen_adresse2_isValid = ::OpenAPI::fromJsonValue(m_unternehmen_adresse2, json[QString("Unternehmen-Adresse2")]);
    m_unternehmen_adresse2_isSet = !json[QString("Unternehmen-Adresse2")].isNull() && m_unternehmen_adresse2_isValid;

    m_unternehmen_fusszeile_isValid = ::OpenAPI::fromJsonValue(m_unternehmen_fusszeile, json[QString("Unternehmen-Fusszeile")]);
    m_unternehmen_fusszeile_isSet = !json[QString("Unternehmen-Fusszeile")].isNull() && m_unternehmen_fusszeile_isValid;

    m_unternehmen_id_isValid = ::OpenAPI::fromJsonValue(m_unternehmen_id, json[QString("Unternehmen-ID")]);
    m_unternehmen_id_isSet = !json[QString("Unternehmen-ID")].isNull() && m_unternehmen_id_isValid;

    m_unternehmen_id_typ_isValid = ::OpenAPI::fromJsonValue(m_unternehmen_id_typ, json[QString("Unternehmen-ID-Typ")]);
    m_unternehmen_id_typ_isSet = !json[QString("Unternehmen-ID-Typ")].isNull() && m_unternehmen_id_typ_isValid;

    m_unternehmen_kopfzeile_isValid = ::OpenAPI::fromJsonValue(m_unternehmen_kopfzeile, json[QString("Unternehmen-Kopfzeile")]);
    m_unternehmen_kopfzeile_isSet = !json[QString("Unternehmen-Kopfzeile")].isNull() && m_unternehmen_kopfzeile_isValid;

    m_unternehmen_name_isValid = ::OpenAPI::fromJsonValue(m_unternehmen_name, json[QString("Unternehmen-Name")]);
    m_unternehmen_name_isSet = !json[QString("Unternehmen-Name")].isNull() && m_unternehmen_name_isValid;

    m_unternehmen_ort_isValid = ::OpenAPI::fromJsonValue(m_unternehmen_ort, json[QString("Unternehmen-Ort")]);
    m_unternehmen_ort_isSet = !json[QString("Unternehmen-Ort")].isNull() && m_unternehmen_ort_isValid;

    m_unternehmen_plz_isValid = ::OpenAPI::fromJsonValue(m_unternehmen_plz, json[QString("Unternehmen-PLZ")]);
    m_unternehmen_plz_isSet = !json[QString("Unternehmen-PLZ")].isNull() && m_unternehmen_plz_isValid;

    m_zahlungen_isValid = ::OpenAPI::fromJsonValue(m_zahlungen, json[QString("Zahlungen")]);
    m_zahlungen_isSet = !json[QString("Zahlungen")].isNull() && m_zahlungen_isValid;

    m_zertifikat_seriennummer_isValid = ::OpenAPI::fromJsonValue(m_zertifikat_seriennummer, json[QString("Zertifikat-Seriennummer")]);
    m_zertifikat_seriennummer_isSet = !json[QString("Zertifikat-Seriennummer")].isNull() && m_zertifikat_seriennummer_isValid;
}

QString OAISignierteBelegdaten::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISignierteBelegdaten::asJsonObject() const {
    QJsonObject obj;
    if (m_beleg_datum_uhrzeit_isSet) {
        obj.insert(QString("Beleg-Datum-Uhrzeit"), ::OpenAPI::toJsonValue(m_beleg_datum_uhrzeit));
    }
    if (m_belegnummer_isSet) {
        obj.insert(QString("Belegnummer"), ::OpenAPI::toJsonValue(m_belegnummer));
    }
    if (m_betrag_brutto_isSet) {
        obj.insert(QString("Betrag-Brutto"), ::OpenAPI::toJsonValue(m_betrag_brutto));
    }
    if (m_betrag_netto_isSet) {
        obj.insert(QString("Betrag-Netto"), ::OpenAPI::toJsonValue(m_betrag_netto));
    }
    if (m_betrag_satz_besonders_brutto_isSet) {
        obj.insert(QString("Betrag-Satz-Besonders-Brutto"), ::OpenAPI::toJsonValue(m_betrag_satz_besonders_brutto));
    }
    if (m_betrag_satz_besonders_netto_isSet) {
        obj.insert(QString("Betrag-Satz-Besonders-Netto"), ::OpenAPI::toJsonValue(m_betrag_satz_besonders_netto));
    }
    if (m_betrag_satz_ermaessigt_1_brutto_isSet) {
        obj.insert(QString("Betrag-Satz-Ermaessigt-1-Brutto"), ::OpenAPI::toJsonValue(m_betrag_satz_ermaessigt_1_brutto));
    }
    if (m_betrag_satz_ermaessigt_1_netto_isSet) {
        obj.insert(QString("Betrag-Satz-Ermaessigt-1-Netto"), ::OpenAPI::toJsonValue(m_betrag_satz_ermaessigt_1_netto));
    }
    if (m_betrag_satz_ermaessigt_2_brutto_isSet) {
        obj.insert(QString("Betrag-Satz-Ermaessigt-2-Brutto"), ::OpenAPI::toJsonValue(m_betrag_satz_ermaessigt_2_brutto));
    }
    if (m_betrag_satz_ermaessigt_2_netto_isSet) {
        obj.insert(QString("Betrag-Satz-Ermaessigt-2-Netto"), ::OpenAPI::toJsonValue(m_betrag_satz_ermaessigt_2_netto));
    }
    if (m_betrag_satz_normal_brutto_isSet) {
        obj.insert(QString("Betrag-Satz-Normal-Brutto"), ::OpenAPI::toJsonValue(m_betrag_satz_normal_brutto));
    }
    if (m_betrag_satz_normal_netto_isSet) {
        obj.insert(QString("Betrag-Satz-Normal-Netto"), ::OpenAPI::toJsonValue(m_betrag_satz_normal_netto));
    }
    if (m_betrag_satz_null_brutto_isSet) {
        obj.insert(QString("Betrag-Satz-Null-Brutto"), ::OpenAPI::toJsonValue(m_betrag_satz_null_brutto));
    }
    if (m_betrag_satz_null_netto_isSet) {
        obj.insert(QString("Betrag-Satz-Null-Netto"), ::OpenAPI::toJsonValue(m_betrag_satz_null_netto));
    }
    if (m_externer_beleg_belegkreis_isSet) {
        obj.insert(QString("Externer-Beleg-Belegkreis"), ::OpenAPI::toJsonValue(m_externer_beleg_belegkreis));
    }
    if (m_externer_beleg_bezeichnung_isSet) {
        obj.insert(QString("Externer-Beleg-Bezeichnung"), ::OpenAPI::toJsonValue(m_externer_beleg_bezeichnung));
    }
    if (m_externer_beleg_referenz_isSet) {
        obj.insert(QString("Externer-Beleg-Referenz"), ::OpenAPI::toJsonValue(m_externer_beleg_referenz));
    }
    if (m_kassen_id_isSet) {
        obj.insert(QString("Kassen-ID"), ::OpenAPI::toJsonValue(m_kassen_id));
    }
    if (m_kunde_isSet) {
        obj.insert(QString("Kunde"), ::OpenAPI::toJsonValue(m_kunde));
    }
    if (m_notizen.size() > 0) {
        obj.insert(QString("Notizen"), ::OpenAPI::toJsonValue(m_notizen));
    }
    if (m_posten.size() > 0) {
        obj.insert(QString("Posten"), ::OpenAPI::toJsonValue(m_posten));
    }
    if (m_rabatte.size() > 0) {
        obj.insert(QString("Rabatte"), ::OpenAPI::toJsonValue(m_rabatte));
    }
    if (m_storno_isSet) {
        obj.insert(QString("Storno"), ::OpenAPI::toJsonValue(m_storno));
    }
    if (m_storno_beleg_uuid_isSet) {
        obj.insert(QString("Storno-Beleg-UUID"), ::OpenAPI::toJsonValue(m_storno_beleg_uuid));
    }
    if (m_storno_text_isSet) {
        obj.insert(QString("Storno-Text"), ::OpenAPI::toJsonValue(m_storno_text));
    }
    if (m_training_isSet) {
        obj.insert(QString("Training"), ::OpenAPI::toJsonValue(m_training));
    }
    if (m_unternehmen_adresse1_isSet) {
        obj.insert(QString("Unternehmen-Adresse1"), ::OpenAPI::toJsonValue(m_unternehmen_adresse1));
    }
    if (m_unternehmen_adresse2_isSet) {
        obj.insert(QString("Unternehmen-Adresse2"), ::OpenAPI::toJsonValue(m_unternehmen_adresse2));
    }
    if (m_unternehmen_fusszeile_isSet) {
        obj.insert(QString("Unternehmen-Fusszeile"), ::OpenAPI::toJsonValue(m_unternehmen_fusszeile));
    }
    if (m_unternehmen_id_isSet) {
        obj.insert(QString("Unternehmen-ID"), ::OpenAPI::toJsonValue(m_unternehmen_id));
    }
    if (m_unternehmen_id_typ_isSet) {
        obj.insert(QString("Unternehmen-ID-Typ"), ::OpenAPI::toJsonValue(m_unternehmen_id_typ));
    }
    if (m_unternehmen_kopfzeile_isSet) {
        obj.insert(QString("Unternehmen-Kopfzeile"), ::OpenAPI::toJsonValue(m_unternehmen_kopfzeile));
    }
    if (m_unternehmen_name_isSet) {
        obj.insert(QString("Unternehmen-Name"), ::OpenAPI::toJsonValue(m_unternehmen_name));
    }
    if (m_unternehmen_ort_isSet) {
        obj.insert(QString("Unternehmen-Ort"), ::OpenAPI::toJsonValue(m_unternehmen_ort));
    }
    if (m_unternehmen_plz_isSet) {
        obj.insert(QString("Unternehmen-PLZ"), ::OpenAPI::toJsonValue(m_unternehmen_plz));
    }
    if (m_zahlungen.size() > 0) {
        obj.insert(QString("Zahlungen"), ::OpenAPI::toJsonValue(m_zahlungen));
    }
    if (m_zertifikat_seriennummer_isSet) {
        obj.insert(QString("Zertifikat-Seriennummer"), ::OpenAPI::toJsonValue(m_zertifikat_seriennummer));
    }
    return obj;
}

QString OAISignierteBelegdaten::getBelegDatumUhrzeit() const {
    return m_beleg_datum_uhrzeit;
}
void OAISignierteBelegdaten::setBelegDatumUhrzeit(const QString &beleg_datum_uhrzeit) {
    m_beleg_datum_uhrzeit = beleg_datum_uhrzeit;
    m_beleg_datum_uhrzeit_isSet = true;
}

bool OAISignierteBelegdaten::is_beleg_datum_uhrzeit_Set() const{
    return m_beleg_datum_uhrzeit_isSet;
}

bool OAISignierteBelegdaten::is_beleg_datum_uhrzeit_Valid() const{
    return m_beleg_datum_uhrzeit_isValid;
}

QString OAISignierteBelegdaten::getBelegnummer() const {
    return m_belegnummer;
}
void OAISignierteBelegdaten::setBelegnummer(const QString &belegnummer) {
    m_belegnummer = belegnummer;
    m_belegnummer_isSet = true;
}

bool OAISignierteBelegdaten::is_belegnummer_Set() const{
    return m_belegnummer_isSet;
}

bool OAISignierteBelegdaten::is_belegnummer_Valid() const{
    return m_belegnummer_isValid;
}

qint32 OAISignierteBelegdaten::getBetragBrutto() const {
    return m_betrag_brutto;
}
void OAISignierteBelegdaten::setBetragBrutto(const qint32 &betrag_brutto) {
    m_betrag_brutto = betrag_brutto;
    m_betrag_brutto_isSet = true;
}

bool OAISignierteBelegdaten::is_betrag_brutto_Set() const{
    return m_betrag_brutto_isSet;
}

bool OAISignierteBelegdaten::is_betrag_brutto_Valid() const{
    return m_betrag_brutto_isValid;
}

qint32 OAISignierteBelegdaten::getBetragNetto() const {
    return m_betrag_netto;
}
void OAISignierteBelegdaten::setBetragNetto(const qint32 &betrag_netto) {
    m_betrag_netto = betrag_netto;
    m_betrag_netto_isSet = true;
}

bool OAISignierteBelegdaten::is_betrag_netto_Set() const{
    return m_betrag_netto_isSet;
}

bool OAISignierteBelegdaten::is_betrag_netto_Valid() const{
    return m_betrag_netto_isValid;
}

qint32 OAISignierteBelegdaten::getBetragSatzBesondersBrutto() const {
    return m_betrag_satz_besonders_brutto;
}
void OAISignierteBelegdaten::setBetragSatzBesondersBrutto(const qint32 &betrag_satz_besonders_brutto) {
    m_betrag_satz_besonders_brutto = betrag_satz_besonders_brutto;
    m_betrag_satz_besonders_brutto_isSet = true;
}

bool OAISignierteBelegdaten::is_betrag_satz_besonders_brutto_Set() const{
    return m_betrag_satz_besonders_brutto_isSet;
}

bool OAISignierteBelegdaten::is_betrag_satz_besonders_brutto_Valid() const{
    return m_betrag_satz_besonders_brutto_isValid;
}

qint32 OAISignierteBelegdaten::getBetragSatzBesondersNetto() const {
    return m_betrag_satz_besonders_netto;
}
void OAISignierteBelegdaten::setBetragSatzBesondersNetto(const qint32 &betrag_satz_besonders_netto) {
    m_betrag_satz_besonders_netto = betrag_satz_besonders_netto;
    m_betrag_satz_besonders_netto_isSet = true;
}

bool OAISignierteBelegdaten::is_betrag_satz_besonders_netto_Set() const{
    return m_betrag_satz_besonders_netto_isSet;
}

bool OAISignierteBelegdaten::is_betrag_satz_besonders_netto_Valid() const{
    return m_betrag_satz_besonders_netto_isValid;
}

qint32 OAISignierteBelegdaten::getBetragSatzErmaessigt1Brutto() const {
    return m_betrag_satz_ermaessigt_1_brutto;
}
void OAISignierteBelegdaten::setBetragSatzErmaessigt1Brutto(const qint32 &betrag_satz_ermaessigt_1_brutto) {
    m_betrag_satz_ermaessigt_1_brutto = betrag_satz_ermaessigt_1_brutto;
    m_betrag_satz_ermaessigt_1_brutto_isSet = true;
}

bool OAISignierteBelegdaten::is_betrag_satz_ermaessigt_1_brutto_Set() const{
    return m_betrag_satz_ermaessigt_1_brutto_isSet;
}

bool OAISignierteBelegdaten::is_betrag_satz_ermaessigt_1_brutto_Valid() const{
    return m_betrag_satz_ermaessigt_1_brutto_isValid;
}

qint32 OAISignierteBelegdaten::getBetragSatzErmaessigt1Netto() const {
    return m_betrag_satz_ermaessigt_1_netto;
}
void OAISignierteBelegdaten::setBetragSatzErmaessigt1Netto(const qint32 &betrag_satz_ermaessigt_1_netto) {
    m_betrag_satz_ermaessigt_1_netto = betrag_satz_ermaessigt_1_netto;
    m_betrag_satz_ermaessigt_1_netto_isSet = true;
}

bool OAISignierteBelegdaten::is_betrag_satz_ermaessigt_1_netto_Set() const{
    return m_betrag_satz_ermaessigt_1_netto_isSet;
}

bool OAISignierteBelegdaten::is_betrag_satz_ermaessigt_1_netto_Valid() const{
    return m_betrag_satz_ermaessigt_1_netto_isValid;
}

qint32 OAISignierteBelegdaten::getBetragSatzErmaessigt2Brutto() const {
    return m_betrag_satz_ermaessigt_2_brutto;
}
void OAISignierteBelegdaten::setBetragSatzErmaessigt2Brutto(const qint32 &betrag_satz_ermaessigt_2_brutto) {
    m_betrag_satz_ermaessigt_2_brutto = betrag_satz_ermaessigt_2_brutto;
    m_betrag_satz_ermaessigt_2_brutto_isSet = true;
}

bool OAISignierteBelegdaten::is_betrag_satz_ermaessigt_2_brutto_Set() const{
    return m_betrag_satz_ermaessigt_2_brutto_isSet;
}

bool OAISignierteBelegdaten::is_betrag_satz_ermaessigt_2_brutto_Valid() const{
    return m_betrag_satz_ermaessigt_2_brutto_isValid;
}

qint32 OAISignierteBelegdaten::getBetragSatzErmaessigt2Netto() const {
    return m_betrag_satz_ermaessigt_2_netto;
}
void OAISignierteBelegdaten::setBetragSatzErmaessigt2Netto(const qint32 &betrag_satz_ermaessigt_2_netto) {
    m_betrag_satz_ermaessigt_2_netto = betrag_satz_ermaessigt_2_netto;
    m_betrag_satz_ermaessigt_2_netto_isSet = true;
}

bool OAISignierteBelegdaten::is_betrag_satz_ermaessigt_2_netto_Set() const{
    return m_betrag_satz_ermaessigt_2_netto_isSet;
}

bool OAISignierteBelegdaten::is_betrag_satz_ermaessigt_2_netto_Valid() const{
    return m_betrag_satz_ermaessigt_2_netto_isValid;
}

qint32 OAISignierteBelegdaten::getBetragSatzNormalBrutto() const {
    return m_betrag_satz_normal_brutto;
}
void OAISignierteBelegdaten::setBetragSatzNormalBrutto(const qint32 &betrag_satz_normal_brutto) {
    m_betrag_satz_normal_brutto = betrag_satz_normal_brutto;
    m_betrag_satz_normal_brutto_isSet = true;
}

bool OAISignierteBelegdaten::is_betrag_satz_normal_brutto_Set() const{
    return m_betrag_satz_normal_brutto_isSet;
}

bool OAISignierteBelegdaten::is_betrag_satz_normal_brutto_Valid() const{
    return m_betrag_satz_normal_brutto_isValid;
}

qint32 OAISignierteBelegdaten::getBetragSatzNormalNetto() const {
    return m_betrag_satz_normal_netto;
}
void OAISignierteBelegdaten::setBetragSatzNormalNetto(const qint32 &betrag_satz_normal_netto) {
    m_betrag_satz_normal_netto = betrag_satz_normal_netto;
    m_betrag_satz_normal_netto_isSet = true;
}

bool OAISignierteBelegdaten::is_betrag_satz_normal_netto_Set() const{
    return m_betrag_satz_normal_netto_isSet;
}

bool OAISignierteBelegdaten::is_betrag_satz_normal_netto_Valid() const{
    return m_betrag_satz_normal_netto_isValid;
}

qint32 OAISignierteBelegdaten::getBetragSatzNullBrutto() const {
    return m_betrag_satz_null_brutto;
}
void OAISignierteBelegdaten::setBetragSatzNullBrutto(const qint32 &betrag_satz_null_brutto) {
    m_betrag_satz_null_brutto = betrag_satz_null_brutto;
    m_betrag_satz_null_brutto_isSet = true;
}

bool OAISignierteBelegdaten::is_betrag_satz_null_brutto_Set() const{
    return m_betrag_satz_null_brutto_isSet;
}

bool OAISignierteBelegdaten::is_betrag_satz_null_brutto_Valid() const{
    return m_betrag_satz_null_brutto_isValid;
}

qint32 OAISignierteBelegdaten::getBetragSatzNullNetto() const {
    return m_betrag_satz_null_netto;
}
void OAISignierteBelegdaten::setBetragSatzNullNetto(const qint32 &betrag_satz_null_netto) {
    m_betrag_satz_null_netto = betrag_satz_null_netto;
    m_betrag_satz_null_netto_isSet = true;
}

bool OAISignierteBelegdaten::is_betrag_satz_null_netto_Set() const{
    return m_betrag_satz_null_netto_isSet;
}

bool OAISignierteBelegdaten::is_betrag_satz_null_netto_Valid() const{
    return m_betrag_satz_null_netto_isValid;
}

QString OAISignierteBelegdaten::getExternerBelegBelegkreis() const {
    return m_externer_beleg_belegkreis;
}
void OAISignierteBelegdaten::setExternerBelegBelegkreis(const QString &externer_beleg_belegkreis) {
    m_externer_beleg_belegkreis = externer_beleg_belegkreis;
    m_externer_beleg_belegkreis_isSet = true;
}

bool OAISignierteBelegdaten::is_externer_beleg_belegkreis_Set() const{
    return m_externer_beleg_belegkreis_isSet;
}

bool OAISignierteBelegdaten::is_externer_beleg_belegkreis_Valid() const{
    return m_externer_beleg_belegkreis_isValid;
}

QString OAISignierteBelegdaten::getExternerBelegBezeichnung() const {
    return m_externer_beleg_bezeichnung;
}
void OAISignierteBelegdaten::setExternerBelegBezeichnung(const QString &externer_beleg_bezeichnung) {
    m_externer_beleg_bezeichnung = externer_beleg_bezeichnung;
    m_externer_beleg_bezeichnung_isSet = true;
}

bool OAISignierteBelegdaten::is_externer_beleg_bezeichnung_Set() const{
    return m_externer_beleg_bezeichnung_isSet;
}

bool OAISignierteBelegdaten::is_externer_beleg_bezeichnung_Valid() const{
    return m_externer_beleg_bezeichnung_isValid;
}

QString OAISignierteBelegdaten::getExternerBelegReferenz() const {
    return m_externer_beleg_referenz;
}
void OAISignierteBelegdaten::setExternerBelegReferenz(const QString &externer_beleg_referenz) {
    m_externer_beleg_referenz = externer_beleg_referenz;
    m_externer_beleg_referenz_isSet = true;
}

bool OAISignierteBelegdaten::is_externer_beleg_referenz_Set() const{
    return m_externer_beleg_referenz_isSet;
}

bool OAISignierteBelegdaten::is_externer_beleg_referenz_Valid() const{
    return m_externer_beleg_referenz_isValid;
}

QString OAISignierteBelegdaten::getKassenId() const {
    return m_kassen_id;
}
void OAISignierteBelegdaten::setKassenId(const QString &kassen_id) {
    m_kassen_id = kassen_id;
    m_kassen_id_isSet = true;
}

bool OAISignierteBelegdaten::is_kassen_id_Set() const{
    return m_kassen_id_isSet;
}

bool OAISignierteBelegdaten::is_kassen_id_Valid() const{
    return m_kassen_id_isValid;
}

QString OAISignierteBelegdaten::getKunde() const {
    return m_kunde;
}
void OAISignierteBelegdaten::setKunde(const QString &kunde) {
    m_kunde = kunde;
    m_kunde_isSet = true;
}

bool OAISignierteBelegdaten::is_kunde_Set() const{
    return m_kunde_isSet;
}

bool OAISignierteBelegdaten::is_kunde_Valid() const{
    return m_kunde_isValid;
}

QList<QString> OAISignierteBelegdaten::getNotizen() const {
    return m_notizen;
}
void OAISignierteBelegdaten::setNotizen(const QList<QString> &notizen) {
    m_notizen = notizen;
    m_notizen_isSet = true;
}

bool OAISignierteBelegdaten::is_notizen_Set() const{
    return m_notizen_isSet;
}

bool OAISignierteBelegdaten::is_notizen_Valid() const{
    return m_notizen_isValid;
}

QList<OAIPosten> OAISignierteBelegdaten::getPosten() const {
    return m_posten;
}
void OAISignierteBelegdaten::setPosten(const QList<OAIPosten> &posten) {
    m_posten = posten;
    m_posten_isSet = true;
}

bool OAISignierteBelegdaten::is_posten_Set() const{
    return m_posten_isSet;
}

bool OAISignierteBelegdaten::is_posten_Valid() const{
    return m_posten_isValid;
}

QList<OAIRabatt> OAISignierteBelegdaten::getRabatte() const {
    return m_rabatte;
}
void OAISignierteBelegdaten::setRabatte(const QList<OAIRabatt> &rabatte) {
    m_rabatte = rabatte;
    m_rabatte_isSet = true;
}

bool OAISignierteBelegdaten::is_rabatte_Set() const{
    return m_rabatte_isSet;
}

bool OAISignierteBelegdaten::is_rabatte_Valid() const{
    return m_rabatte_isValid;
}

bool OAISignierteBelegdaten::isStorno() const {
    return m_storno;
}
void OAISignierteBelegdaten::setStorno(const bool &storno) {
    m_storno = storno;
    m_storno_isSet = true;
}

bool OAISignierteBelegdaten::is_storno_Set() const{
    return m_storno_isSet;
}

bool OAISignierteBelegdaten::is_storno_Valid() const{
    return m_storno_isValid;
}

QString OAISignierteBelegdaten::getStornoBelegUuid() const {
    return m_storno_beleg_uuid;
}
void OAISignierteBelegdaten::setStornoBelegUuid(const QString &storno_beleg_uuid) {
    m_storno_beleg_uuid = storno_beleg_uuid;
    m_storno_beleg_uuid_isSet = true;
}

bool OAISignierteBelegdaten::is_storno_beleg_uuid_Set() const{
    return m_storno_beleg_uuid_isSet;
}

bool OAISignierteBelegdaten::is_storno_beleg_uuid_Valid() const{
    return m_storno_beleg_uuid_isValid;
}

QString OAISignierteBelegdaten::getStornoText() const {
    return m_storno_text;
}
void OAISignierteBelegdaten::setStornoText(const QString &storno_text) {
    m_storno_text = storno_text;
    m_storno_text_isSet = true;
}

bool OAISignierteBelegdaten::is_storno_text_Set() const{
    return m_storno_text_isSet;
}

bool OAISignierteBelegdaten::is_storno_text_Valid() const{
    return m_storno_text_isValid;
}

bool OAISignierteBelegdaten::isTraining() const {
    return m_training;
}
void OAISignierteBelegdaten::setTraining(const bool &training) {
    m_training = training;
    m_training_isSet = true;
}

bool OAISignierteBelegdaten::is_training_Set() const{
    return m_training_isSet;
}

bool OAISignierteBelegdaten::is_training_Valid() const{
    return m_training_isValid;
}

QString OAISignierteBelegdaten::getUnternehmenAdresse1() const {
    return m_unternehmen_adresse1;
}
void OAISignierteBelegdaten::setUnternehmenAdresse1(const QString &unternehmen_adresse1) {
    m_unternehmen_adresse1 = unternehmen_adresse1;
    m_unternehmen_adresse1_isSet = true;
}

bool OAISignierteBelegdaten::is_unternehmen_adresse1_Set() const{
    return m_unternehmen_adresse1_isSet;
}

bool OAISignierteBelegdaten::is_unternehmen_adresse1_Valid() const{
    return m_unternehmen_adresse1_isValid;
}

QString OAISignierteBelegdaten::getUnternehmenAdresse2() const {
    return m_unternehmen_adresse2;
}
void OAISignierteBelegdaten::setUnternehmenAdresse2(const QString &unternehmen_adresse2) {
    m_unternehmen_adresse2 = unternehmen_adresse2;
    m_unternehmen_adresse2_isSet = true;
}

bool OAISignierteBelegdaten::is_unternehmen_adresse2_Set() const{
    return m_unternehmen_adresse2_isSet;
}

bool OAISignierteBelegdaten::is_unternehmen_adresse2_Valid() const{
    return m_unternehmen_adresse2_isValid;
}

QString OAISignierteBelegdaten::getUnternehmenFusszeile() const {
    return m_unternehmen_fusszeile;
}
void OAISignierteBelegdaten::setUnternehmenFusszeile(const QString &unternehmen_fusszeile) {
    m_unternehmen_fusszeile = unternehmen_fusszeile;
    m_unternehmen_fusszeile_isSet = true;
}

bool OAISignierteBelegdaten::is_unternehmen_fusszeile_Set() const{
    return m_unternehmen_fusszeile_isSet;
}

bool OAISignierteBelegdaten::is_unternehmen_fusszeile_Valid() const{
    return m_unternehmen_fusszeile_isValid;
}

QString OAISignierteBelegdaten::getUnternehmenId() const {
    return m_unternehmen_id;
}
void OAISignierteBelegdaten::setUnternehmenId(const QString &unternehmen_id) {
    m_unternehmen_id = unternehmen_id;
    m_unternehmen_id_isSet = true;
}

bool OAISignierteBelegdaten::is_unternehmen_id_Set() const{
    return m_unternehmen_id_isSet;
}

bool OAISignierteBelegdaten::is_unternehmen_id_Valid() const{
    return m_unternehmen_id_isValid;
}

QString OAISignierteBelegdaten::getUnternehmenIdTyp() const {
    return m_unternehmen_id_typ;
}
void OAISignierteBelegdaten::setUnternehmenIdTyp(const QString &unternehmen_id_typ) {
    m_unternehmen_id_typ = unternehmen_id_typ;
    m_unternehmen_id_typ_isSet = true;
}

bool OAISignierteBelegdaten::is_unternehmen_id_typ_Set() const{
    return m_unternehmen_id_typ_isSet;
}

bool OAISignierteBelegdaten::is_unternehmen_id_typ_Valid() const{
    return m_unternehmen_id_typ_isValid;
}

QString OAISignierteBelegdaten::getUnternehmenKopfzeile() const {
    return m_unternehmen_kopfzeile;
}
void OAISignierteBelegdaten::setUnternehmenKopfzeile(const QString &unternehmen_kopfzeile) {
    m_unternehmen_kopfzeile = unternehmen_kopfzeile;
    m_unternehmen_kopfzeile_isSet = true;
}

bool OAISignierteBelegdaten::is_unternehmen_kopfzeile_Set() const{
    return m_unternehmen_kopfzeile_isSet;
}

bool OAISignierteBelegdaten::is_unternehmen_kopfzeile_Valid() const{
    return m_unternehmen_kopfzeile_isValid;
}

QString OAISignierteBelegdaten::getUnternehmenName() const {
    return m_unternehmen_name;
}
void OAISignierteBelegdaten::setUnternehmenName(const QString &unternehmen_name) {
    m_unternehmen_name = unternehmen_name;
    m_unternehmen_name_isSet = true;
}

bool OAISignierteBelegdaten::is_unternehmen_name_Set() const{
    return m_unternehmen_name_isSet;
}

bool OAISignierteBelegdaten::is_unternehmen_name_Valid() const{
    return m_unternehmen_name_isValid;
}

QString OAISignierteBelegdaten::getUnternehmenOrt() const {
    return m_unternehmen_ort;
}
void OAISignierteBelegdaten::setUnternehmenOrt(const QString &unternehmen_ort) {
    m_unternehmen_ort = unternehmen_ort;
    m_unternehmen_ort_isSet = true;
}

bool OAISignierteBelegdaten::is_unternehmen_ort_Set() const{
    return m_unternehmen_ort_isSet;
}

bool OAISignierteBelegdaten::is_unternehmen_ort_Valid() const{
    return m_unternehmen_ort_isValid;
}

QString OAISignierteBelegdaten::getUnternehmenPlz() const {
    return m_unternehmen_plz;
}
void OAISignierteBelegdaten::setUnternehmenPlz(const QString &unternehmen_plz) {
    m_unternehmen_plz = unternehmen_plz;
    m_unternehmen_plz_isSet = true;
}

bool OAISignierteBelegdaten::is_unternehmen_plz_Set() const{
    return m_unternehmen_plz_isSet;
}

bool OAISignierteBelegdaten::is_unternehmen_plz_Valid() const{
    return m_unternehmen_plz_isValid;
}

QList<OAIZahlung> OAISignierteBelegdaten::getZahlungen() const {
    return m_zahlungen;
}
void OAISignierteBelegdaten::setZahlungen(const QList<OAIZahlung> &zahlungen) {
    m_zahlungen = zahlungen;
    m_zahlungen_isSet = true;
}

bool OAISignierteBelegdaten::is_zahlungen_Set() const{
    return m_zahlungen_isSet;
}

bool OAISignierteBelegdaten::is_zahlungen_Valid() const{
    return m_zahlungen_isValid;
}

QString OAISignierteBelegdaten::getZertifikatSeriennummer() const {
    return m_zertifikat_seriennummer;
}
void OAISignierteBelegdaten::setZertifikatSeriennummer(const QString &zertifikat_seriennummer) {
    m_zertifikat_seriennummer = zertifikat_seriennummer;
    m_zertifikat_seriennummer_isSet = true;
}

bool OAISignierteBelegdaten::is_zertifikat_seriennummer_Set() const{
    return m_zertifikat_seriennummer_isSet;
}

bool OAISignierteBelegdaten::is_zertifikat_seriennummer_Valid() const{
    return m_zertifikat_seriennummer_isValid;
}

bool OAISignierteBelegdaten::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_beleg_datum_uhrzeit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_belegnummer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_betrag_brutto_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_betrag_netto_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_betrag_satz_besonders_brutto_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_betrag_satz_besonders_netto_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_betrag_satz_ermaessigt_1_brutto_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_betrag_satz_ermaessigt_1_netto_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_betrag_satz_ermaessigt_2_brutto_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_betrag_satz_ermaessigt_2_netto_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_betrag_satz_normal_brutto_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_betrag_satz_normal_netto_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_betrag_satz_null_brutto_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_betrag_satz_null_netto_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_externer_beleg_belegkreis_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_externer_beleg_bezeichnung_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_externer_beleg_referenz_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kassen_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kunde_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notizen.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_posten.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_rabatte.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_storno_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_storno_beleg_uuid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_storno_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_training_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unternehmen_adresse1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unternehmen_adresse2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unternehmen_fusszeile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unternehmen_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unternehmen_id_typ_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unternehmen_kopfzeile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unternehmen_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unternehmen_ort_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unternehmen_plz_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zahlungen.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_zertifikat_seriennummer_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISignierteBelegdaten::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
