# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Registrierkasse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, benutzerschluessel: str=None, kassen_id: str=None, signaturerstellungseinheit_uuid: str=None, href: str=None, uuid: str=None):
        """Registrierkasse - a model defined in OpenAPI

        :param benutzerschluessel: The benutzerschluessel of this Registrierkasse.
        :param kassen_id: The kassen_id of this Registrierkasse.
        :param signaturerstellungseinheit_uuid: The signaturerstellungseinheit_uuid of this Registrierkasse.
        :param href: The href of this Registrierkasse.
        :param uuid: The uuid of this Registrierkasse.
        """
        self.openapi_types = {
            'benutzerschluessel': str,
            'kassen_id': str,
            'signaturerstellungseinheit_uuid': str,
            'href': str,
            'uuid': str
        }

        self.attribute_map = {
            'benutzerschluessel': 'Benutzerschluessel',
            'kassen_id': 'Kassen-ID',
            'signaturerstellungseinheit_uuid': 'Signaturerstellungseinheit-UUID',
            'href': '_href',
            'uuid': '_uuid'
        }

        self._benutzerschluessel = benutzerschluessel
        self._kassen_id = kassen_id
        self._signaturerstellungseinheit_uuid = signaturerstellungseinheit_uuid
        self._href = href
        self._uuid = uuid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Registrierkasse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Registrierkasse of this Registrierkasse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def benutzerschluessel(self):
        """Gets the benutzerschluessel of this Registrierkasse.

        The base64 encoded AES 256 key used for encrypting the \"Umsatzzaehler\".

        :return: The benutzerschluessel of this Registrierkasse.
        :rtype: str
        """
        return self._benutzerschluessel

    @benutzerschluessel.setter
    def benutzerschluessel(self, benutzerschluessel):
        """Sets the benutzerschluessel of this Registrierkasse.

        The base64 encoded AES 256 key used for encrypting the \"Umsatzzaehler\".

        :param benutzerschluessel: The benutzerschluessel of this Registrierkasse.
        :type benutzerschluessel: str
        """

        self._benutzerschluessel = benutzerschluessel

    @property
    def kassen_id(self):
        """Gets the kassen_id of this Registrierkasse.

        The (RKSV) \"Kassenidentifikationsnummer\" of this particular `Registrierkasse`.

        :return: The kassen_id of this Registrierkasse.
        :rtype: str
        """
        return self._kassen_id

    @kassen_id.setter
    def kassen_id(self, kassen_id):
        """Sets the kassen_id of this Registrierkasse.

        The (RKSV) \"Kassenidentifikationsnummer\" of this particular `Registrierkasse`.

        :param kassen_id: The kassen_id of this Registrierkasse.
        :type kassen_id: str
        """

        self._kassen_id = kassen_id

    @property
    def signaturerstellungseinheit_uuid(self):
        """Gets the signaturerstellungseinheit_uuid of this Registrierkasse.

        The `_uuid` of the paired \"Signaturerstellungseinheit\".

        :return: The signaturerstellungseinheit_uuid of this Registrierkasse.
        :rtype: str
        """
        return self._signaturerstellungseinheit_uuid

    @signaturerstellungseinheit_uuid.setter
    def signaturerstellungseinheit_uuid(self, signaturerstellungseinheit_uuid):
        """Sets the signaturerstellungseinheit_uuid of this Registrierkasse.

        The `_uuid` of the paired \"Signaturerstellungseinheit\".

        :param signaturerstellungseinheit_uuid: The signaturerstellungseinheit_uuid of this Registrierkasse.
        :type signaturerstellungseinheit_uuid: str
        """

        self._signaturerstellungseinheit_uuid = signaturerstellungseinheit_uuid

    @property
    def href(self):
        """Gets the href of this Registrierkasse.

        URL of the particular `Registrierkasse` instance.

        :return: The href of this Registrierkasse.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this Registrierkasse.

        URL of the particular `Registrierkasse` instance.

        :param href: The href of this Registrierkasse.
        :type href: str
        """

        self._href = href

    @property
    def uuid(self):
        """Gets the uuid of this Registrierkasse.

        Unique ID of the particular `Registrierkasse` instance.

        :return: The uuid of this Registrierkasse.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this Registrierkasse.

        Unique ID of the particular `Registrierkasse` instance.

        :param uuid: The uuid of this Registrierkasse.
        :type uuid: str
        """

        self._uuid = uuid
