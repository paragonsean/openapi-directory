# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.signierte_belegdaten import SignierteBelegdaten
from openapi_server import util


class Beleg(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, beleg_codes: List[str]=None, beleg_typen: List[str]=None, belegdaten: SignierteBelegdaten=None, jws: str=None, qr: str=None, qr_link: str=None, registrierkasse_uuid: str=None, signaturerstellungseinheit_uuid: str=None, href: str=None, uuid: str=None):
        """Beleg - a model defined in OpenAPI

        :param beleg_codes: The beleg_codes of this Beleg.
        :param beleg_typen: The beleg_typen of this Beleg.
        :param belegdaten: The belegdaten of this Beleg.
        :param jws: The jws of this Beleg.
        :param qr: The qr of this Beleg.
        :param qr_link: The qr_link of this Beleg.
        :param registrierkasse_uuid: The registrierkasse_uuid of this Beleg.
        :param signaturerstellungseinheit_uuid: The signaturerstellungseinheit_uuid of this Beleg.
        :param href: The href of this Beleg.
        :param uuid: The uuid of this Beleg.
        """
        self.openapi_types = {
            'beleg_codes': List[str],
            'beleg_typen': List[str],
            'belegdaten': SignierteBelegdaten,
            'jws': str,
            'qr': str,
            'qr_link': str,
            'registrierkasse_uuid': str,
            'signaturerstellungseinheit_uuid': str,
            'href': str,
            'uuid': str
        }

        self.attribute_map = {
            'beleg_codes': 'Beleg-Codes',
            'beleg_typen': 'Beleg-Typen',
            'belegdaten': 'Belegdaten',
            'jws': 'JWS',
            'qr': 'QR',
            'qr_link': 'QR-Link',
            'registrierkasse_uuid': 'Registrierkasse-UUID',
            'signaturerstellungseinheit_uuid': 'Signaturerstellungseinheit-UUID',
            'href': '_href',
            'uuid': '_uuid'
        }

        self._beleg_codes = beleg_codes
        self._beleg_typen = beleg_typen
        self._belegdaten = belegdaten
        self._jws = jws
        self._qr = qr
        self._qr_link = qr_link
        self._registrierkasse_uuid = registrierkasse_uuid
        self._signaturerstellungseinheit_uuid = signaturerstellungseinheit_uuid
        self._href = href
        self._uuid = uuid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Beleg':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Beleg of this Beleg.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def beleg_codes(self):
        """Gets the beleg_codes of this Beleg.


        :return: The beleg_codes of this Beleg.
        :rtype: List[str]
        """
        return self._beleg_codes

    @beleg_codes.setter
    def beleg_codes(self, beleg_codes):
        """Sets the beleg_codes of this Beleg.


        :param beleg_codes: The beleg_codes of this Beleg.
        :type beleg_codes: List[str]
        """

        self._beleg_codes = beleg_codes

    @property
    def beleg_typen(self):
        """Gets the beleg_typen of this Beleg.


        :return: The beleg_typen of this Beleg.
        :rtype: List[str]
        """
        return self._beleg_typen

    @beleg_typen.setter
    def beleg_typen(self, beleg_typen):
        """Sets the beleg_typen of this Beleg.


        :param beleg_typen: The beleg_typen of this Beleg.
        :type beleg_typen: List[str]
        """
        allowed_values = ["Belegkreisinitialisierung", "Kassenbericht", "Monatsabschluss", "Startbeleg", "Storno", "Systembeleg", "Training"]  # noqa: E501
        if not set(beleg_typen).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `beleg_typen` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(beleg_typen) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._beleg_typen = beleg_typen

    @property
    def belegdaten(self):
        """Gets the belegdaten of this Beleg.


        :return: The belegdaten of this Beleg.
        :rtype: SignierteBelegdaten
        """
        return self._belegdaten

    @belegdaten.setter
    def belegdaten(self, belegdaten):
        """Sets the belegdaten of this Beleg.


        :param belegdaten: The belegdaten of this Beleg.
        :type belegdaten: SignierteBelegdaten
        """

        self._belegdaten = belegdaten

    @property
    def jws(self):
        """Gets the jws of this Beleg.

        The signed `Beleg` as a JWS signature token.

        :return: The jws of this Beleg.
        :rtype: str
        """
        return self._jws

    @jws.setter
    def jws(self, jws):
        """Sets the jws of this Beleg.

        The signed `Beleg` as a JWS signature token.

        :param jws: The jws of this Beleg.
        :type jws: str
        """

        self._jws = jws

    @property
    def qr(self):
        """Gets the qr of this Beleg.

        The portion of the `JWS` token to be used for generating QR codes.

        :return: The qr of this Beleg.
        :rtype: str
        """
        return self._qr

    @qr.setter
    def qr(self, qr):
        """Sets the qr of this Beleg.

        The portion of the `JWS` token to be used for generating QR codes.

        :param qr: The qr of this Beleg.
        :type qr: str
        """

        self._qr = qr

    @property
    def qr_link(self):
        """Gets the qr_link of this Beleg.

        A hyperlink that retrieves the `QR` data.

        :return: The qr_link of this Beleg.
        :rtype: str
        """
        return self._qr_link

    @qr_link.setter
    def qr_link(self, qr_link):
        """Sets the qr_link of this Beleg.

        A hyperlink that retrieves the `QR` data.

        :param qr_link: The qr_link of this Beleg.
        :type qr_link: str
        """

        self._qr_link = qr_link

    @property
    def registrierkasse_uuid(self):
        """Gets the registrierkasse_uuid of this Beleg.

        The `_uuid` of the `Registrierkasse` that has issued this `Beleg`.

        :return: The registrierkasse_uuid of this Beleg.
        :rtype: str
        """
        return self._registrierkasse_uuid

    @registrierkasse_uuid.setter
    def registrierkasse_uuid(self, registrierkasse_uuid):
        """Sets the registrierkasse_uuid of this Beleg.

        The `_uuid` of the `Registrierkasse` that has issued this `Beleg`.

        :param registrierkasse_uuid: The registrierkasse_uuid of this Beleg.
        :type registrierkasse_uuid: str
        """

        self._registrierkasse_uuid = registrierkasse_uuid

    @property
    def signaturerstellungseinheit_uuid(self):
        """Gets the signaturerstellungseinheit_uuid of this Beleg.

        The `_uuid` of the `Signaturerstellungseinheit` that has signed this `Beleg`.

        :return: The signaturerstellungseinheit_uuid of this Beleg.
        :rtype: str
        """
        return self._signaturerstellungseinheit_uuid

    @signaturerstellungseinheit_uuid.setter
    def signaturerstellungseinheit_uuid(self, signaturerstellungseinheit_uuid):
        """Sets the signaturerstellungseinheit_uuid of this Beleg.

        The `_uuid` of the `Signaturerstellungseinheit` that has signed this `Beleg`.

        :param signaturerstellungseinheit_uuid: The signaturerstellungseinheit_uuid of this Beleg.
        :type signaturerstellungseinheit_uuid: str
        """

        self._signaturerstellungseinheit_uuid = signaturerstellungseinheit_uuid

    @property
    def href(self):
        """Gets the href of this Beleg.

        URL of the particular `Beleg` instance.

        :return: The href of this Beleg.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this Beleg.

        URL of the particular `Beleg` instance.

        :param href: The href of this Beleg.
        :type href: str
        """

        self._href = href

    @property
    def uuid(self):
        """Gets the uuid of this Beleg.

        Unique ID of the particular `Beleg` instance.

        :return: The uuid of this Beleg.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this Beleg.

        Unique ID of the particular `Beleg` instance.

        :param uuid: The uuid of this Beleg.
        :type uuid: str
        """

        self._uuid = uuid
