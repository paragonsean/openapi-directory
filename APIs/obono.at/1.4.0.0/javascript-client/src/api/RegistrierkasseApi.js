/**
 * obono RKSV API
 * Provides a RESTful API for interacting with virtual cash registers and creating receipts that are conform with the Registrierkassensicherheitsverordnung (RKSV).  You may find our [automatically generated clients](./clients) for various programming languages and environments helpful... 
 *
 * The version of the OpenAPI document: 1.4.0.0
 * Contact: info@obono.at
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Registrierkasse from '../model/Registrierkasse';

/**
* Registrierkasse service.
* @module api/RegistrierkasseApi
* @version 1.4.0.0
*/
export default class RegistrierkasseApi {

    /**
    * Constructs a new RegistrierkasseApi. 
    * @alias module:api/RegistrierkasseApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getDEP operation.
     * @callback module:api/RegistrierkasseApi~getDEPCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates a DEP file.
     * @param {String} registrierkasseUuid The `_uuid` of the `Registrierkasse` to retrieve the DEP file.
     * @param {module:api/RegistrierkasseApi~getDEPCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getDEP(registrierkasseUuid, callback) {
      let postBody = null;
      // verify the required parameter 'registrierkasseUuid' is set
      if (registrierkasseUuid === undefined || registrierkasseUuid === null) {
        throw new Error("Missing the required parameter 'registrierkasseUuid' when calling getDEP");
      }

      let pathParams = {
        'registrierkasseUuid': registrierkasseUuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jwt'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/registrierkassen/{registrierkasseUuid}/dep', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRegistrierkasse operation.
     * @callback module:api/RegistrierkasseApi~getRegistrierkasseCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Registrierkasse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns information about a particular `Registrierkasse`.
     * @param {String} registrierkasseUuid The `_uuid` of a particular `Registrierkasse` to fetch.
     * @param {module:api/RegistrierkasseApi~getRegistrierkasseCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Registrierkasse}
     */
    getRegistrierkasse(registrierkasseUuid, callback) {
      let postBody = null;
      // verify the required parameter 'registrierkasseUuid' is set
      if (registrierkasseUuid === undefined || registrierkasseUuid === null) {
        throw new Error("Missing the required parameter 'registrierkasseUuid' when calling getRegistrierkasse");
      }

      let pathParams = {
        'registrierkasseUuid': registrierkasseUuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jwt'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Registrierkasse;
      return this.apiClient.callApi(
        '/registrierkassen/{registrierkasseUuid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
