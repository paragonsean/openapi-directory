/**
 * obono RKSV API
 * Provides a RESTful API for interacting with virtual cash registers and creating receipts that are conform with the Registrierkassensicherheitsverordnung (RKSV).  You may find our [automatically generated clients](./clients) for various programming languages and environments helpful... 
 *
 * The version of the OpenAPI document: 1.4.0.0
 * Contact: info@obono.at
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Registrierkasse model module.
 * @module model/Registrierkasse
 * @version 1.4.0.0
 */
class Registrierkasse {
    /**
     * Constructs a new <code>Registrierkasse</code>.
     * @alias module:model/Registrierkasse
     */
    constructor() { 
        
        Registrierkasse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Registrierkasse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Registrierkasse} obj Optional instance to populate.
     * @return {module:model/Registrierkasse} The populated <code>Registrierkasse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Registrierkasse();

            if (data.hasOwnProperty('Benutzerschluessel')) {
                obj['Benutzerschluessel'] = ApiClient.convertToType(data['Benutzerschluessel'], 'String');
            }
            if (data.hasOwnProperty('Kassen-ID')) {
                obj['Kassen-ID'] = ApiClient.convertToType(data['Kassen-ID'], 'String');
            }
            if (data.hasOwnProperty('Signaturerstellungseinheit-UUID')) {
                obj['Signaturerstellungseinheit-UUID'] = ApiClient.convertToType(data['Signaturerstellungseinheit-UUID'], 'String');
            }
            if (data.hasOwnProperty('_href')) {
                obj['_href'] = ApiClient.convertToType(data['_href'], 'String');
            }
            if (data.hasOwnProperty('_uuid')) {
                obj['_uuid'] = ApiClient.convertToType(data['_uuid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Registrierkasse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Registrierkasse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Benutzerschluessel'] && !(typeof data['Benutzerschluessel'] === 'string' || data['Benutzerschluessel'] instanceof String)) {
            throw new Error("Expected the field `Benutzerschluessel` to be a primitive type in the JSON string but got " + data['Benutzerschluessel']);
        }
        // ensure the json data is a string
        if (data['Kassen-ID'] && !(typeof data['Kassen-ID'] === 'string' || data['Kassen-ID'] instanceof String)) {
            throw new Error("Expected the field `Kassen-ID` to be a primitive type in the JSON string but got " + data['Kassen-ID']);
        }
        // ensure the json data is a string
        if (data['Signaturerstellungseinheit-UUID'] && !(typeof data['Signaturerstellungseinheit-UUID'] === 'string' || data['Signaturerstellungseinheit-UUID'] instanceof String)) {
            throw new Error("Expected the field `Signaturerstellungseinheit-UUID` to be a primitive type in the JSON string but got " + data['Signaturerstellungseinheit-UUID']);
        }
        // ensure the json data is a string
        if (data['_href'] && !(typeof data['_href'] === 'string' || data['_href'] instanceof String)) {
            throw new Error("Expected the field `_href` to be a primitive type in the JSON string but got " + data['_href']);
        }
        // ensure the json data is a string
        if (data['_uuid'] && !(typeof data['_uuid'] === 'string' || data['_uuid'] instanceof String)) {
            throw new Error("Expected the field `_uuid` to be a primitive type in the JSON string but got " + data['_uuid']);
        }

        return true;
    }


}



/**
 * The base64 encoded AES 256 key used for encrypting the \"Umsatzzaehler\".
 * @member {String} Benutzerschluessel
 */
Registrierkasse.prototype['Benutzerschluessel'] = undefined;

/**
 * The (RKSV) \"Kassenidentifikationsnummer\" of this particular `Registrierkasse`.
 * @member {String} Kassen-ID
 */
Registrierkasse.prototype['Kassen-ID'] = undefined;

/**
 * The `_uuid` of the paired \"Signaturerstellungseinheit\".
 * @member {String} Signaturerstellungseinheit-UUID
 */
Registrierkasse.prototype['Signaturerstellungseinheit-UUID'] = undefined;

/**
 * URL of the particular `Registrierkasse` instance.
 * @member {String} _href
 */
Registrierkasse.prototype['_href'] = undefined;

/**
 * Unique ID of the particular `Registrierkasse` instance.
 * @member {String} _uuid
 */
Registrierkasse.prototype['_uuid'] = undefined;






export default Registrierkasse;

