/**
 * obono RKSV API
 * Provides a RESTful API for interacting with virtual cash registers and creating receipts that are conform with the Registrierkassensicherheitsverordnung (RKSV).  You may find our [automatically generated clients](./clients) for various programming languages and environments helpful... 
 *
 * The version of the OpenAPI document: 1.4.0.0
 * Contact: info@obono.at
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ObonoRksvApi);
  }
}(this, function(expect, ObonoRksvApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ObonoRksvApi.SignierteBelegdaten();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SignierteBelegdaten', function() {
    it('should create an instance of SignierteBelegdaten', function() {
      // uncomment below and update the code to test SignierteBelegdaten
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be.a(ObonoRksvApi.SignierteBelegdaten);
    });

    it('should have the property belegDatumUhrzeit (base name: "Beleg-Datum-Uhrzeit")', function() {
      // uncomment below and update the code to test the property belegDatumUhrzeit
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property belegnummer (base name: "Belegnummer")', function() {
      // uncomment below and update the code to test the property belegnummer
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property betragBrutto (base name: "Betrag-Brutto")', function() {
      // uncomment below and update the code to test the property betragBrutto
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property betragNetto (base name: "Betrag-Netto")', function() {
      // uncomment below and update the code to test the property betragNetto
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property betragSatzBesondersBrutto (base name: "Betrag-Satz-Besonders-Brutto")', function() {
      // uncomment below and update the code to test the property betragSatzBesondersBrutto
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property betragSatzBesondersNetto (base name: "Betrag-Satz-Besonders-Netto")', function() {
      // uncomment below and update the code to test the property betragSatzBesondersNetto
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property betragSatzErmaessigt1Brutto (base name: "Betrag-Satz-Ermaessigt-1-Brutto")', function() {
      // uncomment below and update the code to test the property betragSatzErmaessigt1Brutto
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property betragSatzErmaessigt1Netto (base name: "Betrag-Satz-Ermaessigt-1-Netto")', function() {
      // uncomment below and update the code to test the property betragSatzErmaessigt1Netto
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property betragSatzErmaessigt2Brutto (base name: "Betrag-Satz-Ermaessigt-2-Brutto")', function() {
      // uncomment below and update the code to test the property betragSatzErmaessigt2Brutto
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property betragSatzErmaessigt2Netto (base name: "Betrag-Satz-Ermaessigt-2-Netto")', function() {
      // uncomment below and update the code to test the property betragSatzErmaessigt2Netto
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property betragSatzNormalBrutto (base name: "Betrag-Satz-Normal-Brutto")', function() {
      // uncomment below and update the code to test the property betragSatzNormalBrutto
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property betragSatzNormalNetto (base name: "Betrag-Satz-Normal-Netto")', function() {
      // uncomment below and update the code to test the property betragSatzNormalNetto
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property betragSatzNullBrutto (base name: "Betrag-Satz-Null-Brutto")', function() {
      // uncomment below and update the code to test the property betragSatzNullBrutto
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property betragSatzNullNetto (base name: "Betrag-Satz-Null-Netto")', function() {
      // uncomment below and update the code to test the property betragSatzNullNetto
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property externerBelegBelegkreis (base name: "Externer-Beleg-Belegkreis")', function() {
      // uncomment below and update the code to test the property externerBelegBelegkreis
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property externerBelegBezeichnung (base name: "Externer-Beleg-Bezeichnung")', function() {
      // uncomment below and update the code to test the property externerBelegBezeichnung
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property externerBelegReferenz (base name: "Externer-Beleg-Referenz")', function() {
      // uncomment below and update the code to test the property externerBelegReferenz
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property kassenID (base name: "Kassen-ID")', function() {
      // uncomment below and update the code to test the property kassenID
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property kunde (base name: "Kunde")', function() {
      // uncomment below and update the code to test the property kunde
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property notizen (base name: "Notizen")', function() {
      // uncomment below and update the code to test the property notizen
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property posten (base name: "Posten")', function() {
      // uncomment below and update the code to test the property posten
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property rabatte (base name: "Rabatte")', function() {
      // uncomment below and update the code to test the property rabatte
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property storno (base name: "Storno")', function() {
      // uncomment below and update the code to test the property storno
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property stornoBelegUUID (base name: "Storno-Beleg-UUID")', function() {
      // uncomment below and update the code to test the property stornoBelegUUID
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property stornoText (base name: "Storno-Text")', function() {
      // uncomment below and update the code to test the property stornoText
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property training (base name: "Training")', function() {
      // uncomment below and update the code to test the property training
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property unternehmenAdresse1 (base name: "Unternehmen-Adresse1")', function() {
      // uncomment below and update the code to test the property unternehmenAdresse1
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property unternehmenAdresse2 (base name: "Unternehmen-Adresse2")', function() {
      // uncomment below and update the code to test the property unternehmenAdresse2
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property unternehmenFusszeile (base name: "Unternehmen-Fusszeile")', function() {
      // uncomment below and update the code to test the property unternehmenFusszeile
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property unternehmenID (base name: "Unternehmen-ID")', function() {
      // uncomment below and update the code to test the property unternehmenID
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property unternehmenIDTyp (base name: "Unternehmen-ID-Typ")', function() {
      // uncomment below and update the code to test the property unternehmenIDTyp
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property unternehmenKopfzeile (base name: "Unternehmen-Kopfzeile")', function() {
      // uncomment below and update the code to test the property unternehmenKopfzeile
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property unternehmenName (base name: "Unternehmen-Name")', function() {
      // uncomment below and update the code to test the property unternehmenName
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property unternehmenOrt (base name: "Unternehmen-Ort")', function() {
      // uncomment below and update the code to test the property unternehmenOrt
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property unternehmenPLZ (base name: "Unternehmen-PLZ")', function() {
      // uncomment below and update the code to test the property unternehmenPLZ
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property zahlungen (base name: "Zahlungen")', function() {
      // uncomment below and update the code to test the property zahlungen
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

    it('should have the property zertifikatSeriennummer (base name: "Zertifikat-Seriennummer")', function() {
      // uncomment below and update the code to test the property zertifikatSeriennummer
      //var instance = new ObonoRksvApi.SignierteBelegdaten();
      //expect(instance).to.be();
    });

  });

}));
