/*
 * obono RKSV API
 * Provides a RESTful API for interacting with virtual cash registers and creating receipts that are conform with the Registrierkassensicherheitsverordnung (RKSV).  You may find our [automatically generated clients](./clients) for various programming languages and environments helpful... 
 *
 * The version of the OpenAPI document: 1.4.0.0
 * Contact: info@obono.at
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.Posten;
import org.openapitools.client.model.Rabatt;
import org.openapitools.client.model.Zahlung;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The complete &#x60;Beleg&#x60; that has been signed by the \&quot;Signaturerstellungseinheit\&quot; and stored in the \&quot;Datenerfassungsprotokoll\&quot;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:42.053838-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SignierteBelegdaten {
  public static final String SERIALIZED_NAME_BELEG_DATUM_UHRZEIT = "Beleg-Datum-Uhrzeit";
  @SerializedName(SERIALIZED_NAME_BELEG_DATUM_UHRZEIT)
  private String belegDatumUhrzeit;

  public static final String SERIALIZED_NAME_BELEGNUMMER = "Belegnummer";
  @SerializedName(SERIALIZED_NAME_BELEGNUMMER)
  private String belegnummer;

  public static final String SERIALIZED_NAME_BETRAG_BRUTTO = "Betrag-Brutto";
  @SerializedName(SERIALIZED_NAME_BETRAG_BRUTTO)
  private Integer betragBrutto;

  public static final String SERIALIZED_NAME_BETRAG_NETTO = "Betrag-Netto";
  @SerializedName(SERIALIZED_NAME_BETRAG_NETTO)
  private Integer betragNetto;

  public static final String SERIALIZED_NAME_BETRAG_SATZ_BESONDERS_BRUTTO = "Betrag-Satz-Besonders-Brutto";
  @SerializedName(SERIALIZED_NAME_BETRAG_SATZ_BESONDERS_BRUTTO)
  private Integer betragSatzBesondersBrutto;

  public static final String SERIALIZED_NAME_BETRAG_SATZ_BESONDERS_NETTO = "Betrag-Satz-Besonders-Netto";
  @SerializedName(SERIALIZED_NAME_BETRAG_SATZ_BESONDERS_NETTO)
  private Integer betragSatzBesondersNetto;

  public static final String SERIALIZED_NAME_BETRAG_SATZ_ERMAESSIGT1_BRUTTO = "Betrag-Satz-Ermaessigt-1-Brutto";
  @SerializedName(SERIALIZED_NAME_BETRAG_SATZ_ERMAESSIGT1_BRUTTO)
  private Integer betragSatzErmaessigt1Brutto;

  public static final String SERIALIZED_NAME_BETRAG_SATZ_ERMAESSIGT1_NETTO = "Betrag-Satz-Ermaessigt-1-Netto";
  @SerializedName(SERIALIZED_NAME_BETRAG_SATZ_ERMAESSIGT1_NETTO)
  private Integer betragSatzErmaessigt1Netto;

  public static final String SERIALIZED_NAME_BETRAG_SATZ_ERMAESSIGT2_BRUTTO = "Betrag-Satz-Ermaessigt-2-Brutto";
  @SerializedName(SERIALIZED_NAME_BETRAG_SATZ_ERMAESSIGT2_BRUTTO)
  private Integer betragSatzErmaessigt2Brutto;

  public static final String SERIALIZED_NAME_BETRAG_SATZ_ERMAESSIGT2_NETTO = "Betrag-Satz-Ermaessigt-2-Netto";
  @SerializedName(SERIALIZED_NAME_BETRAG_SATZ_ERMAESSIGT2_NETTO)
  private Integer betragSatzErmaessigt2Netto;

  public static final String SERIALIZED_NAME_BETRAG_SATZ_NORMAL_BRUTTO = "Betrag-Satz-Normal-Brutto";
  @SerializedName(SERIALIZED_NAME_BETRAG_SATZ_NORMAL_BRUTTO)
  private Integer betragSatzNormalBrutto;

  public static final String SERIALIZED_NAME_BETRAG_SATZ_NORMAL_NETTO = "Betrag-Satz-Normal-Netto";
  @SerializedName(SERIALIZED_NAME_BETRAG_SATZ_NORMAL_NETTO)
  private Integer betragSatzNormalNetto;

  public static final String SERIALIZED_NAME_BETRAG_SATZ_NULL_BRUTTO = "Betrag-Satz-Null-Brutto";
  @SerializedName(SERIALIZED_NAME_BETRAG_SATZ_NULL_BRUTTO)
  private Integer betragSatzNullBrutto;

  public static final String SERIALIZED_NAME_BETRAG_SATZ_NULL_NETTO = "Betrag-Satz-Null-Netto";
  @SerializedName(SERIALIZED_NAME_BETRAG_SATZ_NULL_NETTO)
  private Integer betragSatzNullNetto;

  public static final String SERIALIZED_NAME_EXTERNER_BELEG_BELEGKREIS = "Externer-Beleg-Belegkreis";
  @SerializedName(SERIALIZED_NAME_EXTERNER_BELEG_BELEGKREIS)
  private String externerBelegBelegkreis;

  public static final String SERIALIZED_NAME_EXTERNER_BELEG_BEZEICHNUNG = "Externer-Beleg-Bezeichnung";
  @SerializedName(SERIALIZED_NAME_EXTERNER_BELEG_BEZEICHNUNG)
  private String externerBelegBezeichnung;

  public static final String SERIALIZED_NAME_EXTERNER_BELEG_REFERENZ = "Externer-Beleg-Referenz";
  @SerializedName(SERIALIZED_NAME_EXTERNER_BELEG_REFERENZ)
  private String externerBelegReferenz;

  public static final String SERIALIZED_NAME_KASSEN_I_D = "Kassen-ID";
  @SerializedName(SERIALIZED_NAME_KASSEN_I_D)
  private String kassenID;

  public static final String SERIALIZED_NAME_KUNDE = "Kunde";
  @SerializedName(SERIALIZED_NAME_KUNDE)
  private String kunde;

  public static final String SERIALIZED_NAME_NOTIZEN = "Notizen";
  @SerializedName(SERIALIZED_NAME_NOTIZEN)
  private List<String> notizen = new ArrayList<>();

  public static final String SERIALIZED_NAME_POSTEN = "Posten";
  @SerializedName(SERIALIZED_NAME_POSTEN)
  private List<Posten> posten = new ArrayList<>();

  public static final String SERIALIZED_NAME_RABATTE = "Rabatte";
  @SerializedName(SERIALIZED_NAME_RABATTE)
  private List<Rabatt> rabatte = new ArrayList<>();

  public static final String SERIALIZED_NAME_STORNO = "Storno";
  @SerializedName(SERIALIZED_NAME_STORNO)
  private Boolean storno;

  public static final String SERIALIZED_NAME_STORNO_BELEG_U_U_I_D = "Storno-Beleg-UUID";
  @SerializedName(SERIALIZED_NAME_STORNO_BELEG_U_U_I_D)
  private UUID stornoBelegUUID;

  public static final String SERIALIZED_NAME_STORNO_TEXT = "Storno-Text";
  @SerializedName(SERIALIZED_NAME_STORNO_TEXT)
  private String stornoText;

  public static final String SERIALIZED_NAME_TRAINING = "Training";
  @SerializedName(SERIALIZED_NAME_TRAINING)
  private Boolean training;

  public static final String SERIALIZED_NAME_UNTERNEHMEN_ADRESSE1 = "Unternehmen-Adresse1";
  @SerializedName(SERIALIZED_NAME_UNTERNEHMEN_ADRESSE1)
  private String unternehmenAdresse1;

  public static final String SERIALIZED_NAME_UNTERNEHMEN_ADRESSE2 = "Unternehmen-Adresse2";
  @SerializedName(SERIALIZED_NAME_UNTERNEHMEN_ADRESSE2)
  private String unternehmenAdresse2;

  public static final String SERIALIZED_NAME_UNTERNEHMEN_FUSSZEILE = "Unternehmen-Fusszeile";
  @SerializedName(SERIALIZED_NAME_UNTERNEHMEN_FUSSZEILE)
  private String unternehmenFusszeile;

  public static final String SERIALIZED_NAME_UNTERNEHMEN_I_D = "Unternehmen-ID";
  @SerializedName(SERIALIZED_NAME_UNTERNEHMEN_I_D)
  private String unternehmenID;

  /**
   * Gets or Sets unternehmenIDTyp
   */
  @JsonAdapter(UnternehmenIDTypEnum.Adapter.class)
  public enum UnternehmenIDTypEnum {
    STEUERNUMMER("steuernummer"),
    
    UID("uid"),
    
    GLN("gln");

    private String value;

    UnternehmenIDTypEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static UnternehmenIDTypEnum fromValue(String value) {
      for (UnternehmenIDTypEnum b : UnternehmenIDTypEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<UnternehmenIDTypEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final UnternehmenIDTypEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public UnternehmenIDTypEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return UnternehmenIDTypEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      UnternehmenIDTypEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_UNTERNEHMEN_I_D_TYP = "Unternehmen-ID-Typ";
  @SerializedName(SERIALIZED_NAME_UNTERNEHMEN_I_D_TYP)
  private UnternehmenIDTypEnum unternehmenIDTyp;

  public static final String SERIALIZED_NAME_UNTERNEHMEN_KOPFZEILE = "Unternehmen-Kopfzeile";
  @SerializedName(SERIALIZED_NAME_UNTERNEHMEN_KOPFZEILE)
  private String unternehmenKopfzeile;

  public static final String SERIALIZED_NAME_UNTERNEHMEN_NAME = "Unternehmen-Name";
  @SerializedName(SERIALIZED_NAME_UNTERNEHMEN_NAME)
  private String unternehmenName;

  public static final String SERIALIZED_NAME_UNTERNEHMEN_ORT = "Unternehmen-Ort";
  @SerializedName(SERIALIZED_NAME_UNTERNEHMEN_ORT)
  private String unternehmenOrt;

  public static final String SERIALIZED_NAME_UNTERNEHMEN_P_L_Z = "Unternehmen-PLZ";
  @SerializedName(SERIALIZED_NAME_UNTERNEHMEN_P_L_Z)
  private String unternehmenPLZ;

  public static final String SERIALIZED_NAME_ZAHLUNGEN = "Zahlungen";
  @SerializedName(SERIALIZED_NAME_ZAHLUNGEN)
  private List<Zahlung> zahlungen = new ArrayList<>();

  public static final String SERIALIZED_NAME_ZERTIFIKAT_SERIENNUMMER = "Zertifikat-Seriennummer";
  @SerializedName(SERIALIZED_NAME_ZERTIFIKAT_SERIENNUMMER)
  private String zertifikatSeriennummer;

  public SignierteBelegdaten() {
  }

  public SignierteBelegdaten belegDatumUhrzeit(String belegDatumUhrzeit) {
    this.belegDatumUhrzeit = belegDatumUhrzeit;
    return this;
  }

  /**
   * Get belegDatumUhrzeit
   * @return belegDatumUhrzeit
   */
  @javax.annotation.Nullable
  public String getBelegDatumUhrzeit() {
    return belegDatumUhrzeit;
  }

  public void setBelegDatumUhrzeit(String belegDatumUhrzeit) {
    this.belegDatumUhrzeit = belegDatumUhrzeit;
  }


  public SignierteBelegdaten belegnummer(String belegnummer) {
    this.belegnummer = belegnummer;
    return this;
  }

  /**
   * Get belegnummer
   * @return belegnummer
   */
  @javax.annotation.Nullable
  public String getBelegnummer() {
    return belegnummer;
  }

  public void setBelegnummer(String belegnummer) {
    this.belegnummer = belegnummer;
  }


  public SignierteBelegdaten betragBrutto(Integer betragBrutto) {
    this.betragBrutto = betragBrutto;
    return this;
  }

  /**
   * Get betragBrutto
   * @return betragBrutto
   */
  @javax.annotation.Nullable
  public Integer getBetragBrutto() {
    return betragBrutto;
  }

  public void setBetragBrutto(Integer betragBrutto) {
    this.betragBrutto = betragBrutto;
  }


  public SignierteBelegdaten betragNetto(Integer betragNetto) {
    this.betragNetto = betragNetto;
    return this;
  }

  /**
   * Get betragNetto
   * @return betragNetto
   */
  @javax.annotation.Nullable
  public Integer getBetragNetto() {
    return betragNetto;
  }

  public void setBetragNetto(Integer betragNetto) {
    this.betragNetto = betragNetto;
  }


  public SignierteBelegdaten betragSatzBesondersBrutto(Integer betragSatzBesondersBrutto) {
    this.betragSatzBesondersBrutto = betragSatzBesondersBrutto;
    return this;
  }

  /**
   * The total amount in cents
   * @return betragSatzBesondersBrutto
   */
  @javax.annotation.Nullable
  public Integer getBetragSatzBesondersBrutto() {
    return betragSatzBesondersBrutto;
  }

  public void setBetragSatzBesondersBrutto(Integer betragSatzBesondersBrutto) {
    this.betragSatzBesondersBrutto = betragSatzBesondersBrutto;
  }


  public SignierteBelegdaten betragSatzBesondersNetto(Integer betragSatzBesondersNetto) {
    this.betragSatzBesondersNetto = betragSatzBesondersNetto;
    return this;
  }

  /**
   * The total amount in cents
   * @return betragSatzBesondersNetto
   */
  @javax.annotation.Nullable
  public Integer getBetragSatzBesondersNetto() {
    return betragSatzBesondersNetto;
  }

  public void setBetragSatzBesondersNetto(Integer betragSatzBesondersNetto) {
    this.betragSatzBesondersNetto = betragSatzBesondersNetto;
  }


  public SignierteBelegdaten betragSatzErmaessigt1Brutto(Integer betragSatzErmaessigt1Brutto) {
    this.betragSatzErmaessigt1Brutto = betragSatzErmaessigt1Brutto;
    return this;
  }

  /**
   * The total amount in cents
   * @return betragSatzErmaessigt1Brutto
   */
  @javax.annotation.Nullable
  public Integer getBetragSatzErmaessigt1Brutto() {
    return betragSatzErmaessigt1Brutto;
  }

  public void setBetragSatzErmaessigt1Brutto(Integer betragSatzErmaessigt1Brutto) {
    this.betragSatzErmaessigt1Brutto = betragSatzErmaessigt1Brutto;
  }


  public SignierteBelegdaten betragSatzErmaessigt1Netto(Integer betragSatzErmaessigt1Netto) {
    this.betragSatzErmaessigt1Netto = betragSatzErmaessigt1Netto;
    return this;
  }

  /**
   * The total amount in cents
   * @return betragSatzErmaessigt1Netto
   */
  @javax.annotation.Nullable
  public Integer getBetragSatzErmaessigt1Netto() {
    return betragSatzErmaessigt1Netto;
  }

  public void setBetragSatzErmaessigt1Netto(Integer betragSatzErmaessigt1Netto) {
    this.betragSatzErmaessigt1Netto = betragSatzErmaessigt1Netto;
  }


  public SignierteBelegdaten betragSatzErmaessigt2Brutto(Integer betragSatzErmaessigt2Brutto) {
    this.betragSatzErmaessigt2Brutto = betragSatzErmaessigt2Brutto;
    return this;
  }

  /**
   * The total amount in cents
   * @return betragSatzErmaessigt2Brutto
   */
  @javax.annotation.Nullable
  public Integer getBetragSatzErmaessigt2Brutto() {
    return betragSatzErmaessigt2Brutto;
  }

  public void setBetragSatzErmaessigt2Brutto(Integer betragSatzErmaessigt2Brutto) {
    this.betragSatzErmaessigt2Brutto = betragSatzErmaessigt2Brutto;
  }


  public SignierteBelegdaten betragSatzErmaessigt2Netto(Integer betragSatzErmaessigt2Netto) {
    this.betragSatzErmaessigt2Netto = betragSatzErmaessigt2Netto;
    return this;
  }

  /**
   * The total amount in cents
   * @return betragSatzErmaessigt2Netto
   */
  @javax.annotation.Nullable
  public Integer getBetragSatzErmaessigt2Netto() {
    return betragSatzErmaessigt2Netto;
  }

  public void setBetragSatzErmaessigt2Netto(Integer betragSatzErmaessigt2Netto) {
    this.betragSatzErmaessigt2Netto = betragSatzErmaessigt2Netto;
  }


  public SignierteBelegdaten betragSatzNormalBrutto(Integer betragSatzNormalBrutto) {
    this.betragSatzNormalBrutto = betragSatzNormalBrutto;
    return this;
  }

  /**
   * The total amount in cents
   * @return betragSatzNormalBrutto
   */
  @javax.annotation.Nullable
  public Integer getBetragSatzNormalBrutto() {
    return betragSatzNormalBrutto;
  }

  public void setBetragSatzNormalBrutto(Integer betragSatzNormalBrutto) {
    this.betragSatzNormalBrutto = betragSatzNormalBrutto;
  }


  public SignierteBelegdaten betragSatzNormalNetto(Integer betragSatzNormalNetto) {
    this.betragSatzNormalNetto = betragSatzNormalNetto;
    return this;
  }

  /**
   * The total amount in cents
   * @return betragSatzNormalNetto
   */
  @javax.annotation.Nullable
  public Integer getBetragSatzNormalNetto() {
    return betragSatzNormalNetto;
  }

  public void setBetragSatzNormalNetto(Integer betragSatzNormalNetto) {
    this.betragSatzNormalNetto = betragSatzNormalNetto;
  }


  public SignierteBelegdaten betragSatzNullBrutto(Integer betragSatzNullBrutto) {
    this.betragSatzNullBrutto = betragSatzNullBrutto;
    return this;
  }

  /**
   * The total amount in cents
   * @return betragSatzNullBrutto
   */
  @javax.annotation.Nullable
  public Integer getBetragSatzNullBrutto() {
    return betragSatzNullBrutto;
  }

  public void setBetragSatzNullBrutto(Integer betragSatzNullBrutto) {
    this.betragSatzNullBrutto = betragSatzNullBrutto;
  }


  public SignierteBelegdaten betragSatzNullNetto(Integer betragSatzNullNetto) {
    this.betragSatzNullNetto = betragSatzNullNetto;
    return this;
  }

  /**
   * The total amount in cents
   * @return betragSatzNullNetto
   */
  @javax.annotation.Nullable
  public Integer getBetragSatzNullNetto() {
    return betragSatzNullNetto;
  }

  public void setBetragSatzNullNetto(Integer betragSatzNullNetto) {
    this.betragSatzNullNetto = betragSatzNullNetto;
  }


  public SignierteBelegdaten externerBelegBelegkreis(String externerBelegBelegkreis) {
    this.externerBelegBelegkreis = externerBelegBelegkreis;
    return this;
  }

  /**
   * Get externerBelegBelegkreis
   * @return externerBelegBelegkreis
   */
  @javax.annotation.Nullable
  public String getExternerBelegBelegkreis() {
    return externerBelegBelegkreis;
  }

  public void setExternerBelegBelegkreis(String externerBelegBelegkreis) {
    this.externerBelegBelegkreis = externerBelegBelegkreis;
  }


  public SignierteBelegdaten externerBelegBezeichnung(String externerBelegBezeichnung) {
    this.externerBelegBezeichnung = externerBelegBezeichnung;
    return this;
  }

  /**
   * Get externerBelegBezeichnung
   * @return externerBelegBezeichnung
   */
  @javax.annotation.Nullable
  public String getExternerBelegBezeichnung() {
    return externerBelegBezeichnung;
  }

  public void setExternerBelegBezeichnung(String externerBelegBezeichnung) {
    this.externerBelegBezeichnung = externerBelegBezeichnung;
  }


  public SignierteBelegdaten externerBelegReferenz(String externerBelegReferenz) {
    this.externerBelegReferenz = externerBelegReferenz;
    return this;
  }

  /**
   * Get externerBelegReferenz
   * @return externerBelegReferenz
   */
  @javax.annotation.Nullable
  public String getExternerBelegReferenz() {
    return externerBelegReferenz;
  }

  public void setExternerBelegReferenz(String externerBelegReferenz) {
    this.externerBelegReferenz = externerBelegReferenz;
  }


  public SignierteBelegdaten kassenID(String kassenID) {
    this.kassenID = kassenID;
    return this;
  }

  /**
   * Get kassenID
   * @return kassenID
   */
  @javax.annotation.Nullable
  public String getKassenID() {
    return kassenID;
  }

  public void setKassenID(String kassenID) {
    this.kassenID = kassenID;
  }


  public SignierteBelegdaten kunde(String kunde) {
    this.kunde = kunde;
    return this;
  }

  /**
   * Get kunde
   * @return kunde
   */
  @javax.annotation.Nullable
  public String getKunde() {
    return kunde;
  }

  public void setKunde(String kunde) {
    this.kunde = kunde;
  }


  public SignierteBelegdaten notizen(List<String> notizen) {
    this.notizen = notizen;
    return this;
  }

  public SignierteBelegdaten addNotizenItem(String notizenItem) {
    if (this.notizen == null) {
      this.notizen = new ArrayList<>();
    }
    this.notizen.add(notizenItem);
    return this;
  }

  /**
   * Get notizen
   * @return notizen
   */
  @javax.annotation.Nullable
  public List<String> getNotizen() {
    return notizen;
  }

  public void setNotizen(List<String> notizen) {
    this.notizen = notizen;
  }


  public SignierteBelegdaten posten(List<Posten> posten) {
    this.posten = posten;
    return this;
  }

  public SignierteBelegdaten addPostenItem(Posten postenItem) {
    if (this.posten == null) {
      this.posten = new ArrayList<>();
    }
    this.posten.add(postenItem);
    return this;
  }

  /**
   * Get posten
   * @return posten
   */
  @javax.annotation.Nullable
  public List<Posten> getPosten() {
    return posten;
  }

  public void setPosten(List<Posten> posten) {
    this.posten = posten;
  }


  public SignierteBelegdaten rabatte(List<Rabatt> rabatte) {
    this.rabatte = rabatte;
    return this;
  }

  public SignierteBelegdaten addRabatteItem(Rabatt rabatteItem) {
    if (this.rabatte == null) {
      this.rabatte = new ArrayList<>();
    }
    this.rabatte.add(rabatteItem);
    return this;
  }

  /**
   * Get rabatte
   * @return rabatte
   */
  @javax.annotation.Nullable
  public List<Rabatt> getRabatte() {
    return rabatte;
  }

  public void setRabatte(List<Rabatt> rabatte) {
    this.rabatte = rabatte;
  }


  public SignierteBelegdaten storno(Boolean storno) {
    this.storno = storno;
    return this;
  }

  /**
   * Storno?
   * @return storno
   */
  @javax.annotation.Nullable
  public Boolean getStorno() {
    return storno;
  }

  public void setStorno(Boolean storno) {
    this.storno = storno;
  }


  public SignierteBelegdaten stornoBelegUUID(UUID stornoBelegUUID) {
    this.stornoBelegUUID = stornoBelegUUID;
    return this;
  }

  /**
   * The &#x60;Beleg-UUID&#x60; property of the &#x60;Beleg&#x60; to be cancelled
   * @return stornoBelegUUID
   */
  @javax.annotation.Nullable
  public UUID getStornoBelegUUID() {
    return stornoBelegUUID;
  }

  public void setStornoBelegUUID(UUID stornoBelegUUID) {
    this.stornoBelegUUID = stornoBelegUUID;
  }


  public SignierteBelegdaten stornoText(String stornoText) {
    this.stornoText = stornoText;
    return this;
  }

  /**
   * Get stornoText
   * @return stornoText
   */
  @javax.annotation.Nullable
  public String getStornoText() {
    return stornoText;
  }

  public void setStornoText(String stornoText) {
    this.stornoText = stornoText;
  }


  public SignierteBelegdaten training(Boolean training) {
    this.training = training;
    return this;
  }

  /**
   * Training?
   * @return training
   */
  @javax.annotation.Nullable
  public Boolean getTraining() {
    return training;
  }

  public void setTraining(Boolean training) {
    this.training = training;
  }


  public SignierteBelegdaten unternehmenAdresse1(String unternehmenAdresse1) {
    this.unternehmenAdresse1 = unternehmenAdresse1;
    return this;
  }

  /**
   * Get unternehmenAdresse1
   * @return unternehmenAdresse1
   */
  @javax.annotation.Nullable
  public String getUnternehmenAdresse1() {
    return unternehmenAdresse1;
  }

  public void setUnternehmenAdresse1(String unternehmenAdresse1) {
    this.unternehmenAdresse1 = unternehmenAdresse1;
  }


  public SignierteBelegdaten unternehmenAdresse2(String unternehmenAdresse2) {
    this.unternehmenAdresse2 = unternehmenAdresse2;
    return this;
  }

  /**
   * Get unternehmenAdresse2
   * @return unternehmenAdresse2
   */
  @javax.annotation.Nullable
  public String getUnternehmenAdresse2() {
    return unternehmenAdresse2;
  }

  public void setUnternehmenAdresse2(String unternehmenAdresse2) {
    this.unternehmenAdresse2 = unternehmenAdresse2;
  }


  public SignierteBelegdaten unternehmenFusszeile(String unternehmenFusszeile) {
    this.unternehmenFusszeile = unternehmenFusszeile;
    return this;
  }

  /**
   * Get unternehmenFusszeile
   * @return unternehmenFusszeile
   */
  @javax.annotation.Nullable
  public String getUnternehmenFusszeile() {
    return unternehmenFusszeile;
  }

  public void setUnternehmenFusszeile(String unternehmenFusszeile) {
    this.unternehmenFusszeile = unternehmenFusszeile;
  }


  public SignierteBelegdaten unternehmenID(String unternehmenID) {
    this.unternehmenID = unternehmenID;
    return this;
  }

  /**
   * Get unternehmenID
   * @return unternehmenID
   */
  @javax.annotation.Nullable
  public String getUnternehmenID() {
    return unternehmenID;
  }

  public void setUnternehmenID(String unternehmenID) {
    this.unternehmenID = unternehmenID;
  }


  public SignierteBelegdaten unternehmenIDTyp(UnternehmenIDTypEnum unternehmenIDTyp) {
    this.unternehmenIDTyp = unternehmenIDTyp;
    return this;
  }

  /**
   * Get unternehmenIDTyp
   * @return unternehmenIDTyp
   */
  @javax.annotation.Nullable
  public UnternehmenIDTypEnum getUnternehmenIDTyp() {
    return unternehmenIDTyp;
  }

  public void setUnternehmenIDTyp(UnternehmenIDTypEnum unternehmenIDTyp) {
    this.unternehmenIDTyp = unternehmenIDTyp;
  }


  public SignierteBelegdaten unternehmenKopfzeile(String unternehmenKopfzeile) {
    this.unternehmenKopfzeile = unternehmenKopfzeile;
    return this;
  }

  /**
   * Get unternehmenKopfzeile
   * @return unternehmenKopfzeile
   */
  @javax.annotation.Nullable
  public String getUnternehmenKopfzeile() {
    return unternehmenKopfzeile;
  }

  public void setUnternehmenKopfzeile(String unternehmenKopfzeile) {
    this.unternehmenKopfzeile = unternehmenKopfzeile;
  }


  public SignierteBelegdaten unternehmenName(String unternehmenName) {
    this.unternehmenName = unternehmenName;
    return this;
  }

  /**
   * Get unternehmenName
   * @return unternehmenName
   */
  @javax.annotation.Nullable
  public String getUnternehmenName() {
    return unternehmenName;
  }

  public void setUnternehmenName(String unternehmenName) {
    this.unternehmenName = unternehmenName;
  }


  public SignierteBelegdaten unternehmenOrt(String unternehmenOrt) {
    this.unternehmenOrt = unternehmenOrt;
    return this;
  }

  /**
   * Get unternehmenOrt
   * @return unternehmenOrt
   */
  @javax.annotation.Nullable
  public String getUnternehmenOrt() {
    return unternehmenOrt;
  }

  public void setUnternehmenOrt(String unternehmenOrt) {
    this.unternehmenOrt = unternehmenOrt;
  }


  public SignierteBelegdaten unternehmenPLZ(String unternehmenPLZ) {
    this.unternehmenPLZ = unternehmenPLZ;
    return this;
  }

  /**
   * Get unternehmenPLZ
   * @return unternehmenPLZ
   */
  @javax.annotation.Nullable
  public String getUnternehmenPLZ() {
    return unternehmenPLZ;
  }

  public void setUnternehmenPLZ(String unternehmenPLZ) {
    this.unternehmenPLZ = unternehmenPLZ;
  }


  public SignierteBelegdaten zahlungen(List<Zahlung> zahlungen) {
    this.zahlungen = zahlungen;
    return this;
  }

  public SignierteBelegdaten addZahlungenItem(Zahlung zahlungenItem) {
    if (this.zahlungen == null) {
      this.zahlungen = new ArrayList<>();
    }
    this.zahlungen.add(zahlungenItem);
    return this;
  }

  /**
   * Get zahlungen
   * @return zahlungen
   */
  @javax.annotation.Nullable
  public List<Zahlung> getZahlungen() {
    return zahlungen;
  }

  public void setZahlungen(List<Zahlung> zahlungen) {
    this.zahlungen = zahlungen;
  }


  public SignierteBelegdaten zertifikatSeriennummer(String zertifikatSeriennummer) {
    this.zertifikatSeriennummer = zertifikatSeriennummer;
    return this;
  }

  /**
   * Get zertifikatSeriennummer
   * @return zertifikatSeriennummer
   */
  @javax.annotation.Nullable
  public String getZertifikatSeriennummer() {
    return zertifikatSeriennummer;
  }

  public void setZertifikatSeriennummer(String zertifikatSeriennummer) {
    this.zertifikatSeriennummer = zertifikatSeriennummer;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SignierteBelegdaten signierteBelegdaten = (SignierteBelegdaten) o;
    return Objects.equals(this.belegDatumUhrzeit, signierteBelegdaten.belegDatumUhrzeit) &&
        Objects.equals(this.belegnummer, signierteBelegdaten.belegnummer) &&
        Objects.equals(this.betragBrutto, signierteBelegdaten.betragBrutto) &&
        Objects.equals(this.betragNetto, signierteBelegdaten.betragNetto) &&
        Objects.equals(this.betragSatzBesondersBrutto, signierteBelegdaten.betragSatzBesondersBrutto) &&
        Objects.equals(this.betragSatzBesondersNetto, signierteBelegdaten.betragSatzBesondersNetto) &&
        Objects.equals(this.betragSatzErmaessigt1Brutto, signierteBelegdaten.betragSatzErmaessigt1Brutto) &&
        Objects.equals(this.betragSatzErmaessigt1Netto, signierteBelegdaten.betragSatzErmaessigt1Netto) &&
        Objects.equals(this.betragSatzErmaessigt2Brutto, signierteBelegdaten.betragSatzErmaessigt2Brutto) &&
        Objects.equals(this.betragSatzErmaessigt2Netto, signierteBelegdaten.betragSatzErmaessigt2Netto) &&
        Objects.equals(this.betragSatzNormalBrutto, signierteBelegdaten.betragSatzNormalBrutto) &&
        Objects.equals(this.betragSatzNormalNetto, signierteBelegdaten.betragSatzNormalNetto) &&
        Objects.equals(this.betragSatzNullBrutto, signierteBelegdaten.betragSatzNullBrutto) &&
        Objects.equals(this.betragSatzNullNetto, signierteBelegdaten.betragSatzNullNetto) &&
        Objects.equals(this.externerBelegBelegkreis, signierteBelegdaten.externerBelegBelegkreis) &&
        Objects.equals(this.externerBelegBezeichnung, signierteBelegdaten.externerBelegBezeichnung) &&
        Objects.equals(this.externerBelegReferenz, signierteBelegdaten.externerBelegReferenz) &&
        Objects.equals(this.kassenID, signierteBelegdaten.kassenID) &&
        Objects.equals(this.kunde, signierteBelegdaten.kunde) &&
        Objects.equals(this.notizen, signierteBelegdaten.notizen) &&
        Objects.equals(this.posten, signierteBelegdaten.posten) &&
        Objects.equals(this.rabatte, signierteBelegdaten.rabatte) &&
        Objects.equals(this.storno, signierteBelegdaten.storno) &&
        Objects.equals(this.stornoBelegUUID, signierteBelegdaten.stornoBelegUUID) &&
        Objects.equals(this.stornoText, signierteBelegdaten.stornoText) &&
        Objects.equals(this.training, signierteBelegdaten.training) &&
        Objects.equals(this.unternehmenAdresse1, signierteBelegdaten.unternehmenAdresse1) &&
        Objects.equals(this.unternehmenAdresse2, signierteBelegdaten.unternehmenAdresse2) &&
        Objects.equals(this.unternehmenFusszeile, signierteBelegdaten.unternehmenFusszeile) &&
        Objects.equals(this.unternehmenID, signierteBelegdaten.unternehmenID) &&
        Objects.equals(this.unternehmenIDTyp, signierteBelegdaten.unternehmenIDTyp) &&
        Objects.equals(this.unternehmenKopfzeile, signierteBelegdaten.unternehmenKopfzeile) &&
        Objects.equals(this.unternehmenName, signierteBelegdaten.unternehmenName) &&
        Objects.equals(this.unternehmenOrt, signierteBelegdaten.unternehmenOrt) &&
        Objects.equals(this.unternehmenPLZ, signierteBelegdaten.unternehmenPLZ) &&
        Objects.equals(this.zahlungen, signierteBelegdaten.zahlungen) &&
        Objects.equals(this.zertifikatSeriennummer, signierteBelegdaten.zertifikatSeriennummer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(belegDatumUhrzeit, belegnummer, betragBrutto, betragNetto, betragSatzBesondersBrutto, betragSatzBesondersNetto, betragSatzErmaessigt1Brutto, betragSatzErmaessigt1Netto, betragSatzErmaessigt2Brutto, betragSatzErmaessigt2Netto, betragSatzNormalBrutto, betragSatzNormalNetto, betragSatzNullBrutto, betragSatzNullNetto, externerBelegBelegkreis, externerBelegBezeichnung, externerBelegReferenz, kassenID, kunde, notizen, posten, rabatte, storno, stornoBelegUUID, stornoText, training, unternehmenAdresse1, unternehmenAdresse2, unternehmenFusszeile, unternehmenID, unternehmenIDTyp, unternehmenKopfzeile, unternehmenName, unternehmenOrt, unternehmenPLZ, zahlungen, zertifikatSeriennummer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignierteBelegdaten {\n");
    sb.append("    belegDatumUhrzeit: ").append(toIndentedString(belegDatumUhrzeit)).append("\n");
    sb.append("    belegnummer: ").append(toIndentedString(belegnummer)).append("\n");
    sb.append("    betragBrutto: ").append(toIndentedString(betragBrutto)).append("\n");
    sb.append("    betragNetto: ").append(toIndentedString(betragNetto)).append("\n");
    sb.append("    betragSatzBesondersBrutto: ").append(toIndentedString(betragSatzBesondersBrutto)).append("\n");
    sb.append("    betragSatzBesondersNetto: ").append(toIndentedString(betragSatzBesondersNetto)).append("\n");
    sb.append("    betragSatzErmaessigt1Brutto: ").append(toIndentedString(betragSatzErmaessigt1Brutto)).append("\n");
    sb.append("    betragSatzErmaessigt1Netto: ").append(toIndentedString(betragSatzErmaessigt1Netto)).append("\n");
    sb.append("    betragSatzErmaessigt2Brutto: ").append(toIndentedString(betragSatzErmaessigt2Brutto)).append("\n");
    sb.append("    betragSatzErmaessigt2Netto: ").append(toIndentedString(betragSatzErmaessigt2Netto)).append("\n");
    sb.append("    betragSatzNormalBrutto: ").append(toIndentedString(betragSatzNormalBrutto)).append("\n");
    sb.append("    betragSatzNormalNetto: ").append(toIndentedString(betragSatzNormalNetto)).append("\n");
    sb.append("    betragSatzNullBrutto: ").append(toIndentedString(betragSatzNullBrutto)).append("\n");
    sb.append("    betragSatzNullNetto: ").append(toIndentedString(betragSatzNullNetto)).append("\n");
    sb.append("    externerBelegBelegkreis: ").append(toIndentedString(externerBelegBelegkreis)).append("\n");
    sb.append("    externerBelegBezeichnung: ").append(toIndentedString(externerBelegBezeichnung)).append("\n");
    sb.append("    externerBelegReferenz: ").append(toIndentedString(externerBelegReferenz)).append("\n");
    sb.append("    kassenID: ").append(toIndentedString(kassenID)).append("\n");
    sb.append("    kunde: ").append(toIndentedString(kunde)).append("\n");
    sb.append("    notizen: ").append(toIndentedString(notizen)).append("\n");
    sb.append("    posten: ").append(toIndentedString(posten)).append("\n");
    sb.append("    rabatte: ").append(toIndentedString(rabatte)).append("\n");
    sb.append("    storno: ").append(toIndentedString(storno)).append("\n");
    sb.append("    stornoBelegUUID: ").append(toIndentedString(stornoBelegUUID)).append("\n");
    sb.append("    stornoText: ").append(toIndentedString(stornoText)).append("\n");
    sb.append("    training: ").append(toIndentedString(training)).append("\n");
    sb.append("    unternehmenAdresse1: ").append(toIndentedString(unternehmenAdresse1)).append("\n");
    sb.append("    unternehmenAdresse2: ").append(toIndentedString(unternehmenAdresse2)).append("\n");
    sb.append("    unternehmenFusszeile: ").append(toIndentedString(unternehmenFusszeile)).append("\n");
    sb.append("    unternehmenID: ").append(toIndentedString(unternehmenID)).append("\n");
    sb.append("    unternehmenIDTyp: ").append(toIndentedString(unternehmenIDTyp)).append("\n");
    sb.append("    unternehmenKopfzeile: ").append(toIndentedString(unternehmenKopfzeile)).append("\n");
    sb.append("    unternehmenName: ").append(toIndentedString(unternehmenName)).append("\n");
    sb.append("    unternehmenOrt: ").append(toIndentedString(unternehmenOrt)).append("\n");
    sb.append("    unternehmenPLZ: ").append(toIndentedString(unternehmenPLZ)).append("\n");
    sb.append("    zahlungen: ").append(toIndentedString(zahlungen)).append("\n");
    sb.append("    zertifikatSeriennummer: ").append(toIndentedString(zertifikatSeriennummer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Beleg-Datum-Uhrzeit");
    openapiFields.add("Belegnummer");
    openapiFields.add("Betrag-Brutto");
    openapiFields.add("Betrag-Netto");
    openapiFields.add("Betrag-Satz-Besonders-Brutto");
    openapiFields.add("Betrag-Satz-Besonders-Netto");
    openapiFields.add("Betrag-Satz-Ermaessigt-1-Brutto");
    openapiFields.add("Betrag-Satz-Ermaessigt-1-Netto");
    openapiFields.add("Betrag-Satz-Ermaessigt-2-Brutto");
    openapiFields.add("Betrag-Satz-Ermaessigt-2-Netto");
    openapiFields.add("Betrag-Satz-Normal-Brutto");
    openapiFields.add("Betrag-Satz-Normal-Netto");
    openapiFields.add("Betrag-Satz-Null-Brutto");
    openapiFields.add("Betrag-Satz-Null-Netto");
    openapiFields.add("Externer-Beleg-Belegkreis");
    openapiFields.add("Externer-Beleg-Bezeichnung");
    openapiFields.add("Externer-Beleg-Referenz");
    openapiFields.add("Kassen-ID");
    openapiFields.add("Kunde");
    openapiFields.add("Notizen");
    openapiFields.add("Posten");
    openapiFields.add("Rabatte");
    openapiFields.add("Storno");
    openapiFields.add("Storno-Beleg-UUID");
    openapiFields.add("Storno-Text");
    openapiFields.add("Training");
    openapiFields.add("Unternehmen-Adresse1");
    openapiFields.add("Unternehmen-Adresse2");
    openapiFields.add("Unternehmen-Fusszeile");
    openapiFields.add("Unternehmen-ID");
    openapiFields.add("Unternehmen-ID-Typ");
    openapiFields.add("Unternehmen-Kopfzeile");
    openapiFields.add("Unternehmen-Name");
    openapiFields.add("Unternehmen-Ort");
    openapiFields.add("Unternehmen-PLZ");
    openapiFields.add("Zahlungen");
    openapiFields.add("Zertifikat-Seriennummer");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SignierteBelegdaten
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SignierteBelegdaten.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SignierteBelegdaten is not found in the empty JSON string", SignierteBelegdaten.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SignierteBelegdaten.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SignierteBelegdaten` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Beleg-Datum-Uhrzeit") != null && !jsonObj.get("Beleg-Datum-Uhrzeit").isJsonNull()) && !jsonObj.get("Beleg-Datum-Uhrzeit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Beleg-Datum-Uhrzeit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Beleg-Datum-Uhrzeit").toString()));
      }
      if ((jsonObj.get("Belegnummer") != null && !jsonObj.get("Belegnummer").isJsonNull()) && !jsonObj.get("Belegnummer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Belegnummer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Belegnummer").toString()));
      }
      if ((jsonObj.get("Externer-Beleg-Belegkreis") != null && !jsonObj.get("Externer-Beleg-Belegkreis").isJsonNull()) && !jsonObj.get("Externer-Beleg-Belegkreis").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Externer-Beleg-Belegkreis` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Externer-Beleg-Belegkreis").toString()));
      }
      if ((jsonObj.get("Externer-Beleg-Bezeichnung") != null && !jsonObj.get("Externer-Beleg-Bezeichnung").isJsonNull()) && !jsonObj.get("Externer-Beleg-Bezeichnung").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Externer-Beleg-Bezeichnung` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Externer-Beleg-Bezeichnung").toString()));
      }
      if ((jsonObj.get("Externer-Beleg-Referenz") != null && !jsonObj.get("Externer-Beleg-Referenz").isJsonNull()) && !jsonObj.get("Externer-Beleg-Referenz").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Externer-Beleg-Referenz` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Externer-Beleg-Referenz").toString()));
      }
      if ((jsonObj.get("Kassen-ID") != null && !jsonObj.get("Kassen-ID").isJsonNull()) && !jsonObj.get("Kassen-ID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Kassen-ID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Kassen-ID").toString()));
      }
      if ((jsonObj.get("Kunde") != null && !jsonObj.get("Kunde").isJsonNull()) && !jsonObj.get("Kunde").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Kunde` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Kunde").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("Notizen") != null && !jsonObj.get("Notizen").isJsonNull() && !jsonObj.get("Notizen").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Notizen` to be an array in the JSON string but got `%s`", jsonObj.get("Notizen").toString()));
      }
      if (jsonObj.get("Posten") != null && !jsonObj.get("Posten").isJsonNull()) {
        JsonArray jsonArrayposten = jsonObj.getAsJsonArray("Posten");
        if (jsonArrayposten != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Posten").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Posten` to be an array in the JSON string but got `%s`", jsonObj.get("Posten").toString()));
          }

          // validate the optional field `Posten` (array)
          for (int i = 0; i < jsonArrayposten.size(); i++) {
            Posten.validateJsonElement(jsonArrayposten.get(i));
          };
        }
      }
      if (jsonObj.get("Rabatte") != null && !jsonObj.get("Rabatte").isJsonNull()) {
        JsonArray jsonArrayrabatte = jsonObj.getAsJsonArray("Rabatte");
        if (jsonArrayrabatte != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Rabatte").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Rabatte` to be an array in the JSON string but got `%s`", jsonObj.get("Rabatte").toString()));
          }

          // validate the optional field `Rabatte` (array)
          for (int i = 0; i < jsonArrayrabatte.size(); i++) {
            Rabatt.validateJsonElement(jsonArrayrabatte.get(i));
          };
        }
      }
      if ((jsonObj.get("Storno-Beleg-UUID") != null && !jsonObj.get("Storno-Beleg-UUID").isJsonNull()) && !jsonObj.get("Storno-Beleg-UUID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Storno-Beleg-UUID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Storno-Beleg-UUID").toString()));
      }
      if ((jsonObj.get("Storno-Text") != null && !jsonObj.get("Storno-Text").isJsonNull()) && !jsonObj.get("Storno-Text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Storno-Text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Storno-Text").toString()));
      }
      if ((jsonObj.get("Unternehmen-Adresse1") != null && !jsonObj.get("Unternehmen-Adresse1").isJsonNull()) && !jsonObj.get("Unternehmen-Adresse1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Unternehmen-Adresse1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Unternehmen-Adresse1").toString()));
      }
      if ((jsonObj.get("Unternehmen-Adresse2") != null && !jsonObj.get("Unternehmen-Adresse2").isJsonNull()) && !jsonObj.get("Unternehmen-Adresse2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Unternehmen-Adresse2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Unternehmen-Adresse2").toString()));
      }
      if ((jsonObj.get("Unternehmen-Fusszeile") != null && !jsonObj.get("Unternehmen-Fusszeile").isJsonNull()) && !jsonObj.get("Unternehmen-Fusszeile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Unternehmen-Fusszeile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Unternehmen-Fusszeile").toString()));
      }
      if ((jsonObj.get("Unternehmen-ID") != null && !jsonObj.get("Unternehmen-ID").isJsonNull()) && !jsonObj.get("Unternehmen-ID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Unternehmen-ID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Unternehmen-ID").toString()));
      }
      if ((jsonObj.get("Unternehmen-ID-Typ") != null && !jsonObj.get("Unternehmen-ID-Typ").isJsonNull()) && !jsonObj.get("Unternehmen-ID-Typ").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Unternehmen-ID-Typ` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Unternehmen-ID-Typ").toString()));
      }
      // validate the optional field `Unternehmen-ID-Typ`
      if (jsonObj.get("Unternehmen-ID-Typ") != null && !jsonObj.get("Unternehmen-ID-Typ").isJsonNull()) {
        UnternehmenIDTypEnum.validateJsonElement(jsonObj.get("Unternehmen-ID-Typ"));
      }
      if ((jsonObj.get("Unternehmen-Kopfzeile") != null && !jsonObj.get("Unternehmen-Kopfzeile").isJsonNull()) && !jsonObj.get("Unternehmen-Kopfzeile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Unternehmen-Kopfzeile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Unternehmen-Kopfzeile").toString()));
      }
      if ((jsonObj.get("Unternehmen-Name") != null && !jsonObj.get("Unternehmen-Name").isJsonNull()) && !jsonObj.get("Unternehmen-Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Unternehmen-Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Unternehmen-Name").toString()));
      }
      if ((jsonObj.get("Unternehmen-Ort") != null && !jsonObj.get("Unternehmen-Ort").isJsonNull()) && !jsonObj.get("Unternehmen-Ort").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Unternehmen-Ort` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Unternehmen-Ort").toString()));
      }
      if ((jsonObj.get("Unternehmen-PLZ") != null && !jsonObj.get("Unternehmen-PLZ").isJsonNull()) && !jsonObj.get("Unternehmen-PLZ").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Unternehmen-PLZ` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Unternehmen-PLZ").toString()));
      }
      if (jsonObj.get("Zahlungen") != null && !jsonObj.get("Zahlungen").isJsonNull()) {
        JsonArray jsonArrayzahlungen = jsonObj.getAsJsonArray("Zahlungen");
        if (jsonArrayzahlungen != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Zahlungen").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Zahlungen` to be an array in the JSON string but got `%s`", jsonObj.get("Zahlungen").toString()));
          }

          // validate the optional field `Zahlungen` (array)
          for (int i = 0; i < jsonArrayzahlungen.size(); i++) {
            Zahlung.validateJsonElement(jsonArrayzahlungen.get(i));
          };
        }
      }
      if ((jsonObj.get("Zertifikat-Seriennummer") != null && !jsonObj.get("Zertifikat-Seriennummer").isJsonNull()) && !jsonObj.get("Zertifikat-Seriennummer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Zertifikat-Seriennummer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Zertifikat-Seriennummer").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SignierteBelegdaten.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SignierteBelegdaten' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SignierteBelegdaten> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SignierteBelegdaten.class));

       return (TypeAdapter<T>) new TypeAdapter<SignierteBelegdaten>() {
           @Override
           public void write(JsonWriter out, SignierteBelegdaten value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SignierteBelegdaten read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SignierteBelegdaten given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SignierteBelegdaten
   * @throws IOException if the JSON string is invalid with respect to SignierteBelegdaten
   */
  public static SignierteBelegdaten fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SignierteBelegdaten.class);
  }

  /**
   * Convert an instance of SignierteBelegdaten to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

