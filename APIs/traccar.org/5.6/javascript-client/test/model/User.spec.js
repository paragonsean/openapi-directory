/**
 * Traccar
 * Open Source GPS Tracking Platform
 *
 * The version of the OpenAPI document: 5.6
 * Contact: support@traccar.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Traccar);
  }
}(this, function(expect, Traccar) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Traccar.User();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('User', function() {
    it('should create an instance of User', function() {
      // uncomment below and update the code to test User
      //var instance = new Traccar.User();
      //expect(instance).to.be.a(Traccar.User);
    });

    it('should have the property administrator (base name: "administrator")', function() {
      // uncomment below and update the code to test the property administrator
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property attributes (base name: "attributes")', function() {
      // uncomment below and update the code to test the property attributes
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property coordinateFormat (base name: "coordinateFormat")', function() {
      // uncomment below and update the code to test the property coordinateFormat
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property deviceLimit (base name: "deviceLimit")', function() {
      // uncomment below and update the code to test the property deviceLimit
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property deviceReadonly (base name: "deviceReadonly")', function() {
      // uncomment below and update the code to test the property deviceReadonly
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property disabled (base name: "disabled")', function() {
      // uncomment below and update the code to test the property disabled
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property expirationTime (base name: "expirationTime")', function() {
      // uncomment below and update the code to test the property expirationTime
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property latitude (base name: "latitude")', function() {
      // uncomment below and update the code to test the property latitude
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property limitCommands (base name: "limitCommands")', function() {
      // uncomment below and update the code to test the property limitCommands
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property longitude (base name: "longitude")', function() {
      // uncomment below and update the code to test the property longitude
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property map (base name: "map")', function() {
      // uncomment below and update the code to test the property map
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property poiLayer (base name: "poiLayer")', function() {
      // uncomment below and update the code to test the property poiLayer
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property readonly (base name: "readonly")', function() {
      // uncomment below and update the code to test the property readonly
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property twelveHourFormat (base name: "twelveHourFormat")', function() {
      // uncomment below and update the code to test the property twelveHourFormat
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property userLimit (base name: "userLimit")', function() {
      // uncomment below and update the code to test the property userLimit
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

    it('should have the property zoom (base name: "zoom")', function() {
      // uncomment below and update the code to test the property zoom
      //var instance = new Traccar.User();
      //expect(instance).to.be();
    });

  });

}));
