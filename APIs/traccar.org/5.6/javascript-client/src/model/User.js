/**
 * Traccar
 * Open Source GPS Tracking Platform
 *
 * The version of the OpenAPI document: 5.6
 * Contact: support@traccar.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The User model module.
 * @module model/User
 * @version 5.6
 */
class User {
    /**
     * Constructs a new <code>User</code>.
     * @alias module:model/User
     */
    constructor() { 
        
        User.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>User</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/User} obj Optional instance to populate.
     * @return {module:model/User} The populated <code>User</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new User();

            if (data.hasOwnProperty('administrator')) {
                obj['administrator'] = ApiClient.convertToType(data['administrator'], 'Boolean');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], Object);
            }
            if (data.hasOwnProperty('coordinateFormat')) {
                obj['coordinateFormat'] = ApiClient.convertToType(data['coordinateFormat'], 'String');
            }
            if (data.hasOwnProperty('deviceLimit')) {
                obj['deviceLimit'] = ApiClient.convertToType(data['deviceLimit'], 'Number');
            }
            if (data.hasOwnProperty('deviceReadonly')) {
                obj['deviceReadonly'] = ApiClient.convertToType(data['deviceReadonly'], 'Boolean');
            }
            if (data.hasOwnProperty('disabled')) {
                obj['disabled'] = ApiClient.convertToType(data['disabled'], 'Boolean');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('expirationTime')) {
                obj['expirationTime'] = ApiClient.convertToType(data['expirationTime'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('limitCommands')) {
                obj['limitCommands'] = ApiClient.convertToType(data['limitCommands'], 'Boolean');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
            if (data.hasOwnProperty('map')) {
                obj['map'] = ApiClient.convertToType(data['map'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('poiLayer')) {
                obj['poiLayer'] = ApiClient.convertToType(data['poiLayer'], 'String');
            }
            if (data.hasOwnProperty('readonly')) {
                obj['readonly'] = ApiClient.convertToType(data['readonly'], 'Boolean');
            }
            if (data.hasOwnProperty('twelveHourFormat')) {
                obj['twelveHourFormat'] = ApiClient.convertToType(data['twelveHourFormat'], 'Boolean');
            }
            if (data.hasOwnProperty('userLimit')) {
                obj['userLimit'] = ApiClient.convertToType(data['userLimit'], 'Number');
            }
            if (data.hasOwnProperty('zoom')) {
                obj['zoom'] = ApiClient.convertToType(data['zoom'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>User</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>User</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['coordinateFormat'] && !(typeof data['coordinateFormat'] === 'string' || data['coordinateFormat'] instanceof String)) {
            throw new Error("Expected the field `coordinateFormat` to be a primitive type in the JSON string but got " + data['coordinateFormat']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['map'] && !(typeof data['map'] === 'string' || data['map'] instanceof String)) {
            throw new Error("Expected the field `map` to be a primitive type in the JSON string but got " + data['map']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }
        // ensure the json data is a string
        if (data['poiLayer'] && !(typeof data['poiLayer'] === 'string' || data['poiLayer'] instanceof String)) {
            throw new Error("Expected the field `poiLayer` to be a primitive type in the JSON string but got " + data['poiLayer']);
        }

        return true;
    }


}



/**
 * @member {Boolean} administrator
 */
User.prototype['administrator'] = undefined;

/**
 * @member {Object} attributes
 */
User.prototype['attributes'] = undefined;

/**
 * @member {String} coordinateFormat
 */
User.prototype['coordinateFormat'] = undefined;

/**
 * @member {Number} deviceLimit
 */
User.prototype['deviceLimit'] = undefined;

/**
 * @member {Boolean} deviceReadonly
 */
User.prototype['deviceReadonly'] = undefined;

/**
 * @member {Boolean} disabled
 */
User.prototype['disabled'] = undefined;

/**
 * @member {String} email
 */
User.prototype['email'] = undefined;

/**
 * in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
 * @member {Date} expirationTime
 */
User.prototype['expirationTime'] = undefined;

/**
 * @member {Number} id
 */
User.prototype['id'] = undefined;

/**
 * @member {Number} latitude
 */
User.prototype['latitude'] = undefined;

/**
 * @member {Boolean} limitCommands
 */
User.prototype['limitCommands'] = undefined;

/**
 * @member {Number} longitude
 */
User.prototype['longitude'] = undefined;

/**
 * @member {String} map
 */
User.prototype['map'] = undefined;

/**
 * @member {String} name
 */
User.prototype['name'] = undefined;

/**
 * @member {String} password
 */
User.prototype['password'] = undefined;

/**
 * @member {String} phone
 */
User.prototype['phone'] = undefined;

/**
 * @member {String} poiLayer
 */
User.prototype['poiLayer'] = undefined;

/**
 * @member {Boolean} readonly
 */
User.prototype['readonly'] = undefined;

/**
 * @member {Boolean} twelveHourFormat
 */
User.prototype['twelveHourFormat'] = undefined;

/**
 * @member {Number} userLimit
 */
User.prototype['userLimit'] = undefined;

/**
 * @member {Number} zoom
 */
User.prototype['zoom'] = undefined;






export default User;

