/**
 * Traccar
 * Open Source GPS Tracking Platform
 *
 * The version of the OpenAPI document: 5.6
 * Contact: support@traccar.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReportStops model module.
 * @module model/ReportStops
 * @version 5.6
 */
class ReportStops {
    /**
     * Constructs a new <code>ReportStops</code>.
     * @alias module:model/ReportStops
     */
    constructor() { 
        
        ReportStops.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportStops</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportStops} obj Optional instance to populate.
     * @return {module:model/ReportStops} The populated <code>ReportStops</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportStops();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('deviceId')) {
                obj['deviceId'] = ApiClient.convertToType(data['deviceId'], 'Number');
            }
            if (data.hasOwnProperty('deviceName')) {
                obj['deviceName'] = ApiClient.convertToType(data['deviceName'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('engineHours')) {
                obj['engineHours'] = ApiClient.convertToType(data['engineHours'], 'Number');
            }
            if (data.hasOwnProperty('lat')) {
                obj['lat'] = ApiClient.convertToType(data['lat'], 'Number');
            }
            if (data.hasOwnProperty('lon')) {
                obj['lon'] = ApiClient.convertToType(data['lon'], 'Number');
            }
            if (data.hasOwnProperty('spentFuel')) {
                obj['spentFuel'] = ApiClient.convertToType(data['spentFuel'], 'Number');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportStops</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportStops</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['deviceName'] && !(typeof data['deviceName'] === 'string' || data['deviceName'] instanceof String)) {
            throw new Error("Expected the field `deviceName` to be a primitive type in the JSON string but got " + data['deviceName']);
        }

        return true;
    }


}



/**
 * @member {String} address
 */
ReportStops.prototype['address'] = undefined;

/**
 * @member {Number} deviceId
 */
ReportStops.prototype['deviceId'] = undefined;

/**
 * @member {String} deviceName
 */
ReportStops.prototype['deviceName'] = undefined;

/**
 * @member {Number} duration
 */
ReportStops.prototype['duration'] = undefined;

/**
 * in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
 * @member {Date} endTime
 */
ReportStops.prototype['endTime'] = undefined;

/**
 * @member {Number} engineHours
 */
ReportStops.prototype['engineHours'] = undefined;

/**
 * @member {Number} lat
 */
ReportStops.prototype['lat'] = undefined;

/**
 * @member {Number} lon
 */
ReportStops.prototype['lon'] = undefined;

/**
 * in liters
 * @member {Number} spentFuel
 */
ReportStops.prototype['spentFuel'] = undefined;

/**
 * in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
 * @member {Date} startTime
 */
ReportStops.prototype['startTime'] = undefined;






export default ReportStops;

