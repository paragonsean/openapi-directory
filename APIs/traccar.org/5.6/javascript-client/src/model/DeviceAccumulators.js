/**
 * Traccar
 * Open Source GPS Tracking Platform
 *
 * The version of the OpenAPI document: 5.6
 * Contact: support@traccar.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeviceAccumulators model module.
 * @module model/DeviceAccumulators
 * @version 5.6
 */
class DeviceAccumulators {
    /**
     * Constructs a new <code>DeviceAccumulators</code>.
     * @alias module:model/DeviceAccumulators
     */
    constructor() { 
        
        DeviceAccumulators.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeviceAccumulators</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeviceAccumulators} obj Optional instance to populate.
     * @return {module:model/DeviceAccumulators} The populated <code>DeviceAccumulators</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeviceAccumulators();

            if (data.hasOwnProperty('deviceId')) {
                obj['deviceId'] = ApiClient.convertToType(data['deviceId'], 'Number');
            }
            if (data.hasOwnProperty('hours')) {
                obj['hours'] = ApiClient.convertToType(data['hours'], 'Number');
            }
            if (data.hasOwnProperty('totalDistance')) {
                obj['totalDistance'] = ApiClient.convertToType(data['totalDistance'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeviceAccumulators</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeviceAccumulators</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Number} deviceId
 */
DeviceAccumulators.prototype['deviceId'] = undefined;

/**
 * @member {Number} hours
 */
DeviceAccumulators.prototype['hours'] = undefined;

/**
 * in meters
 * @member {Number} totalDistance
 */
DeviceAccumulators.prototype['totalDistance'] = undefined;






export default DeviceAccumulators;

