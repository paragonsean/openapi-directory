/**
 * Traccar
 * Open Source GPS Tracking Platform
 *
 * The version of the OpenAPI document: 5.6
 * Contact: support@traccar.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Position from '../model/Position';

/**
* Positions service.
* @module api/PositionsApi
* @version 5.6
*/
export default class PositionsApi {

    /**
    * Constructs a new PositionsApi. 
    * @alias module:api/PositionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the positionsGet operation.
     * @callback module:api/PositionsApi~positionsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Position>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetches a list of Positions
     * We strongly recommend using [Traccar WebSocket API](https://www.traccar.org/traccar-api/) instead of periodically polling positions endpoint. Without any params, it returns a list of last known positions for all the user's Devices. _from_ and _to_ fields are not required with _id_.
     * @param {Object} opts Optional parameters
     * @param {Number} [deviceId] _deviceId_ is optional, but requires the _from_ and _to_ parameters when used
     * @param {Date} [from] in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
     * @param {Date} [to] in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
     * @param {Number} [id] To fetch one or more positions. Multiple params can be passed like `id=31&id=42`
     * @param {module:api/PositionsApi~positionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Position>}
     */
    positionsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'deviceId': opts['deviceId'],
        'from': opts['from'],
        'to': opts['to'],
        'id': opts['id']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/gpx+xml', 'application/json', 'text/csv'];
      let returnType = [Position];
      return this.apiClient.callApi(
        '/positions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
