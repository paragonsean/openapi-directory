/**
 * Traccar
 * Open Source GPS Tracking Platform
 *
 * The version of the OpenAPI document: 5.6
 * Contact: support@traccar.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Statistics from '../model/Statistics';

/**
* Statistics service.
* @module api/StatisticsApi
* @version 5.6
*/
export default class StatisticsApi {

    /**
    * Constructs a new StatisticsApi. 
    * @alias module:api/StatisticsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the statisticsGet operation.
     * @callback module:api/StatisticsApi~statisticsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Statistics>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch server Statistics
     * @param {Date} from in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
     * @param {Date} to in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
     * @param {module:api/StatisticsApi~statisticsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Statistics>}
     */
    statisticsGet(from, to, callback) {
      let postBody = null;
      // verify the required parameter 'from' is set
      if (from === undefined || from === null) {
        throw new Error("Missing the required parameter 'from' when calling statisticsGet");
      }
      // verify the required parameter 'to' is set
      if (to === undefined || to === null) {
        throw new Error("Missing the required parameter 'to' when calling statisticsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'from': from,
        'to': to
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Statistics];
      return this.apiClient.callApi(
        '/statistics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
