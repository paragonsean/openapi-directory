/**
 * Traccar
 * Open Source GPS Tracking Platform
 *
 * The version of the OpenAPI document: 5.6
 * Contact: support@traccar.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Attribute from './model/Attribute';
import Calendar from './model/Calendar';
import Command from './model/Command';
import CommandType from './model/CommandType';
import Device from './model/Device';
import DeviceAccumulators from './model/DeviceAccumulators';
import Driver from './model/Driver';
import Event from './model/Event';
import Geofence from './model/Geofence';
import Group from './model/Group';
import Maintenance from './model/Maintenance';
import Notification from './model/Notification';
import NotificationType from './model/NotificationType';
import Permission from './model/Permission';
import Position from './model/Position';
import ReportStops from './model/ReportStops';
import ReportSummary from './model/ReportSummary';
import ReportTrips from './model/ReportTrips';
import Server from './model/Server';
import Statistics from './model/Statistics';
import User from './model/User';
import AttributesApi from './api/AttributesApi';
import CalendarsApi from './api/CalendarsApi';
import CommandsApi from './api/CommandsApi';
import DevicesApi from './api/DevicesApi';
import DriversApi from './api/DriversApi';
import EventsApi from './api/EventsApi';
import GeofencesApi from './api/GeofencesApi';
import GroupsApi from './api/GroupsApi';
import MaintenanceApi from './api/MaintenanceApi';
import NotificationsApi from './api/NotificationsApi';
import PermissionsApi from './api/PermissionsApi';
import PositionsApi from './api/PositionsApi';
import ReportsApi from './api/ReportsApi';
import ServerApi from './api/ServerApi';
import SessionApi from './api/SessionApi';
import StatisticsApi from './api/StatisticsApi';
import UsersApi from './api/UsersApi';


/**
* Open Source GPS Tracking Platform.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Traccar = require('index'); // See note below*.
* var xxxSvc = new Traccar.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Traccar.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Traccar.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Traccar.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 5.6
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Attribute model constructor.
     * @property {module:model/Attribute}
     */
    Attribute,

    /**
     * The Calendar model constructor.
     * @property {module:model/Calendar}
     */
    Calendar,

    /**
     * The Command model constructor.
     * @property {module:model/Command}
     */
    Command,

    /**
     * The CommandType model constructor.
     * @property {module:model/CommandType}
     */
    CommandType,

    /**
     * The Device model constructor.
     * @property {module:model/Device}
     */
    Device,

    /**
     * The DeviceAccumulators model constructor.
     * @property {module:model/DeviceAccumulators}
     */
    DeviceAccumulators,

    /**
     * The Driver model constructor.
     * @property {module:model/Driver}
     */
    Driver,

    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event,

    /**
     * The Geofence model constructor.
     * @property {module:model/Geofence}
     */
    Geofence,

    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group,

    /**
     * The Maintenance model constructor.
     * @property {module:model/Maintenance}
     */
    Maintenance,

    /**
     * The Notification model constructor.
     * @property {module:model/Notification}
     */
    Notification,

    /**
     * The NotificationType model constructor.
     * @property {module:model/NotificationType}
     */
    NotificationType,

    /**
     * The Permission model constructor.
     * @property {module:model/Permission}
     */
    Permission,

    /**
     * The Position model constructor.
     * @property {module:model/Position}
     */
    Position,

    /**
     * The ReportStops model constructor.
     * @property {module:model/ReportStops}
     */
    ReportStops,

    /**
     * The ReportSummary model constructor.
     * @property {module:model/ReportSummary}
     */
    ReportSummary,

    /**
     * The ReportTrips model constructor.
     * @property {module:model/ReportTrips}
     */
    ReportTrips,

    /**
     * The Server model constructor.
     * @property {module:model/Server}
     */
    Server,

    /**
     * The Statistics model constructor.
     * @property {module:model/Statistics}
     */
    Statistics,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
    * The AttributesApi service constructor.
    * @property {module:api/AttributesApi}
    */
    AttributesApi,

    /**
    * The CalendarsApi service constructor.
    * @property {module:api/CalendarsApi}
    */
    CalendarsApi,

    /**
    * The CommandsApi service constructor.
    * @property {module:api/CommandsApi}
    */
    CommandsApi,

    /**
    * The DevicesApi service constructor.
    * @property {module:api/DevicesApi}
    */
    DevicesApi,

    /**
    * The DriversApi service constructor.
    * @property {module:api/DriversApi}
    */
    DriversApi,

    /**
    * The EventsApi service constructor.
    * @property {module:api/EventsApi}
    */
    EventsApi,

    /**
    * The GeofencesApi service constructor.
    * @property {module:api/GeofencesApi}
    */
    GeofencesApi,

    /**
    * The GroupsApi service constructor.
    * @property {module:api/GroupsApi}
    */
    GroupsApi,

    /**
    * The MaintenanceApi service constructor.
    * @property {module:api/MaintenanceApi}
    */
    MaintenanceApi,

    /**
    * The NotificationsApi service constructor.
    * @property {module:api/NotificationsApi}
    */
    NotificationsApi,

    /**
    * The PermissionsApi service constructor.
    * @property {module:api/PermissionsApi}
    */
    PermissionsApi,

    /**
    * The PositionsApi service constructor.
    * @property {module:api/PositionsApi}
    */
    PositionsApi,

    /**
    * The ReportsApi service constructor.
    * @property {module:api/ReportsApi}
    */
    ReportsApi,

    /**
    * The ServerApi service constructor.
    * @property {module:api/ServerApi}
    */
    ServerApi,

    /**
    * The SessionApi service constructor.
    * @property {module:api/SessionApi}
    */
    SessionApi,

    /**
    * The StatisticsApi service constructor.
    * @property {module:api/StatisticsApi}
    */
    StatisticsApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
