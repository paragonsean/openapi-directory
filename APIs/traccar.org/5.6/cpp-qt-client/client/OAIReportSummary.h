/**
 * Traccar
 * Open Source GPS Tracking Platform
 *
 * The version of the OpenAPI document: 5.6
 * Contact: support@traccar.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReportSummary.h
 *
 * 
 */

#ifndef OAIReportSummary_H
#define OAIReportSummary_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReportSummary : public OAIObject {
public:
    OAIReportSummary();
    OAIReportSummary(QString json);
    ~OAIReportSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAverageSpeed() const;
    void setAverageSpeed(const double &average_speed);
    bool is_average_speed_Set() const;
    bool is_average_speed_Valid() const;

    qint32 getDeviceId() const;
    void setDeviceId(const qint32 &device_id);
    bool is_device_id_Set() const;
    bool is_device_id_Valid() const;

    QString getDeviceName() const;
    void setDeviceName(const QString &device_name);
    bool is_device_name_Set() const;
    bool is_device_name_Valid() const;

    double getDistance() const;
    void setDistance(const double &distance);
    bool is_distance_Set() const;
    bool is_distance_Valid() const;

    qint32 getEngineHours() const;
    void setEngineHours(const qint32 &engine_hours);
    bool is_engine_hours_Set() const;
    bool is_engine_hours_Valid() const;

    double getMaxSpeed() const;
    void setMaxSpeed(const double &max_speed);
    bool is_max_speed_Set() const;
    bool is_max_speed_Valid() const;

    double getSpentFuel() const;
    void setSpentFuel(const double &spent_fuel);
    bool is_spent_fuel_Set() const;
    bool is_spent_fuel_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_average_speed;
    bool m_average_speed_isSet;
    bool m_average_speed_isValid;

    qint32 m_device_id;
    bool m_device_id_isSet;
    bool m_device_id_isValid;

    QString m_device_name;
    bool m_device_name_isSet;
    bool m_device_name_isValid;

    double m_distance;
    bool m_distance_isSet;
    bool m_distance_isValid;

    qint32 m_engine_hours;
    bool m_engine_hours_isSet;
    bool m_engine_hours_isValid;

    double m_max_speed;
    bool m_max_speed_isSet;
    bool m_max_speed_isValid;

    double m_spent_fuel;
    bool m_spent_fuel_isSet;
    bool m_spent_fuel_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReportSummary)

#endif // OAIReportSummary_H
