/**
 * Traccar
 * Open Source GPS Tracking Platform
 *
 * The version of the OpenAPI document: 5.6
 * Contact: support@traccar.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPosition.h
 *
 * 
 */

#ifndef OAIPosition_H
#define OAIPosition_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPosition : public OAIObject {
public:
    OAIPosition();
    OAIPosition(QString json);
    ~OAIPosition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAccuracy() const;
    void setAccuracy(const double &accuracy);
    bool is_accuracy_Set() const;
    bool is_accuracy_Valid() const;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    double getAltitude() const;
    void setAltitude(const double &altitude);
    bool is_altitude_Set() const;
    bool is_altitude_Valid() const;

    OAIObject getAttributes() const;
    void setAttributes(const OAIObject &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    double getCourse() const;
    void setCourse(const double &course);
    bool is_course_Set() const;
    bool is_course_Valid() const;

    qint32 getDeviceId() const;
    void setDeviceId(const qint32 &device_id);
    bool is_device_id_Set() const;
    bool is_device_id_Valid() const;

    QDateTime getDeviceTime() const;
    void setDeviceTime(const QDateTime &device_time);
    bool is_device_time_Set() const;
    bool is_device_time_Valid() const;

    QDateTime getFixTime() const;
    void setFixTime(const QDateTime &fix_time);
    bool is_fix_time_Set() const;
    bool is_fix_time_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    double getLatitude() const;
    void setLatitude(const double &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    double getLongitude() const;
    void setLongitude(const double &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    OAIObject getNetwork() const;
    void setNetwork(const OAIObject &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    bool isOutdated() const;
    void setOutdated(const bool &outdated);
    bool is_outdated_Set() const;
    bool is_outdated_Valid() const;

    QString getProtocol() const;
    void setProtocol(const QString &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    QDateTime getServerTime() const;
    void setServerTime(const QDateTime &server_time);
    bool is_server_time_Set() const;
    bool is_server_time_Valid() const;

    double getSpeed() const;
    void setSpeed(const double &speed);
    bool is_speed_Set() const;
    bool is_speed_Valid() const;

    bool isRValid() const;
    void setRValid(const bool &r_valid);
    bool is_r_valid_Set() const;
    bool is_r_valid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_accuracy;
    bool m_accuracy_isSet;
    bool m_accuracy_isValid;

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    double m_altitude;
    bool m_altitude_isSet;
    bool m_altitude_isValid;

    OAIObject m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    double m_course;
    bool m_course_isSet;
    bool m_course_isValid;

    qint32 m_device_id;
    bool m_device_id_isSet;
    bool m_device_id_isValid;

    QDateTime m_device_time;
    bool m_device_time_isSet;
    bool m_device_time_isValid;

    QDateTime m_fix_time;
    bool m_fix_time_isSet;
    bool m_fix_time_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    double m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    double m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    OAIObject m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    bool m_outdated;
    bool m_outdated_isSet;
    bool m_outdated_isValid;

    QString m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    QDateTime m_server_time;
    bool m_server_time_isSet;
    bool m_server_time_isValid;

    double m_speed;
    bool m_speed_isSet;
    bool m_speed_isValid;

    bool m_r_valid;
    bool m_r_valid_isSet;
    bool m_r_valid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPosition)

#endif // OAIPosition_H
