/**
 * Traccar
 * Open Source GPS Tracking Platform
 *
 * The version of the OpenAPI document: 5.6
 * Contact: support@traccar.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReportStops.h
 *
 * 
 */

#ifndef OAIReportStops_H
#define OAIReportStops_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReportStops : public OAIObject {
public:
    OAIReportStops();
    OAIReportStops(QString json);
    ~OAIReportStops() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    qint32 getDeviceId() const;
    void setDeviceId(const qint32 &device_id);
    bool is_device_id_Set() const;
    bool is_device_id_Valid() const;

    QString getDeviceName() const;
    void setDeviceName(const QString &device_name);
    bool is_device_name_Set() const;
    bool is_device_name_Valid() const;

    qint32 getDuration() const;
    void setDuration(const qint32 &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    qint32 getEngineHours() const;
    void setEngineHours(const qint32 &engine_hours);
    bool is_engine_hours_Set() const;
    bool is_engine_hours_Valid() const;

    double getLat() const;
    void setLat(const double &lat);
    bool is_lat_Set() const;
    bool is_lat_Valid() const;

    double getLon() const;
    void setLon(const double &lon);
    bool is_lon_Set() const;
    bool is_lon_Valid() const;

    double getSpentFuel() const;
    void setSpentFuel(const double &spent_fuel);
    bool is_spent_fuel_Set() const;
    bool is_spent_fuel_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    qint32 m_device_id;
    bool m_device_id_isSet;
    bool m_device_id_isValid;

    QString m_device_name;
    bool m_device_name_isSet;
    bool m_device_name_isValid;

    qint32 m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    qint32 m_engine_hours;
    bool m_engine_hours_isSet;
    bool m_engine_hours_isValid;

    double m_lat;
    bool m_lat_isSet;
    bool m_lat_isValid;

    double m_lon;
    bool m_lon_isSet;
    bool m_lon_isValid;

    double m_spent_fuel;
    bool m_spent_fuel_isSet;
    bool m_spent_fuel_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReportStops)

#endif // OAIReportStops_H
