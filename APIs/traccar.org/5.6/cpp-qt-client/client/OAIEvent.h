/**
 * Traccar
 * Open Source GPS Tracking Platform
 *
 * The version of the OpenAPI document: 5.6
 * Contact: support@traccar.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEvent.h
 *
 * 
 */

#ifndef OAIEvent_H
#define OAIEvent_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEvent : public OAIObject {
public:
    OAIEvent();
    OAIEvent(QString json);
    ~OAIEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getAttributes() const;
    void setAttributes(const OAIObject &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    qint32 getDeviceId() const;
    void setDeviceId(const qint32 &device_id);
    bool is_device_id_Set() const;
    bool is_device_id_Valid() const;

    QDateTime getEventTime() const;
    void setEventTime(const QDateTime &event_time);
    bool is_event_time_Set() const;
    bool is_event_time_Valid() const;

    qint32 getGeofenceId() const;
    void setGeofenceId(const qint32 &geofence_id);
    bool is_geofence_id_Set() const;
    bool is_geofence_id_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getMaintenanceId() const;
    void setMaintenanceId(const qint32 &maintenance_id);
    bool is_maintenance_id_Set() const;
    bool is_maintenance_id_Valid() const;

    qint32 getPositionId() const;
    void setPositionId(const qint32 &position_id);
    bool is_position_id_Set() const;
    bool is_position_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    qint32 m_device_id;
    bool m_device_id_isSet;
    bool m_device_id_isValid;

    QDateTime m_event_time;
    bool m_event_time_isSet;
    bool m_event_time_isValid;

    qint32 m_geofence_id;
    bool m_geofence_id_isSet;
    bool m_geofence_id_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_maintenance_id;
    bool m_maintenance_id_isSet;
    bool m_maintenance_id_isValid;

    qint32 m_position_id;
    bool m_position_id_isSet;
    bool m_position_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEvent)

#endif // OAIEvent_H
