/**
 * Traccar
 * Open Source GPS Tracking Platform
 *
 * The version of the OpenAPI document: 5.6
 * Contact: support@traccar.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser.h
 *
 * 
 */

#ifndef OAIUser_H
#define OAIUser_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUser : public OAIObject {
public:
    OAIUser();
    OAIUser(QString json);
    ~OAIUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAdministrator() const;
    void setAdministrator(const bool &administrator);
    bool is_administrator_Set() const;
    bool is_administrator_Valid() const;

    OAIObject getAttributes() const;
    void setAttributes(const OAIObject &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QString getCoordinateFormat() const;
    void setCoordinateFormat(const QString &coordinate_format);
    bool is_coordinate_format_Set() const;
    bool is_coordinate_format_Valid() const;

    qint32 getDeviceLimit() const;
    void setDeviceLimit(const qint32 &device_limit);
    bool is_device_limit_Set() const;
    bool is_device_limit_Valid() const;

    bool isDeviceReadonly() const;
    void setDeviceReadonly(const bool &device_readonly);
    bool is_device_readonly_Set() const;
    bool is_device_readonly_Valid() const;

    bool isDisabled() const;
    void setDisabled(const bool &disabled);
    bool is_disabled_Set() const;
    bool is_disabled_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QDateTime getExpirationTime() const;
    void setExpirationTime(const QDateTime &expiration_time);
    bool is_expiration_time_Set() const;
    bool is_expiration_time_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    double getLatitude() const;
    void setLatitude(const double &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    bool isLimitCommands() const;
    void setLimitCommands(const bool &limit_commands);
    bool is_limit_commands_Set() const;
    bool is_limit_commands_Valid() const;

    double getLongitude() const;
    void setLongitude(const double &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    QString getMap() const;
    void setMap(const QString &map);
    bool is_map_Set() const;
    bool is_map_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getPhone() const;
    void setPhone(const QString &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    QString getPoiLayer() const;
    void setPoiLayer(const QString &poi_layer);
    bool is_poi_layer_Set() const;
    bool is_poi_layer_Valid() const;

    bool isReadonly() const;
    void setReadonly(const bool &readonly);
    bool is_readonly_Set() const;
    bool is_readonly_Valid() const;

    bool isTwelveHourFormat() const;
    void setTwelveHourFormat(const bool &twelve_hour_format);
    bool is_twelve_hour_format_Set() const;
    bool is_twelve_hour_format_Valid() const;

    qint32 getUserLimit() const;
    void setUserLimit(const qint32 &user_limit);
    bool is_user_limit_Set() const;
    bool is_user_limit_Valid() const;

    qint32 getZoom() const;
    void setZoom(const qint32 &zoom);
    bool is_zoom_Set() const;
    bool is_zoom_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_administrator;
    bool m_administrator_isSet;
    bool m_administrator_isValid;

    OAIObject m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QString m_coordinate_format;
    bool m_coordinate_format_isSet;
    bool m_coordinate_format_isValid;

    qint32 m_device_limit;
    bool m_device_limit_isSet;
    bool m_device_limit_isValid;

    bool m_device_readonly;
    bool m_device_readonly_isSet;
    bool m_device_readonly_isValid;

    bool m_disabled;
    bool m_disabled_isSet;
    bool m_disabled_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QDateTime m_expiration_time;
    bool m_expiration_time_isSet;
    bool m_expiration_time_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    double m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    bool m_limit_commands;
    bool m_limit_commands_isSet;
    bool m_limit_commands_isValid;

    double m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    QString m_map;
    bool m_map_isSet;
    bool m_map_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString m_phone;
    bool m_phone_isSet;
    bool m_phone_isValid;

    QString m_poi_layer;
    bool m_poi_layer_isSet;
    bool m_poi_layer_isValid;

    bool m_readonly;
    bool m_readonly_isSet;
    bool m_readonly_isValid;

    bool m_twelve_hour_format;
    bool m_twelve_hour_format_isSet;
    bool m_twelve_hour_format_isValid;

    qint32 m_user_limit;
    bool m_user_limit_isSet;
    bool m_user_limit_isValid;

    qint32 m_zoom;
    bool m_zoom_isSet;
    bool m_zoom_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser)

#endif // OAIUser_H
