/**
 * Traccar
 * Open Source GPS Tracking Platform
 *
 * The version of the OpenAPI document: 5.6
 * Contact: support@traccar.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServer.h
 *
 * 
 */

#ifndef OAIServer_H
#define OAIServer_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServer : public OAIObject {
public:
    OAIServer();
    OAIServer(QString json);
    ~OAIServer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getAttributes() const;
    void setAttributes(const OAIObject &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QString getBingKey() const;
    void setBingKey(const QString &bing_key);
    bool is_bing_key_Set() const;
    bool is_bing_key_Valid() const;

    QString getCoordinateFormat() const;
    void setCoordinateFormat(const QString &coordinate_format);
    bool is_coordinate_format_Set() const;
    bool is_coordinate_format_Valid() const;

    bool isDeviceReadonly() const;
    void setDeviceReadonly(const bool &device_readonly);
    bool is_device_readonly_Set() const;
    bool is_device_readonly_Valid() const;

    bool isForceSettings() const;
    void setForceSettings(const bool &force_settings);
    bool is_force_settings_Set() const;
    bool is_force_settings_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    double getLatitude() const;
    void setLatitude(const double &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    bool isLimitCommands() const;
    void setLimitCommands(const bool &limit_commands);
    bool is_limit_commands_Set() const;
    bool is_limit_commands_Valid() const;

    double getLongitude() const;
    void setLongitude(const double &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    QString getMap() const;
    void setMap(const QString &map);
    bool is_map_Set() const;
    bool is_map_Valid() const;

    QString getMapUrl() const;
    void setMapUrl(const QString &map_url);
    bool is_map_url_Set() const;
    bool is_map_url_Valid() const;

    QString getPoiLayer() const;
    void setPoiLayer(const QString &poi_layer);
    bool is_poi_layer_Set() const;
    bool is_poi_layer_Valid() const;

    bool isReadonly() const;
    void setReadonly(const bool &readonly);
    bool is_readonly_Set() const;
    bool is_readonly_Valid() const;

    bool isRegistration() const;
    void setRegistration(const bool &registration);
    bool is_registration_Set() const;
    bool is_registration_Valid() const;

    bool isTwelveHourFormat() const;
    void setTwelveHourFormat(const bool &twelve_hour_format);
    bool is_twelve_hour_format_Set() const;
    bool is_twelve_hour_format_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    qint32 getZoom() const;
    void setZoom(const qint32 &zoom);
    bool is_zoom_Set() const;
    bool is_zoom_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QString m_bing_key;
    bool m_bing_key_isSet;
    bool m_bing_key_isValid;

    QString m_coordinate_format;
    bool m_coordinate_format_isSet;
    bool m_coordinate_format_isValid;

    bool m_device_readonly;
    bool m_device_readonly_isSet;
    bool m_device_readonly_isValid;

    bool m_force_settings;
    bool m_force_settings_isSet;
    bool m_force_settings_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    double m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    bool m_limit_commands;
    bool m_limit_commands_isSet;
    bool m_limit_commands_isValid;

    double m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    QString m_map;
    bool m_map_isSet;
    bool m_map_isValid;

    QString m_map_url;
    bool m_map_url_isSet;
    bool m_map_url_isValid;

    QString m_poi_layer;
    bool m_poi_layer_isSet;
    bool m_poi_layer_isValid;

    bool m_readonly;
    bool m_readonly_isSet;
    bool m_readonly_isValid;

    bool m_registration;
    bool m_registration_isSet;
    bool m_registration_isValid;

    bool m_twelve_hour_format;
    bool m_twelve_hour_format_isSet;
    bool m_twelve_hour_format_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    qint32 m_zoom;
    bool m_zoom_isSet;
    bool m_zoom_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServer)

#endif // OAIServer_H
