# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReportTrips(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average_speed: float=None, device_id: int=None, device_name: str=None, distance: float=None, driver_name: str=None, driver_unique_id: int=None, duration: int=None, end_address: str=None, end_lat: float=None, end_lon: float=None, end_time: datetime=None, max_speed: float=None, spent_fuel: float=None, start_address: str=None, start_lat: float=None, start_lon: float=None, start_time: datetime=None):
        """ReportTrips - a model defined in OpenAPI

        :param average_speed: The average_speed of this ReportTrips.
        :param device_id: The device_id of this ReportTrips.
        :param device_name: The device_name of this ReportTrips.
        :param distance: The distance of this ReportTrips.
        :param driver_name: The driver_name of this ReportTrips.
        :param driver_unique_id: The driver_unique_id of this ReportTrips.
        :param duration: The duration of this ReportTrips.
        :param end_address: The end_address of this ReportTrips.
        :param end_lat: The end_lat of this ReportTrips.
        :param end_lon: The end_lon of this ReportTrips.
        :param end_time: The end_time of this ReportTrips.
        :param max_speed: The max_speed of this ReportTrips.
        :param spent_fuel: The spent_fuel of this ReportTrips.
        :param start_address: The start_address of this ReportTrips.
        :param start_lat: The start_lat of this ReportTrips.
        :param start_lon: The start_lon of this ReportTrips.
        :param start_time: The start_time of this ReportTrips.
        """
        self.openapi_types = {
            'average_speed': float,
            'device_id': int,
            'device_name': str,
            'distance': float,
            'driver_name': str,
            'driver_unique_id': int,
            'duration': int,
            'end_address': str,
            'end_lat': float,
            'end_lon': float,
            'end_time': datetime,
            'max_speed': float,
            'spent_fuel': float,
            'start_address': str,
            'start_lat': float,
            'start_lon': float,
            'start_time': datetime
        }

        self.attribute_map = {
            'average_speed': 'averageSpeed',
            'device_id': 'deviceId',
            'device_name': 'deviceName',
            'distance': 'distance',
            'driver_name': 'driverName',
            'driver_unique_id': 'driverUniqueId',
            'duration': 'duration',
            'end_address': 'endAddress',
            'end_lat': 'endLat',
            'end_lon': 'endLon',
            'end_time': 'endTime',
            'max_speed': 'maxSpeed',
            'spent_fuel': 'spentFuel',
            'start_address': 'startAddress',
            'start_lat': 'startLat',
            'start_lon': 'startLon',
            'start_time': 'startTime'
        }

        self._average_speed = average_speed
        self._device_id = device_id
        self._device_name = device_name
        self._distance = distance
        self._driver_name = driver_name
        self._driver_unique_id = driver_unique_id
        self._duration = duration
        self._end_address = end_address
        self._end_lat = end_lat
        self._end_lon = end_lon
        self._end_time = end_time
        self._max_speed = max_speed
        self._spent_fuel = spent_fuel
        self._start_address = start_address
        self._start_lat = start_lat
        self._start_lon = start_lon
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportTrips':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportTrips of this ReportTrips.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average_speed(self):
        """Gets the average_speed of this ReportTrips.

        in knots

        :return: The average_speed of this ReportTrips.
        :rtype: float
        """
        return self._average_speed

    @average_speed.setter
    def average_speed(self, average_speed):
        """Sets the average_speed of this ReportTrips.

        in knots

        :param average_speed: The average_speed of this ReportTrips.
        :type average_speed: float
        """

        self._average_speed = average_speed

    @property
    def device_id(self):
        """Gets the device_id of this ReportTrips.


        :return: The device_id of this ReportTrips.
        :rtype: int
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this ReportTrips.


        :param device_id: The device_id of this ReportTrips.
        :type device_id: int
        """

        self._device_id = device_id

    @property
    def device_name(self):
        """Gets the device_name of this ReportTrips.


        :return: The device_name of this ReportTrips.
        :rtype: str
        """
        return self._device_name

    @device_name.setter
    def device_name(self, device_name):
        """Sets the device_name of this ReportTrips.


        :param device_name: The device_name of this ReportTrips.
        :type device_name: str
        """

        self._device_name = device_name

    @property
    def distance(self):
        """Gets the distance of this ReportTrips.

        in meters

        :return: The distance of this ReportTrips.
        :rtype: float
        """
        return self._distance

    @distance.setter
    def distance(self, distance):
        """Sets the distance of this ReportTrips.

        in meters

        :param distance: The distance of this ReportTrips.
        :type distance: float
        """

        self._distance = distance

    @property
    def driver_name(self):
        """Gets the driver_name of this ReportTrips.


        :return: The driver_name of this ReportTrips.
        :rtype: str
        """
        return self._driver_name

    @driver_name.setter
    def driver_name(self, driver_name):
        """Sets the driver_name of this ReportTrips.


        :param driver_name: The driver_name of this ReportTrips.
        :type driver_name: str
        """

        self._driver_name = driver_name

    @property
    def driver_unique_id(self):
        """Gets the driver_unique_id of this ReportTrips.


        :return: The driver_unique_id of this ReportTrips.
        :rtype: int
        """
        return self._driver_unique_id

    @driver_unique_id.setter
    def driver_unique_id(self, driver_unique_id):
        """Sets the driver_unique_id of this ReportTrips.


        :param driver_unique_id: The driver_unique_id of this ReportTrips.
        :type driver_unique_id: int
        """

        self._driver_unique_id = driver_unique_id

    @property
    def duration(self):
        """Gets the duration of this ReportTrips.


        :return: The duration of this ReportTrips.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this ReportTrips.


        :param duration: The duration of this ReportTrips.
        :type duration: int
        """

        self._duration = duration

    @property
    def end_address(self):
        """Gets the end_address of this ReportTrips.


        :return: The end_address of this ReportTrips.
        :rtype: str
        """
        return self._end_address

    @end_address.setter
    def end_address(self, end_address):
        """Sets the end_address of this ReportTrips.


        :param end_address: The end_address of this ReportTrips.
        :type end_address: str
        """

        self._end_address = end_address

    @property
    def end_lat(self):
        """Gets the end_lat of this ReportTrips.


        :return: The end_lat of this ReportTrips.
        :rtype: float
        """
        return self._end_lat

    @end_lat.setter
    def end_lat(self, end_lat):
        """Sets the end_lat of this ReportTrips.


        :param end_lat: The end_lat of this ReportTrips.
        :type end_lat: float
        """

        self._end_lat = end_lat

    @property
    def end_lon(self):
        """Gets the end_lon of this ReportTrips.


        :return: The end_lon of this ReportTrips.
        :rtype: float
        """
        return self._end_lon

    @end_lon.setter
    def end_lon(self, end_lon):
        """Sets the end_lon of this ReportTrips.


        :param end_lon: The end_lon of this ReportTrips.
        :type end_lon: float
        """

        self._end_lon = end_lon

    @property
    def end_time(self):
        """Gets the end_time of this ReportTrips.

        in IS0 8601 format. eg. `1963-11-22T18:30:00Z`

        :return: The end_time of this ReportTrips.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this ReportTrips.

        in IS0 8601 format. eg. `1963-11-22T18:30:00Z`

        :param end_time: The end_time of this ReportTrips.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def max_speed(self):
        """Gets the max_speed of this ReportTrips.

        in knots

        :return: The max_speed of this ReportTrips.
        :rtype: float
        """
        return self._max_speed

    @max_speed.setter
    def max_speed(self, max_speed):
        """Sets the max_speed of this ReportTrips.

        in knots

        :param max_speed: The max_speed of this ReportTrips.
        :type max_speed: float
        """

        self._max_speed = max_speed

    @property
    def spent_fuel(self):
        """Gets the spent_fuel of this ReportTrips.

        in liters

        :return: The spent_fuel of this ReportTrips.
        :rtype: float
        """
        return self._spent_fuel

    @spent_fuel.setter
    def spent_fuel(self, spent_fuel):
        """Sets the spent_fuel of this ReportTrips.

        in liters

        :param spent_fuel: The spent_fuel of this ReportTrips.
        :type spent_fuel: float
        """

        self._spent_fuel = spent_fuel

    @property
    def start_address(self):
        """Gets the start_address of this ReportTrips.


        :return: The start_address of this ReportTrips.
        :rtype: str
        """
        return self._start_address

    @start_address.setter
    def start_address(self, start_address):
        """Sets the start_address of this ReportTrips.


        :param start_address: The start_address of this ReportTrips.
        :type start_address: str
        """

        self._start_address = start_address

    @property
    def start_lat(self):
        """Gets the start_lat of this ReportTrips.


        :return: The start_lat of this ReportTrips.
        :rtype: float
        """
        return self._start_lat

    @start_lat.setter
    def start_lat(self, start_lat):
        """Sets the start_lat of this ReportTrips.


        :param start_lat: The start_lat of this ReportTrips.
        :type start_lat: float
        """

        self._start_lat = start_lat

    @property
    def start_lon(self):
        """Gets the start_lon of this ReportTrips.


        :return: The start_lon of this ReportTrips.
        :rtype: float
        """
        return self._start_lon

    @start_lon.setter
    def start_lon(self, start_lon):
        """Sets the start_lon of this ReportTrips.


        :param start_lon: The start_lon of this ReportTrips.
        :type start_lon: float
        """

        self._start_lon = start_lon

    @property
    def start_time(self):
        """Gets the start_time of this ReportTrips.

        in IS0 8601 format. eg. `1963-11-22T18:30:00Z`

        :return: The start_time of this ReportTrips.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this ReportTrips.

        in IS0 8601 format. eg. `1963-11-22T18:30:00Z`

        :param start_time: The start_time of this ReportTrips.
        :type start_time: datetime
        """

        self._start_time = start_time
