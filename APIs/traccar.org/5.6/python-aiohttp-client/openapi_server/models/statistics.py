# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Statistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_devices: int=None, active_users: int=None, capture_time: datetime=None, messages_received: int=None, messages_stored: int=None, requests: int=None):
        """Statistics - a model defined in OpenAPI

        :param active_devices: The active_devices of this Statistics.
        :param active_users: The active_users of this Statistics.
        :param capture_time: The capture_time of this Statistics.
        :param messages_received: The messages_received of this Statistics.
        :param messages_stored: The messages_stored of this Statistics.
        :param requests: The requests of this Statistics.
        """
        self.openapi_types = {
            'active_devices': int,
            'active_users': int,
            'capture_time': datetime,
            'messages_received': int,
            'messages_stored': int,
            'requests': int
        }

        self.attribute_map = {
            'active_devices': 'activeDevices',
            'active_users': 'activeUsers',
            'capture_time': 'captureTime',
            'messages_received': 'messagesReceived',
            'messages_stored': 'messagesStored',
            'requests': 'requests'
        }

        self._active_devices = active_devices
        self._active_users = active_users
        self._capture_time = capture_time
        self._messages_received = messages_received
        self._messages_stored = messages_stored
        self._requests = requests

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Statistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Statistics of this Statistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_devices(self):
        """Gets the active_devices of this Statistics.


        :return: The active_devices of this Statistics.
        :rtype: int
        """
        return self._active_devices

    @active_devices.setter
    def active_devices(self, active_devices):
        """Sets the active_devices of this Statistics.


        :param active_devices: The active_devices of this Statistics.
        :type active_devices: int
        """

        self._active_devices = active_devices

    @property
    def active_users(self):
        """Gets the active_users of this Statistics.


        :return: The active_users of this Statistics.
        :rtype: int
        """
        return self._active_users

    @active_users.setter
    def active_users(self, active_users):
        """Sets the active_users of this Statistics.


        :param active_users: The active_users of this Statistics.
        :type active_users: int
        """

        self._active_users = active_users

    @property
    def capture_time(self):
        """Gets the capture_time of this Statistics.

        in IS0 8601 format. eg. `1963-11-22T18:30:00Z`

        :return: The capture_time of this Statistics.
        :rtype: datetime
        """
        return self._capture_time

    @capture_time.setter
    def capture_time(self, capture_time):
        """Sets the capture_time of this Statistics.

        in IS0 8601 format. eg. `1963-11-22T18:30:00Z`

        :param capture_time: The capture_time of this Statistics.
        :type capture_time: datetime
        """

        self._capture_time = capture_time

    @property
    def messages_received(self):
        """Gets the messages_received of this Statistics.


        :return: The messages_received of this Statistics.
        :rtype: int
        """
        return self._messages_received

    @messages_received.setter
    def messages_received(self, messages_received):
        """Sets the messages_received of this Statistics.


        :param messages_received: The messages_received of this Statistics.
        :type messages_received: int
        """

        self._messages_received = messages_received

    @property
    def messages_stored(self):
        """Gets the messages_stored of this Statistics.


        :return: The messages_stored of this Statistics.
        :rtype: int
        """
        return self._messages_stored

    @messages_stored.setter
    def messages_stored(self, messages_stored):
        """Sets the messages_stored of this Statistics.


        :param messages_stored: The messages_stored of this Statistics.
        :type messages_stored: int
        """

        self._messages_stored = messages_stored

    @property
    def requests(self):
        """Gets the requests of this Statistics.


        :return: The requests of this Statistics.
        :rtype: int
        """
        return self._requests

    @requests.setter
    def requests(self, requests):
        """Sets the requests of this Statistics.


        :param requests: The requests of this Statistics.
        :type requests: int
        """

        self._requests = requests
