# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Command(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: object=None, description: str=None, device_id: int=None, id: int=None, type: str=None):
        """Command - a model defined in OpenAPI

        :param attributes: The attributes of this Command.
        :param description: The description of this Command.
        :param device_id: The device_id of this Command.
        :param id: The id of this Command.
        :param type: The type of this Command.
        """
        self.openapi_types = {
            'attributes': object,
            'description': str,
            'device_id': int,
            'id': int,
            'type': str
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'description': 'description',
            'device_id': 'deviceId',
            'id': 'id',
            'type': 'type'
        }

        self._attributes = attributes
        self._description = description
        self._device_id = device_id
        self._id = id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Command':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Command of this Command.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this Command.


        :return: The attributes of this Command.
        :rtype: object
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this Command.


        :param attributes: The attributes of this Command.
        :type attributes: object
        """

        self._attributes = attributes

    @property
    def description(self):
        """Gets the description of this Command.


        :return: The description of this Command.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Command.


        :param description: The description of this Command.
        :type description: str
        """

        self._description = description

    @property
    def device_id(self):
        """Gets the device_id of this Command.


        :return: The device_id of this Command.
        :rtype: int
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this Command.


        :param device_id: The device_id of this Command.
        :type device_id: int
        """

        self._device_id = device_id

    @property
    def id(self):
        """Gets the id of this Command.


        :return: The id of this Command.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Command.


        :param id: The id of this Command.
        :type id: int
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this Command.


        :return: The type of this Command.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Command.


        :param type: The type of this Command.
        :type type: str
        """

        self._type = type
