# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReportStops(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, device_id: int=None, device_name: str=None, duration: int=None, end_time: datetime=None, engine_hours: int=None, lat: float=None, lon: float=None, spent_fuel: float=None, start_time: datetime=None):
        """ReportStops - a model defined in OpenAPI

        :param address: The address of this ReportStops.
        :param device_id: The device_id of this ReportStops.
        :param device_name: The device_name of this ReportStops.
        :param duration: The duration of this ReportStops.
        :param end_time: The end_time of this ReportStops.
        :param engine_hours: The engine_hours of this ReportStops.
        :param lat: The lat of this ReportStops.
        :param lon: The lon of this ReportStops.
        :param spent_fuel: The spent_fuel of this ReportStops.
        :param start_time: The start_time of this ReportStops.
        """
        self.openapi_types = {
            'address': str,
            'device_id': int,
            'device_name': str,
            'duration': int,
            'end_time': datetime,
            'engine_hours': int,
            'lat': float,
            'lon': float,
            'spent_fuel': float,
            'start_time': datetime
        }

        self.attribute_map = {
            'address': 'address',
            'device_id': 'deviceId',
            'device_name': 'deviceName',
            'duration': 'duration',
            'end_time': 'endTime',
            'engine_hours': 'engineHours',
            'lat': 'lat',
            'lon': 'lon',
            'spent_fuel': 'spentFuel',
            'start_time': 'startTime'
        }

        self._address = address
        self._device_id = device_id
        self._device_name = device_name
        self._duration = duration
        self._end_time = end_time
        self._engine_hours = engine_hours
        self._lat = lat
        self._lon = lon
        self._spent_fuel = spent_fuel
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportStops':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportStops of this ReportStops.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this ReportStops.


        :return: The address of this ReportStops.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this ReportStops.


        :param address: The address of this ReportStops.
        :type address: str
        """

        self._address = address

    @property
    def device_id(self):
        """Gets the device_id of this ReportStops.


        :return: The device_id of this ReportStops.
        :rtype: int
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this ReportStops.


        :param device_id: The device_id of this ReportStops.
        :type device_id: int
        """

        self._device_id = device_id

    @property
    def device_name(self):
        """Gets the device_name of this ReportStops.


        :return: The device_name of this ReportStops.
        :rtype: str
        """
        return self._device_name

    @device_name.setter
    def device_name(self, device_name):
        """Sets the device_name of this ReportStops.


        :param device_name: The device_name of this ReportStops.
        :type device_name: str
        """

        self._device_name = device_name

    @property
    def duration(self):
        """Gets the duration of this ReportStops.


        :return: The duration of this ReportStops.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this ReportStops.


        :param duration: The duration of this ReportStops.
        :type duration: int
        """

        self._duration = duration

    @property
    def end_time(self):
        """Gets the end_time of this ReportStops.

        in IS0 8601 format. eg. `1963-11-22T18:30:00Z`

        :return: The end_time of this ReportStops.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this ReportStops.

        in IS0 8601 format. eg. `1963-11-22T18:30:00Z`

        :param end_time: The end_time of this ReportStops.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def engine_hours(self):
        """Gets the engine_hours of this ReportStops.


        :return: The engine_hours of this ReportStops.
        :rtype: int
        """
        return self._engine_hours

    @engine_hours.setter
    def engine_hours(self, engine_hours):
        """Sets the engine_hours of this ReportStops.


        :param engine_hours: The engine_hours of this ReportStops.
        :type engine_hours: int
        """

        self._engine_hours = engine_hours

    @property
    def lat(self):
        """Gets the lat of this ReportStops.


        :return: The lat of this ReportStops.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat):
        """Sets the lat of this ReportStops.


        :param lat: The lat of this ReportStops.
        :type lat: float
        """

        self._lat = lat

    @property
    def lon(self):
        """Gets the lon of this ReportStops.


        :return: The lon of this ReportStops.
        :rtype: float
        """
        return self._lon

    @lon.setter
    def lon(self, lon):
        """Sets the lon of this ReportStops.


        :param lon: The lon of this ReportStops.
        :type lon: float
        """

        self._lon = lon

    @property
    def spent_fuel(self):
        """Gets the spent_fuel of this ReportStops.

        in liters

        :return: The spent_fuel of this ReportStops.
        :rtype: float
        """
        return self._spent_fuel

    @spent_fuel.setter
    def spent_fuel(self, spent_fuel):
        """Sets the spent_fuel of this ReportStops.

        in liters

        :param spent_fuel: The spent_fuel of this ReportStops.
        :type spent_fuel: float
        """

        self._spent_fuel = spent_fuel

    @property
    def start_time(self):
        """Gets the start_time of this ReportStops.

        in IS0 8601 format. eg. `1963-11-22T18:30:00Z`

        :return: The start_time of this ReportStops.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this ReportStops.

        in IS0 8601 format. eg. `1963-11-22T18:30:00Z`

        :param start_time: The start_time of this ReportStops.
        :type start_time: datetime
        """

        self._start_time = start_time
