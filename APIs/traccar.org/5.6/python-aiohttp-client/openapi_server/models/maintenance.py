# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Maintenance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: object=None, id: int=None, name: str=None, period: float=None, start: float=None, type: str=None):
        """Maintenance - a model defined in OpenAPI

        :param attributes: The attributes of this Maintenance.
        :param id: The id of this Maintenance.
        :param name: The name of this Maintenance.
        :param period: The period of this Maintenance.
        :param start: The start of this Maintenance.
        :param type: The type of this Maintenance.
        """
        self.openapi_types = {
            'attributes': object,
            'id': int,
            'name': str,
            'period': float,
            'start': float,
            'type': str
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'id': 'id',
            'name': 'name',
            'period': 'period',
            'start': 'start',
            'type': 'type'
        }

        self._attributes = attributes
        self._id = id
        self._name = name
        self._period = period
        self._start = start
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Maintenance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Maintenance of this Maintenance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this Maintenance.


        :return: The attributes of this Maintenance.
        :rtype: object
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this Maintenance.


        :param attributes: The attributes of this Maintenance.
        :type attributes: object
        """

        self._attributes = attributes

    @property
    def id(self):
        """Gets the id of this Maintenance.


        :return: The id of this Maintenance.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Maintenance.


        :param id: The id of this Maintenance.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Maintenance.


        :return: The name of this Maintenance.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Maintenance.


        :param name: The name of this Maintenance.
        :type name: str
        """

        self._name = name

    @property
    def period(self):
        """Gets the period of this Maintenance.


        :return: The period of this Maintenance.
        :rtype: float
        """
        return self._period

    @period.setter
    def period(self, period):
        """Sets the period of this Maintenance.


        :param period: The period of this Maintenance.
        :type period: float
        """

        self._period = period

    @property
    def start(self):
        """Gets the start of this Maintenance.


        :return: The start of this Maintenance.
        :rtype: float
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this Maintenance.


        :param start: The start of this Maintenance.
        :type start: float
        """

        self._start = start

    @property
    def type(self):
        """Gets the type of this Maintenance.


        :return: The type of this Maintenance.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Maintenance.


        :param type: The type of this Maintenance.
        :type type: str
        """

        self._type = type
