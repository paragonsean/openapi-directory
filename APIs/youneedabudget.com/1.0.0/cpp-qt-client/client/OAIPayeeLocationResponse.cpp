/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPayeeLocationResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPayeeLocationResponse::OAIPayeeLocationResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPayeeLocationResponse::OAIPayeeLocationResponse() {
    this->initializeModel();
}

OAIPayeeLocationResponse::~OAIPayeeLocationResponse() {}

void OAIPayeeLocationResponse::initializeModel() {

    m_data_isSet = false;
    m_data_isValid = false;
}

void OAIPayeeLocationResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPayeeLocationResponse::fromJsonObject(QJsonObject json) {

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;
}

QString OAIPayeeLocationResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPayeeLocationResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_data.isSet()) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    return obj;
}

OAIPayeeLocationResponse_data OAIPayeeLocationResponse::getData() const {
    return m_data;
}
void OAIPayeeLocationResponse::setData(const OAIPayeeLocationResponse_data &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAIPayeeLocationResponse::is_data_Set() const{
    return m_data_isSet;
}

bool OAIPayeeLocationResponse::is_data_Valid() const{
    return m_data_isValid;
}

bool OAIPayeeLocationResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPayeeLocationResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_data_isValid && true;
}

} // namespace OpenAPI
