/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScheduledTransactionResponse_data.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScheduledTransactionResponse_data::OAIScheduledTransactionResponse_data(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScheduledTransactionResponse_data::OAIScheduledTransactionResponse_data() {
    this->initializeModel();
}

OAIScheduledTransactionResponse_data::~OAIScheduledTransactionResponse_data() {}

void OAIScheduledTransactionResponse_data::initializeModel() {

    m_scheduled_transaction_isSet = false;
    m_scheduled_transaction_isValid = false;
}

void OAIScheduledTransactionResponse_data::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScheduledTransactionResponse_data::fromJsonObject(QJsonObject json) {

    m_scheduled_transaction_isValid = ::OpenAPI::fromJsonValue(m_scheduled_transaction, json[QString("scheduled_transaction")]);
    m_scheduled_transaction_isSet = !json[QString("scheduled_transaction")].isNull() && m_scheduled_transaction_isValid;
}

QString OAIScheduledTransactionResponse_data::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScheduledTransactionResponse_data::asJsonObject() const {
    QJsonObject obj;
    if (m_scheduled_transaction.isSet()) {
        obj.insert(QString("scheduled_transaction"), ::OpenAPI::toJsonValue(m_scheduled_transaction));
    }
    return obj;
}

OAIScheduledTransactionDetail OAIScheduledTransactionResponse_data::getScheduledTransaction() const {
    return m_scheduled_transaction;
}
void OAIScheduledTransactionResponse_data::setScheduledTransaction(const OAIScheduledTransactionDetail &scheduled_transaction) {
    m_scheduled_transaction = scheduled_transaction;
    m_scheduled_transaction_isSet = true;
}

bool OAIScheduledTransactionResponse_data::is_scheduled_transaction_Set() const{
    return m_scheduled_transaction_isSet;
}

bool OAIScheduledTransactionResponse_data::is_scheduled_transaction_Valid() const{
    return m_scheduled_transaction_isValid;
}

bool OAIScheduledTransactionResponse_data::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_scheduled_transaction.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScheduledTransactionResponse_data::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_scheduled_transaction_isValid && true;
}

} // namespace OpenAPI
