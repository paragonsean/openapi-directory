/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBudgetSettingsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBudgetSettingsResponse::OAIBudgetSettingsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBudgetSettingsResponse::OAIBudgetSettingsResponse() {
    this->initializeModel();
}

OAIBudgetSettingsResponse::~OAIBudgetSettingsResponse() {}

void OAIBudgetSettingsResponse::initializeModel() {

    m_data_isSet = false;
    m_data_isValid = false;
}

void OAIBudgetSettingsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBudgetSettingsResponse::fromJsonObject(QJsonObject json) {

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;
}

QString OAIBudgetSettingsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBudgetSettingsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_data.isSet()) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    return obj;
}

OAIBudgetSettingsResponse_data OAIBudgetSettingsResponse::getData() const {
    return m_data;
}
void OAIBudgetSettingsResponse::setData(const OAIBudgetSettingsResponse_data &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAIBudgetSettingsResponse::is_data_Set() const{
    return m_data_isSet;
}

bool OAIBudgetSettingsResponse::is_data_Valid() const{
    return m_data_isValid;
}

bool OAIBudgetSettingsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBudgetSettingsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_data_isValid && true;
}

} // namespace OpenAPI
