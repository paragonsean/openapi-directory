/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHybridTransaction.h
 *
 * 
 */

#ifndef OAIHybridTransaction_H
#define OAIHybridTransaction_H

#include <QJsonObject>

#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHybridTransaction : public OAIObject {
public:
    OAIHybridTransaction();
    OAIHybridTransaction(QString json);
    ~OAIHybridTransaction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    qint64 getAmount() const;
    void setAmount(const qint64 &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    bool isApproved() const;
    void setApproved(const bool &approved);
    bool is_approved_Set() const;
    bool is_approved_Valid() const;

    QString getCategoryId() const;
    void setCategoryId(const QString &category_id);
    bool is_category_id_Set() const;
    bool is_category_id_Valid() const;

    QString getCleared() const;
    void setCleared(const QString &cleared);
    bool is_cleared_Set() const;
    bool is_cleared_Valid() const;

    QDate getDate() const;
    void setDate(const QDate &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getDebtTransactionType() const;
    void setDebtTransactionType(const QString &debt_transaction_type);
    bool is_debt_transaction_type_Set() const;
    bool is_debt_transaction_type_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    QString getFlagColor() const;
    void setFlagColor(const QString &flag_color);
    bool is_flag_color_Set() const;
    bool is_flag_color_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getImportId() const;
    void setImportId(const QString &import_id);
    bool is_import_id_Set() const;
    bool is_import_id_Valid() const;

    QString getImportPayeeName() const;
    void setImportPayeeName(const QString &import_payee_name);
    bool is_import_payee_name_Set() const;
    bool is_import_payee_name_Valid() const;

    QString getImportPayeeNameOriginal() const;
    void setImportPayeeNameOriginal(const QString &import_payee_name_original);
    bool is_import_payee_name_original_Set() const;
    bool is_import_payee_name_original_Valid() const;

    QString getMatchedTransactionId() const;
    void setMatchedTransactionId(const QString &matched_transaction_id);
    bool is_matched_transaction_id_Set() const;
    bool is_matched_transaction_id_Valid() const;

    QString getMemo() const;
    void setMemo(const QString &memo);
    bool is_memo_Set() const;
    bool is_memo_Valid() const;

    QString getPayeeId() const;
    void setPayeeId(const QString &payee_id);
    bool is_payee_id_Set() const;
    bool is_payee_id_Valid() const;

    QString getTransferAccountId() const;
    void setTransferAccountId(const QString &transfer_account_id);
    bool is_transfer_account_id_Set() const;
    bool is_transfer_account_id_Valid() const;

    QString getTransferTransactionId() const;
    void setTransferTransactionId(const QString &transfer_transaction_id);
    bool is_transfer_transaction_id_Set() const;
    bool is_transfer_transaction_id_Valid() const;

    QString getAccountName() const;
    void setAccountName(const QString &account_name);
    bool is_account_name_Set() const;
    bool is_account_name_Valid() const;

    QString getCategoryName() const;
    void setCategoryName(const QString &category_name);
    bool is_category_name_Set() const;
    bool is_category_name_Valid() const;

    QString getParentTransactionId() const;
    void setParentTransactionId(const QString &parent_transaction_id);
    bool is_parent_transaction_id_Set() const;
    bool is_parent_transaction_id_Valid() const;

    QString getPayeeName() const;
    void setPayeeName(const QString &payee_name);
    bool is_payee_name_Set() const;
    bool is_payee_name_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    qint64 m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    bool m_approved;
    bool m_approved_isSet;
    bool m_approved_isValid;

    QString m_category_id;
    bool m_category_id_isSet;
    bool m_category_id_isValid;

    QString m_cleared;
    bool m_cleared_isSet;
    bool m_cleared_isValid;

    QDate m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_debt_transaction_type;
    bool m_debt_transaction_type_isSet;
    bool m_debt_transaction_type_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    QString m_flag_color;
    bool m_flag_color_isSet;
    bool m_flag_color_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_import_id;
    bool m_import_id_isSet;
    bool m_import_id_isValid;

    QString m_import_payee_name;
    bool m_import_payee_name_isSet;
    bool m_import_payee_name_isValid;

    QString m_import_payee_name_original;
    bool m_import_payee_name_original_isSet;
    bool m_import_payee_name_original_isValid;

    QString m_matched_transaction_id;
    bool m_matched_transaction_id_isSet;
    bool m_matched_transaction_id_isValid;

    QString m_memo;
    bool m_memo_isSet;
    bool m_memo_isValid;

    QString m_payee_id;
    bool m_payee_id_isSet;
    bool m_payee_id_isValid;

    QString m_transfer_account_id;
    bool m_transfer_account_id_isSet;
    bool m_transfer_account_id_isValid;

    QString m_transfer_transaction_id;
    bool m_transfer_transaction_id_isSet;
    bool m_transfer_transaction_id_isValid;

    QString m_account_name;
    bool m_account_name_isSet;
    bool m_account_name_isValid;

    QString m_category_name;
    bool m_category_name_isSet;
    bool m_category_name_isValid;

    QString m_parent_transaction_id;
    bool m_parent_transaction_id_isSet;
    bool m_parent_transaction_id_isValid;

    QString m_payee_name;
    bool m_payee_name_isSet;
    bool m_payee_name_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHybridTransaction)

#endif // OAIHybridTransaction_H
