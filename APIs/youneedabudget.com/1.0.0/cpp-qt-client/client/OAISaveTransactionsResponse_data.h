/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISaveTransactionsResponse_data.h
 *
 * 
 */

#ifndef OAISaveTransactionsResponse_data_H
#define OAISaveTransactionsResponse_data_H

#include <QJsonObject>

#include "OAITransactionDetail.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITransactionDetail;

class OAISaveTransactionsResponse_data : public OAIObject {
public:
    OAISaveTransactionsResponse_data();
    OAISaveTransactionsResponse_data(QString json);
    ~OAISaveTransactionsResponse_data() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getDuplicateImportIds() const;
    void setDuplicateImportIds(const QList<QString> &duplicate_import_ids);
    bool is_duplicate_import_ids_Set() const;
    bool is_duplicate_import_ids_Valid() const;

    qint64 getServerKnowledge() const;
    void setServerKnowledge(const qint64 &server_knowledge);
    bool is_server_knowledge_Set() const;
    bool is_server_knowledge_Valid() const;

    OAITransactionDetail getTransaction() const;
    void setTransaction(const OAITransactionDetail &transaction);
    bool is_transaction_Set() const;
    bool is_transaction_Valid() const;

    QList<QString> getTransactionIds() const;
    void setTransactionIds(const QList<QString> &transaction_ids);
    bool is_transaction_ids_Set() const;
    bool is_transaction_ids_Valid() const;

    QList<OAITransactionDetail> getTransactions() const;
    void setTransactions(const QList<OAITransactionDetail> &transactions);
    bool is_transactions_Set() const;
    bool is_transactions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_duplicate_import_ids;
    bool m_duplicate_import_ids_isSet;
    bool m_duplicate_import_ids_isValid;

    qint64 m_server_knowledge;
    bool m_server_knowledge_isSet;
    bool m_server_knowledge_isValid;

    OAITransactionDetail m_transaction;
    bool m_transaction_isSet;
    bool m_transaction_isValid;

    QList<QString> m_transaction_ids;
    bool m_transaction_ids_isSet;
    bool m_transaction_ids_isValid;

    QList<OAITransactionDetail> m_transactions;
    bool m_transactions_isSet;
    bool m_transactions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISaveTransactionsResponse_data)

#endif // OAISaveTransactionsResponse_data_H
