/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPostAccountWrapper.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPostAccountWrapper::OAIPostAccountWrapper(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPostAccountWrapper::OAIPostAccountWrapper() {
    this->initializeModel();
}

OAIPostAccountWrapper::~OAIPostAccountWrapper() {}

void OAIPostAccountWrapper::initializeModel() {

    m_account_isSet = false;
    m_account_isValid = false;
}

void OAIPostAccountWrapper::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPostAccountWrapper::fromJsonObject(QJsonObject json) {

    m_account_isValid = ::OpenAPI::fromJsonValue(m_account, json[QString("account")]);
    m_account_isSet = !json[QString("account")].isNull() && m_account_isValid;
}

QString OAIPostAccountWrapper::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPostAccountWrapper::asJsonObject() const {
    QJsonObject obj;
    if (m_account.isSet()) {
        obj.insert(QString("account"), ::OpenAPI::toJsonValue(m_account));
    }
    return obj;
}

OAISaveAccount OAIPostAccountWrapper::getAccount() const {
    return m_account;
}
void OAIPostAccountWrapper::setAccount(const OAISaveAccount &account) {
    m_account = account;
    m_account_isSet = true;
}

bool OAIPostAccountWrapper::is_account_Set() const{
    return m_account_isSet;
}

bool OAIPostAccountWrapper::is_account_Valid() const{
    return m_account_isValid;
}

bool OAIPostAccountWrapper::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPostAccountWrapper::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_isValid && true;
}

} // namespace OpenAPI
