/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICategoryResponse_data.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICategoryResponse_data::OAICategoryResponse_data(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICategoryResponse_data::OAICategoryResponse_data() {
    this->initializeModel();
}

OAICategoryResponse_data::~OAICategoryResponse_data() {}

void OAICategoryResponse_data::initializeModel() {

    m_category_isSet = false;
    m_category_isValid = false;
}

void OAICategoryResponse_data::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICategoryResponse_data::fromJsonObject(QJsonObject json) {

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;
}

QString OAICategoryResponse_data::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICategoryResponse_data::asJsonObject() const {
    QJsonObject obj;
    if (m_category.isSet()) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    return obj;
}

OAICategory OAICategoryResponse_data::getCategory() const {
    return m_category;
}
void OAICategoryResponse_data::setCategory(const OAICategory &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAICategoryResponse_data::is_category_Set() const{
    return m_category_isSet;
}

bool OAICategoryResponse_data::is_category_Valid() const{
    return m_category_isValid;
}

bool OAICategoryResponse_data::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_category.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICategoryResponse_data::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_category_isValid && true;
}

} // namespace OpenAPI
