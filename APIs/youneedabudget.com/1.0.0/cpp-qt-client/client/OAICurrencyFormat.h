/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICurrencyFormat.h
 *
 * The currency format setting for the budget.  In some cases the format will not be available and will be specified as null.
 */

#ifndef OAICurrencyFormat_H
#define OAICurrencyFormat_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICurrencyFormat : public OAIObject {
public:
    OAICurrencyFormat();
    OAICurrencyFormat(QString json);
    ~OAICurrencyFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrencySymbol() const;
    void setCurrencySymbol(const QString &currency_symbol);
    bool is_currency_symbol_Set() const;
    bool is_currency_symbol_Valid() const;

    qint32 getDecimalDigits() const;
    void setDecimalDigits(const qint32 &decimal_digits);
    bool is_decimal_digits_Set() const;
    bool is_decimal_digits_Valid() const;

    QString getDecimalSeparator() const;
    void setDecimalSeparator(const QString &decimal_separator);
    bool is_decimal_separator_Set() const;
    bool is_decimal_separator_Valid() const;

    bool isDisplaySymbol() const;
    void setDisplaySymbol(const bool &display_symbol);
    bool is_display_symbol_Set() const;
    bool is_display_symbol_Valid() const;

    QString getExampleFormat() const;
    void setExampleFormat(const QString &example_format);
    bool is_example_format_Set() const;
    bool is_example_format_Valid() const;

    QString getGroupSeparator() const;
    void setGroupSeparator(const QString &group_separator);
    bool is_group_separator_Set() const;
    bool is_group_separator_Valid() const;

    QString getIsoCode() const;
    void setIsoCode(const QString &iso_code);
    bool is_iso_code_Set() const;
    bool is_iso_code_Valid() const;

    bool isSymbolFirst() const;
    void setSymbolFirst(const bool &symbol_first);
    bool is_symbol_first_Set() const;
    bool is_symbol_first_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_currency_symbol;
    bool m_currency_symbol_isSet;
    bool m_currency_symbol_isValid;

    qint32 m_decimal_digits;
    bool m_decimal_digits_isSet;
    bool m_decimal_digits_isValid;

    QString m_decimal_separator;
    bool m_decimal_separator_isSet;
    bool m_decimal_separator_isValid;

    bool m_display_symbol;
    bool m_display_symbol_isSet;
    bool m_display_symbol_isValid;

    QString m_example_format;
    bool m_example_format_isSet;
    bool m_example_format_isValid;

    QString m_group_separator;
    bool m_group_separator_isSet;
    bool m_group_separator_isValid;

    QString m_iso_code;
    bool m_iso_code_isSet;
    bool m_iso_code_isValid;

    bool m_symbol_first;
    bool m_symbol_first_isSet;
    bool m_symbol_first_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICurrencyFormat)

#endif // OAICurrencyFormat_H
