/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBudgetSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBudgetSettings::OAIBudgetSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBudgetSettings::OAIBudgetSettings() {
    this->initializeModel();
}

OAIBudgetSettings::~OAIBudgetSettings() {}

void OAIBudgetSettings::initializeModel() {

    m_currency_format_isSet = false;
    m_currency_format_isValid = false;

    m_date_format_isSet = false;
    m_date_format_isValid = false;
}

void OAIBudgetSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBudgetSettings::fromJsonObject(QJsonObject json) {

    m_currency_format_isValid = ::OpenAPI::fromJsonValue(m_currency_format, json[QString("currency_format")]);
    m_currency_format_isSet = !json[QString("currency_format")].isNull() && m_currency_format_isValid;

    m_date_format_isValid = ::OpenAPI::fromJsonValue(m_date_format, json[QString("date_format")]);
    m_date_format_isSet = !json[QString("date_format")].isNull() && m_date_format_isValid;
}

QString OAIBudgetSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBudgetSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_currency_format.isSet()) {
        obj.insert(QString("currency_format"), ::OpenAPI::toJsonValue(m_currency_format));
    }
    if (m_date_format.isSet()) {
        obj.insert(QString("date_format"), ::OpenAPI::toJsonValue(m_date_format));
    }
    return obj;
}

OAICurrencyFormat OAIBudgetSettings::getCurrencyFormat() const {
    return m_currency_format;
}
void OAIBudgetSettings::setCurrencyFormat(const OAICurrencyFormat &currency_format) {
    m_currency_format = currency_format;
    m_currency_format_isSet = true;
}

bool OAIBudgetSettings::is_currency_format_Set() const{
    return m_currency_format_isSet;
}

bool OAIBudgetSettings::is_currency_format_Valid() const{
    return m_currency_format_isValid;
}

OAIDateFormat OAIBudgetSettings::getDateFormat() const {
    return m_date_format;
}
void OAIBudgetSettings::setDateFormat(const OAIDateFormat &date_format) {
    m_date_format = date_format;
    m_date_format_isSet = true;
}

bool OAIBudgetSettings::is_date_format_Set() const{
    return m_date_format_isSet;
}

bool OAIBudgetSettings::is_date_format_Valid() const{
    return m_date_format_isValid;
}

bool OAIBudgetSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency_format.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_format.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBudgetSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_currency_format_isValid && m_date_format_isValid && true;
}

} // namespace OpenAPI
