/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccount.h
 *
 * 
 */

#ifndef OAIAccount_H
#define OAIAccount_H

#include <QJsonObject>

#include "OAIAccountType.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAccount : public OAIObject {
public:
    OAIAccount();
    OAIAccount(QString json);
    ~OAIAccount() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getBalance() const;
    void setBalance(const qint64 &balance);
    bool is_balance_Set() const;
    bool is_balance_Valid() const;

    qint64 getClearedBalance() const;
    void setClearedBalance(const qint64 &cleared_balance);
    bool is_cleared_balance_Set() const;
    bool is_cleared_balance_Valid() const;

    bool isClosed() const;
    void setClosed(const bool &closed);
    bool is_closed_Set() const;
    bool is_closed_Valid() const;

    QMap<QString, qint64> getDebtEscrowAmounts() const;
    void setDebtEscrowAmounts(const QMap<QString, qint64> &debt_escrow_amounts);
    bool is_debt_escrow_amounts_Set() const;
    bool is_debt_escrow_amounts_Valid() const;

    QMap<QString, qint64> getDebtInterestRates() const;
    void setDebtInterestRates(const QMap<QString, qint64> &debt_interest_rates);
    bool is_debt_interest_rates_Set() const;
    bool is_debt_interest_rates_Valid() const;

    QMap<QString, qint64> getDebtMinimumPayments() const;
    void setDebtMinimumPayments(const QMap<QString, qint64> &debt_minimum_payments);
    bool is_debt_minimum_payments_Set() const;
    bool is_debt_minimum_payments_Valid() const;

    qint64 getDebtOriginalBalance() const;
    void setDebtOriginalBalance(const qint64 &debt_original_balance);
    bool is_debt_original_balance_Set() const;
    bool is_debt_original_balance_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    bool isDirectImportInError() const;
    void setDirectImportInError(const bool &direct_import_in_error);
    bool is_direct_import_in_error_Set() const;
    bool is_direct_import_in_error_Valid() const;

    bool isDirectImportLinked() const;
    void setDirectImportLinked(const bool &direct_import_linked);
    bool is_direct_import_linked_Set() const;
    bool is_direct_import_linked_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastReconciledAt() const;
    void setLastReconciledAt(const QDateTime &last_reconciled_at);
    bool is_last_reconciled_at_Set() const;
    bool is_last_reconciled_at_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    bool isOnBudget() const;
    void setOnBudget(const bool &on_budget);
    bool is_on_budget_Set() const;
    bool is_on_budget_Valid() const;

    QString getTransferPayeeId() const;
    void setTransferPayeeId(const QString &transfer_payee_id);
    bool is_transfer_payee_id_Set() const;
    bool is_transfer_payee_id_Valid() const;

    OAIAccountType getType() const;
    void setType(const OAIAccountType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint64 getUnclearedBalance() const;
    void setUnclearedBalance(const qint64 &uncleared_balance);
    bool is_uncleared_balance_Set() const;
    bool is_uncleared_balance_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_balance;
    bool m_balance_isSet;
    bool m_balance_isValid;

    qint64 m_cleared_balance;
    bool m_cleared_balance_isSet;
    bool m_cleared_balance_isValid;

    bool m_closed;
    bool m_closed_isSet;
    bool m_closed_isValid;

    QMap<QString, qint64> m_debt_escrow_amounts;
    bool m_debt_escrow_amounts_isSet;
    bool m_debt_escrow_amounts_isValid;

    QMap<QString, qint64> m_debt_interest_rates;
    bool m_debt_interest_rates_isSet;
    bool m_debt_interest_rates_isValid;

    QMap<QString, qint64> m_debt_minimum_payments;
    bool m_debt_minimum_payments_isSet;
    bool m_debt_minimum_payments_isValid;

    qint64 m_debt_original_balance;
    bool m_debt_original_balance_isSet;
    bool m_debt_original_balance_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    bool m_direct_import_in_error;
    bool m_direct_import_in_error_isSet;
    bool m_direct_import_in_error_isValid;

    bool m_direct_import_linked;
    bool m_direct_import_linked_isSet;
    bool m_direct_import_linked_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_reconciled_at;
    bool m_last_reconciled_at_isSet;
    bool m_last_reconciled_at_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    bool m_on_budget;
    bool m_on_budget_isSet;
    bool m_on_budget_isValid;

    QString m_transfer_payee_id;
    bool m_transfer_payee_id_isSet;
    bool m_transfer_payee_id_isValid;

    OAIAccountType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint64 m_uncleared_balance;
    bool m_uncleared_balance_isSet;
    bool m_uncleared_balance_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccount)

#endif // OAIAccount_H
