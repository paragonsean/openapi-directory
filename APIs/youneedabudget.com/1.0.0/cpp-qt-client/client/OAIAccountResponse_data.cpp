/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountResponse_data.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountResponse_data::OAIAccountResponse_data(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountResponse_data::OAIAccountResponse_data() {
    this->initializeModel();
}

OAIAccountResponse_data::~OAIAccountResponse_data() {}

void OAIAccountResponse_data::initializeModel() {

    m_account_isSet = false;
    m_account_isValid = false;
}

void OAIAccountResponse_data::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountResponse_data::fromJsonObject(QJsonObject json) {

    m_account_isValid = ::OpenAPI::fromJsonValue(m_account, json[QString("account")]);
    m_account_isSet = !json[QString("account")].isNull() && m_account_isValid;
}

QString OAIAccountResponse_data::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountResponse_data::asJsonObject() const {
    QJsonObject obj;
    if (m_account.isSet()) {
        obj.insert(QString("account"), ::OpenAPI::toJsonValue(m_account));
    }
    return obj;
}

OAIAccount OAIAccountResponse_data::getAccount() const {
    return m_account;
}
void OAIAccountResponse_data::setAccount(const OAIAccount &account) {
    m_account = account;
    m_account_isSet = true;
}

bool OAIAccountResponse_data::is_account_Set() const{
    return m_account_isSet;
}

bool OAIAccountResponse_data::is_account_Valid() const{
    return m_account_isValid;
}

bool OAIAccountResponse_data::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountResponse_data::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_isValid && true;
}

} // namespace OpenAPI
