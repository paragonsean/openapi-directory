/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBudgetSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBudgetSummary::OAIBudgetSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBudgetSummary::OAIBudgetSummary() {
    this->initializeModel();
}

OAIBudgetSummary::~OAIBudgetSummary() {}

void OAIBudgetSummary::initializeModel() {

    m_accounts_isSet = false;
    m_accounts_isValid = false;

    m_currency_format_isSet = false;
    m_currency_format_isValid = false;

    m_date_format_isSet = false;
    m_date_format_isValid = false;

    m_first_month_isSet = false;
    m_first_month_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_modified_on_isSet = false;
    m_last_modified_on_isValid = false;

    m_last_month_isSet = false;
    m_last_month_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIBudgetSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBudgetSummary::fromJsonObject(QJsonObject json) {

    m_accounts_isValid = ::OpenAPI::fromJsonValue(m_accounts, json[QString("accounts")]);
    m_accounts_isSet = !json[QString("accounts")].isNull() && m_accounts_isValid;

    m_currency_format_isValid = ::OpenAPI::fromJsonValue(m_currency_format, json[QString("currency_format")]);
    m_currency_format_isSet = !json[QString("currency_format")].isNull() && m_currency_format_isValid;

    m_date_format_isValid = ::OpenAPI::fromJsonValue(m_date_format, json[QString("date_format")]);
    m_date_format_isSet = !json[QString("date_format")].isNull() && m_date_format_isValid;

    m_first_month_isValid = ::OpenAPI::fromJsonValue(m_first_month, json[QString("first_month")]);
    m_first_month_isSet = !json[QString("first_month")].isNull() && m_first_month_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_modified_on_isValid = ::OpenAPI::fromJsonValue(m_last_modified_on, json[QString("last_modified_on")]);
    m_last_modified_on_isSet = !json[QString("last_modified_on")].isNull() && m_last_modified_on_isValid;

    m_last_month_isValid = ::OpenAPI::fromJsonValue(m_last_month, json[QString("last_month")]);
    m_last_month_isSet = !json[QString("last_month")].isNull() && m_last_month_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIBudgetSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBudgetSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_accounts.size() > 0) {
        obj.insert(QString("accounts"), ::OpenAPI::toJsonValue(m_accounts));
    }
    if (m_currency_format.isSet()) {
        obj.insert(QString("currency_format"), ::OpenAPI::toJsonValue(m_currency_format));
    }
    if (m_date_format.isSet()) {
        obj.insert(QString("date_format"), ::OpenAPI::toJsonValue(m_date_format));
    }
    if (m_first_month_isSet) {
        obj.insert(QString("first_month"), ::OpenAPI::toJsonValue(m_first_month));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_modified_on_isSet) {
        obj.insert(QString("last_modified_on"), ::OpenAPI::toJsonValue(m_last_modified_on));
    }
    if (m_last_month_isSet) {
        obj.insert(QString("last_month"), ::OpenAPI::toJsonValue(m_last_month));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QList<OAIAccount> OAIBudgetSummary::getAccounts() const {
    return m_accounts;
}
void OAIBudgetSummary::setAccounts(const QList<OAIAccount> &accounts) {
    m_accounts = accounts;
    m_accounts_isSet = true;
}

bool OAIBudgetSummary::is_accounts_Set() const{
    return m_accounts_isSet;
}

bool OAIBudgetSummary::is_accounts_Valid() const{
    return m_accounts_isValid;
}

OAICurrencyFormat OAIBudgetSummary::getCurrencyFormat() const {
    return m_currency_format;
}
void OAIBudgetSummary::setCurrencyFormat(const OAICurrencyFormat &currency_format) {
    m_currency_format = currency_format;
    m_currency_format_isSet = true;
}

bool OAIBudgetSummary::is_currency_format_Set() const{
    return m_currency_format_isSet;
}

bool OAIBudgetSummary::is_currency_format_Valid() const{
    return m_currency_format_isValid;
}

OAIDateFormat OAIBudgetSummary::getDateFormat() const {
    return m_date_format;
}
void OAIBudgetSummary::setDateFormat(const OAIDateFormat &date_format) {
    m_date_format = date_format;
    m_date_format_isSet = true;
}

bool OAIBudgetSummary::is_date_format_Set() const{
    return m_date_format_isSet;
}

bool OAIBudgetSummary::is_date_format_Valid() const{
    return m_date_format_isValid;
}

QDate OAIBudgetSummary::getFirstMonth() const {
    return m_first_month;
}
void OAIBudgetSummary::setFirstMonth(const QDate &first_month) {
    m_first_month = first_month;
    m_first_month_isSet = true;
}

bool OAIBudgetSummary::is_first_month_Set() const{
    return m_first_month_isSet;
}

bool OAIBudgetSummary::is_first_month_Valid() const{
    return m_first_month_isValid;
}

QString OAIBudgetSummary::getId() const {
    return m_id;
}
void OAIBudgetSummary::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIBudgetSummary::is_id_Set() const{
    return m_id_isSet;
}

bool OAIBudgetSummary::is_id_Valid() const{
    return m_id_isValid;
}

QDateTime OAIBudgetSummary::getLastModifiedOn() const {
    return m_last_modified_on;
}
void OAIBudgetSummary::setLastModifiedOn(const QDateTime &last_modified_on) {
    m_last_modified_on = last_modified_on;
    m_last_modified_on_isSet = true;
}

bool OAIBudgetSummary::is_last_modified_on_Set() const{
    return m_last_modified_on_isSet;
}

bool OAIBudgetSummary::is_last_modified_on_Valid() const{
    return m_last_modified_on_isValid;
}

QDate OAIBudgetSummary::getLastMonth() const {
    return m_last_month;
}
void OAIBudgetSummary::setLastMonth(const QDate &last_month) {
    m_last_month = last_month;
    m_last_month_isSet = true;
}

bool OAIBudgetSummary::is_last_month_Set() const{
    return m_last_month_isSet;
}

bool OAIBudgetSummary::is_last_month_Valid() const{
    return m_last_month_isValid;
}

QString OAIBudgetSummary::getName() const {
    return m_name;
}
void OAIBudgetSummary::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIBudgetSummary::is_name_Set() const{
    return m_name_isSet;
}

bool OAIBudgetSummary::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIBudgetSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_format.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_format.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_month_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_month_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBudgetSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
