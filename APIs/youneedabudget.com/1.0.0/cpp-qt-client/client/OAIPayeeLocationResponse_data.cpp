/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPayeeLocationResponse_data.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPayeeLocationResponse_data::OAIPayeeLocationResponse_data(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPayeeLocationResponse_data::OAIPayeeLocationResponse_data() {
    this->initializeModel();
}

OAIPayeeLocationResponse_data::~OAIPayeeLocationResponse_data() {}

void OAIPayeeLocationResponse_data::initializeModel() {

    m_payee_location_isSet = false;
    m_payee_location_isValid = false;
}

void OAIPayeeLocationResponse_data::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPayeeLocationResponse_data::fromJsonObject(QJsonObject json) {

    m_payee_location_isValid = ::OpenAPI::fromJsonValue(m_payee_location, json[QString("payee_location")]);
    m_payee_location_isSet = !json[QString("payee_location")].isNull() && m_payee_location_isValid;
}

QString OAIPayeeLocationResponse_data::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPayeeLocationResponse_data::asJsonObject() const {
    QJsonObject obj;
    if (m_payee_location.isSet()) {
        obj.insert(QString("payee_location"), ::OpenAPI::toJsonValue(m_payee_location));
    }
    return obj;
}

OAIPayeeLocation OAIPayeeLocationResponse_data::getPayeeLocation() const {
    return m_payee_location;
}
void OAIPayeeLocationResponse_data::setPayeeLocation(const OAIPayeeLocation &payee_location) {
    m_payee_location = payee_location;
    m_payee_location_isSet = true;
}

bool OAIPayeeLocationResponse_data::is_payee_location_Set() const{
    return m_payee_location_isSet;
}

bool OAIPayeeLocationResponse_data::is_payee_location_Valid() const{
    return m_payee_location_isValid;
}

bool OAIPayeeLocationResponse_data::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_payee_location.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPayeeLocationResponse_data::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_payee_location_isValid && true;
}

} // namespace OpenAPI
