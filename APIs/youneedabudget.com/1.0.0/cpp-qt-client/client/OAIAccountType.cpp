/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountType::OAIAccountType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountType::OAIAccountType() {
    this->initializeModel();
}

OAIAccountType::~OAIAccountType() {}

void OAIAccountType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAccountType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAccountType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("checking", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountType::CHECKING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("savings", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountType::SAVINGS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("cash", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountType::CASH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("creditCard", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountType::CREDITCARD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("lineOfCredit", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountType::LINEOFCREDIT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("otherAsset", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountType::OTHERASSET;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("otherLiability", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountType::OTHERLIABILITY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("mortgage", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountType::MORTGAGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("autoLoan", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountType::AUTOLOAN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("studentLoan", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountType::STUDENTLOAN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("personalLoan", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountType::PERSONALLOAN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("medicalDebt", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountType::MEDICALDEBT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("otherDebt", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountType::OTHERDEBT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAccountType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAccountType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAccountType::CHECKING:
            val = "checking";
            break;
        case eOAIAccountType::SAVINGS:
            val = "savings";
            break;
        case eOAIAccountType::CASH:
            val = "cash";
            break;
        case eOAIAccountType::CREDITCARD:
            val = "creditCard";
            break;
        case eOAIAccountType::LINEOFCREDIT:
            val = "lineOfCredit";
            break;
        case eOAIAccountType::OTHERASSET:
            val = "otherAsset";
            break;
        case eOAIAccountType::OTHERLIABILITY:
            val = "otherLiability";
            break;
        case eOAIAccountType::MORTGAGE:
            val = "mortgage";
            break;
        case eOAIAccountType::AUTOLOAN:
            val = "autoLoan";
            break;
        case eOAIAccountType::STUDENTLOAN:
            val = "studentLoan";
            break;
        case eOAIAccountType::PERSONALLOAN:
            val = "personalLoan";
            break;
        case eOAIAccountType::MEDICALDEBT:
            val = "medicalDebt";
            break;
        case eOAIAccountType::OTHERDEBT:
            val = "otherDebt";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAccountType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAccountType::eOAIAccountType OAIAccountType::getValue() const {
    return m_value;
}

void OAIAccountType::setValue(const OAIAccountType::eOAIAccountType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAccountType::isSet() const {
    
    return m_value_isSet;
}

bool OAIAccountType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
