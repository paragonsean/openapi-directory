/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPayee.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPayee::OAIPayee(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPayee::OAIPayee() {
    this->initializeModel();
}

OAIPayee::~OAIPayee() {}

void OAIPayee::initializeModel() {

    m_deleted_isSet = false;
    m_deleted_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_transfer_account_id_isSet = false;
    m_transfer_account_id_isValid = false;
}

void OAIPayee::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPayee::fromJsonObject(QJsonObject json) {

    m_deleted_isValid = ::OpenAPI::fromJsonValue(m_deleted, json[QString("deleted")]);
    m_deleted_isSet = !json[QString("deleted")].isNull() && m_deleted_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_transfer_account_id_isValid = ::OpenAPI::fromJsonValue(m_transfer_account_id, json[QString("transfer_account_id")]);
    m_transfer_account_id_isSet = !json[QString("transfer_account_id")].isNull() && m_transfer_account_id_isValid;
}

QString OAIPayee::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPayee::asJsonObject() const {
    QJsonObject obj;
    if (m_deleted_isSet) {
        obj.insert(QString("deleted"), ::OpenAPI::toJsonValue(m_deleted));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_transfer_account_id_isSet) {
        obj.insert(QString("transfer_account_id"), ::OpenAPI::toJsonValue(m_transfer_account_id));
    }
    return obj;
}

bool OAIPayee::isDeleted() const {
    return m_deleted;
}
void OAIPayee::setDeleted(const bool &deleted) {
    m_deleted = deleted;
    m_deleted_isSet = true;
}

bool OAIPayee::is_deleted_Set() const{
    return m_deleted_isSet;
}

bool OAIPayee::is_deleted_Valid() const{
    return m_deleted_isValid;
}

QString OAIPayee::getId() const {
    return m_id;
}
void OAIPayee::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIPayee::is_id_Set() const{
    return m_id_isSet;
}

bool OAIPayee::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIPayee::getName() const {
    return m_name;
}
void OAIPayee::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPayee::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPayee::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIPayee::getTransferAccountId() const {
    return m_transfer_account_id;
}
void OAIPayee::setTransferAccountId(const QString &transfer_account_id) {
    m_transfer_account_id = transfer_account_id;
    m_transfer_account_id_isSet = true;
}

bool OAIPayee::is_transfer_account_id_Set() const{
    return m_transfer_account_id_isSet;
}

bool OAIPayee::is_transfer_account_id_Valid() const{
    return m_transfer_account_id_isValid;
}

bool OAIPayee::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deleted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPayee::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_deleted_isValid && m_id_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
