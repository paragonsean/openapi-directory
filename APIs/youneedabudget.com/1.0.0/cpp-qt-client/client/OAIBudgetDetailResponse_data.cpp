/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBudgetDetailResponse_data.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBudgetDetailResponse_data::OAIBudgetDetailResponse_data(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBudgetDetailResponse_data::OAIBudgetDetailResponse_data() {
    this->initializeModel();
}

OAIBudgetDetailResponse_data::~OAIBudgetDetailResponse_data() {}

void OAIBudgetDetailResponse_data::initializeModel() {

    m_budget_isSet = false;
    m_budget_isValid = false;

    m_server_knowledge_isSet = false;
    m_server_knowledge_isValid = false;
}

void OAIBudgetDetailResponse_data::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBudgetDetailResponse_data::fromJsonObject(QJsonObject json) {

    m_budget_isValid = ::OpenAPI::fromJsonValue(m_budget, json[QString("budget")]);
    m_budget_isSet = !json[QString("budget")].isNull() && m_budget_isValid;

    m_server_knowledge_isValid = ::OpenAPI::fromJsonValue(m_server_knowledge, json[QString("server_knowledge")]);
    m_server_knowledge_isSet = !json[QString("server_knowledge")].isNull() && m_server_knowledge_isValid;
}

QString OAIBudgetDetailResponse_data::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBudgetDetailResponse_data::asJsonObject() const {
    QJsonObject obj;
    if (m_budget.isSet()) {
        obj.insert(QString("budget"), ::OpenAPI::toJsonValue(m_budget));
    }
    if (m_server_knowledge_isSet) {
        obj.insert(QString("server_knowledge"), ::OpenAPI::toJsonValue(m_server_knowledge));
    }
    return obj;
}

OAIBudgetDetail OAIBudgetDetailResponse_data::getBudget() const {
    return m_budget;
}
void OAIBudgetDetailResponse_data::setBudget(const OAIBudgetDetail &budget) {
    m_budget = budget;
    m_budget_isSet = true;
}

bool OAIBudgetDetailResponse_data::is_budget_Set() const{
    return m_budget_isSet;
}

bool OAIBudgetDetailResponse_data::is_budget_Valid() const{
    return m_budget_isValid;
}

qint64 OAIBudgetDetailResponse_data::getServerKnowledge() const {
    return m_server_knowledge;
}
void OAIBudgetDetailResponse_data::setServerKnowledge(const qint64 &server_knowledge) {
    m_server_knowledge = server_knowledge;
    m_server_knowledge_isSet = true;
}

bool OAIBudgetDetailResponse_data::is_server_knowledge_Set() const{
    return m_server_knowledge_isSet;
}

bool OAIBudgetDetailResponse_data::is_server_knowledge_Valid() const{
    return m_server_knowledge_isValid;
}

bool OAIBudgetDetailResponse_data::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_budget.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_server_knowledge_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBudgetDetailResponse_data::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_budget_isValid && m_server_knowledge_isValid && true;
}

} // namespace OpenAPI
