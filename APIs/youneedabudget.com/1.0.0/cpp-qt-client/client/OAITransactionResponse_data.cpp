/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransactionResponse_data.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransactionResponse_data::OAITransactionResponse_data(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransactionResponse_data::OAITransactionResponse_data() {
    this->initializeModel();
}

OAITransactionResponse_data::~OAITransactionResponse_data() {}

void OAITransactionResponse_data::initializeModel() {

    m_transaction_isSet = false;
    m_transaction_isValid = false;
}

void OAITransactionResponse_data::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITransactionResponse_data::fromJsonObject(QJsonObject json) {

    m_transaction_isValid = ::OpenAPI::fromJsonValue(m_transaction, json[QString("transaction")]);
    m_transaction_isSet = !json[QString("transaction")].isNull() && m_transaction_isValid;
}

QString OAITransactionResponse_data::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITransactionResponse_data::asJsonObject() const {
    QJsonObject obj;
    if (m_transaction.isSet()) {
        obj.insert(QString("transaction"), ::OpenAPI::toJsonValue(m_transaction));
    }
    return obj;
}

OAITransactionDetail OAITransactionResponse_data::getTransaction() const {
    return m_transaction;
}
void OAITransactionResponse_data::setTransaction(const OAITransactionDetail &transaction) {
    m_transaction = transaction;
    m_transaction_isSet = true;
}

bool OAITransactionResponse_data::is_transaction_Set() const{
    return m_transaction_isSet;
}

bool OAITransactionResponse_data::is_transaction_Valid() const{
    return m_transaction_isValid;
}

bool OAITransactionResponse_data::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_transaction.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITransactionResponse_data::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_transaction_isValid && true;
}

} // namespace OpenAPI
