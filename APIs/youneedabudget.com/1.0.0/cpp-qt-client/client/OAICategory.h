/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICategory.h
 *
 * 
 */

#ifndef OAICategory_H
#define OAICategory_H

#include <QJsonObject>

#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICategory : public OAIObject {
public:
    OAICategory();
    OAICategory(QString json);
    ~OAICategory() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getActivity() const;
    void setActivity(const qint64 &activity);
    bool is_activity_Set() const;
    bool is_activity_Valid() const;

    qint64 getBalance() const;
    void setBalance(const qint64 &balance);
    bool is_balance_Set() const;
    bool is_balance_Valid() const;

    qint64 getBudgeted() const;
    void setBudgeted(const qint64 &budgeted);
    bool is_budgeted_Set() const;
    bool is_budgeted_Valid() const;

    QString getCategoryGroupId() const;
    void setCategoryGroupId(const QString &category_group_id);
    bool is_category_group_id_Set() const;
    bool is_category_group_id_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    qint32 getGoalCadence() const;
    void setGoalCadence(const qint32 &goal_cadence);
    bool is_goal_cadence_Set() const;
    bool is_goal_cadence_Valid() const;

    qint32 getGoalCadenceFrequency() const;
    void setGoalCadenceFrequency(const qint32 &goal_cadence_frequency);
    bool is_goal_cadence_frequency_Set() const;
    bool is_goal_cadence_frequency_Valid() const;

    QDate getGoalCreationMonth() const;
    void setGoalCreationMonth(const QDate &goal_creation_month);
    bool is_goal_creation_month_Set() const;
    bool is_goal_creation_month_Valid() const;

    qint32 getGoalDay() const;
    void setGoalDay(const qint32 &goal_day);
    bool is_goal_day_Set() const;
    bool is_goal_day_Valid() const;

    qint32 getGoalMonthsToBudget() const;
    void setGoalMonthsToBudget(const qint32 &goal_months_to_budget);
    bool is_goal_months_to_budget_Set() const;
    bool is_goal_months_to_budget_Valid() const;

    qint64 getGoalOverallFunded() const;
    void setGoalOverallFunded(const qint64 &goal_overall_funded);
    bool is_goal_overall_funded_Set() const;
    bool is_goal_overall_funded_Valid() const;

    qint64 getGoalOverallLeft() const;
    void setGoalOverallLeft(const qint64 &goal_overall_left);
    bool is_goal_overall_left_Set() const;
    bool is_goal_overall_left_Valid() const;

    qint32 getGoalPercentageComplete() const;
    void setGoalPercentageComplete(const qint32 &goal_percentage_complete);
    bool is_goal_percentage_complete_Set() const;
    bool is_goal_percentage_complete_Valid() const;

    qint64 getGoalTarget() const;
    void setGoalTarget(const qint64 &goal_target);
    bool is_goal_target_Set() const;
    bool is_goal_target_Valid() const;

    QDate getGoalTargetMonth() const;
    void setGoalTargetMonth(const QDate &goal_target_month);
    bool is_goal_target_month_Set() const;
    bool is_goal_target_month_Valid() const;

    QString getGoalType() const;
    void setGoalType(const QString &goal_type);
    bool is_goal_type_Set() const;
    bool is_goal_type_Valid() const;

    qint64 getGoalUnderFunded() const;
    void setGoalUnderFunded(const qint64 &goal_under_funded);
    bool is_goal_under_funded_Set() const;
    bool is_goal_under_funded_Valid() const;

    bool isHidden() const;
    void setHidden(const bool &hidden);
    bool is_hidden_Set() const;
    bool is_hidden_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QString getOriginalCategoryGroupId() const;
    void setOriginalCategoryGroupId(const QString &original_category_group_id);
    bool is_original_category_group_id_Set() const;
    bool is_original_category_group_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_activity;
    bool m_activity_isSet;
    bool m_activity_isValid;

    qint64 m_balance;
    bool m_balance_isSet;
    bool m_balance_isValid;

    qint64 m_budgeted;
    bool m_budgeted_isSet;
    bool m_budgeted_isValid;

    QString m_category_group_id;
    bool m_category_group_id_isSet;
    bool m_category_group_id_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    qint32 m_goal_cadence;
    bool m_goal_cadence_isSet;
    bool m_goal_cadence_isValid;

    qint32 m_goal_cadence_frequency;
    bool m_goal_cadence_frequency_isSet;
    bool m_goal_cadence_frequency_isValid;

    QDate m_goal_creation_month;
    bool m_goal_creation_month_isSet;
    bool m_goal_creation_month_isValid;

    qint32 m_goal_day;
    bool m_goal_day_isSet;
    bool m_goal_day_isValid;

    qint32 m_goal_months_to_budget;
    bool m_goal_months_to_budget_isSet;
    bool m_goal_months_to_budget_isValid;

    qint64 m_goal_overall_funded;
    bool m_goal_overall_funded_isSet;
    bool m_goal_overall_funded_isValid;

    qint64 m_goal_overall_left;
    bool m_goal_overall_left_isSet;
    bool m_goal_overall_left_isValid;

    qint32 m_goal_percentage_complete;
    bool m_goal_percentage_complete_isSet;
    bool m_goal_percentage_complete_isValid;

    qint64 m_goal_target;
    bool m_goal_target_isSet;
    bool m_goal_target_isValid;

    QDate m_goal_target_month;
    bool m_goal_target_month_isSet;
    bool m_goal_target_month_isValid;

    QString m_goal_type;
    bool m_goal_type_isSet;
    bool m_goal_type_isValid;

    qint64 m_goal_under_funded;
    bool m_goal_under_funded_isSet;
    bool m_goal_under_funded_isValid;

    bool m_hidden;
    bool m_hidden_isSet;
    bool m_hidden_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QString m_original_category_group_id;
    bool m_original_category_group_id_isSet;
    bool m_original_category_group_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICategory)

#endif // OAICategory_H
