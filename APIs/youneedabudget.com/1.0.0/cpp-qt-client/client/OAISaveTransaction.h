/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISaveTransaction.h
 *
 * 
 */

#ifndef OAISaveTransaction_H
#define OAISaveTransaction_H

#include <QJsonObject>

#include "OAISaveSubTransaction.h"
#include <QDate>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISaveSubTransaction;

class OAISaveTransaction : public OAIObject {
public:
    OAISaveTransaction();
    OAISaveTransaction(QString json);
    ~OAISaveTransaction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    qint64 getAmount() const;
    void setAmount(const qint64 &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    bool isApproved() const;
    void setApproved(const bool &approved);
    bool is_approved_Set() const;
    bool is_approved_Valid() const;

    QString getCategoryId() const;
    void setCategoryId(const QString &category_id);
    bool is_category_id_Set() const;
    bool is_category_id_Valid() const;

    QString getCleared() const;
    void setCleared(const QString &cleared);
    bool is_cleared_Set() const;
    bool is_cleared_Valid() const;

    QDate getDate() const;
    void setDate(const QDate &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getFlagColor() const;
    void setFlagColor(const QString &flag_color);
    bool is_flag_color_Set() const;
    bool is_flag_color_Valid() const;

    QString getImportId() const;
    void setImportId(const QString &import_id);
    bool is_import_id_Set() const;
    bool is_import_id_Valid() const;

    QString getMemo() const;
    void setMemo(const QString &memo);
    bool is_memo_Set() const;
    bool is_memo_Valid() const;

    QString getPayeeId() const;
    void setPayeeId(const QString &payee_id);
    bool is_payee_id_Set() const;
    bool is_payee_id_Valid() const;

    QString getPayeeName() const;
    void setPayeeName(const QString &payee_name);
    bool is_payee_name_Set() const;
    bool is_payee_name_Valid() const;

    QList<OAISaveSubTransaction> getSubtransactions() const;
    void setSubtransactions(const QList<OAISaveSubTransaction> &subtransactions);
    bool is_subtransactions_Set() const;
    bool is_subtransactions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    qint64 m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    bool m_approved;
    bool m_approved_isSet;
    bool m_approved_isValid;

    QString m_category_id;
    bool m_category_id_isSet;
    bool m_category_id_isValid;

    QString m_cleared;
    bool m_cleared_isSet;
    bool m_cleared_isValid;

    QDate m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_flag_color;
    bool m_flag_color_isSet;
    bool m_flag_color_isValid;

    QString m_import_id;
    bool m_import_id_isSet;
    bool m_import_id_isValid;

    QString m_memo;
    bool m_memo_isSet;
    bool m_memo_isValid;

    QString m_payee_id;
    bool m_payee_id_isSet;
    bool m_payee_id_isValid;

    QString m_payee_name;
    bool m_payee_name_isSet;
    bool m_payee_name_isValid;

    QList<OAISaveSubTransaction> m_subtransactions;
    bool m_subtransactions_isSet;
    bool m_subtransactions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISaveTransaction)

#endif // OAISaveTransaction_H
