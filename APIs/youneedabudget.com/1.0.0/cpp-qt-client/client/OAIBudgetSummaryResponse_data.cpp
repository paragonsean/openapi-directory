/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBudgetSummaryResponse_data.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBudgetSummaryResponse_data::OAIBudgetSummaryResponse_data(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBudgetSummaryResponse_data::OAIBudgetSummaryResponse_data() {
    this->initializeModel();
}

OAIBudgetSummaryResponse_data::~OAIBudgetSummaryResponse_data() {}

void OAIBudgetSummaryResponse_data::initializeModel() {

    m_budgets_isSet = false;
    m_budgets_isValid = false;

    m_default_budget_isSet = false;
    m_default_budget_isValid = false;
}

void OAIBudgetSummaryResponse_data::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBudgetSummaryResponse_data::fromJsonObject(QJsonObject json) {

    m_budgets_isValid = ::OpenAPI::fromJsonValue(m_budgets, json[QString("budgets")]);
    m_budgets_isSet = !json[QString("budgets")].isNull() && m_budgets_isValid;

    m_default_budget_isValid = ::OpenAPI::fromJsonValue(m_default_budget, json[QString("default_budget")]);
    m_default_budget_isSet = !json[QString("default_budget")].isNull() && m_default_budget_isValid;
}

QString OAIBudgetSummaryResponse_data::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBudgetSummaryResponse_data::asJsonObject() const {
    QJsonObject obj;
    if (m_budgets.size() > 0) {
        obj.insert(QString("budgets"), ::OpenAPI::toJsonValue(m_budgets));
    }
    if (m_default_budget.isSet()) {
        obj.insert(QString("default_budget"), ::OpenAPI::toJsonValue(m_default_budget));
    }
    return obj;
}

QList<OAIBudgetSummary> OAIBudgetSummaryResponse_data::getBudgets() const {
    return m_budgets;
}
void OAIBudgetSummaryResponse_data::setBudgets(const QList<OAIBudgetSummary> &budgets) {
    m_budgets = budgets;
    m_budgets_isSet = true;
}

bool OAIBudgetSummaryResponse_data::is_budgets_Set() const{
    return m_budgets_isSet;
}

bool OAIBudgetSummaryResponse_data::is_budgets_Valid() const{
    return m_budgets_isValid;
}

OAIBudgetSummary OAIBudgetSummaryResponse_data::getDefaultBudget() const {
    return m_default_budget;
}
void OAIBudgetSummaryResponse_data::setDefaultBudget(const OAIBudgetSummary &default_budget) {
    m_default_budget = default_budget;
    m_default_budget_isSet = true;
}

bool OAIBudgetSummaryResponse_data::is_default_budget_Set() const{
    return m_default_budget_isSet;
}

bool OAIBudgetSummaryResponse_data::is_default_budget_Valid() const{
    return m_default_budget_isValid;
}

bool OAIBudgetSummaryResponse_data::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_budgets.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_budget.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBudgetSummaryResponse_data::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_budgets_isValid && true;
}

} // namespace OpenAPI
