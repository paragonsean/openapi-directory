/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBulkResponse_data.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBulkResponse_data::OAIBulkResponse_data(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBulkResponse_data::OAIBulkResponse_data() {
    this->initializeModel();
}

OAIBulkResponse_data::~OAIBulkResponse_data() {}

void OAIBulkResponse_data::initializeModel() {

    m_bulk_isSet = false;
    m_bulk_isValid = false;
}

void OAIBulkResponse_data::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBulkResponse_data::fromJsonObject(QJsonObject json) {

    m_bulk_isValid = ::OpenAPI::fromJsonValue(m_bulk, json[QString("bulk")]);
    m_bulk_isSet = !json[QString("bulk")].isNull() && m_bulk_isValid;
}

QString OAIBulkResponse_data::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBulkResponse_data::asJsonObject() const {
    QJsonObject obj;
    if (m_bulk.isSet()) {
        obj.insert(QString("bulk"), ::OpenAPI::toJsonValue(m_bulk));
    }
    return obj;
}

OAIBulkResponse_data_bulk OAIBulkResponse_data::getBulk() const {
    return m_bulk;
}
void OAIBulkResponse_data::setBulk(const OAIBulkResponse_data_bulk &bulk) {
    m_bulk = bulk;
    m_bulk_isSet = true;
}

bool OAIBulkResponse_data::is_bulk_Set() const{
    return m_bulk_isSet;
}

bool OAIBulkResponse_data::is_bulk_Valid() const{
    return m_bulk_isValid;
}

bool OAIBulkResponse_data::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bulk.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBulkResponse_data::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_bulk_isValid && true;
}

} // namespace OpenAPI
