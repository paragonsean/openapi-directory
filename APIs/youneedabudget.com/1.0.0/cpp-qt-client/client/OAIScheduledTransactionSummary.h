/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScheduledTransactionSummary.h
 *
 * 
 */

#ifndef OAIScheduledTransactionSummary_H
#define OAIScheduledTransactionSummary_H

#include <QJsonObject>

#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIScheduledTransactionSummary : public OAIObject {
public:
    OAIScheduledTransactionSummary();
    OAIScheduledTransactionSummary(QString json);
    ~OAIScheduledTransactionSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    qint64 getAmount() const;
    void setAmount(const qint64 &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getCategoryId() const;
    void setCategoryId(const QString &category_id);
    bool is_category_id_Set() const;
    bool is_category_id_Valid() const;

    QDate getDateFirst() const;
    void setDateFirst(const QDate &date_first);
    bool is_date_first_Set() const;
    bool is_date_first_Valid() const;

    QDate getDateNext() const;
    void setDateNext(const QDate &date_next);
    bool is_date_next_Set() const;
    bool is_date_next_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    QString getFlagColor() const;
    void setFlagColor(const QString &flag_color);
    bool is_flag_color_Set() const;
    bool is_flag_color_Valid() const;

    QString getFrequency() const;
    void setFrequency(const QString &frequency);
    bool is_frequency_Set() const;
    bool is_frequency_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getMemo() const;
    void setMemo(const QString &memo);
    bool is_memo_Set() const;
    bool is_memo_Valid() const;

    QString getPayeeId() const;
    void setPayeeId(const QString &payee_id);
    bool is_payee_id_Set() const;
    bool is_payee_id_Valid() const;

    QString getTransferAccountId() const;
    void setTransferAccountId(const QString &transfer_account_id);
    bool is_transfer_account_id_Set() const;
    bool is_transfer_account_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    qint64 m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_category_id;
    bool m_category_id_isSet;
    bool m_category_id_isValid;

    QDate m_date_first;
    bool m_date_first_isSet;
    bool m_date_first_isValid;

    QDate m_date_next;
    bool m_date_next_isSet;
    bool m_date_next_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    QString m_flag_color;
    bool m_flag_color_isSet;
    bool m_flag_color_isValid;

    QString m_frequency;
    bool m_frequency_isSet;
    bool m_frequency_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_memo;
    bool m_memo_isSet;
    bool m_memo_isValid;

    QString m_payee_id;
    bool m_payee_id_isSet;
    bool m_payee_id_isValid;

    QString m_transfer_account_id;
    bool m_transfer_account_id_isSet;
    bool m_transfer_account_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScheduledTransactionSummary)

#endif // OAIScheduledTransactionSummary_H
