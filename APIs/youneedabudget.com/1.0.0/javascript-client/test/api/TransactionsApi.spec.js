/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.YnabApiEndpoints);
  }
}(this, function(expect, YnabApiEndpoints) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new YnabApiEndpoints.TransactionsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TransactionsApi', function() {
    describe('createTransaction', function() {
      it('should call createTransaction successfully', function(done) {
        //uncomment below and update the code to test createTransaction
        //instance.createTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTransaction', function() {
      it('should call deleteTransaction successfully', function(done) {
        //uncomment below and update the code to test deleteTransaction
        //instance.deleteTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransactionById', function() {
      it('should call getTransactionById successfully', function(done) {
        //uncomment below and update the code to test getTransactionById
        //instance.getTransactionById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransactions', function() {
      it('should call getTransactions successfully', function(done) {
        //uncomment below and update the code to test getTransactions
        //instance.getTransactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransactionsByAccount', function() {
      it('should call getTransactionsByAccount successfully', function(done) {
        //uncomment below and update the code to test getTransactionsByAccount
        //instance.getTransactionsByAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransactionsByCategory', function() {
      it('should call getTransactionsByCategory successfully', function(done) {
        //uncomment below and update the code to test getTransactionsByCategory
        //instance.getTransactionsByCategory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransactionsByPayee', function() {
      it('should call getTransactionsByPayee successfully', function(done) {
        //uncomment below and update the code to test getTransactionsByPayee
        //instance.getTransactionsByPayee(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importTransactions', function() {
      it('should call importTransactions successfully', function(done) {
        //uncomment below and update the code to test importTransactions
        //instance.importTransactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTransaction', function() {
      it('should call updateTransaction successfully', function(done) {
        //uncomment below and update the code to test updateTransaction
        //instance.updateTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTransactions', function() {
      it('should call updateTransactions successfully', function(done) {
        //uncomment below and update the code to test updateTransactions
        //instance.updateTransactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
