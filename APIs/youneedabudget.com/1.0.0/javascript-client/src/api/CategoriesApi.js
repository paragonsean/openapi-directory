/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CategoriesResponse from '../model/CategoriesResponse';
import CategoryResponse from '../model/CategoryResponse';
import ErrorResponse from '../model/ErrorResponse';
import PatchMonthCategoryWrapper from '../model/PatchMonthCategoryWrapper';
import SaveCategoryResponse from '../model/SaveCategoryResponse';

/**
* Categories service.
* @module api/CategoriesApi
* @version 1.0.0
*/
export default class CategoriesApi {

    /**
    * Constructs a new CategoriesApi. 
    * @alias module:api/CategoriesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCategories operation.
     * @callback module:api/CategoriesApi~getCategoriesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CategoriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List categories
     * Returns all categories grouped by category group.  Amounts (budgeted, activity, balance, etc.) are specific to the current budget month (UTC).
     * @param {String} budgetId The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.ynab.com/#oauth-default-budget).
     * @param {Object} opts Optional parameters
     * @param {Number} [lastKnowledgeOfServer] The starting server knowledge.  If provided, only entities that have changed since `last_knowledge_of_server` will be included.
     * @param {module:api/CategoriesApi~getCategoriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CategoriesResponse}
     */
    getCategories(budgetId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'budgetId' is set
      if (budgetId === undefined || budgetId === null) {
        throw new Error("Missing the required parameter 'budgetId' when calling getCategories");
      }

      let pathParams = {
        'budget_id': budgetId
      };
      let queryParams = {
        'last_knowledge_of_server': opts['lastKnowledgeOfServer']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CategoriesResponse;
      return this.apiClient.callApi(
        '/budgets/{budget_id}/categories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCategoryById operation.
     * @callback module:api/CategoriesApi~getCategoryByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CategoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single category
     * Returns a single category.  Amounts (budgeted, activity, balance, etc.) are specific to the current budget month (UTC).
     * @param {String} budgetId The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.ynab.com/#oauth-default-budget).
     * @param {String} categoryId The id of the category
     * @param {module:api/CategoriesApi~getCategoryByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CategoryResponse}
     */
    getCategoryById(budgetId, categoryId, callback) {
      let postBody = null;
      // verify the required parameter 'budgetId' is set
      if (budgetId === undefined || budgetId === null) {
        throw new Error("Missing the required parameter 'budgetId' when calling getCategoryById");
      }
      // verify the required parameter 'categoryId' is set
      if (categoryId === undefined || categoryId === null) {
        throw new Error("Missing the required parameter 'categoryId' when calling getCategoryById");
      }

      let pathParams = {
        'budget_id': budgetId,
        'category_id': categoryId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CategoryResponse;
      return this.apiClient.callApi(
        '/budgets/{budget_id}/categories/{category_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMonthCategoryById operation.
     * @callback module:api/CategoriesApi~getMonthCategoryByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CategoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single category for a specific budget month
     * Returns a single category for a specific budget month.  Amounts (budgeted, activity, balance, etc.) are specific to the current budget month (UTC).
     * @param {String} budgetId The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.ynab.com/#oauth-default-budget).
     * @param {Date} month The budget month in ISO format (e.g. 2016-12-01) (\"current\" can also be used to specify the current calendar month (UTC))
     * @param {String} categoryId The id of the category
     * @param {module:api/CategoriesApi~getMonthCategoryByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CategoryResponse}
     */
    getMonthCategoryById(budgetId, month, categoryId, callback) {
      let postBody = null;
      // verify the required parameter 'budgetId' is set
      if (budgetId === undefined || budgetId === null) {
        throw new Error("Missing the required parameter 'budgetId' when calling getMonthCategoryById");
      }
      // verify the required parameter 'month' is set
      if (month === undefined || month === null) {
        throw new Error("Missing the required parameter 'month' when calling getMonthCategoryById");
      }
      // verify the required parameter 'categoryId' is set
      if (categoryId === undefined || categoryId === null) {
        throw new Error("Missing the required parameter 'categoryId' when calling getMonthCategoryById");
      }

      let pathParams = {
        'budget_id': budgetId,
        'month': month,
        'category_id': categoryId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CategoryResponse;
      return this.apiClient.callApi(
        '/budgets/{budget_id}/months/{month}/categories/{category_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateMonthCategory operation.
     * @callback module:api/CategoriesApi~updateMonthCategoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SaveCategoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a category for a specific month
     * Update a category for a specific month.  Only `budgeted` amount can be updated.
     * @param {String} budgetId The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.ynab.com/#oauth-default-budget).
     * @param {Date} month The budget month in ISO format (e.g. 2016-12-01) (\"current\" can also be used to specify the current calendar month (UTC))
     * @param {String} categoryId The id of the category
     * @param {module:model/PatchMonthCategoryWrapper} patchMonthCategoryWrapper The category to update.  Only `budgeted` amount can be updated and any other fields specified will be ignored.
     * @param {module:api/CategoriesApi~updateMonthCategoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SaveCategoryResponse}
     */
    updateMonthCategory(budgetId, month, categoryId, patchMonthCategoryWrapper, callback) {
      let postBody = patchMonthCategoryWrapper;
      // verify the required parameter 'budgetId' is set
      if (budgetId === undefined || budgetId === null) {
        throw new Error("Missing the required parameter 'budgetId' when calling updateMonthCategory");
      }
      // verify the required parameter 'month' is set
      if (month === undefined || month === null) {
        throw new Error("Missing the required parameter 'month' when calling updateMonthCategory");
      }
      // verify the required parameter 'categoryId' is set
      if (categoryId === undefined || categoryId === null) {
        throw new Error("Missing the required parameter 'categoryId' when calling updateMonthCategory");
      }
      // verify the required parameter 'patchMonthCategoryWrapper' is set
      if (patchMonthCategoryWrapper === undefined || patchMonthCategoryWrapper === null) {
        throw new Error("Missing the required parameter 'patchMonthCategoryWrapper' when calling updateMonthCategory");
      }

      let pathParams = {
        'budget_id': budgetId,
        'month': month,
        'category_id': categoryId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SaveCategoryResponse;
      return this.apiClient.callApi(
        '/budgets/{budget_id}/months/{month}/categories/{category_id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
