/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BudgetDetailResponse from '../model/BudgetDetailResponse';
import BudgetSettingsResponse from '../model/BudgetSettingsResponse';
import BudgetSummaryResponse from '../model/BudgetSummaryResponse';
import ErrorResponse from '../model/ErrorResponse';

/**
* Budgets service.
* @module api/BudgetsApi
* @version 1.0.0
*/
export default class BudgetsApi {

    /**
    * Constructs a new BudgetsApi. 
    * @alias module:api/BudgetsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getBudgetById operation.
     * @callback module:api/BudgetsApi~getBudgetByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BudgetDetailResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single budget
     * Returns a single budget with all related entities.  This resource is effectively a full budget export.
     * @param {String} budgetId The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.ynab.com/#oauth-default-budget).
     * @param {Object} opts Optional parameters
     * @param {Number} [lastKnowledgeOfServer] The starting server knowledge.  If provided, only entities that have changed since `last_knowledge_of_server` will be included.
     * @param {module:api/BudgetsApi~getBudgetByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BudgetDetailResponse}
     */
    getBudgetById(budgetId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'budgetId' is set
      if (budgetId === undefined || budgetId === null) {
        throw new Error("Missing the required parameter 'budgetId' when calling getBudgetById");
      }

      let pathParams = {
        'budget_id': budgetId
      };
      let queryParams = {
        'last_knowledge_of_server': opts['lastKnowledgeOfServer']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BudgetDetailResponse;
      return this.apiClient.callApi(
        '/budgets/{budget_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBudgetSettingsById operation.
     * @callback module:api/BudgetsApi~getBudgetSettingsByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BudgetSettingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Budget Settings
     * Returns settings for a budget
     * @param {String} budgetId The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.ynab.com/#oauth-default-budget).
     * @param {module:api/BudgetsApi~getBudgetSettingsByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BudgetSettingsResponse}
     */
    getBudgetSettingsById(budgetId, callback) {
      let postBody = null;
      // verify the required parameter 'budgetId' is set
      if (budgetId === undefined || budgetId === null) {
        throw new Error("Missing the required parameter 'budgetId' when calling getBudgetSettingsById");
      }

      let pathParams = {
        'budget_id': budgetId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BudgetSettingsResponse;
      return this.apiClient.callApi(
        '/budgets/{budget_id}/settings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBudgets operation.
     * @callback module:api/BudgetsApi~getBudgetsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BudgetSummaryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List budgets
     * Returns budgets list with summary information
     * @param {Object} opts Optional parameters
     * @param {Boolean} [includeAccounts] Whether to include the list of budget accounts
     * @param {module:api/BudgetsApi~getBudgetsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BudgetSummaryResponse}
     */
    getBudgets(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'include_accounts': opts['includeAccounts']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BudgetSummaryResponse;
      return this.apiClient.callApi(
        '/budgets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
