/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import ScheduledTransactionResponse from '../model/ScheduledTransactionResponse';
import ScheduledTransactionsResponse from '../model/ScheduledTransactionsResponse';

/**
* ScheduledTransactions service.
* @module api/ScheduledTransactionsApi
* @version 1.0.0
*/
export default class ScheduledTransactionsApi {

    /**
    * Constructs a new ScheduledTransactionsApi. 
    * @alias module:api/ScheduledTransactionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getScheduledTransactionById operation.
     * @callback module:api/ScheduledTransactionsApi~getScheduledTransactionByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ScheduledTransactionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single scheduled transaction
     * Returns a single scheduled transaction
     * @param {String} budgetId The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.ynab.com/#oauth-default-budget).
     * @param {String} scheduledTransactionId The id of the scheduled transaction
     * @param {module:api/ScheduledTransactionsApi~getScheduledTransactionByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ScheduledTransactionResponse}
     */
    getScheduledTransactionById(budgetId, scheduledTransactionId, callback) {
      let postBody = null;
      // verify the required parameter 'budgetId' is set
      if (budgetId === undefined || budgetId === null) {
        throw new Error("Missing the required parameter 'budgetId' when calling getScheduledTransactionById");
      }
      // verify the required parameter 'scheduledTransactionId' is set
      if (scheduledTransactionId === undefined || scheduledTransactionId === null) {
        throw new Error("Missing the required parameter 'scheduledTransactionId' when calling getScheduledTransactionById");
      }

      let pathParams = {
        'budget_id': budgetId,
        'scheduled_transaction_id': scheduledTransactionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ScheduledTransactionResponse;
      return this.apiClient.callApi(
        '/budgets/{budget_id}/scheduled_transactions/{scheduled_transaction_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getScheduledTransactions operation.
     * @callback module:api/ScheduledTransactionsApi~getScheduledTransactionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ScheduledTransactionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List scheduled transactions
     * Returns all scheduled transactions
     * @param {String} budgetId The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.ynab.com/#oauth-default-budget).
     * @param {Object} opts Optional parameters
     * @param {Number} [lastKnowledgeOfServer] The starting server knowledge.  If provided, only entities that have changed since `last_knowledge_of_server` will be included.
     * @param {module:api/ScheduledTransactionsApi~getScheduledTransactionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ScheduledTransactionsResponse}
     */
    getScheduledTransactions(budgetId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'budgetId' is set
      if (budgetId === undefined || budgetId === null) {
        throw new Error("Missing the required parameter 'budgetId' when calling getScheduledTransactions");
      }

      let pathParams = {
        'budget_id': budgetId
      };
      let queryParams = {
        'last_knowledge_of_server': opts['lastKnowledgeOfServer']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ScheduledTransactionsResponse;
      return this.apiClient.callApi(
        '/budgets/{budget_id}/scheduled_transactions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
