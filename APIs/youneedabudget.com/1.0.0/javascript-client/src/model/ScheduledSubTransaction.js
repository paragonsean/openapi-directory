/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ScheduledSubTransaction model module.
 * @module model/ScheduledSubTransaction
 * @version 1.0.0
 */
class ScheduledSubTransaction {
    /**
     * Constructs a new <code>ScheduledSubTransaction</code>.
     * @alias module:model/ScheduledSubTransaction
     * @param amount {Number} The scheduled subtransaction amount in milliunits format
     * @param deleted {Boolean} Whether or not the scheduled subtransaction has been deleted.  Deleted scheduled subtransactions will only be included in delta requests.
     * @param id {String} 
     * @param scheduledTransactionId {String} 
     */
    constructor(amount, deleted, id, scheduledTransactionId) { 
        
        ScheduledSubTransaction.initialize(this, amount, deleted, id, scheduledTransactionId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amount, deleted, id, scheduledTransactionId) { 
        obj['amount'] = amount;
        obj['deleted'] = deleted;
        obj['id'] = id;
        obj['scheduled_transaction_id'] = scheduledTransactionId;
    }

    /**
     * Constructs a <code>ScheduledSubTransaction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScheduledSubTransaction} obj Optional instance to populate.
     * @return {module:model/ScheduledSubTransaction} The populated <code>ScheduledSubTransaction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScheduledSubTransaction();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('category_id')) {
                obj['category_id'] = ApiClient.convertToType(data['category_id'], 'String');
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('memo')) {
                obj['memo'] = ApiClient.convertToType(data['memo'], 'String');
            }
            if (data.hasOwnProperty('payee_id')) {
                obj['payee_id'] = ApiClient.convertToType(data['payee_id'], 'String');
            }
            if (data.hasOwnProperty('scheduled_transaction_id')) {
                obj['scheduled_transaction_id'] = ApiClient.convertToType(data['scheduled_transaction_id'], 'String');
            }
            if (data.hasOwnProperty('transfer_account_id')) {
                obj['transfer_account_id'] = ApiClient.convertToType(data['transfer_account_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScheduledSubTransaction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScheduledSubTransaction</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ScheduledSubTransaction.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['category_id'] && !(typeof data['category_id'] === 'string' || data['category_id'] instanceof String)) {
            throw new Error("Expected the field `category_id` to be a primitive type in the JSON string but got " + data['category_id']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['memo'] && !(typeof data['memo'] === 'string' || data['memo'] instanceof String)) {
            throw new Error("Expected the field `memo` to be a primitive type in the JSON string but got " + data['memo']);
        }
        // ensure the json data is a string
        if (data['payee_id'] && !(typeof data['payee_id'] === 'string' || data['payee_id'] instanceof String)) {
            throw new Error("Expected the field `payee_id` to be a primitive type in the JSON string but got " + data['payee_id']);
        }
        // ensure the json data is a string
        if (data['scheduled_transaction_id'] && !(typeof data['scheduled_transaction_id'] === 'string' || data['scheduled_transaction_id'] instanceof String)) {
            throw new Error("Expected the field `scheduled_transaction_id` to be a primitive type in the JSON string but got " + data['scheduled_transaction_id']);
        }
        // ensure the json data is a string
        if (data['transfer_account_id'] && !(typeof data['transfer_account_id'] === 'string' || data['transfer_account_id'] instanceof String)) {
            throw new Error("Expected the field `transfer_account_id` to be a primitive type in the JSON string but got " + data['transfer_account_id']);
        }

        return true;
    }


}

ScheduledSubTransaction.RequiredProperties = ["amount", "deleted", "id", "scheduled_transaction_id"];

/**
 * The scheduled subtransaction amount in milliunits format
 * @member {Number} amount
 */
ScheduledSubTransaction.prototype['amount'] = undefined;

/**
 * @member {String} category_id
 */
ScheduledSubTransaction.prototype['category_id'] = undefined;

/**
 * Whether or not the scheduled subtransaction has been deleted.  Deleted scheduled subtransactions will only be included in delta requests.
 * @member {Boolean} deleted
 */
ScheduledSubTransaction.prototype['deleted'] = undefined;

/**
 * @member {String} id
 */
ScheduledSubTransaction.prototype['id'] = undefined;

/**
 * @member {String} memo
 */
ScheduledSubTransaction.prototype['memo'] = undefined;

/**
 * @member {String} payee_id
 */
ScheduledSubTransaction.prototype['payee_id'] = undefined;

/**
 * @member {String} scheduled_transaction_id
 */
ScheduledSubTransaction.prototype['scheduled_transaction_id'] = undefined;

/**
 * If a transfer, the account_id which the scheduled subtransaction transfers to
 * @member {String} transfer_account_id
 */
ScheduledSubTransaction.prototype['transfer_account_id'] = undefined;






export default ScheduledSubTransaction;

