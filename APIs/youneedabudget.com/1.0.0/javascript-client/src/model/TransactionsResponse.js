/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TransactionsResponseData from './TransactionsResponseData';

/**
 * The TransactionsResponse model module.
 * @module model/TransactionsResponse
 * @version 1.0.0
 */
class TransactionsResponse {
    /**
     * Constructs a new <code>TransactionsResponse</code>.
     * @alias module:model/TransactionsResponse
     * @param data {module:model/TransactionsResponseData} 
     */
    constructor(data) { 
        
        TransactionsResponse.initialize(this, data);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, data) { 
        obj['data'] = data;
    }

    /**
     * Constructs a <code>TransactionsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionsResponse} obj Optional instance to populate.
     * @return {module:model/TransactionsResponse} The populated <code>TransactionsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionsResponse();

            if (data.hasOwnProperty('data')) {
                obj['data'] = TransactionsResponseData.constructFromObject(data['data']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransactionsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransactionsResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransactionsResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `data`
        if (data['data']) { // data not null
          TransactionsResponseData.validateJSON(data['data']);
        }

        return true;
    }


}

TransactionsResponse.RequiredProperties = ["data"];

/**
 * @member {module:model/TransactionsResponseData} data
 */
TransactionsResponse.prototype['data'] = undefined;






export default TransactionsResponse;

