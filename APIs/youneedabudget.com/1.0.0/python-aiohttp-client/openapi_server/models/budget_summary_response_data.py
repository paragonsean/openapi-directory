# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.budget_summary import BudgetSummary
from openapi_server import util


class BudgetSummaryResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, budgets: List[BudgetSummary]=None, default_budget: BudgetSummary=None):
        """BudgetSummaryResponseData - a model defined in OpenAPI

        :param budgets: The budgets of this BudgetSummaryResponseData.
        :param default_budget: The default_budget of this BudgetSummaryResponseData.
        """
        self.openapi_types = {
            'budgets': List[BudgetSummary],
            'default_budget': BudgetSummary
        }

        self.attribute_map = {
            'budgets': 'budgets',
            'default_budget': 'default_budget'
        }

        self._budgets = budgets
        self._default_budget = default_budget

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BudgetSummaryResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BudgetSummaryResponse_data of this BudgetSummaryResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def budgets(self):
        """Gets the budgets of this BudgetSummaryResponseData.


        :return: The budgets of this BudgetSummaryResponseData.
        :rtype: List[BudgetSummary]
        """
        return self._budgets

    @budgets.setter
    def budgets(self, budgets):
        """Sets the budgets of this BudgetSummaryResponseData.


        :param budgets: The budgets of this BudgetSummaryResponseData.
        :type budgets: List[BudgetSummary]
        """
        if budgets is None:
            raise ValueError("Invalid value for `budgets`, must not be `None`")

        self._budgets = budgets

    @property
    def default_budget(self):
        """Gets the default_budget of this BudgetSummaryResponseData.


        :return: The default_budget of this BudgetSummaryResponseData.
        :rtype: BudgetSummary
        """
        return self._default_budget

    @default_budget.setter
    def default_budget(self, default_budget):
        """Sets the default_budget of this BudgetSummaryResponseData.


        :param default_budget: The default_budget of this BudgetSummaryResponseData.
        :type default_budget: BudgetSummary
        """

        self._default_budget = default_budget
