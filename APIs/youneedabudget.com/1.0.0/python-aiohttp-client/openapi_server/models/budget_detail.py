# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account import Account
from openapi_server.models.category import Category
from openapi_server.models.category_group import CategoryGroup
from openapi_server.models.currency_format import CurrencyFormat
from openapi_server.models.date_format import DateFormat
from openapi_server.models.month_detail import MonthDetail
from openapi_server.models.payee import Payee
from openapi_server.models.payee_location import PayeeLocation
from openapi_server.models.scheduled_sub_transaction import ScheduledSubTransaction
from openapi_server.models.scheduled_transaction_summary import ScheduledTransactionSummary
from openapi_server.models.sub_transaction import SubTransaction
from openapi_server.models.transaction_summary import TransactionSummary
from openapi_server import util


class BudgetDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accounts: List[Account]=None, currency_format: CurrencyFormat=None, date_format: DateFormat=None, first_month: date=None, id: str=None, last_modified_on: datetime=None, last_month: date=None, name: str=None, categories: List[Category]=None, category_groups: List[CategoryGroup]=None, months: List[MonthDetail]=None, payee_locations: List[PayeeLocation]=None, payees: List[Payee]=None, scheduled_subtransactions: List[ScheduledSubTransaction]=None, scheduled_transactions: List[ScheduledTransactionSummary]=None, subtransactions: List[SubTransaction]=None, transactions: List[TransactionSummary]=None):
        """BudgetDetail - a model defined in OpenAPI

        :param accounts: The accounts of this BudgetDetail.
        :param currency_format: The currency_format of this BudgetDetail.
        :param date_format: The date_format of this BudgetDetail.
        :param first_month: The first_month of this BudgetDetail.
        :param id: The id of this BudgetDetail.
        :param last_modified_on: The last_modified_on of this BudgetDetail.
        :param last_month: The last_month of this BudgetDetail.
        :param name: The name of this BudgetDetail.
        :param categories: The categories of this BudgetDetail.
        :param category_groups: The category_groups of this BudgetDetail.
        :param months: The months of this BudgetDetail.
        :param payee_locations: The payee_locations of this BudgetDetail.
        :param payees: The payees of this BudgetDetail.
        :param scheduled_subtransactions: The scheduled_subtransactions of this BudgetDetail.
        :param scheduled_transactions: The scheduled_transactions of this BudgetDetail.
        :param subtransactions: The subtransactions of this BudgetDetail.
        :param transactions: The transactions of this BudgetDetail.
        """
        self.openapi_types = {
            'accounts': List[Account],
            'currency_format': CurrencyFormat,
            'date_format': DateFormat,
            'first_month': date,
            'id': str,
            'last_modified_on': datetime,
            'last_month': date,
            'name': str,
            'categories': List[Category],
            'category_groups': List[CategoryGroup],
            'months': List[MonthDetail],
            'payee_locations': List[PayeeLocation],
            'payees': List[Payee],
            'scheduled_subtransactions': List[ScheduledSubTransaction],
            'scheduled_transactions': List[ScheduledTransactionSummary],
            'subtransactions': List[SubTransaction],
            'transactions': List[TransactionSummary]
        }

        self.attribute_map = {
            'accounts': 'accounts',
            'currency_format': 'currency_format',
            'date_format': 'date_format',
            'first_month': 'first_month',
            'id': 'id',
            'last_modified_on': 'last_modified_on',
            'last_month': 'last_month',
            'name': 'name',
            'categories': 'categories',
            'category_groups': 'category_groups',
            'months': 'months',
            'payee_locations': 'payee_locations',
            'payees': 'payees',
            'scheduled_subtransactions': 'scheduled_subtransactions',
            'scheduled_transactions': 'scheduled_transactions',
            'subtransactions': 'subtransactions',
            'transactions': 'transactions'
        }

        self._accounts = accounts
        self._currency_format = currency_format
        self._date_format = date_format
        self._first_month = first_month
        self._id = id
        self._last_modified_on = last_modified_on
        self._last_month = last_month
        self._name = name
        self._categories = categories
        self._category_groups = category_groups
        self._months = months
        self._payee_locations = payee_locations
        self._payees = payees
        self._scheduled_subtransactions = scheduled_subtransactions
        self._scheduled_transactions = scheduled_transactions
        self._subtransactions = subtransactions
        self._transactions = transactions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BudgetDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BudgetDetail of this BudgetDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accounts(self):
        """Gets the accounts of this BudgetDetail.


        :return: The accounts of this BudgetDetail.
        :rtype: List[Account]
        """
        return self._accounts

    @accounts.setter
    def accounts(self, accounts):
        """Sets the accounts of this BudgetDetail.


        :param accounts: The accounts of this BudgetDetail.
        :type accounts: List[Account]
        """

        self._accounts = accounts

    @property
    def currency_format(self):
        """Gets the currency_format of this BudgetDetail.


        :return: The currency_format of this BudgetDetail.
        :rtype: CurrencyFormat
        """
        return self._currency_format

    @currency_format.setter
    def currency_format(self, currency_format):
        """Sets the currency_format of this BudgetDetail.


        :param currency_format: The currency_format of this BudgetDetail.
        :type currency_format: CurrencyFormat
        """

        self._currency_format = currency_format

    @property
    def date_format(self):
        """Gets the date_format of this BudgetDetail.


        :return: The date_format of this BudgetDetail.
        :rtype: DateFormat
        """
        return self._date_format

    @date_format.setter
    def date_format(self, date_format):
        """Sets the date_format of this BudgetDetail.


        :param date_format: The date_format of this BudgetDetail.
        :type date_format: DateFormat
        """

        self._date_format = date_format

    @property
    def first_month(self):
        """Gets the first_month of this BudgetDetail.

        The earliest budget month

        :return: The first_month of this BudgetDetail.
        :rtype: date
        """
        return self._first_month

    @first_month.setter
    def first_month(self, first_month):
        """Sets the first_month of this BudgetDetail.

        The earliest budget month

        :param first_month: The first_month of this BudgetDetail.
        :type first_month: date
        """

        self._first_month = first_month

    @property
    def id(self):
        """Gets the id of this BudgetDetail.


        :return: The id of this BudgetDetail.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BudgetDetail.


        :param id: The id of this BudgetDetail.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def last_modified_on(self):
        """Gets the last_modified_on of this BudgetDetail.

        The last time any changes were made to the budget from either a web or mobile client

        :return: The last_modified_on of this BudgetDetail.
        :rtype: datetime
        """
        return self._last_modified_on

    @last_modified_on.setter
    def last_modified_on(self, last_modified_on):
        """Sets the last_modified_on of this BudgetDetail.

        The last time any changes were made to the budget from either a web or mobile client

        :param last_modified_on: The last_modified_on of this BudgetDetail.
        :type last_modified_on: datetime
        """

        self._last_modified_on = last_modified_on

    @property
    def last_month(self):
        """Gets the last_month of this BudgetDetail.

        The latest budget month

        :return: The last_month of this BudgetDetail.
        :rtype: date
        """
        return self._last_month

    @last_month.setter
    def last_month(self, last_month):
        """Sets the last_month of this BudgetDetail.

        The latest budget month

        :param last_month: The last_month of this BudgetDetail.
        :type last_month: date
        """

        self._last_month = last_month

    @property
    def name(self):
        """Gets the name of this BudgetDetail.


        :return: The name of this BudgetDetail.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BudgetDetail.


        :param name: The name of this BudgetDetail.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def categories(self):
        """Gets the categories of this BudgetDetail.


        :return: The categories of this BudgetDetail.
        :rtype: List[Category]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this BudgetDetail.


        :param categories: The categories of this BudgetDetail.
        :type categories: List[Category]
        """

        self._categories = categories

    @property
    def category_groups(self):
        """Gets the category_groups of this BudgetDetail.


        :return: The category_groups of this BudgetDetail.
        :rtype: List[CategoryGroup]
        """
        return self._category_groups

    @category_groups.setter
    def category_groups(self, category_groups):
        """Sets the category_groups of this BudgetDetail.


        :param category_groups: The category_groups of this BudgetDetail.
        :type category_groups: List[CategoryGroup]
        """

        self._category_groups = category_groups

    @property
    def months(self):
        """Gets the months of this BudgetDetail.


        :return: The months of this BudgetDetail.
        :rtype: List[MonthDetail]
        """
        return self._months

    @months.setter
    def months(self, months):
        """Sets the months of this BudgetDetail.


        :param months: The months of this BudgetDetail.
        :type months: List[MonthDetail]
        """

        self._months = months

    @property
    def payee_locations(self):
        """Gets the payee_locations of this BudgetDetail.


        :return: The payee_locations of this BudgetDetail.
        :rtype: List[PayeeLocation]
        """
        return self._payee_locations

    @payee_locations.setter
    def payee_locations(self, payee_locations):
        """Sets the payee_locations of this BudgetDetail.


        :param payee_locations: The payee_locations of this BudgetDetail.
        :type payee_locations: List[PayeeLocation]
        """

        self._payee_locations = payee_locations

    @property
    def payees(self):
        """Gets the payees of this BudgetDetail.


        :return: The payees of this BudgetDetail.
        :rtype: List[Payee]
        """
        return self._payees

    @payees.setter
    def payees(self, payees):
        """Sets the payees of this BudgetDetail.


        :param payees: The payees of this BudgetDetail.
        :type payees: List[Payee]
        """

        self._payees = payees

    @property
    def scheduled_subtransactions(self):
        """Gets the scheduled_subtransactions of this BudgetDetail.


        :return: The scheduled_subtransactions of this BudgetDetail.
        :rtype: List[ScheduledSubTransaction]
        """
        return self._scheduled_subtransactions

    @scheduled_subtransactions.setter
    def scheduled_subtransactions(self, scheduled_subtransactions):
        """Sets the scheduled_subtransactions of this BudgetDetail.


        :param scheduled_subtransactions: The scheduled_subtransactions of this BudgetDetail.
        :type scheduled_subtransactions: List[ScheduledSubTransaction]
        """

        self._scheduled_subtransactions = scheduled_subtransactions

    @property
    def scheduled_transactions(self):
        """Gets the scheduled_transactions of this BudgetDetail.


        :return: The scheduled_transactions of this BudgetDetail.
        :rtype: List[ScheduledTransactionSummary]
        """
        return self._scheduled_transactions

    @scheduled_transactions.setter
    def scheduled_transactions(self, scheduled_transactions):
        """Sets the scheduled_transactions of this BudgetDetail.


        :param scheduled_transactions: The scheduled_transactions of this BudgetDetail.
        :type scheduled_transactions: List[ScheduledTransactionSummary]
        """

        self._scheduled_transactions = scheduled_transactions

    @property
    def subtransactions(self):
        """Gets the subtransactions of this BudgetDetail.


        :return: The subtransactions of this BudgetDetail.
        :rtype: List[SubTransaction]
        """
        return self._subtransactions

    @subtransactions.setter
    def subtransactions(self, subtransactions):
        """Sets the subtransactions of this BudgetDetail.


        :param subtransactions: The subtransactions of this BudgetDetail.
        :type subtransactions: List[SubTransaction]
        """

        self._subtransactions = subtransactions

    @property
    def transactions(self):
        """Gets the transactions of this BudgetDetail.


        :return: The transactions of this BudgetDetail.
        :rtype: List[TransactionSummary]
        """
        return self._transactions

    @transactions.setter
    def transactions(self, transactions):
        """Sets the transactions of this BudgetDetail.


        :param transactions: The transactions of this BudgetDetail.
        :type transactions: List[TransactionSummary]
        """

        self._transactions = transactions
