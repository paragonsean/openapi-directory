# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bulk_response_data_bulk import BulkResponseDataBulk
from openapi_server import util


class BulkResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bulk: BulkResponseDataBulk=None):
        """BulkResponseData - a model defined in OpenAPI

        :param bulk: The bulk of this BulkResponseData.
        """
        self.openapi_types = {
            'bulk': BulkResponseDataBulk
        }

        self.attribute_map = {
            'bulk': 'bulk'
        }

        self._bulk = bulk

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BulkResponse_data of this BulkResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bulk(self):
        """Gets the bulk of this BulkResponseData.


        :return: The bulk of this BulkResponseData.
        :rtype: BulkResponseDataBulk
        """
        return self._bulk

    @bulk.setter
    def bulk(self, bulk):
        """Sets the bulk of this BulkResponseData.


        :param bulk: The bulk of this BulkResponseData.
        :type bulk: BulkResponseDataBulk
        """
        if bulk is None:
            raise ValueError("Invalid value for `bulk`, must not be `None`")

        self._bulk = bulk
