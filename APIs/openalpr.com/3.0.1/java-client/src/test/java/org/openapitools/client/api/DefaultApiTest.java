/*
 * OpenALPR CarCheck API
 * The OpenALPR CarCheck API allows you to send images to the cloud for processing.  The image will be analyzed for license plates and vehicle make/models.  The results  are returned in JSON format 
 *
 * The version of the OpenAPI document: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.io.File;
import org.openapitools.client.model.GetConfig200Response;
import org.openapitools.client.model.RecognizeFile200Response;
import org.openapitools.client.model.RecognizeFile400Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Get a list of available results for plate and vehicle recognition 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConfigTest() throws ApiException {
        GetConfig200Response response = api.getConfig();
        // TODO: test validations
    }

    /**
     * Send an image for OpenALPR to analyze and provide metadata back The image is sent as base64 encoded bytes. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recognizeBytesTest() throws ApiException {
        String secretKey = null;
        String country = null;
        String imageBytes = null;
        Integer recognizeVehicle = null;
        Integer returnImage = null;
        Integer topn = null;
        RecognizeFile200Response response = api.recognizeBytes(secretKey, country, imageBytes, recognizeVehicle, returnImage, topn);
        // TODO: test validations
    }

    /**
     * Send an image for OpenALPR to analyze and provide metadata back The image is sent as a file using a form data POST 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recognizeFileTest() throws ApiException {
        String secretKey = null;
        String country = null;
        File image = null;
        Integer recognizeVehicle = null;
        Integer returnImage = null;
        Integer topn = null;
        Integer isCropped = null;
        RecognizeFile200Response response = api.recognizeFile(secretKey, country, image, recognizeVehicle, returnImage, topn, isCropped);
        // TODO: test validations
    }

    /**
     * Send an image for OpenALPR to analyze and provide metadata back The image is sent as a URL.  The OpenALPR service will download the image  and process it 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recognizeUrlTest() throws ApiException {
        String imageUrl = null;
        String secretKey = null;
        String country = null;
        Integer recognizeVehicle = null;
        Integer returnImage = null;
        Integer topn = null;
        RecognizeFile200Response response = api.recognizeUrl(imageUrl, secretKey, country, recognizeVehicle, returnImage, topn);
        // TODO: test validations
    }

}
