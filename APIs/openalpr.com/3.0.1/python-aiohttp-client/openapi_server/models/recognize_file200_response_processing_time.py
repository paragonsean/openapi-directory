# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RecognizeFile200ResponseProcessingTime(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, plates: float=None, total: float=None, vehicles: float=None):
        """RecognizeFile200ResponseProcessingTime - a model defined in OpenAPI

        :param plates: The plates of this RecognizeFile200ResponseProcessingTime.
        :param total: The total of this RecognizeFile200ResponseProcessingTime.
        :param vehicles: The vehicles of this RecognizeFile200ResponseProcessingTime.
        """
        self.openapi_types = {
            'plates': float,
            'total': float,
            'vehicles': float
        }

        self.attribute_map = {
            'plates': 'plates',
            'total': 'total',
            'vehicles': 'vehicles'
        }

        self._plates = plates
        self._total = total
        self._vehicles = vehicles

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecognizeFile200ResponseProcessingTime':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The recognizeFile_200_response_processing_time of this RecognizeFile200ResponseProcessingTime.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def plates(self):
        """Gets the plates of this RecognizeFile200ResponseProcessingTime.

        Time spent performing license plate recognition (in milliseconds)

        :return: The plates of this RecognizeFile200ResponseProcessingTime.
        :rtype: float
        """
        return self._plates

    @plates.setter
    def plates(self, plates):
        """Sets the plates of this RecognizeFile200ResponseProcessingTime.

        Time spent performing license plate recognition (in milliseconds)

        :param plates: The plates of this RecognizeFile200ResponseProcessingTime.
        :type plates: float
        """

        self._plates = plates

    @property
    def total(self):
        """Gets the total of this RecognizeFile200ResponseProcessingTime.

        Time spent processing all tasks (in milliseconds)

        :return: The total of this RecognizeFile200ResponseProcessingTime.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this RecognizeFile200ResponseProcessingTime.

        Time spent processing all tasks (in milliseconds)

        :param total: The total of this RecognizeFile200ResponseProcessingTime.
        :type total: float
        """

        self._total = total

    @property
    def vehicles(self):
        """Gets the vehicles of this RecognizeFile200ResponseProcessingTime.

        Time spent performing vehicle recognition (in milliseconds)

        :return: The vehicles of this RecognizeFile200ResponseProcessingTime.
        :rtype: float
        """
        return self._vehicles

    @vehicles.setter
    def vehicles(self, vehicles):
        """Sets the vehicles of this RecognizeFile200ResponseProcessingTime.

        Time spent performing vehicle recognition (in milliseconds)

        :param vehicles: The vehicles of this RecognizeFile200ResponseProcessingTime.
        :type vehicles: float
        """

        self._vehicles = vehicles
