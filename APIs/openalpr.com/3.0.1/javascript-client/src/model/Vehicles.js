/**
 * OpenALPR CarCheck API
 * The OpenALPR CarCheck API allows you to send images to the cloud for processing.  The image will be analyzed for license plates and vehicle make/models.  The results  are returned in JSON format 
 *
 * The version of the OpenAPI document: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VehicleDetails from './VehicleDetails';

/**
 * The Vehicles model module.
 * @module model/Vehicles
 * @version 3.0.1
 */
class Vehicles {
    /**
     * Constructs a new <code>Vehicles</code>.
     * @alias module:model/Vehicles
     */
    constructor() { 
        
        Vehicles.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Vehicles</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Vehicles} obj Optional instance to populate.
     * @return {module:model/Vehicles} The populated <code>Vehicles</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Vehicles();

            if (data.hasOwnProperty('details')) {
                obj['details'] = VehicleDetails.constructFromObject(data['details']);
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
            if (data.hasOwnProperty('x')) {
                obj['x'] = ApiClient.convertToType(data['x'], 'Number');
            }
            if (data.hasOwnProperty('y')) {
                obj['y'] = ApiClient.convertToType(data['y'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Vehicles</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Vehicles</code>.
     */
    static validateJSON(data) {
        // validate the optional field `details`
        if (data['details']) { // data not null
          VehicleDetails.validateJSON(data['details']);
        }

        return true;
    }


}



/**
 * @member {module:model/VehicleDetails} details
 */
Vehicles.prototype['details'] = undefined;

/**
 * @member {Number} height
 */
Vehicles.prototype['height'] = undefined;

/**
 * @member {Number} width
 */
Vehicles.prototype['width'] = undefined;

/**
 * @member {Number} x
 */
Vehicles.prototype['x'] = undefined;

/**
 * @member {Number} y
 */
Vehicles.prototype['y'] = undefined;






export default Vehicles;

