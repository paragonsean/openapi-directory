/**
 * OpenALPR CarCheck API
 * The OpenALPR CarCheck API allows you to send images to the cloud for processing.  The image will be analyzed for license plates and vehicle make/models.  The results  are returned in JSON format 
 *
 * The version of the OpenAPI document: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RecognizeFile200ResponseProcessingTime model module.
 * @module model/RecognizeFile200ResponseProcessingTime
 * @version 3.0.1
 */
class RecognizeFile200ResponseProcessingTime {
    /**
     * Constructs a new <code>RecognizeFile200ResponseProcessingTime</code>.
     * @alias module:model/RecognizeFile200ResponseProcessingTime
     */
    constructor() { 
        
        RecognizeFile200ResponseProcessingTime.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RecognizeFile200ResponseProcessingTime</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RecognizeFile200ResponseProcessingTime} obj Optional instance to populate.
     * @return {module:model/RecognizeFile200ResponseProcessingTime} The populated <code>RecognizeFile200ResponseProcessingTime</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RecognizeFile200ResponseProcessingTime();

            if (data.hasOwnProperty('plates')) {
                obj['plates'] = ApiClient.convertToType(data['plates'], 'Number');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('vehicles')) {
                obj['vehicles'] = ApiClient.convertToType(data['vehicles'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RecognizeFile200ResponseProcessingTime</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RecognizeFile200ResponseProcessingTime</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Time spent performing license plate recognition (in milliseconds)
 * @member {Number} plates
 */
RecognizeFile200ResponseProcessingTime.prototype['plates'] = undefined;

/**
 * Time spent processing all tasks (in milliseconds)
 * @member {Number} total
 */
RecognizeFile200ResponseProcessingTime.prototype['total'] = undefined;

/**
 * Time spent performing vehicle recognition (in milliseconds)
 * @member {Number} vehicles
 */
RecognizeFile200ResponseProcessingTime.prototype['vehicles'] = undefined;






export default RecognizeFile200ResponseProcessingTime;

