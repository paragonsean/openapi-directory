/**
 * OpenALPR CarCheck API
 * The OpenALPR CarCheck API allows you to send images to the cloud for processing.  The image will be analyzed for license plates and vehicle make/models.  The results  are returned in JSON format 
 *
 * The version of the OpenAPI document: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetConfig200ResponseCountriesInner from './GetConfig200ResponseCountriesInner';
import GetConfig200ResponseVehicleLabels from './GetConfig200ResponseVehicleLabels';

/**
 * The GetConfig200Response model module.
 * @module model/GetConfig200Response
 * @version 3.0.1
 */
class GetConfig200Response {
    /**
     * Constructs a new <code>GetConfig200Response</code>.
     * @alias module:model/GetConfig200Response
     */
    constructor() { 
        
        GetConfig200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetConfig200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetConfig200Response} obj Optional instance to populate.
     * @return {module:model/GetConfig200Response} The populated <code>GetConfig200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetConfig200Response();

            if (data.hasOwnProperty('countries')) {
                obj['countries'] = ApiClient.convertToType(data['countries'], [GetConfig200ResponseCountriesInner]);
            }
            if (data.hasOwnProperty('vehicle_labels')) {
                obj['vehicle_labels'] = GetConfig200ResponseVehicleLabels.constructFromObject(data['vehicle_labels']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetConfig200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetConfig200Response</code>.
     */
    static validateJSON(data) {
        if (data['countries']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['countries'])) {
                throw new Error("Expected the field `countries` to be an array in the JSON data but got " + data['countries']);
            }
            // validate the optional field `countries` (array)
            for (const item of data['countries']) {
                GetConfig200ResponseCountriesInner.validateJSON(item);
            };
        }
        // validate the optional field `vehicle_labels`
        if (data['vehicle_labels']) { // data not null
          GetConfig200ResponseVehicleLabels.validateJSON(data['vehicle_labels']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/GetConfig200ResponseCountriesInner>} countries
 */
GetConfig200Response.prototype['countries'] = undefined;

/**
 * @member {module:model/GetConfig200ResponseVehicleLabels} vehicle_labels
 */
GetConfig200Response.prototype['vehicle_labels'] = undefined;






export default GetConfig200Response;

