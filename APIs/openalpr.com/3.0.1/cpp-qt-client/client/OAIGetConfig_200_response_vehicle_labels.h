/**
 * OpenALPR CarCheck API
 * The OpenALPR CarCheck API allows you to send images to the cloud for processing.  The image will be analyzed for license plates and vehicle make/models.  The results  are returned in JSON format 
 *
 * The version of the OpenAPI document: 3.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetConfig_200_response_vehicle_labels.h
 *
 * 
 */

#ifndef OAIGetConfig_200_response_vehicle_labels_H
#define OAIGetConfig_200_response_vehicle_labels_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetConfig_200_response_vehicle_labels : public OAIObject {
public:
    OAIGetConfig_200_response_vehicle_labels();
    OAIGetConfig_200_response_vehicle_labels(QString json);
    ~OAIGetConfig_200_response_vehicle_labels() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getBodytype() const;
    void setBodytype(const QList<QString> &bodytype);
    bool is_bodytype_Set() const;
    bool is_bodytype_Valid() const;

    QList<QString> getColor() const;
    void setColor(const QList<QString> &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    QList<QString> getMake() const;
    void setMake(const QList<QString> &make);
    bool is_make_Set() const;
    bool is_make_Valid() const;

    QList<QString> getMakemodel() const;
    void setMakemodel(const QList<QString> &makemodel);
    bool is_makemodel_Set() const;
    bool is_makemodel_Valid() const;

    QList<QString> getOrientation() const;
    void setOrientation(const QList<QString> &orientation);
    bool is_orientation_Set() const;
    bool is_orientation_Valid() const;

    QList<QString> getYear() const;
    void setYear(const QList<QString> &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_bodytype;
    bool m_bodytype_isSet;
    bool m_bodytype_isValid;

    QList<QString> m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    QList<QString> m_make;
    bool m_make_isSet;
    bool m_make_isValid;

    QList<QString> m_makemodel;
    bool m_makemodel_isSet;
    bool m_makemodel_isValid;

    QList<QString> m_orientation;
    bool m_orientation_isSet;
    bool m_orientation_isValid;

    QList<QString> m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetConfig_200_response_vehicle_labels)

#endif // OAIGetConfig_200_response_vehicle_labels_H
