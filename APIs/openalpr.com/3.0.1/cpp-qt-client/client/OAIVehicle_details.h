/**
 * OpenALPR CarCheck API
 * The OpenALPR CarCheck API allows you to send images to the cloud for processing.  The image will be analyzed for license plates and vehicle make/models.  The results  are returned in JSON format 
 *
 * The version of the OpenAPI document: 3.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVehicle_details.h
 *
 * 
 */

#ifndef OAIVehicle_details_H
#define OAIVehicle_details_H

#include <QJsonObject>

#include "OAIVehicle_candidate.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVehicle_candidate;

class OAIVehicle_details : public OAIObject {
public:
    OAIVehicle_details();
    OAIVehicle_details(QString json);
    ~OAIVehicle_details() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIVehicle_candidate> getBodyType() const;
    void setBodyType(const QList<OAIVehicle_candidate> &body_type);
    bool is_body_type_Set() const;
    bool is_body_type_Valid() const;

    QList<OAIVehicle_candidate> getColor() const;
    void setColor(const QList<OAIVehicle_candidate> &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    QList<OAIVehicle_candidate> getMake() const;
    void setMake(const QList<OAIVehicle_candidate> &make);
    bool is_make_Set() const;
    bool is_make_Valid() const;

    QList<OAIVehicle_candidate> getMakeModel() const;
    void setMakeModel(const QList<OAIVehicle_candidate> &make_model);
    bool is_make_model_Set() const;
    bool is_make_model_Valid() const;

    QList<OAIVehicle_candidate> getOrientation() const;
    void setOrientation(const QList<OAIVehicle_candidate> &orientation);
    bool is_orientation_Set() const;
    bool is_orientation_Valid() const;

    QList<OAIVehicle_candidate> getYear() const;
    void setYear(const QList<OAIVehicle_candidate> &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIVehicle_candidate> m_body_type;
    bool m_body_type_isSet;
    bool m_body_type_isValid;

    QList<OAIVehicle_candidate> m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    QList<OAIVehicle_candidate> m_make;
    bool m_make_isSet;
    bool m_make_isValid;

    QList<OAIVehicle_candidate> m_make_model;
    bool m_make_model_isSet;
    bool m_make_model_isValid;

    QList<OAIVehicle_candidate> m_orientation;
    bool m_orientation_isSet;
    bool m_orientation_isValid;

    QList<OAIVehicle_candidate> m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVehicle_details)

#endif // OAIVehicle_details_H
