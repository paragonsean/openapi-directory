/**
 * Personnel Data
 * API for reading and writing personnel data incl. data about attendances and absences
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINewAttendancePeriodRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINewAttendancePeriodRequest::OAINewAttendancePeriodRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINewAttendancePeriodRequest::OAINewAttendancePeriodRequest() {
    this->initializeModel();
}

OAINewAttendancePeriodRequest::~OAINewAttendancePeriodRequest() {}

void OAINewAttendancePeriodRequest::initializeModel() {

    m_attendances_isSet = false;
    m_attendances_isValid = false;
}

void OAINewAttendancePeriodRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINewAttendancePeriodRequest::fromJsonObject(QJsonObject json) {

    m_attendances_isValid = ::OpenAPI::fromJsonValue(m_attendances, json[QString("attendances")]);
    m_attendances_isSet = !json[QString("attendances")].isNull() && m_attendances_isValid;
}

QString OAINewAttendancePeriodRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINewAttendancePeriodRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_attendances.size() > 0) {
        obj.insert(QString("attendances"), ::OpenAPI::toJsonValue(m_attendances));
    }
    return obj;
}

QList<OAINewAttendancePeriodRequest_attendances_inner> OAINewAttendancePeriodRequest::getAttendances() const {
    return m_attendances;
}
void OAINewAttendancePeriodRequest::setAttendances(const QList<OAINewAttendancePeriodRequest_attendances_inner> &attendances) {
    m_attendances = attendances;
    m_attendances_isSet = true;
}

bool OAINewAttendancePeriodRequest::is_attendances_Set() const{
    return m_attendances_isSet;
}

bool OAINewAttendancePeriodRequest::is_attendances_Valid() const{
    return m_attendances_isValid;
}

bool OAINewAttendancePeriodRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attendances.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINewAttendancePeriodRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
