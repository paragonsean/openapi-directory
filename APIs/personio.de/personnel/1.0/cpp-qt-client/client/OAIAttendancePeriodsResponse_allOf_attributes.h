/**
 * Personnel Data
 * API for reading and writing personnel data incl. data about attendances and absences
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttendancePeriodsResponse_allOf_attributes.h
 *
 * 
 */

#ifndef OAIAttendancePeriodsResponse_allOf_attributes_H
#define OAIAttendancePeriodsResponse_allOf_attributes_H

#include <QJsonObject>

#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAttendancePeriodsResponse_allOf_attributes : public OAIObject {
public:
    OAIAttendancePeriodsResponse_allOf_attributes();
    OAIAttendancePeriodsResponse_allOf_attributes(QString json);
    ~OAIAttendancePeriodsResponse_allOf_attributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getRBreak() const;
    void setRBreak(const qint32 &r_break);
    bool is_r_break_Set() const;
    bool is_r_break_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    QDate getDate() const;
    void setDate(const QDate &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    qint32 getEmployee() const;
    void setEmployee(const qint32 &employee);
    bool is_employee_Set() const;
    bool is_employee_Valid() const;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    bool isIsHoliday() const;
    void setIsHoliday(const bool &is_holiday);
    bool is_is_holiday_Set() const;
    bool is_is_holiday_Valid() const;

    bool isIsOnTimeOff() const;
    void setIsOnTimeOff(const bool &is_on_time_off);
    bool is_is_on_time_off_Set() const;
    bool is_is_on_time_off_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_r_break;
    bool m_r_break_isSet;
    bool m_r_break_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    QDate m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    qint32 m_employee;
    bool m_employee_isSet;
    bool m_employee_isValid;

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    bool m_is_holiday;
    bool m_is_holiday_isSet;
    bool m_is_holiday_isValid;

    bool m_is_on_time_off;
    bool m_is_on_time_off_isSet;
    bool m_is_on_time_off_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttendancePeriodsResponse_allOf_attributes)

#endif // OAIAttendancePeriodsResponse_allOf_attributes_H
