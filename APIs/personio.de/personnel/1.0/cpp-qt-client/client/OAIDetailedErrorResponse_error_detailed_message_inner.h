/**
 * Personnel Data
 * API for reading and writing personnel data incl. data about attendances and absences
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDetailedErrorResponse_error_detailed_message_inner.h
 *
 * 
 */

#ifndef OAIDetailedErrorResponse_error_detailed_message_inner_H
#define OAIDetailedErrorResponse_error_detailed_message_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDetailedErrorResponse_error_detailed_message_inner : public OAIObject {
public:
    OAIDetailedErrorResponse_error_detailed_message_inner();
    OAIDetailedErrorResponse_error_detailed_message_inner(QString json);
    ~OAIDetailedErrorResponse_error_detailed_message_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getRBreak() const;
    void setRBreak(const qint32 &r_break);
    bool is_r_break_Set() const;
    bool is_r_break_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    qint32 getEmployee() const;
    void setEmployee(const qint32 &employee);
    bool is_employee_Set() const;
    bool is_employee_Valid() const;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QString getErrorMsg() const;
    void setErrorMsg(const QString &error_msg);
    bool is_error_msg_Set() const;
    bool is_error_msg_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    bool isSuccess() const;
    void setSuccess(const bool &success);
    bool is_success_Set() const;
    bool is_success_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_r_break;
    bool m_r_break_isSet;
    bool m_r_break_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    qint32 m_employee;
    bool m_employee_isSet;
    bool m_employee_isValid;

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QString m_error_msg;
    bool m_error_msg_isSet;
    bool m_error_msg_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    bool m_success;
    bool m_success_isSet;
    bool m_success_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDetailedErrorResponse_error_detailed_message_inner)

#endif // OAIDetailedErrorResponse_error_detailed_message_inner_H
