/**
 * Personnel Data
 * API for reading and writing personnel data incl. data about attendances and absences
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttendancePeriodsResponse.h
 *
 * 
 */

#ifndef OAIAttendancePeriodsResponse_H
#define OAIAttendancePeriodsResponse_H

#include <QJsonObject>

#include "OAIAttendancePeriodsResponse_allOf_data.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttendancePeriodsResponse_allOf_data;

class OAIAttendancePeriodsResponse : public OAIObject {
public:
    OAIAttendancePeriodsResponse();
    OAIAttendancePeriodsResponse(QString json);
    ~OAIAttendancePeriodsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAttendancePeriodsResponse_allOf_data> getData() const;
    void setData(const QList<OAIAttendancePeriodsResponse_allOf_data> &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    bool isSuccess() const;
    void setSuccess(const bool &success);
    bool is_success_Set() const;
    bool is_success_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    qint32 getOffset() const;
    void setOffset(const qint32 &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAttendancePeriodsResponse_allOf_data> m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    bool m_success;
    bool m_success_isSet;
    bool m_success_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    qint32 m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttendancePeriodsResponse)

#endif // OAIAttendancePeriodsResponse_H
