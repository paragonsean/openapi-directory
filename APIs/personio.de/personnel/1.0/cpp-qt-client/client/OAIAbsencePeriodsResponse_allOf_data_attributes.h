/**
 * Personnel Data
 * API for reading and writing personnel data incl. data about attendances and absences
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAbsencePeriodsResponse_allOf_data_attributes.h
 *
 * 
 */

#ifndef OAIAbsencePeriodsResponse_allOf_data_attributes_H
#define OAIAbsencePeriodsResponse_allOf_data_attributes_H

#include <QJsonObject>

#include "OAIAbsencePeriodsResponse_allOf_data_certificate.h"
#include "OAIAbsencePeriodsResponse_allOf_data_employee.h"
#include "OAIAbsencePeriodsResponse_allOf_data_time_off_type.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAbsencePeriodsResponse_allOf_data_certificate;
class OAIAbsencePeriodsResponse_allOf_data_employee;
class OAIAbsencePeriodsResponse_allOf_data_time_off_type;

class OAIAbsencePeriodsResponse_allOf_data_attributes : public OAIObject {
public:
    OAIAbsencePeriodsResponse_allOf_data_attributes();
    OAIAbsencePeriodsResponse_allOf_data_attributes(QString json);
    ~OAIAbsencePeriodsResponse_allOf_data_attributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAbsencePeriodsResponse_allOf_data_certificate getCertificate() const;
    void setCertificate(const OAIAbsencePeriodsResponse_allOf_data_certificate &certificate);
    bool is_certificate_Set() const;
    bool is_certificate_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    double getDaysCount() const;
    void setDaysCount(const double &days_count);
    bool is_days_count_Set() const;
    bool is_days_count_Valid() const;

    OAIAbsencePeriodsResponse_allOf_data_employee getEmployee() const;
    void setEmployee(const OAIAbsencePeriodsResponse_allOf_data_employee &employee);
    bool is_employee_Set() const;
    bool is_employee_Valid() const;

    QString getEndDate() const;
    void setEndDate(const QString &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    double getHalfDayEnd() const;
    void setHalfDayEnd(const double &half_day_end);
    bool is_half_day_end_Set() const;
    bool is_half_day_end_Valid() const;

    double getHalfDayStart() const;
    void setHalfDayStart(const double &half_day_start);
    bool is_half_day_start_Set() const;
    bool is_half_day_start_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getStartDate() const;
    void setStartDate(const QString &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIAbsencePeriodsResponse_allOf_data_time_off_type getTimeOffType() const;
    void setTimeOffType(const OAIAbsencePeriodsResponse_allOf_data_time_off_type &time_off_type);
    bool is_time_off_type_Set() const;
    bool is_time_off_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAbsencePeriodsResponse_allOf_data_certificate m_certificate;
    bool m_certificate_isSet;
    bool m_certificate_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    double m_days_count;
    bool m_days_count_isSet;
    bool m_days_count_isValid;

    OAIAbsencePeriodsResponse_allOf_data_employee m_employee;
    bool m_employee_isSet;
    bool m_employee_isValid;

    QString m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    double m_half_day_end;
    bool m_half_day_end_isSet;
    bool m_half_day_end_isValid;

    double m_half_day_start;
    bool m_half_day_start_isSet;
    bool m_half_day_start_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIAbsencePeriodsResponse_allOf_data_time_off_type m_time_off_type;
    bool m_time_off_type_isSet;
    bool m_time_off_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAbsencePeriodsResponse_allOf_data_attributes)

#endif // OAIAbsencePeriodsResponse_allOf_data_attributes_H
