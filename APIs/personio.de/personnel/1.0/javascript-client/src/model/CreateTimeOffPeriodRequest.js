/**
 * Personnel Data
 * API for reading and writing personnel data incl. data about attendances and absences
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateTimeOffPeriodRequest model module.
 * @module model/CreateTimeOffPeriodRequest
 * @version 1.0
 */
class CreateTimeOffPeriodRequest {
    /**
     * Constructs a new <code>CreateTimeOffPeriodRequest</code>.
     * @alias module:model/CreateTimeOffPeriodRequest
     * @param employeeId {Number} Employee identifier
     * @param endDate {Date} Absence end date as YYYY-MM-DD
     * @param halfDayEnd {Boolean} Weather the end date is a half-day off
     * @param halfDayStart {Boolean} Weather the start date is a half-day off
     * @param startDate {Date} Absence start date as YYYY-MM-DD
     * @param timeOffTypeId {Number} Time-off type identifier
     */
    constructor(employeeId, endDate, halfDayEnd, halfDayStart, startDate, timeOffTypeId) { 
        
        CreateTimeOffPeriodRequest.initialize(this, employeeId, endDate, halfDayEnd, halfDayStart, startDate, timeOffTypeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, employeeId, endDate, halfDayEnd, halfDayStart, startDate, timeOffTypeId) { 
        obj['employee_id'] = employeeId;
        obj['end_date'] = endDate;
        obj['half_day_end'] = halfDayEnd;
        obj['half_day_start'] = halfDayStart;
        obj['start_date'] = startDate;
        obj['time_off_type_id'] = timeOffTypeId;
    }

    /**
     * Constructs a <code>CreateTimeOffPeriodRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateTimeOffPeriodRequest} obj Optional instance to populate.
     * @return {module:model/CreateTimeOffPeriodRequest} The populated <code>CreateTimeOffPeriodRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateTimeOffPeriodRequest();

            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('employee_id')) {
                obj['employee_id'] = ApiClient.convertToType(data['employee_id'], 'Number');
            }
            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Date');
            }
            if (data.hasOwnProperty('half_day_end')) {
                obj['half_day_end'] = ApiClient.convertToType(data['half_day_end'], 'Boolean');
            }
            if (data.hasOwnProperty('half_day_start')) {
                obj['half_day_start'] = ApiClient.convertToType(data['half_day_start'], 'Boolean');
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Date');
            }
            if (data.hasOwnProperty('time_off_type_id')) {
                obj['time_off_type_id'] = ApiClient.convertToType(data['time_off_type_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateTimeOffPeriodRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateTimeOffPeriodRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateTimeOffPeriodRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }

        return true;
    }


}

CreateTimeOffPeriodRequest.RequiredProperties = ["employee_id", "end_date", "half_day_end", "half_day_start", "start_date", "time_off_type_id"];

/**
 * Optional comment
 * @member {String} comment
 */
CreateTimeOffPeriodRequest.prototype['comment'] = undefined;

/**
 * Employee identifier
 * @member {Number} employee_id
 */
CreateTimeOffPeriodRequest.prototype['employee_id'] = undefined;

/**
 * Absence end date as YYYY-MM-DD
 * @member {Date} end_date
 */
CreateTimeOffPeriodRequest.prototype['end_date'] = undefined;

/**
 * Weather the end date is a half-day off
 * @member {Boolean} half_day_end
 */
CreateTimeOffPeriodRequest.prototype['half_day_end'] = undefined;

/**
 * Weather the start date is a half-day off
 * @member {Boolean} half_day_start
 */
CreateTimeOffPeriodRequest.prototype['half_day_start'] = undefined;

/**
 * Absence start date as YYYY-MM-DD
 * @member {Date} start_date
 */
CreateTimeOffPeriodRequest.prototype['start_date'] = undefined;

/**
 * Time-off type identifier
 * @member {Number} time_off_type_id
 */
CreateTimeOffPeriodRequest.prototype['time_off_type_id'] = undefined;






export default CreateTimeOffPeriodRequest;

